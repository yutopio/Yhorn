MoCHi: Model Checker for Higher-Order Programs
  TRecS version: 1.30
  OCaml version: 4.00.1
  Command: ../mochi.opt -gchi fold_fun_list.ml

parsed::
 let rec make_list_1030 n_1031 =
   if n_1031 <= 0 then
     []
   else
     (fun m_1032 -> n_1031 + m_1032)::make_list_1030 (n_1031 - 1) 
 in
 let rec fold_right_1033 f_1034 xs_1035 init_1036 =
   (match xs_1035 with
      | [] -> init_1036
      | x_1037::xs'_1038 -> f_1034 x_1037 (fold_right_1033 f_1034 xs'_1038 init_1036)) 
 in
 let compose_1039 f_1040 g_1041 x_1042 = f_1040 (g_1041 x_1042) 
 in
 let main_1043 n_1044 =
   let xs_1045 = make_list_1030 n_1044 
   in
   let f_1046 = fold_right_1033 compose_1039 xs_1045 (fun x_1047 -> x_1047) 
   in
     if f_1046 0 >= 0 then
       ()
     else
       {fail} () 
 in
   ()

set_target::
 let rec make_list_1030 n_1031 =
   if n_1031 <= 0 then
     []
   else
     (fun m_1032 -> n_1031 + m_1032)::make_list_1030 (n_1031 - 1) 
 in
 let rec fold_right_1033 f_1034 xs_1035 init_1036 =
   (match xs_1035 with
      | [] -> init_1036
      | x_1037::xs'_1038 -> f_1034 x_1037 (fold_right_1033 f_1034 xs'_1038 init_1036)) 
 in
 let compose_1039 f_1040 g_1041 x_1042 = f_1040 (g_1041 x_1042) 
 in
 let main_1043 n_1044 =
   let xs_1045 = make_list_1030 n_1044 
   in
   let f_1046 = fold_right_1033 compose_1039 xs_1045 (fun x_1047 -> x_1047) 
   in
     if f_1046 0 >= 0 then
       ()
     else
       {fail} () 
 in
 let main_1141 = let arg1_1140 = rand_int () 
                 in
                   main_1043 arg1_1140 
 in
   ()

copy_poly::
 let rec make_list_1030 (n_1031:int) =
   if n_1031 <= 0 then
     []
   else
     (fun m_1032 -> n_1031 + m_1032)::make_list_1030 (n_1031 - 1) 
 in
 let rec fold_right_1143
   (f_1034:((int -> int) -> ((int -> int) -> (int -> int)))) (xs_1035:
   (int -> int) list) (init_1036:(int -> int)) =
   (match xs_1035 with
      | [] -> init_1036
      | x_1037::xs'_1038 -> f_1034 x_1037 (fold_right_1143 f_1034 xs'_1038 init_1036)) 
 in
 let compose_1142 (f_1040:(int -> int)) (g_1041:(int -> int)) (x_1042:int) = f_1040 (g_1041 x_1042) 
 in
 let main_1043 (n_1044:int) =
   let xs_1045 = make_list_1030 n_1044 
   in
   let f_1046 = fold_right_1143 compose_1142 xs_1045 (fun x_1047 -> x_1047) 
   in
     if f_1046 0 >= 0 then
       ()
     else
       {fail} () 
 in
 let main_1141 = let arg1_1140 = rand_int () 
                 in
                   main_1043 arg1_1140 
 in
   ()

abst_list::
 let rec make_list_1030 (n_1031:int) =
   if n_1031 <= 0 then
     (0, fun x_1165 -> _|_)
   else
     let cons_make_list_1161 (x_1158:(int -> int)) (xs_1159:(int * (int -> (int -> int)))) =
       (fst xs_1159 + 1, fun i_1157 -> (if i_1157 = 0 then
                                          x_1158
                                        else
                                          (snd xs_1159) (i_1157 - 1))) 
     in
       cons_make_list_1161 (fun m_1032 -> n_1031 + m_1032) (make_list_1030 (n_1031 - 1)) 
 in
 let rec fold_right_1143
   (f_1034:((int -> int) -> ((int -> int) -> (int -> int)))) (xs_1035:(
   int * (int -> (int -> int)))) (init_1036:(int -> int)) =
   if fst xs_1035 = 0 then
     init_1036
   else
     if 1 <= fst xs_1035 then
       let xs'_1038 = (fst xs_1035 - 1, fun x_1174 -> (snd xs_1035) (x_1174 + 1)) 
       in
       let x_1037 = (snd xs_1035) 0 
       in
         f_1034 x_1037 (fold_right_1143 f_1034 xs'_1038 init_1036)
     else
       _|_ 
 in
 let compose_1142 (f_1040:(int -> int)) (g_1041:(int -> int)) (x_1042:int) = f_1040 (g_1041 x_1042) 
 in
 let main_1043 (n_1044:int) =
   let xs_1045 = make_list_1030 n_1044 
   in
   let f_1046 = fold_right_1143 compose_1142 xs_1045 (fun x_1047 -> x_1047) 
   in
     if f_1046 0 >= 0 then
       ()
     else
       {fail} () 
 in
 let main_1141 = let arg1_1140 = rand_int () 
                 in
                   main_1043 arg1_1140 
 in
   ()

CPS::
 let rec make_list_1030
   (n_1031:int) (k_make_list_1254:((int * (int -> (((int -> ((int -> X) -> X)) -> X) -> X))) -> X)) =
   if n_1031 <= 0 then
     k_make_list_1254 (0, fun x_1165 -> fun k_make_list_1275 -> _|_)
   else
     let cons_make_list_1161
       (x_1158:(int -> ((int -> X) -> X))) (xs_1159:(int * (int -> (((int -> ((int -> X) -> X)) -> X) -> X)))) (k_make_list_cons_make_list_1364:(
       (int * (int -> (((int -> ((int -> X) -> X)) -> X) -> X))) -> X)) =
       k_make_list_cons_make_list_1364
         (fst xs_1159 + 1,
         fun i_1157 ->
           fun k_make_list_cons_make_list_1391 ->
             (if i_1157 = 0 then
                k_make_list_cons_make_list_1391 x_1158
              else
                (snd xs_1159) (i_1157 - 1) k_make_list_cons_make_list_1391)) 
     in
       make_list_1030 (n_1031 - 1)
         (fun x_1501 ->
            cons_make_list_1161 (fun m_1032 -> fun k_make_list_1442 -> k_make_list_1442 (n_1031 + m_1032)) x_1501
              k_make_list_1254) 
 in
 let rec fold_right_1143
   (f_1034:((int -> ((int -> X) -> X)) -> ((int -> ((int -> X) -> X)) -> (int -> ((int -> X) -> X))))) (xs_1035:(
   int * (int -> (((int -> ((int -> X) -> X)) -> X) -> X)))) (init_1036:(
   int -> ((int -> X) -> X))) (k_fold_right_1623:((int -> ((int -> X) -> X)) -> X)) =
   if fst xs_1035 = 0 then
     k_fold_right_1623 init_1036
   else
     if 1 <= fst xs_1035 then
       (snd xs_1035) 0
         (fun x_1718 ->
            fold_right_1143 f_1034
              (fst xs_1035 - 1,
              fun x_1174 -> fun k_fold_right_xs'_1689 -> (snd xs_1035) (x_1174 + 1) k_fold_right_xs'_1689) init_1036
              (fun x_1841 -> k_fold_right_1623 (f_1034 x_1718 x_1841)))
     else
       _|_ 
 in
 let compose_1142
   (f_1040:(int -> ((int -> X) -> X))) (g_1041:(int -> ((int -> X) -> X))) (x_1042:int) (k_compose_1904:(
   int -> X)) = g_1041 x_1042 (fun x_1924 -> f_1040 x_1924 k_compose_1904) 
 in
 let main_1043 (n_1044:int) (k_main_1938:(unit -> X)) =
   make_list_1030 n_1044
     (fun x_1947 ->
        fold_right_1143 compose_1142 x_1947 (fun x_1047 -> fun k_main_f_2046 -> k_main_f_2046 x_1047)
          (fun x_1993 ->
             x_1993 0 (fun x_2068 -> (if x_2068 >= 0 then
                                        k_main_1938 ()
                                      else
                                        {|fail|} () k_main_1938)))) 
 in
   rand_int_cps () (fun x_2096 -> main_1043 x_2096 (fun x_2093 -> end))

remove_pair::
 let rec make_list_1030
   (n_1031:int) (k_make_list_1254:(int -> ((int -> (((int -> ((int -> X) -> X)) -> X) -> X)) -> X))) =
   if n_1031 <= 0 then
     k_make_list_1254 0 (fun x_1165 -> fun k_make_list_1275 -> _|_)
   else
     let cons_make_list_1161
       (x_1158:(int -> ((int -> X) -> X))) (xs1_1159:int) (xs2_1159:(
       int -> (((int -> ((int -> X) -> X)) -> X) -> X))) (k_make_list_cons_make_list_1364:(
       int -> ((int -> (((int -> ((int -> X) -> X)) -> X) -> X)) -> X))) =
       k_make_list_cons_make_list_1364 (xs1_1159 + 1)
         (fun i_1157 ->
            fun k_make_list_cons_make_list_1391 ->
              (if i_1157 = 0 then
                 k_make_list_cons_make_list_1391 x_1158
               else
                 xs2_1159 (i_1157 - 1) k_make_list_cons_make_list_1391)) 
     in
       make_list_1030 (n_1031 - 1)
         (fun x1_1501 ->
            fun x2_1501 ->
              cons_make_list_1161 (fun m_1032 -> fun k_make_list_1442 -> k_make_list_1442 (n_1031 + m_1032)) x1_1501
                x2_1501 k_make_list_1254) 
 in
 let rec fold_right_1143
   (f_1034:((int -> ((int -> X) -> X)) -> ((int -> ((int -> X) -> X)) -> (int -> ((int -> X) -> X))))) (xs1_1035:int) (xs2_1035:(
   int -> (((int -> ((int -> X) -> X)) -> X) -> X))) (init_1036:(int -> ((int -> X) -> X))) (k_fold_right_1623:(
   (int -> ((int -> X) -> X)) -> X)) =
   if xs1_1035 = 0 then
     k_fold_right_1623 init_1036
   else
     if 1 <= xs1_1035 then
       xs2_1035 0
         (fun x_1718 ->
            fold_right_1143 f_1034 (xs1_1035 - 1)
              (fun x_1174 -> fun k_fold_right_xs'_1689 -> xs2_1035 (x_1174 + 1) k_fold_right_xs'_1689) init_1036
              (fun x_1841 -> k_fold_right_1623 (f_1034 x_1718 x_1841)))
     else
       _|_ 
 in
 let compose_1142
   (f_1040:(int -> ((int -> X) -> X))) (g_1041:(int -> ((int -> X) -> X))) (x_1042:int) (k_compose_1904:(
   int -> X)) = g_1041 x_1042 (fun x_1924 -> f_1040 x_1924 k_compose_1904) 
 in
 let main_1043 (n_1044:int) (k_main_1938:(unit -> X)) =
   make_list_1030 n_1044
     (fun x1_1947 ->
        fun x2_1947 ->
          fold_right_1143 compose_1142 x1_1947 x2_1947 (fun x_1047 -> fun k_main_f_2046 -> k_main_f_2046 x_1047)
            (fun x_1993 ->
               x_1993 0 (fun x_2068 -> (if x_2068 >= 0 then
                                          k_main_1938 ()
                                        else
                                          {|fail|} () k_main_1938)))) 
 in
   rand_int_cps () (fun x_2096 -> main_1043 x_2096 (fun x_2093 -> end))

Program with abstraction types (CEGAR-cycle 0)::
Main: main_2152
  main_2152 -> (rand_int f_2165)
  br_fold_right_2167 b_2168 f_1034 xs1_1035 xs2_1035 init_1036 k_fold_right_1623 when b_2168 ->
      (xs2_1035 0 (f_fold_right_2157 xs1_1035 f_1034 init_1036 k_fold_right_1623 xs2_1035))
  br_fold_right_2167 b_2168 f_1034 xs1_1035 xs2_1035 init_1036 k_fold_right_1623 when (not b_2168) -> _|_
  compose_1142 f_1040 g_1041 x_1042 k_compose_1904 -> (g_1041 x_1042 (f_compose_2160 x_1042 f_1040 k_compose_1904))
  cons_make_list_1161 n_1031 x_1158 xs1_1159 xs2_1159 k_make_list_cons_make_list_1364 ->
      (k_make_list_cons_make_list_1364 (xs1_1159 + 1) (f_cons_make_list_2154 n_1031 xs1_1159 x_1158 xs2_1159))
  f_2165 x_2096 -> (main_1043 x_2096 (f_2166 x_2096))
  f_2166 x_2096 x_2093 -> end
  f_compose_2160 x_1042 f_1040 k_compose_1904 x_1924 -> (f_1040 x_1924 k_compose_1904)
  f_cons_make_list_2154 n_1031 xs1_1159 x_1158 xs2_1159 i_1157 k_make_list_cons_make_list_1391 when (
      i_1157 = 0) -> (k_make_list_cons_make_list_1391 x_1158)
  f_cons_make_list_2154 n_1031 xs1_1159 x_1158 xs2_1159 i_1157 k_make_list_cons_make_list_1391 when (
      not (i_1157 = 0)) -> (xs2_1159 (i_1157 - 1) k_make_list_cons_make_list_1391)
  f_fold_right_2157 xs1_1035 f_1034 init_1036 k_fold_right_1623 xs2_1035 x_1718 ->
      (fold_right_1143 f_1034 (xs1_1035 - 1) (f_fold_right_2158 xs1_1035 xs2_1035) init_1036
        (f_fold_right_2159 xs1_1035 f_1034 k_fold_right_1623 x_1718))
  f_fold_right_2158 xs1_1035 xs2_1035 x_1174 k_fold_right_xs'_1689 -> (xs2_1035 (x_1174 + 1) k_fold_right_xs'_1689)
  f_fold_right_2159 xs1_1035 f_1034 k_fold_right_1623 x_1718 x_1841 -> (k_fold_right_1623 (f_1034 x_1718 x_1841))
  f_main_2161 n_1044 k_main_1938 x1_1947 x2_1947 ->
      (fold_right_1143 compose_1142 x1_1947 x2_1947 (f_main_2162 n_1044 x1_1947)
        (f_main_2163 n_1044 x1_1947 k_main_1938))
  f_main_2162 n_1044 x1_1947 x_1047 k_main_f_2046 -> (k_main_f_2046 x_1047)
  f_main_2163 n_1044 x1_1947 k_main_1938 x_1993 -> (x_1993 0 (f_main_2164 n_1044 x1_1947 k_main_1938))
  f_main_2164 n_1044 x1_1947 k_main_1938 x_2068 when (x_2068 >= 0) -> (k_main_1938 ())
  f_main_2164 n_1044 x1_1947 k_main_1938 x_2068 when (not (x_2068 >= 0)) -> (fail_2169 true k_main_1938)
  f_make_list_2153 n_1031 x_1165 k_make_list_1275 -> _|_
  f_make_list_2155 n_1031 k_make_list_1254 x1_1501 x2_1501 ->
      (cons_make_list_1161 n_1031 (f_make_list_2156 n_1031 x1_1501) x1_1501 x2_1501 k_make_list_1254)
  f_make_list_2156 n_1031 x1_1501 m_1032 k_make_list_1442 -> (k_make_list_1442 (n_1031 + m_1032))
  fail_2169 b k -> {fail} => (k ())
  fold_right_1143 f_1034 xs1_1035 xs2_1035 init_1036 k_fold_right_1623 when (
      xs1_1035 = 0) -> (k_fold_right_1623 init_1036)
  fold_right_1143 f_1034 xs1_1035 xs2_1035 init_1036 k_fold_right_1623 when (
      not (xs1_1035 = 0)) -> (br_fold_right_2167 (1 <= xs1_1035) f_1034 xs1_1035 xs2_1035 init_1036 k_fold_right_1623)
  main_1043 n_1044 k_main_1938 -> (make_list_1030 n_1044 (f_main_2161 n_1044 k_main_1938))
  make_list_1030 n_1031 k_make_list_1254 when (n_1031 <= 0) -> (k_make_list_1254 0 (f_make_list_2153 n_1031))
  make_list_1030 n_1031 k_make_list_1254 when (not (n_1031 <= 0)) ->
      (make_list_1030 (n_1031 - 1) (f_make_list_2155 n_1031 k_make_list_1254))
Types:
  main_2152 : X
  fail_2169 : (x_1:bool[x_1] -> (unit -> X) -> X)
  fold_right_1143 : (((int -> (int -> X) -> X) -> (int -> (int -> X) -> X) -> int -> (int -> X) -> X) ->
                     int ->
                     (int -> ((int -> (int -> X) -> X) -> X) -> X) ->
                     (int -> (int -> X) -> X) -> ((int -> (int -> X) -> X) -> X) -> X)
  make_list_1030 : (int -> (int -> (int -> ((int -> (int -> X) -> X) -> X) -> X) -> X) -> X)
  
(0-1) Abstracting ... DONE!

(0-2) Checking HORS ... DONE!

Error trace::
  main_2152 ... --> 
  f_2165 ... --> 
  main_1043 ... --> 
  make_list_1030 [1/2] ... --> 
  f_main_2161 ... --> 
  fold_right_1143 [1/2] ... --> 
  f_main_2163 ... --> 
  f_main_2162 ... --> 
  f_main_2164 [2/2] ... --> 
  fail_2169 ... --> fail -->
  ERROR!

Spurious counter-example::
  0; 0; 0; 0; 0; 0; 0; 0; 1; 0

(0-3) Checking counter-example ... DONE!

(0-4) Discovering predicates ... 
begin AbsTypeInfer.refine(188)[1]
  program:
    main_2152  | true = ((Random.int 0) f_2165)
    br_fold_right_2167 b_2168 f_1034 xs1_1035 xs2_1035 init_1036 k_fold_right_1623 | b_2168 = (
    xs2_1035 0
             (f_fold_right_2157 xs1_1035
                                f_1034
                                init_1036
                                k_fold_right_1623
                                xs2_1035))
    br_fold_right_2167 b_2168 f_1034 xs1_1035 xs2_1035 init_1036 k_fold_right_1623 | (
    not b_2168) = bot
    compose_1142 f_1040 g_1041 x_1042 k_compose_1904 | true = (g_1041
                                                                 x_1042
                                                                 (f_compose_2160 x_1042
                                                                    f_1040
                                                                    k_compose_1904))
    cons_make_list_1161 n_1031 x_1158 xs1_1159 xs2_1159 k_make_list_cons_make_list_1364 | true = (
    k_make_list_cons_make_list_1364 (xs1_1159 + 1)
                                    (f_cons_make_list_2154 n_1031
                                                           xs1_1159
                                                           x_1158
                                                           xs2_1159))
    f_2165 x_2096 | true = (main_1043 x_2096
                                      (f_2166 x_2096))
    f_2166 x_2096 x_2093 | true = end
    f_compose_2160 x_1042 f_1040 k_compose_1904 x_1924 | true = (f_1040 x_1924
                                                                    k_compose_1904)
    f_cons_make_list_2154 n_1031 xs1_1159 x_1158 xs2_1159 i_1157 k_make_list_cons_make_list_1391 | (
    i_1157 = 0) = (k_make_list_cons_make_list_1391 x_1158)
    f_cons_make_list_2154 n_1031 xs1_1159 x_1158 xs2_1159 i_1157 k_make_list_cons_make_list_1391 | (
    not (i_1157 = 0)) = (xs2_1159 (i_1157 - 1)
                                  k_make_list_cons_make_list_1391)
    f_fold_right_2157 xs1_1035 f_1034 init_1036 k_fold_right_1623 xs2_1035 x_1718 | true = (
    fold_right_1143
      f_1034
      (xs1_1035 - 1)
      (f_fold_right_2158 xs1_1035
                         xs2_1035)
      init_1036
      (f_fold_right_2159 xs1_1035
                         f_1034
                         k_fold_right_1623
                         x_1718))
    f_fold_right_2158 xs1_1035 xs2_1035 x_1174 k_fold_right_xs'_1689 | true = (
    xs2_1035 (x_1174 + 1)
             k_fold_right_xs'_1689)
    f_fold_right_2159 xs1_1035 f_1034 k_fold_right_1623 x_1718 x_1841 | true = (
    k_fold_right_1623 (f_1034 x_1718
                              x_1841))
    f_main_2161 n_1044 k_main_1938 x1_1947 x2_1947 | true = (fold_right_1143
                                                               compose_1142
                                                               x1_1947
                                                               x2_1947
                                                               (f_main_2162 n_1044
                                                                    x1_1947)
                                                               (f_main_2163 n_1044
                                                                    x1_1947
                                                                    k_main_1938))
    f_main_2162 n_1044 x1_1947 x_1047 k_main_f_2046 | true = (k_main_f_2046 x_1047)
    f_main_2163 n_1044 x1_1947 k_main_1938 x_1993 | true = (x_1993 0
                                                                   (f_main_2164 n_1044
                                                                    x1_1947
                                                                    k_main_1938))
    f_main_2164 n_1044 x1_1947 k_main_1938 x_2068 | (x_2068 >= 0) = (
    k_main_1938 ())
    f_main_2164 n_1044 x1_1947 k_main_1938 x_2068 | (not (x_2068 >= 0)) = (
    fail_2169 true
              k_main_1938)
    f_make_list_2153 n_1031 x_1165 k_make_list_1275 | true = bot
    f_make_list_2155 n_1031 k_make_list_1254 x1_1501 x2_1501 | true = (
    cons_make_list_1161 n_1031
                        (f_make_list_2156 n_1031
                                          x1_1501)
                        x1_1501
                        x2_1501
                        k_make_list_1254)
    f_make_list_2156 n_1031 x1_1501 m_1032 k_make_list_1442 | true = (
    k_make_list_1442 (n_1031 + m_1032))
    fail_2169 b k | true = (fail ())
    fold_right_1143 f_1034 xs1_1035 xs2_1035 init_1036 k_fold_right_1623 | (
    xs1_1035 = 0) = (k_fold_right_1623 init_1036)
    fold_right_1143 f_1034 xs1_1035 xs2_1035 init_1036 k_fold_right_1623 | (
    not (xs1_1035 = 0)) = (br_fold_right_2167 (1 <= xs1_1035)
                                              f_1034
                                              xs1_1035
                                              xs2_1035
                                              init_1036
                                              k_fold_right_1623)
    main_1043 n_1044 k_main_1938 | true = (make_list_1030 n_1044
                                                          (f_main_2161 n_1044
                                                                    k_main_1938))
    make_list_1030 n_1031 k_make_list_1254 | (n_1031 <= 0) = (k_make_list_1254 0
                                                                    (f_make_list_2153 n_1031))
    make_list_1030 n_1031 k_make_list_1254 | (not (n_1031 <= 0)) = (make_list_1030
                                                                    (
                                                                    n_1031 - 1)
                                                                    (
                                                                    f_make_list_2155 n_1031
                                                                    k_make_list_1254))
    main_2152:X
    br_fold_right_2167:bool ->
                       ((int -> (int -> X) -> X) -> (int -> (int -> X) -> X) -> int -> (int -> X) -> X) ->
                       int ->
                       (int -> ((int -> (int -> X) -> X) -> X) -> X) ->
                       (int -> (int -> X) -> X) -> ((int -> (int -> X) -> X) -> X) -> X
    compose_1142:(int -> (int -> X) -> X) -> (int -> (int -> X) -> X) -> int -> (int -> X) -> X
    cons_make_list_1161:int ->
                        (int -> (int -> X) -> X) ->
                        int ->
                        (int -> ((int -> (int -> X) -> X) -> X) -> X) ->
                        (int -> (int -> ((int -> (int -> X) -> X) -> X) -> X) -> X) -> X
    f_2165:int -> X
    f_2166:int -> unit -> X
    f_compose_2160:int -> (int -> (int -> X) -> X) -> (int -> X) -> int -> X
    f_cons_make_list_2154:int ->
                          int ->
                          (int -> (int -> X) -> X) ->
                          (int -> ((int -> (int -> X) -> X) -> X) -> X) -> int -> ((int -> (int -> X) -> X) -> X) -> X
    f_fold_right_2157:int ->
                      ((int -> (int -> X) -> X) -> (int -> (int -> X) -> X) -> int -> (int -> X) -> X) ->
                      (int -> (int -> X) -> X) ->
                      ((int -> (int -> X) -> X) -> X) ->
                      (int -> ((int -> (int -> X) -> X) -> X) -> X) -> (int -> (int -> X) -> X) -> X
    f_fold_right_2158:int ->
                      (int -> ((int -> (int -> X) -> X) -> X) -> X) -> int -> ((int -> (int -> X) -> X) -> X) -> X
    f_fold_right_2159:int ->
                      ((int -> (int -> X) -> X) -> (int -> (int -> X) -> X) -> int -> (int -> X) -> X) ->
                      ((int -> (int -> X) -> X) -> X) -> (int -> (int -> X) -> X) -> (int -> (int -> X) -> X) -> X
    f_main_2161:int -> (unit -> X) -> int -> (int -> ((int -> (int -> X) -> X) -> X) -> X) -> X
    f_main_2162:int -> int -> int -> (int -> X) -> X
    f_main_2163:int -> int -> (unit -> X) -> (int -> (int -> X) -> X) -> X
    f_main_2164:int -> int -> (unit -> X) -> int -> X
    f_make_list_2153:int -> int -> ((int -> (int -> X) -> X) -> X) -> X
    f_make_list_2155:int ->
                     (int -> (int -> ((int -> (int -> X) -> X) -> X) -> X) -> X) ->
                     int -> (int -> ((int -> (int -> X) -> X) -> X) -> X) -> X
    f_make_list_2156:int -> int -> int -> (int -> X) -> X
    fail_2169:bool -> (unit -> X) -> X
    fold_right_1143:((int -> (int -> X) -> X) -> (int -> (int -> X) -> X) -> int -> (int -> X) -> X) ->
                    int ->
                    (int -> ((int -> (int -> X) -> X) -> X) -> X) ->
                    (int -> (int -> X) -> X) -> ((int -> (int -> X) -> X) -> X) -> X
    main_1043:int -> (unit -> X) -> X
    make_list_1030:int -> (int -> (int -> ((int -> (int -> X) -> X) -> X) -> X) -> X) -> X
  inlined functions: br_fold_right_2167,compose_1142,cons_make_list_1161,f_2165,f_2166,f_compose_2160,f_cons_make_list_2154,f_fold_right_2157,f_fold_right_2158,f_fold_right_2159,f_main_2161,f_main_2162,f_main_2163,f_main_2164,f_make_list_2153,f_make_list_2155,f_make_list_2156,main_1043
  counterexample: 0:0:0:0:0:0:0:0:1:0
  error traces:
    [true.nop(<f_2165@4:0> = var2)
     [true.(<main_1043@6:0> = <f_2165@4:0>)
      [true.(<make_list_1030@8:0> = <main_1043@6:0>)
       [(<make_list_1030@8:0> <= 0).(<<make_list_1030@8:1>@11:0> = 0)
        [true.((<f_main_2161@13:0> = <main_1043@6:0>) && (<f_main_2161@13:2> = <<make_list_1030@8:1>@11:0>))
         [true.(<fold_right_1143@15:1> = <f_main_2161@13:2>)
          [(<fold_right_1143@15:1> = 0).true
           [true.((<f_main_2163@20:0> = <f_main_2161@13:0>) && (<f_main_2163@20:1> = <f_main_2161@13:2>))
            [true.(<<f_main_2163@20:3>@22:0> = 0)
             [true.(<<<fold_right_1143@15:4>@18:0>@24:0> = <<f_main_2163@20:3>@22:0>)
              [true.(<<fold_right_1143@15:3>@26:0> = <<<fold_right_1143@15:4>@18:0>@24:0>)
               [true.
                ((<f_main_2162@28:0> = <f_main_2161@13:0>) &&
                 ((<f_main_2162@28:1> = <f_main_2161@13:2>) && (<f_main_2162@28:2> = <<fold_right_1143@15:3>@26:0>)))
                [true.(<<f_main_2162@28:3>@30:0> = <f_main_2162@28:2>)
                 [true.(<<<fold_right_1143@15:3>@26:1>@32:0> = <<f_main_2162@28:3>@30:0>)
                  [true.(<<<<fold_right_1143@15:4>@18:0>@24:1>@34:0> = <<<fold_right_1143@15:3>@26:1>@32:0>)
                   [true.(<<<f_main_2163@20:3>@22:1>@36:0> = <<<<fold_right_1143@15:4>@18:0>@24:1>@34:0>)
                    [true.
                     ((<f_main_2164@38:0> = <f_main_2163@20:0>) &&
                      ((<f_main_2164@38:1> = <f_main_2163@20:1>) &&
                       (<f_main_2164@38:3> = <<<f_main_2163@20:3>@22:1>@36:0>)))
                     [(not (<f_main_2164@38:3> >= 0)).(<fail_2169@41:0> = true)[true.error
  begin RefTypeInfer.infer_etrs(189)[2]
    horn clauses:
      P[<fail_2169@41:0>](<fail_2169@41:0>:bool)|- bot
      
      P[<f_main_2164@38:3>](<f_main_2164@38:0>:int,<f_main_2164@38:1>:int,<f_main_2164@38:3>:int),
      ((<f_main_2164@38:3> < 0) && <fail_2169@41:0>) |- P[<fail_2169@41:0>](
      <fail_2169@41:0>:bool)
      
      P[<f_main_2163@20:1>](<f_main_2164@38:0>:int,<f_main_2164@38:1>:int),
      P[<<<f_main_2163@20:3>@22:1>@36:0>](<f_main_2164@38:0>:int,<f_main_2164@38:1>:int,0:int,<f_main_2164@38:3>:int)|- P[<f_main_2164@38:3>](
      <f_main_2164@38:0>:int,<f_main_2164@38:1>:int,<f_main_2164@38:3>:int)
      
      P[<f_main_2161@13:2>](<f_main_2163@20:0>:int,<f_main_2163@20:1>:int),
      P[<<<<fold_right_1143@15:4>@18:0>@24:1>@34:0>](<f_main_2163@20:1>:int,<<f_main_2163@20:3>@22:0>:int,<<<f_main_2163@20:3>@22:1>@36:0>:int),
      P[<f_main_2163@20:1>](<f_main_2163@20:0>:int,<f_main_2163@20:1>:int)|- P[<<<f_main_2163@20:3>@22:1>@36:0>](
      <f_main_2163@20:0>:int,<f_main_2163@20:1>:int,<<f_main_2163@20:3>@22:0>:int,
      <<<f_main_2163@20:3>@22:1>@36:0>:int)
      
      P[<fold_right_1143@15:1>](<fold_right_1143@15:1>:int),
      P[<<<fold_right_1143@15:3>@26:1>@32:0>](<fold_right_1143@15:1>:int,<<<fold_right_1143@15:4>@18:0>@24:0>:int,<<<<fold_right_1143@15:4>@18:0>@24:1>@34:0>:int),
      (<fold_right_1143@15:1> = 0)
      |- P[<<<<fold_right_1143@15:4>@18:0>@24:1>@34:0>](<fold_right_1143@15:1>:int,
                                                        <<<fold_right_1143@15:4>@18:0>@24:0>:int,
                                                        <<<<fold_right_1143@15:4>@18:0>@24:1>@34:0>:int)
      
      P[<f_main_2161@13:2>](<f_main_2163@20:0>:int,<fold_right_1143@15:1>:int),
      P[<<f_main_2162@28:3>@30:0>](<f_main_2163@20:0>:int,<fold_right_1143@15:1>:int,<<fold_right_1143@15:3>@26:0>:int,<<<fold_right_1143@15:3>@26:1>@32:0>:int),
      P[<fold_right_1143@15:1>](<fold_right_1143@15:1>:int)|- P[<<<fold_right_1143@15:3>@26:1>@32:0>](
      <fold_right_1143@15:1>:int,<<fold_right_1143@15:3>@26:0>:int,<<<fold_right_1143@15:3>@26:1>@32:0>:int)
      
      P[<f_main_2162@28:2>](<f_main_2162@28:0>:int,<f_main_2162@28:1>:int,<f_main_2162@28:2>:int),
      (<<f_main_2162@28:3>@30:0> = <f_main_2162@28:2>)
      |- P[<<f_main_2162@28:3>@30:0>](<f_main_2162@28:0>:int,<f_main_2162@28:1>:int,
                                      <f_main_2162@28:2>:int,<<f_main_2162@28:3>@30:0>:int)
      
      P[<f_main_2161@13:2>](<f_main_2162@28:0>:int,<f_main_2162@28:1>:int),
      P[<<fold_right_1143@15:3>@26:0>](<f_main_2162@28:1>:int,<f_main_2162@28:2>:int)|- P[<f_main_2162@28:2>](
      <f_main_2162@28:0>:int,<f_main_2162@28:1>:int,<f_main_2162@28:2>:int)
      
      P[<fold_right_1143@15:1>](<fold_right_1143@15:1>:int),
      P[<<<fold_right_1143@15:4>@18:0>@24:0>](<fold_right_1143@15:1>:int,<<fold_right_1143@15:3>@26:0>:int),
      (<fold_right_1143@15:1> = 0)
      |- P[<<fold_right_1143@15:3>@26:0>](<fold_right_1143@15:1>:int,
                                          <<fold_right_1143@15:3>@26:0>:int)
      
      P[<f_main_2161@13:2>](<f_main_2163@20:0>:int,<fold_right_1143@15:1>:int),
      P[<<f_main_2163@20:3>@22:0>](<f_main_2163@20:0>:int,<fold_right_1143@15:1>:int,<<<fold_right_1143@15:4>@18:0>@24:0>:int),
      P[<fold_right_1143@15:1>](<fold_right_1143@15:1>:int)|- P[<<<fold_right_1143@15:4>@18:0>@24:0>](
      <fold_right_1143@15:1>:int,<<<fold_right_1143@15:4>@18:0>@24:0>:int)
      
      P[<f_main_2163@20:1>](<f_main_2163@20:0>:int,<f_main_2163@20:1>:int), (
      <<f_main_2163@20:3>@22:0> = 0)
      |- P[<<f_main_2163@20:3>@22:0>](<f_main_2163@20:0>:int,<f_main_2163@20:1>:int,
                                      <<f_main_2163@20:3>@22:0>:int)
      
      P[<f_main_2161@13:2>](<f_main_2163@20:0>:int,<f_main_2163@20:1>:int)|- P[<f_main_2163@20:1>](
      <f_main_2163@20:0>:int,<f_main_2163@20:1>:int)
      
      P[<f_main_2161@13:2>](<f_main_2161@13:0>:int,<fold_right_1143@15:1>:int)|- P[<fold_right_1143@15:1>](
      <fold_right_1143@15:1>:int)
      
      P[<main_1043@6:0>](<f_main_2161@13:0>:int),
      P[<<make_list_1030@8:1>@11:0>](<f_main_2161@13:0>:int,<f_main_2161@13:2>:int)|- P[<f_main_2161@13:2>](
      <f_main_2161@13:0>:int,<f_main_2161@13:2>:int)
      
      P[<make_list_1030@8:0>](<make_list_1030@8:0>:int),
      ((<<make_list_1030@8:1>@11:0> = 0) && (<make_list_1030@8:0> <= 0))
      |- P[<<make_list_1030@8:1>@11:0>](<make_list_1030@8:0>:int,<<make_list_1030@8:1>@11:0>:int)
      
      P[<main_1043@6:0>](<make_list_1030@8:0>:int)|- P[<make_list_1030@8:0>](<make_list_1030@8:0>:int)
      
      P[<f_2165@4:0>](<main_1043@6:0>:int)|- P[<main_1043@6:0>](<main_1043@6:0>:int)
      
      |- P[<f_2165@4:0>](<f_2165@4:0>:int)
    call trees:
      <main_2152@1>
        <f_2165@4>
          <main_1043@6>
            <make_list_1030@8>
            </<make_list_1030@8:1>@11>
            <f_main_2161@13>
              <fold_right_1143@15>
              </<fold_right_1143@15:4>@18>
              <f_main_2163@20>
              </<f_main_2163@20:3>@22>
              <<<fold_right_1143@15:4>@18:0>@24>
              </<fold_right_1143@15:3>@26>
              <f_main_2162@28>
              </<f_main_2162@28:3>@30>
              <<<fold_right_1143@15:3>@26:1>@32>
              </<<<fold_right_1143@15:4>@18:0>@24:1>@34>
              <<<f_main_2163@20:3>@22:1>@36>
                <f_main_2164@38>
                  <fail_2169@41>
    inlined horn clauses:
      P[<fail_2169@41:0>](<fail_2169@41:0>:bool)|- bot
      
      P[<<<<fold_right_1143@15:4>@18:0>@24:1>@34:0>](<f_main_2164@38:1>:int,0:int,<f_main_2164@38:3>:int),
      P[<<make_list_1030@8:1>@11:0>](<f_main_2164@38:0>:int,<f_main_2164@38:1>:int),
      ((<f_main_2164@38:3> < 0) && <fail_2169@41:0>) |- P[<fail_2169@41:0>](
      <fail_2169@41:0>:bool)
      
      P[<fold_right_1143@15:1>](<fold_right_1143@15:1>:int),
      P[<<<fold_right_1143@15:3>@26:1>@32:0>](<fold_right_1143@15:1>:int,<<<fold_right_1143@15:4>@18:0>@24:0>:int,<<<<fold_right_1143@15:4>@18:0>@24:1>@34:0>:int),
      (<fold_right_1143@15:1> = 0)
      |- P[<<<<fold_right_1143@15:4>@18:0>@24:1>@34:0>](<fold_right_1143@15:1>:int,
                                                        <<<fold_right_1143@15:4>@18:0>@24:0>:int,
                                                        <<<<fold_right_1143@15:4>@18:0>@24:1>@34:0>:int)
      
      P[<<make_list_1030@8:1>@11:0>](<f_main_2163@20:0>:int,<fold_right_1143@15:1>:int),
      P[<<fold_right_1143@15:3>@26:0>](<fold_right_1143@15:1>:int,<<fold_right_1143@15:3>@26:0>:int),
      P[<fold_right_1143@15:1>](<fold_right_1143@15:1>:int),
      (<<<fold_right_1143@15:3>@26:1>@32:0> = <<fold_right_1143@15:3>@26:0>)
      |- P[<<<fold_right_1143@15:3>@26:1>@32:0>](<fold_right_1143@15:1>:int,
                                                 <<fold_right_1143@15:3>@26:0>:int,
                                                 <<<fold_right_1143@15:3>@26:1>@32:0>:int)
      
      P[<fold_right_1143@15:1>](<fold_right_1143@15:1>:int),
      P[<<<fold_right_1143@15:4>@18:0>@24:0>](<fold_right_1143@15:1>:int,<<fold_right_1143@15:3>@26:0>:int),
      (<fold_right_1143@15:1> = 0)
      |- P[<<fold_right_1143@15:3>@26:0>](<fold_right_1143@15:1>:int,
                                          <<fold_right_1143@15:3>@26:0>:int)
      
      P[<<make_list_1030@8:1>@11:0>](<f_main_2163@20:0>:int,<fold_right_1143@15:1>:int),
      P[<fold_right_1143@15:1>](<fold_right_1143@15:1>:int), (<<<fold_right_1143@15:4>@18:0>@24:0> = 0)
      |- P[<<<fold_right_1143@15:4>@18:0>@24:0>](<fold_right_1143@15:1>:int,
                                                 <<<fold_right_1143@15:4>@18:0>@24:0>:int)
      
      P[<<make_list_1030@8:1>@11:0>](<f_main_2161@13:0>:int,<fold_right_1143@15:1>:int)|- P[<fold_right_1143@15:1>](
      <fold_right_1143@15:1>:int)
      
      P[<make_list_1030@8:0>](<make_list_1030@8:0>:int),
      ((<<make_list_1030@8:1>@11:0> = 0) && (<make_list_1030@8:0> <= 0))
      |- P[<<make_list_1030@8:1>@11:0>](<make_list_1030@8:0>:int,<<make_list_1030@8:1>@11:0>:int)
      
      |- P[<make_list_1030@8:0>](<make_list_1030@8:0>:int)
    begin ParamSubstInfer.infer(1818)[3]
      
    end ParamSubstInfer.infer(1818)[3] (0.017997 sec.)
    inferred extra parameters:
      
    begin RefTypeInfer.elim_coeffs(1820)[3]
      
    end RefTypeInfer.elim_coeffs(1820)[3] (0.000000 sec.)
    begin GenHcSolver.solve(2084)[3]
      Horn clauses:
        P[<fail_2169@41:0>](<fail_2169@41:0>:bool)|- bot
        
        P[<<<<fold_right_1143@15:4>@18:0>@24:1>@34:0>](<f_main_2164@38:1>:int,0:int,<f_main_2164@38:3>:int),
        P[<<make_list_1030@8:1>@11:0>](<f_main_2164@38:0>:int,<f_main_2164@38:1>:int),
        ((<f_main_2164@38:3> < 0) && <fail_2169@41:0>) |- P[<fail_2169@41:0>](
        <fail_2169@41:0>:bool)
        
        P[<fold_right_1143@15:1>](<fold_right_1143@15:1>:int),
        P[<<<fold_right_1143@15:3>@26:1>@32:0>](<fold_right_1143@15:1>:int,<<<fold_right_1143@15:4>@18:0>@24:0>:int,<<<<fold_right_1143@15:4>@18:0>@24:1>@34:0>:int),
        (<fold_right_1143@15:1> = 0)
        |- P[<<<<fold_right_1143@15:4>@18:0>@24:1>@34:0>](<fold_right_1143@15:1>:int,
                                                          <<<fold_right_1143@15:4>@18:0>@24:0>:int,
                                                          <<<<fold_right_1143@15:4>@18:0>@24:1>@34:0>:int)
        
        P[<<make_list_1030@8:1>@11:0>](<f_main_2163@20:0>:int,<fold_right_1143@15:1>:int),
        P[<<fold_right_1143@15:3>@26:0>](<fold_right_1143@15:1>:int,<<fold_right_1143@15:3>@26:0>:int),
        P[<fold_right_1143@15:1>](<fold_right_1143@15:1>:int),
        (<<<fold_right_1143@15:3>@26:1>@32:0> = <<fold_right_1143@15:3>@26:0>)
        |- P[<<<fold_right_1143@15:3>@26:1>@32:0>](<fold_right_1143@15:1>:int,
                                                   <<fold_right_1143@15:3>@26:0>:int,
                                                   <<<fold_right_1143@15:3>@26:1>@32:0>:int)
        
        P[<fold_right_1143@15:1>](<fold_right_1143@15:1>:int),
        P[<<<fold_right_1143@15:4>@18:0>@24:0>](<fold_right_1143@15:1>:int,<<fold_right_1143@15:3>@26:0>:int),
        (<fold_right_1143@15:1> = 0)
        |- P[<<fold_right_1143@15:3>@26:0>](<fold_right_1143@15:1>:int,
                                            <<fold_right_1143@15:3>@26:0>:int)
        
        P[<<make_list_1030@8:1>@11:0>](<f_main_2163@20:0>:int,<fold_right_1143@15:1>:int),
        P[<fold_right_1143@15:1>](<fold_right_1143@15:1>:int), (<<<fold_right_1143@15:4>@18:0>@24:0> = 0)
        |- P[<<<fold_right_1143@15:4>@18:0>@24:0>](<fold_right_1143@15:1>:int,
                                                   <<<fold_right_1143@15:4>@18:0>@24:0>:int)
        
        P[<<make_list_1030@8:1>@11:0>](<f_main_2161@13:0>:int,<fold_right_1143@15:1>:int)|- P[<fold_right_1143@15:1>](
        <fold_right_1143@15:1>:int)
        
        P[<make_list_1030@8:0>](<make_list_1030@8:0>:int),
        ((<<make_list_1030@8:1>@11:0> = 0) && (<make_list_1030@8:0> <= 0))
        |- P[<<make_list_1030@8:1>@11:0>](<make_list_1030@8:0>:int,<<make_list_1030@8:1>@11:0>:int)
        
        |- P[<make_list_1030@8:0>](<make_list_1030@8:0>:int)
      lower bounds:
        P[<make_list_1030@8:0>](<make_list_1030@8:0>:int) = true
        P[<<make_list_1030@8:1>@11:0>](<make_list_1030@8:0>:int,<<make_list_1030@8:1>@11:0>:int) =
        ((<<make_list_1030@8:1>@11:0> = 0) && (<make_list_1030@8:0> <= 0))
        P[<fold_right_1143@15:1>](<fold_right_1143@15:1>:int) = (<fold_right_1143@15:1> = 0)
        P[<<<fold_right_1143@15:4>@18:0>@24:0>](<fold_right_1143@15:1>:int,<<<fold_right_1143@15:4>@18:0>@24:0>:int) =
        ((<<<fold_right_1143@15:4>@18:0>@24:0> = 0) && (<fold_right_1143@15:1> = 0))
        P[<<fold_right_1143@15:3>@26:0>](<fold_right_1143@15:1>:int,<<fold_right_1143@15:3>@26:0>:int) =
        ((<<fold_right_1143@15:3>@26:0> = 0) && (<fold_right_1143@15:1> = 0))
        P[<<<fold_right_1143@15:3>@26:1>@32:0>](<fold_right_1143@15:1>:int,<<fold_right_1143@15:3>@26:0>:int,<<<fold_right_1143@15:3>@26:1>@32:0>:int) =
        ((<<fold_right_1143@15:3>@26:0> = 0) &&
         ((<fold_right_1143@15:1> = 0) && (<<<fold_right_1143@15:3>@26:1>@32:0> = <<fold_right_1143@15:3>@26:0>)))
        P[<<<<fold_right_1143@15:4>@18:0>@24:1>@34:0>](<fold_right_1143@15:1>:int,<<<fold_right_1143@15:4>@18:0>@24:0>:int,<<<<fold_right_1143@15:4>@18:0>@24:1>@34:0>:int) =
        ((<<<fold_right_1143@15:4>@18:0>@24:0> = 0) &&
         ((<fold_right_1143@15:1> = 0) &&
          (<<<<fold_right_1143@15:4>@18:0>@24:1>@34:0> = <<<fold_right_1143@15:4>@18:0>@24:0>)))
        P[<fail_2169@41:0>](<fail_2169@41:0>:bool) = false
      upper bounds:
        P[<fail_2169@41:0>](var4:bool) = true
      begin GenHcSolver.classify_pids(4529)[4]
        output:
          [<fail_2169@41:0>]
      end GenHcSolver.classify_pids(4529)[4] (0.000000 sec.)
      lb:false
      nub:false
      begin ApronInterface.convex_hull_interpolate(4532)[4]
        lb:false
        nub:false
        lb':false
        nub':false
        begin InterpProver.interpolate(4533)[5]
          begin InterpProver.interpolate_fresh(4534)[6]
            begin InterpProver.interpolate_log(4535)[7]
              input1: false
              input2: false
              begin InterpProver.interpolate_check(4536)[8]
                begin InterpProver.interpolate_simplify(4537)[9]
                  begin InterpProver.interpolate_quick(4550)[10]
                    
                  end InterpProver.interpolate_quick(4550)[10] (0.000000 sec.)
                  begin minimizing # of disjunctions(4554)[10]
                    input: false
                    output: false
                  end minimizing # of disjunctions(4554)[10] (0.000000 sec.)
                  
                end InterpProver.interpolate_simplify(4537)[9] (0.000000 sec.)
                
              end InterpProver.interpolate_check(4536)[8] (0.000000 sec.)
              output: false
            end InterpProver.interpolate_log(4535)[7] (0.000000 sec.)
            
          end InterpProver.interpolate_fresh(4534)[6] (0.000000 sec.)
          
        end InterpProver.interpolate(4533)[5] (0.000000 sec.)
        output:
          P[<fail_2169@41:0>](<fail_2169@41:0>:bool) = false
      end ApronInterface.convex_hull_interpolate(4532)[4] (0.000000 sec.)
      Horn clauses:
        P[<<<<fold_right_1143@15:4>@18:0>@24:1>@34:0>](<f_main_2164@38:1>:int,0:int,<f_main_2164@38:3>:int),
        P[<<make_list_1030@8:1>@11:0>](<f_main_2164@38:0>:int,<f_main_2164@38:1>:int), (
        <f_main_2164@38:3> < 0) |- bot
        
        P[<fold_right_1143@15:1>](<fold_right_1143@15:1>:int),
        P[<<<fold_right_1143@15:3>@26:1>@32:0>](<fold_right_1143@15:1>:int,<<<fold_right_1143@15:4>@18:0>@24:0>:int,<<<<fold_right_1143@15:4>@18:0>@24:1>@34:0>:int),
        (<fold_right_1143@15:1> = 0)
        |- P[<<<<fold_right_1143@15:4>@18:0>@24:1>@34:0>](<fold_right_1143@15:1>:int,
                                                          <<<fold_right_1143@15:4>@18:0>@24:0>:int,
                                                          <<<<fold_right_1143@15:4>@18:0>@24:1>@34:0>:int)
        
        P[<<make_list_1030@8:1>@11:0>](<f_main_2163@20:0>:int,<fold_right_1143@15:1>:int),
        P[<<fold_right_1143@15:3>@26:0>](<fold_right_1143@15:1>:int,<<fold_right_1143@15:3>@26:0>:int),
        P[<fold_right_1143@15:1>](<fold_right_1143@15:1>:int),
        (<<<fold_right_1143@15:3>@26:1>@32:0> = <<fold_right_1143@15:3>@26:0>)
        |- P[<<<fold_right_1143@15:3>@26:1>@32:0>](<fold_right_1143@15:1>:int,
                                                   <<fold_right_1143@15:3>@26:0>:int,
                                                   <<<fold_right_1143@15:3>@26:1>@32:0>:int)
        
        P[<fold_right_1143@15:1>](<fold_right_1143@15:1>:int),
        P[<<<fold_right_1143@15:4>@18:0>@24:0>](<fold_right_1143@15:1>:int,<<fold_right_1143@15:3>@26:0>:int),
        (<fold_right_1143@15:1> = 0)
        |- P[<<fold_right_1143@15:3>@26:0>](<fold_right_1143@15:1>:int,
                                            <<fold_right_1143@15:3>@26:0>:int)
        
        P[<<make_list_1030@8:1>@11:0>](<f_main_2163@20:0>:int,<fold_right_1143@15:1>:int),
        P[<fold_right_1143@15:1>](<fold_right_1143@15:1>:int), (<<<fold_right_1143@15:4>@18:0>@24:0> = 0)
        |- P[<<<fold_right_1143@15:4>@18:0>@24:0>](<fold_right_1143@15:1>:int,
                                                   <<<fold_right_1143@15:4>@18:0>@24:0>:int)
        
        P[<<make_list_1030@8:1>@11:0>](<f_main_2161@13:0>:int,<fold_right_1143@15:1>:int)|- P[<fold_right_1143@15:1>](
        <fold_right_1143@15:1>:int)
        
        P[<make_list_1030@8:0>](<make_list_1030@8:0>:int),
        ((<<make_list_1030@8:1>@11:0> = 0) && (<make_list_1030@8:0> <= 0))
        |- P[<<make_list_1030@8:1>@11:0>](<make_list_1030@8:0>:int,<<make_list_1030@8:1>@11:0>:int)
        
        |- P[<make_list_1030@8:0>](<make_list_1030@8:0>:int)
      lower bounds:
        P[<make_list_1030@8:0>](<make_list_1030@8:0>:int) = true
        P[<<make_list_1030@8:1>@11:0>](<make_list_1030@8:0>:int,<<make_list_1030@8:1>@11:0>:int) =
        ((<<make_list_1030@8:1>@11:0> = 0) && (<make_list_1030@8:0> <= 0))
        P[<fold_right_1143@15:1>](<fold_right_1143@15:1>:int) = (<fold_right_1143@15:1> = 0)
        P[<<<fold_right_1143@15:4>@18:0>@24:0>](<fold_right_1143@15:1>:int,<<<fold_right_1143@15:4>@18:0>@24:0>:int) =
        ((<<<fold_right_1143@15:4>@18:0>@24:0> = 0) && (<fold_right_1143@15:1> = 0))
        P[<<fold_right_1143@15:3>@26:0>](<fold_right_1143@15:1>:int,<<fold_right_1143@15:3>@26:0>:int) =
        ((<<fold_right_1143@15:3>@26:0> = 0) && (<fold_right_1143@15:1> = 0))
        P[<<<fold_right_1143@15:3>@26:1>@32:0>](<fold_right_1143@15:1>:int,<<fold_right_1143@15:3>@26:0>:int,<<<fold_right_1143@15:3>@26:1>@32:0>:int) =
        ((<<fold_right_1143@15:3>@26:0> = 0) &&
         ((<fold_right_1143@15:1> = 0) && (<<<fold_right_1143@15:3>@26:1>@32:0> = <<fold_right_1143@15:3>@26:0>)))
        P[<<<<fold_right_1143@15:4>@18:0>@24:1>@34:0>](<fold_right_1143@15:1>:int,<<<fold_right_1143@15:4>@18:0>@24:0>:int,<<<<fold_right_1143@15:4>@18:0>@24:1>@34:0>:int) =
        ((<<<fold_right_1143@15:4>@18:0>@24:0> = 0) &&
         ((<fold_right_1143@15:1> = 0) &&
          (<<<<fold_right_1143@15:4>@18:0>@24:1>@34:0> = <<<fold_right_1143@15:4>@18:0>@24:0>)))
      upper bounds:
        P[<<<<fold_right_1143@15:4>@18:0>@24:1>@34:0>](var5:int,var6:int,var7:int) =
        ((var5 <> 0) || ((var6 <> 0) || (var7 >= 0)))
      begin GenHcSolver.classify_pids(7393)[4]
        output:
          [<<<<fold_right_1143@15:4>@18:0>@24:1>@34:0>]
      end GenHcSolver.classify_pids(7393)[4] (0.000000 sec.)
      lb:((<<<fold_right_1143@15:4>@18:0>@24:0> = 0) &&
          ((<fold_right_1143@15:1> = 0) &&
           (<<<<fold_right_1143@15:4>@18:0>@24:1>@34:0> = <<<fold_right_1143@15:4>@18:0>@24:0>)))
      nub:(not
             ((<fold_right_1143@15:1> <> 0) ||
              ((<<<fold_right_1143@15:4>@18:0>@24:0> <> 0) || (<<<<fold_right_1143@15:4>@18:0>@24:1>@34:0> >= 0))))
      begin ApronInterface.convex_hull_interpolate(7396)[4]
        lb:((<<<fold_right_1143@15:4>@18:0>@24:0> = 0) &&
            ((<fold_right_1143@15:1> = 0) &&
             (<<<<fold_right_1143@15:4>@18:0>@24:1>@34:0> = <<<fold_right_1143@15:4>@18:0>@24:0>)))
        nub:(not
               ((<fold_right_1143@15:1> <> 0) ||
                ((<<<fold_right_1143@15:4>@18:0>@24:0> <> 0) || (<<<<fold_right_1143@15:4>@18:0>@24:1>@34:0> >= 0))))
        lb':((<<<fold_right_1143@15:4>@18:0>@24:0> = 0) &&
             ((<fold_right_1143@15:1> = 0) &&
              (<<<<fold_right_1143@15:4>@18:0>@24:1>@34:0> = <<<fold_right_1143@15:4>@18:0>@24:0>)))
        nub':(not
                ((<fold_right_1143@15:1> <> 0) ||
                 ((<<<fold_right_1143@15:4>@18:0>@24:0> <> 0) || (<<<<fold_right_1143@15:4>@18:0>@24:1>@34:0> >= 0))))
        begin InterpProver.interpolate(7397)[5]
          begin InterpProver.interpolate_fresh(7398)[6]
            begin InterpProver.interpolate_log(7399)[7]
              input1: ((<<<fold_right_1143@15:4>@18:0>@24:0> = 0) &&
                       ((<fold_right_1143@15:1> = 0) &&
                        (<<<<fold_right_1143@15:4>@18:0>@24:1>@34:0> = <<<fold_right_1143@15:4>@18:0>@24:0>)))
              input2: (not
                         ((<fold_right_1143@15:1> <> 0) ||
                          ((<<<fold_right_1143@15:4>@18:0>@24:0> <> 0) ||
                           (<<<<fold_right_1143@15:4>@18:0>@24:1>@34:0> >= 0))))
              begin InterpProver.interpolate_check(7400)[8]
                begin InterpProver.interpolate_simplify(7401)[9]
                  begin InterpProver.interpolate_quick(7478)[10]
                    begin CsisatInterface.interpolate_csisat_wrap(7487)[11]
                      begin CsisatInterface.interpolate_csisat_post_process(7488)[12]
                        begin CsisatInterface.interpolate_csisat_log(7489)[13]
                          input1: (0 = v_sep_fold_right_1143_sep_15_sep_1 & 0 = v_sep_fold_right_1143_sep_15_sep_4_sep_18_sep_0_sep_24_sep_0 & v_sep_fold_right_1143_sep_15_sep_4_sep_18_sep_0_sep_24_sep_0 = v_sep_fold_right_1143_sep_15_sep_4_sep_18_sep_0_sep_24_sep_1_sep_34_sep_0)
                          input2: (0 = v_sep_fold_right_1143_sep_15_sep_1 & 0 = v_sep_fold_right_1143_sep_15_sep_4_sep_18_sep_0_sep_24_sep_0 & (1 + v_sep_fold_right_1143_sep_15_sep_4_sep_18_sep_0_sep_24_sep_1_sep_34_sep_0) <= 0)
                          begin CsisatInterface.interpolate_csisat_raw(7490)[14]
                            
                          end CsisatInterface.interpolate_csisat_raw(7490)[14] (0.000000 sec.)
                          output: -2*v_sep_fold_right_1143_sep_15_sep_4_sep_18_sep_0_sep_24_sep_1_sep_34_sep_0 <= 0
                          
                        end CsisatInterface.interpolate_csisat_log(7489)[13] (0.000000 sec.)
                        after simplification: -2*v_sep_fold_right_1143_sep_15_sep_4_sep_18_sep_0_sep_24_sep_1_sep_34_sep_0 <= 0
                        after dnf conversion: ((-2*v_sep_fold_right_1143_sep_15_sep_4_sep_18_sep_0_sep_24_sep_1_sep_34_sep_0 <= 0))
                        
                      end CsisatInterface.interpolate_csisat_post_process(7488)[12] (0.000000 sec.)
                      
                    end CsisatInterface.interpolate_csisat_wrap(7487)[11] (0.000000 sec.)
                    
                  end InterpProver.interpolate_quick(7478)[10] (0.001000 sec.)
                  
                end InterpProver.interpolate_simplify(7401)[9] (0.001000 sec.)
                
              end InterpProver.interpolate_check(7400)[8] (0.002000 sec.)
              output: (0 <= <<<<fold_right_1143@15:4>@18:0>@24:1>@34:0>)
            end InterpProver.interpolate_log(7399)[7] (0.002000 sec.)
            
          end InterpProver.interpolate_fresh(7398)[6] (0.002000 sec.)
          
        end InterpProver.interpolate(7397)[5] (0.002000 sec.)
        output:
          P[<<<<fold_right_1143@15:4>@18:0>@24:1>@34:0>](<fold_right_1143@15:1>:int,<<<fold_right_1143@15:4>@18:0>@24:0>:int,<<<<fold_right_1143@15:4>@18:0>@24:1>@34:0>:int) =
          (0 <= <<<<fold_right_1143@15:4>@18:0>@24:1>@34:0>)
      end ApronInterface.convex_hull_interpolate(7396)[4] (0.002000 sec.)
      Horn clauses:
        P[<fold_right_1143@15:1>](0:int),
        P[<<<fold_right_1143@15:3>@26:1>@32:0>](0:int,<<<fold_right_1143@15:4>@18:0>@24:0>:int,<<<<fold_right_1143@15:4>@18:0>@24:1>@34:0>:int),
        (0 > <<<<fold_right_1143@15:4>@18:0>@24:1>@34:0>) |- bot
        
        P[<<make_list_1030@8:1>@11:0>](<f_main_2163@20:0>:int,<fold_right_1143@15:1>:int),
        P[<<fold_right_1143@15:3>@26:0>](<fold_right_1143@15:1>:int,<<fold_right_1143@15:3>@26:0>:int),
        P[<fold_right_1143@15:1>](<fold_right_1143@15:1>:int),
        (<<<fold_right_1143@15:3>@26:1>@32:0> = <<fold_right_1143@15:3>@26:0>)
        |- P[<<<fold_right_1143@15:3>@26:1>@32:0>](<fold_right_1143@15:1>:int,
                                                   <<fold_right_1143@15:3>@26:0>:int,
                                                   <<<fold_right_1143@15:3>@26:1>@32:0>:int)
        
        P[<fold_right_1143@15:1>](<fold_right_1143@15:1>:int),
        P[<<<fold_right_1143@15:4>@18:0>@24:0>](<fold_right_1143@15:1>:int,<<fold_right_1143@15:3>@26:0>:int),
        (<fold_right_1143@15:1> = 0)
        |- P[<<fold_right_1143@15:3>@26:0>](<fold_right_1143@15:1>:int,
                                            <<fold_right_1143@15:3>@26:0>:int)
        
        P[<<make_list_1030@8:1>@11:0>](<f_main_2163@20:0>:int,<fold_right_1143@15:1>:int),
        P[<fold_right_1143@15:1>](<fold_right_1143@15:1>:int), (<<<fold_right_1143@15:4>@18:0>@24:0> = 0)
        |- P[<<<fold_right_1143@15:4>@18:0>@24:0>](<fold_right_1143@15:1>:int,
                                                   <<<fold_right_1143@15:4>@18:0>@24:0>:int)
        
        P[<<make_list_1030@8:1>@11:0>](<f_main_2161@13:0>:int,<fold_right_1143@15:1>:int)|- P[<fold_right_1143@15:1>](
        <fold_right_1143@15:1>:int)
        
        P[<make_list_1030@8:0>](<make_list_1030@8:0>:int),
        ((<<make_list_1030@8:1>@11:0> = 0) && (<make_list_1030@8:0> <= 0))
        |- P[<<make_list_1030@8:1>@11:0>](<make_list_1030@8:0>:int,<<make_list_1030@8:1>@11:0>:int)
        
        |- P[<make_list_1030@8:0>](<make_list_1030@8:0>:int)
      lower bounds:
        P[<make_list_1030@8:0>](<make_list_1030@8:0>:int) = true
        P[<<make_list_1030@8:1>@11:0>](<make_list_1030@8:0>:int,<<make_list_1030@8:1>@11:0>:int) =
        ((<<make_list_1030@8:1>@11:0> = 0) && (<make_list_1030@8:0> <= 0))
        P[<fold_right_1143@15:1>](<fold_right_1143@15:1>:int) = (<fold_right_1143@15:1> = 0)
        P[<<<fold_right_1143@15:4>@18:0>@24:0>](<fold_right_1143@15:1>:int,<<<fold_right_1143@15:4>@18:0>@24:0>:int) =
        ((<<<fold_right_1143@15:4>@18:0>@24:0> = 0) && (<fold_right_1143@15:1> = 0))
        P[<<fold_right_1143@15:3>@26:0>](<fold_right_1143@15:1>:int,<<fold_right_1143@15:3>@26:0>:int) =
        ((<<fold_right_1143@15:3>@26:0> = 0) && (<fold_right_1143@15:1> = 0))
        P[<<<fold_right_1143@15:3>@26:1>@32:0>](<fold_right_1143@15:1>:int,<<fold_right_1143@15:3>@26:0>:int,<<<fold_right_1143@15:3>@26:1>@32:0>:int) =
        ((<<fold_right_1143@15:3>@26:0> = 0) &&
         ((<fold_right_1143@15:1> = 0) && (<<<fold_right_1143@15:3>@26:1>@32:0> = <<fold_right_1143@15:3>@26:0>)))
      upper bounds:
        P[<<<fold_right_1143@15:3>@26:1>@32:0>](var8:int,var9:int,var10:int) = ((var8 <> 0) || (0 <= var10))
      begin GenHcSolver.classify_pids(9803)[4]
        output:
          [<<<fold_right_1143@15:3>@26:1>@32:0>]
      end GenHcSolver.classify_pids(9803)[4] (0.000000 sec.)
      lb:((<<fold_right_1143@15:3>@26:0> = 0) &&
          ((<fold_right_1143@15:1> = 0) && (<<<fold_right_1143@15:3>@26:1>@32:0> = <<fold_right_1143@15:3>@26:0>)))
      nub:(not ((<fold_right_1143@15:1> <> 0) || (0 <= <<<fold_right_1143@15:3>@26:1>@32:0>)))
      begin ApronInterface.convex_hull_interpolate(9806)[4]
        lb:((<<fold_right_1143@15:3>@26:0> = 0) &&
            ((<fold_right_1143@15:1> = 0) && (<<<fold_right_1143@15:3>@26:1>@32:0> = <<fold_right_1143@15:3>@26:0>)))
        nub:(not ((<fold_right_1143@15:1> <> 0) || (0 <= <<<fold_right_1143@15:3>@26:1>@32:0>)))
        lb':((<<fold_right_1143@15:3>@26:0> = 0) &&
             ((<fold_right_1143@15:1> = 0) && (<<<fold_right_1143@15:3>@26:1>@32:0> = <<fold_right_1143@15:3>@26:0>)))
        nub':(not ((<fold_right_1143@15:1> <> 0) || (0 <= <<<fold_right_1143@15:3>@26:1>@32:0>)))
        begin InterpProver.interpolate(9807)[5]
          begin InterpProver.interpolate_fresh(9808)[6]
            begin InterpProver.interpolate_log(9809)[7]
              input1: ((<<fold_right_1143@15:3>@26:0> = 0) &&
                       ((<fold_right_1143@15:1> = 0) &&
                        (<<<fold_right_1143@15:3>@26:1>@32:0> = <<fold_right_1143@15:3>@26:0>)))
              input2: (not ((<fold_right_1143@15:1> <> 0) || (0 <= <<<fold_right_1143@15:3>@26:1>@32:0>)))
              begin InterpProver.interpolate_check(9810)[8]
                begin InterpProver.interpolate_simplify(9811)[9]
                  begin InterpProver.interpolate_quick(9861)[10]
                    begin CsisatInterface.interpolate_csisat_wrap(9870)[11]
                      begin CsisatInterface.interpolate_csisat_post_process(9871)[12]
                        begin CsisatInterface.interpolate_csisat_log(9872)[13]
                          input1: (0 = v_sep_fold_right_1143_sep_15_sep_1 & 0 = v_sep_fold_right_1143_sep_15_sep_3_sep_26_sep_1_sep_32_sep_0)
                          input2: (0 = v_sep_fold_right_1143_sep_15_sep_1 & (1 + v_sep_fold_right_1143_sep_15_sep_3_sep_26_sep_1_sep_32_sep_0) <= 0)
                          begin CsisatInterface.interpolate_csisat_raw(9873)[14]
                            
                          end CsisatInterface.interpolate_csisat_raw(9873)[14] (0.000000 sec.)
                          output: -2*v_sep_fold_right_1143_sep_15_sep_3_sep_26_sep_1_sep_32_sep_0 <= 0
                          
                        end CsisatInterface.interpolate_csisat_log(9872)[13] (0.000000 sec.)
                        after simplification: -2*v_sep_fold_right_1143_sep_15_sep_3_sep_26_sep_1_sep_32_sep_0 <= 0
                        after dnf conversion: ((-2*v_sep_fold_right_1143_sep_15_sep_3_sep_26_sep_1_sep_32_sep_0 <= 0))
                        
                      end CsisatInterface.interpolate_csisat_post_process(9871)[12] (0.000000 sec.)
                      
                    end CsisatInterface.interpolate_csisat_wrap(9870)[11] (0.000000 sec.)
                    
                  end InterpProver.interpolate_quick(9861)[10] (0.001000 sec.)
                  
                end InterpProver.interpolate_simplify(9811)[9] (0.001000 sec.)
                
              end InterpProver.interpolate_check(9810)[8] (0.001000 sec.)
              output: (0 <= <<<fold_right_1143@15:3>@26:1>@32:0>)
            end InterpProver.interpolate_log(9809)[7] (0.001000 sec.)
            
          end InterpProver.interpolate_fresh(9808)[6] (0.001000 sec.)
          
        end InterpProver.interpolate(9807)[5] (0.001000 sec.)
        output:
          P[<<<fold_right_1143@15:3>@26:1>@32:0>](<fold_right_1143@15:1>:int,<<fold_right_1143@15:3>@26:0>:int,<<<fold_right_1143@15:3>@26:1>@32:0>:int) =
          (0 <= <<<fold_right_1143@15:3>@26:1>@32:0>)
      end ApronInterface.convex_hull_interpolate(9806)[4] (0.001000 sec.)
      Horn clauses:
        P[<<make_list_1030@8:1>@11:0>](<f_main_2163@20:0>:int,<fold_right_1143@15:1>:int),
        P[<<fold_right_1143@15:3>@26:0>](<fold_right_1143@15:1>:int,<<<fold_right_1143@15:3>@26:1>@32:0>:int),
        P[<fold_right_1143@15:1>](<fold_right_1143@15:1>:int), (0 > <<<fold_right_1143@15:3>@26:1>@32:0>) |- bot
        
        P[<fold_right_1143@15:1>](<fold_right_1143@15:1>:int),
        P[<<<fold_right_1143@15:4>@18:0>@24:0>](<fold_right_1143@15:1>:int,<<fold_right_1143@15:3>@26:0>:int),
        (<fold_right_1143@15:1> = 0)
        |- P[<<fold_right_1143@15:3>@26:0>](<fold_right_1143@15:1>:int,
                                            <<fold_right_1143@15:3>@26:0>:int)
        
        P[<<make_list_1030@8:1>@11:0>](<f_main_2163@20:0>:int,<fold_right_1143@15:1>:int),
        P[<fold_right_1143@15:1>](<fold_right_1143@15:1>:int), (<<<fold_right_1143@15:4>@18:0>@24:0> = 0)
        |- P[<<<fold_right_1143@15:4>@18:0>@24:0>](<fold_right_1143@15:1>:int,
                                                   <<<fold_right_1143@15:4>@18:0>@24:0>:int)
        
        P[<<make_list_1030@8:1>@11:0>](<f_main_2161@13:0>:int,<fold_right_1143@15:1>:int)|- P[<fold_right_1143@15:1>](
        <fold_right_1143@15:1>:int)
        
        P[<make_list_1030@8:0>](<make_list_1030@8:0>:int),
        ((<<make_list_1030@8:1>@11:0> = 0) && (<make_list_1030@8:0> <= 0))
        |- P[<<make_list_1030@8:1>@11:0>](<make_list_1030@8:0>:int,<<make_list_1030@8:1>@11:0>:int)
        
        |- P[<make_list_1030@8:0>](<make_list_1030@8:0>:int)
      lower bounds:
        P[<make_list_1030@8:0>](<make_list_1030@8:0>:int) = true
        P[<<make_list_1030@8:1>@11:0>](<make_list_1030@8:0>:int,<<make_list_1030@8:1>@11:0>:int) =
        ((<<make_list_1030@8:1>@11:0> = 0) && (<make_list_1030@8:0> <= 0))
        P[<fold_right_1143@15:1>](<fold_right_1143@15:1>:int) = (<fold_right_1143@15:1> = 0)
        P[<<<fold_right_1143@15:4>@18:0>@24:0>](<fold_right_1143@15:1>:int,<<<fold_right_1143@15:4>@18:0>@24:0>:int) =
        ((<<<fold_right_1143@15:4>@18:0>@24:0> = 0) && (<fold_right_1143@15:1> = 0))
        P[<<fold_right_1143@15:3>@26:0>](<fold_right_1143@15:1>:int,<<fold_right_1143@15:3>@26:0>:int) =
        ((<<fold_right_1143@15:3>@26:0> = 0) && (<fold_right_1143@15:1> = 0))
      upper bounds:
        P[<<fold_right_1143@15:3>@26:0>](var11:int,var12:int) = ((var11 <> 0) || (0 <= var12))
      begin GenHcSolver.classify_pids(11594)[4]
        output:
          [<<fold_right_1143@15:3>@26:0>]
      end GenHcSolver.classify_pids(11594)[4] (0.000000 sec.)
      lb:((<<fold_right_1143@15:3>@26:0> = 0) && (<fold_right_1143@15:1> = 0))
      nub:(not ((<fold_right_1143@15:1> <> 0) || (0 <= <<fold_right_1143@15:3>@26:0>)))
      begin ApronInterface.convex_hull_interpolate(11597)[4]
        lb:((<<fold_right_1143@15:3>@26:0> = 0) && (<fold_right_1143@15:1> = 0))
        nub:(not ((<fold_right_1143@15:1> <> 0) || (0 <= <<fold_right_1143@15:3>@26:0>)))
        lb':((<<fold_right_1143@15:3>@26:0> = 0) && (<fold_right_1143@15:1> = 0))
        nub':(not ((<fold_right_1143@15:1> <> 0) || (0 <= <<fold_right_1143@15:3>@26:0>)))
        begin InterpProver.interpolate(11598)[5]
          begin InterpProver.interpolate_fresh(11599)[6]
            begin InterpProver.interpolate_log(11600)[7]
              input1: ((<<fold_right_1143@15:3>@26:0> = 0) && (<fold_right_1143@15:1> = 0))
              input2: (not ((<fold_right_1143@15:1> <> 0) || (0 <= <<fold_right_1143@15:3>@26:0>)))
              begin InterpProver.interpolate_check(11601)[8]
                begin InterpProver.interpolate_simplify(11602)[9]
                  begin InterpProver.interpolate_quick(11639)[10]
                    begin CsisatInterface.interpolate_csisat_wrap(11648)[11]
                      begin CsisatInterface.interpolate_csisat_post_process(11649)[12]
                        begin CsisatInterface.interpolate_csisat_log(11650)[13]
                          input1: (0 = v_sep_fold_right_1143_sep_15_sep_1 & 0 = v_sep_fold_right_1143_sep_15_sep_3_sep_26_sep_0)
                          input2: (0 = v_sep_fold_right_1143_sep_15_sep_1 & (1 + v_sep_fold_right_1143_sep_15_sep_3_sep_26_sep_0) <= 0)
                          begin CsisatInterface.interpolate_csisat_raw(11651)[14]
                            
                          end CsisatInterface.interpolate_csisat_raw(11651)[14] (0.000000 sec.)
                          output: -2*v_sep_fold_right_1143_sep_15_sep_3_sep_26_sep_0 <= 0
                          
                        end CsisatInterface.interpolate_csisat_log(11650)[13] (0.000000 sec.)
                        after simplification: -2*v_sep_fold_right_1143_sep_15_sep_3_sep_26_sep_0 <= 0
                        after dnf conversion: ((-2*v_sep_fold_right_1143_sep_15_sep_3_sep_26_sep_0 <= 0))
                        
                      end CsisatInterface.interpolate_csisat_post_process(11649)[12] (0.000000 sec.)
                      
                    end CsisatInterface.interpolate_csisat_wrap(11648)[11] (0.000000 sec.)
                    
                  end InterpProver.interpolate_quick(11639)[10] (0.000000 sec.)
                  
                end InterpProver.interpolate_simplify(11602)[9] (0.000000 sec.)
                
              end InterpProver.interpolate_check(11601)[8] (0.000000 sec.)
              output: (0 <= <<fold_right_1143@15:3>@26:0>)
            end InterpProver.interpolate_log(11600)[7] (0.000000 sec.)
            
          end InterpProver.interpolate_fresh(11599)[6] (0.000000 sec.)
          
        end InterpProver.interpolate(11598)[5] (0.000000 sec.)
        output:
          P[<<fold_right_1143@15:3>@26:0>](<fold_right_1143@15:1>:int,<<fold_right_1143@15:3>@26:0>:int) =
          (0 <= <<fold_right_1143@15:3>@26:0>)
      end ApronInterface.convex_hull_interpolate(11597)[4] (0.000000 sec.)
      Horn clauses:
        P[<fold_right_1143@15:1>](0:int),
        P[<<<fold_right_1143@15:4>@18:0>@24:0>](0:int,<<fold_right_1143@15:3>@26:0>:int),
        (0 > <<fold_right_1143@15:3>@26:0>) |- bot
        
        P[<<make_list_1030@8:1>@11:0>](<f_main_2163@20:0>:int,<fold_right_1143@15:1>:int),
        P[<fold_right_1143@15:1>](<fold_right_1143@15:1>:int), (<<<fold_right_1143@15:4>@18:0>@24:0> = 0)
        |- P[<<<fold_right_1143@15:4>@18:0>@24:0>](<fold_right_1143@15:1>:int,
                                                   <<<fold_right_1143@15:4>@18:0>@24:0>:int)
        
        P[<<make_list_1030@8:1>@11:0>](<f_main_2161@13:0>:int,<fold_right_1143@15:1>:int)|- P[<fold_right_1143@15:1>](
        <fold_right_1143@15:1>:int)
        
        P[<make_list_1030@8:0>](<make_list_1030@8:0>:int),
        ((<<make_list_1030@8:1>@11:0> = 0) && (<make_list_1030@8:0> <= 0))
        |- P[<<make_list_1030@8:1>@11:0>](<make_list_1030@8:0>:int,<<make_list_1030@8:1>@11:0>:int)
        
        |- P[<make_list_1030@8:0>](<make_list_1030@8:0>:int)
      lower bounds:
        P[<make_list_1030@8:0>](<make_list_1030@8:0>:int) = true
        P[<<make_list_1030@8:1>@11:0>](<make_list_1030@8:0>:int,<<make_list_1030@8:1>@11:0>:int) =
        ((<<make_list_1030@8:1>@11:0> = 0) && (<make_list_1030@8:0> <= 0))
        P[<fold_right_1143@15:1>](<fold_right_1143@15:1>:int) = (<fold_right_1143@15:1> = 0)
        P[<<<fold_right_1143@15:4>@18:0>@24:0>](<fold_right_1143@15:1>:int,<<<fold_right_1143@15:4>@18:0>@24:0>:int) =
        ((<<<fold_right_1143@15:4>@18:0>@24:0> = 0) && (<fold_right_1143@15:1> = 0))
      upper bounds:
        P[<<<fold_right_1143@15:4>@18:0>@24:0>](var13:int,var14:int) = ((var13 <> 0) || (0 <= var14))
      begin GenHcSolver.classify_pids(13082)[4]
        output:
          [<<<fold_right_1143@15:4>@18:0>@24:0>]
      end GenHcSolver.classify_pids(13082)[4] (0.000000 sec.)
      lb:((<<<fold_right_1143@15:4>@18:0>@24:0> = 0) && (<fold_right_1143@15:1> = 0))
      nub:(not ((<fold_right_1143@15:1> <> 0) || (0 <= <<<fold_right_1143@15:4>@18:0>@24:0>)))
      begin ApronInterface.convex_hull_interpolate(13085)[4]
        lb:((<<<fold_right_1143@15:4>@18:0>@24:0> = 0) && (<fold_right_1143@15:1> = 0))
        nub:(not ((<fold_right_1143@15:1> <> 0) || (0 <= <<<fold_right_1143@15:4>@18:0>@24:0>)))
        lb':((<<<fold_right_1143@15:4>@18:0>@24:0> = 0) && (<fold_right_1143@15:1> = 0))
        nub':(not ((<fold_right_1143@15:1> <> 0) || (0 <= <<<fold_right_1143@15:4>@18:0>@24:0>)))
        begin InterpProver.interpolate(13086)[5]
          begin InterpProver.interpolate_fresh(13087)[6]
            begin InterpProver.interpolate_log(13088)[7]
              input1: ((<<<fold_right_1143@15:4>@18:0>@24:0> = 0) && (<fold_right_1143@15:1> = 0))
              input2: (not ((<fold_right_1143@15:1> <> 0) || (0 <= <<<fold_right_1143@15:4>@18:0>@24:0>)))
              begin InterpProver.interpolate_check(13089)[8]
                begin InterpProver.interpolate_simplify(13090)[9]
                  begin InterpProver.interpolate_quick(13127)[10]
                    begin CsisatInterface.interpolate_csisat_wrap(13136)[11]
                      begin CsisatInterface.interpolate_csisat_post_process(13137)[12]
                        begin CsisatInterface.interpolate_csisat_log(13138)[13]
                          input1: (0 = v_sep_fold_right_1143_sep_15_sep_1 & 0 = v_sep_fold_right_1143_sep_15_sep_4_sep_18_sep_0_sep_24_sep_0)
                          input2: (0 = v_sep_fold_right_1143_sep_15_sep_1 & (1 + v_sep_fold_right_1143_sep_15_sep_4_sep_18_sep_0_sep_24_sep_0) <= 0)
                          begin CsisatInterface.interpolate_csisat_raw(13139)[14]
                            
                          end CsisatInterface.interpolate_csisat_raw(13139)[14] (0.000000 sec.)
                          output: -2*v_sep_fold_right_1143_sep_15_sep_4_sep_18_sep_0_sep_24_sep_0 <= 0
                          
                        end CsisatInterface.interpolate_csisat_log(13138)[13] (0.000000 sec.)
                        after simplification: -2*v_sep_fold_right_1143_sep_15_sep_4_sep_18_sep_0_sep_24_sep_0 <= 0
                        after dnf conversion: ((-2*v_sep_fold_right_1143_sep_15_sep_4_sep_18_sep_0_sep_24_sep_0 <= 0))
                        
                      end CsisatInterface.interpolate_csisat_post_process(13137)[12] (0.000000 sec.)
                      
                    end CsisatInterface.interpolate_csisat_wrap(13136)[11] (0.000000 sec.)
                    
                  end InterpProver.interpolate_quick(13127)[10] (0.000000 sec.)
                  
                end InterpProver.interpolate_simplify(13090)[9] (0.000000 sec.)
                
              end InterpProver.interpolate_check(13089)[8] (0.001000 sec.)
              output: (0 <= <<<fold_right_1143@15:4>@18:0>@24:0>)
            end InterpProver.interpolate_log(13088)[7] (0.001000 sec.)
            
          end InterpProver.interpolate_fresh(13087)[6] (0.001000 sec.)
          
        end InterpProver.interpolate(13086)[5] (0.001000 sec.)
        output:
          P[<<<fold_right_1143@15:4>@18:0>@24:0>](<fold_right_1143@15:1>:int,<<<fold_right_1143@15:4>@18:0>@24:0>:int) =
          (0 <= <<<fold_right_1143@15:4>@18:0>@24:0>)
      end ApronInterface.convex_hull_interpolate(13085)[4] (0.001000 sec.)
      Horn clauses:
        P[<<make_list_1030@8:1>@11:0>](<f_main_2161@13:0>:int,<fold_right_1143@15:1>:int)|- P[<fold_right_1143@15:1>](
        <fold_right_1143@15:1>:int)
        
        P[<make_list_1030@8:0>](<make_list_1030@8:0>:int),
        ((<<make_list_1030@8:1>@11:0> = 0) && (<make_list_1030@8:0> <= 0))
        |- P[<<make_list_1030@8:1>@11:0>](<make_list_1030@8:0>:int,<<make_list_1030@8:1>@11:0>:int)
        
        |- P[<make_list_1030@8:0>](<make_list_1030@8:0>:int)
      lower bounds:
        P[<make_list_1030@8:0>](<make_list_1030@8:0>:int) = true
        P[<<make_list_1030@8:1>@11:0>](<make_list_1030@8:0>:int,<<make_list_1030@8:1>@11:0>:int) =
        ((<<make_list_1030@8:1>@11:0> = 0) && (<make_list_1030@8:0> <= 0))
        P[<fold_right_1143@15:1>](<fold_right_1143@15:1>:int) = (<fold_right_1143@15:1> = 0)
      upper bounds:
        P[<fold_right_1143@15:1>](var15:int) = true
      begin GenHcSolver.classify_pids(13962)[4]
        output:
          [<fold_right_1143@15:1>]
      end GenHcSolver.classify_pids(13962)[4] (0.000000 sec.)
      lb:(<fold_right_1143@15:1> = 0)
      nub:false
      begin ApronInterface.convex_hull_interpolate(13965)[4]
        lb:(<fold_right_1143@15:1> = 0)
        nub:false
        lb':(<fold_right_1143@15:1> = 0)
        nub':false
        begin InterpProver.interpolate(13966)[5]
          begin InterpProver.interpolate_fresh(13967)[6]
            begin InterpProver.interpolate_log(13968)[7]
              input1: (<fold_right_1143@15:1> = 0)
              input2: false
              begin InterpProver.interpolate_check(13969)[8]
                begin InterpProver.interpolate_simplify(13970)[9]
                  begin InterpProver.interpolate_quick(13989)[10]
                    
                  end InterpProver.interpolate_quick(13989)[10] (0.000000 sec.)
                  
                end InterpProver.interpolate_simplify(13970)[9] (0.000000 sec.)
                
              end InterpProver.interpolate_check(13969)[8] (0.000000 sec.)
              output: true
            end InterpProver.interpolate_log(13968)[7] (0.000000 sec.)
            
          end InterpProver.interpolate_fresh(13967)[6] (0.000000 sec.)
          
        end InterpProver.interpolate(13966)[5] (0.000000 sec.)
        output:
          P[<fold_right_1143@15:1>](<fold_right_1143@15:1>:int) = true
      end ApronInterface.convex_hull_interpolate(13965)[4] (0.000000 sec.)
      Horn clauses:
        P[<make_list_1030@8:0>](<make_list_1030@8:0>:int),
        ((<<make_list_1030@8:1>@11:0> = 0) && (<make_list_1030@8:0> <= 0))
        |- P[<<make_list_1030@8:1>@11:0>](<make_list_1030@8:0>:int,<<make_list_1030@8:1>@11:0>:int)
        
        |- P[<make_list_1030@8:0>](<make_list_1030@8:0>:int)
      lower bounds:
        P[<make_list_1030@8:0>](<make_list_1030@8:0>:int) = true
        P[<<make_list_1030@8:1>@11:0>](<make_list_1030@8:0>:int,<<make_list_1030@8:1>@11:0>:int) =
        ((<<make_list_1030@8:1>@11:0> = 0) && (<make_list_1030@8:0> <= 0))
      upper bounds:
        P[<<make_list_1030@8:1>@11:0>](var16:int,var17:int) = true
      begin GenHcSolver.classify_pids(14544)[4]
        output:
          [<<make_list_1030@8:1>@11:0>]
      end GenHcSolver.classify_pids(14544)[4] (0.000000 sec.)
      lb:((<<make_list_1030@8:1>@11:0> = 0) && (<make_list_1030@8:0> <= 0))
      nub:false
      begin ApronInterface.convex_hull_interpolate(14547)[4]
        lb:((<<make_list_1030@8:1>@11:0> = 0) && (<make_list_1030@8:0> <= 0))
        nub:false
        lb':((<<make_list_1030@8:1>@11:0> = 0) && (<make_list_1030@8:0> <= 0))
        nub':false
        begin InterpProver.interpolate(14548)[5]
          begin InterpProver.interpolate_fresh(14549)[6]
            begin InterpProver.interpolate_log(14550)[7]
              input1: ((<<make_list_1030@8:1>@11:0> = 0) && (<make_list_1030@8:0> <= 0))
              input2: false
              begin InterpProver.interpolate_check(14551)[8]
                begin InterpProver.interpolate_simplify(14552)[9]
                  begin InterpProver.interpolate_quick(14584)[10]
                    
                  end InterpProver.interpolate_quick(14584)[10] (0.000000 sec.)
                  
                end InterpProver.interpolate_simplify(14552)[9] (0.000000 sec.)
                
              end InterpProver.interpolate_check(14551)[8] (0.000000 sec.)
              output: true
            end InterpProver.interpolate_log(14550)[7] (0.000000 sec.)
            
          end InterpProver.interpolate_fresh(14549)[6] (0.000000 sec.)
          
        end InterpProver.interpolate(14548)[5] (0.000000 sec.)
        output:
          P[<<make_list_1030@8:1>@11:0>](<make_list_1030@8:0>:int,<<make_list_1030@8:1>@11:0>:int) = true
      end ApronInterface.convex_hull_interpolate(14547)[4] (0.001000 sec.)
      Horn clauses:
        |- P[<make_list_1030@8:0>](<make_list_1030@8:0>:int)
      lower bounds:
        P[<make_list_1030@8:0>](<make_list_1030@8:0>:int) = true
      upper bounds:
        P[<make_list_1030@8:0>](var18:int) = true
      begin GenHcSolver.classify_pids(14835)[4]
        output:
          [<make_list_1030@8:0>]
      end GenHcSolver.classify_pids(14835)[4] (0.000000 sec.)
      lb:true
      nub:false
      begin ApronInterface.convex_hull_interpolate(14838)[4]
        lb:true
        nub:false
        lb':true
        nub':false
        begin InterpProver.interpolate(14839)[5]
          begin InterpProver.interpolate_fresh(14840)[6]
            begin InterpProver.interpolate_log(14841)[7]
              input1: true
              input2: false
              begin InterpProver.interpolate_check(14842)[8]
                begin InterpProver.interpolate_simplify(14843)[9]
                  begin InterpProver.interpolate_quick(14856)[10]
                    
                  end InterpProver.interpolate_quick(14856)[10] (0.000000 sec.)
                  
                end InterpProver.interpolate_simplify(14843)[9] (0.000000 sec.)
                
              end InterpProver.interpolate_check(14842)[8] (0.000000 sec.)
              output: true
            end InterpProver.interpolate_log(14841)[7] (0.000000 sec.)
            
          end InterpProver.interpolate_fresh(14840)[6] (0.000000 sec.)
          
        end InterpProver.interpolate(14839)[5] (0.000000 sec.)
        output:
          P[<make_list_1030@8:0>](<make_list_1030@8:0>:int) = true
      end ApronInterface.convex_hull_interpolate(14838)[4] (0.000000 sec.)
      begin HcSolver.check_validity(14911)[4]
        input:
          P[<fail_2169@41:0>](<fail_2169@41:0>:bool)|- bot
          
          P[<<<<fold_right_1143@15:4>@18:0>@24:1>@34:0>](<f_main_2164@38:1>:int,0:int,<f_main_2164@38:3>:int),
          P[<<make_list_1030@8:1>@11:0>](<f_main_2164@38:0>:int,<f_main_2164@38:1>:int),
          ((<f_main_2164@38:3> < 0) && <fail_2169@41:0>) |- P[<fail_2169@41:0>](
          <fail_2169@41:0>:bool)
          
          P[<fold_right_1143@15:1>](<fold_right_1143@15:1>:int),
          P[<<<fold_right_1143@15:3>@26:1>@32:0>](<fold_right_1143@15:1>:int,<<<fold_right_1143@15:4>@18:0>@24:0>:int,<<<<fold_right_1143@15:4>@18:0>@24:1>@34:0>:int),
          (<fold_right_1143@15:1> = 0)
          |- P[<<<<fold_right_1143@15:4>@18:0>@24:1>@34:0>](<fold_right_1143@15:1>:int,
                                                            <<<fold_right_1143@15:4>@18:0>@24:0>:int,
                                                            <<<<fold_right_1143@15:4>@18:0>@24:1>@34:0>:int)
          
          P[<<make_list_1030@8:1>@11:0>](<f_main_2163@20:0>:int,<fold_right_1143@15:1>:int),
          P[<<fold_right_1143@15:3>@26:0>](<fold_right_1143@15:1>:int,<<fold_right_1143@15:3>@26:0>:int),
          P[<fold_right_1143@15:1>](<fold_right_1143@15:1>:int),
          (<<<fold_right_1143@15:3>@26:1>@32:0> = <<fold_right_1143@15:3>@26:0>)
          |- P[<<<fold_right_1143@15:3>@26:1>@32:0>](<fold_right_1143@15:1>:int,
                                                     <<fold_right_1143@15:3>@26:0>:int,
                                                     <<<fold_right_1143@15:3>@26:1>@32:0>:int)
          
          P[<fold_right_1143@15:1>](<fold_right_1143@15:1>:int),
          P[<<<fold_right_1143@15:4>@18:0>@24:0>](<fold_right_1143@15:1>:int,<<fold_right_1143@15:3>@26:0>:int),
          (<fold_right_1143@15:1> = 0)
          |- P[<<fold_right_1143@15:3>@26:0>](<fold_right_1143@15:1>:int,
                                              <<fold_right_1143@15:3>@26:0>:int)
          
          P[<<make_list_1030@8:1>@11:0>](<f_main_2163@20:0>:int,<fold_right_1143@15:1>:int),
          P[<fold_right_1143@15:1>](<fold_right_1143@15:1>:int), (<<<fold_right_1143@15:4>@18:0>@24:0> = 0)
          |- P[<<<fold_right_1143@15:4>@18:0>@24:0>](<fold_right_1143@15:1>:int,
                                                     <<<fold_right_1143@15:4>@18:0>@24:0>:int)
          
          P[<<make_list_1030@8:1>@11:0>](<f_main_2161@13:0>:int,<fold_right_1143@15:1>:int)|- P[<fold_right_1143@15:1>](
          <fold_right_1143@15:1>:int)
          
          P[<make_list_1030@8:0>](<make_list_1030@8:0>:int),
          ((<<make_list_1030@8:1>@11:0> = 0) && (<make_list_1030@8:0> <= 0))
          |- P[<<make_list_1030@8:1>@11:0>](<make_list_1030@8:0>:int,
                                            <<make_list_1030@8:1>@11:0>:int)
          
          |- P[<make_list_1030@8:0>](<make_list_1030@8:0>:int)
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        
      end HcSolver.check_validity(14911)[4] (0.004000 sec.)
      solution:
        P[<fail_2169@41:0>](<fail_2169@41:0>:bool) = false
        P[<<<<fold_right_1143@15:4>@18:0>@24:1>@34:0>](<fold_right_1143@15:1>:int,<<<fold_right_1143@15:4>@18:0>@24:0>:int,<<<<fold_right_1143@15:4>@18:0>@24:1>@34:0>:int) =
        (0 <= <<<<fold_right_1143@15:4>@18:0>@24:1>@34:0>)
        P[<<<fold_right_1143@15:3>@26:1>@32:0>](<fold_right_1143@15:1>:int,<<fold_right_1143@15:3>@26:0>:int,<<<fold_right_1143@15:3>@26:1>@32:0>:int) =
        (0 <= <<<fold_right_1143@15:3>@26:1>@32:0>)
        P[<<fold_right_1143@15:3>@26:0>](<fold_right_1143@15:1>:int,<<fold_right_1143@15:3>@26:0>:int) =
        (0 <= <<fold_right_1143@15:3>@26:0>)
        P[<<<fold_right_1143@15:4>@18:0>@24:0>](<fold_right_1143@15:1>:int,<<<fold_right_1143@15:4>@18:0>@24:0>:int) =
        (0 <= <<<fold_right_1143@15:4>@18:0>@24:0>)
        P[<fold_right_1143@15:1>](<fold_right_1143@15:1>:int) = true
        P[<<make_list_1030@8:1>@11:0>](<make_list_1030@8:0>:int,<<make_list_1030@8:1>@11:0>:int) = true
        P[<make_list_1030@8:0>](<make_list_1030@8:0>:int) = true
    end GenHcSolver.solve(2084)[3] (0.054992 sec.)
    begin GenHcSolver.solve(15478)[3]
      Horn clauses:
        P[<fail_2169@41:0>](<fail_2169@41:0>:bool)|- bot
        
        P[<<<<fold_right_1143@15:4>@18:0>@24:1>@34:0>](<f_main_2164@38:1>:int,0:int,<f_main_2164@38:3>:int),
        P[<<make_list_1030@8:1>@11:0>](<f_main_2164@38:0>:int,<f_main_2164@38:1>:int),
        ((<f_main_2164@38:3> < 0) && <fail_2169@41:0>) |- P[<fail_2169@41:0>](
        <fail_2169@41:0>:bool)
        
        P[<fold_right_1143@15:1>](<fold_right_1143@15:1>:int),
        P[<<<fold_right_1143@15:3>@26:1>@32:0>](<fold_right_1143@15:1>:int,<<<fold_right_1143@15:4>@18:0>@24:0>:int,<<<<fold_right_1143@15:4>@18:0>@24:1>@34:0>:int),
        (<fold_right_1143@15:1> = 0)
        |- P[<<<<fold_right_1143@15:4>@18:0>@24:1>@34:0>](<fold_right_1143@15:1>:int,
                                                          <<<fold_right_1143@15:4>@18:0>@24:0>:int,
                                                          <<<<fold_right_1143@15:4>@18:0>@24:1>@34:0>:int)
        
        P[<<make_list_1030@8:1>@11:0>](<f_main_2163@20:0>:int,<fold_right_1143@15:1>:int),
        P[<<fold_right_1143@15:3>@26:0>](<fold_right_1143@15:1>:int,<<fold_right_1143@15:3>@26:0>:int),
        P[<fold_right_1143@15:1>](<fold_right_1143@15:1>:int),
        (<<<fold_right_1143@15:3>@26:1>@32:0> = <<fold_right_1143@15:3>@26:0>)
        |- P[<<<fold_right_1143@15:3>@26:1>@32:0>](<fold_right_1143@15:1>:int,
                                                   <<fold_right_1143@15:3>@26:0>:int,
                                                   <<<fold_right_1143@15:3>@26:1>@32:0>:int)
        
        P[<fold_right_1143@15:1>](<fold_right_1143@15:1>:int),
        P[<<<fold_right_1143@15:4>@18:0>@24:0>](<fold_right_1143@15:1>:int,<<fold_right_1143@15:3>@26:0>:int),
        (<fold_right_1143@15:1> = 0)
        |- P[<<fold_right_1143@15:3>@26:0>](<fold_right_1143@15:1>:int,
                                            <<fold_right_1143@15:3>@26:0>:int)
        
        P[<<make_list_1030@8:1>@11:0>](<f_main_2163@20:0>:int,<fold_right_1143@15:1>:int),
        P[<fold_right_1143@15:1>](<fold_right_1143@15:1>:int), (<<<fold_right_1143@15:4>@18:0>@24:0> = 0)
        |- P[<<<fold_right_1143@15:4>@18:0>@24:0>](<fold_right_1143@15:1>:int,
                                                   <<<fold_right_1143@15:4>@18:0>@24:0>:int)
        
        P[<<make_list_1030@8:1>@11:0>](<f_main_2161@13:0>:int,<fold_right_1143@15:1>:int)|- P[<fold_right_1143@15:1>](
        <fold_right_1143@15:1>:int)
        
        P[<make_list_1030@8:0>](<make_list_1030@8:0>:int),
        ((<<make_list_1030@8:1>@11:0> = 0) && (<make_list_1030@8:0> <= 0))
        |- P[<<make_list_1030@8:1>@11:0>](<make_list_1030@8:0>:int,<<make_list_1030@8:1>@11:0>:int)
        
        |- P[<make_list_1030@8:0>](<make_list_1030@8:0>:int)
      lower bounds:
        P[<make_list_1030@8:0>](<make_list_1030@8:0>:int) = true
        P[<<make_list_1030@8:1>@11:0>](<make_list_1030@8:0>:int,<<make_list_1030@8:1>@11:0>:int) =
        ((<<make_list_1030@8:1>@11:0> = 0) && (<make_list_1030@8:0> <= 0))
        P[<fold_right_1143@15:1>](<fold_right_1143@15:1>:int) = (<fold_right_1143@15:1> = 0)
        P[<<<fold_right_1143@15:4>@18:0>@24:0>](<fold_right_1143@15:1>:int,<<<fold_right_1143@15:4>@18:0>@24:0>:int) =
        ((<<<fold_right_1143@15:4>@18:0>@24:0> = 0) && (<fold_right_1143@15:1> = 0))
        P[<<fold_right_1143@15:3>@26:0>](<fold_right_1143@15:1>:int,<<fold_right_1143@15:3>@26:0>:int) =
        ((<<fold_right_1143@15:3>@26:0> = 0) && (<fold_right_1143@15:1> = 0))
        P[<<<fold_right_1143@15:3>@26:1>@32:0>](<fold_right_1143@15:1>:int,<<fold_right_1143@15:3>@26:0>:int,<<<fold_right_1143@15:3>@26:1>@32:0>:int) =
        ((<<fold_right_1143@15:3>@26:0> = 0) &&
         ((<fold_right_1143@15:1> = 0) && (<<<fold_right_1143@15:3>@26:1>@32:0> = <<fold_right_1143@15:3>@26:0>)))
        P[<<<<fold_right_1143@15:4>@18:0>@24:1>@34:0>](<fold_right_1143@15:1>:int,<<<fold_right_1143@15:4>@18:0>@24:0>:int,<<<<fold_right_1143@15:4>@18:0>@24:1>@34:0>:int) =
        ((<<<fold_right_1143@15:4>@18:0>@24:0> = 0) &&
         ((<fold_right_1143@15:1> = 0) &&
          (<<<<fold_right_1143@15:4>@18:0>@24:1>@34:0> = <<<fold_right_1143@15:4>@18:0>@24:0>)))
        P[<fail_2169@41:0>](<fail_2169@41:0>:bool) = false
      upper bounds:
        P[<fail_2169@41:0>](var20:bool) = true
      begin GenHcSolver.classify_pids(17923)[4]
        output:
          [<fail_2169@41:0>]
      end GenHcSolver.classify_pids(17923)[4] (0.000000 sec.)
      lb:false
      nub:false
      begin ApronInterface.convex_hull_interpolate(17926)[4]
        lb:false
        nub:false
        begin ExtFormula.Formula.case_analysis_boolean(17929)[5]
          ts: false
          
        end ExtFormula.Formula.case_analysis_boolean(17929)[5] (0.000000 sec.)
        begin ExtFormula.Formula.case_analysis_boolean(17934)[5]
          ts: false
          
        end ExtFormula.Formula.case_analysis_boolean(17934)[5] (0.000000 sec.)
        lb':(-1 >= 0)
        nub':(-1 >= 0)
        begin InterpProver.interpolate(17937)[5]
          begin InterpProver.interpolate_fresh(17938)[6]
            begin InterpProver.interpolate_log(17939)[7]
              input1: (-1 >= 0)
              input2: (-1 >= 0)
              begin InterpProver.interpolate_check(17940)[8]
                begin InterpProver.interpolate_simplify(17941)[9]
                  begin InterpProver.interpolate_quick(17956)[10]
                    
                  end InterpProver.interpolate_quick(17956)[10] (0.000000 sec.)
                  begin minimizing # of disjunctions(17960)[10]
                    input: false
                    output: false
                  end minimizing # of disjunctions(17960)[10] (0.000000 sec.)
                  
                end InterpProver.interpolate_simplify(17941)[9] (0.000000 sec.)
                
              end InterpProver.interpolate_check(17940)[8] (0.000000 sec.)
              output: false
            end InterpProver.interpolate_log(17939)[7] (0.000000 sec.)
            
          end InterpProver.interpolate_fresh(17938)[6] (0.000000 sec.)
          
        end InterpProver.interpolate(17937)[5] (0.000000 sec.)
        output:
          P[<fail_2169@41:0>](<fail_2169@41:0>:bool) = false
      end ApronInterface.convex_hull_interpolate(17926)[4] (0.000000 sec.)
      Horn clauses:
        P[<<<<fold_right_1143@15:4>@18:0>@24:1>@34:0>](<f_main_2164@38:1>:int,0:int,<f_main_2164@38:3>:int),
        P[<<make_list_1030@8:1>@11:0>](<f_main_2164@38:0>:int,<f_main_2164@38:1>:int), (
        <f_main_2164@38:3> < 0) |- bot
        
        P[<fold_right_1143@15:1>](<fold_right_1143@15:1>:int),
        P[<<<fold_right_1143@15:3>@26:1>@32:0>](<fold_right_1143@15:1>:int,<<<fold_right_1143@15:4>@18:0>@24:0>:int,<<<<fold_right_1143@15:4>@18:0>@24:1>@34:0>:int),
        (<fold_right_1143@15:1> = 0)
        |- P[<<<<fold_right_1143@15:4>@18:0>@24:1>@34:0>](<fold_right_1143@15:1>:int,
                                                          <<<fold_right_1143@15:4>@18:0>@24:0>:int,
                                                          <<<<fold_right_1143@15:4>@18:0>@24:1>@34:0>:int)
        
        P[<<make_list_1030@8:1>@11:0>](<f_main_2163@20:0>:int,<fold_right_1143@15:1>:int),
        P[<<fold_right_1143@15:3>@26:0>](<fold_right_1143@15:1>:int,<<fold_right_1143@15:3>@26:0>:int),
        P[<fold_right_1143@15:1>](<fold_right_1143@15:1>:int),
        (<<<fold_right_1143@15:3>@26:1>@32:0> = <<fold_right_1143@15:3>@26:0>)
        |- P[<<<fold_right_1143@15:3>@26:1>@32:0>](<fold_right_1143@15:1>:int,
                                                   <<fold_right_1143@15:3>@26:0>:int,
                                                   <<<fold_right_1143@15:3>@26:1>@32:0>:int)
        
        P[<fold_right_1143@15:1>](<fold_right_1143@15:1>:int),
        P[<<<fold_right_1143@15:4>@18:0>@24:0>](<fold_right_1143@15:1>:int,<<fold_right_1143@15:3>@26:0>:int),
        (<fold_right_1143@15:1> = 0)
        |- P[<<fold_right_1143@15:3>@26:0>](<fold_right_1143@15:1>:int,
                                            <<fold_right_1143@15:3>@26:0>:int)
        
        P[<<make_list_1030@8:1>@11:0>](<f_main_2163@20:0>:int,<fold_right_1143@15:1>:int),
        P[<fold_right_1143@15:1>](<fold_right_1143@15:1>:int), (<<<fold_right_1143@15:4>@18:0>@24:0> = 0)
        |- P[<<<fold_right_1143@15:4>@18:0>@24:0>](<fold_right_1143@15:1>:int,
                                                   <<<fold_right_1143@15:4>@18:0>@24:0>:int)
        
        P[<<make_list_1030@8:1>@11:0>](<f_main_2161@13:0>:int,<fold_right_1143@15:1>:int)|- P[<fold_right_1143@15:1>](
        <fold_right_1143@15:1>:int)
        
        P[<make_list_1030@8:0>](<make_list_1030@8:0>:int),
        ((<<make_list_1030@8:1>@11:0> = 0) && (<make_list_1030@8:0> <= 0))
        |- P[<<make_list_1030@8:1>@11:0>](<make_list_1030@8:0>:int,<<make_list_1030@8:1>@11:0>:int)
        
        |- P[<make_list_1030@8:0>](<make_list_1030@8:0>:int)
      lower bounds:
        P[<make_list_1030@8:0>](<make_list_1030@8:0>:int) = true
        P[<<make_list_1030@8:1>@11:0>](<make_list_1030@8:0>:int,<<make_list_1030@8:1>@11:0>:int) =
        ((<<make_list_1030@8:1>@11:0> = 0) && (<make_list_1030@8:0> <= 0))
        P[<fold_right_1143@15:1>](<fold_right_1143@15:1>:int) = (<fold_right_1143@15:1> = 0)
        P[<<<fold_right_1143@15:4>@18:0>@24:0>](<fold_right_1143@15:1>:int,<<<fold_right_1143@15:4>@18:0>@24:0>:int) =
        ((<<<fold_right_1143@15:4>@18:0>@24:0> = 0) && (<fold_right_1143@15:1> = 0))
        P[<<fold_right_1143@15:3>@26:0>](<fold_right_1143@15:1>:int,<<fold_right_1143@15:3>@26:0>:int) =
        ((<<fold_right_1143@15:3>@26:0> = 0) && (<fold_right_1143@15:1> = 0))
        P[<<<fold_right_1143@15:3>@26:1>@32:0>](<fold_right_1143@15:1>:int,<<fold_right_1143@15:3>@26:0>:int,<<<fold_right_1143@15:3>@26:1>@32:0>:int) =
        ((<<fold_right_1143@15:3>@26:0> = 0) &&
         ((<fold_right_1143@15:1> = 0) && (<<<fold_right_1143@15:3>@26:1>@32:0> = <<fold_right_1143@15:3>@26:0>)))
        P[<<<<fold_right_1143@15:4>@18:0>@24:1>@34:0>](<fold_right_1143@15:1>:int,<<<fold_right_1143@15:4>@18:0>@24:0>:int,<<<<fold_right_1143@15:4>@18:0>@24:1>@34:0>:int) =
        ((<<<fold_right_1143@15:4>@18:0>@24:0> = 0) &&
         ((<fold_right_1143@15:1> = 0) &&
          (<<<<fold_right_1143@15:4>@18:0>@24:1>@34:0> = <<<fold_right_1143@15:4>@18:0>@24:0>)))
      upper bounds:
        P[<<<<fold_right_1143@15:4>@18:0>@24:1>@34:0>](var21:int,var22:int,var23:int) =
        ((var21 <> 0) || ((var22 <> 0) || (var23 >= 0)))
      begin GenHcSolver.classify_pids(20806)[4]
        output:
          [<<<<fold_right_1143@15:4>@18:0>@24:1>@34:0>]
      end GenHcSolver.classify_pids(20806)[4] (0.000000 sec.)
      lb:((<<<fold_right_1143@15:4>@18:0>@24:0> = 0) &&
          ((<fold_right_1143@15:1> = 0) &&
           (<<<<fold_right_1143@15:4>@18:0>@24:1>@34:0> = <<<fold_right_1143@15:4>@18:0>@24:0>)))
      nub:(not
             ((<fold_right_1143@15:1> <> 0) ||
              ((<<<fold_right_1143@15:4>@18:0>@24:0> <> 0) || (<<<<fold_right_1143@15:4>@18:0>@24:1>@34:0> >= 0))))
      begin ApronInterface.convex_hull_interpolate(20809)[4]
        lb:((<<<fold_right_1143@15:4>@18:0>@24:0> = 0) &&
            ((<fold_right_1143@15:1> = 0) &&
             (<<<<fold_right_1143@15:4>@18:0>@24:1>@34:0> = <<<fold_right_1143@15:4>@18:0>@24:0>)))
        nub:(not
               ((<fold_right_1143@15:1> <> 0) ||
                ((<<<fold_right_1143@15:4>@18:0>@24:0> <> 0) || (<<<<fold_right_1143@15:4>@18:0>@24:1>@34:0> >= 0))))
        begin ExtFormula.Formula.case_analysis_boolean(20830)[5]
          ts: ((<<<fold_right_1143@15:4>@18:0>@24:0> = 0) &&
               ((<fold_right_1143@15:1> = 0) &&
                (<<<<fold_right_1143@15:4>@18:0>@24:1>@34:0> = <<<fold_right_1143@15:4>@18:0>@24:0>)))
          
        end ExtFormula.Formula.case_analysis_boolean(20830)[5] (0.000000 sec.)
        begin ExtFormula.Formula.case_analysis_boolean(20853)[5]
          ts: ((<fold_right_1143@15:1> = 0) &&
               ((<<<fold_right_1143@15:4>@18:0>@24:0> = 0) && (<<<<fold_right_1143@15:4>@18:0>@24:1>@34:0> < 0)))
          
        end ExtFormula.Formula.case_analysis_boolean(20853)[5] (0.000000 sec.)
        lb':((<<<<fold_right_1143@15:4>@18:0>@24:1>@34:0> = 0) &&
             ((<<<fold_right_1143@15:4>@18:0>@24:0> = 0) && (<fold_right_1143@15:1> = 0)))
        nub':((<<<fold_right_1143@15:4>@18:0>@24:0> = 0) &&
              ((<fold_right_1143@15:1> = 0) && ((-1 + (-1 * <<<<fold_right_1143@15:4>@18:0>@24:1>@34:0>)) >= 0)))
        begin InterpProver.interpolate(20859)[5]
          begin InterpProver.interpolate_fresh(20860)[6]
            begin InterpProver.interpolate_log(20861)[7]
              input1: ((<<<<fold_right_1143@15:4>@18:0>@24:1>@34:0> = 0) &&
                       ((<<<fold_right_1143@15:4>@18:0>@24:0> = 0) && (<fold_right_1143@15:1> = 0)))
              input2: ((<<<fold_right_1143@15:4>@18:0>@24:0> = 0) &&
                       ((<fold_right_1143@15:1> = 0) &&
                        ((-1 + (-1 * <<<<fold_right_1143@15:4>@18:0>@24:1>@34:0>)) >= 0)))
              begin InterpProver.interpolate_check(20862)[8]
                begin InterpProver.interpolate_simplify(20863)[9]
                  begin InterpProver.interpolate_quick(20934)[10]
                    begin CsisatInterface.interpolate_csisat_wrap(20943)[11]
                      begin CsisatInterface.interpolate_csisat_post_process(20944)[12]
                        begin CsisatInterface.interpolate_csisat_log(20945)[13]
                          input1: (0 = v_sep_fold_right_1143_sep_15_sep_1 & 0 = v_sep_fold_right_1143_sep_15_sep_4_sep_18_sep_0_sep_24_sep_0 & 0 = v_sep_fold_right_1143_sep_15_sep_4_sep_18_sep_0_sep_24_sep_1_sep_34_sep_0)
                          input2: (0 = v_sep_fold_right_1143_sep_15_sep_1 & 0 = v_sep_fold_right_1143_sep_15_sep_4_sep_18_sep_0_sep_24_sep_0 & (1 + v_sep_fold_right_1143_sep_15_sep_4_sep_18_sep_0_sep_24_sep_1_sep_34_sep_0) <= 0)
                          begin CsisatInterface.interpolate_csisat_raw(20946)[14]
                            
                          end CsisatInterface.interpolate_csisat_raw(20946)[14] (0.000000 sec.)
                          output: -2*v_sep_fold_right_1143_sep_15_sep_4_sep_18_sep_0_sep_24_sep_1_sep_34_sep_0 <= 0
                          
                        end CsisatInterface.interpolate_csisat_log(20945)[13] (0.000000 sec.)
                        after simplification: -2*v_sep_fold_right_1143_sep_15_sep_4_sep_18_sep_0_sep_24_sep_1_sep_34_sep_0 <= 0
                        after dnf conversion: ((-2*v_sep_fold_right_1143_sep_15_sep_4_sep_18_sep_0_sep_24_sep_1_sep_34_sep_0 <= 0))
                        
                      end CsisatInterface.interpolate_csisat_post_process(20944)[12] (0.000000 sec.)
                      
                    end CsisatInterface.interpolate_csisat_wrap(20943)[11] (0.000000 sec.)
                    
                  end InterpProver.interpolate_quick(20934)[10] (0.000000 sec.)
                  
                end InterpProver.interpolate_simplify(20863)[9] (0.001000 sec.)
                
              end InterpProver.interpolate_check(20862)[8] (0.001000 sec.)
              output: (0 <= <<<<fold_right_1143@15:4>@18:0>@24:1>@34:0>)
            end InterpProver.interpolate_log(20861)[7] (0.001000 sec.)
            
          end InterpProver.interpolate_fresh(20860)[6] (0.001000 sec.)
          
        end InterpProver.interpolate(20859)[5] (0.001000 sec.)
        output:
          P[<<<<fold_right_1143@15:4>@18:0>@24:1>@34:0>](<fold_right_1143@15:1>:int,<<<fold_right_1143@15:4>@18:0>@24:0>:int,<<<<fold_right_1143@15:4>@18:0>@24:1>@34:0>:int) =
          (0 <= <<<<fold_right_1143@15:4>@18:0>@24:1>@34:0>)
      end ApronInterface.convex_hull_interpolate(20809)[4] (0.001999 sec.)
      Horn clauses:
        P[<fold_right_1143@15:1>](0:int),
        P[<<<fold_right_1143@15:3>@26:1>@32:0>](0:int,<<<fold_right_1143@15:4>@18:0>@24:0>:int,<<<<fold_right_1143@15:4>@18:0>@24:1>@34:0>:int),
        (0 > <<<<fold_right_1143@15:4>@18:0>@24:1>@34:0>) |- bot
        
        P[<<make_list_1030@8:1>@11:0>](<f_main_2163@20:0>:int,<fold_right_1143@15:1>:int),
        P[<<fold_right_1143@15:3>@26:0>](<fold_right_1143@15:1>:int,<<fold_right_1143@15:3>@26:0>:int),
        P[<fold_right_1143@15:1>](<fold_right_1143@15:1>:int),
        (<<<fold_right_1143@15:3>@26:1>@32:0> = <<fold_right_1143@15:3>@26:0>)
        |- P[<<<fold_right_1143@15:3>@26:1>@32:0>](<fold_right_1143@15:1>:int,
                                                   <<fold_right_1143@15:3>@26:0>:int,
                                                   <<<fold_right_1143@15:3>@26:1>@32:0>:int)
        
        P[<fold_right_1143@15:1>](<fold_right_1143@15:1>:int),
        P[<<<fold_right_1143@15:4>@18:0>@24:0>](<fold_right_1143@15:1>:int,<<fold_right_1143@15:3>@26:0>:int),
        (<fold_right_1143@15:1> = 0)
        |- P[<<fold_right_1143@15:3>@26:0>](<fold_right_1143@15:1>:int,
                                            <<fold_right_1143@15:3>@26:0>:int)
        
        P[<<make_list_1030@8:1>@11:0>](<f_main_2163@20:0>:int,<fold_right_1143@15:1>:int),
        P[<fold_right_1143@15:1>](<fold_right_1143@15:1>:int), (<<<fold_right_1143@15:4>@18:0>@24:0> = 0)
        |- P[<<<fold_right_1143@15:4>@18:0>@24:0>](<fold_right_1143@15:1>:int,
                                                   <<<fold_right_1143@15:4>@18:0>@24:0>:int)
        
        P[<<make_list_1030@8:1>@11:0>](<f_main_2161@13:0>:int,<fold_right_1143@15:1>:int)|- P[<fold_right_1143@15:1>](
        <fold_right_1143@15:1>:int)
        
        P[<make_list_1030@8:0>](<make_list_1030@8:0>:int),
        ((<<make_list_1030@8:1>@11:0> = 0) && (<make_list_1030@8:0> <= 0))
        |- P[<<make_list_1030@8:1>@11:0>](<make_list_1030@8:0>:int,<<make_list_1030@8:1>@11:0>:int)
        
        |- P[<make_list_1030@8:0>](<make_list_1030@8:0>:int)
      lower bounds:
        P[<make_list_1030@8:0>](<make_list_1030@8:0>:int) = true
        P[<<make_list_1030@8:1>@11:0>](<make_list_1030@8:0>:int,<<make_list_1030@8:1>@11:0>:int) =
        ((<<make_list_1030@8:1>@11:0> = 0) && (<make_list_1030@8:0> <= 0))
        P[<fold_right_1143@15:1>](<fold_right_1143@15:1>:int) = (<fold_right_1143@15:1> = 0)
        P[<<<fold_right_1143@15:4>@18:0>@24:0>](<fold_right_1143@15:1>:int,<<<fold_right_1143@15:4>@18:0>@24:0>:int) =
        ((<<<fold_right_1143@15:4>@18:0>@24:0> = 0) && (<fold_right_1143@15:1> = 0))
        P[<<fold_right_1143@15:3>@26:0>](<fold_right_1143@15:1>:int,<<fold_right_1143@15:3>@26:0>:int) =
        ((<<fold_right_1143@15:3>@26:0> = 0) && (<fold_right_1143@15:1> = 0))
        P[<<<fold_right_1143@15:3>@26:1>@32:0>](<fold_right_1143@15:1>:int,<<fold_right_1143@15:3>@26:0>:int,<<<fold_right_1143@15:3>@26:1>@32:0>:int) =
        ((<<fold_right_1143@15:3>@26:0> = 0) &&
         ((<fold_right_1143@15:1> = 0) && (<<<fold_right_1143@15:3>@26:1>@32:0> = <<fold_right_1143@15:3>@26:0>)))
      upper bounds:
        P[<<<fold_right_1143@15:3>@26:1>@32:0>](var24:int,var25:int,var26:int) = ((var24 <> 0) || (0 <= var26))
      begin GenHcSolver.classify_pids(23262)[4]
        output:
          [<<<fold_right_1143@15:3>@26:1>@32:0>]
      end GenHcSolver.classify_pids(23262)[4] (0.000000 sec.)
      lb:((<<fold_right_1143@15:3>@26:0> = 0) &&
          ((<fold_right_1143@15:1> = 0) && (<<<fold_right_1143@15:3>@26:1>@32:0> = <<fold_right_1143@15:3>@26:0>)))
      nub:(not ((<fold_right_1143@15:1> <> 0) || (0 <= <<<fold_right_1143@15:3>@26:1>@32:0>)))
      begin ApronInterface.convex_hull_interpolate(23265)[4]
        lb:((<<fold_right_1143@15:3>@26:0> = 0) &&
            ((<fold_right_1143@15:1> = 0) && (<<<fold_right_1143@15:3>@26:1>@32:0> = <<fold_right_1143@15:3>@26:0>)))
        nub:(not ((<fold_right_1143@15:1> <> 0) || (0 <= <<<fold_right_1143@15:3>@26:1>@32:0>)))
        begin ExtFormula.Formula.case_analysis_boolean(23286)[5]
          ts: ((<<fold_right_1143@15:3>@26:0> = 0) &&
               ((<fold_right_1143@15:1> = 0) && (<<<fold_right_1143@15:3>@26:1>@32:0> = <<fold_right_1143@15:3>@26:0>)))
          
        end ExtFormula.Formula.case_analysis_boolean(23286)[5] (0.001000 sec.)
        begin ExtFormula.Formula.case_analysis_boolean(23302)[5]
          ts: ((<fold_right_1143@15:1> = 0) && (0 > <<<fold_right_1143@15:3>@26:1>@32:0>))
          
        end ExtFormula.Formula.case_analysis_boolean(23302)[5] (0.000000 sec.)
        lb':((<<<fold_right_1143@15:3>@26:1>@32:0> = 0) &&
             ((<<fold_right_1143@15:3>@26:0> = 0) && (<fold_right_1143@15:1> = 0)))
        nub':((<fold_right_1143@15:1> = 0) && ((-1 + (-1 * <<<fold_right_1143@15:3>@26:1>@32:0>)) >= 0))
        begin InterpProver.interpolate(23307)[5]
          begin InterpProver.interpolate_fresh(23308)[6]
            begin InterpProver.interpolate_log(23309)[7]
              input1: ((<<<fold_right_1143@15:3>@26:1>@32:0> = 0) &&
                       ((<<fold_right_1143@15:3>@26:0> = 0) && (<fold_right_1143@15:1> = 0)))
              input2: ((<fold_right_1143@15:1> = 0) && ((-1 + (-1 * <<<fold_right_1143@15:3>@26:1>@32:0>)) >= 0))
              begin InterpProver.interpolate_check(23310)[8]
                begin InterpProver.interpolate_simplify(23311)[9]
                  begin InterpProver.interpolate_quick(23373)[10]
                    begin CsisatInterface.interpolate_csisat_wrap(23382)[11]
                      begin CsisatInterface.interpolate_csisat_post_process(23383)[12]
                        begin CsisatInterface.interpolate_csisat_log(23384)[13]
                          input1: (0 = v_sep_fold_right_1143_sep_15_sep_1 & 0 = v_sep_fold_right_1143_sep_15_sep_3_sep_26_sep_1_sep_32_sep_0)
                          input2: (0 = v_sep_fold_right_1143_sep_15_sep_1 & (1 + v_sep_fold_right_1143_sep_15_sep_3_sep_26_sep_1_sep_32_sep_0) <= 0)
                          begin CsisatInterface.interpolate_csisat_raw(23385)[14]
                            
                          end CsisatInterface.interpolate_csisat_raw(23385)[14] (0.000000 sec.)
                          output: -2*v_sep_fold_right_1143_sep_15_sep_3_sep_26_sep_1_sep_32_sep_0 <= 0
                          
                        end CsisatInterface.interpolate_csisat_log(23384)[13] (0.000000 sec.)
                        after simplification: -2*v_sep_fold_right_1143_sep_15_sep_3_sep_26_sep_1_sep_32_sep_0 <= 0
                        after dnf conversion: ((-2*v_sep_fold_right_1143_sep_15_sep_3_sep_26_sep_1_sep_32_sep_0 <= 0))
                        
                      end CsisatInterface.interpolate_csisat_post_process(23383)[12] (0.000000 sec.)
                      
                    end CsisatInterface.interpolate_csisat_wrap(23382)[11] (0.000000 sec.)
                    
                  end InterpProver.interpolate_quick(23373)[10] (0.000000 sec.)
                  
                end InterpProver.interpolate_simplify(23311)[9] (0.000000 sec.)
                
              end InterpProver.interpolate_check(23310)[8] (0.001000 sec.)
              output: (0 <= <<<fold_right_1143@15:3>@26:1>@32:0>)
            end InterpProver.interpolate_log(23309)[7] (0.001000 sec.)
            
          end InterpProver.interpolate_fresh(23308)[6] (0.001000 sec.)
          
        end InterpProver.interpolate(23307)[5] (0.001000 sec.)
        output:
          P[<<<fold_right_1143@15:3>@26:1>@32:0>](<fold_right_1143@15:1>:int,<<fold_right_1143@15:3>@26:0>:int,<<<fold_right_1143@15:3>@26:1>@32:0>:int) =
          (0 <= <<<fold_right_1143@15:3>@26:1>@32:0>)
      end ApronInterface.convex_hull_interpolate(23265)[4] (0.002000 sec.)
      Horn clauses:
        P[<<make_list_1030@8:1>@11:0>](<f_main_2163@20:0>:int,<fold_right_1143@15:1>:int),
        P[<<fold_right_1143@15:3>@26:0>](<fold_right_1143@15:1>:int,<<<fold_right_1143@15:3>@26:1>@32:0>:int),
        P[<fold_right_1143@15:1>](<fold_right_1143@15:1>:int), (0 > <<<fold_right_1143@15:3>@26:1>@32:0>) |- bot
        
        P[<fold_right_1143@15:1>](<fold_right_1143@15:1>:int),
        P[<<<fold_right_1143@15:4>@18:0>@24:0>](<fold_right_1143@15:1>:int,<<fold_right_1143@15:3>@26:0>:int),
        (<fold_right_1143@15:1> = 0)
        |- P[<<fold_right_1143@15:3>@26:0>](<fold_right_1143@15:1>:int,
                                            <<fold_right_1143@15:3>@26:0>:int)
        
        P[<<make_list_1030@8:1>@11:0>](<f_main_2163@20:0>:int,<fold_right_1143@15:1>:int),
        P[<fold_right_1143@15:1>](<fold_right_1143@15:1>:int), (<<<fold_right_1143@15:4>@18:0>@24:0> = 0)
        |- P[<<<fold_right_1143@15:4>@18:0>@24:0>](<fold_right_1143@15:1>:int,
                                                   <<<fold_right_1143@15:4>@18:0>@24:0>:int)
        
        P[<<make_list_1030@8:1>@11:0>](<f_main_2161@13:0>:int,<fold_right_1143@15:1>:int)|- P[<fold_right_1143@15:1>](
        <fold_right_1143@15:1>:int)
        
        P[<make_list_1030@8:0>](<make_list_1030@8:0>:int),
        ((<<make_list_1030@8:1>@11:0> = 0) && (<make_list_1030@8:0> <= 0))
        |- P[<<make_list_1030@8:1>@11:0>](<make_list_1030@8:0>:int,<<make_list_1030@8:1>@11:0>:int)
        
        |- P[<make_list_1030@8:0>](<make_list_1030@8:0>:int)
      lower bounds:
        P[<make_list_1030@8:0>](<make_list_1030@8:0>:int) = true
        P[<<make_list_1030@8:1>@11:0>](<make_list_1030@8:0>:int,<<make_list_1030@8:1>@11:0>:int) =
        ((<<make_list_1030@8:1>@11:0> = 0) && (<make_list_1030@8:0> <= 0))
        P[<fold_right_1143@15:1>](<fold_right_1143@15:1>:int) = (<fold_right_1143@15:1> = 0)
        P[<<<fold_right_1143@15:4>@18:0>@24:0>](<fold_right_1143@15:1>:int,<<<fold_right_1143@15:4>@18:0>@24:0>:int) =
        ((<<<fold_right_1143@15:4>@18:0>@24:0> = 0) && (<fold_right_1143@15:1> = 0))
        P[<<fold_right_1143@15:3>@26:0>](<fold_right_1143@15:1>:int,<<fold_right_1143@15:3>@26:0>:int) =
        ((<<fold_right_1143@15:3>@26:0> = 0) && (<fold_right_1143@15:1> = 0))
      upper bounds:
        P[<<fold_right_1143@15:3>@26:0>](var27:int,var28:int) = ((var27 <> 0) || (0 <= var28))
      begin GenHcSolver.classify_pids(25108)[4]
        output:
          [<<fold_right_1143@15:3>@26:0>]
      end GenHcSolver.classify_pids(25108)[4] (0.000000 sec.)
      lb:((<<fold_right_1143@15:3>@26:0> = 0) && (<fold_right_1143@15:1> = 0))
      nub:(not ((<fold_right_1143@15:1> <> 0) || (0 <= <<fold_right_1143@15:3>@26:0>)))
      begin ApronInterface.convex_hull_interpolate(25111)[4]
        lb:((<<fold_right_1143@15:3>@26:0> = 0) && (<fold_right_1143@15:1> = 0))
        nub:(not ((<fold_right_1143@15:1> <> 0) || (0 <= <<fold_right_1143@15:3>@26:0>)))
        begin ExtFormula.Formula.case_analysis_boolean(25119)[5]
          ts: ((<<fold_right_1143@15:3>@26:0> = 0) && (<fold_right_1143@15:1> = 0))
          
        end ExtFormula.Formula.case_analysis_boolean(25119)[5] (0.000000 sec.)
        begin ExtFormula.Formula.case_analysis_boolean(25133)[5]
          ts: ((<fold_right_1143@15:1> = 0) && (0 > <<fold_right_1143@15:3>@26:0>))
          
        end ExtFormula.Formula.case_analysis_boolean(25133)[5] (0.000000 sec.)
        lb':((<<fold_right_1143@15:3>@26:0> = 0) && (<fold_right_1143@15:1> = 0))
        nub':((<fold_right_1143@15:1> = 0) && ((-1 + (-1 * <<fold_right_1143@15:3>@26:0>)) >= 0))
        begin InterpProver.interpolate(25138)[5]
          begin InterpProver.interpolate_fresh(25139)[6]
            begin InterpProver.interpolate_log(25140)[7]
              input1: ((<<fold_right_1143@15:3>@26:0> = 0) && (<fold_right_1143@15:1> = 0))
              input2: ((<fold_right_1143@15:1> = 0) && ((-1 + (-1 * <<fold_right_1143@15:3>@26:0>)) >= 0))
              begin InterpProver.interpolate_check(25141)[8]
                begin InterpProver.interpolate_simplify(25142)[9]
                  begin InterpProver.interpolate_quick(25185)[10]
                    begin CsisatInterface.interpolate_csisat_wrap(25194)[11]
                      begin CsisatInterface.interpolate_csisat_post_process(25195)[12]
                        begin CsisatInterface.interpolate_csisat_log(25196)[13]
                          input1: (0 = v_sep_fold_right_1143_sep_15_sep_1 & 0 = v_sep_fold_right_1143_sep_15_sep_3_sep_26_sep_0)
                          input2: (0 = v_sep_fold_right_1143_sep_15_sep_1 & (1 + v_sep_fold_right_1143_sep_15_sep_3_sep_26_sep_0) <= 0)
                          begin CsisatInterface.interpolate_csisat_raw(25197)[14]
                            
                          end CsisatInterface.interpolate_csisat_raw(25197)[14] (0.000000 sec.)
                          output: -2*v_sep_fold_right_1143_sep_15_sep_3_sep_26_sep_0 <= 0
                          
                        end CsisatInterface.interpolate_csisat_log(25196)[13] (0.000000 sec.)
                        after simplification: -2*v_sep_fold_right_1143_sep_15_sep_3_sep_26_sep_0 <= 0
                        after dnf conversion: ((-2*v_sep_fold_right_1143_sep_15_sep_3_sep_26_sep_0 <= 0))
                        
                      end CsisatInterface.interpolate_csisat_post_process(25195)[12] (0.000000 sec.)
                      
                    end CsisatInterface.interpolate_csisat_wrap(25194)[11] (0.000000 sec.)
                    
                  end InterpProver.interpolate_quick(25185)[10] (0.000000 sec.)
                  
                end InterpProver.interpolate_simplify(25142)[9] (0.000000 sec.)
                
              end InterpProver.interpolate_check(25141)[8] (0.001000 sec.)
              output: (0 <= <<fold_right_1143@15:3>@26:0>)
            end InterpProver.interpolate_log(25140)[7] (0.001000 sec.)
            
          end InterpProver.interpolate_fresh(25139)[6] (0.001000 sec.)
          
        end InterpProver.interpolate(25138)[5] (0.001000 sec.)
        output:
          P[<<fold_right_1143@15:3>@26:0>](<fold_right_1143@15:1>:int,<<fold_right_1143@15:3>@26:0>:int) =
          (0 <= <<fold_right_1143@15:3>@26:0>)
      end ApronInterface.convex_hull_interpolate(25111)[4] (0.001000 sec.)
      Horn clauses:
        P[<fold_right_1143@15:1>](0:int),
        P[<<<fold_right_1143@15:4>@18:0>@24:0>](0:int,<<fold_right_1143@15:3>@26:0>:int),
        (0 > <<fold_right_1143@15:3>@26:0>) |- bot
        
        P[<<make_list_1030@8:1>@11:0>](<f_main_2163@20:0>:int,<fold_right_1143@15:1>:int),
        P[<fold_right_1143@15:1>](<fold_right_1143@15:1>:int), (<<<fold_right_1143@15:4>@18:0>@24:0> = 0)
        |- P[<<<fold_right_1143@15:4>@18:0>@24:0>](<fold_right_1143@15:1>:int,
                                                   <<<fold_right_1143@15:4>@18:0>@24:0>:int)
        
        P[<<make_list_1030@8:1>@11:0>](<f_main_2161@13:0>:int,<fold_right_1143@15:1>:int)|- P[<fold_right_1143@15:1>](
        <fold_right_1143@15:1>:int)
        
        P[<make_list_1030@8:0>](<make_list_1030@8:0>:int),
        ((<<make_list_1030@8:1>@11:0> = 0) && (<make_list_1030@8:0> <= 0))
        |- P[<<make_list_1030@8:1>@11:0>](<make_list_1030@8:0>:int,<<make_list_1030@8:1>@11:0>:int)
        
        |- P[<make_list_1030@8:0>](<make_list_1030@8:0>:int)
      lower bounds:
        P[<make_list_1030@8:0>](<make_list_1030@8:0>:int) = true
        P[<<make_list_1030@8:1>@11:0>](<make_list_1030@8:0>:int,<<make_list_1030@8:1>@11:0>:int) =
        ((<<make_list_1030@8:1>@11:0> = 0) && (<make_list_1030@8:0> <= 0))
        P[<fold_right_1143@15:1>](<fold_right_1143@15:1>:int) = (<fold_right_1143@15:1> = 0)
        P[<<<fold_right_1143@15:4>@18:0>@24:0>](<fold_right_1143@15:1>:int,<<<fold_right_1143@15:4>@18:0>@24:0>:int) =
        ((<<<fold_right_1143@15:4>@18:0>@24:0> = 0) && (<fold_right_1143@15:1> = 0))
      upper bounds:
        P[<<<fold_right_1143@15:4>@18:0>@24:0>](var29:int,var30:int) = ((var29 <> 0) || (0 <= var30))
      begin GenHcSolver.classify_pids(26630)[4]
        output:
          [<<<fold_right_1143@15:4>@18:0>@24:0>]
      end GenHcSolver.classify_pids(26630)[4] (0.000000 sec.)
      lb:((<<<fold_right_1143@15:4>@18:0>@24:0> = 0) && (<fold_right_1143@15:1> = 0))
      nub:(not ((<fold_right_1143@15:1> <> 0) || (0 <= <<<fold_right_1143@15:4>@18:0>@24:0>)))
      begin ApronInterface.convex_hull_interpolate(26633)[4]
        lb:((<<<fold_right_1143@15:4>@18:0>@24:0> = 0) && (<fold_right_1143@15:1> = 0))
        nub:(not ((<fold_right_1143@15:1> <> 0) || (0 <= <<<fold_right_1143@15:4>@18:0>@24:0>)))
        begin ExtFormula.Formula.case_analysis_boolean(26641)[5]
          ts: ((<<<fold_right_1143@15:4>@18:0>@24:0> = 0) && (<fold_right_1143@15:1> = 0))
          
        end ExtFormula.Formula.case_analysis_boolean(26641)[5] (0.000000 sec.)
        begin ExtFormula.Formula.case_analysis_boolean(26655)[5]
          ts: ((<fold_right_1143@15:1> = 0) && (0 > <<<fold_right_1143@15:4>@18:0>@24:0>))
          
        end ExtFormula.Formula.case_analysis_boolean(26655)[5] (0.000000 sec.)
        lb':((<<<fold_right_1143@15:4>@18:0>@24:0> = 0) && (<fold_right_1143@15:1> = 0))
        nub':((<fold_right_1143@15:1> = 0) && ((-1 + (-1 * <<<fold_right_1143@15:4>@18:0>@24:0>)) >= 0))
        begin InterpProver.interpolate(26660)[5]
          begin InterpProver.interpolate_fresh(26661)[6]
            begin InterpProver.interpolate_log(26662)[7]
              input1: ((<<<fold_right_1143@15:4>@18:0>@24:0> = 0) && (<fold_right_1143@15:1> = 0))
              input2: ((<fold_right_1143@15:1> = 0) && ((-1 + (-1 * <<<fold_right_1143@15:4>@18:0>@24:0>)) >= 0))
              begin InterpProver.interpolate_check(26663)[8]
                begin InterpProver.interpolate_simplify(26664)[9]
                  begin InterpProver.interpolate_quick(26707)[10]
                    begin CsisatInterface.interpolate_csisat_wrap(26716)[11]
                      begin CsisatInterface.interpolate_csisat_post_process(26717)[12]
                        begin CsisatInterface.interpolate_csisat_log(26718)[13]
                          input1: (0 = v_sep_fold_right_1143_sep_15_sep_1 & 0 = v_sep_fold_right_1143_sep_15_sep_4_sep_18_sep_0_sep_24_sep_0)
                          input2: (0 = v_sep_fold_right_1143_sep_15_sep_1 & (1 + v_sep_fold_right_1143_sep_15_sep_4_sep_18_sep_0_sep_24_sep_0) <= 0)
                          begin CsisatInterface.interpolate_csisat_raw(26719)[14]
                            
                          end CsisatInterface.interpolate_csisat_raw(26719)[14] (0.000000 sec.)
                          output: -2*v_sep_fold_right_1143_sep_15_sep_4_sep_18_sep_0_sep_24_sep_0 <= 0
                          
                        end CsisatInterface.interpolate_csisat_log(26718)[13] (0.000000 sec.)
                        after simplification: -2*v_sep_fold_right_1143_sep_15_sep_4_sep_18_sep_0_sep_24_sep_0 <= 0
                        after dnf conversion: ((-2*v_sep_fold_right_1143_sep_15_sep_4_sep_18_sep_0_sep_24_sep_0 <= 0))
                        
                      end CsisatInterface.interpolate_csisat_post_process(26717)[12] (0.000000 sec.)
                      
                    end CsisatInterface.interpolate_csisat_wrap(26716)[11] (0.000000 sec.)
                    
                  end InterpProver.interpolate_quick(26707)[10] (0.000000 sec.)
                  
                end InterpProver.interpolate_simplify(26664)[9] (0.000999 sec.)
                
              end InterpProver.interpolate_check(26663)[8] (0.000999 sec.)
              output: (0 <= <<<fold_right_1143@15:4>@18:0>@24:0>)
            end InterpProver.interpolate_log(26662)[7] (0.000999 sec.)
            
          end InterpProver.interpolate_fresh(26661)[6] (0.000999 sec.)
          
        end InterpProver.interpolate(26660)[5] (0.000999 sec.)
        output:
          P[<<<fold_right_1143@15:4>@18:0>@24:0>](<fold_right_1143@15:1>:int,<<<fold_right_1143@15:4>@18:0>@24:0>:int) =
          (0 <= <<<fold_right_1143@15:4>@18:0>@24:0>)
      end ApronInterface.convex_hull_interpolate(26633)[4] (0.000999 sec.)
      Horn clauses:
        P[<<make_list_1030@8:1>@11:0>](<f_main_2161@13:0>:int,<fold_right_1143@15:1>:int)|- P[<fold_right_1143@15:1>](
        <fold_right_1143@15:1>:int)
        
        P[<make_list_1030@8:0>](<make_list_1030@8:0>:int),
        ((<<make_list_1030@8:1>@11:0> = 0) && (<make_list_1030@8:0> <= 0))
        |- P[<<make_list_1030@8:1>@11:0>](<make_list_1030@8:0>:int,<<make_list_1030@8:1>@11:0>:int)
        
        |- P[<make_list_1030@8:0>](<make_list_1030@8:0>:int)
      lower bounds:
        P[<make_list_1030@8:0>](<make_list_1030@8:0>:int) = true
        P[<<make_list_1030@8:1>@11:0>](<make_list_1030@8:0>:int,<<make_list_1030@8:1>@11:0>:int) =
        ((<<make_list_1030@8:1>@11:0> = 0) && (<make_list_1030@8:0> <= 0))
        P[<fold_right_1143@15:1>](<fold_right_1143@15:1>:int) = (<fold_right_1143@15:1> = 0)
      upper bounds:
        P[<fold_right_1143@15:1>](var31:int) = true
      begin GenHcSolver.classify_pids(27544)[4]
        output:
          [<fold_right_1143@15:1>]
      end GenHcSolver.classify_pids(27544)[4] (0.000000 sec.)
      lb:(<fold_right_1143@15:1> = 0)
      nub:false
      begin ApronInterface.convex_hull_interpolate(27547)[4]
        lb:(<fold_right_1143@15:1> = 0)
        nub:false
        begin ExtFormula.Formula.case_analysis_boolean(27551)[5]
          ts: (<fold_right_1143@15:1> = 0)
          
        end ExtFormula.Formula.case_analysis_boolean(27551)[5] (0.000000 sec.)
        begin ExtFormula.Formula.case_analysis_boolean(27557)[5]
          ts: false
          
        end ExtFormula.Formula.case_analysis_boolean(27557)[5] (0.000000 sec.)
        lb':(<fold_right_1143@15:1> = 0)
        nub':(-1 >= 0)
        begin InterpProver.interpolate(27560)[5]
          begin InterpProver.interpolate_fresh(27561)[6]
            begin InterpProver.interpolate_log(27562)[7]
              input1: (<fold_right_1143@15:1> = 0)
              input2: (-1 >= 0)
              begin InterpProver.interpolate_check(27563)[8]
                begin InterpProver.interpolate_simplify(27564)[9]
                  begin InterpProver.interpolate_quick(27584)[10]
                    
                  end InterpProver.interpolate_quick(27584)[10] (0.000000 sec.)
                  
                end InterpProver.interpolate_simplify(27564)[9] (0.000000 sec.)
                
              end InterpProver.interpolate_check(27563)[8] (0.000000 sec.)
              output: true
            end InterpProver.interpolate_log(27562)[7] (0.001000 sec.)
            
          end InterpProver.interpolate_fresh(27561)[6] (0.001000 sec.)
          
        end InterpProver.interpolate(27560)[5] (0.001000 sec.)
        output:
          P[<fold_right_1143@15:1>](<fold_right_1143@15:1>:int) = true
      end ApronInterface.convex_hull_interpolate(27547)[4] (0.001000 sec.)
      Horn clauses:
        P[<make_list_1030@8:0>](<make_list_1030@8:0>:int),
        ((<<make_list_1030@8:1>@11:0> = 0) && (<make_list_1030@8:0> <= 0))
        |- P[<<make_list_1030@8:1>@11:0>](<make_list_1030@8:0>:int,<<make_list_1030@8:1>@11:0>:int)
        
        |- P[<make_list_1030@8:0>](<make_list_1030@8:0>:int)
      lower bounds:
        P[<make_list_1030@8:0>](<make_list_1030@8:0>:int) = true
        P[<<make_list_1030@8:1>@11:0>](<make_list_1030@8:0>:int,<<make_list_1030@8:1>@11:0>:int) =
        ((<<make_list_1030@8:1>@11:0> = 0) && (<make_list_1030@8:0> <= 0))
      upper bounds:
        P[<<make_list_1030@8:1>@11:0>](var32:int,var33:int) = true
      begin GenHcSolver.classify_pids(28141)[4]
        output:
          [<<make_list_1030@8:1>@11:0>]
      end GenHcSolver.classify_pids(28141)[4] (0.000000 sec.)
      lb:((<<make_list_1030@8:1>@11:0> = 0) && (<make_list_1030@8:0> <= 0))
      nub:false
      begin ApronInterface.convex_hull_interpolate(28144)[4]
        lb:((<<make_list_1030@8:1>@11:0> = 0) && (<make_list_1030@8:0> <= 0))
        nub:false
        begin ExtFormula.Formula.case_analysis_boolean(28154)[5]
          ts: ((<<make_list_1030@8:1>@11:0> = 0) && (<make_list_1030@8:0> <= 0))
          
        end ExtFormula.Formula.case_analysis_boolean(28154)[5] (0.000000 sec.)
        begin ExtFormula.Formula.case_analysis_boolean(28161)[5]
          ts: false
          
        end ExtFormula.Formula.case_analysis_boolean(28161)[5] (0.000000 sec.)
        lb':((<<make_list_1030@8:1>@11:0> = 0) && ((-1 * <make_list_1030@8:0>) >= 0))
        nub':(-1 >= 0)
        begin InterpProver.interpolate(28164)[5]
          begin InterpProver.interpolate_fresh(28165)[6]
            begin InterpProver.interpolate_log(28166)[7]
              input1: ((<<make_list_1030@8:1>@11:0> = 0) && ((-1 * <make_list_1030@8:0>) >= 0))
              input2: (-1 >= 0)
              begin InterpProver.interpolate_check(28167)[8]
                begin InterpProver.interpolate_simplify(28168)[9]
                  begin InterpProver.interpolate_quick(28201)[10]
                    
                  end InterpProver.interpolate_quick(28201)[10] (0.000000 sec.)
                  
                end InterpProver.interpolate_simplify(28168)[9] (0.000000 sec.)
                
              end InterpProver.interpolate_check(28167)[8] (0.000000 sec.)
              output: true
            end InterpProver.interpolate_log(28166)[7] (0.001000 sec.)
            
          end InterpProver.interpolate_fresh(28165)[6] (0.001000 sec.)
          
        end InterpProver.interpolate(28164)[5] (0.001000 sec.)
        output:
          P[<<make_list_1030@8:1>@11:0>](<make_list_1030@8:0>:int,<<make_list_1030@8:1>@11:0>:int) = true
      end ApronInterface.convex_hull_interpolate(28144)[4] (0.001000 sec.)
      Horn clauses:
        |- P[<make_list_1030@8:0>](<make_list_1030@8:0>:int)
      lower bounds:
        P[<make_list_1030@8:0>](<make_list_1030@8:0>:int) = true
      upper bounds:
        P[<make_list_1030@8:0>](var34:int) = true
      begin GenHcSolver.classify_pids(28454)[4]
        output:
          [<make_list_1030@8:0>]
      end GenHcSolver.classify_pids(28454)[4] (0.000000 sec.)
      lb:true
      nub:false
      begin ApronInterface.convex_hull_interpolate(28457)[4]
        lb:true
        nub:false
        begin ExtFormula.Formula.case_analysis_boolean(28460)[5]
          ts: true
          
        end ExtFormula.Formula.case_analysis_boolean(28460)[5] (0.000000 sec.)
        begin ExtFormula.Formula.case_analysis_boolean(28465)[5]
          ts: false
          
        end ExtFormula.Formula.case_analysis_boolean(28465)[5] (0.000000 sec.)
        lb':true
        nub':(-1 >= 0)
        begin InterpProver.interpolate(28468)[5]
          begin InterpProver.interpolate_fresh(28469)[6]
            begin InterpProver.interpolate_log(28470)[7]
              input1: true
              input2: (-1 >= 0)
              begin InterpProver.interpolate_check(28471)[8]
                begin InterpProver.interpolate_simplify(28472)[9]
                  begin InterpProver.interpolate_quick(28486)[10]
                    
                  end InterpProver.interpolate_quick(28486)[10] (0.000000 sec.)
                  
                end InterpProver.interpolate_simplify(28472)[9] (0.000000 sec.)
                
              end InterpProver.interpolate_check(28471)[8] (0.000000 sec.)
              output: true
            end InterpProver.interpolate_log(28470)[7] (0.000000 sec.)
            
          end InterpProver.interpolate_fresh(28469)[6] (0.000000 sec.)
          
        end InterpProver.interpolate(28468)[5] (0.000000 sec.)
        output:
          P[<make_list_1030@8:0>](<make_list_1030@8:0>:int) = true
      end ApronInterface.convex_hull_interpolate(28457)[4] (0.000000 sec.)
      begin HcSolver.check_validity(28543)[4]
        input:
          P[<fail_2169@41:0>](<fail_2169@41:0>:bool)|- bot
          
          P[<<<<fold_right_1143@15:4>@18:0>@24:1>@34:0>](<f_main_2164@38:1>:int,0:int,<f_main_2164@38:3>:int),
          P[<<make_list_1030@8:1>@11:0>](<f_main_2164@38:0>:int,<f_main_2164@38:1>:int),
          ((<f_main_2164@38:3> < 0) && <fail_2169@41:0>) |- P[<fail_2169@41:0>](
          <fail_2169@41:0>:bool)
          
          P[<fold_right_1143@15:1>](<fold_right_1143@15:1>:int),
          P[<<<fold_right_1143@15:3>@26:1>@32:0>](<fold_right_1143@15:1>:int,<<<fold_right_1143@15:4>@18:0>@24:0>:int,<<<<fold_right_1143@15:4>@18:0>@24:1>@34:0>:int),
          (<fold_right_1143@15:1> = 0)
          |- P[<<<<fold_right_1143@15:4>@18:0>@24:1>@34:0>](<fold_right_1143@15:1>:int,
                                                            <<<fold_right_1143@15:4>@18:0>@24:0>:int,
                                                            <<<<fold_right_1143@15:4>@18:0>@24:1>@34:0>:int)
          
          P[<<make_list_1030@8:1>@11:0>](<f_main_2163@20:0>:int,<fold_right_1143@15:1>:int),
          P[<<fold_right_1143@15:3>@26:0>](<fold_right_1143@15:1>:int,<<fold_right_1143@15:3>@26:0>:int),
          P[<fold_right_1143@15:1>](<fold_right_1143@15:1>:int),
          (<<<fold_right_1143@15:3>@26:1>@32:0> = <<fold_right_1143@15:3>@26:0>)
          |- P[<<<fold_right_1143@15:3>@26:1>@32:0>](<fold_right_1143@15:1>:int,
                                                     <<fold_right_1143@15:3>@26:0>:int,
                                                     <<<fold_right_1143@15:3>@26:1>@32:0>:int)
          
          P[<fold_right_1143@15:1>](<fold_right_1143@15:1>:int),
          P[<<<fold_right_1143@15:4>@18:0>@24:0>](<fold_right_1143@15:1>:int,<<fold_right_1143@15:3>@26:0>:int),
          (<fold_right_1143@15:1> = 0)
          |- P[<<fold_right_1143@15:3>@26:0>](<fold_right_1143@15:1>:int,
                                              <<fold_right_1143@15:3>@26:0>:int)
          
          P[<<make_list_1030@8:1>@11:0>](<f_main_2163@20:0>:int,<fold_right_1143@15:1>:int),
          P[<fold_right_1143@15:1>](<fold_right_1143@15:1>:int), (<<<fold_right_1143@15:4>@18:0>@24:0> = 0)
          |- P[<<<fold_right_1143@15:4>@18:0>@24:0>](<fold_right_1143@15:1>:int,
                                                     <<<fold_right_1143@15:4>@18:0>@24:0>:int)
          
          P[<<make_list_1030@8:1>@11:0>](<f_main_2161@13:0>:int,<fold_right_1143@15:1>:int)|- P[<fold_right_1143@15:1>](
          <fold_right_1143@15:1>:int)
          
          P[<make_list_1030@8:0>](<make_list_1030@8:0>:int),
          ((<<make_list_1030@8:1>@11:0> = 0) && (<make_list_1030@8:0> <= 0))
          |- P[<<make_list_1030@8:1>@11:0>](<make_list_1030@8:0>:int,
                                            <<make_list_1030@8:1>@11:0>:int)
          
          |- P[<make_list_1030@8:0>](<make_list_1030@8:0>:int)
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        
      end HcSolver.check_validity(28543)[4] (0.003000 sec.)
      solution:
        P[<fail_2169@41:0>](<fail_2169@41:0>:bool) = false
        P[<<<<fold_right_1143@15:4>@18:0>@24:1>@34:0>](<fold_right_1143@15:1>:int,<<<fold_right_1143@15:4>@18:0>@24:0>:int,<<<<fold_right_1143@15:4>@18:0>@24:1>@34:0>:int) =
        (0 <= <<<<fold_right_1143@15:4>@18:0>@24:1>@34:0>)
        P[<<<fold_right_1143@15:3>@26:1>@32:0>](<fold_right_1143@15:1>:int,<<fold_right_1143@15:3>@26:0>:int,<<<fold_right_1143@15:3>@26:1>@32:0>:int) =
        (0 <= <<<fold_right_1143@15:3>@26:1>@32:0>)
        P[<<fold_right_1143@15:3>@26:0>](<fold_right_1143@15:1>:int,<<fold_right_1143@15:3>@26:0>:int) =
        (0 <= <<fold_right_1143@15:3>@26:0>)
        P[<<<fold_right_1143@15:4>@18:0>@24:0>](<fold_right_1143@15:1>:int,<<<fold_right_1143@15:4>@18:0>@24:0>:int) =
        (0 <= <<<fold_right_1143@15:4>@18:0>@24:0>)
        P[<fold_right_1143@15:1>](<fold_right_1143@15:1>:int) = true
        P[<<make_list_1030@8:1>@11:0>](<make_list_1030@8:0>:int,<<make_list_1030@8:1>@11:0>:int) = true
        P[<make_list_1030@8:0>](<make_list_1030@8:0>:int) = true
    end GenHcSolver.solve(15478)[3] (0.080987 sec.)
    begin YhornInterface.solve(29110)[3]
      begin HcSolver.solve_ub(29111)[4]
        encoded:
          P[<fail_2169@41:0>](<fail_2169@41:0>:int)|- bot
          
          P[<<<<fold_right_1143@15:4>@18:0>@24:1>@34:0>](<f_main_2164@38:1>:int,0:int,<f_main_2164@38:3>:int),
          P[<<make_list_1030@8:1>@11:0>](<f_main_2164@38:0>:int,<f_main_2164@38:1>:int),
          ((<f_main_2164@38:3> < 0) && (<fail_2169@41:0> = 1)) |- P[<fail_2169@41:0>](
          <fail_2169@41:0>:int)
          
          P[<fold_right_1143@15:1>](<fold_right_1143@15:1>:int),
          P[<<<fold_right_1143@15:3>@26:1>@32:0>](<fold_right_1143@15:1>:int,<<<fold_right_1143@15:4>@18:0>@24:0>:int,<<<<fold_right_1143@15:4>@18:0>@24:1>@34:0>:int),
          (<fold_right_1143@15:1> = 0)
          |- P[<<<<fold_right_1143@15:4>@18:0>@24:1>@34:0>](<fold_right_1143@15:1>:int,
                                                            <<<fold_right_1143@15:4>@18:0>@24:0>:int,
                                                            <<<<fold_right_1143@15:4>@18:0>@24:1>@34:0>:int)
          
          P[<<make_list_1030@8:1>@11:0>](<f_main_2163@20:0>:int,<fold_right_1143@15:1>:int),
          P[<<fold_right_1143@15:3>@26:0>](<fold_right_1143@15:1>:int,<<fold_right_1143@15:3>@26:0>:int),
          P[<fold_right_1143@15:1>](<fold_right_1143@15:1>:int),
          (<<<fold_right_1143@15:3>@26:1>@32:0> = <<fold_right_1143@15:3>@26:0>)
          |- P[<<<fold_right_1143@15:3>@26:1>@32:0>](<fold_right_1143@15:1>:int,
                                                     <<fold_right_1143@15:3>@26:0>:int,
                                                     <<<fold_right_1143@15:3>@26:1>@32:0>:int)
          
          P[<fold_right_1143@15:1>](<fold_right_1143@15:1>:int),
          P[<<<fold_right_1143@15:4>@18:0>@24:0>](<fold_right_1143@15:1>:int,<<fold_right_1143@15:3>@26:0>:int),
          (<fold_right_1143@15:1> = 0)
          |- P[<<fold_right_1143@15:3>@26:0>](<fold_right_1143@15:1>:int,
                                              <<fold_right_1143@15:3>@26:0>:int)
          
          P[<<make_list_1030@8:1>@11:0>](<f_main_2163@20:0>:int,<fold_right_1143@15:1>:int),
          P[<fold_right_1143@15:1>](<fold_right_1143@15:1>:int), (<<<fold_right_1143@15:4>@18:0>@24:0> = 0)
          |- P[<<<fold_right_1143@15:4>@18:0>@24:0>](<fold_right_1143@15:1>:int,
                                                     <<<fold_right_1143@15:4>@18:0>@24:0>:int)
          
          P[<<make_list_1030@8:1>@11:0>](<f_main_2161@13:0>:int,<fold_right_1143@15:1>:int)|- P[<fold_right_1143@15:1>](
          <fold_right_1143@15:1>:int)
          
          P[<make_list_1030@8:0>](<make_list_1030@8:0>:int),
          ((<<make_list_1030@8:1>@11:0> = 0) && (<make_list_1030@8:0> <= 0))
          |- P[<<make_list_1030@8:1>@11:0>](<make_list_1030@8:0>:int,
                                            <<make_list_1030@8:1>@11:0>:int)
          
          |- P[<make_list_1030@8:0>](<make_list_1030@8:0>:int)
        input to Yhorn:
          P[<fail_2169@41:0>](<fail_2169@41:0>:int)|- bot
          
          P[<<<<fold_right_1143@15:4>@18:0>@24:1>@34:0>](<f_main_2164@38:1>:int,var35:int,<f_main_2164@38:3>:int),
          P[<<make_list_1030@8:1>@11:0>](<f_main_2164@38:0>:int,<f_main_2164@38:1>:int),
          ((<f_main_2164@38:3> < 0) && ((var35 = 0) && (<fail_2169@41:0> = 1)))
          |- P[<fail_2169@41:0>](<fail_2169@41:0>:int)
          
          P[<fold_right_1143@15:1>](<fold_right_1143@15:1>:int),
          P[<<<fold_right_1143@15:3>@26:1>@32:0>](<fold_right_1143@15:1>:int,<<<fold_right_1143@15:4>@18:0>@24:0>:int,<<<<fold_right_1143@15:4>@18:0>@24:1>@34:0>:int),
          (<fold_right_1143@15:1> = 0)
          |- P[<<<<fold_right_1143@15:4>@18:0>@24:1>@34:0>](<fold_right_1143@15:1>:int,
                                                            <<<fold_right_1143@15:4>@18:0>@24:0>:int,
                                                            <<<<fold_right_1143@15:4>@18:0>@24:1>@34:0>:int)
          
          P[<<make_list_1030@8:1>@11:0>](<f_main_2163@20:0>:int,<fold_right_1143@15:1>:int),
          P[<<fold_right_1143@15:3>@26:0>](<fold_right_1143@15:1>:int,<<fold_right_1143@15:3>@26:0>:int),
          P[<fold_right_1143@15:1>](<fold_right_1143@15:1>:int),
          (<<<fold_right_1143@15:3>@26:1>@32:0> = <<fold_right_1143@15:3>@26:0>)
          |- P[<<<fold_right_1143@15:3>@26:1>@32:0>](<fold_right_1143@15:1>:int,
                                                     <<fold_right_1143@15:3>@26:0>:int,
                                                     <<<fold_right_1143@15:3>@26:1>@32:0>:int)
          
          P[<fold_right_1143@15:1>](<fold_right_1143@15:1>:int),
          P[<<<fold_right_1143@15:4>@18:0>@24:0>](<fold_right_1143@15:1>:int,<<fold_right_1143@15:3>@26:0>:int),
          (<fold_right_1143@15:1> = 0)
          |- P[<<fold_right_1143@15:3>@26:0>](<fold_right_1143@15:1>:int,
                                              <<fold_right_1143@15:3>@26:0>:int)
          
          P[<<make_list_1030@8:1>@11:0>](<f_main_2163@20:0>:int,<fold_right_1143@15:1>:int),
          P[<fold_right_1143@15:1>](<fold_right_1143@15:1>:int), (<<<fold_right_1143@15:4>@18:0>@24:0> = 0)
          |- P[<<<fold_right_1143@15:4>@18:0>@24:0>](<fold_right_1143@15:1>:int,
                                                     <<<fold_right_1143@15:4>@18:0>@24:0>:int)
          
          P[<<make_list_1030@8:1>@11:0>](<f_main_2161@13:0>:int,<fold_right_1143@15:1>:int)|- P[<fold_right_1143@15:1>](
          <fold_right_1143@15:1>:int)
          
          P[<make_list_1030@8:0>](<make_list_1030@8:0>:int),
          ((<make_list_1030@8:0> <= 0) && (<<make_list_1030@8:1>@11:0> = 0))
          |- P[<<make_list_1030@8:1>@11:0>](<make_list_1030@8:0>:int,
                                            <<make_list_1030@8:1>@11:0>:int)
          Yhorn (Wed Sep 25 10:52:05 JST 2013)


(0=0) & (v_sep_fail_2169_sep_41_sep_0($15)) -> 1=0.
(($15-1=0) & ($16=0) & ($17<0)) & (v_sep_make_list_1030_sep_8_sep_1_sep_11_sep_0($18,$19)) & (v_sep_fold_right_1143_sep_15_sep_4_sep_18_sep_0_sep_24_sep_1_sep_34_sep_0($19,$16,$17)) -> v_sep_fail_2169_sep_41_sep_0($15).
($20=0) & (v_sep_fold_right_1143_sep_15_sep_3_sep_26_sep_1_sep_32_sep_0($20,$21,$22)) & (v_sep_fold_right_1143_sep_15_sep_1($20)) -> v_sep_fold_right_1143_sep_15_sep_4_sep_18_sep_0_sep_24_sep_1_sep_34_sep_0($20,$21,$22).
($23-$24=0) & (v_sep_fold_right_1143_sep_15_sep_1($20)) & (v_sep_fold_right_1143_sep_15_sep_3_sep_26_sep_0($20,$24)) & (v_sep_make_list_1030_sep_8_sep_1_sep_11_sep_0($25,$20)) -> v_sep_fold_right_1143_sep_15_sep_3_sep_26_sep_1_sep_32_sep_0($20,$24,$23).
($20=0) & (v_sep_fold_right_1143_sep_15_sep_4_sep_18_sep_0_sep_24_sep_0($20,$24)) & (v_sep_fold_right_1143_sep_15_sep_1($20)) -> v_sep_fold_right_1143_sep_15_sep_3_sep_26_sep_0($20,$24).
($21=0) & (v_sep_fold_right_1143_sep_15_sep_1($20)) & (v_sep_make_list_1030_sep_8_sep_1_sep_11_sep_0($25,$20)) -> v_sep_fold_right_1143_sep_15_sep_4_sep_18_sep_0_sep_24_sep_0($20,$21).
(0=0) & (v_sep_make_list_1030_sep_8_sep_1_sep_11_sep_0($26,$20)) -> v_sep_fold_right_1143_sep_15_sep_1($20).
(($27=0) & ($28<=0)) & (v_sep_make_list_1030_sep_8_sep_0($28)) -> v_sep_make_list_1030_sep_8_sep_1_sep_11_sep_0($28,$27).
0=0 -> v_sep_make_list_1030_sep_8_sep_0($28).


v_sep_fail_2169_sep_41_sep_0: X
v_sep_fold_right_1143_sep_15_sep_1: X
v_sep_fold_right_1143_sep_15_sep_3_sep_26_sep_0: X
v_sep_fold_right_1143_sep_15_sep_3_sep_26_sep_1_sep_32_sep_0: X
v_sep_fold_right_1143_sep_15_sep_4_sep_18_sep_0_sep_24_sep_0: X
v_sep_fold_right_1143_sep_15_sep_4_sep_18_sep_0_sep_24_sep_1_sep_34_sep_0: X
v_sep_make_list_1030_sep_8_sep_0: X
v_sep_make_list_1030_sep_8_sep_1_sep_11_sep_0: X
...............
v_sep_fail_2169_sep_41_sep_0: X
v_sep_fold_right_1143_sep_15_sep_1: X
v_sep_fold_right_1143_sep_15_sep_3_sep_26_sep_0: X
v_sep_fold_right_1143_sep_15_sep_3_sep_26_sep_1_sep_32_sep_0: X
v_sep_fold_right_1143_sep_15_sep_4_sep_18_sep_0_sep_24_sep_0: X
v_sep_fold_right_1143_sep_15_sep_4_sep_18_sep_0_sep_24_sep_1_sep_34_sep_0: X
v_sep_make_list_1030_sep_8_sep_0: X
v_sep_make_list_1030_sep_8_sep_1_sep_11_sep_0: X
....
v_sep_fail_2169_sep_41_sep_0: X
v_sep_fold_right_1143_sep_15_sep_1: X
v_sep_fold_right_1143_sep_15_sep_3_sep_26_sep_0: X
v_sep_fold_right_1143_sep_15_sep_3_sep_26_sep_1_sep_32_sep_0: X
v_sep_fold_right_1143_sep_15_sep_4_sep_18_sep_0_sep_24_sep_0: X
v_sep_fold_right_1143_sep_15_sep_4_sep_18_sep_0_sep_24_sep_1_sep_34_sep_0: X
v_sep_make_list_1030_sep_8_sep_0: X
v_sep_make_list_1030_sep_8_sep_1_sep_11_sep_0: X
.......
v_sep_fail_2169_sep_41_sep_0: X
v_sep_fold_right_1143_sep_15_sep_1: X
v_sep_fold_right_1143_sep_15_sep_3_sep_26_sep_0: X
v_sep_fold_right_1143_sep_15_sep_3_sep_26_sep_1_sep_32_sep_0: X
v_sep_fold_right_1143_sep_15_sep_4_sep_18_sep_0_sep_24_sep_0: X
v_sep_fold_right_1143_sep_15_sep_4_sep_18_sep_0_sep_24_sep_1_sep_34_sep_0: X
v_sep_make_list_1030_sep_8_sep_0: X
v_sep_make_list_1030_sep_8_sep_1_sep_11_sep_0: X
...........
v_sep_fail_2169_sep_41_sep_0: X
v_sep_fold_right_1143_sep_15_sep_1: X
v_sep_fold_right_1143_sep_15_sep_3_sep_26_sep_0: X
v_sep_fold_right_1143_sep_15_sep_3_sep_26_sep_1_sep_32_sep_0: X
v_sep_fold_right_1143_sep_15_sep_4_sep_18_sep_0_sep_24_sep_0: X
v_sep_fold_right_1143_sep_15_sep_4_sep_18_sep_0_sep_24_sep_1_sep_34_sep_0: X
v_sep_make_list_1030_sep_8_sep_0: X
v_sep_make_list_1030_sep_8_sep_1_sep_11_sep_0: X
.............
v_sep_fail_2169_sep_41_sep_0: X
v_sep_fold_right_1143_sep_15_sep_1: X
v_sep_fold_right_1143_sep_15_sep_3_sep_26_sep_0: X
v_sep_fold_right_1143_sep_15_sep_3_sep_26_sep_1_sep_32_sep_0: X
v_sep_fold_right_1143_sep_15_sep_4_sep_18_sep_0_sep_24_sep_0: X
v_sep_fold_right_1143_sep_15_sep_4_sep_18_sep_0_sep_24_sep_1_sep_34_sep_0: X
v_sep_make_list_1030_sep_8_sep_0: X
v_sep_make_list_1030_sep_8_sep_1_sep_11_sep_0: X
...............(0=0) & (v_sep_fail_2169_sep_41_sep_0($15)) -> 1=0.
(($15-1=0) & ($16=0) & ($17<0)) & (v_sep_make_list_1030_sep_8_sep_1_sep_11_sep_0($18,$19)) & (v_sep_fold_right_1143_sep_15_sep_4_sep_18_sep_0_sep_24_sep_1_sep_34_sep_0($19,$16,$17)) -> v_sep_fail_2169_sep_41_sep_0($15).
($20=0) & (v_sep_fold_right_1143_sep_15_sep_3_sep_26_sep_1_sep_32_sep_0($20,$21,$22)) & (v_sep_fold_right_1143_sep_15_sep_1($20)) -> v_sep_fold_right_1143_sep_15_sep_4_sep_18_sep_0_sep_24_sep_1_sep_34_sep_0($20,$21,$22).
($23-$24=0) & (v_sep_fold_right_1143_sep_15_sep_1($20)) & (v_sep_fold_right_1143_sep_15_sep_3_sep_26_sep_0($20,$24)) & (v_sep_make_list_1030_sep_8_sep_1_sep_11_sep_0($25,$20)) -> v_sep_fold_right_1143_sep_15_sep_3_sep_26_sep_1_sep_32_sep_0($20,$24,$23).
($20=0) & (v_sep_fold_right_1143_sep_15_sep_4_sep_18_sep_0_sep_24_sep_0($20,$24)) & (v_sep_fold_right_1143_sep_15_sep_1($20)) -> v_sep_fold_right_1143_sep_15_sep_3_sep_26_sep_0($20,$24).
($21=0) & (v_sep_fold_right_1143_sep_15_sep_1($20)) & (v_sep_make_list_1030_sep_8_sep_1_sep_11_sep_0($25,$20)) -> v_sep_fold_right_1143_sep_15_sep_4_sep_18_sep_0_sep_24_sep_0($20,$21).
(0=0) & (v_sep_make_list_1030_sep_8_sep_1_sep_11_sep_0($26,$20)) -> v_sep_fold_right_1143_sep_15_sep_1($20).
(($27=0) & ($28<=0)) & (v_sep_make_list_1030_sep_8_sep_0($28)) -> v_sep_make_list_1030_sep_8_sep_1_sep_11_sep_0($28,$27).
0=0 -> v_sep_make_list_1030_sep_8_sep_0($28).

          |- P[<make_list_1030@8:0>](<make_list_1030@8:0>:int)
        solution:
          P[<fail_2169@41:0>]($29:bool) = false
          P[<fold_right_1143@15:1>]($51:int) = true
          P[<<fold_right_1143@15:3>@26:0>]($54:int,$56:int) = true
          P[<<<fold_right_1143@15:3>@26:1>@32:0>]($44:int,$46:int,$48:int) = ($46 <= $48)
          P[<<<fold_right_1143@15:4>@18:0>@24:0>]($59:int,$61:int) = true
          P[<<<<fold_right_1143@15:4>@18:0>@24:1>@34:0>]($37:int,$39:int,$41:int) = ($39 <= $41)
          P[<make_list_1030@8:0>]($64:int) = true
          P[<<make_list_1030@8:1>@11:0>]($32:int,$34:int) = true
        
      end HcSolver.solve_ub(29111)[4] (0.039994 sec.)
      begin HcSolver.check_validity(29296)[4]
        input:
          P[<fail_2169@41:0>](<fail_2169@41:0>:bool)|- bot
          
          P[<<<<fold_right_1143@15:4>@18:0>@24:1>@34:0>](<f_main_2164@38:1>:int,0:int,<f_main_2164@38:3>:int),
          P[<<make_list_1030@8:1>@11:0>](<f_main_2164@38:0>:int,<f_main_2164@38:1>:int),
          ((<f_main_2164@38:3> < 0) && <fail_2169@41:0>) |- P[<fail_2169@41:0>](
          <fail_2169@41:0>:bool)
          
          P[<fold_right_1143@15:1>](<fold_right_1143@15:1>:int),
          P[<<<fold_right_1143@15:3>@26:1>@32:0>](<fold_right_1143@15:1>:int,<<<fold_right_1143@15:4>@18:0>@24:0>:int,<<<<fold_right_1143@15:4>@18:0>@24:1>@34:0>:int),
          (<fold_right_1143@15:1> = 0)
          |- P[<<<<fold_right_1143@15:4>@18:0>@24:1>@34:0>](<fold_right_1143@15:1>:int,
                                                            <<<fold_right_1143@15:4>@18:0>@24:0>:int,
                                                            <<<<fold_right_1143@15:4>@18:0>@24:1>@34:0>:int)
          
          P[<<make_list_1030@8:1>@11:0>](<f_main_2163@20:0>:int,<fold_right_1143@15:1>:int),
          P[<<fold_right_1143@15:3>@26:0>](<fold_right_1143@15:1>:int,<<fold_right_1143@15:3>@26:0>:int),
          P[<fold_right_1143@15:1>](<fold_right_1143@15:1>:int),
          (<<<fold_right_1143@15:3>@26:1>@32:0> = <<fold_right_1143@15:3>@26:0>)
          |- P[<<<fold_right_1143@15:3>@26:1>@32:0>](<fold_right_1143@15:1>:int,
                                                     <<fold_right_1143@15:3>@26:0>:int,
                                                     <<<fold_right_1143@15:3>@26:1>@32:0>:int)
          
          P[<fold_right_1143@15:1>](<fold_right_1143@15:1>:int),
          P[<<<fold_right_1143@15:4>@18:0>@24:0>](<fold_right_1143@15:1>:int,<<fold_right_1143@15:3>@26:0>:int),
          (<fold_right_1143@15:1> = 0)
          |- P[<<fold_right_1143@15:3>@26:0>](<fold_right_1143@15:1>:int,
                                              <<fold_right_1143@15:3>@26:0>:int)
          
          P[<<make_list_1030@8:1>@11:0>](<f_main_2163@20:0>:int,<fold_right_1143@15:1>:int),
          P[<fold_right_1143@15:1>](<fold_right_1143@15:1>:int), (<<<fold_right_1143@15:4>@18:0>@24:0> = 0)
          |- P[<<<fold_right_1143@15:4>@18:0>@24:0>](<fold_right_1143@15:1>:int,
                                                     <<<fold_right_1143@15:4>@18:0>@24:0>:int)
          
          P[<<make_list_1030@8:1>@11:0>](<f_main_2161@13:0>:int,<fold_right_1143@15:1>:int)|- P[<fold_right_1143@15:1>](
          <fold_right_1143@15:1>:int)
          
          P[<make_list_1030@8:0>](<make_list_1030@8:0>:int),
          ((<<make_list_1030@8:1>@11:0> = 0) && (<make_list_1030@8:0> <= 0))
          |- P[<<make_list_1030@8:1>@11:0>](<make_list_1030@8:0>:int,
                                            <<make_list_1030@8:1>@11:0>:int)
          
          |- P[<make_list_1030@8:0>](<make_list_1030@8:0>:int)
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        
      end HcSolver.check_validity(29296)[4] (0.003000 sec.)
      solution:
        P[<fail_2169@41:0>]($29:bool) = false
        P[<fold_right_1143@15:1>]($51:int) = true
        P[<<fold_right_1143@15:3>@26:0>]($54:int,$56:int) = true
        P[<<<fold_right_1143@15:3>@26:1>@32:0>]($44:int,$46:int,$48:int) = ($46 <= $48)
        P[<<<fold_right_1143@15:4>@18:0>@24:0>]($59:int,$61:int) = true
        P[<<<<fold_right_1143@15:4>@18:0>@24:1>@34:0>]($37:int,$39:int,$41:int) = ($39 <= $41)
        P[<make_list_1030@8:0>]($64:int) = true
        P[<<make_list_1030@8:1>@11:0>]($32:int,$34:int) = true
    end YhornInterface.solve(29110)[3] (0.042994 sec.)
    
  end RefTypeInfer.infer_etrs(189)[2] (0.208968 sec.)
  refinement types:
    main_2152: X
    f_2165: v1:int -> X
    main_1043: v1:int -> (v2:unit -> X) -> X
    make_list_1030: v1:int -> (v2:int -> (v3:int -> ((v4:int -> (v5:int -> X) -> X) -> X) -> X) -> X) -> X
    f_main_2161: v1:int -> (v2:unit -> X) -> v4:int -> (v5:int -> ((v6:int -> (v7:int -> X) -> X) -> X) -> X) -> X
    fold_right_1143: ((v1:int -> (v2:int -> X) -> X) -> (v5:int -> (v6:int -> X) -> X) -> v9:int -> (v10:int -> X) -> X)
                     ->
                     v13:int ->
                     (v14:int -> ((v15:int -> (v16:int -> X) -> X) -> X) -> X) ->
                     (v21:{v21:int | (0 <= v21)} -> (v22:{v22:int | (0 <= v22)} -> X) -> X) ->
                     ((v25:{v25:int | (0 <= v25)} -> (v26:{v26:int | (0 <= v26)} -> X) -> X) -> X) -> X
    f_main_2163: v1:int -> v2:int -> (v3:unit -> X) -> (v5:int -> (v6:int -> X) -> X) -> X
    f_main_2162: v1:int -> v2:int -> v3:int -> (v4:int -> X) -> X
    f_main_2164: v1:int -> v2:int -> (v3:unit -> X) -> v5:int -> X
    fail_2169: v1:{v1:bool | false} -> (v2:unit -> X) -> X
    br_fold_right_2167: var109:bool ->
                        ((var108:int -> (var107:int -> X) -> X) ->
                         (var104:int -> (var103:int -> X) -> X) -> var100:int -> (var99:int -> X) -> X) ->
                        var96:int ->
                        (var95:int -> ((var94:int -> (var93:int -> X) -> X) -> X) -> X) ->
                        (var88:int -> (var87:int -> X) -> X) -> ((var84:int -> (var83:int -> X) -> X) -> X) -> X
    compose_1142: (var121:int -> (var120:int -> X) -> X) ->
                  (var117:int -> (var116:int -> X) -> X) -> var113:int -> (var112:int -> X) -> X
    cons_make_list_1161: var144:int ->
                         (var143:int -> (var142:int -> X) -> X) ->
                         var139:int ->
                         (var138:int -> ((var137:int -> (var136:int -> X) -> X) -> X) -> X) ->
                         (var131:int -> (var130:int -> ((var129:int -> (var128:int -> X) -> X) -> X) -> X) -> X) -> X
    f_2166: var147:int -> var146:unit -> X
    f_compose_2160: var156:int -> (var155:int -> (var154:int -> X) -> X) -> (var151:int -> X) -> var149:int -> X
    f_cons_make_list_2154: var176:int ->
                           var175:int ->
                           (var174:int -> (var173:int -> X) -> X) ->
                           (var170:int -> ((var169:int -> (var168:int -> X) -> X) -> X) -> X) ->
                           var163:int -> ((var162:int -> (var161:int -> X) -> X) -> X) -> X
    f_fold_right_2157: var210:int ->
                       ((var209:int -> (var208:int -> X) -> X) ->
                        (var205:int -> (var204:int -> X) -> X) -> var201:int -> (var200:int -> X) -> X) ->
                       (var197:int -> (var196:int -> X) -> X) ->
                       ((var193:int -> (var192:int -> X) -> X) -> X) ->
                       (var188:int -> ((var187:int -> (var186:int -> X) -> X) -> X) -> X) ->
                       (var181:int -> (var180:int -> X) -> X) -> X
    f_fold_right_2158: var225:int ->
                       (var224:int -> ((var223:int -> (var222:int -> X) -> X) -> X) -> X) ->
                       var217:int -> ((var216:int -> (var215:int -> X) -> X) -> X) -> X
    f_fold_right_2159: var252:int ->
                       ((var251:int -> (var250:int -> X) -> X) ->
                        (var247:int -> (var246:int -> X) -> X) -> var243:int -> (var242:int -> X) -> X) ->
                       ((var239:int -> (var238:int -> X) -> X) -> X) ->
                       (var234:int -> (var233:int -> X) -> X) -> (var230:int -> (var229:int -> X) -> X) -> X
    f_make_list_2153: var260:int -> var259:int -> ((var258:int -> (var257:int -> X) -> X) -> X) -> X
    f_make_list_2155: var279:int ->
                      (var278:int -> (var277:int -> ((var276:int -> (var275:int -> X) -> X) -> X) -> X) -> X) ->
                      var269:int -> (var268:int -> ((var267:int -> (var266:int -> X) -> X) -> X) -> X) -> X
    f_make_list_2156: var285:int -> var284:int -> var283:int -> (var282:int -> X) -> X
  abstraction types:
    main_2152: X
    f_2165: v1:int -> X
    main_1043: v1:int -> (v2:unit -> X) -> X
    make_list_1030: v1:int -> (v2:int -> (v3:int -> ((v4:int -> (v5:int -> X) -> X) -> X) -> X) -> X) -> X
    f_main_2161: v1:int -> (v2:unit -> X) -> v4:int -> (v5:int -> ((v6:int -> (v7:int -> X) -> X) -> X) -> X) -> X
    fold_right_1143: ((v1:int -> (v2:int -> X) -> X) -> (v5:int -> (v6:int -> X) -> X) -> v9:int -> (v10:int -> X) -> X)
                     ->
                     v13:int ->
                     (v14:int -> ((v15:int -> (v16:int -> X) -> X) -> X) -> X) ->
                     (v21:int[v21 -> (0 <= v21)] -> (v22:int[v22 -> (
                                                             0 <= v22)] -> X) -> X) ->
                     ((v25:int[v25 -> (0 <= v25)] -> (v26:int[v26 -> (
                                                              0 <= v26)] -> X) -> X) -> X) -> X
    f_main_2163: v1:int -> v2:int -> (v3:unit -> X) -> (v5:int -> (v6:int -> X) -> X) -> X
    f_main_2162: v1:int -> v2:int -> v3:int -> (v4:int -> X) -> X
    f_main_2164: v1:int -> v2:int -> (v3:unit -> X) -> v5:int -> X
    fail_2169: v1:bool -> (v2:unit -> X) -> X
    br_fold_right_2167: var109:bool ->
                        ((var108:int -> (var107:int -> X) -> X) ->
                         (var104:int -> (var103:int -> X) -> X) -> var100:int -> (var99:int -> X) -> X) ->
                        var96:int ->
                        (var95:int -> ((var94:int -> (var93:int -> X) -> X) -> X) -> X) ->
                        (var88:int -> (var87:int -> X) -> X) -> ((var84:int -> (var83:int -> X) -> X) -> X) -> X
    compose_1142: (var121:int -> (var120:int -> X) -> X) ->
                  (var117:int -> (var116:int -> X) -> X) -> var113:int -> (var112:int -> X) -> X
    cons_make_list_1161: var144:int ->
                         (var143:int -> (var142:int -> X) -> X) ->
                         var139:int ->
                         (var138:int -> ((var137:int -> (var136:int -> X) -> X) -> X) -> X) ->
                         (var131:int -> (var130:int -> ((var129:int -> (var128:int -> X) -> X) -> X) -> X) -> X) -> X
    f_2166: var147:int -> var146:unit -> X
    f_compose_2160: var156:int -> (var155:int -> (var154:int -> X) -> X) -> (var151:int -> X) -> var149:int -> X
    f_cons_make_list_2154: var176:int ->
                           var175:int ->
                           (var174:int -> (var173:int -> X) -> X) ->
                           (var170:int -> ((var169:int -> (var168:int -> X) -> X) -> X) -> X) ->
                           var163:int -> ((var162:int -> (var161:int -> X) -> X) -> X) -> X
    f_fold_right_2157: var210:int ->
                       ((var209:int -> (var208:int -> X) -> X) ->
                        (var205:int -> (var204:int -> X) -> X) -> var201:int -> (var200:int -> X) -> X) ->
                       (var197:int -> (var196:int -> X) -> X) ->
                       ((var193:int -> (var192:int -> X) -> X) -> X) ->
                       (var188:int -> ((var187:int -> (var186:int -> X) -> X) -> X) -> X) ->
                       (var181:int -> (var180:int -> X) -> X) -> X
    f_fold_right_2158: var225:int ->
                       (var224:int -> ((var223:int -> (var222:int -> X) -> X) -> X) -> X) ->
                       var217:int -> ((var216:int -> (var215:int -> X) -> X) -> X) -> X
    f_fold_right_2159: var252:int ->
                       ((var251:int -> (var250:int -> X) -> X) ->
                        (var247:int -> (var246:int -> X) -> X) -> var243:int -> (var242:int -> X) -> X) ->
                       ((var239:int -> (var238:int -> X) -> X) -> X) ->
                       (var234:int -> (var233:int -> X) -> X) -> (var230:int -> (var229:int -> X) -> X) -> X
    f_make_list_2153: var260:int -> var259:int -> ((var258:int -> (var257:int -> X) -> X) -> X) -> X
    f_make_list_2155: var279:int ->
                      (var278:int -> (var277:int -> ((var276:int -> (var275:int -> X) -> X) -> X) -> X) -> X) ->
                      var269:int -> (var268:int -> ((var267:int -> (var266:int -> X) -> X) -> X) -> X) -> X
    f_make_list_2156: var285:int -> var284:int -> var283:int -> (var282:int -> X) -> X
  
end AbsTypeInfer.refine(188)[1] (0.219967 sec.)
DONE!

Prefix of spurious counter-example::
0; 0; 0; 0; 0; 0; 0; 0; 1

Program with abstraction types (CEGAR-cycle 1)::
Main: main_2152
  main_2152 -> (rand_int f_2165)
  br_fold_right_2167 b_2168 f_1034 xs1_1035 xs2_1035 init_1036 k_fold_right_1623 when b_2168 ->
      (xs2_1035 0 (f_fold_right_2157 xs1_1035 f_1034 init_1036 k_fold_right_1623 xs2_1035))
  br_fold_right_2167 b_2168 f_1034 xs1_1035 xs2_1035 init_1036 k_fold_right_1623 when (not b_2168) -> _|_
  compose_1142 f_1040 g_1041 x_1042 k_compose_1904 -> (g_1041 x_1042 (f_compose_2160 x_1042 f_1040 k_compose_1904))
  cons_make_list_1161 n_1031 x_1158 xs1_1159 xs2_1159 k_make_list_cons_make_list_1364 ->
      (k_make_list_cons_make_list_1364 (xs1_1159 + 1) (f_cons_make_list_2154 n_1031 xs1_1159 x_1158 xs2_1159))
  f_2165 x_2096 -> (main_1043 x_2096 (f_2166 x_2096))
  f_2166 x_2096 x_2093 -> end
  f_compose_2160 x_1042 f_1040 k_compose_1904 x_1924 -> (f_1040 x_1924 k_compose_1904)
  f_cons_make_list_2154 n_1031 xs1_1159 x_1158 xs2_1159 i_1157 k_make_list_cons_make_list_1391 when (
      i_1157 = 0) -> (k_make_list_cons_make_list_1391 x_1158)
  f_cons_make_list_2154 n_1031 xs1_1159 x_1158 xs2_1159 i_1157 k_make_list_cons_make_list_1391 when (
      not (i_1157 = 0)) -> (xs2_1159 (i_1157 - 1) k_make_list_cons_make_list_1391)
  f_fold_right_2157 xs1_1035 f_1034 init_1036 k_fold_right_1623 xs2_1035 x_1718 ->
      (fold_right_1143 f_1034 (xs1_1035 - 1) (f_fold_right_2158 xs1_1035 xs2_1035) init_1036
        (f_fold_right_2159 xs1_1035 f_1034 k_fold_right_1623 x_1718))
  f_fold_right_2158 xs1_1035 xs2_1035 x_1174 k_fold_right_xs'_1689 -> (xs2_1035 (x_1174 + 1) k_fold_right_xs'_1689)
  f_fold_right_2159 xs1_1035 f_1034 k_fold_right_1623 x_1718 x_1841 -> (k_fold_right_1623 (f_1034 x_1718 x_1841))
  f_main_2161 n_1044 k_main_1938 x1_1947 x2_1947 ->
      (fold_right_1143 compose_1142 x1_1947 x2_1947 (f_main_2162 n_1044 x1_1947)
        (f_main_2163 n_1044 x1_1947 k_main_1938))
  f_main_2162 n_1044 x1_1947 x_1047 k_main_f_2046 -> (k_main_f_2046 x_1047)
  f_main_2163 n_1044 x1_1947 k_main_1938 x_1993 -> (x_1993 0 (f_main_2164 n_1044 x1_1947 k_main_1938))
  f_main_2164 n_1044 x1_1947 k_main_1938 x_2068 when (x_2068 >= 0) -> (k_main_1938 ())
  f_main_2164 n_1044 x1_1947 k_main_1938 x_2068 when (not (x_2068 >= 0)) -> (fail_2169 true k_main_1938)
  f_make_list_2153 n_1031 x_1165 k_make_list_1275 -> _|_
  f_make_list_2155 n_1031 k_make_list_1254 x1_1501 x2_1501 ->
      (cons_make_list_1161 n_1031 (f_make_list_2156 n_1031 x1_1501) x1_1501 x2_1501 k_make_list_1254)
  f_make_list_2156 n_1031 x1_1501 m_1032 k_make_list_1442 -> (k_make_list_1442 (n_1031 + m_1032))
  fail_2169 b k -> {fail} => (k ())
  fold_right_1143 f_1034 xs1_1035 xs2_1035 init_1036 k_fold_right_1623 when (
      xs1_1035 = 0) -> (k_fold_right_1623 init_1036)
  fold_right_1143 f_1034 xs1_1035 xs2_1035 init_1036 k_fold_right_1623 when (
      not (xs1_1035 = 0)) -> (br_fold_right_2167 (1 <= xs1_1035) f_1034 xs1_1035 xs2_1035 init_1036 k_fold_right_1623)
  main_1043 n_1044 k_main_1938 -> (make_list_1030 n_1044 (f_main_2161 n_1044 k_main_1938))
  make_list_1030 n_1031 k_make_list_1254 when (n_1031 <= 0) -> (k_make_list_1254 0 (f_make_list_2153 n_1031))
  make_list_1030 n_1031 k_make_list_1254 when (not (n_1031 <= 0)) ->
      (make_list_1030 (n_1031 - 1) (f_make_list_2155 n_1031 k_make_list_1254))
Types:
  main_2152 : X
  fail_2169 : (x_1:bool[x_1] -> (unit -> X) -> X)
  fold_right_1143 : (((int -> (int -> X) -> X) -> (int -> (int -> X) -> X) -> int -> (int -> X) -> X) ->
                     int ->
                     (int -> ((int -> (int -> X) -> X) -> X) -> X) ->
                     (x_32:int[x_32 >= 0] -> (x_34:int[x_34 >= 0] -> X) -> X) ->
                     ((x_39:int[x_39 >= 0] -> (x_41:int[x_41 >= 0] -> X) -> X) -> X) -> X)
  make_list_1030 : (int -> (int -> (int -> ((int -> (int -> X) -> X) -> X) -> X) -> X) -> X)
  
(1-1) Abstracting ... DONE!

(1-2) Checking HORS ... DONE!

Error trace::
  main_2152 ... --> 
  f_2165 ... --> 
  main_1043 ... --> 
  make_list_1030 [2/2] ... --> 
  make_list_1030 [1/2] ... --> 
  f_make_list_2155 ... --> 
  cons_make_list_1161 ... --> 
  f_main_2161 ... --> 
  fold_right_1143 [2/2] ... --> 
  br_fold_right_2167 [1/2] ... --> 
  f_cons_make_list_2154 [1/2] ... --> 
  f_fold_right_2157 ... --> 
  fold_right_1143 [1/2] ... --> 
  f_fold_right_2159 ... --> 
  f_main_2163 ... --> 
  compose_1142 ... --> 
  f_main_2162 ... --> 
  f_compose_2160 ... --> 
  f_make_list_2156 ... --> 
  f_main_2164 [2/2] ... --> 
  fail_2169 ... --> fail -->
  ERROR!

Spurious counter-example::
  0; 0; 0; 1; 0; 0; 0; 0; 1; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 1; 0

(1-3) Checking counter-example ... DONE!

(1-4) Discovering predicates ... 
begin AbsTypeInfer.refine(30290)[1]
  program:
    main_2152  | true = ((Random.int 0) f_2165)
    br_fold_right_2167 b_2168 f_1034 xs1_1035 xs2_1035 init_1036 k_fold_right_1623 | b_2168 = (
    xs2_1035 0
             (f_fold_right_2157 xs1_1035
                                f_1034
                                init_1036
                                k_fold_right_1623
                                xs2_1035))
    br_fold_right_2167 b_2168 f_1034 xs1_1035 xs2_1035 init_1036 k_fold_right_1623 | (
    not b_2168) = bot
    compose_1142 f_1040 g_1041 x_1042 k_compose_1904 | true = (g_1041
                                                                 x_1042
                                                                 (f_compose_2160 x_1042
                                                                    f_1040
                                                                    k_compose_1904))
    cons_make_list_1161 n_1031 x_1158 xs1_1159 xs2_1159 k_make_list_cons_make_list_1364 | true = (
    k_make_list_cons_make_list_1364 (xs1_1159 + 1)
                                    (f_cons_make_list_2154 n_1031
                                                           xs1_1159
                                                           x_1158
                                                           xs2_1159))
    f_2165 x_2096 | true = (main_1043 x_2096
                                      (f_2166 x_2096))
    f_2166 x_2096 x_2093 | true = end
    f_compose_2160 x_1042 f_1040 k_compose_1904 x_1924 | true = (f_1040 x_1924
                                                                    k_compose_1904)
    f_cons_make_list_2154 n_1031 xs1_1159 x_1158 xs2_1159 i_1157 k_make_list_cons_make_list_1391 | (
    i_1157 = 0) = (k_make_list_cons_make_list_1391 x_1158)
    f_cons_make_list_2154 n_1031 xs1_1159 x_1158 xs2_1159 i_1157 k_make_list_cons_make_list_1391 | (
    not (i_1157 = 0)) = (xs2_1159 (i_1157 - 1)
                                  k_make_list_cons_make_list_1391)
    f_fold_right_2157 xs1_1035 f_1034 init_1036 k_fold_right_1623 xs2_1035 x_1718 | true = (
    fold_right_1143
      f_1034
      (xs1_1035 - 1)
      (f_fold_right_2158 xs1_1035
                         xs2_1035)
      init_1036
      (f_fold_right_2159 xs1_1035
                         f_1034
                         k_fold_right_1623
                         x_1718))
    f_fold_right_2158 xs1_1035 xs2_1035 x_1174 k_fold_right_xs'_1689 | true = (
    xs2_1035 (x_1174 + 1)
             k_fold_right_xs'_1689)
    f_fold_right_2159 xs1_1035 f_1034 k_fold_right_1623 x_1718 x_1841 | true = (
    k_fold_right_1623 (f_1034 x_1718
                              x_1841))
    f_main_2161 n_1044 k_main_1938 x1_1947 x2_1947 | true = (fold_right_1143
                                                               compose_1142
                                                               x1_1947
                                                               x2_1947
                                                               (f_main_2162 n_1044
                                                                    x1_1947)
                                                               (f_main_2163 n_1044
                                                                    x1_1947
                                                                    k_main_1938))
    f_main_2162 n_1044 x1_1947 x_1047 k_main_f_2046 | true = (k_main_f_2046 x_1047)
    f_main_2163 n_1044 x1_1947 k_main_1938 x_1993 | true = (x_1993 0
                                                                   (f_main_2164 n_1044
                                                                    x1_1947
                                                                    k_main_1938))
    f_main_2164 n_1044 x1_1947 k_main_1938 x_2068 | (x_2068 >= 0) = (
    k_main_1938 ())
    f_main_2164 n_1044 x1_1947 k_main_1938 x_2068 | (not (x_2068 >= 0)) = (
    fail_2169 true
              k_main_1938)
    f_make_list_2153 n_1031 x_1165 k_make_list_1275 | true = bot
    f_make_list_2155 n_1031 k_make_list_1254 x1_1501 x2_1501 | true = (
    cons_make_list_1161 n_1031
                        (f_make_list_2156 n_1031
                                          x1_1501)
                        x1_1501
                        x2_1501
                        k_make_list_1254)
    f_make_list_2156 n_1031 x1_1501 m_1032 k_make_list_1442 | true = (
    k_make_list_1442 (n_1031 + m_1032))
    fail_2169 b k | true = (fail ())
    fold_right_1143 f_1034 xs1_1035 xs2_1035 init_1036 k_fold_right_1623 | (
    xs1_1035 = 0) = (k_fold_right_1623 init_1036)
    fold_right_1143 f_1034 xs1_1035 xs2_1035 init_1036 k_fold_right_1623 | (
    not (xs1_1035 = 0)) = (br_fold_right_2167 (1 <= xs1_1035)
                                              f_1034
                                              xs1_1035
                                              xs2_1035
                                              init_1036
                                              k_fold_right_1623)
    main_1043 n_1044 k_main_1938 | true = (make_list_1030 n_1044
                                                          (f_main_2161 n_1044
                                                                    k_main_1938))
    make_list_1030 n_1031 k_make_list_1254 | (n_1031 <= 0) = (k_make_list_1254 0
                                                                    (f_make_list_2153 n_1031))
    make_list_1030 n_1031 k_make_list_1254 | (not (n_1031 <= 0)) = (make_list_1030
                                                                    (
                                                                    n_1031 - 1)
                                                                    (
                                                                    f_make_list_2155 n_1031
                                                                    k_make_list_1254))
    main_2152:X
    br_fold_right_2167:bool ->
                       ((int -> (int -> X) -> X) -> (int -> (int -> X) -> X) -> int -> (int -> X) -> X) ->
                       int ->
                       (int -> ((int -> (int -> X) -> X) -> X) -> X) ->
                       (int -> (int -> X) -> X) -> ((int -> (int -> X) -> X) -> X) -> X
    compose_1142:(int -> (int -> X) -> X) -> (int -> (int -> X) -> X) -> int -> (int -> X) -> X
    cons_make_list_1161:int ->
                        (int -> (int -> X) -> X) ->
                        int ->
                        (int -> ((int -> (int -> X) -> X) -> X) -> X) ->
                        (int -> (int -> ((int -> (int -> X) -> X) -> X) -> X) -> X) -> X
    f_2165:int -> X
    f_2166:int -> unit -> X
    f_compose_2160:int -> (int -> (int -> X) -> X) -> (int -> X) -> int -> X
    f_cons_make_list_2154:int ->
                          int ->
                          (int -> (int -> X) -> X) ->
                          (int -> ((int -> (int -> X) -> X) -> X) -> X) -> int -> ((int -> (int -> X) -> X) -> X) -> X
    f_fold_right_2157:int ->
                      ((int -> (int -> X) -> X) -> (int -> (int -> X) -> X) -> int -> (int -> X) -> X) ->
                      (int -> (int -> X) -> X) ->
                      ((int -> (int -> X) -> X) -> X) ->
                      (int -> ((int -> (int -> X) -> X) -> X) -> X) -> (int -> (int -> X) -> X) -> X
    f_fold_right_2158:int ->
                      (int -> ((int -> (int -> X) -> X) -> X) -> X) -> int -> ((int -> (int -> X) -> X) -> X) -> X
    f_fold_right_2159:int ->
                      ((int -> (int -> X) -> X) -> (int -> (int -> X) -> X) -> int -> (int -> X) -> X) ->
                      ((int -> (int -> X) -> X) -> X) -> (int -> (int -> X) -> X) -> (int -> (int -> X) -> X) -> X
    f_main_2161:int -> (unit -> X) -> int -> (int -> ((int -> (int -> X) -> X) -> X) -> X) -> X
    f_main_2162:int -> int -> int -> (int -> X) -> X
    f_main_2163:int -> int -> (unit -> X) -> (int -> (int -> X) -> X) -> X
    f_main_2164:int -> int -> (unit -> X) -> int -> X
    f_make_list_2153:int -> int -> ((int -> (int -> X) -> X) -> X) -> X
    f_make_list_2155:int ->
                     (int -> (int -> ((int -> (int -> X) -> X) -> X) -> X) -> X) ->
                     int -> (int -> ((int -> (int -> X) -> X) -> X) -> X) -> X
    f_make_list_2156:int -> int -> int -> (int -> X) -> X
    fail_2169:bool -> (unit -> X) -> X
    fold_right_1143:((int -> (int -> X) -> X) -> (int -> (int -> X) -> X) -> int -> (int -> X) -> X) ->
                    int ->
                    (int -> ((int -> (int -> X) -> X) -> X) -> X) ->
                    (int -> (int -> X) -> X) -> ((int -> (int -> X) -> X) -> X) -> X
    main_1043:int -> (unit -> X) -> X
    make_list_1030:int -> (int -> (int -> ((int -> (int -> X) -> X) -> X) -> X) -> X) -> X
  inlined functions: br_fold_right_2167,compose_1142,cons_make_list_1161,f_2165,f_2166,f_compose_2160,f_cons_make_list_2154,f_fold_right_2157,f_fold_right_2158,f_fold_right_2159,f_main_2161,f_main_2162,f_main_2163,f_main_2164,f_make_list_2153,f_make_list_2155,f_make_list_2156,main_1043
  counterexample: 0:0:0:1:0:0:0:0:1:0:0:0:0:0:0:0:0:0:0:1:0
  error traces:
    [true.nop(<f_2165@47:0> = var286)
     [true.(<main_1043@49:0> = <f_2165@47:0>)
      [true.(<make_list_1030@51:0> = <main_1043@49:0>)
       [(not (<make_list_1030@51:0> <= 0)).(<make_list_1030@54:0> = (<make_list_1030@51:0> - 1))
        [(<make_list_1030@54:0> <= 0).(<<make_list_1030@54:1>@57:0> = 0)
         [true.
          ((<f_make_list_2155@59:0> = <make_list_1030@51:0>) &&
           (<f_make_list_2155@59:2> = <<make_list_1030@54:1>@57:0>))
          [true.
           ((<cons_make_list_1161@61:0> = <f_make_list_2155@59:0>) &&
            (<cons_make_list_1161@61:2> = <f_make_list_2155@59:2>))
           [true.(<<cons_make_list_1161@61:4>@63:0> = (<cons_make_list_1161@61:2> + 1))
            [true.(<<f_make_list_2155@59:1>@65:0> = <<cons_make_list_1161@61:4>@63:0>)
             [true.(<<make_list_1030@51:1>@67:0> = <<f_make_list_2155@59:1>@65:0>)
              [true.((<f_main_2161@69:0> = <main_1043@49:0>) && (<f_main_2161@69:2> = <<make_list_1030@51:1>@67:0>))
               [true.(<fold_right_1143@71:1> = <f_main_2161@69:2>)
                [(not (<fold_right_1143@71:1> = 0)).
                 ((<br_fold_right_2167@74:0> = (1 <= <fold_right_1143@71:1>)) &&
                  (<br_fold_right_2167@74:2> = <fold_right_1143@71:1>))
                 [<br_fold_right_2167@74:0>.(<<br_fold_right_2167@74:3>@77:0> = 0)
                  [true.(<<fold_right_1143@71:2>@79:0> = <<br_fold_right_2167@74:3>@77:0>)
                   [true.(<<f_main_2161@69:3>@81:0> = <<fold_right_1143@71:2>@79:0>)
                    [true.(<<<make_list_1030@51:1>@67:1>@83:0> = <<f_main_2161@69:3>@81:0>)
                     [true.(<<<f_make_list_2155@59:1>@65:1>@85:0> = <<<make_list_1030@51:1>@67:1>@83:0>)
                      [true.(<<<cons_make_list_1161@61:4>@63:1>@87:0> = <<<f_make_list_2155@59:1>@65:1>@85:0>)
                       [true.
                        ((<f_cons_make_list_2154@89:0> = <cons_make_list_1161@61:0>) &&
                         ((<f_cons_make_list_2154@89:1> = <cons_make_list_1161@61:2>) &&
                          (<f_cons_make_list_2154@89:4> = <<<cons_make_list_1161@61:4>@63:1>@87:0>)))
                        [(<f_cons_make_list_2154@89:4> = 0).true
                         [true.true
                          [true.true
                           [true.true
                            [true.true
                             [true.true
                              [true.true
                               [true.(<f_fold_right_2157@106:0> = <br_fold_right_2167@74:2>)
                                [true.(<fold_right_1143@108:1> = (<f_fold_right_2157@106:0> - 1))
                                 [(<fold_right_1143@108:1> = 0).true
                                  [true.(<f_fold_right_2159@113:0> = <f_fold_right_2157@106:0>)
                                   [true.true
                                    [true.true
                                     [true.true
                                      [true.true
                                       [true.
                                        ((<f_main_2163@123:0> = <f_main_2161@69:0>) &&
                                         (<f_main_2163@123:1> = <f_main_2161@69:2>))
                                        [true.(<<f_main_2163@123:3>@125:0> = 0)
                                         [true.(<<<fold_right_1143@71:4>@121:0>@127:0> = <<f_main_2163@123:3>@125:0>)
                                          [true.
                                           (<<<br_fold_right_2167@74:5>@119:0>@129:0> =
                                            <<<fold_right_1143@71:4>@121:0>@127:0>)
                                           [true.
                                            (<<<f_fold_right_2157@106:3>@117:0>@131:0> =
                                             <<<br_fold_right_2167@74:5>@119:0>@129:0>)
                                            [true.
                                             (<<<f_fold_right_2159@113:2>@115:0>@133:0> =
                                              <<<f_fold_right_2157@106:3>@117:0>@131:0>)
                                             [true.
                                              (<<f_fold_right_2159@113:1>@135:2> =
                                               <<<f_fold_right_2159@113:2>@115:0>@133:0>)
                                              [true.
                                               (<<f_fold_right_2157@106:1>@137:2> = <<f_fold_right_2159@113:1>@135:2>)
                                               [true.
                                                (<<br_fold_right_2167@74:1>@139:2> = <<f_fold_right_2157@106:1>@137:2>)
                                                [true.
                                                 (<<fold_right_1143@71:0>@141:2> = <<br_fold_right_2167@74:1>@139:2>)
                                                 [true.(<compose_1142@143:2> = <<fold_right_1143@71:0>@141:2>)
                                                  [true.(<<compose_1142@143:1>@145:0> = <compose_1142@143:2>)
                                                   [true.
                                                    (<<<fold_right_1143@71:0>@141:1>@147:0> =
                                                     <<compose_1142@143:1>@145:0>)
                                                    [true.
                                                     (<<<br_fold_right_2167@74:1>@139:1>@149:0> =
                                                      <<<fold_right_1143@71:0>@141:1>@147:0>)
                                                     [true.
                                                      (<<<f_fold_right_2157@106:1>@137:1>@151:0> =
                                                       <<<br_fold_right_2167@74:1>@139:1>@149:0>)
                                                      [true.
                                                       (<<<f_fold_right_2159@113:1>@135:1>@153:0> =
                                                        <<<f_fold_right_2157@106:1>@137:1>@151:0>)
                                                       [true.
                                                        (<<f_fold_right_2159@113:4>@155:0> =
                                                         <<<f_fold_right_2159@113:1>@135:1>@153:0>)
                                                        [true.
                                                         (<<<fold_right_1143@108:4>@111:0>@157:0> =
                                                          <<f_fold_right_2159@113:4>@155:0>)
                                                         [true.
                                                          (<<fold_right_1143@108:3>@159:0> =
                                                           <<<fold_right_1143@108:4>@111:0>@157:0>)
                                                          [true.
                                                           (<<f_fold_right_2157@106:2>@161:0> =
                                                            <<fold_right_1143@108:3>@159:0>)
                                                           [true.
                                                            (<<br_fold_right_2167@74:4>@163:0> =
                                                             <<f_fold_right_2157@106:2>@161:0>)
                                                            [true.
                                                             (<<fold_right_1143@71:3>@165:0> =
                                                              <<br_fold_right_2167@74:4>@163:0>)
                                                             [true.
                                                              ((<f_main_2162@167:0> = <f_main_2161@69:0>) &&
                                                               ((<f_main_2162@167:1> = <f_main_2161@69:2>) &&
                                                                (<f_main_2162@167:2> = <<fold_right_1143@71:3>@165:0>)))
                                                              [true.(
                                                               <<f_main_2162@167:3>@169:0> = <f_main_2162@167:2>)
                                                               [true.
                                                                (<<<fold_right_1143@71:3>@165:1>@171:0> =
                                                                 <<f_main_2162@167:3>@169:0>)
                                                                [true.
                                                                 (<<<br_fold_right_2167@74:4>@163:1>@173:0> =
                                                                  <<<fold_right_1143@71:3>@165:1>@171:0>)
                                                                 [true.
                                                                  (<<<f_fold_right_2157@106:2>@161:1>@175:0> =
                                                                   <<<br_fold_right_2167@74:4>@163:1>@173:0>)
                                                                  [true.
                                                                   (<<<fold_right_1143@108:3>@159:1>@177:0> =
                                                                    <<<f_fold_right_2157@106:2>@161:1>@175:0>)
                                                                   [true.
                                                                    (
                                                                    <<<<fold_right_1143@108:4>@111:0>@157:1>@179:0> =
                                                                    <<<fold_right_1143@108:3>@159:1>@177:0>)
                                                                    [
                                                                    true.
                                                                    (
                                                                    <<<f_fold_right_2159@113:4>@155:1>@181:0> =
                                                                    <<<<fold_right_1143@108:4>@111:0>@157:1>@179:0>)
                                                                    [
                                                                    true.
                                                                    (
                                                                    <<<<f_fold_right_2159@113:1>@135:1>@153:1>@183:0> =
                                                                    <<<f_fold_right_2159@113:4>@155:1>@181:0>)
                                                                    [
                                                                    true.
                                                                    (
                                                                    <<<<f_fold_right_2157@106:1>@137:1>@151:1>@185:0> =
                                                                    <<<<f_fold_right_2159@113:1>@135:1>@153:1>@183:0>)
                                                                    [
                                                                    true.
                                                                    (
                                                                    <<<<br_fold_right_2167@74:1>@139:1>@149:1>@187:0> =
                                                                    <<<<f_fold_right_2157@106:1>@137:1>@151:1>@185:0>)
                                                                    [
                                                                    true.
                                                                    (
                                                                    <<<<fold_right_1143@71:0>@141:1>@147:1>@189:0> =
                                                                    <<<<br_fold_right_2167@74:1>@139:1>@149:1>@187:0>)
                                                                    [
                                                                    true.
                                                                    (
                                                                    <<<compose_1142@143:1>@145:1>@191:0> =
                                                                    <<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>)
                                                                    [
                                                                    true.
                                                                    (
                                                                    (
                                                                    <f_compose_2160@193:0> = <compose_1142@143:2>) &&
                                                                    (
                                                                    <f_compose_2160@193:3> =
                                                                    <<<compose_1142@143:1>@145:1>@191:0>))
                                                                    [
                                                                    true.
                                                                    (
                                                                    <<f_compose_2160@193:1>@195:0> =
                                                                    <f_compose_2160@193:3>)
                                                                    [
                                                                    true.
                                                                    (
                                                                    <<compose_1142@143:0>@197:0> =
                                                                    <<f_compose_2160@193:1>@195:0>)
                                                                    [
                                                                    true.
                                                                    (
                                                                    <<<fold_right_1143@71:0>@141:0>@199:0> =
                                                                    <<compose_1142@143:0>@197:0>)
                                                                    [
                                                                    true.
                                                                    (
                                                                    <<<br_fold_right_2167@74:1>@139:0>@201:0> =
                                                                    <<<fold_right_1143@71:0>@141:0>@199:0>)
                                                                    [
                                                                    true.
                                                                    (
                                                                    <<<f_fold_right_2157@106:1>@137:0>@203:0> =
                                                                    <<<br_fold_right_2167@74:1>@139:0>@201:0>)
                                                                    [
                                                                    true.
                                                                    (
                                                                    <<<f_fold_right_2159@113:1>@135:0>@205:0> =
                                                                    <<<f_fold_right_2157@106:1>@137:0>@203:0>)
                                                                    [
                                                                    true.
                                                                    (
                                                                    <<f_fold_right_2159@113:3>@207:0> =
                                                                    <<<f_fold_right_2159@113:1>@135:0>@205:0>)
                                                                    [
                                                                    true.
                                                                    (
                                                                    <<f_fold_right_2157@106:5>@209:0> =
                                                                    <<f_fold_right_2159@113:3>@207:0>)
                                                                    [
                                                                    true.
                                                                    (
                                                                    <<<<br_fold_right_2167@74:3>@77:1>@104:0>@211:0> =
                                                                    <<f_fold_right_2157@106:5>@209:0>)
                                                                    [
                                                                    true.
                                                                    (
                                                                    <<<<fold_right_1143@71:2>@79:1>@102:0>@213:0> =
                                                                    <<<<br_fold_right_2167@74:3>@77:1>@104:0>@211:0>)
                                                                    [
                                                                    true.
                                                                    (
                                                                    <<<<f_main_2161@69:3>@81:1>@100:0>@215:0> =
                                                                    <<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>)
                                                                    [
                                                                    true.
                                                                    (
                                                                    <<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0> =
                                                                    <<<<f_main_2161@69:3>@81:1>@100:0>@215:0>)
                                                                    [
                                                                    true.
                                                                    (
                                                                    <<<<<f_make_list_2155@59:1>@65:1>@85:1>@96:0>@219:0> =
                                                                    <<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>)
                                                                    [
                                                                    true.
                                                                    (
                                                                    <<<<<cons_make_list_1161@61:4>@63:1>@87:1>@94:0>@221:0> =
                                                                    <<<<<f_make_list_2155@59:1>@65:1>@85:1>@96:0>@219:0>)
                                                                    [
                                                                    true.
                                                                    (
                                                                    <<<f_cons_make_list_2154@89:5>@92:0>@223:0> =
                                                                    <<<<<cons_make_list_1161@61:4>@63:1>@87:1>@94:0>@221:0>)
                                                                    [
                                                                    true.
                                                                    (
                                                                    <<f_cons_make_list_2154@89:2>@225:0> =
                                                                    <<<f_cons_make_list_2154@89:5>@92:0>@223:0>)
                                                                    [
                                                                    true.
                                                                    (
                                                                    <<cons_make_list_1161@61:1>@227:0> =
                                                                    <<f_cons_make_list_2154@89:2>@225:0>)
                                                                    [
                                                                    true.
                                                                    (
                                                                    (
                                                                    <f_make_list_2156@229:0> = <f_make_list_2155@59:0>) &&
                                                                    (
                                                                    (
                                                                    <f_make_list_2156@229:1> = <f_make_list_2155@59:2>) &&
                                                                    (
                                                                    <f_make_list_2156@229:2> =
                                                                    <<cons_make_list_1161@61:1>@227:0>)))
                                                                    [
                                                                    true.
                                                                    (
                                                                    <<f_make_list_2156@229:3>@231:0> =
                                                                    (
                                                                    <f_make_list_2156@229:0> + <f_make_list_2156@229:2>))
                                                                    [
                                                                    true.
                                                                    (
                                                                    <<<cons_make_list_1161@61:1>@227:1>@233:0> =
                                                                    <<f_make_list_2156@229:3>@231:0>)
                                                                    [
                                                                    true.
                                                                    (
                                                                    <<<f_cons_make_list_2154@89:2>@225:1>@235:0> =
                                                                    <<<cons_make_list_1161@61:1>@227:1>@233:0>)
                                                                    [
                                                                    true.
                                                                    (
                                                                    <<<<f_cons_make_list_2154@89:5>@92:0>@223:1>@237:0> =
                                                                    <<<f_cons_make_list_2154@89:2>@225:1>@235:0>)
                                                                    [
                                                                    true.
                                                                    (
                                                                    <<<<<<cons_make_list_1161@61:4>@63:1>@87:1>@94:0>@221:1>@239:0> =
                                                                    <<<<f_cons_make_list_2154@89:5>@92:0>@223:1>@237:0>)
                                                                    [
                                                                    true.
                                                                    (
                                                                    <<<<<<f_make_list_2155@59:1>@65:1>@85:1>@96:0>@219:1>@241:0> =
                                                                    <<<<<<cons_make_list_1161@61:4>@63:1>@87:1>@94:0>@221:1>@239:0>)
                                                                    [
                                                                    true.
                                                                    (
                                                                    <<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:1>@243:0> =
                                                                    <<<<<<f_make_list_2155@59:1>@65:1>@85:1>@96:0>@219:1>@241:0>)
                                                                    [
                                                                    true.
                                                                    (
                                                                    <<<<<f_main_2161@69:3>@81:1>@100:0>@215:1>@245:0> =
                                                                    <<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:1>@243:0>)
                                                                    [
                                                                    true.
                                                                    (
                                                                    <<<<<fold_right_1143@71:2>@79:1>@102:0>@213:1>@247:0> =
                                                                    <<<<<f_main_2161@69:3>@81:1>@100:0>@215:1>@245:0>)
                                                                    [
                                                                    true.
                                                                    (
                                                                    <<<<<br_fold_right_2167@74:3>@77:1>@104:0>@211:1>@249:0> =
                                                                    <<<<<fold_right_1143@71:2>@79:1>@102:0>@213:1>@247:0>)
                                                                    [
                                                                    true.
                                                                    (
                                                                    <<<f_fold_right_2157@106:5>@209:1>@251:0> =
                                                                    <<<<<br_fold_right_2167@74:3>@77:1>@104:0>@211:1>@249:0>)
                                                                    [
                                                                    true.
                                                                    (
                                                                    <<<f_fold_right_2159@113:3>@207:1>@253:0> =
                                                                    <<<f_fold_right_2157@106:5>@209:1>@251:0>)
                                                                    [
                                                                    true.
                                                                    (
                                                                    <<<<f_fold_right_2159@113:1>@135:0>@205:1>@255:0> =
                                                                    <<<f_fold_right_2159@113:3>@207:1>@253:0>)
                                                                    [
                                                                    true.
                                                                    (
                                                                    <<<<f_fold_right_2157@106:1>@137:0>@203:1>@257:0> =
                                                                    <<<<f_fold_right_2159@113:1>@135:0>@205:1>@255:0>)
                                                                    [
                                                                    true.
                                                                    (
                                                                    <<<<br_fold_right_2167@74:1>@139:0>@201:1>@259:0> =
                                                                    <<<<f_fold_right_2157@106:1>@137:0>@203:1>@257:0>)
                                                                    [
                                                                    true.
                                                                    (
                                                                    <<<<fold_right_1143@71:0>@141:0>@199:1>@261:0> =
                                                                    <<<<br_fold_right_2167@74:1>@139:0>@201:1>@259:0>)
                                                                    [
                                                                    true.
                                                                    (
                                                                    <<<compose_1142@143:0>@197:1>@263:0> =
                                                                    <<<<fold_right_1143@71:0>@141:0>@199:1>@261:0>)
                                                                    [
                                                                    true.
                                                                    (
                                                                    <<<f_compose_2160@193:1>@195:1>@265:0> =
                                                                    <<<compose_1142@143:0>@197:1>@263:0>)
                                                                    [
                                                                    true.
                                                                    (
                                                                    <<f_compose_2160@193:2>@267:0> =
                                                                    <<<f_compose_2160@193:1>@195:1>@265:0>)
                                                                    [
                                                                    true.
                                                                    (
                                                                    <<compose_1142@143:3>@269:0> =
                                                                    <<f_compose_2160@193:2>@267:0>)
                                                                    [
                                                                    true.
                                                                    (
                                                                    <<<fold_right_1143@71:0>@141:3>@271:0> =
                                                                    <<compose_1142@143:3>@269:0>)
                                                                    [
                                                                    true.
                                                                    (
                                                                    <<<br_fold_right_2167@74:1>@139:3>@273:0> =
                                                                    <<<fold_right_1143@71:0>@141:3>@271:0>)
                                                                    [
                                                                    true.
                                                                    (
                                                                    <<<f_fold_right_2157@106:1>@137:3>@275:0> =
                                                                    <<<br_fold_right_2167@74:1>@139:3>@273:0>)
                                                                    [
                                                                    true.
                                                                    (
                                                                    <<<f_fold_right_2159@113:1>@135:3>@277:0> =
                                                                    <<<f_fold_right_2157@106:1>@137:3>@275:0>)
                                                                    [
                                                                    true.
                                                                    (
                                                                    <<<<f_fold_right_2159@113:2>@115:0>@133:1>@279:0> =
                                                                    <<<f_fold_right_2159@113:1>@135:3>@277:0>)
                                                                    [
                                                                    true.
                                                                    (
                                                                    <<<<f_fold_right_2157@106:3>@117:0>@131:1>@281:0> =
                                                                    <<<<f_fold_right_2159@113:2>@115:0>@133:1>@279:0>)
                                                                    [
                                                                    true.
                                                                    (
                                                                    <<<<br_fold_right_2167@74:5>@119:0>@129:1>@283:0> =
                                                                    <<<<f_fold_right_2157@106:3>@117:0>@131:1>@281:0>)
                                                                    [
                                                                    true.
                                                                    (
                                                                    <<<<fold_right_1143@71:4>@121:0>@127:1>@285:0> =
                                                                    <<<<br_fold_right_2167@74:5>@119:0>@129:1>@283:0>)
                                                                    [
                                                                    true.
                                                                    (
                                                                    <<<f_main_2163@123:3>@125:1>@287:0> =
                                                                    <<<<fold_right_1143@71:4>@121:0>@127:1>@285:0>)
                                                                    [
                                                                    true.
                                                                    (
                                                                    (
                                                                    <f_main_2164@289:0> = <f_main_2163@123:0>) &&
                                                                    (
                                                                    (
                                                                    <f_main_2164@289:1> = <f_main_2163@123:1>) &&
                                                                    (
                                                                    <f_main_2164@289:3> =
                                                                    <<<f_main_2163@123:3>@125:1>@287:0>)))
                                                                    [
                                                                    (
                                                                    not (
                                                                    <f_main_2164@289:3> >= 0)).
                                                                    (
                                                                    <fail_2169@292:0> = true)[
                                                                    true.error
  begin RefTypeInfer.infer_etrs(30291)[2]
    horn clauses:
      P[<fail_2169@292:0>](<fail_2169@292:0>:bool)|- bot
      
      P[<f_main_2164@289:3>](<f_main_2164@289:0>:int,<f_main_2164@289:1>:int,<f_main_2164@289:3>:int),
      ((<f_main_2164@289:3> < 0) && <fail_2169@292:0>) |- P[<fail_2169@292:0>](
      <fail_2169@292:0>:bool)
      
      P[<f_main_2163@123:1>](<f_main_2164@289:0>:int,<f_main_2164@289:1>:int),
      P[<<<f_main_2163@123:3>@125:1>@287:0>](<f_main_2164@289:0>:int,<f_main_2164@289:1>:int,0:int,<f_main_2164@289:3>:int)|- P[<f_main_2164@289:3>](
      <f_main_2164@289:0>:int,<f_main_2164@289:1>:int,<f_main_2164@289:3>:int)
      
      P[<f_main_2161@69:2>](<f_main_2163@123:0>:int,<f_main_2163@123:1>:int),
      P[<<<<fold_right_1143@71:4>@121:0>@127:1>@285:0>](<f_main_2163@123:1>:int,<<f_main_2163@123:3>@125:0>:int,<<<f_main_2163@123:3>@125:1>@287:0>:int),
      P[<f_main_2163@123:1>](<f_main_2163@123:0>:int,<f_main_2163@123:1>:int)|- P[<<<f_main_2163@123:3>@125:1>@287:0>](
      <f_main_2163@123:0>:int,<f_main_2163@123:1>:int,<<f_main_2163@123:3>@125:0>:int,
      <<<f_main_2163@123:3>@125:1>@287:0>:int)
      
      P[<fold_right_1143@71:1>](<fold_right_1143@71:1>:int),
      P[<<<<br_fold_right_2167@74:5>@119:0>@129:1>@283:0>]((1 <= <fold_right_1143@71:1>):bool,<fold_right_1143@71:1>:int,<<<fold_right_1143@71:4>@121:0>@127:0>:int,<<<<fold_right_1143@71:4>@121:0>@127:1>@285:0>:int),
      (<fold_right_1143@71:1> <> 0)
      |- P[<<<<fold_right_1143@71:4>@121:0>@127:1>@285:0>](<fold_right_1143@71:1>:int,
                                                           <<<fold_right_1143@71:4>@121:0>@127:0>:int,
                                                           <<<<fold_right_1143@71:4>@121:0>@127:1>@285:0>:int)
      
      P[<br_fold_right_2167@74:2>](<br_fold_right_2167@74:0>:bool,<br_fold_right_2167@74:2>:int),
      P[<<<<f_fold_right_2157@106:3>@117:0>@131:1>@281:0>](<br_fold_right_2167@74:2>:int,<<<br_fold_right_2167@74:5>@119:0>@129:0>:int,<<<<br_fold_right_2167@74:5>@119:0>@129:1>@283:0>:int),
      <br_fold_right_2167@74:0>
      |- P[<<<<br_fold_right_2167@74:5>@119:0>@129:1>@283:0>](<br_fold_right_2167@74:0>:bool,
                                                              <br_fold_right_2167@74:2>:int,
                                                              <<<br_fold_right_2167@74:5>@119:0>@129:0>:int,
                                                              <<<<br_fold_right_2167@74:5>@119:0>@129:1>@283:0>:int)
      
      P[<f_fold_right_2157@106:0>](<f_fold_right_2157@106:0>:int),
      P[<<<<f_fold_right_2159@113:2>@115:0>@133:1>@279:0>](<f_fold_right_2157@106:0>:int,<<<f_fold_right_2157@106:3>@117:0>@131:0>:int,<<<<f_fold_right_2157@106:3>@117:0>@131:1>@281:0>:int)|- P[<<<<f_fold_right_2157@106:3>@117:0>@131:1>@281:0>](
      <f_fold_right_2157@106:0>:int,<<<f_fold_right_2157@106:3>@117:0>@131:0>:int,
      <<<<f_fold_right_2157@106:3>@117:0>@131:1>@281:0>:int)
      
      P[<f_fold_right_2159@113:0>](<f_fold_right_2159@113:0>:int),
      P[<<<f_fold_right_2159@113:1>@135:3>@277:0>](<f_fold_right_2159@113:0>:int,<<<f_fold_right_2159@113:2>@115:0>@133:0>:int,<<<<f_fold_right_2159@113:2>@115:0>@133:1>@279:0>:int)|- P[<<<<f_fold_right_2159@113:2>@115:0>@133:1>@279:0>](
      <f_fold_right_2159@113:0>:int,<<<f_fold_right_2159@113:2>@115:0>@133:0>:int,
      <<<<f_fold_right_2159@113:2>@115:0>@133:1>@279:0>:int)
      
      P[<f_fold_right_2157@106:0>](<f_fold_right_2159@113:0>:int),
      P[<<<f_fold_right_2157@106:1>@137:3>@275:0>](<f_fold_right_2159@113:0>:int,<<f_fold_right_2159@113:1>@135:2>:int,<<<f_fold_right_2159@113:1>@135:3>@277:0>:int),
      P[<f_fold_right_2159@113:0>](<f_fold_right_2159@113:0>:int)|- P[<<<f_fold_right_2159@113:1>@135:3>@277:0>](
      <f_fold_right_2159@113:0>:int,<<f_fold_right_2159@113:1>@135:2>:int,
      <<<f_fold_right_2159@113:1>@135:3>@277:0>:int)
      
      P[<br_fold_right_2167@74:2>](true:bool,<f_fold_right_2157@106:0>:int),
      P[<<<br_fold_right_2167@74:1>@139:3>@273:0>](true:bool,<<f_fold_right_2157@106:1>@137:2>:int,<<<f_fold_right_2157@106:1>@137:3>@275:0>:int),
      P[<f_fold_right_2157@106:0>](<f_fold_right_2157@106:0>:int)|- P[<<<f_fold_right_2157@106:1>@137:3>@275:0>](
      <f_fold_right_2157@106:0>:int,<<f_fold_right_2157@106:1>@137:2>:int,
      <<<f_fold_right_2157@106:1>@137:3>@275:0>:int)
      
      P[<fold_right_1143@71:1>](<br_fold_right_2167@74:2>:int),
      P[<<<fold_right_1143@71:0>@141:3>@271:0>](<<br_fold_right_2167@74:1>@139:2>:int,<<<br_fold_right_2167@74:1>@139:3>@273:0>:int),
      ((<br_fold_right_2167@74:2> <> 0) && (<br_fold_right_2167@74:0> = (1 <= <br_fold_right_2167@74:2>)))
      |- P[<<<br_fold_right_2167@74:1>@139:3>@273:0>](<br_fold_right_2167@74:0>:bool,
                                                      <<br_fold_right_2167@74:1>@139:2>:int,
                                                      <<<br_fold_right_2167@74:1>@139:3>@273:0>:int)
      
      P[<f_main_2161@69:2>](<f_main_2163@123:0>:int,<fold_right_1143@71:1>:int),
      P[<<compose_1142@143:3>@269:0>](<<fold_right_1143@71:0>@141:2>:int,<<<fold_right_1143@71:0>@141:3>@271:0>:int)|- P[<<<fold_right_1143@71:0>@141:3>@271:0>](
      <<fold_right_1143@71:0>@141:2>:int,<<<fold_right_1143@71:0>@141:3>@271:0>:int)
      
      P[<compose_1142@143:2>](<compose_1142@143:2>:int),
      P[<<f_compose_2160@193:2>@267:0>](<compose_1142@143:2>:int,<<compose_1142@143:3>@269:0>:int)|- P[<<compose_1142@143:3>@269:0>](
      <compose_1142@143:2>:int,<<compose_1142@143:3>@269:0>:int)
      
      P[<f_compose_2160@193:3>](<f_compose_2160@193:0>:int,<<f_compose_2160@193:1>@195:0>:int),
      P[<<<f_compose_2160@193:1>@195:1>@265:0>](<f_compose_2160@193:0>:int,<<f_compose_2160@193:1>@195:0>:int,<<f_compose_2160@193:2>@267:0>:int)|- P[<<f_compose_2160@193:2>@267:0>](
      <f_compose_2160@193:0>:int,<<f_compose_2160@193:2>@267:0>:int)
      
      P[<compose_1142@143:2>](<f_compose_2160@193:0>:int),
      P[<<<compose_1142@143:0>@197:1>@263:0>](<<f_compose_2160@193:1>@195:0>:int,<<<f_compose_2160@193:1>@195:1>@265:0>:int)|- P[<<<f_compose_2160@193:1>@195:1>@265:0>](
      <f_compose_2160@193:0>:int,<<f_compose_2160@193:1>@195:0>:int,<<<f_compose_2160@193:1>@195:1>@265:0>:int)
      
      P[<f_main_2161@69:2>](<f_main_2163@123:0>:int,<fold_right_1143@71:1>:int),
      P[<<<<fold_right_1143@71:0>@141:0>@199:1>@261:0>](<<compose_1142@143:0>@197:0>:int,<<<compose_1142@143:0>@197:1>@263:0>:int)|- P[<<<compose_1142@143:0>@197:1>@263:0>](
      <<compose_1142@143:0>@197:0>:int,<<<compose_1142@143:0>@197:1>@263:0>:int)
      
      P[<fold_right_1143@71:1>](<br_fold_right_2167@74:2>:int),
      P[<<<<br_fold_right_2167@74:1>@139:0>@201:1>@259:0>]((1 <= <br_fold_right_2167@74:2>):bool,<<<fold_right_1143@71:0>@141:0>@199:0>:int,<<<<fold_right_1143@71:0>@141:0>@199:1>@261:0>:int),
      (<br_fold_right_2167@74:2> <> 0)
      |- P[<<<<fold_right_1143@71:0>@141:0>@199:1>@261:0>](<<<fold_right_1143@71:0>@141:0>@199:0>:int,
                                                           <<<<fold_right_1143@71:0>@141:0>@199:1>@261:0>:int)
      
      P[<br_fold_right_2167@74:2>](<br_fold_right_2167@74:0>:bool,<f_fold_right_2157@106:0>:int),
      P[<<<<f_fold_right_2157@106:1>@137:0>@203:1>@257:0>](<f_fold_right_2157@106:0>:int,<<<br_fold_right_2167@74:1>@139:0>@201:0>:int,<<<<br_fold_right_2167@74:1>@139:0>@201:1>@259:0>:int),
      <br_fold_right_2167@74:0>
      |- P[<<<<br_fold_right_2167@74:1>@139:0>@201:1>@259:0>](<br_fold_right_2167@74:0>:bool,
                                                              <<<br_fold_right_2167@74:1>@139:0>@201:0>:int,
                                                              <<<<br_fold_right_2167@74:1>@139:0>@201:1>@259:0>:int)
      
      P[<f_fold_right_2157@106:0>](<f_fold_right_2157@106:0>:int),
      P[<<<<f_fold_right_2159@113:1>@135:0>@205:1>@255:0>](<f_fold_right_2157@106:0>:int,<<<f_fold_right_2157@106:1>@137:0>@203:0>:int,<<<<f_fold_right_2157@106:1>@137:0>@203:1>@257:0>:int)|- P[<<<<f_fold_right_2157@106:1>@137:0>@203:1>@257:0>](
      <f_fold_right_2157@106:0>:int,<<<f_fold_right_2157@106:1>@137:0>@203:0>:int,
      <<<<f_fold_right_2157@106:1>@137:0>@203:1>@257:0>:int)
      
      P[<f_fold_right_2159@113:0>](<f_fold_right_2159@113:0>:int),
      P[<<<f_fold_right_2159@113:3>@207:1>@253:0>](<f_fold_right_2159@113:0>:int,<<<f_fold_right_2159@113:1>@135:0>@205:0>:int,<<<<f_fold_right_2159@113:1>@135:0>@205:1>@255:0>:int)|- P[<<<<f_fold_right_2159@113:1>@135:0>@205:1>@255:0>](
      <f_fold_right_2159@113:0>:int,<<<f_fold_right_2159@113:1>@135:0>@205:0>:int,
      <<<<f_fold_right_2159@113:1>@135:0>@205:1>@255:0>:int)
      
      P[<f_fold_right_2157@106:0>](<f_fold_right_2159@113:0>:int),
      P[<<<f_fold_right_2157@106:5>@209:1>@251:0>](<f_fold_right_2159@113:0>:int,<<f_fold_right_2159@113:3>@207:0>:int,<<<f_fold_right_2159@113:3>@207:1>@253:0>:int),
      P[<f_fold_right_2159@113:0>](<f_fold_right_2159@113:0>:int)|- P[<<<f_fold_right_2159@113:3>@207:1>@253:0>](
      <f_fold_right_2159@113:0>:int,<<f_fold_right_2159@113:3>@207:0>:int,
      <<<f_fold_right_2159@113:3>@207:1>@253:0>:int)
      
      P[<br_fold_right_2167@74:2>](true:bool,<f_fold_right_2157@106:0>:int),
      P[<<<<<br_fold_right_2167@74:3>@77:1>@104:0>@211:1>@249:0>](true:bool,<f_fold_right_2157@106:0>:int,0:int,<<f_fold_right_2157@106:5>@209:0>:int,<<<f_fold_right_2157@106:5>@209:1>@251:0>:int),
      P[<f_fold_right_2157@106:0>](<f_fold_right_2157@106:0>:int)|- P[<<<f_fold_right_2157@106:5>@209:1>@251:0>](
      <f_fold_right_2157@106:0>:int,<<f_fold_right_2157@106:5>@209:0>:int,
      <<<f_fold_right_2157@106:5>@209:1>@251:0>:int)
      
      P[<fold_right_1143@71:1>](<br_fold_right_2167@74:2>:int),
      P[<<<<<fold_right_1143@71:2>@79:1>@102:0>@213:1>@247:0>](<br_fold_right_2167@74:2>:int,<<br_fold_right_2167@74:3>@77:0>:int,<<<<br_fold_right_2167@74:3>@77:1>@104:0>@211:0>:int,<<<<<br_fold_right_2167@74:3>@77:1>@104:0>@211:1>@249:0>:int),
      P[<br_fold_right_2167@74:2>](<br_fold_right_2167@74:0>:bool,<br_fold_right_2167@74:2>:int),
      ((<br_fold_right_2167@74:2> <> 0) && (<br_fold_right_2167@74:0> = (1 <= <br_fold_right_2167@74:2>)))
      |- P[<<<<<br_fold_right_2167@74:3>@77:1>@104:0>@211:1>@249:0>](
      <br_fold_right_2167@74:0>:bool,<br_fold_right_2167@74:2>:int,<<br_fold_right_2167@74:3>@77:0>:int,
      <<<<br_fold_right_2167@74:3>@77:1>@104:0>@211:0>:int,<<<<<br_fold_right_2167@74:3>@77:1>@104:0>@211:1>@249:0>:int)
      
      P[<f_main_2161@69:2>](<f_main_2163@123:0>:int,<fold_right_1143@71:1>:int),
      P[<<<<<f_main_2161@69:3>@81:1>@100:0>@215:1>@245:0>](<f_main_2163@123:0>:int,<fold_right_1143@71:1>:int,<<fold_right_1143@71:2>@79:0>:int,<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>:int,<<<<<fold_right_1143@71:2>@79:1>@102:0>@213:1>@247:0>:int),
      P[<fold_right_1143@71:1>](<fold_right_1143@71:1>:int)|- P[<<<<<fold_right_1143@71:2>@79:1>@102:0>@213:1>@247:0>](
      <fold_right_1143@71:1>:int,<<fold_right_1143@71:2>@79:0>:int,<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>:int,
      <<<<<fold_right_1143@71:2>@79:1>@102:0>@213:1>@247:0>:int)
      
      P[<main_1043@49:0>](<f_main_2161@69:0>:int),
      P[<<make_list_1030@51:1>@67:0>](<f_main_2161@69:0>:int,<f_main_2161@69:2>:int),
      P[<<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:1>@243:0>](<f_main_2161@69:0>:int,<f_main_2161@69:2>:int,<<f_main_2161@69:3>@81:0>:int,<<<<f_main_2161@69:3>@81:1>@100:0>@215:0>:int,<<<<<f_main_2161@69:3>@81:1>@100:0>@215:1>@245:0>:int),
      P[<f_main_2161@69:2>](<f_main_2161@69:0>:int,<f_main_2161@69:2>:int)|- P[<<<<<f_main_2161@69:3>@81:1>@100:0>@215:1>@245:0>](
      <f_main_2161@69:0>:int,<f_main_2161@69:2>:int,<<f_main_2161@69:3>@81:0>:int,
      <<<<f_main_2161@69:3>@81:1>@100:0>@215:0>:int,<<<<<f_main_2161@69:3>@81:1>@100:0>@215:1>@245:0>:int)
      
      P[<make_list_1030@51:0>](<make_list_1030@51:0>:int),
      P[<<f_make_list_2155@59:1>@65:0>](<make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int),
      P[<<<<<<f_make_list_2155@59:1>@65:1>@85:1>@96:0>@219:1>@241:0>](
      <make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int,<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>:int,<<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:1>@243:0>:int),
      P[<<make_list_1030@51:1>@67:0>](<make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int),
      (<make_list_1030@51:0> > 0)
      |- P[<<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:1>@243:0>](
      <make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int,
      <<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>:int,<<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:1>@243:0>:int)
      
      P[<f_make_list_2155@59:2>](<f_make_list_2155@59:0>:int,<cons_make_list_1161@61:2>:int),
      P[<<cons_make_list_1161@61:4>@63:0>](<f_make_list_2155@59:0>:int,<cons_make_list_1161@61:2>:int,<<f_make_list_2155@59:1>@65:0>:int),
      P[<<<<<<cons_make_list_1161@61:4>@63:1>@87:1>@94:0>@221:1>@239:0>](
      <f_make_list_2155@59:0>:int,<cons_make_list_1161@61:2>:int,<<f_make_list_2155@59:1>@65:0>:int,<<<f_make_list_2155@59:1>@65:1>@85:0>:int,<<<<<f_make_list_2155@59:1>@65:1>@85:1>@96:0>@219:0>:int,<<<<<<f_make_list_2155@59:1>@65:1>@85:1>@96:0>@219:1>@241:0>:int),
      P[<<f_make_list_2155@59:1>@65:0>](<f_make_list_2155@59:0>:int,<<f_make_list_2155@59:1>@65:0>:int)|- P[<<<<<<f_make_list_2155@59:1>@65:1>@85:1>@96:0>@219:1>@241:0>](
      <f_make_list_2155@59:0>:int,<<f_make_list_2155@59:1>@65:0>:int,
      <<<f_make_list_2155@59:1>@65:1>@85:0>:int,<<<<<f_make_list_2155@59:1>@65:1>@85:1>@96:0>@219:0>:int,
      <<<<<<f_make_list_2155@59:1>@65:1>@85:1>@96:0>@219:1>@241:0>:int)
      
      P[<cons_make_list_1161@61:2>](<cons_make_list_1161@61:0>:int,<cons_make_list_1161@61:2>:int),
      P[<<<<f_cons_make_list_2154@89:5>@92:0>@223:1>@237:0>](<cons_make_list_1161@61:0>:int,<cons_make_list_1161@61:2>:int,<<<cons_make_list_1161@61:4>@63:1>@87:0>:int,<<<<<cons_make_list_1161@61:4>@63:1>@87:1>@94:0>@221:0>:int,<<<<<<cons_make_list_1161@61:4>@63:1>@87:1>@94:0>@221:1>@239:0>:int),
      P[<<cons_make_list_1161@61:4>@63:0>](<cons_make_list_1161@61:0>:int,<cons_make_list_1161@61:2>:int,<<cons_make_list_1161@61:4>@63:0>:int),
      (<<cons_make_list_1161@61:4>@63:0> = (1 + <cons_make_list_1161@61:2>))
      |- P[<<<<<<cons_make_list_1161@61:4>@63:1>@87:1>@94:0>@221:1>@239:0>](
      <cons_make_list_1161@61:0>:int,<cons_make_list_1161@61:2>:int,<<cons_make_list_1161@61:4>@63:0>:int,
      <<<cons_make_list_1161@61:4>@63:1>@87:0>:int,<<<<<cons_make_list_1161@61:4>@63:1>@87:1>@94:0>@221:0>:int,
      <<<<<<cons_make_list_1161@61:4>@63:1>@87:1>@94:0>@221:1>@239:0>:int)
      
      P[<f_cons_make_list_2154@89:4>](<f_cons_make_list_2154@89:0>:int,<f_cons_make_list_2154@89:1>:int,<f_cons_make_list_2154@89:4>:int),
      P[<<<f_cons_make_list_2154@89:2>@225:1>@235:0>](<f_cons_make_list_2154@89:0>:int,<f_cons_make_list_2154@89:1>:int,<<<f_cons_make_list_2154@89:5>@92:0>@223:0>:int,<<<<f_cons_make_list_2154@89:5>@92:0>@223:1>@237:0>:int),
      (<f_cons_make_list_2154@89:4> = 0)
      |- P[<<<<f_cons_make_list_2154@89:5>@92:0>@223:1>@237:0>](<f_cons_make_list_2154@89:0>:int,
                                                                <f_cons_make_list_2154@89:1>:int,
                                                                <f_cons_make_list_2154@89:4>:int,
                                                                <<<f_cons_make_list_2154@89:5>@92:0>@223:0>:int,
                                                                <<<<f_cons_make_list_2154@89:5>@92:0>@223:1>@237:0>:int)
      
      P[<cons_make_list_1161@61:2>](<f_cons_make_list_2154@89:0>:int,<f_cons_make_list_2154@89:1>:int),
      P[<<<cons_make_list_1161@61:1>@227:1>@233:0>](<f_cons_make_list_2154@89:0>:int,<<f_cons_make_list_2154@89:2>@225:0>:int,<<<f_cons_make_list_2154@89:2>@225:1>@235:0>:int)|- P[<<<f_cons_make_list_2154@89:2>@225:1>@235:0>](
      <f_cons_make_list_2154@89:0>:int,<f_cons_make_list_2154@89:1>:int,
      <<f_cons_make_list_2154@89:2>@225:0>:int,<<<f_cons_make_list_2154@89:2>@225:1>@235:0>:int)
      
      P[<f_make_list_2155@59:2>](<cons_make_list_1161@61:0>:int,<cons_make_list_1161@61:2>:int),
      P[<<f_make_list_2156@229:3>@231:0>](<cons_make_list_1161@61:0>:int,<cons_make_list_1161@61:2>:int,<<cons_make_list_1161@61:1>@227:0>:int,<<<cons_make_list_1161@61:1>@227:1>@233:0>:int)|- P[<<<cons_make_list_1161@61:1>@227:1>@233:0>](
      <cons_make_list_1161@61:0>:int,<<cons_make_list_1161@61:1>@227:0>:int,
      <<<cons_make_list_1161@61:1>@227:1>@233:0>:int)
      
      P[<f_make_list_2156@229:2>](<f_make_list_2156@229:0>:int,<f_make_list_2156@229:1>:int,<f_make_list_2156@229:2>:int),
      (<<f_make_list_2156@229:3>@231:0> = (<f_make_list_2156@229:0> + <f_make_list_2156@229:2>))
      |- P[<<f_make_list_2156@229:3>@231:0>](<f_make_list_2156@229:0>:int,
                                             <f_make_list_2156@229:1>:int,
                                             <f_make_list_2156@229:2>:int,
                                             <<f_make_list_2156@229:3>@231:0>:int)
      
      P[<f_make_list_2155@59:2>](<f_make_list_2156@229:0>:int,<f_make_list_2156@229:1>:int),
      P[<<cons_make_list_1161@61:1>@227:0>](<f_make_list_2156@229:0>:int,<f_make_list_2156@229:2>:int)|- P[<f_make_list_2156@229:2>](
      <f_make_list_2156@229:0>:int,<f_make_list_2156@229:1>:int,<f_make_list_2156@229:2>:int)
      
      P[<cons_make_list_1161@61:2>](<cons_make_list_1161@61:0>:int,<f_cons_make_list_2154@89:1>:int),
      P[<<f_cons_make_list_2154@89:2>@225:0>](<cons_make_list_1161@61:0>:int,<f_cons_make_list_2154@89:1>:int,<<cons_make_list_1161@61:1>@227:0>:int)|- P[<<cons_make_list_1161@61:1>@227:0>](
      <cons_make_list_1161@61:0>:int,<<cons_make_list_1161@61:1>@227:0>:int)
      
      P[<f_cons_make_list_2154@89:4>](<f_cons_make_list_2154@89:0>:int,<f_cons_make_list_2154@89:1>:int,0:int),
      P[<<<f_cons_make_list_2154@89:5>@92:0>@223:0>](<f_cons_make_list_2154@89:0>:int,<f_cons_make_list_2154@89:1>:int,0:int,<<f_cons_make_list_2154@89:2>@225:0>:int)|- P[<<f_cons_make_list_2154@89:2>@225:0>](
      <f_cons_make_list_2154@89:0>:int,<f_cons_make_list_2154@89:1>:int,
      <<f_cons_make_list_2154@89:2>@225:0>:int)
      
      P[<cons_make_list_1161@61:2>](<f_cons_make_list_2154@89:0>:int,<f_cons_make_list_2154@89:1>:int),
      P[<<<cons_make_list_1161@61:4>@63:1>@87:0>](<f_cons_make_list_2154@89:0>:int,<f_cons_make_list_2154@89:1>:int,(
                                                  1 + <f_cons_make_list_2154@89:1>):int,<f_cons_make_list_2154@89:4>:int),
      P[<<<<<cons_make_list_1161@61:4>@63:1>@87:1>@94:0>@221:0>](<f_cons_make_list_2154@89:0>:int,<f_cons_make_list_2154@89:1>:int,(
                                                                 1 + <f_cons_make_list_2154@89:1>):int,<f_cons_make_list_2154@89:4>:int,<<<f_cons_make_list_2154@89:5>@92:0>@223:0>:int),
      P[<f_cons_make_list_2154@89:4>](<f_cons_make_list_2154@89:0>:int,<f_cons_make_list_2154@89:1>:int,<f_cons_make_list_2154@89:4>:int)|- P[<<<f_cons_make_list_2154@89:5>@92:0>@223:0>](
      <f_cons_make_list_2154@89:0>:int,<f_cons_make_list_2154@89:1>:int,
      <f_cons_make_list_2154@89:4>:int,<<<f_cons_make_list_2154@89:5>@92:0>@223:0>:int)
      
      P[<f_make_list_2155@59:2>](<cons_make_list_1161@61:0>:int,<cons_make_list_1161@61:2>:int),
      P[<<<f_make_list_2155@59:1>@65:1>@85:0>](<cons_make_list_1161@61:0>:int,<<cons_make_list_1161@61:4>@63:0>:int,<<<cons_make_list_1161@61:4>@63:1>@87:0>:int),
      P[<<<<<f_make_list_2155@59:1>@65:1>@85:1>@96:0>@219:0>](<cons_make_list_1161@61:0>:int,<<cons_make_list_1161@61:4>@63:0>:int,<<<cons_make_list_1161@61:4>@63:1>@87:0>:int,<<<<<cons_make_list_1161@61:4>@63:1>@87:1>@94:0>@221:0>:int),
      P[<cons_make_list_1161@61:2>](<cons_make_list_1161@61:0>:int,<cons_make_list_1161@61:2>:int),
      P[<<<cons_make_list_1161@61:4>@63:1>@87:0>](<cons_make_list_1161@61:0>:int,<cons_make_list_1161@61:2>:int,<<cons_make_list_1161@61:4>@63:0>:int,<<<cons_make_list_1161@61:4>@63:1>@87:0>:int)|- P[<<<<<cons_make_list_1161@61:4>@63:1>@87:1>@94:0>@221:0>](
      <cons_make_list_1161@61:0>:int,<cons_make_list_1161@61:2>:int,<<cons_make_list_1161@61:4>@63:0>:int,
      <<<cons_make_list_1161@61:4>@63:1>@87:0>:int,<<<<<cons_make_list_1161@61:4>@63:1>@87:1>@94:0>@221:0>:int)
      
      P[<make_list_1030@51:0>](<f_make_list_2155@59:0>:int),
      P[<<<make_list_1030@51:1>@67:1>@83:0>](<f_make_list_2155@59:0>:int,<<f_make_list_2155@59:1>@65:0>:int,<<<f_make_list_2155@59:1>@65:1>@85:0>:int),
      P[<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>](<f_make_list_2155@59:0>:int,<<f_make_list_2155@59:1>@65:0>:int,<<<f_make_list_2155@59:1>@65:1>@85:0>:int,<<<<<f_make_list_2155@59:1>@65:1>@85:1>@96:0>@219:0>:int),
      P[<<<f_make_list_2155@59:1>@65:1>@85:0>](<f_make_list_2155@59:0>:int,<<f_make_list_2155@59:1>@65:0>:int,<<<f_make_list_2155@59:1>@65:1>@85:0>:int),
      (<f_make_list_2155@59:0> > 0)
      |- P[<<<<<f_make_list_2155@59:1>@65:1>@85:1>@96:0>@219:0>](<f_make_list_2155@59:0>:int,
                                                                 <<f_make_list_2155@59:1>@65:0>:int,
                                                                 <<<f_make_list_2155@59:1>@65:1>@85:0>:int,
                                                                 <<<<<f_make_list_2155@59:1>@65:1>@85:1>@96:0>@219:0>:int)
      
      P[<main_1043@49:0>](<make_list_1030@51:0>:int),
      P[<<f_main_2161@69:3>@81:0>](<make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int),
      P[<<<<f_main_2161@69:3>@81:1>@100:0>@215:0>](<make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int,<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>:int),
      P[<make_list_1030@51:0>](<make_list_1030@51:0>:int),
      P[<<<make_list_1030@51:1>@67:1>@83:0>](<make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int)|- P[<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>](
      <make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int,
      <<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>:int)
      
      P[<f_main_2161@69:2>](<f_main_2161@69:0>:int,<f_main_2161@69:2>:int),
      P[<<fold_right_1143@71:2>@79:0>](<f_main_2161@69:2>:int,<<f_main_2161@69:3>@81:0>:int),
      P[<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>](<f_main_2161@69:2>:int,<<f_main_2161@69:3>@81:0>:int,<<<<f_main_2161@69:3>@81:1>@100:0>@215:0>:int),
      P[<<f_main_2161@69:3>@81:0>](<f_main_2161@69:0>:int,<f_main_2161@69:2>:int,<<f_main_2161@69:3>@81:0>:int)|- P[<<<<f_main_2161@69:3>@81:1>@100:0>@215:0>](
      <f_main_2161@69:0>:int,<f_main_2161@69:2>:int,<<f_main_2161@69:3>@81:0>:int,
      <<<<f_main_2161@69:3>@81:1>@100:0>@215:0>:int)
      
      P[<fold_right_1143@71:1>](<fold_right_1143@71:1>:int),
      P[<<br_fold_right_2167@74:3>@77:0>]((1 <= <fold_right_1143@71:1>):bool,<fold_right_1143@71:1>:int,<<fold_right_1143@71:2>@79:0>:int),
      P[<<<<br_fold_right_2167@74:3>@77:1>@104:0>@211:0>]((1 <= <fold_right_1143@71:1>):bool,<fold_right_1143@71:1>:int,<<fold_right_1143@71:2>@79:0>:int,<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>:int),
      P[<<fold_right_1143@71:2>@79:0>](<fold_right_1143@71:1>:int,<<fold_right_1143@71:2>@79:0>:int),
      (<fold_right_1143@71:1> <> 0)
      |- P[<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>](<fold_right_1143@71:1>:int,
                                                          <<fold_right_1143@71:2>@79:0>:int,
                                                          <<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>:int)
      
      P[<br_fold_right_2167@74:2>](<br_fold_right_2167@74:0>:bool,<br_fold_right_2167@74:2>:int),
      P[<<f_fold_right_2157@106:5>@209:0>](<br_fold_right_2167@74:2>:int,<<<<br_fold_right_2167@74:3>@77:1>@104:0>@211:0>:int),
      P[<<br_fold_right_2167@74:3>@77:0>](<br_fold_right_2167@74:0>:bool,<br_fold_right_2167@74:2>:int,<<br_fold_right_2167@74:3>@77:0>:int),
      ((<<br_fold_right_2167@74:3>@77:0> = 0) && <br_fold_right_2167@74:0>)
      |- P[<<<<br_fold_right_2167@74:3>@77:1>@104:0>@211:0>](<br_fold_right_2167@74:0>:bool,
                                                             <br_fold_right_2167@74:2>:int,
                                                             <<br_fold_right_2167@74:3>@77:0>:int,
                                                             <<<<br_fold_right_2167@74:3>@77:1>@104:0>@211:0>:int)
      
      P[<f_fold_right_2157@106:0>](<f_fold_right_2157@106:0>:int),
      P[<<f_fold_right_2159@113:3>@207:0>](<f_fold_right_2157@106:0>:int,<<f_fold_right_2157@106:5>@209:0>:int)|- P[<<f_fold_right_2157@106:5>@209:0>](
      <f_fold_right_2157@106:0>:int,<<f_fold_right_2157@106:5>@209:0>:int)
      
      P[<f_fold_right_2159@113:0>](<f_fold_right_2159@113:0>:int),
      P[<<<f_fold_right_2159@113:1>@135:0>@205:0>](<f_fold_right_2159@113:0>:int,<<f_fold_right_2159@113:3>@207:0>:int)|- P[<<f_fold_right_2159@113:3>@207:0>](
      <f_fold_right_2159@113:0>:int,<<f_fold_right_2159@113:3>@207:0>:int)
      
      P[<f_fold_right_2157@106:0>](<f_fold_right_2159@113:0>:int),
      P[<<<f_fold_right_2157@106:1>@137:0>@203:0>](<f_fold_right_2159@113:0>:int,<<<f_fold_right_2159@113:1>@135:0>@205:0>:int),
      P[<f_fold_right_2159@113:0>](<f_fold_right_2159@113:0>:int)|- P[<<<f_fold_right_2159@113:1>@135:0>@205:0>](
      <f_fold_right_2159@113:0>:int,<<<f_fold_right_2159@113:1>@135:0>@205:0>:int)
      
      P[<br_fold_right_2167@74:2>](true:bool,<f_fold_right_2157@106:0>:int),
      P[<<<br_fold_right_2167@74:1>@139:0>@201:0>](true:bool,<<<f_fold_right_2157@106:1>@137:0>@203:0>:int),
      P[<f_fold_right_2157@106:0>](<f_fold_right_2157@106:0>:int)|- P[<<<f_fold_right_2157@106:1>@137:0>@203:0>](
      <f_fold_right_2157@106:0>:int,<<<f_fold_right_2157@106:1>@137:0>@203:0>:int)
      
      P[<fold_right_1143@71:1>](<br_fold_right_2167@74:2>:int),
      P[<<<fold_right_1143@71:0>@141:0>@199:0>](<<<br_fold_right_2167@74:1>@139:0>@201:0>:int),
      ((<br_fold_right_2167@74:2> <> 0) && (<br_fold_right_2167@74:0> = (1 <= <br_fold_right_2167@74:2>)))
      |- P[<<<br_fold_right_2167@74:1>@139:0>@201:0>](<br_fold_right_2167@74:0>:bool,
                                                      <<<br_fold_right_2167@74:1>@139:0>@201:0>:int)
      
      P[<f_main_2161@69:2>](<f_main_2163@123:0>:int,<fold_right_1143@71:1>:int),
      P[<<compose_1142@143:0>@197:0>](<<<fold_right_1143@71:0>@141:0>@199:0>:int)|- P[<<<fold_right_1143@71:0>@141:0>@199:0>](
      <<<fold_right_1143@71:0>@141:0>@199:0>:int)
      
      P[<compose_1142@143:2>](<<compose_1142@143:1>@145:0>:int),
      P[<<f_compose_2160@193:1>@195:0>](<<compose_1142@143:1>@145:0>:int,<<compose_1142@143:0>@197:0>:int)|- P[<<compose_1142@143:0>@197:0>](
      <<compose_1142@143:0>@197:0>:int)
      
      P[<f_compose_2160@193:3>](<f_compose_2160@193:0>:int,<<f_compose_2160@193:1>@195:0>:int)|- P[<<f_compose_2160@193:1>@195:0>](
      <f_compose_2160@193:0>:int,<<f_compose_2160@193:1>@195:0>:int)
      
      P[<compose_1142@143:2>](<f_compose_2160@193:0>:int),
      P[<<<compose_1142@143:1>@145:1>@191:0>](<f_compose_2160@193:0>:int,<f_compose_2160@193:3>:int)|- P[<f_compose_2160@193:3>](
      <f_compose_2160@193:0>:int,<f_compose_2160@193:3>:int)
      
      P[<f_main_2161@69:2>](<f_main_2163@123:0>:int,<fold_right_1143@71:1>:int),
      P[<<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>](<<compose_1142@143:1>@145:0>:int,<<<compose_1142@143:1>@145:1>@191:0>:int)|- P[<<<compose_1142@143:1>@145:1>@191:0>](
      <<compose_1142@143:1>@145:0>:int,<<<compose_1142@143:1>@145:1>@191:0>:int)
      
      P[<fold_right_1143@71:1>](<br_fold_right_2167@74:2>:int),
      P[<<<<br_fold_right_2167@74:1>@139:1>@149:1>@187:0>]((1 <= <br_fold_right_2167@74:2>):bool,<<<fold_right_1143@71:0>@141:1>@147:0>:int,<<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>:int),
      (<br_fold_right_2167@74:2> <> 0)
      |- P[<<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>](<<<fold_right_1143@71:0>@141:1>@147:0>:int,
                                                           <<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>:int)
      
      P[<br_fold_right_2167@74:2>](<br_fold_right_2167@74:0>:bool,<f_fold_right_2157@106:0>:int),
      P[<<<<f_fold_right_2157@106:1>@137:1>@151:1>@185:0>](<f_fold_right_2157@106:0>:int,<<<br_fold_right_2167@74:1>@139:1>@149:0>:int,<<<<br_fold_right_2167@74:1>@139:1>@149:1>@187:0>:int),
      <br_fold_right_2167@74:0>
      |- P[<<<<br_fold_right_2167@74:1>@139:1>@149:1>@187:0>](<br_fold_right_2167@74:0>:bool,
                                                              <<<br_fold_right_2167@74:1>@139:1>@149:0>:int,
                                                              <<<<br_fold_right_2167@74:1>@139:1>@149:1>@187:0>:int)
      
      P[<f_fold_right_2157@106:0>](<f_fold_right_2157@106:0>:int),
      P[<<<<f_fold_right_2159@113:1>@135:1>@153:1>@183:0>](<f_fold_right_2157@106:0>:int,<<<f_fold_right_2157@106:1>@137:1>@151:0>:int,<<<<f_fold_right_2157@106:1>@137:1>@151:1>@185:0>:int)|- P[<<<<f_fold_right_2157@106:1>@137:1>@151:1>@185:0>](
      <f_fold_right_2157@106:0>:int,<<<f_fold_right_2157@106:1>@137:1>@151:0>:int,
      <<<<f_fold_right_2157@106:1>@137:1>@151:1>@185:0>:int)
      
      P[<f_fold_right_2159@113:0>](<f_fold_right_2159@113:0>:int),
      P[<<<f_fold_right_2159@113:4>@155:1>@181:0>](<f_fold_right_2159@113:0>:int,<<<f_fold_right_2159@113:1>@135:1>@153:0>:int,<<<<f_fold_right_2159@113:1>@135:1>@153:1>@183:0>:int)|- P[<<<<f_fold_right_2159@113:1>@135:1>@153:1>@183:0>](
      <f_fold_right_2159@113:0>:int,<<<f_fold_right_2159@113:1>@135:1>@153:0>:int,
      <<<<f_fold_right_2159@113:1>@135:1>@153:1>@183:0>:int)
      
      P[<f_fold_right_2157@106:0>](<f_fold_right_2159@113:0>:int),
      P[<<<<fold_right_1143@108:4>@111:0>@157:1>@179:0>]((-1 + <f_fold_right_2159@113:0>):int,<<f_fold_right_2159@113:4>@155:0>:int,<<<f_fold_right_2159@113:4>@155:1>@181:0>:int),
      P[<f_fold_right_2159@113:0>](<f_fold_right_2159@113:0>:int)|- P[<<<f_fold_right_2159@113:4>@155:1>@181:0>](
      <f_fold_right_2159@113:0>:int,<<f_fold_right_2159@113:4>@155:0>:int,
      <<<f_fold_right_2159@113:4>@155:1>@181:0>:int)
      
      P[<fold_right_1143@108:1>](<fold_right_1143@108:1>:int),
      P[<<<fold_right_1143@108:3>@159:1>@177:0>](<fold_right_1143@108:1>:int,<<<fold_right_1143@108:4>@111:0>@157:0>:int,<<<<fold_right_1143@108:4>@111:0>@157:1>@179:0>:int),
      (<fold_right_1143@108:1> = 0)
      |- P[<<<<fold_right_1143@108:4>@111:0>@157:1>@179:0>](<fold_right_1143@108:1>:int,
                                                            <<<fold_right_1143@108:4>@111:0>@157:0>:int,
                                                            <<<<fold_right_1143@108:4>@111:0>@157:1>@179:0>:int)
      
      P[<f_fold_right_2157@106:0>]((1 + <fold_right_1143@108:1>):int),
      P[<<<f_fold_right_2157@106:2>@161:1>@175:0>]((1 + <fold_right_1143@108:1>):int,<<fold_right_1143@108:3>@159:0>:int,<<<fold_right_1143@108:3>@159:1>@177:0>:int),
      P[<fold_right_1143@108:1>](<fold_right_1143@108:1>:int)|- P[<<<fold_right_1143@108:3>@159:1>@177:0>](
      <fold_right_1143@108:1>:int,<<fold_right_1143@108:3>@159:0>:int,
      <<<fold_right_1143@108:3>@159:1>@177:0>:int)
      
      P[<br_fold_right_2167@74:2>](true:bool,<f_fold_right_2157@106:0>:int),
      P[<<<br_fold_right_2167@74:4>@163:1>@173:0>](true:bool,<f_fold_right_2157@106:0>:int,<<f_fold_right_2157@106:2>@161:0>:int,<<<f_fold_right_2157@106:2>@161:1>@175:0>:int),
      P[<f_fold_right_2157@106:0>](<f_fold_right_2157@106:0>:int)|- P[<<<f_fold_right_2157@106:2>@161:1>@175:0>](
      <f_fold_right_2157@106:0>:int,<<f_fold_right_2157@106:2>@161:0>:int,
      <<<f_fold_right_2157@106:2>@161:1>@175:0>:int)
      
      P[<fold_right_1143@71:1>](<br_fold_right_2167@74:2>:int),
      P[<<<fold_right_1143@71:3>@165:1>@171:0>](<br_fold_right_2167@74:2>:int,<<br_fold_right_2167@74:4>@163:0>:int,<<<br_fold_right_2167@74:4>@163:1>@173:0>:int),
      P[<br_fold_right_2167@74:2>](<br_fold_right_2167@74:0>:bool,<br_fold_right_2167@74:2>:int),
      ((<br_fold_right_2167@74:2> <> 0) && (<br_fold_right_2167@74:0> = (1 <= <br_fold_right_2167@74:2>)))
      |- P[<<<br_fold_right_2167@74:4>@163:1>@173:0>](<br_fold_right_2167@74:0>:bool,
                                                      <br_fold_right_2167@74:2>:int,
                                                      <<br_fold_right_2167@74:4>@163:0>:int,
                                                      <<<br_fold_right_2167@74:4>@163:1>@173:0>:int)
      
      P[<f_main_2161@69:2>](<f_main_2163@123:0>:int,<fold_right_1143@71:1>:int),
      P[<<f_main_2162@167:3>@169:0>](<f_main_2163@123:0>:int,<fold_right_1143@71:1>:int,<<fold_right_1143@71:3>@165:0>:int,<<<fold_right_1143@71:3>@165:1>@171:0>:int),
      P[<fold_right_1143@71:1>](<fold_right_1143@71:1>:int)|- P[<<<fold_right_1143@71:3>@165:1>@171:0>](
      <fold_right_1143@71:1>:int,<<fold_right_1143@71:3>@165:0>:int,<<<fold_right_1143@71:3>@165:1>@171:0>:int)
      
      P[<f_main_2162@167:2>](<f_main_2162@167:0>:int,<f_main_2162@167:1>:int,<f_main_2162@167:2>:int),
      (<<f_main_2162@167:3>@169:0> = <f_main_2162@167:2>)
      |- P[<<f_main_2162@167:3>@169:0>](<f_main_2162@167:0>:int,<f_main_2162@167:1>:int,
                                        <f_main_2162@167:2>:int,<<f_main_2162@167:3>@169:0>:int)
      
      P[<f_main_2161@69:2>](<f_main_2162@167:0>:int,<f_main_2162@167:1>:int),
      P[<<fold_right_1143@71:3>@165:0>](<f_main_2162@167:1>:int,<f_main_2162@167:2>:int)|- P[<f_main_2162@167:2>](
      <f_main_2162@167:0>:int,<f_main_2162@167:1>:int,<f_main_2162@167:2>:int)
      
      P[<fold_right_1143@71:1>](<fold_right_1143@71:1>:int),
      P[<<br_fold_right_2167@74:4>@163:0>]((1 <= <fold_right_1143@71:1>):bool,<fold_right_1143@71:1>:int,<<fold_right_1143@71:3>@165:0>:int),
      (<fold_right_1143@71:1> <> 0)
      |- P[<<fold_right_1143@71:3>@165:0>](<fold_right_1143@71:1>:int,
                                           <<fold_right_1143@71:3>@165:0>:int)
      
      P[<br_fold_right_2167@74:2>](<br_fold_right_2167@74:0>:bool,<br_fold_right_2167@74:2>:int),
      P[<<f_fold_right_2157@106:2>@161:0>](<br_fold_right_2167@74:2>:int,<<br_fold_right_2167@74:4>@163:0>:int),
      <br_fold_right_2167@74:0>
      |- P[<<br_fold_right_2167@74:4>@163:0>](<br_fold_right_2167@74:0>:bool,
                                              <br_fold_right_2167@74:2>:int,
                                              <<br_fold_right_2167@74:4>@163:0>:int)
      
      P[<f_fold_right_2157@106:0>](<f_fold_right_2157@106:0>:int),
      P[<<fold_right_1143@108:3>@159:0>]((-1 + <f_fold_right_2157@106:0>):int,<<f_fold_right_2157@106:2>@161:0>:int)|- P[<<f_fold_right_2157@106:2>@161:0>](
      <f_fold_right_2157@106:0>:int,<<f_fold_right_2157@106:2>@161:0>:int)
      
      P[<fold_right_1143@108:1>](<fold_right_1143@108:1>:int),
      P[<<<fold_right_1143@108:4>@111:0>@157:0>](<fold_right_1143@108:1>:int,<<fold_right_1143@108:3>@159:0>:int),
      (<fold_right_1143@108:1> = 0)
      |- P[<<fold_right_1143@108:3>@159:0>](<fold_right_1143@108:1>:int,
                                            <<fold_right_1143@108:3>@159:0>:int)
      
      P[<f_fold_right_2157@106:0>]((1 + <fold_right_1143@108:1>):int),
      P[<<f_fold_right_2159@113:4>@155:0>]((1 + <fold_right_1143@108:1>):int,<<<fold_right_1143@108:4>@111:0>@157:0>:int),
      P[<fold_right_1143@108:1>](<fold_right_1143@108:1>:int)|- P[<<<fold_right_1143@108:4>@111:0>@157:0>](
      <fold_right_1143@108:1>:int,<<<fold_right_1143@108:4>@111:0>@157:0>:int)
      
      P[<f_fold_right_2159@113:0>](<f_fold_right_2159@113:0>:int),
      P[<<<f_fold_right_2159@113:1>@135:1>@153:0>](<f_fold_right_2159@113:0>:int,<<f_fold_right_2159@113:4>@155:0>:int)|- P[<<f_fold_right_2159@113:4>@155:0>](
      <f_fold_right_2159@113:0>:int,<<f_fold_right_2159@113:4>@155:0>:int)
      
      P[<f_fold_right_2157@106:0>](<f_fold_right_2159@113:0>:int),
      P[<<<f_fold_right_2157@106:1>@137:1>@151:0>](<f_fold_right_2159@113:0>:int,<<<f_fold_right_2159@113:1>@135:1>@153:0>:int),
      P[<f_fold_right_2159@113:0>](<f_fold_right_2159@113:0>:int)|- P[<<<f_fold_right_2159@113:1>@135:1>@153:0>](
      <f_fold_right_2159@113:0>:int,<<<f_fold_right_2159@113:1>@135:1>@153:0>:int)
      
      P[<br_fold_right_2167@74:2>](true:bool,<f_fold_right_2157@106:0>:int),
      P[<<<br_fold_right_2167@74:1>@139:1>@149:0>](true:bool,<<<f_fold_right_2157@106:1>@137:1>@151:0>:int),
      P[<f_fold_right_2157@106:0>](<f_fold_right_2157@106:0>:int)|- P[<<<f_fold_right_2157@106:1>@137:1>@151:0>](
      <f_fold_right_2157@106:0>:int,<<<f_fold_right_2157@106:1>@137:1>@151:0>:int)
      
      P[<fold_right_1143@71:1>](<br_fold_right_2167@74:2>:int),
      P[<<<fold_right_1143@71:0>@141:1>@147:0>](<<<br_fold_right_2167@74:1>@139:1>@149:0>:int),
      ((<br_fold_right_2167@74:2> <> 0) && (<br_fold_right_2167@74:0> = (1 <= <br_fold_right_2167@74:2>)))
      |- P[<<<br_fold_right_2167@74:1>@139:1>@149:0>](<br_fold_right_2167@74:0>:bool,
                                                      <<<br_fold_right_2167@74:1>@139:1>@149:0>:int)
      
      P[<f_main_2161@69:2>](<f_main_2163@123:0>:int,<fold_right_1143@71:1>:int),
      P[<<compose_1142@143:1>@145:0>](<<<fold_right_1143@71:0>@141:1>@147:0>:int)|- P[<<<fold_right_1143@71:0>@141:1>@147:0>](
      <<<fold_right_1143@71:0>@141:1>@147:0>:int)
      
      P[<compose_1142@143:2>](<<compose_1142@143:1>@145:0>:int)|- P[<<compose_1142@143:1>@145:0>](
      <<compose_1142@143:1>@145:0>:int)
      
      P[<f_main_2161@69:2>](<f_main_2163@123:0>:int,<fold_right_1143@71:1>:int),
      P[<<fold_right_1143@71:0>@141:2>](<compose_1142@143:2>:int)|- P[<compose_1142@143:2>](
      <compose_1142@143:2>:int)
      
      P[<fold_right_1143@71:1>](<br_fold_right_2167@74:2>:int),
      P[<<br_fold_right_2167@74:1>@139:2>]((1 <= <br_fold_right_2167@74:2>):bool,<<fold_right_1143@71:0>@141:2>:int),
      (<br_fold_right_2167@74:2> <> 0) |- P[<<fold_right_1143@71:0>@141:2>](
      <<fold_right_1143@71:0>@141:2>:int)
      
      P[<br_fold_right_2167@74:2>](<br_fold_right_2167@74:0>:bool,<f_fold_right_2157@106:0>:int),
      P[<<f_fold_right_2157@106:1>@137:2>](<f_fold_right_2157@106:0>:int,<<br_fold_right_2167@74:1>@139:2>:int),
      <br_fold_right_2167@74:0>
      |- P[<<br_fold_right_2167@74:1>@139:2>](<br_fold_right_2167@74:0>:bool,
                                              <<br_fold_right_2167@74:1>@139:2>:int)
      
      P[<f_fold_right_2157@106:0>](<f_fold_right_2157@106:0>:int),
      P[<<f_fold_right_2159@113:1>@135:2>](<f_fold_right_2157@106:0>:int,<<f_fold_right_2157@106:1>@137:2>:int)|- P[<<f_fold_right_2157@106:1>@137:2>](
      <f_fold_right_2157@106:0>:int,<<f_fold_right_2157@106:1>@137:2>:int)
      
      P[<f_fold_right_2159@113:0>](<f_fold_right_2159@113:0>:int),
      P[<<<f_fold_right_2159@113:2>@115:0>@133:0>](<f_fold_right_2159@113:0>:int,<<f_fold_right_2159@113:1>@135:2>:int)|- P[<<f_fold_right_2159@113:1>@135:2>](
      <f_fold_right_2159@113:0>:int,<<f_fold_right_2159@113:1>@135:2>:int)
      
      P[<f_fold_right_2157@106:0>](<f_fold_right_2159@113:0>:int),
      P[<<<f_fold_right_2157@106:3>@117:0>@131:0>](<f_fold_right_2159@113:0>:int,<<<f_fold_right_2159@113:2>@115:0>@133:0>:int),
      P[<f_fold_right_2159@113:0>](<f_fold_right_2159@113:0>:int)|- P[<<<f_fold_right_2159@113:2>@115:0>@133:0>](
      <f_fold_right_2159@113:0>:int,<<<f_fold_right_2159@113:2>@115:0>@133:0>:int)
      
      P[<br_fold_right_2167@74:2>](true:bool,<f_fold_right_2157@106:0>:int),
      P[<<<br_fold_right_2167@74:5>@119:0>@129:0>](true:bool,<f_fold_right_2157@106:0>:int,<<<f_fold_right_2157@106:3>@117:0>@131:0>:int),
      P[<f_fold_right_2157@106:0>](<f_fold_right_2157@106:0>:int)|- P[<<<f_fold_right_2157@106:3>@117:0>@131:0>](
      <f_fold_right_2157@106:0>:int,<<<f_fold_right_2157@106:3>@117:0>@131:0>:int)
      
      P[<fold_right_1143@71:1>](<br_fold_right_2167@74:2>:int),
      P[<<<fold_right_1143@71:4>@121:0>@127:0>](<br_fold_right_2167@74:2>:int,<<<br_fold_right_2167@74:5>@119:0>@129:0>:int),
      P[<br_fold_right_2167@74:2>](<br_fold_right_2167@74:0>:bool,<br_fold_right_2167@74:2>:int),
      ((<br_fold_right_2167@74:2> <> 0) && (<br_fold_right_2167@74:0> = (1 <= <br_fold_right_2167@74:2>)))
      |- P[<<<br_fold_right_2167@74:5>@119:0>@129:0>](<br_fold_right_2167@74:0>:bool,
                                                      <br_fold_right_2167@74:2>:int,
                                                      <<<br_fold_right_2167@74:5>@119:0>@129:0>:int)
      
      P[<f_main_2161@69:2>](<f_main_2163@123:0>:int,<fold_right_1143@71:1>:int),
      P[<<f_main_2163@123:3>@125:0>](<f_main_2163@123:0>:int,<fold_right_1143@71:1>:int,<<<fold_right_1143@71:4>@121:0>@127:0>:int),
      P[<fold_right_1143@71:1>](<fold_right_1143@71:1>:int)|- P[<<<fold_right_1143@71:4>@121:0>@127:0>](
      <fold_right_1143@71:1>:int,<<<fold_right_1143@71:4>@121:0>@127:0>:int)
      
      P[<f_main_2163@123:1>](<f_main_2163@123:0>:int,<f_main_2163@123:1>:int), (
      <<f_main_2163@123:3>@125:0> = 0)
      |- P[<<f_main_2163@123:3>@125:0>](<f_main_2163@123:0>:int,<f_main_2163@123:1>:int,
                                        <<f_main_2163@123:3>@125:0>:int)
      
      P[<f_main_2161@69:2>](<f_main_2163@123:0>:int,<f_main_2163@123:1>:int)|- P[<f_main_2163@123:1>](
      <f_main_2163@123:0>:int,<f_main_2163@123:1>:int)
      
      P[<f_fold_right_2157@106:0>](<f_fold_right_2159@113:0>:int)|- P[<f_fold_right_2159@113:0>](
      <f_fold_right_2159@113:0>:int)
      
      P[<f_fold_right_2157@106:0>]((1 + <fold_right_1143@108:1>):int)|- P[<fold_right_1143@108:1>](
      <fold_right_1143@108:1>:int)
      
      P[<br_fold_right_2167@74:2>](true:bool,<f_fold_right_2157@106:0>:int)|- P[<f_fold_right_2157@106:0>](
      <f_fold_right_2157@106:0>:int)
      
      P[<cons_make_list_1161@61:2>](<f_cons_make_list_2154@89:0>:int,<f_cons_make_list_2154@89:1>:int),
      P[<<<cons_make_list_1161@61:4>@63:1>@87:0>](<f_cons_make_list_2154@89:0>:int,<f_cons_make_list_2154@89:1>:int,(
                                                  1 + <f_cons_make_list_2154@89:1>):int,<f_cons_make_list_2154@89:4>:int)|- P[<f_cons_make_list_2154@89:4>](
      <f_cons_make_list_2154@89:0>:int,<f_cons_make_list_2154@89:1>:int,
      <f_cons_make_list_2154@89:4>:int)
      
      P[<f_make_list_2155@59:2>](<cons_make_list_1161@61:0>:int,<cons_make_list_1161@61:2>:int),
      P[<<<f_make_list_2155@59:1>@65:1>@85:0>](<cons_make_list_1161@61:0>:int,<<cons_make_list_1161@61:4>@63:0>:int,<<<cons_make_list_1161@61:4>@63:1>@87:0>:int),
      P[<cons_make_list_1161@61:2>](<cons_make_list_1161@61:0>:int,<cons_make_list_1161@61:2>:int)|- P[<<<cons_make_list_1161@61:4>@63:1>@87:0>](
      <cons_make_list_1161@61:0>:int,<cons_make_list_1161@61:2>:int,<<cons_make_list_1161@61:4>@63:0>:int,
      <<<cons_make_list_1161@61:4>@63:1>@87:0>:int)
      
      P[<make_list_1030@51:0>](<f_make_list_2155@59:0>:int),
      P[<<<make_list_1030@51:1>@67:1>@83:0>](<f_make_list_2155@59:0>:int,<<f_make_list_2155@59:1>@65:0>:int,<<<f_make_list_2155@59:1>@65:1>@85:0>:int),
      (<f_make_list_2155@59:0> > 0)
      |- P[<<<f_make_list_2155@59:1>@65:1>@85:0>](<f_make_list_2155@59:0>:int,
                                                  <<f_make_list_2155@59:1>@65:0>:int,
                                                  <<<f_make_list_2155@59:1>@65:1>@85:0>:int)
      
      P[<main_1043@49:0>](<make_list_1030@51:0>:int),
      P[<<f_main_2161@69:3>@81:0>](<make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int),
      P[<make_list_1030@51:0>](<make_list_1030@51:0>:int)|- P[<<<make_list_1030@51:1>@67:1>@83:0>](
      <make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int)
      
      P[<f_main_2161@69:2>](<f_main_2161@69:0>:int,<f_main_2161@69:2>:int),
      P[<<fold_right_1143@71:2>@79:0>](<f_main_2161@69:2>:int,<<f_main_2161@69:3>@81:0>:int)|- P[<<f_main_2161@69:3>@81:0>](
      <f_main_2161@69:0>:int,<f_main_2161@69:2>:int,<<f_main_2161@69:3>@81:0>:int)
      
      P[<fold_right_1143@71:1>](<fold_right_1143@71:1>:int),
      P[<<br_fold_right_2167@74:3>@77:0>]((1 <= <fold_right_1143@71:1>):bool,<fold_right_1143@71:1>:int,<<fold_right_1143@71:2>@79:0>:int),
      (<fold_right_1143@71:1> <> 0)
      |- P[<<fold_right_1143@71:2>@79:0>](<fold_right_1143@71:1>:int,
                                          <<fold_right_1143@71:2>@79:0>:int)
      
      P[<br_fold_right_2167@74:2>](<br_fold_right_2167@74:0>:bool,<br_fold_right_2167@74:2>:int),
      ((<<br_fold_right_2167@74:3>@77:0> = 0) && <br_fold_right_2167@74:0>)
      |- P[<<br_fold_right_2167@74:3>@77:0>](<br_fold_right_2167@74:0>:bool,
                                             <br_fold_right_2167@74:2>:int,
                                             <<br_fold_right_2167@74:3>@77:0>:int)
      
      P[<fold_right_1143@71:1>](<br_fold_right_2167@74:2>:int),
      ((<br_fold_right_2167@74:2> <> 0) && (<br_fold_right_2167@74:0> = (1 <= <br_fold_right_2167@74:2>)))
      |- P[<br_fold_right_2167@74:2>](<br_fold_right_2167@74:0>:bool,
                                      <br_fold_right_2167@74:2>:int)
      
      P[<f_main_2161@69:2>](<f_main_2161@69:0>:int,<fold_right_1143@71:1>:int)|- P[<fold_right_1143@71:1>](
      <fold_right_1143@71:1>:int)
      
      P[<main_1043@49:0>](<f_main_2161@69:0>:int),
      P[<<make_list_1030@51:1>@67:0>](<f_main_2161@69:0>:int,<f_main_2161@69:2>:int)|- P[<f_main_2161@69:2>](
      <f_main_2161@69:0>:int,<f_main_2161@69:2>:int)
      
      P[<make_list_1030@51:0>](<make_list_1030@51:0>:int),
      P[<<f_make_list_2155@59:1>@65:0>](<make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int),
      (<make_list_1030@51:0> > 0)
      |- P[<<make_list_1030@51:1>@67:0>](<make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int)
      
      P[<f_make_list_2155@59:2>](<f_make_list_2155@59:0>:int,<cons_make_list_1161@61:2>:int),
      P[<<cons_make_list_1161@61:4>@63:0>](<f_make_list_2155@59:0>:int,<cons_make_list_1161@61:2>:int,<<f_make_list_2155@59:1>@65:0>:int)|- P[<<f_make_list_2155@59:1>@65:0>](
      <f_make_list_2155@59:0>:int,<<f_make_list_2155@59:1>@65:0>:int)
      
      P[<cons_make_list_1161@61:2>](<cons_make_list_1161@61:0>:int,<cons_make_list_1161@61:2>:int),
      (<<cons_make_list_1161@61:4>@63:0> = (1 + <cons_make_list_1161@61:2>))
      |- P[<<cons_make_list_1161@61:4>@63:0>](<cons_make_list_1161@61:0>:int,
                                              <cons_make_list_1161@61:2>:int,
                                              <<cons_make_list_1161@61:4>@63:0>:int)
      
      P[<f_make_list_2155@59:2>](<cons_make_list_1161@61:0>:int,<cons_make_list_1161@61:2>:int)|- P[<cons_make_list_1161@61:2>](
      <cons_make_list_1161@61:0>:int,<cons_make_list_1161@61:2>:int)
      
      P[<make_list_1030@51:0>](<f_make_list_2155@59:0>:int),
      P[<<make_list_1030@54:1>@57:0>]((-1 + <f_make_list_2155@59:0>):int,<f_make_list_2155@59:2>:int),
      (<f_make_list_2155@59:0> > 0)
      |- P[<f_make_list_2155@59:2>](<f_make_list_2155@59:0>:int,<f_make_list_2155@59:2>:int)
      
      P[<make_list_1030@54:0>](<make_list_1030@54:0>:int),
      ((<<make_list_1030@54:1>@57:0> = 0) && (<make_list_1030@54:0> <= 0))
      |- P[<<make_list_1030@54:1>@57:0>](<make_list_1030@54:0>:int,<<make_list_1030@54:1>@57:0>:int)
      
      P[<make_list_1030@51:0>]((1 + <make_list_1030@54:0>):int), ((1 + <make_list_1030@54:0>) > 0)
      |- P[<make_list_1030@54:0>](<make_list_1030@54:0>:int)
      
      P[<main_1043@49:0>](<make_list_1030@51:0>:int)|- P[<make_list_1030@51:0>](<make_list_1030@51:0>:int)
      
      P[<f_2165@47:0>](<main_1043@49:0>:int)|- P[<main_1043@49:0>](<main_1043@49:0>:int)
      
      |- P[<f_2165@47:0>](<f_2165@47:0>:int)
    call trees:
      <main_2152@44>
        <f_2165@47>
          <main_1043@49>
            <make_list_1030@51>
              <make_list_1030@54>
              </<make_list_1030@54:1>@57>
              <f_make_list_2155@59>
                <cons_make_list_1161@61>
                </<cons_make_list_1161@61:4>@63>
              </<f_make_list_2155@59:1>@65>
            </<make_list_1030@51:1>@67>
            <f_main_2161@69>
              <fold_right_1143@71>
                <br_fold_right_2167@74>
                </<br_fold_right_2167@74:3>@77>
              </<fold_right_1143@71:2>@79>
            </<f_main_2161@69:3>@81>
            <<<make_list_1030@51:1>@67:1>@83>
              <<<f_make_list_2155@59:1>@65:1>@85>
                <<<cons_make_list_1161@61:4>@63:1>@87>
                  <f_cons_make_list_2154@89>
                  </<f_cons_make_list_2154@89:5>@92>
                </<<<cons_make_list_1161@61:4>@63:1>@87:1>@94>
              </<<<f_make_list_2155@59:1>@65:1>@85:1>@96>
            </<<<make_list_1030@51:1>@67:1>@83:1>@98>
            <<<f_main_2161@69:3>@81:1>@100>
              <<<fold_right_1143@71:2>@79:1>@102>
                <<<br_fold_right_2167@74:3>@77:1>@104>
                  <f_fold_right_2157@106>
                    <fold_right_1143@108>
                    </<fold_right_1143@108:4>@111>
                    <f_fold_right_2159@113>
                    </<f_fold_right_2159@113:2>@115>
                  </<f_fold_right_2157@106:3>@117>
                </<br_fold_right_2167@74:5>@119>
              </<fold_right_1143@71:4>@121>
              <f_main_2163@123>
              </<f_main_2163@123:3>@125>
              <<<fold_right_1143@71:4>@121:0>@127>
                <<<br_fold_right_2167@74:5>@119:0>@129>
                  <<<f_fold_right_2157@106:3>@117:0>@131>
                    <<<f_fold_right_2159@113:2>@115:0>@133>
                    </<f_fold_right_2159@113:1>@135>
                  </<f_fold_right_2157@106:1>@137>
                </<br_fold_right_2167@74:1>@139>
              </<fold_right_1143@71:0>@141>
              <compose_1142@143>
              </<compose_1142@143:1>@145>
              <<<fold_right_1143@71:0>@141:1>@147>
                <<<br_fold_right_2167@74:1>@139:1>@149>
                  <<<f_fold_right_2157@106:1>@137:1>@151>
                    <<<f_fold_right_2159@113:1>@135:1>@153>
                    </<f_fold_right_2159@113:4>@155>
                    <<<fold_right_1143@108:4>@111:0>@157>
                    </<fold_right_1143@108:3>@159>
                  </<f_fold_right_2157@106:2>@161>
                </<br_fold_right_2167@74:4>@163>
              </<fold_right_1143@71:3>@165>
              <f_main_2162@167>
              </<f_main_2162@167:3>@169>
              <<<fold_right_1143@71:3>@165:1>@171>
                <<<br_fold_right_2167@74:4>@163:1>@173>
                  <<<f_fold_right_2157@106:2>@161:1>@175>
                    <<<fold_right_1143@108:3>@159:1>@177>
                    </<<<fold_right_1143@108:4>@111:0>@157:1>@179>
                    <<<f_fold_right_2159@113:4>@155:1>@181>
                    </<<<f_fold_right_2159@113:1>@135:1>@153:1>@183>
                  </<<<f_fold_right_2157@106:1>@137:1>@151:1>@185>
                </<<<br_fold_right_2167@74:1>@139:1>@149:1>@187>
              </<<<fold_right_1143@71:0>@141:1>@147:1>@189>
              <<<compose_1142@143:1>@145:1>@191>
                <f_compose_2160@193>
                </<f_compose_2160@193:1>@195>
              </<compose_1142@143:0>@197>
              <<<fold_right_1143@71:0>@141:0>@199>
                <<<br_fold_right_2167@74:1>@139:0>@201>
                  <<<f_fold_right_2157@106:1>@137:0>@203>
                    <<<f_fold_right_2159@113:1>@135:0>@205>
                    </<f_fold_right_2159@113:3>@207>
                  </<f_fold_right_2157@106:5>@209>
                </<<<br_fold_right_2167@74:3>@77:1>@104:0>@211>
              </<<<fold_right_1143@71:2>@79:1>@102:0>@213>
            </<<<f_main_2161@69:3>@81:1>@100:0>@215>
            <<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217>
              <<<<<f_make_list_2155@59:1>@65:1>@85:1>@96:0>@219>
                <<<<<cons_make_list_1161@61:4>@63:1>@87:1>@94:0>@221>
                  <<<f_cons_make_list_2154@89:5>@92:0>@223>
                  </<f_cons_make_list_2154@89:2>@225>
                </<cons_make_list_1161@61:1>@227>
                <f_make_list_2156@229>
                </<f_make_list_2156@229:3>@231>
                <<<cons_make_list_1161@61:1>@227:1>@233>
                  <<<f_cons_make_list_2154@89:2>@225:1>@235>
                  </<<<f_cons_make_list_2154@89:5>@92:0>@223:1>@237>
                </<<<<<cons_make_list_1161@61:4>@63:1>@87:1>@94:0>@221:1>@239>
              </<<<<<f_make_list_2155@59:1>@65:1>@85:1>@96:0>@219:1>@241>
            </<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:1>@243>
            <<<<<f_main_2161@69:3>@81:1>@100:0>@215:1>@245>
              <<<<<fold_right_1143@71:2>@79:1>@102:0>@213:1>@247>
                <<<<<br_fold_right_2167@74:3>@77:1>@104:0>@211:1>@249>
                  <<<f_fold_right_2157@106:5>@209:1>@251>
                    <<<f_fold_right_2159@113:3>@207:1>@253>
                    </<<<f_fold_right_2159@113:1>@135:0>@205:1>@255>
                  </<<<f_fold_right_2157@106:1>@137:0>@203:1>@257>
                </<<<br_fold_right_2167@74:1>@139:0>@201:1>@259>
              </<<<fold_right_1143@71:0>@141:0>@199:1>@261>
              <<<compose_1142@143:0>@197:1>@263>
                <<<f_compose_2160@193:1>@195:1>@265>
                </<f_compose_2160@193:2>@267>
              </<compose_1142@143:3>@269>
              <<<fold_right_1143@71:0>@141:3>@271>
                <<<br_fold_right_2167@74:1>@139:3>@273>
                  <<<f_fold_right_2157@106:1>@137:3>@275>
                    <<<f_fold_right_2159@113:1>@135:3>@277>
                    </<<<f_fold_right_2159@113:2>@115:0>@133:1>@279>
                  </<<<f_fold_right_2157@106:3>@117:0>@131:1>@281>
                </<<<br_fold_right_2167@74:5>@119:0>@129:1>@283>
              </<<<fold_right_1143@71:4>@121:0>@127:1>@285>
              <<<f_main_2163@123:3>@125:1>@287>
                <f_main_2164@289>
                  <fail_2169@292>
    inlined horn clauses:
      P[<fail_2169@292:0>](<fail_2169@292:0>:bool)|- bot
      
      P[<<<<fold_right_1143@71:4>@121:0>@127:1>@285:0>](<f_main_2164@289:1>:int,0:int,<f_main_2164@289:3>:int),
      P[<<make_list_1030@51:1>@67:0>](<f_main_2164@289:0>:int,<f_main_2164@289:1>:int),
      ((<f_main_2164@289:3> < 0) && <fail_2169@292:0>) |- P[<fail_2169@292:0>](
      <fail_2169@292:0>:bool)
      
      P[<<<fold_right_1143@71:0>@141:3>@271:0>](<<<fold_right_1143@71:4>@121:0>@127:0>:int,<<<<fold_right_1143@71:4>@121:0>@127:1>@285:0>:int),
      P[<fold_right_1143@71:1>](<fold_right_1143@71:1>:int), (<fold_right_1143@71:1> >= 1)
      |- P[<<<<fold_right_1143@71:4>@121:0>@127:1>@285:0>](<fold_right_1143@71:1>:int,
                                                           <<<fold_right_1143@71:4>@121:0>@127:0>:int,
                                                           <<<<fold_right_1143@71:4>@121:0>@127:1>@285:0>:int)
      
      P[<<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>](<<fold_right_1143@71:0>@141:2>:int,var322:int),
      P[<<<<fold_right_1143@71:0>@141:0>@199:1>@261:0>](var322:int,<<<fold_right_1143@71:0>@141:3>@271:0>:int),
      P[<<make_list_1030@51:1>@67:0>](<f_main_2163@123:0>:int,<fold_right_1143@71:1>:int),
      P[<<fold_right_1143@71:0>@141:2>](<<fold_right_1143@71:0>@141:2>:int)|- P[<<<fold_right_1143@71:0>@141:3>@271:0>](
      <<fold_right_1143@71:0>@141:2>:int,<<<fold_right_1143@71:0>@141:3>@271:0>:int)
      
      P[<<<<<fold_right_1143@71:2>@79:1>@102:0>@213:1>@247:0>](var325:int,0:int,<<<fold_right_1143@71:0>@141:0>@199:0>:int,<<<<fold_right_1143@71:0>@141:0>@199:1>@261:0>:int),
      P[<fold_right_1143@71:1>](var325:int), (1 <= var325)
      |- P[<<<<fold_right_1143@71:0>@141:0>@199:1>@261:0>](<<<fold_right_1143@71:0>@141:0>@199:0>:int,
                                                           <<<<fold_right_1143@71:0>@141:0>@199:1>@261:0>:int)
      
      P[<<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:1>@243:0>](<f_main_2163@123:0>:int,<fold_right_1143@71:1>:int,<<fold_right_1143@71:2>@79:0>:int,<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>:int,<<<<<fold_right_1143@71:2>@79:1>@102:0>@213:1>@247:0>:int),
      P[<<make_list_1030@51:1>@67:0>](<f_main_2163@123:0>:int,<fold_right_1143@71:1>:int),
      P[<fold_right_1143@71:1>](<fold_right_1143@71:1>:int)|- P[<<<<<fold_right_1143@71:2>@79:1>@102:0>@213:1>@247:0>](
      <fold_right_1143@71:1>:int,<<fold_right_1143@71:2>@79:0>:int,<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>:int,
      <<<<<fold_right_1143@71:2>@79:1>@102:0>@213:1>@247:0>:int)
      
      P[<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>](<make_list_1030@51:0>:int,(
                                                            1 + var326):int,0:int,<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>:int),
      P[<<<make_list_1030@51:1>@67:1>@83:0>](<make_list_1030@51:0>:int,(
                                             1 + var326):int,0:int),
      P[<<make_list_1030@54:1>@57:0>]((-1 + <make_list_1030@51:0>):int,var326:int),
      P[<<<make_list_1030@51:1>@67:1>@83:0>](<make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int),
      P[<make_list_1030@51:0>](<make_list_1030@51:0>:int),
      P[<<make_list_1030@54:1>@57:0>]((-1 + <make_list_1030@51:0>):int,(
                                      -1 + <<make_list_1030@51:1>@67:0>):int),
      P[<<make_list_1030@51:1>@67:0>](<make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int),
      ((<<<make_list_1030@51:1>@67:1>@83:0> = 0) &&
       ((<make_list_1030@51:0> > 0) &&
        (<<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:1>@243:0> =
         (<make_list_1030@51:0> + <<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>))))
      |- P[<<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:1>@243:0>](
      <make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int,
      <<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>:int,<<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:1>@243:0>:int)
      
      P[<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>](<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int,<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>:int),
      P[<<make_list_1030@51:1>@67:0>](<make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int),
      P[<<fold_right_1143@71:2>@79:0>](<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int),
      P[<make_list_1030@51:0>](<make_list_1030@51:0>:int),
      P[<<<make_list_1030@51:1>@67:1>@83:0>](<make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int)|- P[<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>](
      <make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int,
      <<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>:int)
      
      P[<<<fold_right_1143@71:0>@141:0>@199:0>](<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>:int),
      P[<fold_right_1143@71:1>](<fold_right_1143@71:1>:int),
      P[<<fold_right_1143@71:2>@79:0>](<fold_right_1143@71:1>:int,<<fold_right_1143@71:2>@79:0>:int),
      ((<<fold_right_1143@71:2>@79:0> = 0) && (<fold_right_1143@71:1> >= 1))
      |- P[<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>](<fold_right_1143@71:1>:int,
                                                          <<fold_right_1143@71:2>@79:0>:int,
                                                          <<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>:int)
      
      P[<<make_list_1030@51:1>@67:0>](<f_main_2163@123:0>:int,<fold_right_1143@71:1>:int),
      P[<<fold_right_1143@71:0>@141:2>](var329:int),
      P[<<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>](var329:int,<<<fold_right_1143@71:0>@141:0>@199:0>:int)|- P[<<<fold_right_1143@71:0>@141:0>@199:0>](
      <<<fold_right_1143@71:0>@141:0>@199:0>:int)
      
      P[<<<<fold_right_1143@108:4>@111:0>@157:1>@179:0>]((-1 + var330):int,<<<fold_right_1143@71:0>@141:1>@147:0>:int,<<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>:int),
      P[<fold_right_1143@71:1>](var330:int), (1 <= var330)
      |- P[<<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>](<<<fold_right_1143@71:0>@141:1>@147:0>:int,
                                                           <<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>:int)
      
      P[<fold_right_1143@108:1>](<fold_right_1143@108:1>:int),
      P[<<<fold_right_1143@108:3>@159:1>@177:0>](<fold_right_1143@108:1>:int,<<<fold_right_1143@108:4>@111:0>@157:0>:int,<<<<fold_right_1143@108:4>@111:0>@157:1>@179:0>:int),
      (<fold_right_1143@108:1> = 0)
      |- P[<<<<fold_right_1143@108:4>@111:0>@157:1>@179:0>](<fold_right_1143@108:1>:int,
                                                            <<<fold_right_1143@108:4>@111:0>@157:0>:int,
                                                            <<<<fold_right_1143@108:4>@111:0>@157:1>@179:0>:int)
      
      P[<<<fold_right_1143@71:3>@165:1>@171:0>]((1 + <fold_right_1143@108:1>):int,<<fold_right_1143@108:3>@159:0>:int,<<<fold_right_1143@108:3>@159:1>@177:0>:int),
      P[<fold_right_1143@71:1>]((1 + <fold_right_1143@108:1>):int),
      P[<fold_right_1143@108:1>](<fold_right_1143@108:1>:int), (<fold_right_1143@108:1> >= 0)
      |- P[<<<fold_right_1143@108:3>@159:1>@177:0>](<fold_right_1143@108:1>:int,
                                                    <<fold_right_1143@108:3>@159:0>:int,
                                                    <<<fold_right_1143@108:3>@159:1>@177:0>:int)
      
      P[<<make_list_1030@51:1>@67:0>](<f_main_2163@123:0>:int,<fold_right_1143@71:1>:int),
      P[<<fold_right_1143@71:3>@165:0>](<fold_right_1143@71:1>:int,<<fold_right_1143@71:3>@165:0>:int),
      P[<fold_right_1143@71:1>](<fold_right_1143@71:1>:int),
      (<<<fold_right_1143@71:3>@165:1>@171:0> = <<fold_right_1143@71:3>@165:0>)
      |- P[<<<fold_right_1143@71:3>@165:1>@171:0>](<fold_right_1143@71:1>:int,
                                                   <<fold_right_1143@71:3>@165:0>:int,
                                                   <<<fold_right_1143@71:3>@165:1>@171:0>:int)
      
      P[<fold_right_1143@71:1>](<fold_right_1143@71:1>:int),
      P[<<fold_right_1143@108:3>@159:0>]((-1 + <fold_right_1143@71:1>):int,<<fold_right_1143@71:3>@165:0>:int),
      (<fold_right_1143@71:1> >= 1)
      |- P[<<fold_right_1143@71:3>@165:0>](<fold_right_1143@71:1>:int,
                                           <<fold_right_1143@71:3>@165:0>:int)
      
      P[<fold_right_1143@108:1>](<fold_right_1143@108:1>:int),
      P[<<<fold_right_1143@108:4>@111:0>@157:0>](<fold_right_1143@108:1>:int,<<fold_right_1143@108:3>@159:0>:int),
      (<fold_right_1143@108:1> = 0)
      |- P[<<fold_right_1143@108:3>@159:0>](<fold_right_1143@108:1>:int,
                                            <<fold_right_1143@108:3>@159:0>:int)
      
      P[<<<fold_right_1143@71:0>@141:1>@147:0>](<<<fold_right_1143@108:4>@111:0>@157:0>:int),
      P[<fold_right_1143@71:1>]((1 + <fold_right_1143@108:1>):int),
      P[<fold_right_1143@108:1>](<fold_right_1143@108:1>:int), (<fold_right_1143@108:1> >= 0)
      |- P[<<<fold_right_1143@108:4>@111:0>@157:0>](<fold_right_1143@108:1>:int,
                                                    <<<fold_right_1143@108:4>@111:0>@157:0>:int)
      
      P[<<make_list_1030@51:1>@67:0>](<f_main_2163@123:0>:int,<fold_right_1143@71:1>:int),
      P[<<fold_right_1143@71:0>@141:2>](<<<fold_right_1143@71:0>@141:1>@147:0>:int)|- P[<<<fold_right_1143@71:0>@141:1>@147:0>](
      <<<fold_right_1143@71:0>@141:1>@147:0>:int)
      
      P[<<<fold_right_1143@71:4>@121:0>@127:0>](var333:int,<<fold_right_1143@71:0>@141:2>:int),
      P[<fold_right_1143@71:1>](var333:int), (1 <= var333)
      |- P[<<fold_right_1143@71:0>@141:2>](<<fold_right_1143@71:0>@141:2>:int)
      
      P[<<make_list_1030@51:1>@67:0>](<f_main_2163@123:0>:int,<fold_right_1143@71:1>:int),
      P[<fold_right_1143@71:1>](<fold_right_1143@71:1>:int), (<<<fold_right_1143@71:4>@121:0>@127:0> = 0)
      |- P[<<<fold_right_1143@71:4>@121:0>@127:0>](<fold_right_1143@71:1>:int,
                                                   <<<fold_right_1143@71:4>@121:0>@127:0>:int)
      
      P[<fold_right_1143@71:1>]((1 + <fold_right_1143@108:1>):int), (
      <fold_right_1143@108:1> >= 0) |- P[<fold_right_1143@108:1>](<fold_right_1143@108:1>:int)
      
      P[<<make_list_1030@51:1>@67:0>](<make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int),
      P[<<fold_right_1143@71:2>@79:0>](<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int),
      P[<make_list_1030@51:0>](<make_list_1030@51:0>:int)|- P[<<<make_list_1030@51:1>@67:1>@83:0>](
      <make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int)
      
      P[<fold_right_1143@71:1>](<fold_right_1143@71:1>:int),
      ((<<fold_right_1143@71:2>@79:0> = 0) && (<fold_right_1143@71:1> >= 1))
      |- P[<<fold_right_1143@71:2>@79:0>](<fold_right_1143@71:1>:int,
                                          <<fold_right_1143@71:2>@79:0>:int)
      
      P[<<make_list_1030@51:1>@67:0>](<f_main_2161@69:0>:int,<fold_right_1143@71:1>:int)|- P[<fold_right_1143@71:1>](
      <fold_right_1143@71:1>:int)
      
      P[<make_list_1030@51:0>](<make_list_1030@51:0>:int),
      P[<<make_list_1030@54:1>@57:0>]((-1 + <make_list_1030@51:0>):int,(
                                      -1 + <<make_list_1030@51:1>@67:0>):int), (
      <make_list_1030@51:0> > 0)
      |- P[<<make_list_1030@51:1>@67:0>](<make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int)
      
      P[<make_list_1030@54:0>](<make_list_1030@54:0>:int),
      ((<<make_list_1030@54:1>@57:0> = 0) && (<make_list_1030@54:0> <= 0))
      |- P[<<make_list_1030@54:1>@57:0>](<make_list_1030@54:0>:int,<<make_list_1030@54:1>@57:0>:int)
      
      P[<make_list_1030@51:0>]((1 + <make_list_1030@54:0>):int), ((1 + <make_list_1030@54:0>) > 0)
      |- P[<make_list_1030@54:0>](<make_list_1030@54:0>:int)
      
      |- P[<make_list_1030@51:0>](<make_list_1030@51:0>:int)
    begin ParamSubstInfer.infer(44103)[3]
      
    end ParamSubstInfer.infer(44103)[3] (0.117982 sec.)
    inferred extra parameters:
      
    begin RefTypeInfer.elim_coeffs(44105)[3]
      
    end RefTypeInfer.elim_coeffs(44105)[3] (0.004999 sec.)
    begin GenHcSolver.solve(45058)[3]
      Horn clauses:
        P[<fail_2169@292:0>](<fail_2169@292:0>:bool)|- bot
        
        P[<<<<fold_right_1143@71:4>@121:0>@127:1>@285:0>](<f_main_2164@289:1>:int,0:int,<f_main_2164@289:3>:int),
        P[<<make_list_1030@51:1>@67:0>](<f_main_2164@289:0>:int,<f_main_2164@289:1>:int),
        ((<f_main_2164@289:3> < 0) && <fail_2169@292:0>) |- P[<fail_2169@292:0>](
        <fail_2169@292:0>:bool)
        
        P[<<<fold_right_1143@71:0>@141:3>@271:0>](<<<fold_right_1143@71:4>@121:0>@127:0>:int,<<<<fold_right_1143@71:4>@121:0>@127:1>@285:0>:int),
        P[<fold_right_1143@71:1>](<fold_right_1143@71:1>:int), (<fold_right_1143@71:1> >= 1)
        |- P[<<<<fold_right_1143@71:4>@121:0>@127:1>@285:0>](<fold_right_1143@71:1>:int,
                                                             <<<fold_right_1143@71:4>@121:0>@127:0>:int,
                                                             <<<<fold_right_1143@71:4>@121:0>@127:1>@285:0>:int)
        
        P[<<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>](<<fold_right_1143@71:0>@141:2>:int,var322:int),
        P[<<<<fold_right_1143@71:0>@141:0>@199:1>@261:0>](var322:int,<<<fold_right_1143@71:0>@141:3>@271:0>:int),
        P[<<make_list_1030@51:1>@67:0>](<f_main_2163@123:0>:int,<fold_right_1143@71:1>:int),
        P[<<fold_right_1143@71:0>@141:2>](<<fold_right_1143@71:0>@141:2>:int)|- P[<<<fold_right_1143@71:0>@141:3>@271:0>](
        <<fold_right_1143@71:0>@141:2>:int,<<<fold_right_1143@71:0>@141:3>@271:0>:int)
        
        P[<<<<<fold_right_1143@71:2>@79:1>@102:0>@213:1>@247:0>](var325:int,0:int,<<<fold_right_1143@71:0>@141:0>@199:0>:int,<<<<fold_right_1143@71:0>@141:0>@199:1>@261:0>:int),
        P[<fold_right_1143@71:1>](var325:int), (1 <= var325)
        |- P[<<<<fold_right_1143@71:0>@141:0>@199:1>@261:0>](<<<fold_right_1143@71:0>@141:0>@199:0>:int,
                                                             <<<<fold_right_1143@71:0>@141:0>@199:1>@261:0>:int)
        
        P[<<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:1>@243:0>](
        <f_main_2163@123:0>:int,<fold_right_1143@71:1>:int,<<fold_right_1143@71:2>@79:0>:int,<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>:int,<<<<<fold_right_1143@71:2>@79:1>@102:0>@213:1>@247:0>:int),
        P[<<make_list_1030@51:1>@67:0>](<f_main_2163@123:0>:int,<fold_right_1143@71:1>:int),
        P[<fold_right_1143@71:1>](<fold_right_1143@71:1>:int)|- P[<<<<<fold_right_1143@71:2>@79:1>@102:0>@213:1>@247:0>](
        <fold_right_1143@71:1>:int,<<fold_right_1143@71:2>@79:0>:int,
        <<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>:int,<<<<<fold_right_1143@71:2>@79:1>@102:0>@213:1>@247:0>:int)
        
        P[<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>](<make_list_1030@51:0>:int,(
                                                              1 + var326):int,0:int,<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>:int),
        P[<<<make_list_1030@51:1>@67:1>@83:0>](<make_list_1030@51:0>:int,(
                                               1 + var326):int,0:int),
        P[<<make_list_1030@54:1>@57:0>]((-1 + <make_list_1030@51:0>):int,var326:int),
        P[<<<make_list_1030@51:1>@67:1>@83:0>](<make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int),
        P[<make_list_1030@51:0>](<make_list_1030@51:0>:int),
        P[<<make_list_1030@54:1>@57:0>]((-1 + <make_list_1030@51:0>):int,(
                                        -1 + <<make_list_1030@51:1>@67:0>):int),
        P[<<make_list_1030@51:1>@67:0>](<make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int),
        ((<<<make_list_1030@51:1>@67:1>@83:0> = 0) &&
         ((<make_list_1030@51:0> > 0) &&
          (<<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:1>@243:0> =
           (<make_list_1030@51:0> + <<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>))))
        |- P[<<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:1>@243:0>](
        <make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int,
        <<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>:int,<<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:1>@243:0>:int)
        
        P[<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>](<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int,<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>:int),
        P[<<make_list_1030@51:1>@67:0>](<make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int),
        P[<<fold_right_1143@71:2>@79:0>](<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int),
        P[<make_list_1030@51:0>](<make_list_1030@51:0>:int),
        P[<<<make_list_1030@51:1>@67:1>@83:0>](<make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int)|- P[<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>](
        <make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int,
        <<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>:int)
        
        P[<<<fold_right_1143@71:0>@141:0>@199:0>](<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>:int),
        P[<fold_right_1143@71:1>](<fold_right_1143@71:1>:int),
        P[<<fold_right_1143@71:2>@79:0>](<fold_right_1143@71:1>:int,<<fold_right_1143@71:2>@79:0>:int),
        ((<<fold_right_1143@71:2>@79:0> = 0) && (<fold_right_1143@71:1> >= 1))
        |- P[<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>](<fold_right_1143@71:1>:int,
                                                            <<fold_right_1143@71:2>@79:0>:int,
                                                            <<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>:int)
        
        P[<<make_list_1030@51:1>@67:0>](<f_main_2163@123:0>:int,<fold_right_1143@71:1>:int),
        P[<<fold_right_1143@71:0>@141:2>](var329:int),
        P[<<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>](var329:int,<<<fold_right_1143@71:0>@141:0>@199:0>:int)|- P[<<<fold_right_1143@71:0>@141:0>@199:0>](
        <<<fold_right_1143@71:0>@141:0>@199:0>:int)
        
        P[<<<<fold_right_1143@108:4>@111:0>@157:1>@179:0>]((-1 + var330):int,<<<fold_right_1143@71:0>@141:1>@147:0>:int,<<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>:int),
        P[<fold_right_1143@71:1>](var330:int), (1 <= var330)
        |- P[<<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>](<<<fold_right_1143@71:0>@141:1>@147:0>:int,
                                                             <<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>:int)
        
        P[<fold_right_1143@108:1>](<fold_right_1143@108:1>:int),
        P[<<<fold_right_1143@108:3>@159:1>@177:0>](<fold_right_1143@108:1>:int,<<<fold_right_1143@108:4>@111:0>@157:0>:int,<<<<fold_right_1143@108:4>@111:0>@157:1>@179:0>:int),
        (<fold_right_1143@108:1> = 0)
        |- P[<<<<fold_right_1143@108:4>@111:0>@157:1>@179:0>](<fold_right_1143@108:1>:int,
                                                              <<<fold_right_1143@108:4>@111:0>@157:0>:int,
                                                              <<<<fold_right_1143@108:4>@111:0>@157:1>@179:0>:int)
        
        P[<<<fold_right_1143@71:3>@165:1>@171:0>]((1 + <fold_right_1143@108:1>):int,<<fold_right_1143@108:3>@159:0>:int,<<<fold_right_1143@108:3>@159:1>@177:0>:int),
        P[<fold_right_1143@71:1>]((1 + <fold_right_1143@108:1>):int),
        P[<fold_right_1143@108:1>](<fold_right_1143@108:1>:int), (<fold_right_1143@108:1> >= 0)
        |- P[<<<fold_right_1143@108:3>@159:1>@177:0>](<fold_right_1143@108:1>:int,
                                                      <<fold_right_1143@108:3>@159:0>:int,
                                                      <<<fold_right_1143@108:3>@159:1>@177:0>:int)
        
        P[<<make_list_1030@51:1>@67:0>](<f_main_2163@123:0>:int,<fold_right_1143@71:1>:int),
        P[<<fold_right_1143@71:3>@165:0>](<fold_right_1143@71:1>:int,<<fold_right_1143@71:3>@165:0>:int),
        P[<fold_right_1143@71:1>](<fold_right_1143@71:1>:int),
        (<<<fold_right_1143@71:3>@165:1>@171:0> = <<fold_right_1143@71:3>@165:0>)
        |- P[<<<fold_right_1143@71:3>@165:1>@171:0>](<fold_right_1143@71:1>:int,
                                                     <<fold_right_1143@71:3>@165:0>:int,
                                                     <<<fold_right_1143@71:3>@165:1>@171:0>:int)
        
        P[<fold_right_1143@71:1>](<fold_right_1143@71:1>:int),
        P[<<fold_right_1143@108:3>@159:0>]((-1 + <fold_right_1143@71:1>):int,<<fold_right_1143@71:3>@165:0>:int),
        (<fold_right_1143@71:1> >= 1)
        |- P[<<fold_right_1143@71:3>@165:0>](<fold_right_1143@71:1>:int,
                                             <<fold_right_1143@71:3>@165:0>:int)
        
        P[<fold_right_1143@108:1>](<fold_right_1143@108:1>:int),
        P[<<<fold_right_1143@108:4>@111:0>@157:0>](<fold_right_1143@108:1>:int,<<fold_right_1143@108:3>@159:0>:int),
        (<fold_right_1143@108:1> = 0)
        |- P[<<fold_right_1143@108:3>@159:0>](<fold_right_1143@108:1>:int,
                                              <<fold_right_1143@108:3>@159:0>:int)
        
        P[<<<fold_right_1143@71:0>@141:1>@147:0>](<<<fold_right_1143@108:4>@111:0>@157:0>:int),
        P[<fold_right_1143@71:1>]((1 + <fold_right_1143@108:1>):int),
        P[<fold_right_1143@108:1>](<fold_right_1143@108:1>:int), (<fold_right_1143@108:1> >= 0)
        |- P[<<<fold_right_1143@108:4>@111:0>@157:0>](<fold_right_1143@108:1>:int,
                                                      <<<fold_right_1143@108:4>@111:0>@157:0>:int)
        
        P[<<make_list_1030@51:1>@67:0>](<f_main_2163@123:0>:int,<fold_right_1143@71:1>:int),
        P[<<fold_right_1143@71:0>@141:2>](<<<fold_right_1143@71:0>@141:1>@147:0>:int)|- P[<<<fold_right_1143@71:0>@141:1>@147:0>](
        <<<fold_right_1143@71:0>@141:1>@147:0>:int)
        
        P[<<<fold_right_1143@71:4>@121:0>@127:0>](var333:int,<<fold_right_1143@71:0>@141:2>:int),
        P[<fold_right_1143@71:1>](var333:int), (1 <= var333)
        |- P[<<fold_right_1143@71:0>@141:2>](<<fold_right_1143@71:0>@141:2>:int)
        
        P[<<make_list_1030@51:1>@67:0>](<f_main_2163@123:0>:int,<fold_right_1143@71:1>:int),
        P[<fold_right_1143@71:1>](<fold_right_1143@71:1>:int), (<<<fold_right_1143@71:4>@121:0>@127:0> = 0)
        |- P[<<<fold_right_1143@71:4>@121:0>@127:0>](<fold_right_1143@71:1>:int,
                                                     <<<fold_right_1143@71:4>@121:0>@127:0>:int)
        
        P[<fold_right_1143@71:1>]((1 + <fold_right_1143@108:1>):int), (
        <fold_right_1143@108:1> >= 0) |- P[<fold_right_1143@108:1>](<fold_right_1143@108:1>:int)
        
        P[<<make_list_1030@51:1>@67:0>](<make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int),
        P[<<fold_right_1143@71:2>@79:0>](<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int),
        P[<make_list_1030@51:0>](<make_list_1030@51:0>:int)|- P[<<<make_list_1030@51:1>@67:1>@83:0>](
        <make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int)
        
        P[<fold_right_1143@71:1>](<fold_right_1143@71:1>:int),
        ((<<fold_right_1143@71:2>@79:0> = 0) && (<fold_right_1143@71:1> >= 1))
        |- P[<<fold_right_1143@71:2>@79:0>](<fold_right_1143@71:1>:int,
                                            <<fold_right_1143@71:2>@79:0>:int)
        
        P[<<make_list_1030@51:1>@67:0>](<f_main_2161@69:0>:int,<fold_right_1143@71:1>:int)|- P[<fold_right_1143@71:1>](
        <fold_right_1143@71:1>:int)
        
        P[<make_list_1030@51:0>](<make_list_1030@51:0>:int),
        P[<<make_list_1030@54:1>@57:0>]((-1 + <make_list_1030@51:0>):int,(
                                        -1 + <<make_list_1030@51:1>@67:0>):int), (
        <make_list_1030@51:0> > 0)
        |- P[<<make_list_1030@51:1>@67:0>](<make_list_1030@51:0>:int,
                                           <<make_list_1030@51:1>@67:0>:int)
        
        P[<make_list_1030@54:0>](<make_list_1030@54:0>:int),
        ((<<make_list_1030@54:1>@57:0> = 0) && (<make_list_1030@54:0> <= 0))
        |- P[<<make_list_1030@54:1>@57:0>](<make_list_1030@54:0>:int,
                                           <<make_list_1030@54:1>@57:0>:int)
        
        P[<make_list_1030@51:0>]((1 + <make_list_1030@54:0>):int), ((1 + <make_list_1030@54:0>) > 0)
        |- P[<make_list_1030@54:0>](<make_list_1030@54:0>:int)
        
        |- P[<make_list_1030@51:0>](<make_list_1030@51:0>:int)
      lower bounds:
        P[<make_list_1030@51:0>](<make_list_1030@51:0>:int) = true
        P[<make_list_1030@54:0>](<make_list_1030@54:0>:int) = ((1 + <make_list_1030@54:0>) > 0)
        P[<<make_list_1030@54:1>@57:0>](<make_list_1030@54:0>:int,<<make_list_1030@54:1>@57:0>:int) =
        ((<<make_list_1030@54:1>@57:0> = 0) && (<make_list_1030@54:0> = 0))
        P[<<make_list_1030@51:1>@67:0>](<make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int) =
        ((<make_list_1030@51:0> = 1) && (<<make_list_1030@51:1>@67:0> = 1))
        P[<fold_right_1143@71:1>](<fold_right_1143@71:1>:int) = (<fold_right_1143@71:1> = 1)
        P[<<<fold_right_1143@71:4>@121:0>@127:0>](<fold_right_1143@71:1>:int,<<<fold_right_1143@71:4>@121:0>@127:0>:int) =
        ((<fold_right_1143@71:1> = 1) && (<<<fold_right_1143@71:4>@121:0>@127:0> = 0))
        P[<fold_right_1143@108:1>](<fold_right_1143@108:1>:int) = (<fold_right_1143@108:1> = 0)
        P[<<fold_right_1143@71:2>@79:0>](<fold_right_1143@71:1>:int,<<fold_right_1143@71:2>@79:0>:int) =
        ((<<fold_right_1143@71:2>@79:0> = 0) && (<fold_right_1143@71:1> = 1))
        P[<<fold_right_1143@71:0>@141:2>](<<fold_right_1143@71:0>@141:2>:int) = (<<fold_right_1143@71:0>@141:2> = 0)
        P[<<<make_list_1030@51:1>@67:1>@83:0>](<make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int) =
        ((<make_list_1030@51:0> = 1) &&
         ((<<<make_list_1030@51:1>@67:1>@83:0> = 0) && (<<make_list_1030@51:1>@67:0> = 1)))
        P[<<<fold_right_1143@71:0>@141:1>@147:0>](<<<fold_right_1143@71:0>@141:1>@147:0>:int) =
        (<<<fold_right_1143@71:0>@141:1>@147:0> = 0)
        P[<<<fold_right_1143@108:4>@111:0>@157:0>](<fold_right_1143@108:1>:int,<<<fold_right_1143@108:4>@111:0>@157:0>:int) =
        ((<fold_right_1143@108:1> = 0) && (<<<fold_right_1143@108:4>@111:0>@157:0> = 0))
        P[<<fold_right_1143@108:3>@159:0>](<fold_right_1143@108:1>:int,<<fold_right_1143@108:3>@159:0>:int) =
        ((<fold_right_1143@108:1> = 0) && (<<fold_right_1143@108:3>@159:0> = 0))
        P[<<fold_right_1143@71:3>@165:0>](<fold_right_1143@71:1>:int,<<fold_right_1143@71:3>@165:0>:int) =
        ((<fold_right_1143@71:1> = 1) && (<<fold_right_1143@71:3>@165:0> = 0))
        P[<<<fold_right_1143@71:3>@165:1>@171:0>](<fold_right_1143@71:1>:int,<<fold_right_1143@71:3>@165:0>:int,<<<fold_right_1143@71:3>@165:1>@171:0>:int) =
        ((<fold_right_1143@71:1> = 1) &&
         ((<<fold_right_1143@71:3>@165:0> = 0) &&
          (<<<fold_right_1143@71:3>@165:1>@171:0> = <<fold_right_1143@71:3>@165:0>)))
        P[<<<fold_right_1143@108:3>@159:1>@177:0>](<fold_right_1143@108:1>:int,<<fold_right_1143@108:3>@159:0>:int,<<<fold_right_1143@108:3>@159:1>@177:0>:int) =
        ((<fold_right_1143@108:1> = 0) &&
         ((<<fold_right_1143@108:3>@159:0> = 0) &&
          (<<<fold_right_1143@108:3>@159:1>@177:0> = <<fold_right_1143@108:3>@159:0>)))
        P[<<<<fold_right_1143@108:4>@111:0>@157:1>@179:0>](<fold_right_1143@108:1>:int,<<<fold_right_1143@108:4>@111:0>@157:0>:int,<<<<fold_right_1143@108:4>@111:0>@157:1>@179:0>:int) =
        ((<fold_right_1143@108:1> = 0) &&
         ((<<<fold_right_1143@108:4>@111:0>@157:0> = 0) &&
          (<<<<fold_right_1143@108:4>@111:0>@157:1>@179:0> = <<<fold_right_1143@108:4>@111:0>@157:0>)))
        P[<<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>](<<<fold_right_1143@71:0>@141:1>@147:0>:int,<<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>:int) =
        ((<<<fold_right_1143@71:0>@141:1>@147:0> = 0) &&
         (<<<<fold_right_1143@71:0>@141:1>@147:1>@189:0> = <<<fold_right_1143@71:0>@141:1>@147:0>))
        P[<<<fold_right_1143@71:0>@141:0>@199:0>](<<<fold_right_1143@71:0>@141:0>@199:0>:int) =
        (<<<fold_right_1143@71:0>@141:0>@199:0> = 0)
        P[<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>](<fold_right_1143@71:1>:int,<<fold_right_1143@71:2>@79:0>:int,<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>:int) =
        ((<fold_right_1143@71:1> = 1) &&
         ((<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0> = 0) && (<<fold_right_1143@71:2>@79:0> = 0)))
        P[<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>](<make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int,<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>:int) =
        ((<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0> = 0) &&
         ((<make_list_1030@51:0> = 1) &&
          ((<<<make_list_1030@51:1>@67:1>@83:0> = 0) && (<<make_list_1030@51:1>@67:0> = 1))))
        P[<<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:1>@243:0>](
        <make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int,<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>:int,<<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:1>@243:0>:int) =
        ((<<make_list_1030@51:1>@67:0> = 1) &&
         ((<<<make_list_1030@51:1>@67:1>@83:0> = 0) &&
          ((<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0> = 0) &&
           ((<make_list_1030@51:0> = 1) &&
            (<<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:1>@243:0> =
             (<make_list_1030@51:0> + <<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>))))))
        P[<<<<<fold_right_1143@71:2>@79:1>@102:0>@213:1>@247:0>](<fold_right_1143@71:1>:int,<<fold_right_1143@71:2>@79:0>:int,<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>:int,<<<<<fold_right_1143@71:2>@79:1>@102:0>@213:1>@247:0>:int) =
        ((<fold_right_1143@71:1> = 1) &&
         ((<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0> = 0) &&
          ((<<fold_right_1143@71:2>@79:0> = 0) &&
           (<<<<<fold_right_1143@71:2>@79:1>@102:0>@213:1>@247:0> = (1 + <<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>)))))
        P[<<<<fold_right_1143@71:0>@141:0>@199:1>@261:0>](<<<fold_right_1143@71:0>@141:0>@199:0>:int,<<<<fold_right_1143@71:0>@141:0>@199:1>@261:0>:int) =
        ((<<<fold_right_1143@71:0>@141:0>@199:0> = 0) &&
         (<<<<fold_right_1143@71:0>@141:0>@199:1>@261:0> = (1 + <<<fold_right_1143@71:0>@141:0>@199:0>)))
        P[<<<fold_right_1143@71:0>@141:3>@271:0>](<<fold_right_1143@71:0>@141:2>:int,<<<fold_right_1143@71:0>@141:3>@271:0>:int) =
        ((<<fold_right_1143@71:0>@141:2> = 0) &&
         (<<<fold_right_1143@71:0>@141:3>@271:0> = (1 + <<fold_right_1143@71:0>@141:2>)))
        P[<<<<fold_right_1143@71:4>@121:0>@127:1>@285:0>](<fold_right_1143@71:1>:int,<<<fold_right_1143@71:4>@121:0>@127:0>:int,<<<<fold_right_1143@71:4>@121:0>@127:1>@285:0>:int) =
        ((<fold_right_1143@71:1> = 1) &&
         ((<<<fold_right_1143@71:4>@121:0>@127:0> = 0) &&
          (<<<<fold_right_1143@71:4>@121:0>@127:1>@285:0> = (1 + <<<fold_right_1143@71:4>@121:0>@127:0>))))
        P[<fail_2169@292:0>](<fail_2169@292:0>:bool) = false
      upper bounds:
        P[<<<<fold_right_1143@71:4>@121:0>@127:1>@285:0>](var339:int,var340:int,var341:int) =
        ((var339 <> 1) || ((var340 <> 0) || (var341 >= 0)))
        P[<<<<fold_right_1143@108:4>@111:0>@157:1>@179:0>](var335:int,var336:int,var337:int) =
        ((var336 <> 0) || ((var335 <> 0) || ((1 + var337) >= 0)))
      begin GenHcSolver.classify_pids(63581)[4]
        output:
          [<<<<fold_right_1143@108:4>@111:0>@157:1>@179:0>;<<<<fold_right_1143@71:4>@121:0>@127:1>@285:0>]
      end GenHcSolver.classify_pids(63581)[4] (0.000999 sec.)
      begin ApronInterface.convex_hull_interpolate(63685)[4]
        lb:(((<fold_right_1143@108:1> = 0) &&
             ((<<<fold_right_1143@108:4>@111:0>@157:0> = 0) &&
              (<<<<fold_right_1143@108:4>@111:0>@157:1>@179:0> = <<<fold_right_1143@108:4>@111:0>@157:0>))) ||
            ((<fold_right_1143@108:1> = 1) &&
             ((<<<fold_right_1143@108:4>@111:0>@157:0> = 0) &&
              (<<<<fold_right_1143@108:4>@111:0>@157:1>@179:0> = (1 + <<<fold_right_1143@108:4>@111:0>@157:0>)))))
        nub:((not
                ((<<<fold_right_1143@108:4>@111:0>@157:0> <> 0) ||
                 ((<fold_right_1143@108:1> <> 0) || ((1 + <<<<fold_right_1143@108:4>@111:0>@157:1>@179:0>) >= 0)))) ||
             (not
                ((<fold_right_1143@108:1> <> 1) ||
                 ((<<<fold_right_1143@108:4>@111:0>@157:0> <> 0) ||
                  (<<<<fold_right_1143@108:4>@111:0>@157:1>@179:0> >= 0)))))
        lb':(((<fold_right_1143@108:1> = 0) &&
              ((<<<fold_right_1143@108:4>@111:0>@157:0> = 0) &&
               (<<<<fold_right_1143@108:4>@111:0>@157:1>@179:0> = <<<fold_right_1143@108:4>@111:0>@157:0>))) ||
             ((<fold_right_1143@108:1> = 1) &&
              ((<<<fold_right_1143@108:4>@111:0>@157:0> = 0) &&
               (<<<<fold_right_1143@108:4>@111:0>@157:1>@179:0> = (1 + <<<fold_right_1143@108:4>@111:0>@157:0>)))))
        nub':((not
                 ((<<<fold_right_1143@108:4>@111:0>@157:0> <> 0) ||
                  ((<fold_right_1143@108:1> <> 0) || ((1 + <<<<fold_right_1143@108:4>@111:0>@157:1>@179:0>) >= 0)))) ||
              (not
                 ((<fold_right_1143@108:1> <> 1) ||
                  ((<<<fold_right_1143@108:4>@111:0>@157:0> <> 0) ||
                   (<<<<fold_right_1143@108:4>@111:0>@157:1>@179:0> >= 0)))))
        begin InterpProver.interpolate(63686)[5]
          begin InterpProver.interpolate_fresh(63687)[6]
            begin InterpProver.interpolate_log(63688)[7]
              input1: (((<fold_right_1143@108:1> = 0) &&
                        ((<<<fold_right_1143@108:4>@111:0>@157:0> = 0) &&
                         (<<<<fold_right_1143@108:4>@111:0>@157:1>@179:0> = <<<fold_right_1143@108:4>@111:0>@157:0>))) ||
                       ((<fold_right_1143@108:1> = 1) &&
                        ((<<<fold_right_1143@108:4>@111:0>@157:0> = 0) &&
                         (<<<<fold_right_1143@108:4>@111:0>@157:1>@179:0> =
                          (1 + <<<fold_right_1143@108:4>@111:0>@157:0>)))))
              input2: ((not
                          ((<<<fold_right_1143@108:4>@111:0>@157:0> <> 0) ||
                           ((<fold_right_1143@108:1> <> 0) ||
                            ((1 + <<<<fold_right_1143@108:4>@111:0>@157:1>@179:0>) >= 0)))) ||
                       (not
                          ((<fold_right_1143@108:1> <> 1) ||
                           ((<<<fold_right_1143@108:4>@111:0>@157:0> <> 0) ||
                            (<<<<fold_right_1143@108:4>@111:0>@157:1>@179:0> >= 0)))))
              begin InterpProver.interpolate_check(63689)[8]
                begin InterpProver.interpolate_simplify(63690)[9]
                  begin InterpProver.interpolate_quick(63924)[10]
                    begin CsisatInterface.interpolate_csisat_wrap(63933)[11]
                      begin CsisatInterface.interpolate_csisat_post_process(63934)[12]
                        begin CsisatInterface.interpolate_csisat_log(63935)[13]
                          input1: (((0 = v_sep_fold_right_1143_sep_108_sep_1 & v_sep_fold_right_1143_sep_108_sep_4_sep_111_sep_0_sep_157_sep_0 = v_sep_fold_right_1143_sep_108_sep_4_sep_111_sep_0_sep_157_sep_1_sep_179_sep_0) | (1 = v_sep_fold_right_1143_sep_108_sep_1 & v_sep_fold_right_1143_sep_108_sep_4_sep_111_sep_0_sep_157_sep_1_sep_179_sep_0 = (1 + v_sep_fold_right_1143_sep_108_sep_4_sep_111_sep_0_sep_157_sep_0))) & 0 = v_sep_fold_right_1143_sep_108_sep_4_sep_111_sep_0_sep_157_sep_0)
                          input2: (((0 = v_sep_fold_right_1143_sep_108_sep_1 & (2 + v_sep_fold_right_1143_sep_108_sep_4_sep_111_sep_0_sep_157_sep_1_sep_179_sep_0) <= 0) | (1 = v_sep_fold_right_1143_sep_108_sep_1 & (1 + v_sep_fold_right_1143_sep_108_sep_4_sep_111_sep_0_sep_157_sep_1_sep_179_sep_0) <= 0)) & 0 = v_sep_fold_right_1143_sep_108_sep_4_sep_111_sep_0_sep_157_sep_0)
                          begin CsisatInterface.interpolate_csisat_raw(63936)[14]
                            
                          end CsisatInterface.interpolate_csisat_raw(63936)[14] (0.003000 sec.)
                          output: ((((((not 0 = v_sep_fold_right_1143_sep_108_sep_1 & 0 = v_sep_fold_right_1143_sep_108_sep_1) | -1*v_sep_fold_right_1143_sep_108_sep_4_sep_111_sep_0_sep_157_sep_1_sep_179_sep_0 <= -1) & (-1*v_sep_fold_right_1143_sep_108_sep_4_sep_111_sep_0_sep_157_sep_1_sep_179_sep_0 <= 0 | -0.666666666667*v_sep_fold_right_1143_sep_108_sep_4_sep_111_sep_0_sep_157_sep_1_sep_179_sep_0 <= -0.666666666667)) | not 1 = v_sep_fold_right_1143_sep_108_sep_1) & (1 = v_sep_fold_right_1143_sep_108_sep_1 | -1*v_sep_fold_right_1143_sep_108_sep_4_sep_111_sep_0_sep_157_sep_1_sep_179_sep_0 <= 0)) | not 0 = v_sep_fold_right_1143_sep_108_sep_4_sep_111_sep_0_sep_157_sep_0)
                          
                        end CsisatInterface.interpolate_csisat_log(63935)[13] (0.003000 sec.)
                        after simplification: ((((((not 0 = v_sep_fold_right_1143_sep_108_sep_1 & 0 = v_sep_fold_right_1143_sep_108_sep_1) | -1*v_sep_fold_right_1143_sep_108_sep_4_sep_111_sep_0_sep_157_sep_1_sep_179_sep_0 <= -1) & (-2*v_sep_fold_right_1143_sep_108_sep_4_sep_111_sep_0_sep_157_sep_1_sep_179_sep_0 <= -2 | -1*v_sep_fold_right_1143_sep_108_sep_4_sep_111_sep_0_sep_157_sep_1_sep_179_sep_0 <= 0)) | not 1 = v_sep_fold_right_1143_sep_108_sep_1) & (1 = v_sep_fold_right_1143_sep_108_sep_1 | -1*v_sep_fold_right_1143_sep_108_sep_4_sep_111_sep_0_sep_157_sep_1_sep_179_sep_0 <= 0)) | not 0 = v_sep_fold_right_1143_sep_108_sep_4_sep_111_sep_0_sep_157_sep_0)
                        after dnf conversion: ((not 1 = v_sep_fold_right_1143_sep_108_sep_1 & -1*v_sep_fold_right_1143_sep_108_sep_4_sep_111_sep_0_sep_157_sep_1_sep_179_sep_0 <= 0) | (not 1 = v_sep_fold_right_1143_sep_108_sep_1 & 1 = v_sep_fold_right_1143_sep_108_sep_1) | (not 0 = v_sep_fold_right_1143_sep_108_sep_1 & 0 = v_sep_fold_right_1143_sep_108_sep_1 & -2*v_sep_fold_right_1143_sep_108_sep_4_sep_111_sep_0_sep_157_sep_1_sep_179_sep_0 <= -2 & -1*v_sep_fold_right_1143_sep_108_sep_4_sep_111_sep_0_sep_157_sep_1_sep_179_sep_0 <= 0) | (not 0 = v_sep_fold_right_1143_sep_108_sep_1 & 0 = v_sep_fold_right_1143_sep_108_sep_1 & -2*v_sep_fold_right_1143_sep_108_sep_4_sep_111_sep_0_sep_157_sep_1_sep_179_sep_0 <= -2 & 1 = v_sep_fold_right_1143_sep_108_sep_1) | (not 0 = v_sep_fold_right_1143_sep_108_sep_1 & 0 = v_sep_fold_right_1143_sep_108_sep_1 & -1*v_sep_fold_right_1143_sep_108_sep_4_sep_111_sep_0_sep_157_sep_1_sep_179_sep_0 <= 0 & -1*v_sep_fold_right_1143_sep_108_sep_4_sep_111_sep_0_sep_157_sep_1_sep_179_sep_0 <= 0) | (not 0 = v_sep_fold_right_1143_sep_108_sep_1 & 0 = v_sep_fold_right_1143_sep_108_sep_1 & -1*v_sep_fold_right_1143_sep_108_sep_4_sep_111_sep_0_sep_157_sep_1_sep_179_sep_0 <= 0 & 1 = v_sep_fold_right_1143_sep_108_sep_1) | (-1*v_sep_fold_right_1143_sep_108_sep_4_sep_111_sep_0_sep_157_sep_1_sep_179_sep_0 <= -1 & -2*v_sep_fold_right_1143_sep_108_sep_4_sep_111_sep_0_sep_157_sep_1_sep_179_sep_0 <= -2 & -1*v_sep_fold_right_1143_sep_108_sep_4_sep_111_sep_0_sep_157_sep_1_sep_179_sep_0 <= 0) | (-1*v_sep_fold_right_1143_sep_108_sep_4_sep_111_sep_0_sep_157_sep_1_sep_179_sep_0 <= -1 & -2*v_sep_fold_right_1143_sep_108_sep_4_sep_111_sep_0_sep_157_sep_1_sep_179_sep_0 <= -2 & 1 = v_sep_fold_right_1143_sep_108_sep_1) | (-1*v_sep_fold_right_1143_sep_108_sep_4_sep_111_sep_0_sep_157_sep_1_sep_179_sep_0 <= -1 & -1*v_sep_fold_right_1143_sep_108_sep_4_sep_111_sep_0_sep_157_sep_1_sep_179_sep_0 <= 0 & -1*v_sep_fold_right_1143_sep_108_sep_4_sep_111_sep_0_sep_157_sep_1_sep_179_sep_0 <= 0) | (-1*v_sep_fold_right_1143_sep_108_sep_4_sep_111_sep_0_sep_157_sep_1_sep_179_sep_0 <= -1 & -1*v_sep_fold_right_1143_sep_108_sep_4_sep_111_sep_0_sep_157_sep_1_sep_179_sep_0 <= 0 & 1 = v_sep_fold_right_1143_sep_108_sep_1) | (not 0 = v_sep_fold_right_1143_sep_108_sep_4_sep_111_sep_0_sep_157_sep_0))
                        
                      end CsisatInterface.interpolate_csisat_post_process(63934)[12] (0.003000 sec.)
                      
                    end CsisatInterface.interpolate_csisat_wrap(63933)[11] (0.003000 sec.)
                    
                  end InterpProver.interpolate_quick(63924)[10] (0.004000 sec.)
                  begin minimizing # of disjunctions(64160)[10]
                    input: ((1 <= <<<<fold_right_1143@108:4>@111:0>@157:1>@179:0>) ||
                            ((0 <> <<<fold_right_1143@108:4>@111:0>@157:0>) ||
                             (((1 <> <fold_right_1143@108:1>) && (0 <= <<<<fold_right_1143@108:4>@111:0>@157:1>@179:0>)) ||
                              ((<fold_right_1143@108:1> = 1) && (1 <= <<<<fold_right_1143@108:4>@111:0>@157:1>@179:0>)))))
                    output: (((<fold_right_1143@108:1> = 1) && (1 <= <<<<fold_right_1143@108:4>@111:0>@157:1>@179:0>)) ||
                             ((1 <> <fold_right_1143@108:1>) && (0 <= <<<<fold_right_1143@108:4>@111:0>@157:1>@179:0>)))
                  end minimizing # of disjunctions(64160)[10] (0.001000 sec.)
                  begin minimizing # of conjunctions(64266)[10]
                    input: ((<fold_right_1143@108:1> = 1) && (1 <= <<<<fold_right_1143@108:4>@111:0>@157:1>@179:0>))
                    output: (1 <= <<<<fold_right_1143@108:4>@111:0>@157:1>@179:0>)
                  end minimizing # of conjunctions(64266)[10] (0.001000 sec.)
                  begin minimizing # of conjunctions(64457)[10]
                    input: ((1 <> <fold_right_1143@108:1>) && (0 <= <<<<fold_right_1143@108:4>@111:0>@157:1>@179:0>))
                    output: (0 <= <<<<fold_right_1143@108:4>@111:0>@157:1>@179:0>)
                  end minimizing # of conjunctions(64457)[10] (0.002000 sec.)
                  
                end InterpProver.interpolate_simplify(63690)[9] (0.009999 sec.)
                
              end InterpProver.interpolate_check(63689)[8] (0.009999 sec.)
              output: ((1 <= <<<<fold_right_1143@108:4>@111:0>@157:1>@179:0>) ||
                       (0 <= <<<<fold_right_1143@108:4>@111:0>@157:1>@179:0>))
            end InterpProver.interpolate_log(63688)[7] (0.010999 sec.)
            
          end InterpProver.interpolate_fresh(63687)[6] (0.010999 sec.)
          
        end InterpProver.interpolate(63686)[5] (0.010999 sec.)
        output:
          P[<<<<fold_right_1143@108:4>@111:0>@157:1>@179:0>](<fold_right_1143@108:1>:int,<<<fold_right_1143@108:4>@111:0>@157:0>:int,<<<<fold_right_1143@108:4>@111:0>@157:1>@179:0>:int) =
          ((1 <= <<<<fold_right_1143@108:4>@111:0>@157:1>@179:0>) ||
           (0 <= <<<<fold_right_1143@108:4>@111:0>@157:1>@179:0>))
          P[<<<<fold_right_1143@71:4>@121:0>@127:1>@285:0>](<fold_right_1143@108:1>:int,<<<fold_right_1143@108:4>@111:0>@157:0>:int,<<<<fold_right_1143@108:4>@111:0>@157:1>@179:0>:int) =
          ((1 <= <<<<fold_right_1143@108:4>@111:0>@157:1>@179:0>) ||
           (0 <= <<<<fold_right_1143@108:4>@111:0>@157:1>@179:0>))
      end ApronInterface.convex_hull_interpolate(63685)[4] (0.010999 sec.)
      Horn clauses:
        P[<fail_2169@292:0>](<fail_2169@292:0>:bool)|- bot
        
        P[<<<fold_right_1143@71:0>@141:3>@271:0>](<<<fold_right_1143@71:4>@121:0>@127:0>:int,<<<<fold_right_1143@71:4>@121:0>@127:1>@285:0>:int),
        P[<fold_right_1143@71:1>](<fold_right_1143@71:1>:int),
        ((<fold_right_1143@71:1> >= 1) && (0 > <<<<fold_right_1143@71:4>@121:0>@127:1>@285:0>)) |- bot
        
        P[<<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>](<<fold_right_1143@71:0>@141:2>:int,var322:int),
        P[<<<<fold_right_1143@71:0>@141:0>@199:1>@261:0>](var322:int,<<<fold_right_1143@71:0>@141:3>@271:0>:int),
        P[<<make_list_1030@51:1>@67:0>](<f_main_2163@123:0>:int,<fold_right_1143@71:1>:int),
        P[<<fold_right_1143@71:0>@141:2>](<<fold_right_1143@71:0>@141:2>:int)|- P[<<<fold_right_1143@71:0>@141:3>@271:0>](
        <<fold_right_1143@71:0>@141:2>:int,<<<fold_right_1143@71:0>@141:3>@271:0>:int)
        
        P[<<<<<fold_right_1143@71:2>@79:1>@102:0>@213:1>@247:0>](var325:int,0:int,<<<fold_right_1143@71:0>@141:0>@199:0>:int,<<<<fold_right_1143@71:0>@141:0>@199:1>@261:0>:int),
        P[<fold_right_1143@71:1>](var325:int), (1 <= var325)
        |- P[<<<<fold_right_1143@71:0>@141:0>@199:1>@261:0>](<<<fold_right_1143@71:0>@141:0>@199:0>:int,
                                                             <<<<fold_right_1143@71:0>@141:0>@199:1>@261:0>:int)
        
        P[<<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:1>@243:0>](
        <f_main_2163@123:0>:int,<fold_right_1143@71:1>:int,<<fold_right_1143@71:2>@79:0>:int,<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>:int,<<<<<fold_right_1143@71:2>@79:1>@102:0>@213:1>@247:0>:int),
        P[<<make_list_1030@51:1>@67:0>](<f_main_2163@123:0>:int,<fold_right_1143@71:1>:int),
        P[<fold_right_1143@71:1>](<fold_right_1143@71:1>:int)|- P[<<<<<fold_right_1143@71:2>@79:1>@102:0>@213:1>@247:0>](
        <fold_right_1143@71:1>:int,<<fold_right_1143@71:2>@79:0>:int,
        <<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>:int,<<<<<fold_right_1143@71:2>@79:1>@102:0>@213:1>@247:0>:int)
        
        P[<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>](<make_list_1030@51:0>:int,(
                                                              1 + var326):int,0:int,<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>:int),
        P[<<<make_list_1030@51:1>@67:1>@83:0>](<make_list_1030@51:0>:int,(
                                               1 + var326):int,0:int),
        P[<<make_list_1030@54:1>@57:0>]((-1 + <make_list_1030@51:0>):int,var326:int),
        P[<<<make_list_1030@51:1>@67:1>@83:0>](<make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int),
        P[<make_list_1030@51:0>](<make_list_1030@51:0>:int),
        P[<<make_list_1030@54:1>@57:0>]((-1 + <make_list_1030@51:0>):int,(
                                        -1 + <<make_list_1030@51:1>@67:0>):int),
        P[<<make_list_1030@51:1>@67:0>](<make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int),
        ((<<<make_list_1030@51:1>@67:1>@83:0> = 0) &&
         ((<make_list_1030@51:0> > 0) &&
          (<<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:1>@243:0> =
           (<make_list_1030@51:0> + <<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>))))
        |- P[<<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:1>@243:0>](
        <make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int,
        <<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>:int,<<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:1>@243:0>:int)
        
        P[<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>](<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int,<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>:int),
        P[<<make_list_1030@51:1>@67:0>](<make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int),
        P[<<fold_right_1143@71:2>@79:0>](<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int),
        P[<make_list_1030@51:0>](<make_list_1030@51:0>:int),
        P[<<<make_list_1030@51:1>@67:1>@83:0>](<make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int)|- P[<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>](
        <make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int,
        <<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>:int)
        
        P[<<<fold_right_1143@71:0>@141:0>@199:0>](<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>:int),
        P[<fold_right_1143@71:1>](<fold_right_1143@71:1>:int),
        P[<<fold_right_1143@71:2>@79:0>](<fold_right_1143@71:1>:int,<<fold_right_1143@71:2>@79:0>:int),
        ((<<fold_right_1143@71:2>@79:0> = 0) && (<fold_right_1143@71:1> >= 1))
        |- P[<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>](<fold_right_1143@71:1>:int,
                                                            <<fold_right_1143@71:2>@79:0>:int,
                                                            <<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>:int)
        
        P[<<make_list_1030@51:1>@67:0>](<f_main_2163@123:0>:int,<fold_right_1143@71:1>:int),
        P[<<fold_right_1143@71:0>@141:2>](var329:int),
        P[<<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>](var329:int,<<<fold_right_1143@71:0>@141:0>@199:0>:int)|- P[<<<fold_right_1143@71:0>@141:0>@199:0>](
        <<<fold_right_1143@71:0>@141:0>@199:0>:int)
        
        P[<fold_right_1143@71:1>](var330:int), ((1 <= var330) && (0 <= <<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>))
        |- P[<<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>](<<<fold_right_1143@71:0>@141:1>@147:0>:int,
                                                             <<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>:int)
        
        P[<fold_right_1143@108:1>](0:int),
        P[<<<fold_right_1143@108:3>@159:1>@177:0>](0:int,<<<fold_right_1143@108:4>@111:0>@157:0>:int,<<<<fold_right_1143@108:4>@111:0>@157:1>@179:0>:int),
        (0 > <<<<fold_right_1143@108:4>@111:0>@157:1>@179:0>) |- bot
        
        P[<<<fold_right_1143@71:3>@165:1>@171:0>]((1 + <fold_right_1143@108:1>):int,<<fold_right_1143@108:3>@159:0>:int,<<<fold_right_1143@108:3>@159:1>@177:0>:int),
        P[<fold_right_1143@71:1>]((1 + <fold_right_1143@108:1>):int),
        P[<fold_right_1143@108:1>](<fold_right_1143@108:1>:int), (<fold_right_1143@108:1> >= 0)
        |- P[<<<fold_right_1143@108:3>@159:1>@177:0>](<fold_right_1143@108:1>:int,
                                                      <<fold_right_1143@108:3>@159:0>:int,
                                                      <<<fold_right_1143@108:3>@159:1>@177:0>:int)
        
        P[<<make_list_1030@51:1>@67:0>](<f_main_2163@123:0>:int,<fold_right_1143@71:1>:int),
        P[<<fold_right_1143@71:3>@165:0>](<fold_right_1143@71:1>:int,<<fold_right_1143@71:3>@165:0>:int),
        P[<fold_right_1143@71:1>](<fold_right_1143@71:1>:int),
        (<<<fold_right_1143@71:3>@165:1>@171:0> = <<fold_right_1143@71:3>@165:0>)
        |- P[<<<fold_right_1143@71:3>@165:1>@171:0>](<fold_right_1143@71:1>:int,
                                                     <<fold_right_1143@71:3>@165:0>:int,
                                                     <<<fold_right_1143@71:3>@165:1>@171:0>:int)
        
        P[<fold_right_1143@71:1>](<fold_right_1143@71:1>:int),
        P[<<fold_right_1143@108:3>@159:0>]((-1 + <fold_right_1143@71:1>):int,<<fold_right_1143@71:3>@165:0>:int),
        (<fold_right_1143@71:1> >= 1)
        |- P[<<fold_right_1143@71:3>@165:0>](<fold_right_1143@71:1>:int,
                                             <<fold_right_1143@71:3>@165:0>:int)
        
        P[<fold_right_1143@108:1>](<fold_right_1143@108:1>:int),
        P[<<<fold_right_1143@108:4>@111:0>@157:0>](<fold_right_1143@108:1>:int,<<fold_right_1143@108:3>@159:0>:int),
        (<fold_right_1143@108:1> = 0)
        |- P[<<fold_right_1143@108:3>@159:0>](<fold_right_1143@108:1>:int,
                                              <<fold_right_1143@108:3>@159:0>:int)
        
        P[<<<fold_right_1143@71:0>@141:1>@147:0>](<<<fold_right_1143@108:4>@111:0>@157:0>:int),
        P[<fold_right_1143@71:1>]((1 + <fold_right_1143@108:1>):int),
        P[<fold_right_1143@108:1>](<fold_right_1143@108:1>:int), (<fold_right_1143@108:1> >= 0)
        |- P[<<<fold_right_1143@108:4>@111:0>@157:0>](<fold_right_1143@108:1>:int,
                                                      <<<fold_right_1143@108:4>@111:0>@157:0>:int)
        
        P[<<make_list_1030@51:1>@67:0>](<f_main_2163@123:0>:int,<fold_right_1143@71:1>:int),
        P[<<fold_right_1143@71:0>@141:2>](<<<fold_right_1143@71:0>@141:1>@147:0>:int)|- P[<<<fold_right_1143@71:0>@141:1>@147:0>](
        <<<fold_right_1143@71:0>@141:1>@147:0>:int)
        
        P[<<<fold_right_1143@71:4>@121:0>@127:0>](var333:int,<<fold_right_1143@71:0>@141:2>:int),
        P[<fold_right_1143@71:1>](var333:int), (1 <= var333)
        |- P[<<fold_right_1143@71:0>@141:2>](<<fold_right_1143@71:0>@141:2>:int)
        
        P[<<make_list_1030@51:1>@67:0>](<f_main_2163@123:0>:int,<fold_right_1143@71:1>:int),
        P[<fold_right_1143@71:1>](<fold_right_1143@71:1>:int), (<<<fold_right_1143@71:4>@121:0>@127:0> = 0)
        |- P[<<<fold_right_1143@71:4>@121:0>@127:0>](<fold_right_1143@71:1>:int,
                                                     <<<fold_right_1143@71:4>@121:0>@127:0>:int)
        
        P[<fold_right_1143@71:1>]((1 + <fold_right_1143@108:1>):int), (
        <fold_right_1143@108:1> >= 0) |- P[<fold_right_1143@108:1>](<fold_right_1143@108:1>:int)
        
        P[<<make_list_1030@51:1>@67:0>](<make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int),
        P[<<fold_right_1143@71:2>@79:0>](<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int),
        P[<make_list_1030@51:0>](<make_list_1030@51:0>:int)|- P[<<<make_list_1030@51:1>@67:1>@83:0>](
        <make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int)
        
        P[<fold_right_1143@71:1>](<fold_right_1143@71:1>:int),
        ((<<fold_right_1143@71:2>@79:0> = 0) && (<fold_right_1143@71:1> >= 1))
        |- P[<<fold_right_1143@71:2>@79:0>](<fold_right_1143@71:1>:int,
                                            <<fold_right_1143@71:2>@79:0>:int)
        
        P[<<make_list_1030@51:1>@67:0>](<f_main_2161@69:0>:int,<fold_right_1143@71:1>:int)|- P[<fold_right_1143@71:1>](
        <fold_right_1143@71:1>:int)
        
        P[<make_list_1030@51:0>](<make_list_1030@51:0>:int),
        P[<<make_list_1030@54:1>@57:0>]((-1 + <make_list_1030@51:0>):int,(
                                        -1 + <<make_list_1030@51:1>@67:0>):int), (
        <make_list_1030@51:0> > 0)
        |- P[<<make_list_1030@51:1>@67:0>](<make_list_1030@51:0>:int,
                                           <<make_list_1030@51:1>@67:0>:int)
        
        P[<make_list_1030@54:0>](<make_list_1030@54:0>:int),
        ((<<make_list_1030@54:1>@57:0> = 0) && (<make_list_1030@54:0> <= 0))
        |- P[<<make_list_1030@54:1>@57:0>](<make_list_1030@54:0>:int,
                                           <<make_list_1030@54:1>@57:0>:int)
        
        P[<make_list_1030@51:0>]((1 + <make_list_1030@54:0>):int), ((1 + <make_list_1030@54:0>) > 0)
        |- P[<make_list_1030@54:0>](<make_list_1030@54:0>:int)
        
        |- P[<make_list_1030@51:0>](<make_list_1030@51:0>:int)
      lower bounds:
        P[<make_list_1030@51:0>](<make_list_1030@51:0>:int) = true
        P[<fail_2169@292:0>](var345:bool) = false
        P[<make_list_1030@54:0>](<make_list_1030@54:0>:int) = ((1 + <make_list_1030@54:0>) > 0)
        P[<<make_list_1030@54:1>@57:0>](<make_list_1030@54:0>:int,<<make_list_1030@54:1>@57:0>:int) =
        ((<<make_list_1030@54:1>@57:0> = 0) && (<make_list_1030@54:0> = 0))
        P[<<make_list_1030@51:1>@67:0>](<make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int) =
        ((<make_list_1030@51:0> = 1) && (<<make_list_1030@51:1>@67:0> = 1))
        P[<fold_right_1143@71:1>](<fold_right_1143@71:1>:int) = (<fold_right_1143@71:1> = 1)
        P[<<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>](<<<fold_right_1143@71:0>@141:1>@147:0>:int,<<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>:int) =
        (0 <= <<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>)
        P[<<<fold_right_1143@71:4>@121:0>@127:0>](<fold_right_1143@71:1>:int,<<<fold_right_1143@71:4>@121:0>@127:0>:int) =
        ((<fold_right_1143@71:1> = 1) && (<<<fold_right_1143@71:4>@121:0>@127:0> = 0))
        P[<fold_right_1143@108:1>](<fold_right_1143@108:1>:int) = (<fold_right_1143@108:1> = 0)
        P[<<fold_right_1143@71:2>@79:0>](<fold_right_1143@71:1>:int,<<fold_right_1143@71:2>@79:0>:int) =
        ((<<fold_right_1143@71:2>@79:0> = 0) && (<fold_right_1143@71:1> = 1))
        P[<<fold_right_1143@71:0>@141:2>](<<fold_right_1143@71:0>@141:2>:int) = (<<fold_right_1143@71:0>@141:2> = 0)
        P[<<<make_list_1030@51:1>@67:1>@83:0>](<make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int) =
        ((<make_list_1030@51:0> = 1) &&
         ((<<<make_list_1030@51:1>@67:1>@83:0> = 0) && (<<make_list_1030@51:1>@67:0> = 1)))
        P[<<<fold_right_1143@71:0>@141:0>@199:0>](<<<fold_right_1143@71:0>@141:0>@199:0>:int) =
        (0 <= <<<fold_right_1143@71:0>@141:0>@199:0>)
        P[<<<fold_right_1143@71:0>@141:1>@147:0>](<<<fold_right_1143@71:0>@141:1>@147:0>:int) =
        (<<<fold_right_1143@71:0>@141:1>@147:0> = 0)
        P[<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>](<fold_right_1143@71:1>:int,<<fold_right_1143@71:2>@79:0>:int,<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>:int) =
        ((<fold_right_1143@71:1> = 1) &&
         ((<<fold_right_1143@71:2>@79:0> = 0) && (0 <= <<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>)))
        P[<<<fold_right_1143@108:4>@111:0>@157:0>](<fold_right_1143@108:1>:int,<<<fold_right_1143@108:4>@111:0>@157:0>:int) =
        ((<fold_right_1143@108:1> = 0) && (<<<fold_right_1143@108:4>@111:0>@157:0> = 0))
        P[<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>](<make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int,<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>:int) =
        ((<make_list_1030@51:0> = 1) &&
         ((<<<make_list_1030@51:1>@67:1>@83:0> = 0) &&
          ((<<make_list_1030@51:1>@67:0> = 1) && (0 <= <<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>))))
        P[<<fold_right_1143@108:3>@159:0>](<fold_right_1143@108:1>:int,<<fold_right_1143@108:3>@159:0>:int) =
        ((<fold_right_1143@108:1> = 0) && (<<fold_right_1143@108:3>@159:0> = 0))
        P[<<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:1>@243:0>](
        <make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int,<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>:int,<<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:1>@243:0>:int) =
        ((<<make_list_1030@51:1>@67:0> = 1) &&
         ((<<<make_list_1030@51:1>@67:1>@83:0> = 0) &&
          ((<make_list_1030@51:0> = 1) &&
           ((0 <= <<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>) &&
            (<<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:1>@243:0> =
             (<make_list_1030@51:0> + <<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>))))))
        P[<<fold_right_1143@71:3>@165:0>](<fold_right_1143@71:1>:int,<<fold_right_1143@71:3>@165:0>:int) =
        ((<fold_right_1143@71:1> = 1) && (<<fold_right_1143@71:3>@165:0> = 0))
        P[<<<<<fold_right_1143@71:2>@79:1>@102:0>@213:1>@247:0>](<fold_right_1143@71:1>:int,<<fold_right_1143@71:2>@79:0>:int,<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>:int,<<<<<fold_right_1143@71:2>@79:1>@102:0>@213:1>@247:0>:int) =
        ((<fold_right_1143@71:1> = 1) &&
         ((<<fold_right_1143@71:2>@79:0> = 0) &&
          ((0 <= <<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>) &&
           (<<<<<fold_right_1143@71:2>@79:1>@102:0>@213:1>@247:0> = (1 + <<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>)))))
        P[<<<fold_right_1143@71:3>@165:1>@171:0>](<fold_right_1143@71:1>:int,<<fold_right_1143@71:3>@165:0>:int,<<<fold_right_1143@71:3>@165:1>@171:0>:int) =
        ((<fold_right_1143@71:1> = 1) &&
         ((<<fold_right_1143@71:3>@165:0> = 0) &&
          (<<<fold_right_1143@71:3>@165:1>@171:0> = <<fold_right_1143@71:3>@165:0>)))
        P[<<<<fold_right_1143@71:0>@141:0>@199:1>@261:0>](<<<fold_right_1143@71:0>@141:0>@199:0>:int,<<<<fold_right_1143@71:0>@141:0>@199:1>@261:0>:int) =
        ((<<<<fold_right_1143@71:0>@141:0>@199:1>@261:0> = (1 + <<<fold_right_1143@71:0>@141:0>@199:0>)) &&
         (0 <= <<<fold_right_1143@71:0>@141:0>@199:0>))
        P[<<<fold_right_1143@108:3>@159:1>@177:0>](<fold_right_1143@108:1>:int,<<fold_right_1143@108:3>@159:0>:int,<<<fold_right_1143@108:3>@159:1>@177:0>:int) =
        ((<fold_right_1143@108:1> = 0) &&
         ((<<fold_right_1143@108:3>@159:0> = 0) &&
          (<<<fold_right_1143@108:3>@159:1>@177:0> = <<fold_right_1143@108:3>@159:0>)))
        P[<<<fold_right_1143@71:0>@141:3>@271:0>](<<fold_right_1143@71:0>@141:2>:int,<<<fold_right_1143@71:0>@141:3>@271:0>:int) =
        ((<<fold_right_1143@71:0>@141:2> = 0) && (1 <= <<<fold_right_1143@71:0>@141:3>@271:0>))
      upper bounds:
        P[<<<fold_right_1143@108:3>@159:1>@177:0>](var353:int,var354:int,var355:int) = ((var353 <> 0) || (0 <= var355))
        P[<<<fold_right_1143@71:3>@165:1>@171:0>](var348:int,var349:int,var350:int) = ((var348 <> 1) || (0 <= var350))
      begin GenHcSolver.classify_pids(90212)[4]
        output:
          [<<<fold_right_1143@71:3>@165:1>@171:0>;<<<fold_right_1143@108:3>@159:1>@177:0>]
      end GenHcSolver.classify_pids(90212)[4] (0.000000 sec.)
      begin ApronInterface.convex_hull_interpolate(90271)[4]
        lb:(((<fold_right_1143@71:1> = 1) &&
             ((<<fold_right_1143@71:3>@165:0> = 0) &&
              (<<<fold_right_1143@71:3>@165:1>@171:0> = <<fold_right_1143@71:3>@165:0>))) ||
            ((<fold_right_1143@71:1> = 0) &&
             ((<<fold_right_1143@71:3>@165:0> = 0) &&
              (<<<fold_right_1143@71:3>@165:1>@171:0> = <<fold_right_1143@71:3>@165:0>))))
        nub:((not ((<fold_right_1143@71:1> <> 1) || (0 <= <<<fold_right_1143@71:3>@165:1>@171:0>))) ||
             (not ((<fold_right_1143@71:1> <> 0) || (0 <= <<<fold_right_1143@71:3>@165:1>@171:0>))))
        lb':(((<fold_right_1143@71:1> = 1) &&
              ((<<fold_right_1143@71:3>@165:0> = 0) &&
               (<<<fold_right_1143@71:3>@165:1>@171:0> = <<fold_right_1143@71:3>@165:0>))) ||
             ((<fold_right_1143@71:1> = 0) &&
              ((<<fold_right_1143@71:3>@165:0> = 0) &&
               (<<<fold_right_1143@71:3>@165:1>@171:0> = <<fold_right_1143@71:3>@165:0>))))
        nub':((not ((<fold_right_1143@71:1> <> 1) || (0 <= <<<fold_right_1143@71:3>@165:1>@171:0>))) ||
              (not ((<fold_right_1143@71:1> <> 0) || (0 <= <<<fold_right_1143@71:3>@165:1>@171:0>))))
        begin InterpProver.interpolate(90272)[5]
          begin InterpProver.interpolate_fresh(90273)[6]
            begin InterpProver.interpolate_log(90274)[7]
              input1: (((<fold_right_1143@71:1> = 1) &&
                        ((<<fold_right_1143@71:3>@165:0> = 0) &&
                         (<<<fold_right_1143@71:3>@165:1>@171:0> = <<fold_right_1143@71:3>@165:0>))) ||
                       ((<fold_right_1143@71:1> = 0) &&
                        ((<<fold_right_1143@71:3>@165:0> = 0) &&
                         (<<<fold_right_1143@71:3>@165:1>@171:0> = <<fold_right_1143@71:3>@165:0>))))
              input2: ((not ((<fold_right_1143@71:1> <> 1) || (0 <= <<<fold_right_1143@71:3>@165:1>@171:0>))) ||
                       (not ((<fold_right_1143@71:1> <> 0) || (0 <= <<<fold_right_1143@71:3>@165:1>@171:0>))))
              begin InterpProver.interpolate_check(90275)[8]
                begin InterpProver.interpolate_simplify(90276)[9]
                  begin InterpProver.interpolate_quick(90411)[10]
                    begin CsisatInterface.interpolate_csisat_wrap(90420)[11]
                      begin CsisatInterface.interpolate_csisat_post_process(90421)[12]
                        begin CsisatInterface.interpolate_csisat_log(90422)[13]
                          input1: ((0 = v_sep_fold_right_1143_sep_71_sep_1 | 1 = v_sep_fold_right_1143_sep_71_sep_1) & 0 = v_sep_fold_right_1143_sep_71_sep_3_sep_165_sep_1_sep_171_sep_0)
                          input2: ((0 = v_sep_fold_right_1143_sep_71_sep_1 | 1 = v_sep_fold_right_1143_sep_71_sep_1) & (1 + v_sep_fold_right_1143_sep_71_sep_3_sep_165_sep_1_sep_171_sep_0) <= 0)
                          begin CsisatInterface.interpolate_csisat_raw(90423)[14]
                            
                          end CsisatInterface.interpolate_csisat_raw(90423)[14] (0.000000 sec.)
                          output: -2*v_sep_fold_right_1143_sep_71_sep_3_sep_165_sep_1_sep_171_sep_0 <= 0
                          
                        end CsisatInterface.interpolate_csisat_log(90422)[13] (0.000000 sec.)
                        after simplification: -2*v_sep_fold_right_1143_sep_71_sep_3_sep_165_sep_1_sep_171_sep_0 <= 0
                        after dnf conversion: ((-2*v_sep_fold_right_1143_sep_71_sep_3_sep_165_sep_1_sep_171_sep_0 <= 0))
                        
                      end CsisatInterface.interpolate_csisat_post_process(90421)[12] (0.000000 sec.)
                      
                    end CsisatInterface.interpolate_csisat_wrap(90420)[11] (0.000000 sec.)
                    
                  end InterpProver.interpolate_quick(90411)[10] (0.000000 sec.)
                  
                end InterpProver.interpolate_simplify(90276)[9] (0.002000 sec.)
                
              end InterpProver.interpolate_check(90275)[8] (0.003000 sec.)
              output: (0 <= <<<fold_right_1143@71:3>@165:1>@171:0>)
            end InterpProver.interpolate_log(90274)[7] (0.003000 sec.)
            
          end InterpProver.interpolate_fresh(90273)[6] (0.003000 sec.)
          
        end InterpProver.interpolate(90272)[5] (0.003000 sec.)
        output:
          P[<<<fold_right_1143@71:3>@165:1>@171:0>](<fold_right_1143@71:1>:int,<<fold_right_1143@71:3>@165:0>:int,<<<fold_right_1143@71:3>@165:1>@171:0>:int) =
          (0 <= <<<fold_right_1143@71:3>@165:1>@171:0>)
          P[<<<fold_right_1143@108:3>@159:1>@177:0>](<fold_right_1143@71:1>:int,<<fold_right_1143@71:3>@165:0>:int,<<<fold_right_1143@71:3>@165:1>@171:0>:int) =
          (0 <= <<<fold_right_1143@71:3>@165:1>@171:0>)
      end ApronInterface.convex_hull_interpolate(90271)[4] (0.004000 sec.)
      Horn clauses:
        P[<fail_2169@292:0>](<fail_2169@292:0>:bool)|- bot
        
        P[<<<fold_right_1143@71:0>@141:3>@271:0>](<<<fold_right_1143@71:4>@121:0>@127:0>:int,<<<<fold_right_1143@71:4>@121:0>@127:1>@285:0>:int),
        P[<fold_right_1143@71:1>](<fold_right_1143@71:1>:int),
        ((<fold_right_1143@71:1> >= 1) && (0 > <<<<fold_right_1143@71:4>@121:0>@127:1>@285:0>)) |- bot
        
        P[<<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>](<<fold_right_1143@71:0>@141:2>:int,var322:int),
        P[<<<<fold_right_1143@71:0>@141:0>@199:1>@261:0>](var322:int,<<<fold_right_1143@71:0>@141:3>@271:0>:int),
        P[<<make_list_1030@51:1>@67:0>](<f_main_2163@123:0>:int,<fold_right_1143@71:1>:int),
        P[<<fold_right_1143@71:0>@141:2>](<<fold_right_1143@71:0>@141:2>:int)|- P[<<<fold_right_1143@71:0>@141:3>@271:0>](
        <<fold_right_1143@71:0>@141:2>:int,<<<fold_right_1143@71:0>@141:3>@271:0>:int)
        
        P[<<<<<fold_right_1143@71:2>@79:1>@102:0>@213:1>@247:0>](var325:int,0:int,<<<fold_right_1143@71:0>@141:0>@199:0>:int,<<<<fold_right_1143@71:0>@141:0>@199:1>@261:0>:int),
        P[<fold_right_1143@71:1>](var325:int), (1 <= var325)
        |- P[<<<<fold_right_1143@71:0>@141:0>@199:1>@261:0>](<<<fold_right_1143@71:0>@141:0>@199:0>:int,
                                                             <<<<fold_right_1143@71:0>@141:0>@199:1>@261:0>:int)
        
        P[<<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:1>@243:0>](
        <f_main_2163@123:0>:int,<fold_right_1143@71:1>:int,<<fold_right_1143@71:2>@79:0>:int,<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>:int,<<<<<fold_right_1143@71:2>@79:1>@102:0>@213:1>@247:0>:int),
        P[<<make_list_1030@51:1>@67:0>](<f_main_2163@123:0>:int,<fold_right_1143@71:1>:int),
        P[<fold_right_1143@71:1>](<fold_right_1143@71:1>:int)|- P[<<<<<fold_right_1143@71:2>@79:1>@102:0>@213:1>@247:0>](
        <fold_right_1143@71:1>:int,<<fold_right_1143@71:2>@79:0>:int,
        <<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>:int,<<<<<fold_right_1143@71:2>@79:1>@102:0>@213:1>@247:0>:int)
        
        P[<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>](<make_list_1030@51:0>:int,(
                                                              1 + var326):int,0:int,<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>:int),
        P[<<<make_list_1030@51:1>@67:1>@83:0>](<make_list_1030@51:0>:int,(
                                               1 + var326):int,0:int),
        P[<<make_list_1030@54:1>@57:0>]((-1 + <make_list_1030@51:0>):int,var326:int),
        P[<<<make_list_1030@51:1>@67:1>@83:0>](<make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int),
        P[<make_list_1030@51:0>](<make_list_1030@51:0>:int),
        P[<<make_list_1030@54:1>@57:0>]((-1 + <make_list_1030@51:0>):int,(
                                        -1 + <<make_list_1030@51:1>@67:0>):int),
        P[<<make_list_1030@51:1>@67:0>](<make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int),
        ((<<<make_list_1030@51:1>@67:1>@83:0> = 0) &&
         ((<make_list_1030@51:0> > 0) &&
          (<<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:1>@243:0> =
           (<make_list_1030@51:0> + <<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>))))
        |- P[<<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:1>@243:0>](
        <make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int,
        <<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>:int,<<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:1>@243:0>:int)
        
        P[<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>](<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int,<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>:int),
        P[<<make_list_1030@51:1>@67:0>](<make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int),
        P[<<fold_right_1143@71:2>@79:0>](<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int),
        P[<make_list_1030@51:0>](<make_list_1030@51:0>:int),
        P[<<<make_list_1030@51:1>@67:1>@83:0>](<make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int)|- P[<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>](
        <make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int,
        <<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>:int)
        
        P[<<<fold_right_1143@71:0>@141:0>@199:0>](<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>:int),
        P[<fold_right_1143@71:1>](<fold_right_1143@71:1>:int),
        P[<<fold_right_1143@71:2>@79:0>](<fold_right_1143@71:1>:int,<<fold_right_1143@71:2>@79:0>:int),
        ((<<fold_right_1143@71:2>@79:0> = 0) && (<fold_right_1143@71:1> >= 1))
        |- P[<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>](<fold_right_1143@71:1>:int,
                                                            <<fold_right_1143@71:2>@79:0>:int,
                                                            <<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>:int)
        
        P[<<make_list_1030@51:1>@67:0>](<f_main_2163@123:0>:int,<fold_right_1143@71:1>:int),
        P[<<fold_right_1143@71:0>@141:2>](var329:int),
        P[<<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>](var329:int,<<<fold_right_1143@71:0>@141:0>@199:0>:int)|- P[<<<fold_right_1143@71:0>@141:0>@199:0>](
        <<<fold_right_1143@71:0>@141:0>@199:0>:int)
        
        P[<fold_right_1143@71:1>](var330:int), ((1 <= var330) && (0 <= <<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>))
        |- P[<<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>](<<<fold_right_1143@71:0>@141:1>@147:0>:int,
                                                             <<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>:int)
        
        P[<<make_list_1030@51:1>@67:0>](<f_main_2163@123:0>:int,<fold_right_1143@71:1>:int),
        P[<<fold_right_1143@71:3>@165:0>](<fold_right_1143@71:1>:int,<<<fold_right_1143@71:3>@165:1>@171:0>:int),
        P[<fold_right_1143@71:1>](<fold_right_1143@71:1>:int), (0 > <<<fold_right_1143@71:3>@165:1>@171:0>) |- bot
        
        P[<fold_right_1143@71:1>](<fold_right_1143@71:1>:int),
        P[<<fold_right_1143@108:3>@159:0>]((-1 + <fold_right_1143@71:1>):int,<<fold_right_1143@71:3>@165:0>:int),
        (<fold_right_1143@71:1> >= 1)
        |- P[<<fold_right_1143@71:3>@165:0>](<fold_right_1143@71:1>:int,
                                             <<fold_right_1143@71:3>@165:0>:int)
        
        P[<fold_right_1143@108:1>](<fold_right_1143@108:1>:int),
        P[<<<fold_right_1143@108:4>@111:0>@157:0>](<fold_right_1143@108:1>:int,<<fold_right_1143@108:3>@159:0>:int),
        (<fold_right_1143@108:1> = 0)
        |- P[<<fold_right_1143@108:3>@159:0>](<fold_right_1143@108:1>:int,
                                              <<fold_right_1143@108:3>@159:0>:int)
        
        P[<<<fold_right_1143@71:0>@141:1>@147:0>](<<<fold_right_1143@108:4>@111:0>@157:0>:int),
        P[<fold_right_1143@71:1>]((1 + <fold_right_1143@108:1>):int),
        P[<fold_right_1143@108:1>](<fold_right_1143@108:1>:int), (<fold_right_1143@108:1> >= 0)
        |- P[<<<fold_right_1143@108:4>@111:0>@157:0>](<fold_right_1143@108:1>:int,
                                                      <<<fold_right_1143@108:4>@111:0>@157:0>:int)
        
        P[<<make_list_1030@51:1>@67:0>](<f_main_2163@123:0>:int,<fold_right_1143@71:1>:int),
        P[<<fold_right_1143@71:0>@141:2>](<<<fold_right_1143@71:0>@141:1>@147:0>:int)|- P[<<<fold_right_1143@71:0>@141:1>@147:0>](
        <<<fold_right_1143@71:0>@141:1>@147:0>:int)
        
        P[<<<fold_right_1143@71:4>@121:0>@127:0>](var333:int,<<fold_right_1143@71:0>@141:2>:int),
        P[<fold_right_1143@71:1>](var333:int), (1 <= var333)
        |- P[<<fold_right_1143@71:0>@141:2>](<<fold_right_1143@71:0>@141:2>:int)
        
        P[<<make_list_1030@51:1>@67:0>](<f_main_2163@123:0>:int,<fold_right_1143@71:1>:int),
        P[<fold_right_1143@71:1>](<fold_right_1143@71:1>:int), (<<<fold_right_1143@71:4>@121:0>@127:0> = 0)
        |- P[<<<fold_right_1143@71:4>@121:0>@127:0>](<fold_right_1143@71:1>:int,
                                                     <<<fold_right_1143@71:4>@121:0>@127:0>:int)
        
        P[<fold_right_1143@71:1>]((1 + <fold_right_1143@108:1>):int), (
        <fold_right_1143@108:1> >= 0) |- P[<fold_right_1143@108:1>](<fold_right_1143@108:1>:int)
        
        P[<<make_list_1030@51:1>@67:0>](<make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int),
        P[<<fold_right_1143@71:2>@79:0>](<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int),
        P[<make_list_1030@51:0>](<make_list_1030@51:0>:int)|- P[<<<make_list_1030@51:1>@67:1>@83:0>](
        <make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int)
        
        P[<fold_right_1143@71:1>](<fold_right_1143@71:1>:int),
        ((<<fold_right_1143@71:2>@79:0> = 0) && (<fold_right_1143@71:1> >= 1))
        |- P[<<fold_right_1143@71:2>@79:0>](<fold_right_1143@71:1>:int,
                                            <<fold_right_1143@71:2>@79:0>:int)
        
        P[<<make_list_1030@51:1>@67:0>](<f_main_2161@69:0>:int,<fold_right_1143@71:1>:int)|- P[<fold_right_1143@71:1>](
        <fold_right_1143@71:1>:int)
        
        P[<make_list_1030@51:0>](<make_list_1030@51:0>:int),
        P[<<make_list_1030@54:1>@57:0>]((-1 + <make_list_1030@51:0>):int,(
                                        -1 + <<make_list_1030@51:1>@67:0>):int), (
        <make_list_1030@51:0> > 0)
        |- P[<<make_list_1030@51:1>@67:0>](<make_list_1030@51:0>:int,
                                           <<make_list_1030@51:1>@67:0>:int)
        
        P[<make_list_1030@54:0>](<make_list_1030@54:0>:int),
        ((<<make_list_1030@54:1>@57:0> = 0) && (<make_list_1030@54:0> <= 0))
        |- P[<<make_list_1030@54:1>@57:0>](<make_list_1030@54:0>:int,
                                           <<make_list_1030@54:1>@57:0>:int)
        
        P[<make_list_1030@51:0>]((1 + <make_list_1030@54:0>):int), ((1 + <make_list_1030@54:0>) > 0)
        |- P[<make_list_1030@54:0>](<make_list_1030@54:0>:int)
        
        |- P[<make_list_1030@51:0>](<make_list_1030@51:0>:int)
      lower bounds:
        P[<make_list_1030@51:0>](<make_list_1030@51:0>:int) = true
        P[<fail_2169@292:0>](var359:bool) = false
        P[<make_list_1030@54:0>](<make_list_1030@54:0>:int) = ((1 + <make_list_1030@54:0>) > 0)
        P[<<make_list_1030@54:1>@57:0>](<make_list_1030@54:0>:int,<<make_list_1030@54:1>@57:0>:int) =
        ((<<make_list_1030@54:1>@57:0> = 0) && (<make_list_1030@54:0> = 0))
        P[<<make_list_1030@51:1>@67:0>](<make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int) =
        ((<make_list_1030@51:0> = 1) && (<<make_list_1030@51:1>@67:0> = 1))
        P[<fold_right_1143@71:1>](<fold_right_1143@71:1>:int) = (<fold_right_1143@71:1> = 1)
        P[<<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>](<<<fold_right_1143@71:0>@141:1>@147:0>:int,<<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>:int) =
        (0 <= <<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>)
        P[<<<fold_right_1143@71:4>@121:0>@127:0>](<fold_right_1143@71:1>:int,<<<fold_right_1143@71:4>@121:0>@127:0>:int) =
        ((<fold_right_1143@71:1> = 1) && (<<<fold_right_1143@71:4>@121:0>@127:0> = 0))
        P[<fold_right_1143@108:1>](<fold_right_1143@108:1>:int) = (<fold_right_1143@108:1> = 0)
        P[<<fold_right_1143@71:2>@79:0>](<fold_right_1143@71:1>:int,<<fold_right_1143@71:2>@79:0>:int) =
        ((<<fold_right_1143@71:2>@79:0> = 0) && (<fold_right_1143@71:1> = 1))
        P[<<fold_right_1143@71:0>@141:2>](<<fold_right_1143@71:0>@141:2>:int) = (<<fold_right_1143@71:0>@141:2> = 0)
        P[<<<make_list_1030@51:1>@67:1>@83:0>](<make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int) =
        ((<make_list_1030@51:0> = 1) &&
         ((<<<make_list_1030@51:1>@67:1>@83:0> = 0) && (<<make_list_1030@51:1>@67:0> = 1)))
        P[<<<fold_right_1143@71:0>@141:0>@199:0>](<<<fold_right_1143@71:0>@141:0>@199:0>:int) =
        (0 <= <<<fold_right_1143@71:0>@141:0>@199:0>)
        P[<<<fold_right_1143@71:0>@141:1>@147:0>](<<<fold_right_1143@71:0>@141:1>@147:0>:int) =
        (<<<fold_right_1143@71:0>@141:1>@147:0> = 0)
        P[<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>](<fold_right_1143@71:1>:int,<<fold_right_1143@71:2>@79:0>:int,<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>:int) =
        ((<fold_right_1143@71:1> = 1) &&
         ((<<fold_right_1143@71:2>@79:0> = 0) && (0 <= <<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>)))
        P[<<<fold_right_1143@108:4>@111:0>@157:0>](<fold_right_1143@108:1>:int,<<<fold_right_1143@108:4>@111:0>@157:0>:int) =
        ((<fold_right_1143@108:1> = 0) && (<<<fold_right_1143@108:4>@111:0>@157:0> = 0))
        P[<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>](<make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int,<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>:int) =
        ((<make_list_1030@51:0> = 1) &&
         ((<<<make_list_1030@51:1>@67:1>@83:0> = 0) &&
          ((<<make_list_1030@51:1>@67:0> = 1) && (0 <= <<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>))))
        P[<<fold_right_1143@108:3>@159:0>](<fold_right_1143@108:1>:int,<<fold_right_1143@108:3>@159:0>:int) =
        ((<fold_right_1143@108:1> = 0) && (<<fold_right_1143@108:3>@159:0> = 0))
        P[<<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:1>@243:0>](
        <make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int,<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>:int,<<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:1>@243:0>:int) =
        ((<<make_list_1030@51:1>@67:0> = 1) &&
         ((<<<make_list_1030@51:1>@67:1>@83:0> = 0) &&
          ((<make_list_1030@51:0> = 1) &&
           ((0 <= <<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>) &&
            (<<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:1>@243:0> =
             (<make_list_1030@51:0> + <<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>))))))
        P[<<fold_right_1143@71:3>@165:0>](<fold_right_1143@71:1>:int,<<fold_right_1143@71:3>@165:0>:int) =
        ((<fold_right_1143@71:1> = 1) && (<<fold_right_1143@71:3>@165:0> = 0))
        P[<<<<<fold_right_1143@71:2>@79:1>@102:0>@213:1>@247:0>](<fold_right_1143@71:1>:int,<<fold_right_1143@71:2>@79:0>:int,<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>:int,<<<<<fold_right_1143@71:2>@79:1>@102:0>@213:1>@247:0>:int) =
        ((<fold_right_1143@71:1> = 1) &&
         ((<<fold_right_1143@71:2>@79:0> = 0) &&
          ((0 <= <<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>) &&
           (<<<<<fold_right_1143@71:2>@79:1>@102:0>@213:1>@247:0> = (1 + <<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>)))))
        P[<<<<fold_right_1143@71:0>@141:0>@199:1>@261:0>](<<<fold_right_1143@71:0>@141:0>@199:0>:int,<<<<fold_right_1143@71:0>@141:0>@199:1>@261:0>:int) =
        ((<<<<fold_right_1143@71:0>@141:0>@199:1>@261:0> = (1 + <<<fold_right_1143@71:0>@141:0>@199:0>)) &&
         (0 <= <<<fold_right_1143@71:0>@141:0>@199:0>))
        P[<<<fold_right_1143@71:0>@141:3>@271:0>](<<fold_right_1143@71:0>@141:2>:int,<<<fold_right_1143@71:0>@141:3>@271:0>:int) =
        ((<<fold_right_1143@71:0>@141:2> = 0) && (1 <= <<<fold_right_1143@71:0>@141:3>@271:0>))
      upper bounds:
        P[<<fold_right_1143@71:3>@165:0>](var366:int,var367:int) = ((var366 <> 1) || (0 <= var367))
        P[<<fold_right_1143@108:3>@159:0>](var362:int,var363:int) = ((var362 <> 0) || (0 <= var363))
      begin GenHcSolver.classify_pids(113848)[4]
        output:
          [<<fold_right_1143@108:3>@159:0>;<<fold_right_1143@71:3>@165:0>]
      end GenHcSolver.classify_pids(113848)[4] (0.000000 sec.)
      begin ApronInterface.convex_hull_interpolate(113907)[4]
        lb:(((<fold_right_1143@108:1> = 0) && (<<fold_right_1143@108:3>@159:0> = 0)) ||
            ((<fold_right_1143@108:1> = 1) && (<<fold_right_1143@108:3>@159:0> = 0)))
        nub:((not ((<fold_right_1143@108:1> <> 0) || (0 <= <<fold_right_1143@108:3>@159:0>))) ||
             (not ((<fold_right_1143@108:1> <> 1) || (0 <= <<fold_right_1143@108:3>@159:0>))))
        lb':(((<fold_right_1143@108:1> = 0) && (<<fold_right_1143@108:3>@159:0> = 0)) ||
             ((<fold_right_1143@108:1> = 1) && (<<fold_right_1143@108:3>@159:0> = 0)))
        nub':((not ((<fold_right_1143@108:1> <> 0) || (0 <= <<fold_right_1143@108:3>@159:0>))) ||
              (not ((<fold_right_1143@108:1> <> 1) || (0 <= <<fold_right_1143@108:3>@159:0>))))
        begin InterpProver.interpolate(113908)[5]
          begin InterpProver.interpolate_fresh(113909)[6]
            begin InterpProver.interpolate_log(113910)[7]
              input1: (((<fold_right_1143@108:1> = 0) && (<<fold_right_1143@108:3>@159:0> = 0)) ||
                       ((<fold_right_1143@108:1> = 1) && (<<fold_right_1143@108:3>@159:0> = 0)))
              input2: ((not ((<fold_right_1143@108:1> <> 0) || (0 <= <<fold_right_1143@108:3>@159:0>))) ||
                       (not ((<fold_right_1143@108:1> <> 1) || (0 <= <<fold_right_1143@108:3>@159:0>))))
              begin InterpProver.interpolate_check(113911)[8]
                begin InterpProver.interpolate_simplify(113912)[9]
                  begin InterpProver.interpolate_quick(114015)[10]
                    begin CsisatInterface.interpolate_csisat_wrap(114024)[11]
                      begin CsisatInterface.interpolate_csisat_post_process(114025)[12]
                        begin CsisatInterface.interpolate_csisat_log(114026)[13]
                          input1: ((0 = v_sep_fold_right_1143_sep_108_sep_1 | 1 = v_sep_fold_right_1143_sep_108_sep_1) & 0 = v_sep_fold_right_1143_sep_108_sep_3_sep_159_sep_0)
                          input2: ((0 = v_sep_fold_right_1143_sep_108_sep_1 | 1 = v_sep_fold_right_1143_sep_108_sep_1) & (1 + v_sep_fold_right_1143_sep_108_sep_3_sep_159_sep_0) <= 0)
                          begin CsisatInterface.interpolate_csisat_raw(114027)[14]
                            
                          end CsisatInterface.interpolate_csisat_raw(114027)[14] (0.001000 sec.)
                          output: -2*v_sep_fold_right_1143_sep_108_sep_3_sep_159_sep_0 <= 0
                          
                        end CsisatInterface.interpolate_csisat_log(114026)[13] (0.001000 sec.)
                        after simplification: -2*v_sep_fold_right_1143_sep_108_sep_3_sep_159_sep_0 <= 0
                        after dnf conversion: ((-2*v_sep_fold_right_1143_sep_108_sep_3_sep_159_sep_0 <= 0))
                        
                      end CsisatInterface.interpolate_csisat_post_process(114025)[12] (0.001000 sec.)
                      
                    end CsisatInterface.interpolate_csisat_wrap(114024)[11] (0.001000 sec.)
                    
                  end InterpProver.interpolate_quick(114015)[10] (0.001000 sec.)
                  
                end InterpProver.interpolate_simplify(113912)[9] (0.001000 sec.)
                
              end InterpProver.interpolate_check(113911)[8] (0.002000 sec.)
              output: (0 <= <<fold_right_1143@108:3>@159:0>)
            end InterpProver.interpolate_log(113910)[7] (0.002000 sec.)
            
          end InterpProver.interpolate_fresh(113909)[6] (0.002000 sec.)
          
        end InterpProver.interpolate(113908)[5] (0.002000 sec.)
        output:
          P[<<fold_right_1143@108:3>@159:0>](<fold_right_1143@108:1>:int,<<fold_right_1143@108:3>@159:0>:int) =
          (0 <= <<fold_right_1143@108:3>@159:0>)
          P[<<fold_right_1143@71:3>@165:0>](<fold_right_1143@108:1>:int,<<fold_right_1143@108:3>@159:0>:int) =
          (0 <= <<fold_right_1143@108:3>@159:0>)
      end ApronInterface.convex_hull_interpolate(113907)[4] (0.003000 sec.)
      Horn clauses:
        P[<fail_2169@292:0>](<fail_2169@292:0>:bool)|- bot
        
        P[<<<fold_right_1143@71:0>@141:3>@271:0>](<<<fold_right_1143@71:4>@121:0>@127:0>:int,<<<<fold_right_1143@71:4>@121:0>@127:1>@285:0>:int),
        P[<fold_right_1143@71:1>](<fold_right_1143@71:1>:int),
        ((<fold_right_1143@71:1> >= 1) && (0 > <<<<fold_right_1143@71:4>@121:0>@127:1>@285:0>)) |- bot
        
        P[<<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>](<<fold_right_1143@71:0>@141:2>:int,var322:int),
        P[<<<<fold_right_1143@71:0>@141:0>@199:1>@261:0>](var322:int,<<<fold_right_1143@71:0>@141:3>@271:0>:int),
        P[<<make_list_1030@51:1>@67:0>](<f_main_2163@123:0>:int,<fold_right_1143@71:1>:int),
        P[<<fold_right_1143@71:0>@141:2>](<<fold_right_1143@71:0>@141:2>:int)|- P[<<<fold_right_1143@71:0>@141:3>@271:0>](
        <<fold_right_1143@71:0>@141:2>:int,<<<fold_right_1143@71:0>@141:3>@271:0>:int)
        
        P[<<<<<fold_right_1143@71:2>@79:1>@102:0>@213:1>@247:0>](var325:int,0:int,<<<fold_right_1143@71:0>@141:0>@199:0>:int,<<<<fold_right_1143@71:0>@141:0>@199:1>@261:0>:int),
        P[<fold_right_1143@71:1>](var325:int), (1 <= var325)
        |- P[<<<<fold_right_1143@71:0>@141:0>@199:1>@261:0>](<<<fold_right_1143@71:0>@141:0>@199:0>:int,
                                                             <<<<fold_right_1143@71:0>@141:0>@199:1>@261:0>:int)
        
        P[<<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:1>@243:0>](
        <f_main_2163@123:0>:int,<fold_right_1143@71:1>:int,<<fold_right_1143@71:2>@79:0>:int,<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>:int,<<<<<fold_right_1143@71:2>@79:1>@102:0>@213:1>@247:0>:int),
        P[<<make_list_1030@51:1>@67:0>](<f_main_2163@123:0>:int,<fold_right_1143@71:1>:int),
        P[<fold_right_1143@71:1>](<fold_right_1143@71:1>:int)|- P[<<<<<fold_right_1143@71:2>@79:1>@102:0>@213:1>@247:0>](
        <fold_right_1143@71:1>:int,<<fold_right_1143@71:2>@79:0>:int,
        <<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>:int,<<<<<fold_right_1143@71:2>@79:1>@102:0>@213:1>@247:0>:int)
        
        P[<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>](<make_list_1030@51:0>:int,(
                                                              1 + var326):int,0:int,<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>:int),
        P[<<<make_list_1030@51:1>@67:1>@83:0>](<make_list_1030@51:0>:int,(
                                               1 + var326):int,0:int),
        P[<<make_list_1030@54:1>@57:0>]((-1 + <make_list_1030@51:0>):int,var326:int),
        P[<<<make_list_1030@51:1>@67:1>@83:0>](<make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int),
        P[<make_list_1030@51:0>](<make_list_1030@51:0>:int),
        P[<<make_list_1030@54:1>@57:0>]((-1 + <make_list_1030@51:0>):int,(
                                        -1 + <<make_list_1030@51:1>@67:0>):int),
        P[<<make_list_1030@51:1>@67:0>](<make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int),
        ((<<<make_list_1030@51:1>@67:1>@83:0> = 0) &&
         ((<make_list_1030@51:0> > 0) &&
          (<<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:1>@243:0> =
           (<make_list_1030@51:0> + <<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>))))
        |- P[<<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:1>@243:0>](
        <make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int,
        <<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>:int,<<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:1>@243:0>:int)
        
        P[<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>](<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int,<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>:int),
        P[<<make_list_1030@51:1>@67:0>](<make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int),
        P[<<fold_right_1143@71:2>@79:0>](<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int),
        P[<make_list_1030@51:0>](<make_list_1030@51:0>:int),
        P[<<<make_list_1030@51:1>@67:1>@83:0>](<make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int)|- P[<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>](
        <make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int,
        <<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>:int)
        
        P[<<<fold_right_1143@71:0>@141:0>@199:0>](<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>:int),
        P[<fold_right_1143@71:1>](<fold_right_1143@71:1>:int),
        P[<<fold_right_1143@71:2>@79:0>](<fold_right_1143@71:1>:int,<<fold_right_1143@71:2>@79:0>:int),
        ((<<fold_right_1143@71:2>@79:0> = 0) && (<fold_right_1143@71:1> >= 1))
        |- P[<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>](<fold_right_1143@71:1>:int,
                                                            <<fold_right_1143@71:2>@79:0>:int,
                                                            <<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>:int)
        
        P[<<make_list_1030@51:1>@67:0>](<f_main_2163@123:0>:int,<fold_right_1143@71:1>:int),
        P[<<fold_right_1143@71:0>@141:2>](var329:int),
        P[<<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>](var329:int,<<<fold_right_1143@71:0>@141:0>@199:0>:int)|- P[<<<fold_right_1143@71:0>@141:0>@199:0>](
        <<<fold_right_1143@71:0>@141:0>@199:0>:int)
        
        P[<fold_right_1143@71:1>](var330:int), ((1 <= var330) && (0 <= <<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>))
        |- P[<<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>](<<<fold_right_1143@71:0>@141:1>@147:0>:int,
                                                             <<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>:int)
        
        P[<fold_right_1143@108:1>](0:int),
        P[<<<fold_right_1143@108:4>@111:0>@157:0>](0:int,<<fold_right_1143@108:3>@159:0>:int),
        (0 > <<fold_right_1143@108:3>@159:0>) |- bot
        
        P[<<<fold_right_1143@71:0>@141:1>@147:0>](<<<fold_right_1143@108:4>@111:0>@157:0>:int),
        P[<fold_right_1143@71:1>]((1 + <fold_right_1143@108:1>):int),
        P[<fold_right_1143@108:1>](<fold_right_1143@108:1>:int), (<fold_right_1143@108:1> >= 0)
        |- P[<<<fold_right_1143@108:4>@111:0>@157:0>](<fold_right_1143@108:1>:int,
                                                      <<<fold_right_1143@108:4>@111:0>@157:0>:int)
        
        P[<<make_list_1030@51:1>@67:0>](<f_main_2163@123:0>:int,<fold_right_1143@71:1>:int),
        P[<<fold_right_1143@71:0>@141:2>](<<<fold_right_1143@71:0>@141:1>@147:0>:int)|- P[<<<fold_right_1143@71:0>@141:1>@147:0>](
        <<<fold_right_1143@71:0>@141:1>@147:0>:int)
        
        P[<<<fold_right_1143@71:4>@121:0>@127:0>](var333:int,<<fold_right_1143@71:0>@141:2>:int),
        P[<fold_right_1143@71:1>](var333:int), (1 <= var333)
        |- P[<<fold_right_1143@71:0>@141:2>](<<fold_right_1143@71:0>@141:2>:int)
        
        P[<<make_list_1030@51:1>@67:0>](<f_main_2163@123:0>:int,<fold_right_1143@71:1>:int),
        P[<fold_right_1143@71:1>](<fold_right_1143@71:1>:int), (<<<fold_right_1143@71:4>@121:0>@127:0> = 0)
        |- P[<<<fold_right_1143@71:4>@121:0>@127:0>](<fold_right_1143@71:1>:int,
                                                     <<<fold_right_1143@71:4>@121:0>@127:0>:int)
        
        P[<fold_right_1143@71:1>]((1 + <fold_right_1143@108:1>):int), (
        <fold_right_1143@108:1> >= 0) |- P[<fold_right_1143@108:1>](<fold_right_1143@108:1>:int)
        
        P[<<make_list_1030@51:1>@67:0>](<make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int),
        P[<<fold_right_1143@71:2>@79:0>](<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int),
        P[<make_list_1030@51:0>](<make_list_1030@51:0>:int)|- P[<<<make_list_1030@51:1>@67:1>@83:0>](
        <make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int)
        
        P[<fold_right_1143@71:1>](<fold_right_1143@71:1>:int),
        ((<<fold_right_1143@71:2>@79:0> = 0) && (<fold_right_1143@71:1> >= 1))
        |- P[<<fold_right_1143@71:2>@79:0>](<fold_right_1143@71:1>:int,
                                            <<fold_right_1143@71:2>@79:0>:int)
        
        P[<<make_list_1030@51:1>@67:0>](<f_main_2161@69:0>:int,<fold_right_1143@71:1>:int)|- P[<fold_right_1143@71:1>](
        <fold_right_1143@71:1>:int)
        
        P[<make_list_1030@51:0>](<make_list_1030@51:0>:int),
        P[<<make_list_1030@54:1>@57:0>]((-1 + <make_list_1030@51:0>):int,(
                                        -1 + <<make_list_1030@51:1>@67:0>):int), (
        <make_list_1030@51:0> > 0)
        |- P[<<make_list_1030@51:1>@67:0>](<make_list_1030@51:0>:int,
                                           <<make_list_1030@51:1>@67:0>:int)
        
        P[<make_list_1030@54:0>](<make_list_1030@54:0>:int),
        ((<<make_list_1030@54:1>@57:0> = 0) && (<make_list_1030@54:0> <= 0))
        |- P[<<make_list_1030@54:1>@57:0>](<make_list_1030@54:0>:int,
                                           <<make_list_1030@54:1>@57:0>:int)
        
        P[<make_list_1030@51:0>]((1 + <make_list_1030@54:0>):int), ((1 + <make_list_1030@54:0>) > 0)
        |- P[<make_list_1030@54:0>](<make_list_1030@54:0>:int)
        
        |- P[<make_list_1030@51:0>](<make_list_1030@51:0>:int)
      lower bounds:
        P[<make_list_1030@51:0>](<make_list_1030@51:0>:int) = true
        P[<fail_2169@292:0>](var371:bool) = false
        P[<make_list_1030@54:0>](<make_list_1030@54:0>:int) = ((1 + <make_list_1030@54:0>) > 0)
        P[<<make_list_1030@54:1>@57:0>](<make_list_1030@54:0>:int,<<make_list_1030@54:1>@57:0>:int) =
        ((<<make_list_1030@54:1>@57:0> = 0) && (<make_list_1030@54:0> = 0))
        P[<<make_list_1030@51:1>@67:0>](<make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int) =
        ((<make_list_1030@51:0> = 1) && (<<make_list_1030@51:1>@67:0> = 1))
        P[<fold_right_1143@71:1>](<fold_right_1143@71:1>:int) = (<fold_right_1143@71:1> = 1)
        P[<<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>](<<<fold_right_1143@71:0>@141:1>@147:0>:int,<<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>:int) =
        (0 <= <<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>)
        P[<<<fold_right_1143@71:4>@121:0>@127:0>](<fold_right_1143@71:1>:int,<<<fold_right_1143@71:4>@121:0>@127:0>:int) =
        ((<fold_right_1143@71:1> = 1) && (<<<fold_right_1143@71:4>@121:0>@127:0> = 0))
        P[<fold_right_1143@108:1>](<fold_right_1143@108:1>:int) = (<fold_right_1143@108:1> = 0)
        P[<<fold_right_1143@71:2>@79:0>](<fold_right_1143@71:1>:int,<<fold_right_1143@71:2>@79:0>:int) =
        ((<<fold_right_1143@71:2>@79:0> = 0) && (<fold_right_1143@71:1> = 1))
        P[<<fold_right_1143@71:0>@141:2>](<<fold_right_1143@71:0>@141:2>:int) = (<<fold_right_1143@71:0>@141:2> = 0)
        P[<<<make_list_1030@51:1>@67:1>@83:0>](<make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int) =
        ((<make_list_1030@51:0> = 1) &&
         ((<<<make_list_1030@51:1>@67:1>@83:0> = 0) && (<<make_list_1030@51:1>@67:0> = 1)))
        P[<<<fold_right_1143@71:0>@141:0>@199:0>](<<<fold_right_1143@71:0>@141:0>@199:0>:int) =
        (0 <= <<<fold_right_1143@71:0>@141:0>@199:0>)
        P[<<<fold_right_1143@71:0>@141:1>@147:0>](<<<fold_right_1143@71:0>@141:1>@147:0>:int) =
        (<<<fold_right_1143@71:0>@141:1>@147:0> = 0)
        P[<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>](<fold_right_1143@71:1>:int,<<fold_right_1143@71:2>@79:0>:int,<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>:int) =
        ((<fold_right_1143@71:1> = 1) &&
         ((<<fold_right_1143@71:2>@79:0> = 0) && (0 <= <<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>)))
        P[<<<fold_right_1143@108:4>@111:0>@157:0>](<fold_right_1143@108:1>:int,<<<fold_right_1143@108:4>@111:0>@157:0>:int) =
        ((<fold_right_1143@108:1> = 0) && (<<<fold_right_1143@108:4>@111:0>@157:0> = 0))
        P[<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>](<make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int,<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>:int) =
        ((<make_list_1030@51:0> = 1) &&
         ((<<<make_list_1030@51:1>@67:1>@83:0> = 0) &&
          ((<<make_list_1030@51:1>@67:0> = 1) && (0 <= <<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>))))
        P[<<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:1>@243:0>](
        <make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int,<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>:int,<<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:1>@243:0>:int) =
        ((<<make_list_1030@51:1>@67:0> = 1) &&
         ((<<<make_list_1030@51:1>@67:1>@83:0> = 0) &&
          ((<make_list_1030@51:0> = 1) &&
           ((0 <= <<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>) &&
            (<<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:1>@243:0> =
             (<make_list_1030@51:0> + <<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>))))))
        P[<<<<<fold_right_1143@71:2>@79:1>@102:0>@213:1>@247:0>](<fold_right_1143@71:1>:int,<<fold_right_1143@71:2>@79:0>:int,<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>:int,<<<<<fold_right_1143@71:2>@79:1>@102:0>@213:1>@247:0>:int) =
        ((<fold_right_1143@71:1> = 1) &&
         ((<<fold_right_1143@71:2>@79:0> = 0) &&
          ((0 <= <<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>) &&
           (<<<<<fold_right_1143@71:2>@79:1>@102:0>@213:1>@247:0> = (1 + <<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>)))))
        P[<<<<fold_right_1143@71:0>@141:0>@199:1>@261:0>](<<<fold_right_1143@71:0>@141:0>@199:0>:int,<<<<fold_right_1143@71:0>@141:0>@199:1>@261:0>:int) =
        ((<<<<fold_right_1143@71:0>@141:0>@199:1>@261:0> = (1 + <<<fold_right_1143@71:0>@141:0>@199:0>)) &&
         (0 <= <<<fold_right_1143@71:0>@141:0>@199:0>))
        P[<<<fold_right_1143@71:0>@141:3>@271:0>](<<fold_right_1143@71:0>@141:2>:int,<<<fold_right_1143@71:0>@141:3>@271:0>:int) =
        ((<<fold_right_1143@71:0>@141:2> = 0) && (1 <= <<<fold_right_1143@71:0>@141:3>@271:0>))
      upper bounds:
        P[<<<fold_right_1143@108:4>@111:0>@157:0>](var384:int,var385:int) = ((var384 <> 0) || (0 <= var385))
        P[<<<fold_right_1143@71:4>@121:0>@127:0>](var380:int,var381:int) = ((var380 <> 1) || (0 <= var381))
      begin GenHcSolver.classify_pids(135925)[4]
        output:
          [<<<fold_right_1143@71:4>@121:0>@127:0>;<<<fold_right_1143@108:4>@111:0>@157:0>]
      end GenHcSolver.classify_pids(135925)[4] (0.000000 sec.)
      begin ApronInterface.convex_hull_interpolate(135984)[4]
        lb:(((<fold_right_1143@71:1> = 1) && (<<<fold_right_1143@71:4>@121:0>@127:0> = 0)) ||
            ((<fold_right_1143@71:1> = 0) && (<<<fold_right_1143@71:4>@121:0>@127:0> = 0)))
        nub:((not ((<fold_right_1143@71:1> <> 1) || (0 <= <<<fold_right_1143@71:4>@121:0>@127:0>))) ||
             (not ((<fold_right_1143@71:1> <> 0) || (0 <= <<<fold_right_1143@71:4>@121:0>@127:0>))))
        lb':(((<fold_right_1143@71:1> = 1) && (<<<fold_right_1143@71:4>@121:0>@127:0> = 0)) ||
             ((<fold_right_1143@71:1> = 0) && (<<<fold_right_1143@71:4>@121:0>@127:0> = 0)))
        nub':((not ((<fold_right_1143@71:1> <> 1) || (0 <= <<<fold_right_1143@71:4>@121:0>@127:0>))) ||
              (not ((<fold_right_1143@71:1> <> 0) || (0 <= <<<fold_right_1143@71:4>@121:0>@127:0>))))
        begin InterpProver.interpolate(135985)[5]
          begin InterpProver.interpolate_fresh(135986)[6]
            begin InterpProver.interpolate_log(135987)[7]
              input1: (((<fold_right_1143@71:1> = 1) && (<<<fold_right_1143@71:4>@121:0>@127:0> = 0)) ||
                       ((<fold_right_1143@71:1> = 0) && (<<<fold_right_1143@71:4>@121:0>@127:0> = 0)))
              input2: ((not ((<fold_right_1143@71:1> <> 1) || (0 <= <<<fold_right_1143@71:4>@121:0>@127:0>))) ||
                       (not ((<fold_right_1143@71:1> <> 0) || (0 <= <<<fold_right_1143@71:4>@121:0>@127:0>))))
              begin InterpProver.interpolate_check(135988)[8]
                begin InterpProver.interpolate_simplify(135989)[9]
                  begin InterpProver.interpolate_quick(136092)[10]
                    begin CsisatInterface.interpolate_csisat_wrap(136101)[11]
                      begin CsisatInterface.interpolate_csisat_post_process(136102)[12]
                        begin CsisatInterface.interpolate_csisat_log(136103)[13]
                          input1: ((0 = v_sep_fold_right_1143_sep_71_sep_1 | 1 = v_sep_fold_right_1143_sep_71_sep_1) & 0 = v_sep_fold_right_1143_sep_71_sep_4_sep_121_sep_0_sep_127_sep_0)
                          input2: ((0 = v_sep_fold_right_1143_sep_71_sep_1 | 1 = v_sep_fold_right_1143_sep_71_sep_1) & (1 + v_sep_fold_right_1143_sep_71_sep_4_sep_121_sep_0_sep_127_sep_0) <= 0)
                          begin CsisatInterface.interpolate_csisat_raw(136104)[14]
                            
                          end CsisatInterface.interpolate_csisat_raw(136104)[14] (0.001000 sec.)
                          output: -2*v_sep_fold_right_1143_sep_71_sep_4_sep_121_sep_0_sep_127_sep_0 <= 0
                          
                        end CsisatInterface.interpolate_csisat_log(136103)[13] (0.001000 sec.)
                        after simplification: -2*v_sep_fold_right_1143_sep_71_sep_4_sep_121_sep_0_sep_127_sep_0 <= 0
                        after dnf conversion: ((-2*v_sep_fold_right_1143_sep_71_sep_4_sep_121_sep_0_sep_127_sep_0 <= 0))
                        
                      end CsisatInterface.interpolate_csisat_post_process(136102)[12] (0.001000 sec.)
                      
                    end CsisatInterface.interpolate_csisat_wrap(136101)[11] (0.001000 sec.)
                    
                  end InterpProver.interpolate_quick(136092)[10] (0.002000 sec.)
                  
                end InterpProver.interpolate_simplify(135989)[9] (0.002000 sec.)
                
              end InterpProver.interpolate_check(135988)[8] (0.002000 sec.)
              output: (0 <= <<<fold_right_1143@71:4>@121:0>@127:0>)
            end InterpProver.interpolate_log(135987)[7] (0.002000 sec.)
            
          end InterpProver.interpolate_fresh(135986)[6] (0.002000 sec.)
          
        end InterpProver.interpolate(135985)[5] (0.002000 sec.)
        output:
          P[<<<fold_right_1143@71:4>@121:0>@127:0>](<fold_right_1143@71:1>:int,<<<fold_right_1143@71:4>@121:0>@127:0>:int) =
          (0 <= <<<fold_right_1143@71:4>@121:0>@127:0>)
          P[<<<fold_right_1143@108:4>@111:0>@157:0>](<fold_right_1143@71:1>:int,<<<fold_right_1143@71:4>@121:0>@127:0>:int) =
          (0 <= <<<fold_right_1143@71:4>@121:0>@127:0>)
      end ApronInterface.convex_hull_interpolate(135984)[4] (0.002000 sec.)
      Horn clauses:
        P[<fail_2169@292:0>](<fail_2169@292:0>:bool)|- bot
        
        P[<<<fold_right_1143@71:0>@141:3>@271:0>](<<<fold_right_1143@71:4>@121:0>@127:0>:int,<<<<fold_right_1143@71:4>@121:0>@127:1>@285:0>:int),
        P[<fold_right_1143@71:1>](<fold_right_1143@71:1>:int),
        ((<fold_right_1143@71:1> >= 1) && (0 > <<<<fold_right_1143@71:4>@121:0>@127:1>@285:0>)) |- bot
        
        P[<<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>](<<fold_right_1143@71:0>@141:2>:int,var322:int),
        P[<<<<fold_right_1143@71:0>@141:0>@199:1>@261:0>](var322:int,<<<fold_right_1143@71:0>@141:3>@271:0>:int),
        P[<<make_list_1030@51:1>@67:0>](<f_main_2163@123:0>:int,<fold_right_1143@71:1>:int),
        P[<<fold_right_1143@71:0>@141:2>](<<fold_right_1143@71:0>@141:2>:int)|- P[<<<fold_right_1143@71:0>@141:3>@271:0>](
        <<fold_right_1143@71:0>@141:2>:int,<<<fold_right_1143@71:0>@141:3>@271:0>:int)
        
        P[<<<<<fold_right_1143@71:2>@79:1>@102:0>@213:1>@247:0>](var325:int,0:int,<<<fold_right_1143@71:0>@141:0>@199:0>:int,<<<<fold_right_1143@71:0>@141:0>@199:1>@261:0>:int),
        P[<fold_right_1143@71:1>](var325:int), (1 <= var325)
        |- P[<<<<fold_right_1143@71:0>@141:0>@199:1>@261:0>](<<<fold_right_1143@71:0>@141:0>@199:0>:int,
                                                             <<<<fold_right_1143@71:0>@141:0>@199:1>@261:0>:int)
        
        P[<<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:1>@243:0>](
        <f_main_2163@123:0>:int,<fold_right_1143@71:1>:int,<<fold_right_1143@71:2>@79:0>:int,<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>:int,<<<<<fold_right_1143@71:2>@79:1>@102:0>@213:1>@247:0>:int),
        P[<<make_list_1030@51:1>@67:0>](<f_main_2163@123:0>:int,<fold_right_1143@71:1>:int),
        P[<fold_right_1143@71:1>](<fold_right_1143@71:1>:int)|- P[<<<<<fold_right_1143@71:2>@79:1>@102:0>@213:1>@247:0>](
        <fold_right_1143@71:1>:int,<<fold_right_1143@71:2>@79:0>:int,
        <<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>:int,<<<<<fold_right_1143@71:2>@79:1>@102:0>@213:1>@247:0>:int)
        
        P[<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>](<make_list_1030@51:0>:int,(
                                                              1 + var326):int,0:int,<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>:int),
        P[<<<make_list_1030@51:1>@67:1>@83:0>](<make_list_1030@51:0>:int,(
                                               1 + var326):int,0:int),
        P[<<make_list_1030@54:1>@57:0>]((-1 + <make_list_1030@51:0>):int,var326:int),
        P[<<<make_list_1030@51:1>@67:1>@83:0>](<make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int),
        P[<make_list_1030@51:0>](<make_list_1030@51:0>:int),
        P[<<make_list_1030@54:1>@57:0>]((-1 + <make_list_1030@51:0>):int,(
                                        -1 + <<make_list_1030@51:1>@67:0>):int),
        P[<<make_list_1030@51:1>@67:0>](<make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int),
        ((<<<make_list_1030@51:1>@67:1>@83:0> = 0) &&
         ((<make_list_1030@51:0> > 0) &&
          (<<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:1>@243:0> =
           (<make_list_1030@51:0> + <<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>))))
        |- P[<<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:1>@243:0>](
        <make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int,
        <<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>:int,<<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:1>@243:0>:int)
        
        P[<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>](<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int,<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>:int),
        P[<<make_list_1030@51:1>@67:0>](<make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int),
        P[<<fold_right_1143@71:2>@79:0>](<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int),
        P[<make_list_1030@51:0>](<make_list_1030@51:0>:int),
        P[<<<make_list_1030@51:1>@67:1>@83:0>](<make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int)|- P[<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>](
        <make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int,
        <<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>:int)
        
        P[<<<fold_right_1143@71:0>@141:0>@199:0>](<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>:int),
        P[<fold_right_1143@71:1>](<fold_right_1143@71:1>:int),
        P[<<fold_right_1143@71:2>@79:0>](<fold_right_1143@71:1>:int,<<fold_right_1143@71:2>@79:0>:int),
        ((<<fold_right_1143@71:2>@79:0> = 0) && (<fold_right_1143@71:1> >= 1))
        |- P[<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>](<fold_right_1143@71:1>:int,
                                                            <<fold_right_1143@71:2>@79:0>:int,
                                                            <<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>:int)
        
        P[<<make_list_1030@51:1>@67:0>](<f_main_2163@123:0>:int,<fold_right_1143@71:1>:int),
        P[<<fold_right_1143@71:0>@141:2>](var329:int),
        P[<<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>](var329:int,<<<fold_right_1143@71:0>@141:0>@199:0>:int)|- P[<<<fold_right_1143@71:0>@141:0>@199:0>](
        <<<fold_right_1143@71:0>@141:0>@199:0>:int)
        
        P[<fold_right_1143@71:1>](var330:int), ((1 <= var330) && (0 <= <<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>))
        |- P[<<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>](<<<fold_right_1143@71:0>@141:1>@147:0>:int,
                                                             <<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>:int)
        
        P[<<<fold_right_1143@71:0>@141:1>@147:0>](<<<fold_right_1143@108:4>@111:0>@157:0>:int),
        P[<fold_right_1143@71:1>]((1 + <fold_right_1143@108:1>):int),
        P[<fold_right_1143@108:1>](<fold_right_1143@108:1>:int),
        ((<fold_right_1143@108:1> >= 0) && (0 > <<<fold_right_1143@108:4>@111:0>@157:0>)) |- bot
        
        P[<<make_list_1030@51:1>@67:0>](<f_main_2163@123:0>:int,<fold_right_1143@71:1>:int),
        P[<<fold_right_1143@71:0>@141:2>](<<<fold_right_1143@71:0>@141:1>@147:0>:int)|- P[<<<fold_right_1143@71:0>@141:1>@147:0>](
        <<<fold_right_1143@71:0>@141:1>@147:0>:int)
        
        P[<fold_right_1143@71:1>](var333:int), ((1 <= var333) && (0 <= <<fold_right_1143@71:0>@141:2>))
        |- P[<<fold_right_1143@71:0>@141:2>](<<fold_right_1143@71:0>@141:2>:int)
        
        P[<fold_right_1143@71:1>]((1 + <fold_right_1143@108:1>):int), (
        <fold_right_1143@108:1> >= 0) |- P[<fold_right_1143@108:1>](<fold_right_1143@108:1>:int)
        
        P[<<make_list_1030@51:1>@67:0>](<make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int),
        P[<<fold_right_1143@71:2>@79:0>](<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int),
        P[<make_list_1030@51:0>](<make_list_1030@51:0>:int)|- P[<<<make_list_1030@51:1>@67:1>@83:0>](
        <make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int)
        
        P[<fold_right_1143@71:1>](<fold_right_1143@71:1>:int),
        ((<<fold_right_1143@71:2>@79:0> = 0) && (<fold_right_1143@71:1> >= 1))
        |- P[<<fold_right_1143@71:2>@79:0>](<fold_right_1143@71:1>:int,
                                            <<fold_right_1143@71:2>@79:0>:int)
        
        P[<<make_list_1030@51:1>@67:0>](<f_main_2161@69:0>:int,<fold_right_1143@71:1>:int)|- P[<fold_right_1143@71:1>](
        <fold_right_1143@71:1>:int)
        
        P[<make_list_1030@51:0>](<make_list_1030@51:0>:int),
        P[<<make_list_1030@54:1>@57:0>]((-1 + <make_list_1030@51:0>):int,(
                                        -1 + <<make_list_1030@51:1>@67:0>):int), (
        <make_list_1030@51:0> > 0)
        |- P[<<make_list_1030@51:1>@67:0>](<make_list_1030@51:0>:int,
                                           <<make_list_1030@51:1>@67:0>:int)
        
        P[<make_list_1030@54:0>](<make_list_1030@54:0>:int),
        ((<<make_list_1030@54:1>@57:0> = 0) && (<make_list_1030@54:0> <= 0))
        |- P[<<make_list_1030@54:1>@57:0>](<make_list_1030@54:0>:int,
                                           <<make_list_1030@54:1>@57:0>:int)
        
        P[<make_list_1030@51:0>]((1 + <make_list_1030@54:0>):int), ((1 + <make_list_1030@54:0>) > 0)
        |- P[<make_list_1030@54:0>](<make_list_1030@54:0>:int)
        
        |- P[<make_list_1030@51:0>](<make_list_1030@51:0>:int)
      lower bounds:
        P[<make_list_1030@51:0>](<make_list_1030@51:0>:int) = true
        P[<fail_2169@292:0>](var389:bool) = false
        P[<make_list_1030@54:0>](<make_list_1030@54:0>:int) = ((1 + <make_list_1030@54:0>) > 0)
        P[<<make_list_1030@54:1>@57:0>](<make_list_1030@54:0>:int,<<make_list_1030@54:1>@57:0>:int) =
        ((<<make_list_1030@54:1>@57:0> = 0) && (<make_list_1030@54:0> = 0))
        P[<<make_list_1030@51:1>@67:0>](<make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int) =
        ((<make_list_1030@51:0> = 1) && (<<make_list_1030@51:1>@67:0> = 1))
        P[<fold_right_1143@71:1>](<fold_right_1143@71:1>:int) = (<fold_right_1143@71:1> = 1)
        P[<<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>](<<<fold_right_1143@71:0>@141:1>@147:0>:int,<<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>:int) =
        (0 <= <<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>)
        P[<<fold_right_1143@71:0>@141:2>](<<fold_right_1143@71:0>@141:2>:int) = (0 <= <<fold_right_1143@71:0>@141:2>)
        P[<fold_right_1143@108:1>](<fold_right_1143@108:1>:int) = (<fold_right_1143@108:1> = 0)
        P[<<fold_right_1143@71:2>@79:0>](<fold_right_1143@71:1>:int,<<fold_right_1143@71:2>@79:0>:int) =
        ((<<fold_right_1143@71:2>@79:0> = 0) && (<fold_right_1143@71:1> = 1))
        P[<<<fold_right_1143@71:0>@141:0>@199:0>](<<<fold_right_1143@71:0>@141:0>@199:0>:int) =
        (0 <= <<<fold_right_1143@71:0>@141:0>@199:0>)
        P[<<<fold_right_1143@71:0>@141:1>@147:0>](<<<fold_right_1143@71:0>@141:1>@147:0>:int) =
        (0 <= <<<fold_right_1143@71:0>@141:1>@147:0>)
        P[<<<make_list_1030@51:1>@67:1>@83:0>](<make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int) =
        ((<make_list_1030@51:0> = 1) &&
         ((<<<make_list_1030@51:1>@67:1>@83:0> = 0) && (<<make_list_1030@51:1>@67:0> = 1)))
        P[<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>](<fold_right_1143@71:1>:int,<<fold_right_1143@71:2>@79:0>:int,<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>:int) =
        ((<fold_right_1143@71:1> = 1) &&
         ((<<fold_right_1143@71:2>@79:0> = 0) && (0 <= <<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>)))
        P[<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>](<make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int,<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>:int) =
        ((<make_list_1030@51:0> = 1) &&
         ((<<<make_list_1030@51:1>@67:1>@83:0> = 0) &&
          ((<<make_list_1030@51:1>@67:0> = 1) && (0 <= <<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>))))
        P[<<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:1>@243:0>](
        <make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int,<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>:int,<<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:1>@243:0>:int) =
        ((<<make_list_1030@51:1>@67:0> = 1) &&
         ((<<<make_list_1030@51:1>@67:1>@83:0> = 0) &&
          ((<make_list_1030@51:0> = 1) &&
           ((0 <= <<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>) &&
            (<<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:1>@243:0> =
             (<make_list_1030@51:0> + <<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>))))))
        P[<<<<<fold_right_1143@71:2>@79:1>@102:0>@213:1>@247:0>](<fold_right_1143@71:1>:int,<<fold_right_1143@71:2>@79:0>:int,<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>:int,<<<<<fold_right_1143@71:2>@79:1>@102:0>@213:1>@247:0>:int) =
        ((<fold_right_1143@71:1> = 1) &&
         ((<<fold_right_1143@71:2>@79:0> = 0) &&
          ((0 <= <<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>) &&
           (<<<<<fold_right_1143@71:2>@79:1>@102:0>@213:1>@247:0> = (1 + <<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>)))))
        P[<<<<fold_right_1143@71:0>@141:0>@199:1>@261:0>](<<<fold_right_1143@71:0>@141:0>@199:0>:int,<<<<fold_right_1143@71:0>@141:0>@199:1>@261:0>:int) =
        ((<<<<fold_right_1143@71:0>@141:0>@199:1>@261:0> = (1 + <<<fold_right_1143@71:0>@141:0>@199:0>)) &&
         (0 <= <<<fold_right_1143@71:0>@141:0>@199:0>))
        P[<<<fold_right_1143@71:0>@141:3>@271:0>](<<fold_right_1143@71:0>@141:2>:int,<<<fold_right_1143@71:0>@141:3>@271:0>:int) =
        ((0 <= <<fold_right_1143@71:0>@141:2>) && (1 <= <<<fold_right_1143@71:0>@141:3>@271:0>))
      upper bounds:
        P[<fold_right_1143@108:1>](var402:int) = true
        P[<fold_right_1143@71:1>](var399:int) = true
      begin GenHcSolver.classify_pids(158170)[4]
        output:
          [<fold_right_1143@71:1>;<fold_right_1143@108:1>]
      end GenHcSolver.classify_pids(158170)[4] (0.000000 sec.)
      begin ApronInterface.convex_hull_interpolate(158181)[4]
        lb:((<fold_right_1143@71:1> = 1) || (<fold_right_1143@71:1> = 0))
        nub:false
        lb':((<fold_right_1143@71:1> = 1) || (<fold_right_1143@71:1> = 0))
        nub':false
        begin InterpProver.interpolate(158182)[5]
          begin InterpProver.interpolate_fresh(158183)[6]
            begin InterpProver.interpolate_log(158184)[7]
              input1: ((<fold_right_1143@71:1> = 1) || (<fold_right_1143@71:1> = 0))
              input2: false
              begin InterpProver.interpolate_check(158185)[8]
                begin InterpProver.interpolate_simplify(158186)[9]
                  begin InterpProver.interpolate_quick(158213)[10]
                    
                  end InterpProver.interpolate_quick(158213)[10] (0.001000 sec.)
                  
                end InterpProver.interpolate_simplify(158186)[9] (0.001000 sec.)
                
              end InterpProver.interpolate_check(158185)[8] (0.001000 sec.)
              output: true
            end InterpProver.interpolate_log(158184)[7] (0.001000 sec.)
            
          end InterpProver.interpolate_fresh(158183)[6] (0.001000 sec.)
          
        end InterpProver.interpolate(158182)[5] (0.001000 sec.)
        output:
          P[<fold_right_1143@71:1>](<fold_right_1143@71:1>:int) = true
          P[<fold_right_1143@108:1>](<fold_right_1143@71:1>:int) = true
      end ApronInterface.convex_hull_interpolate(158181)[4] (0.001000 sec.)
      Horn clauses:
        P[<fail_2169@292:0>](<fail_2169@292:0>:bool)|- bot
        
        P[<<<fold_right_1143@71:0>@141:3>@271:0>](<<<fold_right_1143@71:4>@121:0>@127:0>:int,<<<<fold_right_1143@71:4>@121:0>@127:1>@285:0>:int),
        (0 > <<<<fold_right_1143@71:4>@121:0>@127:1>@285:0>) |- bot
        
        P[<<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>](<<fold_right_1143@71:0>@141:2>:int,var322:int),
        P[<<<<fold_right_1143@71:0>@141:0>@199:1>@261:0>](var322:int,<<<fold_right_1143@71:0>@141:3>@271:0>:int),
        P[<<make_list_1030@51:1>@67:0>](<f_main_2163@123:0>:int,<fold_right_1143@71:1>:int),
        P[<<fold_right_1143@71:0>@141:2>](<<fold_right_1143@71:0>@141:2>:int)|- P[<<<fold_right_1143@71:0>@141:3>@271:0>](
        <<fold_right_1143@71:0>@141:2>:int,<<<fold_right_1143@71:0>@141:3>@271:0>:int)
        
        P[<<<<<fold_right_1143@71:2>@79:1>@102:0>@213:1>@247:0>](var325:int,0:int,<<<fold_right_1143@71:0>@141:0>@199:0>:int,<<<<fold_right_1143@71:0>@141:0>@199:1>@261:0>:int),
        (1 <= var325)
        |- P[<<<<fold_right_1143@71:0>@141:0>@199:1>@261:0>](<<<fold_right_1143@71:0>@141:0>@199:0>:int,
                                                             <<<<fold_right_1143@71:0>@141:0>@199:1>@261:0>:int)
        
        P[<<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:1>@243:0>](
        <f_main_2163@123:0>:int,<fold_right_1143@71:1>:int,<<fold_right_1143@71:2>@79:0>:int,<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>:int,<<<<<fold_right_1143@71:2>@79:1>@102:0>@213:1>@247:0>:int),
        P[<<make_list_1030@51:1>@67:0>](<f_main_2163@123:0>:int,<fold_right_1143@71:1>:int)|- P[<<<<<fold_right_1143@71:2>@79:1>@102:0>@213:1>@247:0>](
        <fold_right_1143@71:1>:int,<<fold_right_1143@71:2>@79:0>:int,
        <<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>:int,<<<<<fold_right_1143@71:2>@79:1>@102:0>@213:1>@247:0>:int)
        
        P[<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>](<make_list_1030@51:0>:int,(
                                                              1 + var326):int,0:int,<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>:int),
        P[<<<make_list_1030@51:1>@67:1>@83:0>](<make_list_1030@51:0>:int,(
                                               1 + var326):int,0:int),
        P[<<make_list_1030@54:1>@57:0>]((-1 + <make_list_1030@51:0>):int,var326:int),
        P[<<<make_list_1030@51:1>@67:1>@83:0>](<make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int),
        P[<make_list_1030@51:0>](<make_list_1030@51:0>:int),
        P[<<make_list_1030@54:1>@57:0>]((-1 + <make_list_1030@51:0>):int,(
                                        -1 + <<make_list_1030@51:1>@67:0>):int),
        P[<<make_list_1030@51:1>@67:0>](<make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int),
        ((<<<make_list_1030@51:1>@67:1>@83:0> = 0) &&
         ((<make_list_1030@51:0> > 0) &&
          (<<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:1>@243:0> =
           (<make_list_1030@51:0> + <<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>))))
        |- P[<<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:1>@243:0>](
        <make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int,
        <<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>:int,<<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:1>@243:0>:int)
        
        P[<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>](<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int,<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>:int),
        P[<<make_list_1030@51:1>@67:0>](<make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int),
        P[<<fold_right_1143@71:2>@79:0>](<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int),
        P[<make_list_1030@51:0>](<make_list_1030@51:0>:int),
        P[<<<make_list_1030@51:1>@67:1>@83:0>](<make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int)|- P[<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>](
        <make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int,
        <<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>:int)
        
        P[<<<fold_right_1143@71:0>@141:0>@199:0>](<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>:int),
        P[<<fold_right_1143@71:2>@79:0>](<fold_right_1143@71:1>:int,<<fold_right_1143@71:2>@79:0>:int),
        ((<<fold_right_1143@71:2>@79:0> = 0) && (<fold_right_1143@71:1> >= 1))
        |- P[<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>](<fold_right_1143@71:1>:int,
                                                            <<fold_right_1143@71:2>@79:0>:int,
                                                            <<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>:int)
        
        P[<<make_list_1030@51:1>@67:0>](<f_main_2163@123:0>:int,<fold_right_1143@71:1>:int),
        P[<<fold_right_1143@71:0>@141:2>](var329:int),
        P[<<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>](var329:int,<<<fold_right_1143@71:0>@141:0>@199:0>:int)|- P[<<<fold_right_1143@71:0>@141:0>@199:0>](
        <<<fold_right_1143@71:0>@141:0>@199:0>:int)
        
         (0 <= <<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>)
        |- P[<<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>](<<<fold_right_1143@71:0>@141:1>@147:0>:int,
                                                             <<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>:int)
        
        P[<<<fold_right_1143@71:0>@141:1>@147:0>](<<<fold_right_1143@108:4>@111:0>@157:0>:int),
        (0 > <<<fold_right_1143@108:4>@111:0>@157:0>) |- bot
        
        P[<<make_list_1030@51:1>@67:0>](<f_main_2163@123:0>:int,<fold_right_1143@71:1>:int),
        P[<<fold_right_1143@71:0>@141:2>](<<<fold_right_1143@71:0>@141:1>@147:0>:int)|- P[<<<fold_right_1143@71:0>@141:1>@147:0>](
        <<<fold_right_1143@71:0>@141:1>@147:0>:int)
        
         (0 <= <<fold_right_1143@71:0>@141:2>) |- P[<<fold_right_1143@71:0>@141:2>](<<fold_right_1143@71:0>@141:2>:int)
        
        P[<<make_list_1030@51:1>@67:0>](<make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int),
        P[<<fold_right_1143@71:2>@79:0>](<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int),
        P[<make_list_1030@51:0>](<make_list_1030@51:0>:int)|- P[<<<make_list_1030@51:1>@67:1>@83:0>](
        <make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int)
        
         ((<<fold_right_1143@71:2>@79:0> = 0) && (<fold_right_1143@71:1> >= 1))
        |- P[<<fold_right_1143@71:2>@79:0>](<fold_right_1143@71:1>:int,
                                            <<fold_right_1143@71:2>@79:0>:int)
        
        P[<make_list_1030@51:0>](<make_list_1030@51:0>:int),
        P[<<make_list_1030@54:1>@57:0>]((-1 + <make_list_1030@51:0>):int,(
                                        -1 + <<make_list_1030@51:1>@67:0>):int), (
        <make_list_1030@51:0> > 0)
        |- P[<<make_list_1030@51:1>@67:0>](<make_list_1030@51:0>:int,
                                           <<make_list_1030@51:1>@67:0>:int)
        
        P[<make_list_1030@54:0>](<make_list_1030@54:0>:int),
        ((<<make_list_1030@54:1>@57:0> = 0) && (<make_list_1030@54:0> <= 0))
        |- P[<<make_list_1030@54:1>@57:0>](<make_list_1030@54:0>:int,
                                           <<make_list_1030@54:1>@57:0>:int)
        
        P[<make_list_1030@51:0>]((1 + <make_list_1030@54:0>):int), ((1 + <make_list_1030@54:0>) > 0)
        |- P[<make_list_1030@54:0>](<make_list_1030@54:0>:int)
        
        |- P[<make_list_1030@51:0>](<make_list_1030@51:0>:int)
      lower bounds:
        P[<<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>](<<<fold_right_1143@71:0>@141:1>@147:0>:int,<<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>:int) =
        (0 <= <<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>)
        P[<<fold_right_1143@71:0>@141:2>](<<fold_right_1143@71:0>@141:2>:int) = (0 <= <<fold_right_1143@71:0>@141:2>)
        P[<<fold_right_1143@71:2>@79:0>](<fold_right_1143@71:1>:int,<<fold_right_1143@71:2>@79:0>:int) =
        ((<<fold_right_1143@71:2>@79:0> = 0) && (<fold_right_1143@71:1> >= 1))
        P[<make_list_1030@51:0>](<make_list_1030@51:0>:int) = true
        P[<fail_2169@292:0>](var406:bool) = false
        P[<make_list_1030@54:0>](<make_list_1030@54:0>:int) = ((1 + <make_list_1030@54:0>) > 0)
        P[<<make_list_1030@54:1>@57:0>](<make_list_1030@54:0>:int,<<make_list_1030@54:1>@57:0>:int) =
        ((<<make_list_1030@54:1>@57:0> = 0) && (<make_list_1030@54:0> = 0))
        P[<<make_list_1030@51:1>@67:0>](<make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int) =
        ((<make_list_1030@51:0> = 1) && (<<make_list_1030@51:1>@67:0> = 1))
        P[<<<fold_right_1143@71:0>@141:0>@199:0>](<<<fold_right_1143@71:0>@141:0>@199:0>:int) =
        (0 <= <<<fold_right_1143@71:0>@141:0>@199:0>)
        P[<<<fold_right_1143@71:0>@141:1>@147:0>](<<<fold_right_1143@71:0>@141:1>@147:0>:int) =
        (0 <= <<<fold_right_1143@71:0>@141:1>@147:0>)
        P[<<<make_list_1030@51:1>@67:1>@83:0>](<make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int) =
        ((<make_list_1030@51:0> = 1) &&
         ((<<make_list_1030@51:1>@67:0> = 1) && (<<<make_list_1030@51:1>@67:1>@83:0> = 0)))
        P[<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>](<fold_right_1143@71:1>:int,<<fold_right_1143@71:2>@79:0>:int,<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>:int) =
        ((<<fold_right_1143@71:2>@79:0> = 0) &&
         ((0 <= <<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>) && (<fold_right_1143@71:1> >= 1)))
        P[<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>](<make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int,<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>:int) =
        ((<<make_list_1030@51:1>@67:0> = 1) &&
         ((<make_list_1030@51:0> = 1) &&
          ((<<<make_list_1030@51:1>@67:1>@83:0> = 0) && (0 <= <<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>))))
        P[<<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:1>@243:0>](
        <make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int,<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>:int,<<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:1>@243:0>:int) =
        ((<<make_list_1030@51:1>@67:0> = 1) &&
         ((<<<make_list_1030@51:1>@67:1>@83:0> = 0) &&
          ((<make_list_1030@51:0> = 1) &&
           ((0 <= <<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>) &&
            (<<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:1>@243:0> =
             (<make_list_1030@51:0> + <<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>))))))
        P[<<<<<fold_right_1143@71:2>@79:1>@102:0>@213:1>@247:0>](<fold_right_1143@71:1>:int,<<fold_right_1143@71:2>@79:0>:int,<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>:int,<<<<<fold_right_1143@71:2>@79:1>@102:0>@213:1>@247:0>:int) =
        ((<fold_right_1143@71:1> = 1) &&
         ((<<fold_right_1143@71:2>@79:0> = 0) &&
          ((0 <= <<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>) &&
           (<<<<<fold_right_1143@71:2>@79:1>@102:0>@213:1>@247:0> = (1 + <<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>)))))
        P[<<<<fold_right_1143@71:0>@141:0>@199:1>@261:0>](<<<fold_right_1143@71:0>@141:0>@199:0>:int,<<<<fold_right_1143@71:0>@141:0>@199:1>@261:0>:int) =
        ((<<<<fold_right_1143@71:0>@141:0>@199:1>@261:0> = (1 + <<<fold_right_1143@71:0>@141:0>@199:0>)) &&
         (0 <= <<<fold_right_1143@71:0>@141:0>@199:0>))
        P[<<<fold_right_1143@71:0>@141:3>@271:0>](<<fold_right_1143@71:0>@141:2>:int,<<<fold_right_1143@71:0>@141:3>@271:0>:int) =
        ((0 <= <<fold_right_1143@71:0>@141:2>) && (1 <= <<<fold_right_1143@71:0>@141:3>@271:0>))
      upper bounds:
        P[<<make_list_1030@51:1>@67:0>](var428:int,var429:int) = true
        P[<<make_list_1030@54:1>@57:0>](var418:int,var419:int) = true
      begin GenHcSolver.classify_pids(178849)[4]
        output:
          [<<make_list_1030@54:1>@57:0>;<<make_list_1030@51:1>@67:0>]
      end GenHcSolver.classify_pids(178849)[4] (0.000000 sec.)
      begin ApronInterface.convex_hull_interpolate(178860)[4]
        lb:(((<<make_list_1030@54:1>@57:0> = 0) && (<make_list_1030@54:0> = 0)) ||
            ((<make_list_1030@54:0> = 1) && (<<make_list_1030@54:1>@57:0> = 1)))
        nub:false
        lb':(((<<make_list_1030@54:1>@57:0> = 0) && (<make_list_1030@54:0> = 0)) ||
             ((<make_list_1030@54:0> = 1) && (<<make_list_1030@54:1>@57:0> = 1)))
        nub':false
        begin InterpProver.interpolate(178861)[5]
          begin InterpProver.interpolate_fresh(178862)[6]
            begin InterpProver.interpolate_log(178863)[7]
              input1: (((<<make_list_1030@54:1>@57:0> = 0) && (<make_list_1030@54:0> = 0)) ||
                       ((<make_list_1030@54:0> = 1) && (<<make_list_1030@54:1>@57:0> = 1)))
              input2: false
              begin InterpProver.interpolate_check(178864)[8]
                begin InterpProver.interpolate_simplify(178865)[9]
                  begin InterpProver.interpolate_quick(178908)[10]
                    
                  end InterpProver.interpolate_quick(178908)[10] (0.000000 sec.)
                  
                end InterpProver.interpolate_simplify(178865)[9] (0.000000 sec.)
                
              end InterpProver.interpolate_check(178864)[8] (0.000000 sec.)
              output: true
            end InterpProver.interpolate_log(178863)[7] (0.000000 sec.)
            
          end InterpProver.interpolate_fresh(178862)[6] (0.000000 sec.)
          
        end InterpProver.interpolate(178861)[5] (0.000000 sec.)
        output:
          P[<<make_list_1030@54:1>@57:0>](<make_list_1030@54:0>:int,<<make_list_1030@54:1>@57:0>:int) = true
          P[<<make_list_1030@51:1>@67:0>](<make_list_1030@54:0>:int,<<make_list_1030@54:1>@57:0>:int) = true
      end ApronInterface.convex_hull_interpolate(178860)[4] (0.001000 sec.)
      Horn clauses:
        P[<fail_2169@292:0>](<fail_2169@292:0>:bool)|- bot
        
        P[<<<fold_right_1143@71:0>@141:3>@271:0>](<<<fold_right_1143@71:4>@121:0>@127:0>:int,<<<<fold_right_1143@71:4>@121:0>@127:1>@285:0>:int),
        (0 > <<<<fold_right_1143@71:4>@121:0>@127:1>@285:0>) |- bot
        
        P[<<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>](<<fold_right_1143@71:0>@141:2>:int,var322:int),
        P[<<<<fold_right_1143@71:0>@141:0>@199:1>@261:0>](var322:int,<<<fold_right_1143@71:0>@141:3>@271:0>:int),
        P[<<fold_right_1143@71:0>@141:2>](<<fold_right_1143@71:0>@141:2>:int)|- P[<<<fold_right_1143@71:0>@141:3>@271:0>](
        <<fold_right_1143@71:0>@141:2>:int,<<<fold_right_1143@71:0>@141:3>@271:0>:int)
        
        P[<<<<<fold_right_1143@71:2>@79:1>@102:0>@213:1>@247:0>](var325:int,0:int,<<<fold_right_1143@71:0>@141:0>@199:0>:int,<<<<fold_right_1143@71:0>@141:0>@199:1>@261:0>:int),
        (1 <= var325)
        |- P[<<<<fold_right_1143@71:0>@141:0>@199:1>@261:0>](<<<fold_right_1143@71:0>@141:0>@199:0>:int,
                                                             <<<<fold_right_1143@71:0>@141:0>@199:1>@261:0>:int)
        
        P[<<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:1>@243:0>](
        <f_main_2163@123:0>:int,<fold_right_1143@71:1>:int,<<fold_right_1143@71:2>@79:0>:int,<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>:int,<<<<<fold_right_1143@71:2>@79:1>@102:0>@213:1>@247:0>:int)|- P[<<<<<fold_right_1143@71:2>@79:1>@102:0>@213:1>@247:0>](
        <fold_right_1143@71:1>:int,<<fold_right_1143@71:2>@79:0>:int,
        <<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>:int,<<<<<fold_right_1143@71:2>@79:1>@102:0>@213:1>@247:0>:int)
        
        P[<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>](<make_list_1030@51:0>:int,(
                                                              1 + var326):int,0:int,<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>:int),
        P[<<<make_list_1030@51:1>@67:1>@83:0>](<make_list_1030@51:0>:int,(
                                               1 + var326):int,0:int),
        P[<<<make_list_1030@51:1>@67:1>@83:0>](<make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int),
        P[<make_list_1030@51:0>](<make_list_1030@51:0>:int),
        ((<<<make_list_1030@51:1>@67:1>@83:0> = 0) &&
         ((<make_list_1030@51:0> > 0) &&
          (<<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:1>@243:0> =
           (<make_list_1030@51:0> + <<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>))))
        |- P[<<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:1>@243:0>](
        <make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int,
        <<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>:int,<<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:1>@243:0>:int)
        
        P[<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>](<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int,<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>:int),
        P[<<fold_right_1143@71:2>@79:0>](<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int),
        P[<make_list_1030@51:0>](<make_list_1030@51:0>:int),
        P[<<<make_list_1030@51:1>@67:1>@83:0>](<make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int)|- P[<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>](
        <make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int,
        <<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>:int)
        
        P[<<<fold_right_1143@71:0>@141:0>@199:0>](<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>:int),
        P[<<fold_right_1143@71:2>@79:0>](<fold_right_1143@71:1>:int,<<fold_right_1143@71:2>@79:0>:int),
        ((<<fold_right_1143@71:2>@79:0> = 0) && (<fold_right_1143@71:1> >= 1))
        |- P[<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>](<fold_right_1143@71:1>:int,
                                                            <<fold_right_1143@71:2>@79:0>:int,
                                                            <<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>:int)
        
        P[<<fold_right_1143@71:0>@141:2>](var329:int),
        P[<<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>](var329:int,<<<fold_right_1143@71:0>@141:0>@199:0>:int)|- P[<<<fold_right_1143@71:0>@141:0>@199:0>](
        <<<fold_right_1143@71:0>@141:0>@199:0>:int)
        
         (0 <= <<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>)
        |- P[<<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>](<<<fold_right_1143@71:0>@141:1>@147:0>:int,
                                                             <<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>:int)
        
        P[<<<fold_right_1143@71:0>@141:1>@147:0>](<<<fold_right_1143@108:4>@111:0>@157:0>:int),
        (0 > <<<fold_right_1143@108:4>@111:0>@157:0>) |- bot
        
        P[<<fold_right_1143@71:0>@141:2>](<<<fold_right_1143@71:0>@141:1>@147:0>:int)|- P[<<<fold_right_1143@71:0>@141:1>@147:0>](
        <<<fold_right_1143@71:0>@141:1>@147:0>:int)
        
         (0 <= <<fold_right_1143@71:0>@141:2>) |- P[<<fold_right_1143@71:0>@141:2>](<<fold_right_1143@71:0>@141:2>:int)
        
        P[<<fold_right_1143@71:2>@79:0>](<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int),
        P[<make_list_1030@51:0>](<make_list_1030@51:0>:int)|- P[<<<make_list_1030@51:1>@67:1>@83:0>](
        <make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int)
        
         ((<<fold_right_1143@71:2>@79:0> = 0) && (<fold_right_1143@71:1> >= 1))
        |- P[<<fold_right_1143@71:2>@79:0>](<fold_right_1143@71:1>:int,
                                            <<fold_right_1143@71:2>@79:0>:int)
        
        P[<make_list_1030@51:0>]((1 + <make_list_1030@54:0>):int), ((1 + <make_list_1030@54:0>) > 0)
        |- P[<make_list_1030@54:0>](<make_list_1030@54:0>:int)
        
        |- P[<make_list_1030@51:0>](<make_list_1030@51:0>:int)
      lower bounds:
        P[<<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>](<<<fold_right_1143@71:0>@141:1>@147:0>:int,<<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>:int) =
        (0 <= <<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>)
        P[<<fold_right_1143@71:0>@141:2>](<<fold_right_1143@71:0>@141:2>:int) = (0 <= <<fold_right_1143@71:0>@141:2>)
        P[<<fold_right_1143@71:2>@79:0>](<fold_right_1143@71:1>:int,<<fold_right_1143@71:2>@79:0>:int) =
        ((<<fold_right_1143@71:2>@79:0> = 0) && (<fold_right_1143@71:1> >= 1))
        P[<make_list_1030@51:0>](<make_list_1030@51:0>:int) = true
        P[<fail_2169@292:0>](var433:bool) = false
        P[<<<fold_right_1143@71:0>@141:0>@199:0>](<<<fold_right_1143@71:0>@141:0>@199:0>:int) =
        (0 <= <<<fold_right_1143@71:0>@141:0>@199:0>)
        P[<<<fold_right_1143@71:0>@141:1>@147:0>](<<<fold_right_1143@71:0>@141:1>@147:0>:int) =
        (0 <= <<<fold_right_1143@71:0>@141:1>@147:0>)
        P[<<<make_list_1030@51:1>@67:1>@83:0>](<make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int) =
        ((<<<make_list_1030@51:1>@67:1>@83:0> = 0) && (<<make_list_1030@51:1>@67:0> >= 1))
        P[<make_list_1030@54:0>](<make_list_1030@54:0>:int) = ((1 + <make_list_1030@54:0>) > 0)
        P[<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>](<fold_right_1143@71:1>:int,<<fold_right_1143@71:2>@79:0>:int,<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>:int) =
        ((<<fold_right_1143@71:2>@79:0> = 0) &&
         ((0 <= <<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>) && (<fold_right_1143@71:1> >= 1)))
        P[<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>](<make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int,<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>:int) =
        ((<<<make_list_1030@51:1>@67:1>@83:0> = 0) &&
         ((0 <= <<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>) && (<<make_list_1030@51:1>@67:0> >= 1)))
        P[<<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:1>@243:0>](
        <make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int,<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>:int,<<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:1>@243:0>:int) =
        ((<<<make_list_1030@51:1>@67:1>@83:0> = 0) &&
         ((<make_list_1030@51:0> > 0) &&
          ((<<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:1>@243:0> =
            (<make_list_1030@51:0> + <<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>)) &&
           ((0 <= <<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>) && (<<make_list_1030@51:1>@67:0> >= 1)))))
        P[<<<<<fold_right_1143@71:2>@79:1>@102:0>@213:1>@247:0>](<fold_right_1143@71:1>:int,<<fold_right_1143@71:2>@79:0>:int,<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>:int,<<<<<fold_right_1143@71:2>@79:1>@102:0>@213:1>@247:0>:int) =
        ((<<fold_right_1143@71:2>@79:0> = 0) &&
         ((<fold_right_1143@71:1> >= 1) &&
          ((0 <= <<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>) &&
           (<<<<<fold_right_1143@71:2>@79:1>@102:0>@213:1>@247:0> > <<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>))))
        P[<<<<fold_right_1143@71:0>@141:0>@199:1>@261:0>](<<<fold_right_1143@71:0>@141:0>@199:0>:int,<<<<fold_right_1143@71:0>@141:0>@199:1>@261:0>:int) =
        ((0 <= <<<fold_right_1143@71:0>@141:0>@199:0>) &&
         (<<<<fold_right_1143@71:0>@141:0>@199:1>@261:0> > <<<fold_right_1143@71:0>@141:0>@199:0>))
        P[<<<fold_right_1143@71:0>@141:3>@271:0>](<<fold_right_1143@71:0>@141:2>:int,<<<fold_right_1143@71:0>@141:3>@271:0>:int) =
        ((0 < <<<fold_right_1143@71:0>@141:3>@271:0>) && (0 <= <<fold_right_1143@71:0>@141:2>))
      upper bounds:
        P[<make_list_1030@54:0>](var440:int) = true
        P[<make_list_1030@51:0>](var437:int) = true
      begin GenHcSolver.classify_pids(194835)[4]
        output:
          [<make_list_1030@51:0>;<make_list_1030@54:0>]
      end GenHcSolver.classify_pids(194835)[4] (0.000000 sec.)
      begin ApronInterface.convex_hull_interpolate(194846)[4]
        lb:true
        nub:false
        lb':true
        nub':false
        begin InterpProver.interpolate(194847)[5]
          begin InterpProver.interpolate_fresh(194848)[6]
            begin InterpProver.interpolate_log(194849)[7]
              input1: true
              input2: false
              begin InterpProver.interpolate_check(194850)[8]
                begin InterpProver.interpolate_simplify(194851)[9]
                  begin InterpProver.interpolate_quick(194864)[10]
                    
                  end InterpProver.interpolate_quick(194864)[10] (0.000000 sec.)
                  
                end InterpProver.interpolate_simplify(194851)[9] (0.000000 sec.)
                
              end InterpProver.interpolate_check(194850)[8] (0.000000 sec.)
              output: true
            end InterpProver.interpolate_log(194849)[7] (0.000000 sec.)
            
          end InterpProver.interpolate_fresh(194848)[6] (0.000000 sec.)
          
        end InterpProver.interpolate(194847)[5] (0.000000 sec.)
        output:
          P[<make_list_1030@51:0>](<make_list_1030@51:0>:int) = true
          P[<make_list_1030@54:0>](<make_list_1030@51:0>:int) = true
      end ApronInterface.convex_hull_interpolate(194846)[4] (0.001000 sec.)
      Horn clauses:
        P[<fail_2169@292:0>](<fail_2169@292:0>:bool)|- bot
        
        P[<<<fold_right_1143@71:0>@141:3>@271:0>](<<<fold_right_1143@71:4>@121:0>@127:0>:int,<<<<fold_right_1143@71:4>@121:0>@127:1>@285:0>:int),
        (0 > <<<<fold_right_1143@71:4>@121:0>@127:1>@285:0>) |- bot
        
        P[<<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>](<<fold_right_1143@71:0>@141:2>:int,var322:int),
        P[<<<<fold_right_1143@71:0>@141:0>@199:1>@261:0>](var322:int,<<<fold_right_1143@71:0>@141:3>@271:0>:int),
        P[<<fold_right_1143@71:0>@141:2>](<<fold_right_1143@71:0>@141:2>:int)|- P[<<<fold_right_1143@71:0>@141:3>@271:0>](
        <<fold_right_1143@71:0>@141:2>:int,<<<fold_right_1143@71:0>@141:3>@271:0>:int)
        
        P[<<<<<fold_right_1143@71:2>@79:1>@102:0>@213:1>@247:0>](var325:int,0:int,<<<fold_right_1143@71:0>@141:0>@199:0>:int,<<<<fold_right_1143@71:0>@141:0>@199:1>@261:0>:int),
        (1 <= var325)
        |- P[<<<<fold_right_1143@71:0>@141:0>@199:1>@261:0>](<<<fold_right_1143@71:0>@141:0>@199:0>:int,
                                                             <<<<fold_right_1143@71:0>@141:0>@199:1>@261:0>:int)
        
        P[<<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:1>@243:0>](
        <f_main_2163@123:0>:int,<fold_right_1143@71:1>:int,<<fold_right_1143@71:2>@79:0>:int,<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>:int,<<<<<fold_right_1143@71:2>@79:1>@102:0>@213:1>@247:0>:int)|- P[<<<<<fold_right_1143@71:2>@79:1>@102:0>@213:1>@247:0>](
        <fold_right_1143@71:1>:int,<<fold_right_1143@71:2>@79:0>:int,
        <<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>:int,<<<<<fold_right_1143@71:2>@79:1>@102:0>@213:1>@247:0>:int)
        
        P[<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>](<make_list_1030@51:0>:int,(
                                                              1 + var326):int,0:int,<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>:int),
        P[<<<make_list_1030@51:1>@67:1>@83:0>](<make_list_1030@51:0>:int,(
                                               1 + var326):int,0:int),
        P[<<<make_list_1030@51:1>@67:1>@83:0>](<make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int),
        ((<<<make_list_1030@51:1>@67:1>@83:0> = 0) &&
         ((<make_list_1030@51:0> > 0) &&
          (<<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:1>@243:0> =
           (<make_list_1030@51:0> + <<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>))))
        |- P[<<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:1>@243:0>](
        <make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int,
        <<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>:int,<<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:1>@243:0>:int)
        
        P[<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>](<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int,<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>:int),
        P[<<fold_right_1143@71:2>@79:0>](<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int),
        P[<<<make_list_1030@51:1>@67:1>@83:0>](<make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int)|- P[<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>](
        <make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int,
        <<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>:int)
        
        P[<<<fold_right_1143@71:0>@141:0>@199:0>](<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>:int),
        P[<<fold_right_1143@71:2>@79:0>](<fold_right_1143@71:1>:int,<<fold_right_1143@71:2>@79:0>:int),
        ((<<fold_right_1143@71:2>@79:0> = 0) && (<fold_right_1143@71:1> >= 1))
        |- P[<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>](<fold_right_1143@71:1>:int,
                                                            <<fold_right_1143@71:2>@79:0>:int,
                                                            <<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>:int)
        
        P[<<fold_right_1143@71:0>@141:2>](var329:int),
        P[<<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>](var329:int,<<<fold_right_1143@71:0>@141:0>@199:0>:int)|- P[<<<fold_right_1143@71:0>@141:0>@199:0>](
        <<<fold_right_1143@71:0>@141:0>@199:0>:int)
        
         (0 <= <<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>)
        |- P[<<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>](<<<fold_right_1143@71:0>@141:1>@147:0>:int,
                                                             <<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>:int)
        
        P[<<<fold_right_1143@71:0>@141:1>@147:0>](<<<fold_right_1143@108:4>@111:0>@157:0>:int),
        (0 > <<<fold_right_1143@108:4>@111:0>@157:0>) |- bot
        
        P[<<fold_right_1143@71:0>@141:2>](<<<fold_right_1143@71:0>@141:1>@147:0>:int)|- P[<<<fold_right_1143@71:0>@141:1>@147:0>](
        <<<fold_right_1143@71:0>@141:1>@147:0>:int)
        
         (0 <= <<fold_right_1143@71:0>@141:2>) |- P[<<fold_right_1143@71:0>@141:2>](<<fold_right_1143@71:0>@141:2>:int)
        
        P[<<fold_right_1143@71:2>@79:0>](<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int)|- P[<<<make_list_1030@51:1>@67:1>@83:0>](
        <make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int)
        
         ((<<fold_right_1143@71:2>@79:0> = 0) && (<fold_right_1143@71:1> >= 1))
        |- P[<<fold_right_1143@71:2>@79:0>](<fold_right_1143@71:1>:int,
                                            <<fold_right_1143@71:2>@79:0>:int)
      lower bounds:
        P[<<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>](<<<fold_right_1143@71:0>@141:1>@147:0>:int,<<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>:int) =
        (0 <= <<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>)
        P[<<fold_right_1143@71:0>@141:2>](<<fold_right_1143@71:0>@141:2>:int) = (0 <= <<fold_right_1143@71:0>@141:2>)
        P[<<fold_right_1143@71:2>@79:0>](<fold_right_1143@71:1>:int,<<fold_right_1143@71:2>@79:0>:int) =
        ((<<fold_right_1143@71:2>@79:0> = 0) && (<fold_right_1143@71:1> >= 1))
        P[<fail_2169@292:0>](var444:bool) = false
        P[<<<fold_right_1143@71:0>@141:0>@199:0>](<<<fold_right_1143@71:0>@141:0>@199:0>:int) =
        (0 <= <<<fold_right_1143@71:0>@141:0>@199:0>)
        P[<<<fold_right_1143@71:0>@141:1>@147:0>](<<<fold_right_1143@71:0>@141:1>@147:0>:int) =
        (0 <= <<<fold_right_1143@71:0>@141:1>@147:0>)
        P[<<<make_list_1030@51:1>@67:1>@83:0>](<make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int) =
        ((<<<make_list_1030@51:1>@67:1>@83:0> = 0) && (<<make_list_1030@51:1>@67:0> >= 1))
        P[<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>](<fold_right_1143@71:1>:int,<<fold_right_1143@71:2>@79:0>:int,<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>:int) =
        ((<<fold_right_1143@71:2>@79:0> = 0) &&
         ((0 <= <<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>) && (<fold_right_1143@71:1> >= 1)))
        P[<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>](<make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int,<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>:int) =
        ((<<<make_list_1030@51:1>@67:1>@83:0> = 0) &&
         ((0 <= <<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>) && (<<make_list_1030@51:1>@67:0> >= 1)))
        P[<<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:1>@243:0>](
        <make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int,<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>:int,<<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:1>@243:0>:int) =
        ((<<<make_list_1030@51:1>@67:1>@83:0> = 0) &&
         ((<make_list_1030@51:0> > 0) &&
          ((<<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:1>@243:0> =
            (<make_list_1030@51:0> + <<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>)) &&
           ((0 <= <<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>) && (<<make_list_1030@51:1>@67:0> >= 1)))))
        P[<<<<<fold_right_1143@71:2>@79:1>@102:0>@213:1>@247:0>](<fold_right_1143@71:1>:int,<<fold_right_1143@71:2>@79:0>:int,<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>:int,<<<<<fold_right_1143@71:2>@79:1>@102:0>@213:1>@247:0>:int) =
        ((<<fold_right_1143@71:2>@79:0> = 0) &&
         ((<fold_right_1143@71:1> >= 1) &&
          ((0 <= <<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>) &&
           (<<<<<fold_right_1143@71:2>@79:1>@102:0>@213:1>@247:0> > <<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>))))
        P[<<<<fold_right_1143@71:0>@141:0>@199:1>@261:0>](<<<fold_right_1143@71:0>@141:0>@199:0>:int,<<<<fold_right_1143@71:0>@141:0>@199:1>@261:0>:int) =
        ((0 <= <<<fold_right_1143@71:0>@141:0>@199:0>) &&
         (<<<<fold_right_1143@71:0>@141:0>@199:1>@261:0> > <<<fold_right_1143@71:0>@141:0>@199:0>))
        P[<<<fold_right_1143@71:0>@141:3>@271:0>](<<fold_right_1143@71:0>@141:2>:int,<<<fold_right_1143@71:0>@141:3>@271:0>:int) =
        ((0 < <<<fold_right_1143@71:0>@141:3>@271:0>) && (0 <= <<fold_right_1143@71:0>@141:2>))
      upper bounds:
        P[<fail_2169@292:0>](var447:bool) = true
      begin GenHcSolver.classify_pids(205817)[4]
        output:
          [<fail_2169@292:0>]
      end GenHcSolver.classify_pids(205817)[4] (0.000000 sec.)
      lb:false
      nub:false
      begin ApronInterface.convex_hull_interpolate(205820)[4]
        lb:false
        nub:false
        lb':false
        nub':false
        begin InterpProver.interpolate(205821)[5]
          begin InterpProver.interpolate_fresh(205822)[6]
            begin InterpProver.interpolate_log(205823)[7]
              input1: false
              input2: false
              begin InterpProver.interpolate_check(205824)[8]
                begin InterpProver.interpolate_simplify(205825)[9]
                  begin InterpProver.interpolate_quick(205838)[10]
                    
                  end InterpProver.interpolate_quick(205838)[10] (0.000000 sec.)
                  begin minimizing # of disjunctions(205842)[10]
                    input: false
                    output: false
                  end minimizing # of disjunctions(205842)[10] (0.000000 sec.)
                  
                end InterpProver.interpolate_simplify(205825)[9] (0.000000 sec.)
                
              end InterpProver.interpolate_check(205824)[8] (0.000000 sec.)
              output: false
            end InterpProver.interpolate_log(205823)[7] (0.000000 sec.)
            
          end InterpProver.interpolate_fresh(205822)[6] (0.000000 sec.)
          
        end InterpProver.interpolate(205821)[5] (0.000000 sec.)
        output:
          P[<fail_2169@292:0>](var444:bool) = false
      end ApronInterface.convex_hull_interpolate(205820)[4] (0.000000 sec.)
      Horn clauses:
        P[<<<fold_right_1143@71:0>@141:3>@271:0>](<<<fold_right_1143@71:4>@121:0>@127:0>:int,<<<<fold_right_1143@71:4>@121:0>@127:1>@285:0>:int),
        (0 > <<<<fold_right_1143@71:4>@121:0>@127:1>@285:0>) |- bot
        
        P[<<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>](<<fold_right_1143@71:0>@141:2>:int,var322:int),
        P[<<<<fold_right_1143@71:0>@141:0>@199:1>@261:0>](var322:int,<<<fold_right_1143@71:0>@141:3>@271:0>:int),
        P[<<fold_right_1143@71:0>@141:2>](<<fold_right_1143@71:0>@141:2>:int)|- P[<<<fold_right_1143@71:0>@141:3>@271:0>](
        <<fold_right_1143@71:0>@141:2>:int,<<<fold_right_1143@71:0>@141:3>@271:0>:int)
        
        P[<<<<<fold_right_1143@71:2>@79:1>@102:0>@213:1>@247:0>](var325:int,0:int,<<<fold_right_1143@71:0>@141:0>@199:0>:int,<<<<fold_right_1143@71:0>@141:0>@199:1>@261:0>:int),
        (1 <= var325)
        |- P[<<<<fold_right_1143@71:0>@141:0>@199:1>@261:0>](<<<fold_right_1143@71:0>@141:0>@199:0>:int,
                                                             <<<<fold_right_1143@71:0>@141:0>@199:1>@261:0>:int)
        
        P[<<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:1>@243:0>](
        <f_main_2163@123:0>:int,<fold_right_1143@71:1>:int,<<fold_right_1143@71:2>@79:0>:int,<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>:int,<<<<<fold_right_1143@71:2>@79:1>@102:0>@213:1>@247:0>:int)|- P[<<<<<fold_right_1143@71:2>@79:1>@102:0>@213:1>@247:0>](
        <fold_right_1143@71:1>:int,<<fold_right_1143@71:2>@79:0>:int,
        <<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>:int,<<<<<fold_right_1143@71:2>@79:1>@102:0>@213:1>@247:0>:int)
        
        P[<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>](<make_list_1030@51:0>:int,(
                                                              1 + var326):int,0:int,<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>:int),
        P[<<<make_list_1030@51:1>@67:1>@83:0>](<make_list_1030@51:0>:int,(
                                               1 + var326):int,0:int),
        P[<<<make_list_1030@51:1>@67:1>@83:0>](<make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int),
        ((<<<make_list_1030@51:1>@67:1>@83:0> = 0) &&
         ((<make_list_1030@51:0> > 0) &&
          (<<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:1>@243:0> =
           (<make_list_1030@51:0> + <<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>))))
        |- P[<<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:1>@243:0>](
        <make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int,
        <<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>:int,<<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:1>@243:0>:int)
        
        P[<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>](<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int,<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>:int),
        P[<<fold_right_1143@71:2>@79:0>](<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int),
        P[<<<make_list_1030@51:1>@67:1>@83:0>](<make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int)|- P[<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>](
        <make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int,
        <<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>:int)
        
        P[<<<fold_right_1143@71:0>@141:0>@199:0>](<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>:int),
        P[<<fold_right_1143@71:2>@79:0>](<fold_right_1143@71:1>:int,<<fold_right_1143@71:2>@79:0>:int),
        ((<<fold_right_1143@71:2>@79:0> = 0) && (<fold_right_1143@71:1> >= 1))
        |- P[<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>](<fold_right_1143@71:1>:int,
                                                            <<fold_right_1143@71:2>@79:0>:int,
                                                            <<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>:int)
        
        P[<<fold_right_1143@71:0>@141:2>](var329:int),
        P[<<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>](var329:int,<<<fold_right_1143@71:0>@141:0>@199:0>:int)|- P[<<<fold_right_1143@71:0>@141:0>@199:0>](
        <<<fold_right_1143@71:0>@141:0>@199:0>:int)
        
         (0 <= <<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>)
        |- P[<<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>](<<<fold_right_1143@71:0>@141:1>@147:0>:int,
                                                             <<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>:int)
        
        P[<<<fold_right_1143@71:0>@141:1>@147:0>](<<<fold_right_1143@108:4>@111:0>@157:0>:int),
        (0 > <<<fold_right_1143@108:4>@111:0>@157:0>) |- bot
        
        P[<<fold_right_1143@71:0>@141:2>](<<<fold_right_1143@71:0>@141:1>@147:0>:int)|- P[<<<fold_right_1143@71:0>@141:1>@147:0>](
        <<<fold_right_1143@71:0>@141:1>@147:0>:int)
        
         (0 <= <<fold_right_1143@71:0>@141:2>) |- P[<<fold_right_1143@71:0>@141:2>](<<fold_right_1143@71:0>@141:2>:int)
        
        P[<<fold_right_1143@71:2>@79:0>](<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int)|- P[<<<make_list_1030@51:1>@67:1>@83:0>](
        <make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int)
        
         ((<<fold_right_1143@71:2>@79:0> = 0) && (<fold_right_1143@71:1> >= 1))
        |- P[<<fold_right_1143@71:2>@79:0>](<fold_right_1143@71:1>:int,
                                            <<fold_right_1143@71:2>@79:0>:int)
      lower bounds:
        P[<<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>](<<<fold_right_1143@71:0>@141:1>@147:0>:int,<<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>:int) =
        (0 <= <<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>)
        P[<<fold_right_1143@71:0>@141:2>](<<fold_right_1143@71:0>@141:2>:int) = (0 <= <<fold_right_1143@71:0>@141:2>)
        P[<<fold_right_1143@71:2>@79:0>](<fold_right_1143@71:1>:int,<<fold_right_1143@71:2>@79:0>:int) =
        ((<<fold_right_1143@71:2>@79:0> = 0) && (<fold_right_1143@71:1> >= 1))
        P[<<<fold_right_1143@71:0>@141:0>@199:0>](<<<fold_right_1143@71:0>@141:0>@199:0>:int) =
        (0 <= <<<fold_right_1143@71:0>@141:0>@199:0>)
        P[<<<fold_right_1143@71:0>@141:1>@147:0>](<<<fold_right_1143@71:0>@141:1>@147:0>:int) =
        (0 <= <<<fold_right_1143@71:0>@141:1>@147:0>)
        P[<<<make_list_1030@51:1>@67:1>@83:0>](<make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int) =
        ((<<<make_list_1030@51:1>@67:1>@83:0> = 0) && (<<make_list_1030@51:1>@67:0> >= 1))
        P[<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>](<fold_right_1143@71:1>:int,<<fold_right_1143@71:2>@79:0>:int,<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>:int) =
        ((<<fold_right_1143@71:2>@79:0> = 0) &&
         ((0 <= <<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>) && (<fold_right_1143@71:1> >= 1)))
        P[<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>](<make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int,<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>:int) =
        ((<<<make_list_1030@51:1>@67:1>@83:0> = 0) &&
         ((0 <= <<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>) && (<<make_list_1030@51:1>@67:0> >= 1)))
        P[<<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:1>@243:0>](
        <make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int,<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>:int,<<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:1>@243:0>:int) =
        ((<<<make_list_1030@51:1>@67:1>@83:0> = 0) &&
         ((<make_list_1030@51:0> > 0) &&
          ((<<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:1>@243:0> =
            (<make_list_1030@51:0> + <<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>)) &&
           ((0 <= <<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>) && (<<make_list_1030@51:1>@67:0> >= 1)))))
        P[<<<<<fold_right_1143@71:2>@79:1>@102:0>@213:1>@247:0>](<fold_right_1143@71:1>:int,<<fold_right_1143@71:2>@79:0>:int,<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>:int,<<<<<fold_right_1143@71:2>@79:1>@102:0>@213:1>@247:0>:int) =
        ((<<fold_right_1143@71:2>@79:0> = 0) &&
         ((<fold_right_1143@71:1> >= 1) &&
          ((0 <= <<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>) &&
           (<<<<<fold_right_1143@71:2>@79:1>@102:0>@213:1>@247:0> > <<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>))))
        P[<<<<fold_right_1143@71:0>@141:0>@199:1>@261:0>](<<<fold_right_1143@71:0>@141:0>@199:0>:int,<<<<fold_right_1143@71:0>@141:0>@199:1>@261:0>:int) =
        ((0 <= <<<fold_right_1143@71:0>@141:0>@199:0>) &&
         (<<<<fold_right_1143@71:0>@141:0>@199:1>@261:0> > <<<fold_right_1143@71:0>@141:0>@199:0>))
        P[<<<fold_right_1143@71:0>@141:3>@271:0>](<<fold_right_1143@71:0>@141:2>:int,<<<fold_right_1143@71:0>@141:3>@271:0>:int) =
        ((0 < <<<fold_right_1143@71:0>@141:3>@271:0>) && (0 <= <<fold_right_1143@71:0>@141:2>))
      upper bounds:
        P[<<<fold_right_1143@71:0>@141:3>@271:0>](var448:int,var449:int) = (0 <= var449)
      begin GenHcSolver.classify_pids(212985)[4]
        output:
          [<<<fold_right_1143@71:0>@141:3>@271:0>]
      end GenHcSolver.classify_pids(212985)[4] (0.000000 sec.)
      lb:((0 < <<<fold_right_1143@71:0>@141:3>@271:0>) && (0 <= <<fold_right_1143@71:0>@141:2>))
      nub:(not (0 <= <<<fold_right_1143@71:0>@141:3>@271:0>))
      begin ApronInterface.convex_hull_interpolate(212988)[4]
        lb:((0 < <<<fold_right_1143@71:0>@141:3>@271:0>) && (0 <= <<fold_right_1143@71:0>@141:2>))
        nub:(not (0 <= <<<fold_right_1143@71:0>@141:3>@271:0>))
        lb':((0 < <<<fold_right_1143@71:0>@141:3>@271:0>) && (0 <= <<fold_right_1143@71:0>@141:2>))
        nub':(not (0 <= <<<fold_right_1143@71:0>@141:3>@271:0>))
        begin InterpProver.interpolate(212989)[5]
          begin InterpProver.interpolate_fresh(212990)[6]
            begin InterpProver.interpolate_log(212991)[7]
              input1: ((0 < <<<fold_right_1143@71:0>@141:3>@271:0>) && (0 <= <<fold_right_1143@71:0>@141:2>))
              input2: (not (0 <= <<<fold_right_1143@71:0>@141:3>@271:0>))
              begin InterpProver.interpolate_check(212992)[8]
                begin InterpProver.interpolate_simplify(212993)[9]
                  begin InterpProver.interpolate_quick(213026)[10]
                    begin CsisatInterface.interpolate_csisat_wrap(213035)[11]
                      begin CsisatInterface.interpolate_csisat_post_process(213036)[12]
                        begin CsisatInterface.interpolate_csisat_log(213037)[13]
                          input1: (0 <= v_sep_fold_right_1143_sep_71_sep_0_sep_141_sep_2 & 1 <= v_sep_fold_right_1143_sep_71_sep_0_sep_141_sep_3_sep_271_sep_0)
                          input2: (1 + v_sep_fold_right_1143_sep_71_sep_0_sep_141_sep_3_sep_271_sep_0) <= 0
                          begin CsisatInterface.interpolate_csisat_raw(213038)[14]
                            
                          end CsisatInterface.interpolate_csisat_raw(213038)[14] (0.000000 sec.)
                          output: -1*v_sep_fold_right_1143_sep_71_sep_0_sep_141_sep_3_sep_271_sep_0 <= -1
                          
                        end CsisatInterface.interpolate_csisat_log(213037)[13] (0.000000 sec.)
                        after simplification: -1*v_sep_fold_right_1143_sep_71_sep_0_sep_141_sep_3_sep_271_sep_0 <= -1
                        after dnf conversion: ((-1*v_sep_fold_right_1143_sep_71_sep_0_sep_141_sep_3_sep_271_sep_0 <= -1))
                        
                      end CsisatInterface.interpolate_csisat_post_process(213036)[12] (0.000000 sec.)
                      
                    end CsisatInterface.interpolate_csisat_wrap(213035)[11] (0.000000 sec.)
                    
                  end InterpProver.interpolate_quick(213026)[10] (0.001000 sec.)
                  
                end InterpProver.interpolate_simplify(212993)[9] (0.001000 sec.)
                
              end InterpProver.interpolate_check(212992)[8] (0.002000 sec.)
              output: (1 <= <<<fold_right_1143@71:0>@141:3>@271:0>)
            end InterpProver.interpolate_log(212991)[7] (0.002000 sec.)
            
          end InterpProver.interpolate_fresh(212990)[6] (0.002000 sec.)
          
        end InterpProver.interpolate(212989)[5] (0.002000 sec.)
        output:
          P[<<<fold_right_1143@71:0>@141:3>@271:0>](<<fold_right_1143@71:0>@141:2>:int,<<<fold_right_1143@71:0>@141:3>@271:0>:int) =
          (1 <= <<<fold_right_1143@71:0>@141:3>@271:0>)
      end ApronInterface.convex_hull_interpolate(212988)[4] (0.002000 sec.)
      Horn clauses:
        P[<<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>](<<fold_right_1143@71:0>@141:2>:int,var322:int),
        P[<<<<fold_right_1143@71:0>@141:0>@199:1>@261:0>](var322:int,<<<fold_right_1143@71:0>@141:3>@271:0>:int),
        P[<<fold_right_1143@71:0>@141:2>](<<fold_right_1143@71:0>@141:2>:int),
        (1 > <<<fold_right_1143@71:0>@141:3>@271:0>) |- bot
        
        P[<<<<<fold_right_1143@71:2>@79:1>@102:0>@213:1>@247:0>](var325:int,0:int,<<<fold_right_1143@71:0>@141:0>@199:0>:int,<<<<fold_right_1143@71:0>@141:0>@199:1>@261:0>:int),
        (1 <= var325)
        |- P[<<<<fold_right_1143@71:0>@141:0>@199:1>@261:0>](<<<fold_right_1143@71:0>@141:0>@199:0>:int,
                                                             <<<<fold_right_1143@71:0>@141:0>@199:1>@261:0>:int)
        
        P[<<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:1>@243:0>](
        <f_main_2163@123:0>:int,<fold_right_1143@71:1>:int,<<fold_right_1143@71:2>@79:0>:int,<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>:int,<<<<<fold_right_1143@71:2>@79:1>@102:0>@213:1>@247:0>:int)|- P[<<<<<fold_right_1143@71:2>@79:1>@102:0>@213:1>@247:0>](
        <fold_right_1143@71:1>:int,<<fold_right_1143@71:2>@79:0>:int,
        <<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>:int,<<<<<fold_right_1143@71:2>@79:1>@102:0>@213:1>@247:0>:int)
        
        P[<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>](<make_list_1030@51:0>:int,(
                                                              1 + var326):int,0:int,<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>:int),
        P[<<<make_list_1030@51:1>@67:1>@83:0>](<make_list_1030@51:0>:int,(
                                               1 + var326):int,0:int),
        P[<<<make_list_1030@51:1>@67:1>@83:0>](<make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int),
        ((<<<make_list_1030@51:1>@67:1>@83:0> = 0) &&
         ((<make_list_1030@51:0> > 0) &&
          (<<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:1>@243:0> =
           (<make_list_1030@51:0> + <<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>))))
        |- P[<<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:1>@243:0>](
        <make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int,
        <<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>:int,<<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:1>@243:0>:int)
        
        P[<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>](<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int,<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>:int),
        P[<<fold_right_1143@71:2>@79:0>](<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int),
        P[<<<make_list_1030@51:1>@67:1>@83:0>](<make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int)|- P[<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>](
        <make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int,
        <<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>:int)
        
        P[<<<fold_right_1143@71:0>@141:0>@199:0>](<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>:int),
        P[<<fold_right_1143@71:2>@79:0>](<fold_right_1143@71:1>:int,<<fold_right_1143@71:2>@79:0>:int),
        ((<<fold_right_1143@71:2>@79:0> = 0) && (<fold_right_1143@71:1> >= 1))
        |- P[<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>](<fold_right_1143@71:1>:int,
                                                            <<fold_right_1143@71:2>@79:0>:int,
                                                            <<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>:int)
        
        P[<<fold_right_1143@71:0>@141:2>](var329:int),
        P[<<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>](var329:int,<<<fold_right_1143@71:0>@141:0>@199:0>:int)|- P[<<<fold_right_1143@71:0>@141:0>@199:0>](
        <<<fold_right_1143@71:0>@141:0>@199:0>:int)
        
         (0 <= <<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>)
        |- P[<<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>](<<<fold_right_1143@71:0>@141:1>@147:0>:int,
                                                             <<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>:int)
        
        P[<<<fold_right_1143@71:0>@141:1>@147:0>](<<<fold_right_1143@108:4>@111:0>@157:0>:int),
        (0 > <<<fold_right_1143@108:4>@111:0>@157:0>) |- bot
        
        P[<<fold_right_1143@71:0>@141:2>](<<<fold_right_1143@71:0>@141:1>@147:0>:int)|- P[<<<fold_right_1143@71:0>@141:1>@147:0>](
        <<<fold_right_1143@71:0>@141:1>@147:0>:int)
        
         (0 <= <<fold_right_1143@71:0>@141:2>) |- P[<<fold_right_1143@71:0>@141:2>](<<fold_right_1143@71:0>@141:2>:int)
        
        P[<<fold_right_1143@71:2>@79:0>](<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int)|- P[<<<make_list_1030@51:1>@67:1>@83:0>](
        <make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int)
        
         ((<<fold_right_1143@71:2>@79:0> = 0) && (<fold_right_1143@71:1> >= 1))
        |- P[<<fold_right_1143@71:2>@79:0>](<fold_right_1143@71:1>:int,
                                            <<fold_right_1143@71:2>@79:0>:int)
      lower bounds:
        P[<<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>](<<<fold_right_1143@71:0>@141:1>@147:0>:int,<<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>:int) =
        (0 <= <<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>)
        P[<<fold_right_1143@71:0>@141:2>](<<fold_right_1143@71:0>@141:2>:int) = (0 <= <<fold_right_1143@71:0>@141:2>)
        P[<<fold_right_1143@71:2>@79:0>](<fold_right_1143@71:1>:int,<<fold_right_1143@71:2>@79:0>:int) =
        ((<<fold_right_1143@71:2>@79:0> = 0) && (<fold_right_1143@71:1> >= 1))
        P[<<<fold_right_1143@71:0>@141:0>@199:0>](<<<fold_right_1143@71:0>@141:0>@199:0>:int) =
        (0 <= <<<fold_right_1143@71:0>@141:0>@199:0>)
        P[<<<fold_right_1143@71:0>@141:1>@147:0>](<<<fold_right_1143@71:0>@141:1>@147:0>:int) =
        (0 <= <<<fold_right_1143@71:0>@141:1>@147:0>)
        P[<<<make_list_1030@51:1>@67:1>@83:0>](<make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int) =
        ((<<<make_list_1030@51:1>@67:1>@83:0> = 0) && (<<make_list_1030@51:1>@67:0> >= 1))
        P[<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>](<fold_right_1143@71:1>:int,<<fold_right_1143@71:2>@79:0>:int,<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>:int) =
        ((<<fold_right_1143@71:2>@79:0> = 0) &&
         ((0 <= <<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>) && (<fold_right_1143@71:1> >= 1)))
        P[<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>](<make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int,<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>:int) =
        ((<<<make_list_1030@51:1>@67:1>@83:0> = 0) &&
         ((0 <= <<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>) && (<<make_list_1030@51:1>@67:0> >= 1)))
        P[<<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:1>@243:0>](
        <make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int,<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>:int,<<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:1>@243:0>:int) =
        ((<<<make_list_1030@51:1>@67:1>@83:0> = 0) &&
         ((<make_list_1030@51:0> > 0) &&
          ((<<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:1>@243:0> =
            (<make_list_1030@51:0> + <<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>)) &&
           ((0 <= <<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>) && (<<make_list_1030@51:1>@67:0> >= 1)))))
        P[<<<<<fold_right_1143@71:2>@79:1>@102:0>@213:1>@247:0>](<fold_right_1143@71:1>:int,<<fold_right_1143@71:2>@79:0>:int,<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>:int,<<<<<fold_right_1143@71:2>@79:1>@102:0>@213:1>@247:0>:int) =
        ((<<fold_right_1143@71:2>@79:0> = 0) &&
         ((<fold_right_1143@71:1> >= 1) &&
          ((0 <= <<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>) &&
           (<<<<<fold_right_1143@71:2>@79:1>@102:0>@213:1>@247:0> > <<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>))))
        P[<<<<fold_right_1143@71:0>@141:0>@199:1>@261:0>](<<<fold_right_1143@71:0>@141:0>@199:0>:int,<<<<fold_right_1143@71:0>@141:0>@199:1>@261:0>:int) =
        ((0 <= <<<fold_right_1143@71:0>@141:0>@199:0>) &&
         (<<<<fold_right_1143@71:0>@141:0>@199:1>@261:0> > <<<fold_right_1143@71:0>@141:0>@199:0>))
      upper bounds:
        P[<<<<fold_right_1143@71:0>@141:0>@199:1>@261:0>](var450:int,var451:int) = ((1 <= var451) || (0 > var450))
      begin GenHcSolver.classify_pids(220115)[4]
        output:
          [<<<<fold_right_1143@71:0>@141:0>@199:1>@261:0>]
      end GenHcSolver.classify_pids(220115)[4] (0.000000 sec.)
      lb:((0 <= <<<fold_right_1143@71:0>@141:0>@199:0>) &&
          (<<<<fold_right_1143@71:0>@141:0>@199:1>@261:0> > <<<fold_right_1143@71:0>@141:0>@199:0>))
      nub:(not ((1 <= <<<<fold_right_1143@71:0>@141:0>@199:1>@261:0>) || (0 > <<<fold_right_1143@71:0>@141:0>@199:0>)))
      begin ApronInterface.convex_hull_interpolate(220118)[4]
        lb:((0 <= <<<fold_right_1143@71:0>@141:0>@199:0>) &&
            (<<<<fold_right_1143@71:0>@141:0>@199:1>@261:0> > <<<fold_right_1143@71:0>@141:0>@199:0>))
        nub:(not
               ((1 <= <<<<fold_right_1143@71:0>@141:0>@199:1>@261:0>) || (0 > <<<fold_right_1143@71:0>@141:0>@199:0>)))
        lb':((0 <= <<<fold_right_1143@71:0>@141:0>@199:0>) &&
             (<<<<fold_right_1143@71:0>@141:0>@199:1>@261:0> > <<<fold_right_1143@71:0>@141:0>@199:0>))
        nub':(not
                ((1 <= <<<<fold_right_1143@71:0>@141:0>@199:1>@261:0>) || (0 > <<<fold_right_1143@71:0>@141:0>@199:0>)))
        begin InterpProver.interpolate(220119)[5]
          begin InterpProver.interpolate_fresh(220120)[6]
            begin InterpProver.interpolate_log(220121)[7]
              input1: ((0 <= <<<fold_right_1143@71:0>@141:0>@199:0>) &&
                       (<<<<fold_right_1143@71:0>@141:0>@199:1>@261:0> > <<<fold_right_1143@71:0>@141:0>@199:0>))
              input2: (not
                         ((1 <= <<<<fold_right_1143@71:0>@141:0>@199:1>@261:0>) ||
                          (0 > <<<fold_right_1143@71:0>@141:0>@199:0>)))
              begin InterpProver.interpolate_check(220122)[8]
                begin InterpProver.interpolate_simplify(220123)[9]
                  begin InterpProver.interpolate_quick(220184)[10]
                    begin CsisatInterface.interpolate_csisat_wrap(220193)[11]
                      begin CsisatInterface.interpolate_csisat_post_process(220194)[12]
                        begin CsisatInterface.interpolate_csisat_log(220195)[13]
                          input1: (0 <= v_sep_fold_right_1143_sep_71_sep_0_sep_141_sep_0_sep_199_sep_0 & (1 + v_sep_fold_right_1143_sep_71_sep_0_sep_141_sep_0_sep_199_sep_0) <= v_sep_fold_right_1143_sep_71_sep_0_sep_141_sep_0_sep_199_sep_1_sep_261_sep_0)
                          input2: (0 <= v_sep_fold_right_1143_sep_71_sep_0_sep_141_sep_0_sep_199_sep_0 & (1 + v_sep_fold_right_1143_sep_71_sep_0_sep_141_sep_0_sep_199_sep_1_sep_261_sep_0) <= 1)
                          begin CsisatInterface.interpolate_csisat_raw(220196)[14]
                            
                          end CsisatInterface.interpolate_csisat_raw(220196)[14] (0.000000 sec.)
                          output: -2*v_sep_fold_right_1143_sep_71_sep_0_sep_141_sep_0_sep_199_sep_1_sep_261_sep_0 <= -2
                          
                        end CsisatInterface.interpolate_csisat_log(220195)[13] (0.000000 sec.)
                        after simplification: -2*v_sep_fold_right_1143_sep_71_sep_0_sep_141_sep_0_sep_199_sep_1_sep_261_sep_0 <= -2
                        after dnf conversion: ((-2*v_sep_fold_right_1143_sep_71_sep_0_sep_141_sep_0_sep_199_sep_1_sep_261_sep_0 <= -2))
                        
                      end CsisatInterface.interpolate_csisat_post_process(220194)[12] (0.000000 sec.)
                      
                    end CsisatInterface.interpolate_csisat_wrap(220193)[11] (0.000000 sec.)
                    
                  end InterpProver.interpolate_quick(220184)[10] (0.001000 sec.)
                  
                end InterpProver.interpolate_simplify(220123)[9] (0.001000 sec.)
                
              end InterpProver.interpolate_check(220122)[8] (0.001000 sec.)
              output: (1 <= <<<<fold_right_1143@71:0>@141:0>@199:1>@261:0>)
            end InterpProver.interpolate_log(220121)[7] (0.001000 sec.)
            
          end InterpProver.interpolate_fresh(220120)[6] (0.001000 sec.)
          
        end InterpProver.interpolate(220119)[5] (0.001000 sec.)
        output:
          P[<<<<fold_right_1143@71:0>@141:0>@199:1>@261:0>](<<<fold_right_1143@71:0>@141:0>@199:0>:int,<<<<fold_right_1143@71:0>@141:0>@199:1>@261:0>:int) =
          (1 <= <<<<fold_right_1143@71:0>@141:0>@199:1>@261:0>)
      end ApronInterface.convex_hull_interpolate(220118)[4] (0.001000 sec.)
      Horn clauses:
        P[<<<<<fold_right_1143@71:2>@79:1>@102:0>@213:1>@247:0>](var325:int,0:int,<<<fold_right_1143@71:0>@141:0>@199:0>:int,<<<<fold_right_1143@71:0>@141:0>@199:1>@261:0>:int),
        ((1 <= var325) && (1 > <<<<fold_right_1143@71:0>@141:0>@199:1>@261:0>)) |- bot
        
        P[<<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:1>@243:0>](
        <f_main_2163@123:0>:int,<fold_right_1143@71:1>:int,<<fold_right_1143@71:2>@79:0>:int,<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>:int,<<<<<fold_right_1143@71:2>@79:1>@102:0>@213:1>@247:0>:int)|- P[<<<<<fold_right_1143@71:2>@79:1>@102:0>@213:1>@247:0>](
        <fold_right_1143@71:1>:int,<<fold_right_1143@71:2>@79:0>:int,
        <<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>:int,<<<<<fold_right_1143@71:2>@79:1>@102:0>@213:1>@247:0>:int)
        
        P[<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>](<make_list_1030@51:0>:int,(
                                                              1 + var326):int,0:int,<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>:int),
        P[<<<make_list_1030@51:1>@67:1>@83:0>](<make_list_1030@51:0>:int,(
                                               1 + var326):int,0:int),
        P[<<<make_list_1030@51:1>@67:1>@83:0>](<make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int),
        ((<<<make_list_1030@51:1>@67:1>@83:0> = 0) &&
         ((<make_list_1030@51:0> > 0) &&
          (<<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:1>@243:0> =
           (<make_list_1030@51:0> + <<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>))))
        |- P[<<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:1>@243:0>](
        <make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int,
        <<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>:int,<<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:1>@243:0>:int)
        
        P[<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>](<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int,<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>:int),
        P[<<fold_right_1143@71:2>@79:0>](<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int),
        P[<<<make_list_1030@51:1>@67:1>@83:0>](<make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int)|- P[<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>](
        <make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int,
        <<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>:int)
        
        P[<<<fold_right_1143@71:0>@141:0>@199:0>](<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>:int),
        P[<<fold_right_1143@71:2>@79:0>](<fold_right_1143@71:1>:int,<<fold_right_1143@71:2>@79:0>:int),
        ((<<fold_right_1143@71:2>@79:0> = 0) && (<fold_right_1143@71:1> >= 1))
        |- P[<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>](<fold_right_1143@71:1>:int,
                                                            <<fold_right_1143@71:2>@79:0>:int,
                                                            <<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>:int)
        
        P[<<fold_right_1143@71:0>@141:2>](var329:int),
        P[<<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>](var329:int,<<<fold_right_1143@71:0>@141:0>@199:0>:int)|- P[<<<fold_right_1143@71:0>@141:0>@199:0>](
        <<<fold_right_1143@71:0>@141:0>@199:0>:int)
        
         (0 <= <<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>)
        |- P[<<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>](<<<fold_right_1143@71:0>@141:1>@147:0>:int,
                                                             <<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>:int)
        
        P[<<<fold_right_1143@71:0>@141:1>@147:0>](<<<fold_right_1143@108:4>@111:0>@157:0>:int),
        (0 > <<<fold_right_1143@108:4>@111:0>@157:0>) |- bot
        
        P[<<fold_right_1143@71:0>@141:2>](<<<fold_right_1143@71:0>@141:1>@147:0>:int)|- P[<<<fold_right_1143@71:0>@141:1>@147:0>](
        <<<fold_right_1143@71:0>@141:1>@147:0>:int)
        
         (0 <= <<fold_right_1143@71:0>@141:2>) |- P[<<fold_right_1143@71:0>@141:2>](<<fold_right_1143@71:0>@141:2>:int)
        
        P[<<fold_right_1143@71:2>@79:0>](<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int)|- P[<<<make_list_1030@51:1>@67:1>@83:0>](
        <make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int)
        
         ((<<fold_right_1143@71:2>@79:0> = 0) && (<fold_right_1143@71:1> >= 1))
        |- P[<<fold_right_1143@71:2>@79:0>](<fold_right_1143@71:1>:int,
                                            <<fold_right_1143@71:2>@79:0>:int)
      lower bounds:
        P[<<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>](<<<fold_right_1143@71:0>@141:1>@147:0>:int,<<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>:int) =
        (0 <= <<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>)
        P[<<fold_right_1143@71:0>@141:2>](<<fold_right_1143@71:0>@141:2>:int) = (0 <= <<fold_right_1143@71:0>@141:2>)
        P[<<fold_right_1143@71:2>@79:0>](<fold_right_1143@71:1>:int,<<fold_right_1143@71:2>@79:0>:int) =
        ((<<fold_right_1143@71:2>@79:0> = 0) && (<fold_right_1143@71:1> >= 1))
        P[<<<fold_right_1143@71:0>@141:0>@199:0>](<<<fold_right_1143@71:0>@141:0>@199:0>:int) =
        (0 <= <<<fold_right_1143@71:0>@141:0>@199:0>)
        P[<<<fold_right_1143@71:0>@141:1>@147:0>](<<<fold_right_1143@71:0>@141:1>@147:0>:int) =
        (0 <= <<<fold_right_1143@71:0>@141:1>@147:0>)
        P[<<<make_list_1030@51:1>@67:1>@83:0>](<make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int) =
        ((<<<make_list_1030@51:1>@67:1>@83:0> = 0) && (<<make_list_1030@51:1>@67:0> >= 1))
        P[<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>](<fold_right_1143@71:1>:int,<<fold_right_1143@71:2>@79:0>:int,<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>:int) =
        ((<<fold_right_1143@71:2>@79:0> = 0) &&
         ((0 <= <<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>) && (<fold_right_1143@71:1> >= 1)))
        P[<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>](<make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int,<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>:int) =
        ((<<<make_list_1030@51:1>@67:1>@83:0> = 0) &&
         ((0 <= <<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>) && (<<make_list_1030@51:1>@67:0> >= 1)))
        P[<<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:1>@243:0>](
        <make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int,<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>:int,<<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:1>@243:0>:int) =
        ((<<<make_list_1030@51:1>@67:1>@83:0> = 0) &&
         ((<make_list_1030@51:0> > 0) &&
          ((<<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:1>@243:0> =
            (<make_list_1030@51:0> + <<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>)) &&
           ((0 <= <<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>) && (<<make_list_1030@51:1>@67:0> >= 1)))))
        P[<<<<<fold_right_1143@71:2>@79:1>@102:0>@213:1>@247:0>](<fold_right_1143@71:1>:int,<<fold_right_1143@71:2>@79:0>:int,<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>:int,<<<<<fold_right_1143@71:2>@79:1>@102:0>@213:1>@247:0>:int) =
        ((<<fold_right_1143@71:2>@79:0> = 0) &&
         ((<fold_right_1143@71:1> >= 1) &&
          ((0 <= <<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>) &&
           (<<<<<fold_right_1143@71:2>@79:1>@102:0>@213:1>@247:0> > <<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>))))
      upper bounds:
        P[<<<<<fold_right_1143@71:2>@79:1>@102:0>@213:1>@247:0>](var452:int,var453:int,var454:int,var455:int) =
        ((var453 <> 0) || ((1 > var452) || (1 <= var455)))
      begin GenHcSolver.classify_pids(227014)[4]
        output:
          [<<<<<fold_right_1143@71:2>@79:1>@102:0>@213:1>@247:0>]
      end GenHcSolver.classify_pids(227014)[4] (0.000000 sec.)
      lb:((<<fold_right_1143@71:2>@79:0> = 0) &&
          ((<fold_right_1143@71:1> >= 1) &&
           ((0 <= <<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>) &&
            (<<<<<fold_right_1143@71:2>@79:1>@102:0>@213:1>@247:0> > <<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>))))
      nub:(not
             ((<<fold_right_1143@71:2>@79:0> <> 0) ||
              ((1 > <fold_right_1143@71:1>) || (1 <= <<<<<fold_right_1143@71:2>@79:1>@102:0>@213:1>@247:0>))))
      begin ApronInterface.convex_hull_interpolate(227017)[4]
        lb:((<<fold_right_1143@71:2>@79:0> = 0) &&
            ((<fold_right_1143@71:1> >= 1) &&
             ((0 <= <<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>) &&
              (<<<<<fold_right_1143@71:2>@79:1>@102:0>@213:1>@247:0> > <<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>))))
        nub:(not
               ((<<fold_right_1143@71:2>@79:0> <> 0) ||
                ((1 > <fold_right_1143@71:1>) || (1 <= <<<<<fold_right_1143@71:2>@79:1>@102:0>@213:1>@247:0>))))
        lb':((<<fold_right_1143@71:2>@79:0> = 0) &&
             ((<fold_right_1143@71:1> >= 1) &&
              ((0 <= <<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>) &&
               (<<<<<fold_right_1143@71:2>@79:1>@102:0>@213:1>@247:0> > <<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>))))
        nub':(not
                ((<<fold_right_1143@71:2>@79:0> <> 0) ||
                 ((1 > <fold_right_1143@71:1>) || (1 <= <<<<<fold_right_1143@71:2>@79:1>@102:0>@213:1>@247:0>))))
        begin InterpProver.interpolate(227018)[5]
          begin InterpProver.interpolate_fresh(227019)[6]
            begin InterpProver.interpolate_log(227020)[7]
              input1: ((<<fold_right_1143@71:2>@79:0> = 0) &&
                       ((<fold_right_1143@71:1> >= 1) &&
                        ((0 <= <<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>) &&
                         (<<<<<fold_right_1143@71:2>@79:1>@102:0>@213:1>@247:0> >
                          <<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>))))
              input2: (not
                         ((<<fold_right_1143@71:2>@79:0> <> 0) ||
                          ((1 > <fold_right_1143@71:1>) || (1 <= <<<<<fold_right_1143@71:2>@79:1>@102:0>@213:1>@247:0>))))
              begin InterpProver.interpolate_check(227021)[8]
                begin InterpProver.interpolate_simplify(227022)[9]
                  begin InterpProver.interpolate_quick(227179)[10]
                    begin CsisatInterface.interpolate_csisat_wrap(227188)[11]
                      begin CsisatInterface.interpolate_csisat_post_process(227189)[12]
                        begin CsisatInterface.interpolate_csisat_log(227190)[13]
                          input1: (0 = v_sep_fold_right_1143_sep_71_sep_2_sep_79_sep_0 & 0 <= v_sep_fold_right_1143_sep_71_sep_2_sep_79_sep_1_sep_102_sep_0_sep_213_sep_0 & 1 <= v_sep_fold_right_1143_sep_71_sep_1 & (1 + v_sep_fold_right_1143_sep_71_sep_2_sep_79_sep_1_sep_102_sep_0_sep_213_sep_0) <= v_sep_fold_right_1143_sep_71_sep_2_sep_79_sep_1_sep_102_sep_0_sep_213_sep_1_sep_247_sep_0)
                          input2: (0 = v_sep_fold_right_1143_sep_71_sep_2_sep_79_sep_0 & 1 <= v_sep_fold_right_1143_sep_71_sep_1 & (1 + v_sep_fold_right_1143_sep_71_sep_2_sep_79_sep_1_sep_102_sep_0_sep_213_sep_1_sep_247_sep_0) <= 1)
                          begin CsisatInterface.interpolate_csisat_raw(227191)[14]
                            
                          end CsisatInterface.interpolate_csisat_raw(227191)[14] (0.000000 sec.)
                          output: -2*v_sep_fold_right_1143_sep_71_sep_2_sep_79_sep_1_sep_102_sep_0_sep_213_sep_1_sep_247_sep_0 <= -2
                          
                        end CsisatInterface.interpolate_csisat_log(227190)[13] (0.000000 sec.)
                        after simplification: -2*v_sep_fold_right_1143_sep_71_sep_2_sep_79_sep_1_sep_102_sep_0_sep_213_sep_1_sep_247_sep_0 <= -2
                        after dnf conversion: ((-2*v_sep_fold_right_1143_sep_71_sep_2_sep_79_sep_1_sep_102_sep_0_sep_213_sep_1_sep_247_sep_0 <= -2))
                        
                      end CsisatInterface.interpolate_csisat_post_process(227189)[12] (0.000000 sec.)
                      
                    end CsisatInterface.interpolate_csisat_wrap(227188)[11] (0.000000 sec.)
                    
                  end InterpProver.interpolate_quick(227179)[10] (0.000000 sec.)
                  
                end InterpProver.interpolate_simplify(227022)[9] (0.000999 sec.)
                
              end InterpProver.interpolate_check(227021)[8] (0.001999 sec.)
              output: (1 <= <<<<<fold_right_1143@71:2>@79:1>@102:0>@213:1>@247:0>)
            end InterpProver.interpolate_log(227020)[7] (0.001999 sec.)
            
          end InterpProver.interpolate_fresh(227019)[6] (0.001999 sec.)
          
        end InterpProver.interpolate(227018)[5] (0.001999 sec.)
        output:
          P[<<<<<fold_right_1143@71:2>@79:1>@102:0>@213:1>@247:0>](<fold_right_1143@71:1>:int,<<fold_right_1143@71:2>@79:0>:int,<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>:int,<<<<<fold_right_1143@71:2>@79:1>@102:0>@213:1>@247:0>:int) =
          (1 <= <<<<<fold_right_1143@71:2>@79:1>@102:0>@213:1>@247:0>)
      end ApronInterface.convex_hull_interpolate(227017)[4] (0.001999 sec.)
      Horn clauses:
        P[<<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:1>@243:0>](
        <f_main_2163@123:0>:int,<fold_right_1143@71:1>:int,<<fold_right_1143@71:2>@79:0>:int,<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>:int,<<<<<fold_right_1143@71:2>@79:1>@102:0>@213:1>@247:0>:int),
        (1 > <<<<<fold_right_1143@71:2>@79:1>@102:0>@213:1>@247:0>) |- bot
        
        P[<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>](<make_list_1030@51:0>:int,(
                                                              1 + var326):int,0:int,<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>:int),
        P[<<<make_list_1030@51:1>@67:1>@83:0>](<make_list_1030@51:0>:int,(
                                               1 + var326):int,0:int),
        P[<<<make_list_1030@51:1>@67:1>@83:0>](<make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int),
        ((<<<make_list_1030@51:1>@67:1>@83:0> = 0) &&
         ((<make_list_1030@51:0> > 0) &&
          (<<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:1>@243:0> =
           (<make_list_1030@51:0> + <<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>))))
        |- P[<<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:1>@243:0>](
        <make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int,
        <<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>:int,<<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:1>@243:0>:int)
        
        P[<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>](<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int,<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>:int),
        P[<<fold_right_1143@71:2>@79:0>](<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int),
        P[<<<make_list_1030@51:1>@67:1>@83:0>](<make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int)|- P[<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>](
        <make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int,
        <<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>:int)
        
        P[<<<fold_right_1143@71:0>@141:0>@199:0>](<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>:int),
        P[<<fold_right_1143@71:2>@79:0>](<fold_right_1143@71:1>:int,<<fold_right_1143@71:2>@79:0>:int),
        ((<<fold_right_1143@71:2>@79:0> = 0) && (<fold_right_1143@71:1> >= 1))
        |- P[<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>](<fold_right_1143@71:1>:int,
                                                            <<fold_right_1143@71:2>@79:0>:int,
                                                            <<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>:int)
        
        P[<<fold_right_1143@71:0>@141:2>](var329:int),
        P[<<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>](var329:int,<<<fold_right_1143@71:0>@141:0>@199:0>:int)|- P[<<<fold_right_1143@71:0>@141:0>@199:0>](
        <<<fold_right_1143@71:0>@141:0>@199:0>:int)
        
         (0 <= <<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>)
        |- P[<<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>](<<<fold_right_1143@71:0>@141:1>@147:0>:int,
                                                             <<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>:int)
        
        P[<<<fold_right_1143@71:0>@141:1>@147:0>](<<<fold_right_1143@108:4>@111:0>@157:0>:int),
        (0 > <<<fold_right_1143@108:4>@111:0>@157:0>) |- bot
        
        P[<<fold_right_1143@71:0>@141:2>](<<<fold_right_1143@71:0>@141:1>@147:0>:int)|- P[<<<fold_right_1143@71:0>@141:1>@147:0>](
        <<<fold_right_1143@71:0>@141:1>@147:0>:int)
        
         (0 <= <<fold_right_1143@71:0>@141:2>) |- P[<<fold_right_1143@71:0>@141:2>](<<fold_right_1143@71:0>@141:2>:int)
        
        P[<<fold_right_1143@71:2>@79:0>](<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int)|- P[<<<make_list_1030@51:1>@67:1>@83:0>](
        <make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int)
        
         ((<<fold_right_1143@71:2>@79:0> = 0) && (<fold_right_1143@71:1> >= 1))
        |- P[<<fold_right_1143@71:2>@79:0>](<fold_right_1143@71:1>:int,
                                            <<fold_right_1143@71:2>@79:0>:int)
      lower bounds:
        P[<<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>](<<<fold_right_1143@71:0>@141:1>@147:0>:int,<<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>:int) =
        (0 <= <<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>)
        P[<<fold_right_1143@71:0>@141:2>](<<fold_right_1143@71:0>@141:2>:int) = (0 <= <<fold_right_1143@71:0>@141:2>)
        P[<<fold_right_1143@71:2>@79:0>](<fold_right_1143@71:1>:int,<<fold_right_1143@71:2>@79:0>:int) =
        ((<<fold_right_1143@71:2>@79:0> = 0) && (<fold_right_1143@71:1> >= 1))
        P[<<<fold_right_1143@71:0>@141:0>@199:0>](<<<fold_right_1143@71:0>@141:0>@199:0>:int) =
        (0 <= <<<fold_right_1143@71:0>@141:0>@199:0>)
        P[<<<fold_right_1143@71:0>@141:1>@147:0>](<<<fold_right_1143@71:0>@141:1>@147:0>:int) =
        (0 <= <<<fold_right_1143@71:0>@141:1>@147:0>)
        P[<<<make_list_1030@51:1>@67:1>@83:0>](<make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int) =
        ((<<<make_list_1030@51:1>@67:1>@83:0> = 0) && (<<make_list_1030@51:1>@67:0> >= 1))
        P[<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>](<fold_right_1143@71:1>:int,<<fold_right_1143@71:2>@79:0>:int,<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>:int) =
        ((<<fold_right_1143@71:2>@79:0> = 0) &&
         ((0 <= <<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>) && (<fold_right_1143@71:1> >= 1)))
        P[<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>](<make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int,<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>:int) =
        ((<<<make_list_1030@51:1>@67:1>@83:0> = 0) &&
         ((0 <= <<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>) && (<<make_list_1030@51:1>@67:0> >= 1)))
        P[<<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:1>@243:0>](
        <make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int,<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>:int,<<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:1>@243:0>:int) =
        ((<<<make_list_1030@51:1>@67:1>@83:0> = 0) &&
         ((<make_list_1030@51:0> > 0) &&
          ((<<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:1>@243:0> =
            (<make_list_1030@51:0> + <<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>)) &&
           ((0 <= <<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>) && (<<make_list_1030@51:1>@67:0> >= 1)))))
      upper bounds:
        P[<<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:1>@243:0>](
        var456:int,var457:int,var458:int,var459:int,var460:int) = (1 <= var460)
      begin GenHcSolver.classify_pids(232739)[4]
        output:
          [<<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:1>@243:0>]
      end GenHcSolver.classify_pids(232739)[4] (0.000000 sec.)
      lb:((<<<make_list_1030@51:1>@67:1>@83:0> = 0) &&
          ((<make_list_1030@51:0> > 0) &&
           ((<<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:1>@243:0> =
             (<make_list_1030@51:0> + <<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>)) &&
            ((0 <= <<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>) && (<<make_list_1030@51:1>@67:0> >= 1)))))
      nub:(not (1 <= <<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:1>@243:0>))
      begin ApronInterface.convex_hull_interpolate(232742)[4]
        lb:((<<<make_list_1030@51:1>@67:1>@83:0> = 0) &&
            ((<make_list_1030@51:0> > 0) &&
             ((<<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:1>@243:0> =
               (<make_list_1030@51:0> + <<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>)) &&
              ((0 <= <<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>) && (<<make_list_1030@51:1>@67:0> >= 1)))))
        nub:(not (1 <= <<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:1>@243:0>))
        lb':((<<<make_list_1030@51:1>@67:1>@83:0> = 0) &&
             ((<make_list_1030@51:0> > 0) &&
              ((<<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:1>@243:0> =
                (<make_list_1030@51:0> + <<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>)) &&
               ((0 <= <<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>) && (<<make_list_1030@51:1>@67:0> >= 1)))))
        nub':(not (1 <= <<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:1>@243:0>))
        begin InterpProver.interpolate(232743)[5]
          begin InterpProver.interpolate_fresh(232744)[6]
            begin InterpProver.interpolate_log(232745)[7]
              input1: ((<<<make_list_1030@51:1>@67:1>@83:0> = 0) &&
                       ((<make_list_1030@51:0> > 0) &&
                        ((<<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:1>@243:0> =
                          (<make_list_1030@51:0> + <<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>)) &&
                         ((0 <= <<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>) &&
                          (<<make_list_1030@51:1>@67:0> >= 1)))))
              input2: (not (1 <= <<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:1>@243:0>))
              begin InterpProver.interpolate_check(232746)[8]
                begin InterpProver.interpolate_simplify(232747)[9]
                  begin InterpProver.interpolate_quick(232970)[10]
                    begin CsisatInterface.interpolate_csisat_wrap(232979)[11]
                      begin CsisatInterface.interpolate_csisat_post_process(232980)[12]
                        begin CsisatInterface.interpolate_csisat_log(232981)[13]
                          input1: (0 <= v_sep_make_list_1030_sep_51_sep_1_sep_67_sep_1_sep_83_sep_1_sep_98_sep_0_sep_217_sep_0 & 1 <= v_sep_make_list_1030_sep_51_sep_1_sep_67_sep_0 & (1 + v_sep_make_list_1030_sep_51_sep_1_sep_67_sep_1_sep_83_sep_1_sep_98_sep_0_sep_217_sep_0) <= v_sep_make_list_1030_sep_51_sep_1_sep_67_sep_1_sep_83_sep_1_sep_98_sep_0_sep_217_sep_1_sep_243_sep_0)
                          input2: (1 + v_sep_make_list_1030_sep_51_sep_1_sep_67_sep_1_sep_83_sep_1_sep_98_sep_0_sep_217_sep_1_sep_243_sep_0) <= 1
                          begin CsisatInterface.interpolate_csisat_raw(232982)[14]
                            
                          end CsisatInterface.interpolate_csisat_raw(232982)[14] (0.000000 sec.)
                          output: -2*v_sep_make_list_1030_sep_51_sep_1_sep_67_sep_1_sep_83_sep_1_sep_98_sep_0_sep_217_sep_1_sep_243_sep_0 <= -2
                          
                        end CsisatInterface.interpolate_csisat_log(232981)[13] (0.000000 sec.)
                        after simplification: -2*v_sep_make_list_1030_sep_51_sep_1_sep_67_sep_1_sep_83_sep_1_sep_98_sep_0_sep_217_sep_1_sep_243_sep_0 <= -2
                        after dnf conversion: ((-2*v_sep_make_list_1030_sep_51_sep_1_sep_67_sep_1_sep_83_sep_1_sep_98_sep_0_sep_217_sep_1_sep_243_sep_0 <= -2))
                        
                      end CsisatInterface.interpolate_csisat_post_process(232980)[12] (0.000000 sec.)
                      
                    end CsisatInterface.interpolate_csisat_wrap(232979)[11] (0.000000 sec.)
                    
                  end InterpProver.interpolate_quick(232970)[10] (0.001000 sec.)
                  
                end InterpProver.interpolate_simplify(232747)[9] (0.002000 sec.)
                
              end InterpProver.interpolate_check(232746)[8] (0.003000 sec.)
              output: (1 <= <<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:1>@243:0>)
            end InterpProver.interpolate_log(232745)[7] (0.003000 sec.)
            
          end InterpProver.interpolate_fresh(232744)[6] (0.003000 sec.)
          
        end InterpProver.interpolate(232743)[5] (0.003000 sec.)
        output:
          P[<<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:1>@243:0>](
          <make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int,<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>:int,<<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:1>@243:0>:int) =
          (1 <= <<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:1>@243:0>)
      end ApronInterface.convex_hull_interpolate(232742)[4] (0.003000 sec.)
      Horn clauses:
        P[<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>](<make_list_1030@51:0>:int,(
                                                              1 + var326):int,0:int,<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>:int),
        P[<<<make_list_1030@51:1>@67:1>@83:0>](<make_list_1030@51:0>:int,(
                                               1 + var326):int,0:int),
        ((1 > (<make_list_1030@51:0> + <<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>)) &&
         (<make_list_1030@51:0> > 0)) |- bot
        
        P[<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>](<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int,<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>:int),
        P[<<fold_right_1143@71:2>@79:0>](<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int),
        P[<<<make_list_1030@51:1>@67:1>@83:0>](<make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int)|- P[<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>](
        <make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int,
        <<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>:int)
        
        P[<<<fold_right_1143@71:0>@141:0>@199:0>](<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>:int),
        P[<<fold_right_1143@71:2>@79:0>](<fold_right_1143@71:1>:int,<<fold_right_1143@71:2>@79:0>:int),
        ((<<fold_right_1143@71:2>@79:0> = 0) && (<fold_right_1143@71:1> >= 1))
        |- P[<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>](<fold_right_1143@71:1>:int,
                                                            <<fold_right_1143@71:2>@79:0>:int,
                                                            <<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>:int)
        
        P[<<fold_right_1143@71:0>@141:2>](var329:int),
        P[<<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>](var329:int,<<<fold_right_1143@71:0>@141:0>@199:0>:int)|- P[<<<fold_right_1143@71:0>@141:0>@199:0>](
        <<<fold_right_1143@71:0>@141:0>@199:0>:int)
        
         (0 <= <<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>)
        |- P[<<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>](<<<fold_right_1143@71:0>@141:1>@147:0>:int,
                                                             <<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>:int)
        
        P[<<<fold_right_1143@71:0>@141:1>@147:0>](<<<fold_right_1143@108:4>@111:0>@157:0>:int),
        (0 > <<<fold_right_1143@108:4>@111:0>@157:0>) |- bot
        
        P[<<fold_right_1143@71:0>@141:2>](<<<fold_right_1143@71:0>@141:1>@147:0>:int)|- P[<<<fold_right_1143@71:0>@141:1>@147:0>](
        <<<fold_right_1143@71:0>@141:1>@147:0>:int)
        
         (0 <= <<fold_right_1143@71:0>@141:2>) |- P[<<fold_right_1143@71:0>@141:2>](<<fold_right_1143@71:0>@141:2>:int)
        
        P[<<fold_right_1143@71:2>@79:0>](<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int)|- P[<<<make_list_1030@51:1>@67:1>@83:0>](
        <make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int)
        
         ((<<fold_right_1143@71:2>@79:0> = 0) && (<fold_right_1143@71:1> >= 1))
        |- P[<<fold_right_1143@71:2>@79:0>](<fold_right_1143@71:1>:int,
                                            <<fold_right_1143@71:2>@79:0>:int)
      lower bounds:
        P[<<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>](<<<fold_right_1143@71:0>@141:1>@147:0>:int,<<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>:int) =
        (0 <= <<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>)
        P[<<fold_right_1143@71:0>@141:2>](<<fold_right_1143@71:0>@141:2>:int) = (0 <= <<fold_right_1143@71:0>@141:2>)
        P[<<fold_right_1143@71:2>@79:0>](<fold_right_1143@71:1>:int,<<fold_right_1143@71:2>@79:0>:int) =
        ((<<fold_right_1143@71:2>@79:0> = 0) && (<fold_right_1143@71:1> >= 1))
        P[<<<fold_right_1143@71:0>@141:0>@199:0>](<<<fold_right_1143@71:0>@141:0>@199:0>:int) =
        (0 <= <<<fold_right_1143@71:0>@141:0>@199:0>)
        P[<<<fold_right_1143@71:0>@141:1>@147:0>](<<<fold_right_1143@71:0>@141:1>@147:0>:int) =
        (0 <= <<<fold_right_1143@71:0>@141:1>@147:0>)
        P[<<<make_list_1030@51:1>@67:1>@83:0>](<make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int) =
        ((<<<make_list_1030@51:1>@67:1>@83:0> = 0) && (<<make_list_1030@51:1>@67:0> >= 1))
        P[<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>](<fold_right_1143@71:1>:int,<<fold_right_1143@71:2>@79:0>:int,<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>:int) =
        ((<<fold_right_1143@71:2>@79:0> = 0) &&
         ((0 <= <<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>) && (<fold_right_1143@71:1> >= 1)))
        P[<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>](<make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int,<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>:int) =
        ((<<<make_list_1030@51:1>@67:1>@83:0> = 0) &&
         ((0 <= <<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>) && (<<make_list_1030@51:1>@67:0> >= 1)))
      upper bounds:
        P[<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>](var461:int,var462:int,var463:int,var464:int) =
        ((var463 <> 0) || ((var462 < 1) || ((var461 <= 0) || (1 <= (var461 + var464)))))
      begin GenHcSolver.classify_pids(237169)[4]
        output:
          [<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>]
      end GenHcSolver.classify_pids(237169)[4] (0.000000 sec.)
      lb:((<<<make_list_1030@51:1>@67:1>@83:0> = 0) &&
          ((0 <= <<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>) && (<<make_list_1030@51:1>@67:0> >= 1)))
      nub:(not
             ((<<<make_list_1030@51:1>@67:1>@83:0> <> 0) ||
              ((<<make_list_1030@51:1>@67:0> < 1) ||
               ((<make_list_1030@51:0> <= 0) ||
                (1 <= (<make_list_1030@51:0> + <<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>))))))
      begin ApronInterface.convex_hull_interpolate(237172)[4]
        lb:((<<<make_list_1030@51:1>@67:1>@83:0> = 0) &&
            ((0 <= <<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>) && (<<make_list_1030@51:1>@67:0> >= 1)))
        nub:(not
               ((<<<make_list_1030@51:1>@67:1>@83:0> <> 0) ||
                ((<<make_list_1030@51:1>@67:0> < 1) ||
                 ((<make_list_1030@51:0> <= 0) ||
                  (1 <= (<make_list_1030@51:0> + <<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>))))))
        lb':((<<<make_list_1030@51:1>@67:1>@83:0> = 0) &&
             ((0 <= <<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>) && (<<make_list_1030@51:1>@67:0> >= 1)))
        nub':(not
                ((<<<make_list_1030@51:1>@67:1>@83:0> <> 0) ||
                 ((<<make_list_1030@51:1>@67:0> < 1) ||
                  ((<make_list_1030@51:0> <= 0) ||
                   (1 <= (<make_list_1030@51:0> + <<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>))))))
        begin InterpProver.interpolate(237173)[5]
          begin InterpProver.interpolate_fresh(237174)[6]
            begin InterpProver.interpolate_log(237175)[7]
              input1: ((<<<make_list_1030@51:1>@67:1>@83:0> = 0) &&
                       ((0 <= <<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>) &&
                        (<<make_list_1030@51:1>@67:0> >= 1)))
              input2: (not
                         ((<<<make_list_1030@51:1>@67:1>@83:0> <> 0) ||
                          ((<<make_list_1030@51:1>@67:0> < 1) ||
                           ((<make_list_1030@51:0> <= 0) ||
                            (1 <= (<make_list_1030@51:0> + <<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>))))))
              begin InterpProver.interpolate_check(237176)[8]
                begin InterpProver.interpolate_simplify(237177)[9]
                  begin InterpProver.interpolate_quick(237338)[10]
                    begin CsisatInterface.interpolate_csisat_wrap(237347)[11]
                      begin CsisatInterface.interpolate_csisat_post_process(237348)[12]
                        begin CsisatInterface.interpolate_csisat_log(237349)[13]
                          input1: (0 = v_sep_make_list_1030_sep_51_sep_1_sep_67_sep_1_sep_83_sep_0 & 0 <= v_sep_make_list_1030_sep_51_sep_1_sep_67_sep_1_sep_83_sep_1_sep_98_sep_0_sep_217_sep_0 & 1 <= v_sep_make_list_1030_sep_51_sep_1_sep_67_sep_0)
                          input2: (0 = v_sep_make_list_1030_sep_51_sep_1_sep_67_sep_1_sep_83_sep_0 & 1 <= v_sep_make_list_1030_sep_51_sep_0 & 1 <= v_sep_make_list_1030_sep_51_sep_1_sep_67_sep_0 & (1 + v_sep_make_list_1030_sep_51_sep_0 + v_sep_make_list_1030_sep_51_sep_1_sep_67_sep_1_sep_83_sep_1_sep_98_sep_0_sep_217_sep_0) <= 1)
                          begin CsisatInterface.interpolate_csisat_raw(237350)[14]
                            
                          end CsisatInterface.interpolate_csisat_raw(237350)[14] (0.000000 sec.)
                          output: -2*v_sep_make_list_1030_sep_51_sep_1_sep_67_sep_1_sep_83_sep_1_sep_98_sep_0_sep_217_sep_0 <= 0
                          
                        end CsisatInterface.interpolate_csisat_log(237349)[13] (0.000000 sec.)
                        after simplification: -2*v_sep_make_list_1030_sep_51_sep_1_sep_67_sep_1_sep_83_sep_1_sep_98_sep_0_sep_217_sep_0 <= 0
                        after dnf conversion: ((-2*v_sep_make_list_1030_sep_51_sep_1_sep_67_sep_1_sep_83_sep_1_sep_98_sep_0_sep_217_sep_0 <= 0))
                        
                      end CsisatInterface.interpolate_csisat_post_process(237348)[12] (0.000000 sec.)
                      
                    end CsisatInterface.interpolate_csisat_wrap(237347)[11] (0.000000 sec.)
                    
                  end InterpProver.interpolate_quick(237338)[10] (0.000000 sec.)
                  
                end InterpProver.interpolate_simplify(237177)[9] (0.001000 sec.)
                
              end InterpProver.interpolate_check(237176)[8] (0.002000 sec.)
              output: (0 <= <<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>)
            end InterpProver.interpolate_log(237175)[7] (0.003000 sec.)
            
          end InterpProver.interpolate_fresh(237174)[6] (0.003000 sec.)
          
        end InterpProver.interpolate(237173)[5] (0.003000 sec.)
        output:
          P[<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>](<make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int,<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>:int) =
          (0 <= <<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>)
      end ApronInterface.convex_hull_interpolate(237172)[4] (0.003000 sec.)
      Horn clauses:
        P[<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>](<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int,<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>:int),
        P[<<fold_right_1143@71:2>@79:0>](<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int),
        P[<<<make_list_1030@51:1>@67:1>@83:0>](<make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int),
        (0 > <<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>) |- bot
        
        P[<<<fold_right_1143@71:0>@141:0>@199:0>](<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>:int),
        P[<<fold_right_1143@71:2>@79:0>](<fold_right_1143@71:1>:int,<<fold_right_1143@71:2>@79:0>:int),
        ((<<fold_right_1143@71:2>@79:0> = 0) && (<fold_right_1143@71:1> >= 1))
        |- P[<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>](<fold_right_1143@71:1>:int,
                                                            <<fold_right_1143@71:2>@79:0>:int,
                                                            <<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>:int)
        
        P[<<fold_right_1143@71:0>@141:2>](var329:int),
        P[<<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>](var329:int,<<<fold_right_1143@71:0>@141:0>@199:0>:int)|- P[<<<fold_right_1143@71:0>@141:0>@199:0>](
        <<<fold_right_1143@71:0>@141:0>@199:0>:int)
        
         (0 <= <<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>)
        |- P[<<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>](<<<fold_right_1143@71:0>@141:1>@147:0>:int,
                                                             <<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>:int)
        
        P[<<<fold_right_1143@71:0>@141:1>@147:0>](<<<fold_right_1143@108:4>@111:0>@157:0>:int),
        (0 > <<<fold_right_1143@108:4>@111:0>@157:0>) |- bot
        
        P[<<fold_right_1143@71:0>@141:2>](<<<fold_right_1143@71:0>@141:1>@147:0>:int)|- P[<<<fold_right_1143@71:0>@141:1>@147:0>](
        <<<fold_right_1143@71:0>@141:1>@147:0>:int)
        
         (0 <= <<fold_right_1143@71:0>@141:2>) |- P[<<fold_right_1143@71:0>@141:2>](<<fold_right_1143@71:0>@141:2>:int)
        
        P[<<fold_right_1143@71:2>@79:0>](<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int)|- P[<<<make_list_1030@51:1>@67:1>@83:0>](
        <make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int)
        
         ((<<fold_right_1143@71:2>@79:0> = 0) && (<fold_right_1143@71:1> >= 1))
        |- P[<<fold_right_1143@71:2>@79:0>](<fold_right_1143@71:1>:int,
                                            <<fold_right_1143@71:2>@79:0>:int)
      lower bounds:
        P[<<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>](<<<fold_right_1143@71:0>@141:1>@147:0>:int,<<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>:int) =
        (0 <= <<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>)
        P[<<fold_right_1143@71:0>@141:2>](<<fold_right_1143@71:0>@141:2>:int) = (0 <= <<fold_right_1143@71:0>@141:2>)
        P[<<fold_right_1143@71:2>@79:0>](<fold_right_1143@71:1>:int,<<fold_right_1143@71:2>@79:0>:int) =
        ((<<fold_right_1143@71:2>@79:0> = 0) && (<fold_right_1143@71:1> >= 1))
        P[<<<fold_right_1143@71:0>@141:0>@199:0>](<<<fold_right_1143@71:0>@141:0>@199:0>:int) =
        (0 <= <<<fold_right_1143@71:0>@141:0>@199:0>)
        P[<<<fold_right_1143@71:0>@141:1>@147:0>](<<<fold_right_1143@71:0>@141:1>@147:0>:int) =
        (0 <= <<<fold_right_1143@71:0>@141:1>@147:0>)
        P[<<<make_list_1030@51:1>@67:1>@83:0>](<make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int) =
        ((<<<make_list_1030@51:1>@67:1>@83:0> = 0) && (<<make_list_1030@51:1>@67:0> >= 1))
        P[<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>](<fold_right_1143@71:1>:int,<<fold_right_1143@71:2>@79:0>:int,<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>:int) =
        ((<<fold_right_1143@71:2>@79:0> = 0) &&
         ((0 <= <<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>) && (<fold_right_1143@71:1> >= 1)))
      upper bounds:
        P[<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>](var465:int,var466:int,var467:int) =
        ((var466 <> 0) || ((var465 < 1) || (0 <= var467)))
      begin GenHcSolver.classify_pids(240239)[4]
        output:
          [<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>]
      end GenHcSolver.classify_pids(240239)[4] (0.000000 sec.)
      lb:((<<fold_right_1143@71:2>@79:0> = 0) &&
          ((0 <= <<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>) && (<fold_right_1143@71:1> >= 1)))
      nub:(not
             ((<<fold_right_1143@71:2>@79:0> <> 0) ||
              ((<fold_right_1143@71:1> < 1) || (0 <= <<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>))))
      begin ApronInterface.convex_hull_interpolate(240242)[4]
        lb:((<<fold_right_1143@71:2>@79:0> = 0) &&
            ((0 <= <<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>) && (<fold_right_1143@71:1> >= 1)))
        nub:(not
               ((<<fold_right_1143@71:2>@79:0> <> 0) ||
                ((<fold_right_1143@71:1> < 1) || (0 <= <<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>))))
        lb':((<<fold_right_1143@71:2>@79:0> = 0) &&
             ((0 <= <<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>) && (<fold_right_1143@71:1> >= 1)))
        nub':(not
                ((<<fold_right_1143@71:2>@79:0> <> 0) ||
                 ((<fold_right_1143@71:1> < 1) || (0 <= <<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>))))
        begin InterpProver.interpolate(240243)[5]
          begin InterpProver.interpolate_fresh(240244)[6]
            begin InterpProver.interpolate_log(240245)[7]
              input1: ((<<fold_right_1143@71:2>@79:0> = 0) &&
                       ((0 <= <<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>) && (<fold_right_1143@71:1> >= 1)))
              input2: (not
                         ((<<fold_right_1143@71:2>@79:0> <> 0) ||
                          ((<fold_right_1143@71:1> < 1) || (0 <= <<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>))))
              begin InterpProver.interpolate_check(240246)[8]
                begin InterpProver.interpolate_simplify(240247)[9]
                  begin InterpProver.interpolate_quick(240352)[10]
                    begin CsisatInterface.interpolate_csisat_wrap(240361)[11]
                      begin CsisatInterface.interpolate_csisat_post_process(240362)[12]
                        begin CsisatInterface.interpolate_csisat_log(240363)[13]
                          input1: (0 = v_sep_fold_right_1143_sep_71_sep_2_sep_79_sep_0 & 0 <= v_sep_fold_right_1143_sep_71_sep_2_sep_79_sep_1_sep_102_sep_0_sep_213_sep_0 & 1 <= v_sep_fold_right_1143_sep_71_sep_1)
                          input2: (0 = v_sep_fold_right_1143_sep_71_sep_2_sep_79_sep_0 & 1 <= v_sep_fold_right_1143_sep_71_sep_1 & (1 + v_sep_fold_right_1143_sep_71_sep_2_sep_79_sep_1_sep_102_sep_0_sep_213_sep_0) <= 0)
                          begin CsisatInterface.interpolate_csisat_raw(240364)[14]
                            
                          end CsisatInterface.interpolate_csisat_raw(240364)[14] (0.000000 sec.)
                          output: -2*v_sep_fold_right_1143_sep_71_sep_2_sep_79_sep_1_sep_102_sep_0_sep_213_sep_0 <= 0
                          
                        end CsisatInterface.interpolate_csisat_log(240363)[13] (0.000000 sec.)
                        after simplification: -2*v_sep_fold_right_1143_sep_71_sep_2_sep_79_sep_1_sep_102_sep_0_sep_213_sep_0 <= 0
                        after dnf conversion: ((-2*v_sep_fold_right_1143_sep_71_sep_2_sep_79_sep_1_sep_102_sep_0_sep_213_sep_0 <= 0))
                        
                      end CsisatInterface.interpolate_csisat_post_process(240362)[12] (0.000000 sec.)
                      
                    end CsisatInterface.interpolate_csisat_wrap(240361)[11] (0.000000 sec.)
                    
                  end InterpProver.interpolate_quick(240352)[10] (0.000000 sec.)
                  
                end InterpProver.interpolate_simplify(240247)[9] (0.001000 sec.)
                
              end InterpProver.interpolate_check(240246)[8] (0.001000 sec.)
              output: (0 <= <<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>)
            end InterpProver.interpolate_log(240245)[7] (0.001000 sec.)
            
          end InterpProver.interpolate_fresh(240244)[6] (0.001000 sec.)
          
        end InterpProver.interpolate(240243)[5] (0.001000 sec.)
        output:
          P[<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>](<fold_right_1143@71:1>:int,<<fold_right_1143@71:2>@79:0>:int,<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>:int) =
          (0 <= <<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>)
      end ApronInterface.convex_hull_interpolate(240242)[4] (0.001000 sec.)
      Horn clauses:
        P[<<<fold_right_1143@71:0>@141:0>@199:0>](<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>:int),
        P[<<fold_right_1143@71:2>@79:0>](<fold_right_1143@71:1>:int,0:int),
        ((0 > <<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>) && (<fold_right_1143@71:1> >= 1)) |- bot
        
        P[<<fold_right_1143@71:0>@141:2>](var329:int),
        P[<<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>](var329:int,<<<fold_right_1143@71:0>@141:0>@199:0>:int)|- P[<<<fold_right_1143@71:0>@141:0>@199:0>](
        <<<fold_right_1143@71:0>@141:0>@199:0>:int)
        
         (0 <= <<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>)
        |- P[<<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>](<<<fold_right_1143@71:0>@141:1>@147:0>:int,
                                                             <<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>:int)
        
        P[<<<fold_right_1143@71:0>@141:1>@147:0>](<<<fold_right_1143@108:4>@111:0>@157:0>:int),
        (0 > <<<fold_right_1143@108:4>@111:0>@157:0>) |- bot
        
        P[<<fold_right_1143@71:0>@141:2>](<<<fold_right_1143@71:0>@141:1>@147:0>:int)|- P[<<<fold_right_1143@71:0>@141:1>@147:0>](
        <<<fold_right_1143@71:0>@141:1>@147:0>:int)
        
         (0 <= <<fold_right_1143@71:0>@141:2>) |- P[<<fold_right_1143@71:0>@141:2>](<<fold_right_1143@71:0>@141:2>:int)
        
        P[<<fold_right_1143@71:2>@79:0>](<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int)|- P[<<<make_list_1030@51:1>@67:1>@83:0>](
        <make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int)
        
         ((<<fold_right_1143@71:2>@79:0> = 0) && (<fold_right_1143@71:1> >= 1))
        |- P[<<fold_right_1143@71:2>@79:0>](<fold_right_1143@71:1>:int,
                                            <<fold_right_1143@71:2>@79:0>:int)
      lower bounds:
        P[<<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>](<<<fold_right_1143@71:0>@141:1>@147:0>:int,<<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>:int) =
        (0 <= <<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>)
        P[<<fold_right_1143@71:0>@141:2>](<<fold_right_1143@71:0>@141:2>:int) = (0 <= <<fold_right_1143@71:0>@141:2>)
        P[<<fold_right_1143@71:2>@79:0>](<fold_right_1143@71:1>:int,<<fold_right_1143@71:2>@79:0>:int) =
        ((<<fold_right_1143@71:2>@79:0> = 0) && (<fold_right_1143@71:1> >= 1))
        P[<<<fold_right_1143@71:0>@141:0>@199:0>](<<<fold_right_1143@71:0>@141:0>@199:0>:int) =
        (0 <= <<<fold_right_1143@71:0>@141:0>@199:0>)
        P[<<<fold_right_1143@71:0>@141:1>@147:0>](<<<fold_right_1143@71:0>@141:1>@147:0>:int) =
        (0 <= <<<fold_right_1143@71:0>@141:1>@147:0>)
        P[<<<make_list_1030@51:1>@67:1>@83:0>](<make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int) =
        ((<<<make_list_1030@51:1>@67:1>@83:0> = 0) && (<<make_list_1030@51:1>@67:0> >= 1))
      upper bounds:
        P[<<<make_list_1030@51:1>@67:1>@83:0>](var468:int,var469:int,var470:int) = true
      begin GenHcSolver.classify_pids(242439)[4]
        output:
          [<<<make_list_1030@51:1>@67:1>@83:0>]
      end GenHcSolver.classify_pids(242439)[4] (0.000000 sec.)
      lb:((<<<make_list_1030@51:1>@67:1>@83:0> = 0) && (<<make_list_1030@51:1>@67:0> >= 1))
      nub:false
      begin ApronInterface.convex_hull_interpolate(242442)[4]
        lb:((<<<make_list_1030@51:1>@67:1>@83:0> = 0) && (<<make_list_1030@51:1>@67:0> >= 1))
        nub:false
        lb':((<<<make_list_1030@51:1>@67:1>@83:0> = 0) && (<<make_list_1030@51:1>@67:0> >= 1))
        nub':false
        begin InterpProver.interpolate(242443)[5]
          begin InterpProver.interpolate_fresh(242444)[6]
            begin InterpProver.interpolate_log(242445)[7]
              input1: ((<<<make_list_1030@51:1>@67:1>@83:0> = 0) && (<<make_list_1030@51:1>@67:0> >= 1))
              input2: false
              begin InterpProver.interpolate_check(242446)[8]
                begin InterpProver.interpolate_simplify(242447)[9]
                  begin InterpProver.interpolate_quick(242486)[10]
                    
                  end InterpProver.interpolate_quick(242486)[10] (0.001000 sec.)
                  
                end InterpProver.interpolate_simplify(242447)[9] (0.001000 sec.)
                
              end InterpProver.interpolate_check(242446)[8] (0.001000 sec.)
              output: true
            end InterpProver.interpolate_log(242445)[7] (0.001000 sec.)
            
          end InterpProver.interpolate_fresh(242444)[6] (0.001000 sec.)
          
        end InterpProver.interpolate(242443)[5] (0.001000 sec.)
        output:
          P[<<<make_list_1030@51:1>@67:1>@83:0>](<make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int) =
          true
      end ApronInterface.convex_hull_interpolate(242442)[4] (0.001000 sec.)
      Horn clauses:
        P[<<<fold_right_1143@71:0>@141:0>@199:0>](<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>:int),
        P[<<fold_right_1143@71:2>@79:0>](<fold_right_1143@71:1>:int,0:int),
        ((0 > <<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>) && (<fold_right_1143@71:1> >= 1)) |- bot
        
        P[<<fold_right_1143@71:0>@141:2>](var329:int),
        P[<<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>](var329:int,<<<fold_right_1143@71:0>@141:0>@199:0>:int)|- P[<<<fold_right_1143@71:0>@141:0>@199:0>](
        <<<fold_right_1143@71:0>@141:0>@199:0>:int)
        
         (0 <= <<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>)
        |- P[<<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>](<<<fold_right_1143@71:0>@141:1>@147:0>:int,
                                                             <<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>:int)
        
        P[<<<fold_right_1143@71:0>@141:1>@147:0>](<<<fold_right_1143@108:4>@111:0>@157:0>:int),
        (0 > <<<fold_right_1143@108:4>@111:0>@157:0>) |- bot
        
        P[<<fold_right_1143@71:0>@141:2>](<<<fold_right_1143@71:0>@141:1>@147:0>:int)|- P[<<<fold_right_1143@71:0>@141:1>@147:0>](
        <<<fold_right_1143@71:0>@141:1>@147:0>:int)
        
         (0 <= <<fold_right_1143@71:0>@141:2>) |- P[<<fold_right_1143@71:0>@141:2>](<<fold_right_1143@71:0>@141:2>:int)
        
         ((<<fold_right_1143@71:2>@79:0> = 0) && (<fold_right_1143@71:1> >= 1))
        |- P[<<fold_right_1143@71:2>@79:0>](<fold_right_1143@71:1>:int,
                                            <<fold_right_1143@71:2>@79:0>:int)
      lower bounds:
        P[<<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>](<<<fold_right_1143@71:0>@141:1>@147:0>:int,<<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>:int) =
        (0 <= <<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>)
        P[<<fold_right_1143@71:0>@141:2>](<<fold_right_1143@71:0>@141:2>:int) = (0 <= <<fold_right_1143@71:0>@141:2>)
        P[<<fold_right_1143@71:2>@79:0>](<fold_right_1143@71:1>:int,<<fold_right_1143@71:2>@79:0>:int) =
        ((<<fold_right_1143@71:2>@79:0> = 0) && (<fold_right_1143@71:1> >= 1))
        P[<<<fold_right_1143@71:0>@141:0>@199:0>](<<<fold_right_1143@71:0>@141:0>@199:0>:int) =
        (0 <= <<<fold_right_1143@71:0>@141:0>@199:0>)
        P[<<<fold_right_1143@71:0>@141:1>@147:0>](<<<fold_right_1143@71:0>@141:1>@147:0>:int) =
        (0 <= <<<fold_right_1143@71:0>@141:1>@147:0>)
      upper bounds:
        P[<<<fold_right_1143@71:0>@141:0>@199:0>](var471:int) = (0 <= var471)
      begin GenHcSolver.classify_pids(244173)[4]
        output:
          [<<<fold_right_1143@71:0>@141:0>@199:0>]
      end GenHcSolver.classify_pids(244173)[4] (0.000000 sec.)
      lb:(0 <= <<<fold_right_1143@71:0>@141:0>@199:0>)
      nub:(not (0 <= <<<fold_right_1143@71:0>@141:0>@199:0>))
      begin ApronInterface.convex_hull_interpolate(244176)[4]
        lb:(0 <= <<<fold_right_1143@71:0>@141:0>@199:0>)
        nub:(not (0 <= <<<fold_right_1143@71:0>@141:0>@199:0>))
        lb':(0 <= <<<fold_right_1143@71:0>@141:0>@199:0>)
        nub':(not (0 <= <<<fold_right_1143@71:0>@141:0>@199:0>))
        begin InterpProver.interpolate(244177)[5]
          begin InterpProver.interpolate_fresh(244178)[6]
            begin InterpProver.interpolate_log(244179)[7]
              input1: (0 <= <<<fold_right_1143@71:0>@141:0>@199:0>)
              input2: (not (0 <= <<<fold_right_1143@71:0>@141:0>@199:0>))
              begin InterpProver.interpolate_check(244180)[8]
                begin InterpProver.interpolate_simplify(244181)[9]
                  begin InterpProver.interpolate_quick(244198)[10]
                    begin CsisatInterface.interpolate_csisat_wrap(244207)[11]
                      begin CsisatInterface.interpolate_csisat_post_process(244208)[12]
                        begin CsisatInterface.interpolate_csisat_log(244209)[13]
                          input1: 0 <= v_sep_fold_right_1143_sep_71_sep_0_sep_141_sep_0_sep_199_sep_0
                          input2: (1 + v_sep_fold_right_1143_sep_71_sep_0_sep_141_sep_0_sep_199_sep_0) <= 0
                          begin CsisatInterface.interpolate_csisat_raw(244210)[14]
                            
                          end CsisatInterface.interpolate_csisat_raw(244210)[14] (0.000000 sec.)
                          output: -2*v_sep_fold_right_1143_sep_71_sep_0_sep_141_sep_0_sep_199_sep_0 <= 0
                          
                        end CsisatInterface.interpolate_csisat_log(244209)[13] (0.000000 sec.)
                        after simplification: -2*v_sep_fold_right_1143_sep_71_sep_0_sep_141_sep_0_sep_199_sep_0 <= 0
                        after dnf conversion: ((-2*v_sep_fold_right_1143_sep_71_sep_0_sep_141_sep_0_sep_199_sep_0 <= 0))
                        
                      end CsisatInterface.interpolate_csisat_post_process(244208)[12] (0.000000 sec.)
                      
                    end CsisatInterface.interpolate_csisat_wrap(244207)[11] (0.000000 sec.)
                    
                  end InterpProver.interpolate_quick(244198)[10] (0.001000 sec.)
                  
                end InterpProver.interpolate_simplify(244181)[9] (0.001000 sec.)
                
              end InterpProver.interpolate_check(244180)[8] (0.001000 sec.)
              output: (0 <= <<<fold_right_1143@71:0>@141:0>@199:0>)
            end InterpProver.interpolate_log(244179)[7] (0.001000 sec.)
            
          end InterpProver.interpolate_fresh(244178)[6] (0.001000 sec.)
          
        end InterpProver.interpolate(244177)[5] (0.002000 sec.)
        output:
          P[<<<fold_right_1143@71:0>@141:0>@199:0>](<<<fold_right_1143@71:0>@141:0>@199:0>:int) =
          (0 <= <<<fold_right_1143@71:0>@141:0>@199:0>)
      end ApronInterface.convex_hull_interpolate(244176)[4] (0.002000 sec.)
      Horn clauses:
        P[<<fold_right_1143@71:0>@141:2>](var329:int),
        P[<<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>](var329:int,<<<fold_right_1143@71:0>@141:0>@199:0>:int),
        (0 > <<<fold_right_1143@71:0>@141:0>@199:0>) |- bot
        
         (0 <= <<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>)
        |- P[<<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>](<<<fold_right_1143@71:0>@141:1>@147:0>:int,
                                                             <<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>:int)
        
        P[<<<fold_right_1143@71:0>@141:1>@147:0>](<<<fold_right_1143@108:4>@111:0>@157:0>:int),
        (0 > <<<fold_right_1143@108:4>@111:0>@157:0>) |- bot
        
        P[<<fold_right_1143@71:0>@141:2>](<<<fold_right_1143@71:0>@141:1>@147:0>:int)|- P[<<<fold_right_1143@71:0>@141:1>@147:0>](
        <<<fold_right_1143@71:0>@141:1>@147:0>:int)
        
         (0 <= <<fold_right_1143@71:0>@141:2>) |- P[<<fold_right_1143@71:0>@141:2>](<<fold_right_1143@71:0>@141:2>:int)
        
         ((<<fold_right_1143@71:2>@79:0> = 0) && (<fold_right_1143@71:1> >= 1))
        |- P[<<fold_right_1143@71:2>@79:0>](<fold_right_1143@71:1>:int,
                                            <<fold_right_1143@71:2>@79:0>:int)
      lower bounds:
        P[<<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>](<<<fold_right_1143@71:0>@141:1>@147:0>:int,<<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>:int) =
        (0 <= <<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>)
        P[<<fold_right_1143@71:0>@141:2>](<<fold_right_1143@71:0>@141:2>:int) = (0 <= <<fold_right_1143@71:0>@141:2>)
        P[<<fold_right_1143@71:2>@79:0>](<fold_right_1143@71:1>:int,<<fold_right_1143@71:2>@79:0>:int) =
        ((<<fold_right_1143@71:2>@79:0> = 0) && (<fold_right_1143@71:1> >= 1))
        P[<<<fold_right_1143@71:0>@141:1>@147:0>](<<<fold_right_1143@71:0>@141:1>@147:0>:int) =
        (0 <= <<<fold_right_1143@71:0>@141:1>@147:0>)
      upper bounds:
        P[<<fold_right_1143@71:2>@79:0>](var472:int,var473:int) = true
      begin GenHcSolver.classify_pids(245496)[4]
        output:
          [<<fold_right_1143@71:2>@79:0>]
      end GenHcSolver.classify_pids(245496)[4] (0.000000 sec.)
      lb:((<<fold_right_1143@71:2>@79:0> = 0) && (<fold_right_1143@71:1> >= 1))
      nub:false
      begin ApronInterface.convex_hull_interpolate(245499)[4]
        lb:((<<fold_right_1143@71:2>@79:0> = 0) && (<fold_right_1143@71:1> >= 1))
        nub:false
        lb':((<<fold_right_1143@71:2>@79:0> = 0) && (<fold_right_1143@71:1> >= 1))
        nub':false
        begin InterpProver.interpolate(245500)[5]
          begin InterpProver.interpolate_fresh(245501)[6]
            begin InterpProver.interpolate_log(245502)[7]
              input1: ((<<fold_right_1143@71:2>@79:0> = 0) && (<fold_right_1143@71:1> >= 1))
              input2: false
              begin InterpProver.interpolate_check(245503)[8]
                begin InterpProver.interpolate_simplify(245504)[9]
                  begin InterpProver.interpolate_quick(245543)[10]
                    
                  end InterpProver.interpolate_quick(245543)[10] (0.000000 sec.)
                  
                end InterpProver.interpolate_simplify(245504)[9] (0.001000 sec.)
                
              end InterpProver.interpolate_check(245503)[8] (0.001000 sec.)
              output: true
            end InterpProver.interpolate_log(245502)[7] (0.001000 sec.)
            
          end InterpProver.interpolate_fresh(245501)[6] (0.001000 sec.)
          
        end InterpProver.interpolate(245500)[5] (0.001000 sec.)
        output:
          P[<<fold_right_1143@71:2>@79:0>](<fold_right_1143@71:1>:int,<<fold_right_1143@71:2>@79:0>:int) = true
      end ApronInterface.convex_hull_interpolate(245499)[4] (0.001000 sec.)
      Horn clauses:
        P[<<fold_right_1143@71:0>@141:2>](var329:int),
        P[<<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>](var329:int,<<<fold_right_1143@71:0>@141:0>@199:0>:int),
        (0 > <<<fold_right_1143@71:0>@141:0>@199:0>) |- bot
        
         (0 <= <<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>)
        |- P[<<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>](<<<fold_right_1143@71:0>@141:1>@147:0>:int,
                                                             <<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>:int)
        
        P[<<<fold_right_1143@71:0>@141:1>@147:0>](<<<fold_right_1143@108:4>@111:0>@157:0>:int),
        (0 > <<<fold_right_1143@108:4>@111:0>@157:0>) |- bot
        
        P[<<fold_right_1143@71:0>@141:2>](<<<fold_right_1143@71:0>@141:1>@147:0>:int)|- P[<<<fold_right_1143@71:0>@141:1>@147:0>](
        <<<fold_right_1143@71:0>@141:1>@147:0>:int)
        
         (0 <= <<fold_right_1143@71:0>@141:2>) |- P[<<fold_right_1143@71:0>@141:2>](<<fold_right_1143@71:0>@141:2>:int)
      lower bounds:
        P[<<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>](<<<fold_right_1143@71:0>@141:1>@147:0>:int,<<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>:int) =
        (0 <= <<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>)
        P[<<fold_right_1143@71:0>@141:2>](<<fold_right_1143@71:0>@141:2>:int) = (0 <= <<fold_right_1143@71:0>@141:2>)
        P[<<<fold_right_1143@71:0>@141:1>@147:0>](<<<fold_right_1143@71:0>@141:1>@147:0>:int) =
        (0 <= <<<fold_right_1143@71:0>@141:1>@147:0>)
      upper bounds:
        P[<<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>](var474:int,var475:int) = ((0 <= var475) || (0 > var474))
      begin GenHcSolver.classify_pids(246601)[4]
        output:
          [<<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>]
      end GenHcSolver.classify_pids(246601)[4] (0.000000 sec.)
      lb:(0 <= <<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>)
      nub:(not ((0 <= <<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>) || (0 > <<<fold_right_1143@71:0>@141:1>@147:0>)))
      begin ApronInterface.convex_hull_interpolate(246604)[4]
        lb:(0 <= <<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>)
        nub:(not
               ((0 <= <<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>) || (0 > <<<fold_right_1143@71:0>@141:1>@147:0>)))
        lb':(0 <= <<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>)
        nub':(not
                ((0 <= <<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>) || (0 > <<<fold_right_1143@71:0>@141:1>@147:0>)))
        begin InterpProver.interpolate(246605)[5]
          begin InterpProver.interpolate_fresh(246606)[6]
            begin InterpProver.interpolate_log(246607)[7]
              input1: (0 <= <<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>)
              input2: (not
                         ((0 <= <<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>) ||
                          (0 > <<<fold_right_1143@71:0>@141:1>@147:0>)))
              begin InterpProver.interpolate_check(246608)[8]
                begin InterpProver.interpolate_simplify(246609)[9]
                  begin InterpProver.interpolate_quick(246642)[10]
                    begin CsisatInterface.interpolate_csisat_wrap(246651)[11]
                      begin CsisatInterface.interpolate_csisat_post_process(246652)[12]
                        begin CsisatInterface.interpolate_csisat_log(246653)[13]
                          input1: 0 <= v_sep_fold_right_1143_sep_71_sep_0_sep_141_sep_1_sep_147_sep_1_sep_189_sep_0
                          input2: (0 <= v_sep_fold_right_1143_sep_71_sep_0_sep_141_sep_1_sep_147_sep_0 & (1 + v_sep_fold_right_1143_sep_71_sep_0_sep_141_sep_1_sep_147_sep_1_sep_189_sep_0) <= 0)
                          begin CsisatInterface.interpolate_csisat_raw(246654)[14]
                            
                          end CsisatInterface.interpolate_csisat_raw(246654)[14] (0.000000 sec.)
                          output: -2*v_sep_fold_right_1143_sep_71_sep_0_sep_141_sep_1_sep_147_sep_1_sep_189_sep_0 <= 0
                          
                        end CsisatInterface.interpolate_csisat_log(246653)[13] (0.000000 sec.)
                        after simplification: -2*v_sep_fold_right_1143_sep_71_sep_0_sep_141_sep_1_sep_147_sep_1_sep_189_sep_0 <= 0
                        after dnf conversion: ((-2*v_sep_fold_right_1143_sep_71_sep_0_sep_141_sep_1_sep_147_sep_1_sep_189_sep_0 <= 0))
                        
                      end CsisatInterface.interpolate_csisat_post_process(246652)[12] (0.000000 sec.)
                      
                    end CsisatInterface.interpolate_csisat_wrap(246651)[11] (0.000000 sec.)
                    
                  end InterpProver.interpolate_quick(246642)[10] (0.001000 sec.)
                  
                end InterpProver.interpolate_simplify(246609)[9] (0.001000 sec.)
                
              end InterpProver.interpolate_check(246608)[8] (0.002000 sec.)
              output: (0 <= <<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>)
            end InterpProver.interpolate_log(246607)[7] (0.002000 sec.)
            
          end InterpProver.interpolate_fresh(246606)[6] (0.002000 sec.)
          
        end InterpProver.interpolate(246605)[5] (0.002000 sec.)
        output:
          P[<<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>](<<<fold_right_1143@71:0>@141:1>@147:0>:int,<<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>:int) =
          (0 <= <<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>)
      end ApronInterface.convex_hull_interpolate(246604)[4] (0.002000 sec.)
      Horn clauses:
        P[<<<fold_right_1143@71:0>@141:1>@147:0>](<<<fold_right_1143@108:4>@111:0>@157:0>:int),
        (0 > <<<fold_right_1143@108:4>@111:0>@157:0>) |- bot
        
        P[<<fold_right_1143@71:0>@141:2>](<<<fold_right_1143@71:0>@141:1>@147:0>:int)|- P[<<<fold_right_1143@71:0>@141:1>@147:0>](
        <<<fold_right_1143@71:0>@141:1>@147:0>:int)
        
         (0 <= <<fold_right_1143@71:0>@141:2>) |- P[<<fold_right_1143@71:0>@141:2>](<<fold_right_1143@71:0>@141:2>:int)
      lower bounds:
        P[<<fold_right_1143@71:0>@141:2>](<<fold_right_1143@71:0>@141:2>:int) = (0 <= <<fold_right_1143@71:0>@141:2>)
        P[<<<fold_right_1143@71:0>@141:1>@147:0>](<<<fold_right_1143@71:0>@141:1>@147:0>:int) =
        (0 <= <<<fold_right_1143@71:0>@141:1>@147:0>)
      upper bounds:
        P[<<<fold_right_1143@71:0>@141:1>@147:0>](var476:int) = (0 <= var476)
      begin GenHcSolver.classify_pids(247283)[4]
        output:
          [<<<fold_right_1143@71:0>@141:1>@147:0>]
      end GenHcSolver.classify_pids(247283)[4] (0.000000 sec.)
      lb:(0 <= <<<fold_right_1143@71:0>@141:1>@147:0>)
      nub:(not (0 <= <<<fold_right_1143@71:0>@141:1>@147:0>))
      begin ApronInterface.convex_hull_interpolate(247286)[4]
        lb:(0 <= <<<fold_right_1143@71:0>@141:1>@147:0>)
        nub:(not (0 <= <<<fold_right_1143@71:0>@141:1>@147:0>))
        lb':(0 <= <<<fold_right_1143@71:0>@141:1>@147:0>)
        nub':(not (0 <= <<<fold_right_1143@71:0>@141:1>@147:0>))
        begin InterpProver.interpolate(247287)[5]
          begin InterpProver.interpolate_fresh(247288)[6]
            begin InterpProver.interpolate_log(247289)[7]
              input1: (0 <= <<<fold_right_1143@71:0>@141:1>@147:0>)
              input2: (not (0 <= <<<fold_right_1143@71:0>@141:1>@147:0>))
              begin InterpProver.interpolate_check(247290)[8]
                begin InterpProver.interpolate_simplify(247291)[9]
                  begin InterpProver.interpolate_quick(247308)[10]
                    begin CsisatInterface.interpolate_csisat_wrap(247317)[11]
                      begin CsisatInterface.interpolate_csisat_post_process(247318)[12]
                        begin CsisatInterface.interpolate_csisat_log(247319)[13]
                          input1: 0 <= v_sep_fold_right_1143_sep_71_sep_0_sep_141_sep_1_sep_147_sep_0
                          input2: (1 + v_sep_fold_right_1143_sep_71_sep_0_sep_141_sep_1_sep_147_sep_0) <= 0
                          begin CsisatInterface.interpolate_csisat_raw(247320)[14]
                            
                          end CsisatInterface.interpolate_csisat_raw(247320)[14] (0.000000 sec.)
                          output: -2*v_sep_fold_right_1143_sep_71_sep_0_sep_141_sep_1_sep_147_sep_0 <= 0
                          
                        end CsisatInterface.interpolate_csisat_log(247319)[13] (0.000000 sec.)
                        after simplification: -2*v_sep_fold_right_1143_sep_71_sep_0_sep_141_sep_1_sep_147_sep_0 <= 0
                        after dnf conversion: ((-2*v_sep_fold_right_1143_sep_71_sep_0_sep_141_sep_1_sep_147_sep_0 <= 0))
                        
                      end CsisatInterface.interpolate_csisat_post_process(247318)[12] (0.000000 sec.)
                      
                    end CsisatInterface.interpolate_csisat_wrap(247317)[11] (0.000000 sec.)
                    
                  end InterpProver.interpolate_quick(247308)[10] (0.000000 sec.)
                  
                end InterpProver.interpolate_simplify(247291)[9] (0.000000 sec.)
                
              end InterpProver.interpolate_check(247290)[8] (0.000000 sec.)
              output: (0 <= <<<fold_right_1143@71:0>@141:1>@147:0>)
            end InterpProver.interpolate_log(247289)[7] (0.000000 sec.)
            
          end InterpProver.interpolate_fresh(247288)[6] (0.000000 sec.)
          
        end InterpProver.interpolate(247287)[5] (0.000000 sec.)
        output:
          P[<<<fold_right_1143@71:0>@141:1>@147:0>](<<<fold_right_1143@71:0>@141:1>@147:0>:int) =
          (0 <= <<<fold_right_1143@71:0>@141:1>@147:0>)
      end ApronInterface.convex_hull_interpolate(247286)[4] (0.000000 sec.)
      Horn clauses:
        P[<<fold_right_1143@71:0>@141:2>](<<<fold_right_1143@71:0>@141:1>@147:0>:int),
        (0 > <<<fold_right_1143@71:0>@141:1>@147:0>) |- bot
        
         (0 <= <<fold_right_1143@71:0>@141:2>) |- P[<<fold_right_1143@71:0>@141:2>](<<fold_right_1143@71:0>@141:2>:int)
      lower bounds:
        P[<<fold_right_1143@71:0>@141:2>](<<fold_right_1143@71:0>@141:2>:int) = (0 <= <<fold_right_1143@71:0>@141:2>)
      upper bounds:
        P[<<fold_right_1143@71:0>@141:2>](var477:int) = (0 <= var477)
      begin GenHcSolver.classify_pids(247761)[4]
        output:
          [<<fold_right_1143@71:0>@141:2>]
      end GenHcSolver.classify_pids(247761)[4] (0.000000 sec.)
      lb:(0 <= <<fold_right_1143@71:0>@141:2>)
      nub:(not (0 <= <<fold_right_1143@71:0>@141:2>))
      begin ApronInterface.convex_hull_interpolate(247764)[4]
        lb:(0 <= <<fold_right_1143@71:0>@141:2>)
        nub:(not (0 <= <<fold_right_1143@71:0>@141:2>))
        lb':(0 <= <<fold_right_1143@71:0>@141:2>)
        nub':(not (0 <= <<fold_right_1143@71:0>@141:2>))
        begin InterpProver.interpolate(247765)[5]
          begin InterpProver.interpolate_fresh(247766)[6]
            begin InterpProver.interpolate_log(247767)[7]
              input1: (0 <= <<fold_right_1143@71:0>@141:2>)
              input2: (not (0 <= <<fold_right_1143@71:0>@141:2>))
              begin InterpProver.interpolate_check(247768)[8]
                begin InterpProver.interpolate_simplify(247769)[9]
                  begin InterpProver.interpolate_quick(247786)[10]
                    begin CsisatInterface.interpolate_csisat_wrap(247795)[11]
                      begin CsisatInterface.interpolate_csisat_post_process(247796)[12]
                        begin CsisatInterface.interpolate_csisat_log(247797)[13]
                          input1: 0 <= v_sep_fold_right_1143_sep_71_sep_0_sep_141_sep_2
                          input2: (1 + v_sep_fold_right_1143_sep_71_sep_0_sep_141_sep_2) <= 0
                          begin CsisatInterface.interpolate_csisat_raw(247798)[14]
                            
                          end CsisatInterface.interpolate_csisat_raw(247798)[14] (0.000000 sec.)
                          output: -2*v_sep_fold_right_1143_sep_71_sep_0_sep_141_sep_2 <= 0
                          
                        end CsisatInterface.interpolate_csisat_log(247797)[13] (0.000000 sec.)
                        after simplification: -2*v_sep_fold_right_1143_sep_71_sep_0_sep_141_sep_2 <= 0
                        after dnf conversion: ((-2*v_sep_fold_right_1143_sep_71_sep_0_sep_141_sep_2 <= 0))
                        
                      end CsisatInterface.interpolate_csisat_post_process(247796)[12] (0.000000 sec.)
                      
                    end CsisatInterface.interpolate_csisat_wrap(247795)[11] (0.000000 sec.)
                    
                  end InterpProver.interpolate_quick(247786)[10] (0.000000 sec.)
                  
                end InterpProver.interpolate_simplify(247769)[9] (0.000000 sec.)
                
              end InterpProver.interpolate_check(247768)[8] (0.000000 sec.)
              output: (0 <= <<fold_right_1143@71:0>@141:2>)
            end InterpProver.interpolate_log(247767)[7] (0.000000 sec.)
            
          end InterpProver.interpolate_fresh(247766)[6] (0.000000 sec.)
          
        end InterpProver.interpolate(247765)[5] (0.000000 sec.)
        output:
          P[<<fold_right_1143@71:0>@141:2>](<<fold_right_1143@71:0>@141:2>:int) = (0 <= <<fold_right_1143@71:0>@141:2>)
      end ApronInterface.convex_hull_interpolate(247764)[4] (0.001000 sec.)
      begin HcSolver.check_validity(247891)[4]
        input:
          P[<fail_2169@292:0>](<fail_2169@292:0>:bool)|- bot
          
          P[<<<<fold_right_1143@71:4>@121:0>@127:1>@285:0>](<f_main_2164@289:1>:int,0:int,<f_main_2164@289:3>:int),
          P[<<make_list_1030@51:1>@67:0>](<f_main_2164@289:0>:int,<f_main_2164@289:1>:int),
          ((<f_main_2164@289:3> < 0) && <fail_2169@292:0>) |- P[<fail_2169@292:0>](
          <fail_2169@292:0>:bool)
          
          P[<<<fold_right_1143@71:0>@141:3>@271:0>](<<<fold_right_1143@71:4>@121:0>@127:0>:int,<<<<fold_right_1143@71:4>@121:0>@127:1>@285:0>:int),
          P[<fold_right_1143@71:1>](<fold_right_1143@71:1>:int), (<fold_right_1143@71:1> >= 1)
          |- P[<<<<fold_right_1143@71:4>@121:0>@127:1>@285:0>](<fold_right_1143@71:1>:int,
                                                               <<<fold_right_1143@71:4>@121:0>@127:0>:int,
                                                               <<<<fold_right_1143@71:4>@121:0>@127:1>@285:0>:int)
          
          P[<<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>](<<fold_right_1143@71:0>@141:2>:int,var322:int),
          P[<<<<fold_right_1143@71:0>@141:0>@199:1>@261:0>](var322:int,<<<fold_right_1143@71:0>@141:3>@271:0>:int),
          P[<<make_list_1030@51:1>@67:0>](<f_main_2163@123:0>:int,<fold_right_1143@71:1>:int),
          P[<<fold_right_1143@71:0>@141:2>](<<fold_right_1143@71:0>@141:2>:int)|- P[<<<fold_right_1143@71:0>@141:3>@271:0>](
          <<fold_right_1143@71:0>@141:2>:int,<<<fold_right_1143@71:0>@141:3>@271:0>:int)
          
          P[<<<<<fold_right_1143@71:2>@79:1>@102:0>@213:1>@247:0>](var325:int,0:int,<<<fold_right_1143@71:0>@141:0>@199:0>:int,<<<<fold_right_1143@71:0>@141:0>@199:1>@261:0>:int),
          P[<fold_right_1143@71:1>](var325:int), (1 <= var325)
          |- P[<<<<fold_right_1143@71:0>@141:0>@199:1>@261:0>](<<<fold_right_1143@71:0>@141:0>@199:0>:int,
                                                               <<<<fold_right_1143@71:0>@141:0>@199:1>@261:0>:int)
          
          P[<<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:1>@243:0>](
          <f_main_2163@123:0>:int,<fold_right_1143@71:1>:int,<<fold_right_1143@71:2>@79:0>:int,<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>:int,<<<<<fold_right_1143@71:2>@79:1>@102:0>@213:1>@247:0>:int),
          P[<<make_list_1030@51:1>@67:0>](<f_main_2163@123:0>:int,<fold_right_1143@71:1>:int),
          P[<fold_right_1143@71:1>](<fold_right_1143@71:1>:int)|- P[<<<<<fold_right_1143@71:2>@79:1>@102:0>@213:1>@247:0>](
          <fold_right_1143@71:1>:int,<<fold_right_1143@71:2>@79:0>:int,
          <<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>:int,<<<<<fold_right_1143@71:2>@79:1>@102:0>@213:1>@247:0>:int)
          
          P[<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>](<make_list_1030@51:0>:int,(
                                                                1 + var326):int,0:int,<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>:int),
          P[<<<make_list_1030@51:1>@67:1>@83:0>](<make_list_1030@51:0>:int,(
                                                 1 + var326):int,0:int),
          P[<<make_list_1030@54:1>@57:0>]((-1 + <make_list_1030@51:0>):int,var326:int),
          P[<<<make_list_1030@51:1>@67:1>@83:0>](<make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int),
          P[<make_list_1030@51:0>](<make_list_1030@51:0>:int),
          P[<<make_list_1030@54:1>@57:0>]((-1 + <make_list_1030@51:0>):int,(
                                          -1 + <<make_list_1030@51:1>@67:0>):int),
          P[<<make_list_1030@51:1>@67:0>](<make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int),
          ((<<<make_list_1030@51:1>@67:1>@83:0> = 0) &&
           ((<make_list_1030@51:0> > 0) &&
            (<<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:1>@243:0> =
             (<make_list_1030@51:0> + <<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>))))
          |- P[<<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:1>@243:0>](
          <make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,
          <<<make_list_1030@51:1>@67:1>@83:0>:int,<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>:int,
          <<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:1>@243:0>:int)
          
          P[<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>](<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int,<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>:int),
          P[<<make_list_1030@51:1>@67:0>](<make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int),
          P[<<fold_right_1143@71:2>@79:0>](<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int),
          P[<make_list_1030@51:0>](<make_list_1030@51:0>:int),
          P[<<<make_list_1030@51:1>@67:1>@83:0>](<make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int)|- P[<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>](
          <make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,
          <<<make_list_1030@51:1>@67:1>@83:0>:int,<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>:int)
          
          P[<<<fold_right_1143@71:0>@141:0>@199:0>](<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>:int),
          P[<fold_right_1143@71:1>](<fold_right_1143@71:1>:int),
          P[<<fold_right_1143@71:2>@79:0>](<fold_right_1143@71:1>:int,<<fold_right_1143@71:2>@79:0>:int),
          ((<<fold_right_1143@71:2>@79:0> = 0) && (<fold_right_1143@71:1> >= 1))
          |- P[<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>](<fold_right_1143@71:1>:int,
                                                              <<fold_right_1143@71:2>@79:0>:int,
                                                              <<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>:int)
          
          P[<<make_list_1030@51:1>@67:0>](<f_main_2163@123:0>:int,<fold_right_1143@71:1>:int),
          P[<<fold_right_1143@71:0>@141:2>](var329:int),
          P[<<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>](var329:int,<<<fold_right_1143@71:0>@141:0>@199:0>:int)|- P[<<<fold_right_1143@71:0>@141:0>@199:0>](
          <<<fold_right_1143@71:0>@141:0>@199:0>:int)
          
          P[<<<<fold_right_1143@108:4>@111:0>@157:1>@179:0>]((-1 + var330):int,<<<fold_right_1143@71:0>@141:1>@147:0>:int,<<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>:int),
          P[<fold_right_1143@71:1>](var330:int), (1 <= var330)
          |- P[<<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>](<<<fold_right_1143@71:0>@141:1>@147:0>:int,
                                                               <<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>:int)
          
          P[<fold_right_1143@108:1>](<fold_right_1143@108:1>:int),
          P[<<<fold_right_1143@108:3>@159:1>@177:0>](<fold_right_1143@108:1>:int,<<<fold_right_1143@108:4>@111:0>@157:0>:int,<<<<fold_right_1143@108:4>@111:0>@157:1>@179:0>:int),
          (<fold_right_1143@108:1> = 0)
          |- P[<<<<fold_right_1143@108:4>@111:0>@157:1>@179:0>](<fold_right_1143@108:1>:int,
                                                                <<<fold_right_1143@108:4>@111:0>@157:0>:int,
                                                                <<<<fold_right_1143@108:4>@111:0>@157:1>@179:0>:int)
          
          P[<<<fold_right_1143@71:3>@165:1>@171:0>]((1 + <fold_right_1143@108:1>):int,<<fold_right_1143@108:3>@159:0>:int,<<<fold_right_1143@108:3>@159:1>@177:0>:int),
          P[<fold_right_1143@71:1>]((1 + <fold_right_1143@108:1>):int),
          P[<fold_right_1143@108:1>](<fold_right_1143@108:1>:int), (<fold_right_1143@108:1> >= 0)
          |- P[<<<fold_right_1143@108:3>@159:1>@177:0>](<fold_right_1143@108:1>:int,
                                                        <<fold_right_1143@108:3>@159:0>:int,
                                                        <<<fold_right_1143@108:3>@159:1>@177:0>:int)
          
          P[<<make_list_1030@51:1>@67:0>](<f_main_2163@123:0>:int,<fold_right_1143@71:1>:int),
          P[<<fold_right_1143@71:3>@165:0>](<fold_right_1143@71:1>:int,<<fold_right_1143@71:3>@165:0>:int),
          P[<fold_right_1143@71:1>](<fold_right_1143@71:1>:int),
          (<<<fold_right_1143@71:3>@165:1>@171:0> = <<fold_right_1143@71:3>@165:0>)
          |- P[<<<fold_right_1143@71:3>@165:1>@171:0>](<fold_right_1143@71:1>:int,
                                                       <<fold_right_1143@71:3>@165:0>:int,
                                                       <<<fold_right_1143@71:3>@165:1>@171:0>:int)
          
          P[<fold_right_1143@71:1>](<fold_right_1143@71:1>:int),
          P[<<fold_right_1143@108:3>@159:0>]((-1 + <fold_right_1143@71:1>):int,<<fold_right_1143@71:3>@165:0>:int),
          (<fold_right_1143@71:1> >= 1)
          |- P[<<fold_right_1143@71:3>@165:0>](<fold_right_1143@71:1>:int,
                                               <<fold_right_1143@71:3>@165:0>:int)
          
          P[<fold_right_1143@108:1>](<fold_right_1143@108:1>:int),
          P[<<<fold_right_1143@108:4>@111:0>@157:0>](<fold_right_1143@108:1>:int,<<fold_right_1143@108:3>@159:0>:int),
          (<fold_right_1143@108:1> = 0)
          |- P[<<fold_right_1143@108:3>@159:0>](<fold_right_1143@108:1>:int,
                                                <<fold_right_1143@108:3>@159:0>:int)
          
          P[<<<fold_right_1143@71:0>@141:1>@147:0>](<<<fold_right_1143@108:4>@111:0>@157:0>:int),
          P[<fold_right_1143@71:1>]((1 + <fold_right_1143@108:1>):int),
          P[<fold_right_1143@108:1>](<fold_right_1143@108:1>:int), (<fold_right_1143@108:1> >= 0)
          |- P[<<<fold_right_1143@108:4>@111:0>@157:0>](<fold_right_1143@108:1>:int,
                                                        <<<fold_right_1143@108:4>@111:0>@157:0>:int)
          
          P[<<make_list_1030@51:1>@67:0>](<f_main_2163@123:0>:int,<fold_right_1143@71:1>:int),
          P[<<fold_right_1143@71:0>@141:2>](<<<fold_right_1143@71:0>@141:1>@147:0>:int)|- P[<<<fold_right_1143@71:0>@141:1>@147:0>](
          <<<fold_right_1143@71:0>@141:1>@147:0>:int)
          
          P[<<<fold_right_1143@71:4>@121:0>@127:0>](var333:int,<<fold_right_1143@71:0>@141:2>:int),
          P[<fold_right_1143@71:1>](var333:int), (1 <= var333)
          |- P[<<fold_right_1143@71:0>@141:2>](<<fold_right_1143@71:0>@141:2>:int)
          
          P[<<make_list_1030@51:1>@67:0>](<f_main_2163@123:0>:int,<fold_right_1143@71:1>:int),
          P[<fold_right_1143@71:1>](<fold_right_1143@71:1>:int), (<<<fold_right_1143@71:4>@121:0>@127:0> = 0)
          |- P[<<<fold_right_1143@71:4>@121:0>@127:0>](<fold_right_1143@71:1>:int,
                                                       <<<fold_right_1143@71:4>@121:0>@127:0>:int)
          
          P[<fold_right_1143@71:1>]((1 + <fold_right_1143@108:1>):int), (
          <fold_right_1143@108:1> >= 0) |- P[<fold_right_1143@108:1>](
          <fold_right_1143@108:1>:int)
          
          P[<<make_list_1030@51:1>@67:0>](<make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int),
          P[<<fold_right_1143@71:2>@79:0>](<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int),
          P[<make_list_1030@51:0>](<make_list_1030@51:0>:int)|- P[<<<make_list_1030@51:1>@67:1>@83:0>](
          <make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,
          <<<make_list_1030@51:1>@67:1>@83:0>:int)
          
          P[<fold_right_1143@71:1>](<fold_right_1143@71:1>:int),
          ((<<fold_right_1143@71:2>@79:0> = 0) && (<fold_right_1143@71:1> >= 1))
          |- P[<<fold_right_1143@71:2>@79:0>](<fold_right_1143@71:1>:int,
                                              <<fold_right_1143@71:2>@79:0>:int)
          
          P[<<make_list_1030@51:1>@67:0>](<f_main_2161@69:0>:int,<fold_right_1143@71:1>:int)|- P[<fold_right_1143@71:1>](
          <fold_right_1143@71:1>:int)
          
          P[<make_list_1030@51:0>](<make_list_1030@51:0>:int),
          P[<<make_list_1030@54:1>@57:0>]((-1 + <make_list_1030@51:0>):int,(
                                          -1 + <<make_list_1030@51:1>@67:0>):int), (
          <make_list_1030@51:0> > 0)
          |- P[<<make_list_1030@51:1>@67:0>](<make_list_1030@51:0>:int,
                                             <<make_list_1030@51:1>@67:0>:int)
          
          P[<make_list_1030@54:0>](<make_list_1030@54:0>:int),
          ((<<make_list_1030@54:1>@57:0> = 0) && (<make_list_1030@54:0> <= 0))
          |- P[<<make_list_1030@54:1>@57:0>](<make_list_1030@54:0>:int,
                                             <<make_list_1030@54:1>@57:0>:int)
          
          P[<make_list_1030@51:0>]((1 + <make_list_1030@54:0>):int), (
          (1 + <make_list_1030@54:0>) > 0) |- P[<make_list_1030@54:0>](
          <make_list_1030@54:0>:int)
          
          |- P[<make_list_1030@51:0>](<make_list_1030@51:0>:int)
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        
      end HcSolver.check_validity(247891)[4] (0.012998 sec.)
      solution:
        P[<fail_2169@292:0>](var444:bool) = false
        P[<<<<fold_right_1143@71:4>@121:0>@127:1>@285:0>](<fold_right_1143@108:1>:int,<<<fold_right_1143@108:4>@111:0>@157:0>:int,<<<<fold_right_1143@108:4>@111:0>@157:1>@179:0>:int) =
        ((1 <= <<<<fold_right_1143@108:4>@111:0>@157:1>@179:0>) ||
         (0 <= <<<<fold_right_1143@108:4>@111:0>@157:1>@179:0>))
        P[<<<fold_right_1143@71:0>@141:3>@271:0>](<<fold_right_1143@71:0>@141:2>:int,<<<fold_right_1143@71:0>@141:3>@271:0>:int) =
        (1 <= <<<fold_right_1143@71:0>@141:3>@271:0>)
        P[<<<<fold_right_1143@71:0>@141:0>@199:1>@261:0>](<<<fold_right_1143@71:0>@141:0>@199:0>:int,<<<<fold_right_1143@71:0>@141:0>@199:1>@261:0>:int) =
        (1 <= <<<<fold_right_1143@71:0>@141:0>@199:1>@261:0>)
        P[<<<<<fold_right_1143@71:2>@79:1>@102:0>@213:1>@247:0>](<fold_right_1143@71:1>:int,<<fold_right_1143@71:2>@79:0>:int,<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>:int,<<<<<fold_right_1143@71:2>@79:1>@102:0>@213:1>@247:0>:int) =
        (1 <= <<<<<fold_right_1143@71:2>@79:1>@102:0>@213:1>@247:0>)
        P[<<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:1>@243:0>](
        <make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int,<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>:int,<<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:1>@243:0>:int) =
        (1 <= <<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:1>@243:0>)
        P[<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>](<make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int,<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>:int) =
        (0 <= <<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>)
        P[<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>](<fold_right_1143@71:1>:int,<<fold_right_1143@71:2>@79:0>:int,<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>:int) =
        (0 <= <<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>)
        P[<<<fold_right_1143@71:0>@141:0>@199:0>](<<<fold_right_1143@71:0>@141:0>@199:0>:int) =
        (0 <= <<<fold_right_1143@71:0>@141:0>@199:0>)
        P[<<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>](<<<fold_right_1143@71:0>@141:1>@147:0>:int,<<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>:int) =
        (0 <= <<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>)
        P[<<<<fold_right_1143@108:4>@111:0>@157:1>@179:0>](<fold_right_1143@108:1>:int,<<<fold_right_1143@108:4>@111:0>@157:0>:int,<<<<fold_right_1143@108:4>@111:0>@157:1>@179:0>:int) =
        ((1 <= <<<<fold_right_1143@108:4>@111:0>@157:1>@179:0>) ||
         (0 <= <<<<fold_right_1143@108:4>@111:0>@157:1>@179:0>))
        P[<<<fold_right_1143@108:3>@159:1>@177:0>](<fold_right_1143@71:1>:int,<<fold_right_1143@71:3>@165:0>:int,<<<fold_right_1143@71:3>@165:1>@171:0>:int) =
        (0 <= <<<fold_right_1143@71:3>@165:1>@171:0>)
        P[<<<fold_right_1143@71:3>@165:1>@171:0>](<fold_right_1143@71:1>:int,<<fold_right_1143@71:3>@165:0>:int,<<<fold_right_1143@71:3>@165:1>@171:0>:int) =
        (0 <= <<<fold_right_1143@71:3>@165:1>@171:0>)
        P[<<fold_right_1143@71:3>@165:0>](<fold_right_1143@108:1>:int,<<fold_right_1143@108:3>@159:0>:int) =
        (0 <= <<fold_right_1143@108:3>@159:0>)
        P[<<fold_right_1143@108:3>@159:0>](<fold_right_1143@108:1>:int,<<fold_right_1143@108:3>@159:0>:int) =
        (0 <= <<fold_right_1143@108:3>@159:0>)
        P[<<<fold_right_1143@108:4>@111:0>@157:0>](<fold_right_1143@71:1>:int,<<<fold_right_1143@71:4>@121:0>@127:0>:int) =
        (0 <= <<<fold_right_1143@71:4>@121:0>@127:0>)
        P[<<<fold_right_1143@71:0>@141:1>@147:0>](<<<fold_right_1143@71:0>@141:1>@147:0>:int) =
        (0 <= <<<fold_right_1143@71:0>@141:1>@147:0>)
        P[<<fold_right_1143@71:0>@141:2>](<<fold_right_1143@71:0>@141:2>:int) = (0 <= <<fold_right_1143@71:0>@141:2>)
        P[<<<fold_right_1143@71:4>@121:0>@127:0>](<fold_right_1143@71:1>:int,<<<fold_right_1143@71:4>@121:0>@127:0>:int) =
        (0 <= <<<fold_right_1143@71:4>@121:0>@127:0>)
        P[<fold_right_1143@108:1>](<fold_right_1143@71:1>:int) = true
        P[<<<make_list_1030@51:1>@67:1>@83:0>](<make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int) =
        true
        P[<<fold_right_1143@71:2>@79:0>](<fold_right_1143@71:1>:int,<<fold_right_1143@71:2>@79:0>:int) = true
        P[<fold_right_1143@71:1>](<fold_right_1143@71:1>:int) = true
        P[<<make_list_1030@51:1>@67:0>](<make_list_1030@54:0>:int,<<make_list_1030@54:1>@57:0>:int) = true
        P[<<make_list_1030@54:1>@57:0>](<make_list_1030@54:0>:int,<<make_list_1030@54:1>@57:0>:int) = true
        P[<make_list_1030@54:0>](<make_list_1030@51:0>:int) = true
        P[<make_list_1030@51:0>](<make_list_1030@51:0>:int) = true
    end GenHcSolver.solve(45058)[3] (1.084836 sec.)
    begin GenHcSolver.solve(250447)[3]
      Horn clauses:
        P[<fail_2169@292:0>](<fail_2169@292:0>:bool)|- bot
        
        P[<<<<fold_right_1143@71:4>@121:0>@127:1>@285:0>](<f_main_2164@289:1>:int,0:int,<f_main_2164@289:3>:int),
        P[<<make_list_1030@51:1>@67:0>](<f_main_2164@289:0>:int,<f_main_2164@289:1>:int),
        ((<f_main_2164@289:3> < 0) && <fail_2169@292:0>) |- P[<fail_2169@292:0>](
        <fail_2169@292:0>:bool)
        
        P[<<<fold_right_1143@71:0>@141:3>@271:0>](<<<fold_right_1143@71:4>@121:0>@127:0>:int,<<<<fold_right_1143@71:4>@121:0>@127:1>@285:0>:int),
        P[<fold_right_1143@71:1>](<fold_right_1143@71:1>:int), (<fold_right_1143@71:1> >= 1)
        |- P[<<<<fold_right_1143@71:4>@121:0>@127:1>@285:0>](<fold_right_1143@71:1>:int,
                                                             <<<fold_right_1143@71:4>@121:0>@127:0>:int,
                                                             <<<<fold_right_1143@71:4>@121:0>@127:1>@285:0>:int)
        
        P[<<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>](<<fold_right_1143@71:0>@141:2>:int,var322:int),
        P[<<<<fold_right_1143@71:0>@141:0>@199:1>@261:0>](var322:int,<<<fold_right_1143@71:0>@141:3>@271:0>:int),
        P[<<make_list_1030@51:1>@67:0>](<f_main_2163@123:0>:int,<fold_right_1143@71:1>:int),
        P[<<fold_right_1143@71:0>@141:2>](<<fold_right_1143@71:0>@141:2>:int)|- P[<<<fold_right_1143@71:0>@141:3>@271:0>](
        <<fold_right_1143@71:0>@141:2>:int,<<<fold_right_1143@71:0>@141:3>@271:0>:int)
        
        P[<<<<<fold_right_1143@71:2>@79:1>@102:0>@213:1>@247:0>](var325:int,0:int,<<<fold_right_1143@71:0>@141:0>@199:0>:int,<<<<fold_right_1143@71:0>@141:0>@199:1>@261:0>:int),
        P[<fold_right_1143@71:1>](var325:int), (1 <= var325)
        |- P[<<<<fold_right_1143@71:0>@141:0>@199:1>@261:0>](<<<fold_right_1143@71:0>@141:0>@199:0>:int,
                                                             <<<<fold_right_1143@71:0>@141:0>@199:1>@261:0>:int)
        
        P[<<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:1>@243:0>](
        <f_main_2163@123:0>:int,<fold_right_1143@71:1>:int,<<fold_right_1143@71:2>@79:0>:int,<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>:int,<<<<<fold_right_1143@71:2>@79:1>@102:0>@213:1>@247:0>:int),
        P[<<make_list_1030@51:1>@67:0>](<f_main_2163@123:0>:int,<fold_right_1143@71:1>:int),
        P[<fold_right_1143@71:1>](<fold_right_1143@71:1>:int)|- P[<<<<<fold_right_1143@71:2>@79:1>@102:0>@213:1>@247:0>](
        <fold_right_1143@71:1>:int,<<fold_right_1143@71:2>@79:0>:int,
        <<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>:int,<<<<<fold_right_1143@71:2>@79:1>@102:0>@213:1>@247:0>:int)
        
        P[<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>](<make_list_1030@51:0>:int,(
                                                              1 + var326):int,0:int,<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>:int),
        P[<<<make_list_1030@51:1>@67:1>@83:0>](<make_list_1030@51:0>:int,(
                                               1 + var326):int,0:int),
        P[<<make_list_1030@54:1>@57:0>]((-1 + <make_list_1030@51:0>):int,var326:int),
        P[<<<make_list_1030@51:1>@67:1>@83:0>](<make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int),
        P[<make_list_1030@51:0>](<make_list_1030@51:0>:int),
        P[<<make_list_1030@54:1>@57:0>]((-1 + <make_list_1030@51:0>):int,(
                                        -1 + <<make_list_1030@51:1>@67:0>):int),
        P[<<make_list_1030@51:1>@67:0>](<make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int),
        ((<<<make_list_1030@51:1>@67:1>@83:0> = 0) &&
         ((<make_list_1030@51:0> > 0) &&
          (<<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:1>@243:0> =
           (<make_list_1030@51:0> + <<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>))))
        |- P[<<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:1>@243:0>](
        <make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int,
        <<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>:int,<<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:1>@243:0>:int)
        
        P[<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>](<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int,<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>:int),
        P[<<make_list_1030@51:1>@67:0>](<make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int),
        P[<<fold_right_1143@71:2>@79:0>](<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int),
        P[<make_list_1030@51:0>](<make_list_1030@51:0>:int),
        P[<<<make_list_1030@51:1>@67:1>@83:0>](<make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int)|- P[<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>](
        <make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int,
        <<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>:int)
        
        P[<<<fold_right_1143@71:0>@141:0>@199:0>](<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>:int),
        P[<fold_right_1143@71:1>](<fold_right_1143@71:1>:int),
        P[<<fold_right_1143@71:2>@79:0>](<fold_right_1143@71:1>:int,<<fold_right_1143@71:2>@79:0>:int),
        ((<<fold_right_1143@71:2>@79:0> = 0) && (<fold_right_1143@71:1> >= 1))
        |- P[<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>](<fold_right_1143@71:1>:int,
                                                            <<fold_right_1143@71:2>@79:0>:int,
                                                            <<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>:int)
        
        P[<<make_list_1030@51:1>@67:0>](<f_main_2163@123:0>:int,<fold_right_1143@71:1>:int),
        P[<<fold_right_1143@71:0>@141:2>](var329:int),
        P[<<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>](var329:int,<<<fold_right_1143@71:0>@141:0>@199:0>:int)|- P[<<<fold_right_1143@71:0>@141:0>@199:0>](
        <<<fold_right_1143@71:0>@141:0>@199:0>:int)
        
        P[<<<<fold_right_1143@108:4>@111:0>@157:1>@179:0>]((-1 + var330):int,<<<fold_right_1143@71:0>@141:1>@147:0>:int,<<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>:int),
        P[<fold_right_1143@71:1>](var330:int), (1 <= var330)
        |- P[<<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>](<<<fold_right_1143@71:0>@141:1>@147:0>:int,
                                                             <<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>:int)
        
        P[<fold_right_1143@108:1>](<fold_right_1143@108:1>:int),
        P[<<<fold_right_1143@108:3>@159:1>@177:0>](<fold_right_1143@108:1>:int,<<<fold_right_1143@108:4>@111:0>@157:0>:int,<<<<fold_right_1143@108:4>@111:0>@157:1>@179:0>:int),
        (<fold_right_1143@108:1> = 0)
        |- P[<<<<fold_right_1143@108:4>@111:0>@157:1>@179:0>](<fold_right_1143@108:1>:int,
                                                              <<<fold_right_1143@108:4>@111:0>@157:0>:int,
                                                              <<<<fold_right_1143@108:4>@111:0>@157:1>@179:0>:int)
        
        P[<<<fold_right_1143@71:3>@165:1>@171:0>]((1 + <fold_right_1143@108:1>):int,<<fold_right_1143@108:3>@159:0>:int,<<<fold_right_1143@108:3>@159:1>@177:0>:int),
        P[<fold_right_1143@71:1>]((1 + <fold_right_1143@108:1>):int),
        P[<fold_right_1143@108:1>](<fold_right_1143@108:1>:int), (<fold_right_1143@108:1> >= 0)
        |- P[<<<fold_right_1143@108:3>@159:1>@177:0>](<fold_right_1143@108:1>:int,
                                                      <<fold_right_1143@108:3>@159:0>:int,
                                                      <<<fold_right_1143@108:3>@159:1>@177:0>:int)
        
        P[<<make_list_1030@51:1>@67:0>](<f_main_2163@123:0>:int,<fold_right_1143@71:1>:int),
        P[<<fold_right_1143@71:3>@165:0>](<fold_right_1143@71:1>:int,<<fold_right_1143@71:3>@165:0>:int),
        P[<fold_right_1143@71:1>](<fold_right_1143@71:1>:int),
        (<<<fold_right_1143@71:3>@165:1>@171:0> = <<fold_right_1143@71:3>@165:0>)
        |- P[<<<fold_right_1143@71:3>@165:1>@171:0>](<fold_right_1143@71:1>:int,
                                                     <<fold_right_1143@71:3>@165:0>:int,
                                                     <<<fold_right_1143@71:3>@165:1>@171:0>:int)
        
        P[<fold_right_1143@71:1>](<fold_right_1143@71:1>:int),
        P[<<fold_right_1143@108:3>@159:0>]((-1 + <fold_right_1143@71:1>):int,<<fold_right_1143@71:3>@165:0>:int),
        (<fold_right_1143@71:1> >= 1)
        |- P[<<fold_right_1143@71:3>@165:0>](<fold_right_1143@71:1>:int,
                                             <<fold_right_1143@71:3>@165:0>:int)
        
        P[<fold_right_1143@108:1>](<fold_right_1143@108:1>:int),
        P[<<<fold_right_1143@108:4>@111:0>@157:0>](<fold_right_1143@108:1>:int,<<fold_right_1143@108:3>@159:0>:int),
        (<fold_right_1143@108:1> = 0)
        |- P[<<fold_right_1143@108:3>@159:0>](<fold_right_1143@108:1>:int,
                                              <<fold_right_1143@108:3>@159:0>:int)
        
        P[<<<fold_right_1143@71:0>@141:1>@147:0>](<<<fold_right_1143@108:4>@111:0>@157:0>:int),
        P[<fold_right_1143@71:1>]((1 + <fold_right_1143@108:1>):int),
        P[<fold_right_1143@108:1>](<fold_right_1143@108:1>:int), (<fold_right_1143@108:1> >= 0)
        |- P[<<<fold_right_1143@108:4>@111:0>@157:0>](<fold_right_1143@108:1>:int,
                                                      <<<fold_right_1143@108:4>@111:0>@157:0>:int)
        
        P[<<make_list_1030@51:1>@67:0>](<f_main_2163@123:0>:int,<fold_right_1143@71:1>:int),
        P[<<fold_right_1143@71:0>@141:2>](<<<fold_right_1143@71:0>@141:1>@147:0>:int)|- P[<<<fold_right_1143@71:0>@141:1>@147:0>](
        <<<fold_right_1143@71:0>@141:1>@147:0>:int)
        
        P[<<<fold_right_1143@71:4>@121:0>@127:0>](var333:int,<<fold_right_1143@71:0>@141:2>:int),
        P[<fold_right_1143@71:1>](var333:int), (1 <= var333)
        |- P[<<fold_right_1143@71:0>@141:2>](<<fold_right_1143@71:0>@141:2>:int)
        
        P[<<make_list_1030@51:1>@67:0>](<f_main_2163@123:0>:int,<fold_right_1143@71:1>:int),
        P[<fold_right_1143@71:1>](<fold_right_1143@71:1>:int), (<<<fold_right_1143@71:4>@121:0>@127:0> = 0)
        |- P[<<<fold_right_1143@71:4>@121:0>@127:0>](<fold_right_1143@71:1>:int,
                                                     <<<fold_right_1143@71:4>@121:0>@127:0>:int)
        
        P[<fold_right_1143@71:1>]((1 + <fold_right_1143@108:1>):int), (
        <fold_right_1143@108:1> >= 0) |- P[<fold_right_1143@108:1>](<fold_right_1143@108:1>:int)
        
        P[<<make_list_1030@51:1>@67:0>](<make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int),
        P[<<fold_right_1143@71:2>@79:0>](<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int),
        P[<make_list_1030@51:0>](<make_list_1030@51:0>:int)|- P[<<<make_list_1030@51:1>@67:1>@83:0>](
        <make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int)
        
        P[<fold_right_1143@71:1>](<fold_right_1143@71:1>:int),
        ((<<fold_right_1143@71:2>@79:0> = 0) && (<fold_right_1143@71:1> >= 1))
        |- P[<<fold_right_1143@71:2>@79:0>](<fold_right_1143@71:1>:int,
                                            <<fold_right_1143@71:2>@79:0>:int)
        
        P[<<make_list_1030@51:1>@67:0>](<f_main_2161@69:0>:int,<fold_right_1143@71:1>:int)|- P[<fold_right_1143@71:1>](
        <fold_right_1143@71:1>:int)
        
        P[<make_list_1030@51:0>](<make_list_1030@51:0>:int),
        P[<<make_list_1030@54:1>@57:0>]((-1 + <make_list_1030@51:0>):int,(
                                        -1 + <<make_list_1030@51:1>@67:0>):int), (
        <make_list_1030@51:0> > 0)
        |- P[<<make_list_1030@51:1>@67:0>](<make_list_1030@51:0>:int,
                                           <<make_list_1030@51:1>@67:0>:int)
        
        P[<make_list_1030@54:0>](<make_list_1030@54:0>:int),
        ((<<make_list_1030@54:1>@57:0> = 0) && (<make_list_1030@54:0> <= 0))
        |- P[<<make_list_1030@54:1>@57:0>](<make_list_1030@54:0>:int,
                                           <<make_list_1030@54:1>@57:0>:int)
        
        P[<make_list_1030@51:0>]((1 + <make_list_1030@54:0>):int), ((1 + <make_list_1030@54:0>) > 0)
        |- P[<make_list_1030@54:0>](<make_list_1030@54:0>:int)
        
        |- P[<make_list_1030@51:0>](<make_list_1030@51:0>:int)
      lower bounds:
        P[<make_list_1030@51:0>](<make_list_1030@51:0>:int) = true
        P[<make_list_1030@54:0>](<make_list_1030@54:0>:int) = ((1 + <make_list_1030@54:0>) > 0)
        P[<<make_list_1030@54:1>@57:0>](<make_list_1030@54:0>:int,<<make_list_1030@54:1>@57:0>:int) =
        ((<<make_list_1030@54:1>@57:0> = 0) && (<make_list_1030@54:0> = 0))
        P[<<make_list_1030@51:1>@67:0>](<make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int) =
        ((<make_list_1030@51:0> = 1) && (<<make_list_1030@51:1>@67:0> = 1))
        P[<fold_right_1143@71:1>](<fold_right_1143@71:1>:int) = (<fold_right_1143@71:1> = 1)
        P[<<<fold_right_1143@71:4>@121:0>@127:0>](<fold_right_1143@71:1>:int,<<<fold_right_1143@71:4>@121:0>@127:0>:int) =
        ((<fold_right_1143@71:1> = 1) && (<<<fold_right_1143@71:4>@121:0>@127:0> = 0))
        P[<fold_right_1143@108:1>](<fold_right_1143@108:1>:int) = (<fold_right_1143@108:1> = 0)
        P[<<fold_right_1143@71:2>@79:0>](<fold_right_1143@71:1>:int,<<fold_right_1143@71:2>@79:0>:int) =
        ((<<fold_right_1143@71:2>@79:0> = 0) && (<fold_right_1143@71:1> = 1))
        P[<<fold_right_1143@71:0>@141:2>](<<fold_right_1143@71:0>@141:2>:int) = (<<fold_right_1143@71:0>@141:2> = 0)
        P[<<<make_list_1030@51:1>@67:1>@83:0>](<make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int) =
        ((<make_list_1030@51:0> = 1) &&
         ((<<<make_list_1030@51:1>@67:1>@83:0> = 0) && (<<make_list_1030@51:1>@67:0> = 1)))
        P[<<<fold_right_1143@71:0>@141:1>@147:0>](<<<fold_right_1143@71:0>@141:1>@147:0>:int) =
        (<<<fold_right_1143@71:0>@141:1>@147:0> = 0)
        P[<<<fold_right_1143@108:4>@111:0>@157:0>](<fold_right_1143@108:1>:int,<<<fold_right_1143@108:4>@111:0>@157:0>:int) =
        ((<fold_right_1143@108:1> = 0) && (<<<fold_right_1143@108:4>@111:0>@157:0> = 0))
        P[<<fold_right_1143@108:3>@159:0>](<fold_right_1143@108:1>:int,<<fold_right_1143@108:3>@159:0>:int) =
        ((<fold_right_1143@108:1> = 0) && (<<fold_right_1143@108:3>@159:0> = 0))
        P[<<fold_right_1143@71:3>@165:0>](<fold_right_1143@71:1>:int,<<fold_right_1143@71:3>@165:0>:int) =
        ((<fold_right_1143@71:1> = 1) && (<<fold_right_1143@71:3>@165:0> = 0))
        P[<<<fold_right_1143@71:3>@165:1>@171:0>](<fold_right_1143@71:1>:int,<<fold_right_1143@71:3>@165:0>:int,<<<fold_right_1143@71:3>@165:1>@171:0>:int) =
        ((<fold_right_1143@71:1> = 1) &&
         ((<<fold_right_1143@71:3>@165:0> = 0) &&
          (<<<fold_right_1143@71:3>@165:1>@171:0> = <<fold_right_1143@71:3>@165:0>)))
        P[<<<fold_right_1143@108:3>@159:1>@177:0>](<fold_right_1143@108:1>:int,<<fold_right_1143@108:3>@159:0>:int,<<<fold_right_1143@108:3>@159:1>@177:0>:int) =
        ((<fold_right_1143@108:1> = 0) &&
         ((<<fold_right_1143@108:3>@159:0> = 0) &&
          (<<<fold_right_1143@108:3>@159:1>@177:0> = <<fold_right_1143@108:3>@159:0>)))
        P[<<<<fold_right_1143@108:4>@111:0>@157:1>@179:0>](<fold_right_1143@108:1>:int,<<<fold_right_1143@108:4>@111:0>@157:0>:int,<<<<fold_right_1143@108:4>@111:0>@157:1>@179:0>:int) =
        ((<fold_right_1143@108:1> = 0) &&
         ((<<<fold_right_1143@108:4>@111:0>@157:0> = 0) &&
          (<<<<fold_right_1143@108:4>@111:0>@157:1>@179:0> = <<<fold_right_1143@108:4>@111:0>@157:0>)))
        P[<<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>](<<<fold_right_1143@71:0>@141:1>@147:0>:int,<<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>:int) =
        ((<<<fold_right_1143@71:0>@141:1>@147:0> = 0) &&
         (<<<<fold_right_1143@71:0>@141:1>@147:1>@189:0> = <<<fold_right_1143@71:0>@141:1>@147:0>))
        P[<<<fold_right_1143@71:0>@141:0>@199:0>](<<<fold_right_1143@71:0>@141:0>@199:0>:int) =
        (<<<fold_right_1143@71:0>@141:0>@199:0> = 0)
        P[<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>](<fold_right_1143@71:1>:int,<<fold_right_1143@71:2>@79:0>:int,<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>:int) =
        ((<fold_right_1143@71:1> = 1) &&
         ((<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0> = 0) && (<<fold_right_1143@71:2>@79:0> = 0)))
        P[<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>](<make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int,<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>:int) =
        ((<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0> = 0) &&
         ((<make_list_1030@51:0> = 1) &&
          ((<<<make_list_1030@51:1>@67:1>@83:0> = 0) && (<<make_list_1030@51:1>@67:0> = 1))))
        P[<<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:1>@243:0>](
        <make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int,<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>:int,<<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:1>@243:0>:int) =
        ((<<make_list_1030@51:1>@67:0> = 1) &&
         ((<<<make_list_1030@51:1>@67:1>@83:0> = 0) &&
          ((<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0> = 0) &&
           ((<make_list_1030@51:0> = 1) &&
            (<<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:1>@243:0> =
             (<make_list_1030@51:0> + <<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>))))))
        P[<<<<<fold_right_1143@71:2>@79:1>@102:0>@213:1>@247:0>](<fold_right_1143@71:1>:int,<<fold_right_1143@71:2>@79:0>:int,<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>:int,<<<<<fold_right_1143@71:2>@79:1>@102:0>@213:1>@247:0>:int) =
        ((<fold_right_1143@71:1> = 1) &&
         ((<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0> = 0) &&
          ((<<fold_right_1143@71:2>@79:0> = 0) &&
           (<<<<<fold_right_1143@71:2>@79:1>@102:0>@213:1>@247:0> = (1 + <<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>)))))
        P[<<<<fold_right_1143@71:0>@141:0>@199:1>@261:0>](<<<fold_right_1143@71:0>@141:0>@199:0>:int,<<<<fold_right_1143@71:0>@141:0>@199:1>@261:0>:int) =
        ((<<<fold_right_1143@71:0>@141:0>@199:0> = 0) &&
         (<<<<fold_right_1143@71:0>@141:0>@199:1>@261:0> = (1 + <<<fold_right_1143@71:0>@141:0>@199:0>)))
        P[<<<fold_right_1143@71:0>@141:3>@271:0>](<<fold_right_1143@71:0>@141:2>:int,<<<fold_right_1143@71:0>@141:3>@271:0>:int) =
        ((<<fold_right_1143@71:0>@141:2> = 0) &&
         (<<<fold_right_1143@71:0>@141:3>@271:0> = (1 + <<fold_right_1143@71:0>@141:2>)))
        P[<<<<fold_right_1143@71:4>@121:0>@127:1>@285:0>](<fold_right_1143@71:1>:int,<<<fold_right_1143@71:4>@121:0>@127:0>:int,<<<<fold_right_1143@71:4>@121:0>@127:1>@285:0>:int) =
        ((<fold_right_1143@71:1> = 1) &&
         ((<<<fold_right_1143@71:4>@121:0>@127:0> = 0) &&
          (<<<<fold_right_1143@71:4>@121:0>@127:1>@285:0> = (1 + <<<fold_right_1143@71:4>@121:0>@127:0>))))
        P[<fail_2169@292:0>](<fail_2169@292:0>:bool) = false
      upper bounds:
        P[<<<<fold_right_1143@71:4>@121:0>@127:1>@285:0>](var483:int,var484:int,var485:int) =
        ((var483 <> 1) || ((var484 <> 0) || (var485 >= 0)))
        P[<<<<fold_right_1143@108:4>@111:0>@157:1>@179:0>](var479:int,var480:int,var481:int) =
        ((var480 <> 0) || ((var479 <> 0) || ((1 + var481) >= 0)))
      begin GenHcSolver.classify_pids(268970)[4]
        output:
          [<<<<fold_right_1143@108:4>@111:0>@157:1>@179:0>;<<<<fold_right_1143@71:4>@121:0>@127:1>@285:0>]
      end GenHcSolver.classify_pids(268970)[4] (0.001000 sec.)
      begin ApronInterface.convex_hull_interpolate(269074)[4]
        lb:(((<fold_right_1143@108:1> = 0) &&
             ((<<<fold_right_1143@108:4>@111:0>@157:0> = 0) &&
              (<<<<fold_right_1143@108:4>@111:0>@157:1>@179:0> = <<<fold_right_1143@108:4>@111:0>@157:0>))) ||
            ((<fold_right_1143@108:1> = 1) &&
             ((<<<fold_right_1143@108:4>@111:0>@157:0> = 0) &&
              (<<<<fold_right_1143@108:4>@111:0>@157:1>@179:0> = (1 + <<<fold_right_1143@108:4>@111:0>@157:0>)))))
        nub:((not
                ((<<<fold_right_1143@108:4>@111:0>@157:0> <> 0) ||
                 ((<fold_right_1143@108:1> <> 0) || ((1 + <<<<fold_right_1143@108:4>@111:0>@157:1>@179:0>) >= 0)))) ||
             (not
                ((<fold_right_1143@108:1> <> 1) ||
                 ((<<<fold_right_1143@108:4>@111:0>@157:0> <> 0) ||
                  (<<<<fold_right_1143@108:4>@111:0>@157:1>@179:0> >= 0)))))
        begin ExtFormula.Formula.case_analysis_boolean(269149)[5]
          ts: ((<<<fold_right_1143@108:4>@111:0>@157:0> = 0) &&
               (((<fold_right_1143@108:1> = 0) &&
                 (<<<<fold_right_1143@108:4>@111:0>@157:1>@179:0> = <<<fold_right_1143@108:4>@111:0>@157:0>)) ||
                ((<fold_right_1143@108:1> = 1) &&
                 (<<<<fold_right_1143@108:4>@111:0>@157:1>@179:0> = (1 + <<<fold_right_1143@108:4>@111:0>@157:0>)))))
          
        end ExtFormula.Formula.case_analysis_boolean(269149)[5] (0.001000 sec.)
        begin ExtFormula.Formula.case_analysis_boolean(269224)[5]
          ts: ((<<<fold_right_1143@108:4>@111:0>@157:0> = 0) &&
               (((<fold_right_1143@108:1> = 0) && ((1 + <<<<fold_right_1143@108:4>@111:0>@157:1>@179:0>) < 0)) ||
                ((<fold_right_1143@108:1> = 1) && (<<<<fold_right_1143@108:4>@111:0>@157:1>@179:0> < 0))))
          
        end ExtFormula.Formula.case_analysis_boolean(269224)[5] (0.000000 sec.)
        lb':(((<<<<fold_right_1143@108:4>@111:0>@157:1>@179:0> + (-1 * <fold_right_1143@108:1>)) = 0) &&
             ((<<<fold_right_1143@108:4>@111:0>@157:0> = 0) &&
              (((1 + (-1 * <fold_right_1143@108:1>)) >= 0) && (<fold_right_1143@108:1> >= 0))))
        nub':((<<<fold_right_1143@108:4>@111:0>@157:0> = 0) &&
              (((1 + (-1 * <fold_right_1143@108:1>)) >= 0) &&
               ((((-2 + (-1 * <<<<fold_right_1143@108:4>@111:0>@157:1>@179:0>)) + <fold_right_1143@108:1>) >= 0) &&
                (<fold_right_1143@108:1> >= 0))))
        begin InterpProver.interpolate(269235)[5]
          begin InterpProver.interpolate_fresh(269236)[6]
            begin InterpProver.interpolate_log(269237)[7]
              input1: (((<<<<fold_right_1143@108:4>@111:0>@157:1>@179:0> + (-1 * <fold_right_1143@108:1>)) = 0) &&
                       ((<<<fold_right_1143@108:4>@111:0>@157:0> = 0) &&
                        (((1 + (-1 * <fold_right_1143@108:1>)) >= 0) && (<fold_right_1143@108:1> >= 0))))
              input2: ((<<<fold_right_1143@108:4>@111:0>@157:0> = 0) &&
                       (((1 + (-1 * <fold_right_1143@108:1>)) >= 0) &&
                        ((((-2 + (-1 * <<<<fold_right_1143@108:4>@111:0>@157:1>@179:0>)) + <fold_right_1143@108:1>) >=
                          0) && (<fold_right_1143@108:1> >= 0))))
              begin InterpProver.interpolate_check(269238)[8]
                begin InterpProver.interpolate_simplify(269239)[9]
                  begin InterpProver.interpolate_quick(269442)[10]
                    begin CsisatInterface.interpolate_csisat_wrap(269451)[11]
                      begin CsisatInterface.interpolate_csisat_post_process(269452)[12]
                        begin CsisatInterface.interpolate_csisat_log(269453)[13]
                          input1: (0 = v_sep_fold_right_1143_sep_108_sep_4_sep_111_sep_0_sep_157_sep_0 & v_sep_fold_right_1143_sep_108_sep_1 = v_sep_fold_right_1143_sep_108_sep_4_sep_111_sep_0_sep_157_sep_1_sep_179_sep_0 & 0 <= v_sep_fold_right_1143_sep_108_sep_1 & v_sep_fold_right_1143_sep_108_sep_1 <= 1)
                          input2: (0 = v_sep_fold_right_1143_sep_108_sep_4_sep_111_sep_0_sep_157_sep_0 & 0 <= v_sep_fold_right_1143_sep_108_sep_1 & v_sep_fold_right_1143_sep_108_sep_1 <= 1 & (2 + v_sep_fold_right_1143_sep_108_sep_4_sep_111_sep_0_sep_157_sep_1_sep_179_sep_0) <= v_sep_fold_right_1143_sep_108_sep_1)
                          begin CsisatInterface.interpolate_csisat_raw(269454)[14]
                            
                          end CsisatInterface.interpolate_csisat_raw(269454)[14] (0.000000 sec.)
                          output: (v_sep_fold_right_1143_sep_108_sep_1 + -1*v_sep_fold_right_1143_sep_108_sep_4_sep_111_sep_0_sep_157_sep_1_sep_179_sep_0) <= 0
                          
                        end CsisatInterface.interpolate_csisat_log(269453)[13] (0.000000 sec.)
                        after simplification: (v_sep_fold_right_1143_sep_108_sep_1 + -1*v_sep_fold_right_1143_sep_108_sep_4_sep_111_sep_0_sep_157_sep_1_sep_179_sep_0) <= 0
                        after dnf conversion: (((v_sep_fold_right_1143_sep_108_sep_1 + -1*v_sep_fold_right_1143_sep_108_sep_4_sep_111_sep_0_sep_157_sep_1_sep_179_sep_0) <= 0))
                        
                      end CsisatInterface.interpolate_csisat_post_process(269452)[12] (0.001000 sec.)
                      
                    end CsisatInterface.interpolate_csisat_wrap(269451)[11] (0.001000 sec.)
                    
                  end InterpProver.interpolate_quick(269442)[10] (0.001000 sec.)
                  
                end InterpProver.interpolate_simplify(269239)[9] (0.002000 sec.)
                
              end InterpProver.interpolate_check(269238)[8] (0.002999 sec.)
              output: (<fold_right_1143@108:1> <= <<<<fold_right_1143@108:4>@111:0>@157:1>@179:0>)
            end InterpProver.interpolate_log(269237)[7] (0.002999 sec.)
            
          end InterpProver.interpolate_fresh(269236)[6] (0.003999 sec.)
          
        end InterpProver.interpolate(269235)[5] (0.003999 sec.)
        output:
          P[<<<<fold_right_1143@108:4>@111:0>@157:1>@179:0>](<fold_right_1143@108:1>:int,<<<fold_right_1143@108:4>@111:0>@157:0>:int,<<<<fold_right_1143@108:4>@111:0>@157:1>@179:0>:int) =
          (<fold_right_1143@108:1> <= <<<<fold_right_1143@108:4>@111:0>@157:1>@179:0>)
          P[<<<<fold_right_1143@71:4>@121:0>@127:1>@285:0>](<fold_right_1143@108:1>:int,<<<fold_right_1143@108:4>@111:0>@157:0>:int,<<<<fold_right_1143@108:4>@111:0>@157:1>@179:0>:int) =
          (<fold_right_1143@108:1> <= <<<<fold_right_1143@108:4>@111:0>@157:1>@179:0>)
      end ApronInterface.convex_hull_interpolate(269074)[4] (0.004999 sec.)
      Horn clauses:
        P[<fail_2169@292:0>](<fail_2169@292:0>:bool)|- bot
        
        P[<<make_list_1030@51:1>@67:0>](<f_main_2164@289:0>:int,<f_main_2164@289:1>:int),
        ((<f_main_2164@289:1> < 0) && <fail_2169@292:0>) |- P[<fail_2169@292:0>](
        <fail_2169@292:0>:bool)
        
        P[<<<fold_right_1143@71:0>@141:3>@271:0>](<<<fold_right_1143@71:4>@121:0>@127:0>:int,<<<<fold_right_1143@71:4>@121:0>@127:1>@285:0>:int),
        P[<fold_right_1143@71:1>](<fold_right_1143@71:1>:int),
        ((<fold_right_1143@71:1> >= 1) && (<fold_right_1143@71:1> > <<<<fold_right_1143@71:4>@121:0>@127:1>@285:0>))
        |- bot
        
        P[<<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>](<<fold_right_1143@71:0>@141:2>:int,var322:int),
        P[<<<<fold_right_1143@71:0>@141:0>@199:1>@261:0>](var322:int,<<<fold_right_1143@71:0>@141:3>@271:0>:int),
        P[<<make_list_1030@51:1>@67:0>](<f_main_2163@123:0>:int,<fold_right_1143@71:1>:int),
        P[<<fold_right_1143@71:0>@141:2>](<<fold_right_1143@71:0>@141:2>:int)|- P[<<<fold_right_1143@71:0>@141:3>@271:0>](
        <<fold_right_1143@71:0>@141:2>:int,<<<fold_right_1143@71:0>@141:3>@271:0>:int)
        
        P[<<<<<fold_right_1143@71:2>@79:1>@102:0>@213:1>@247:0>](var325:int,0:int,<<<fold_right_1143@71:0>@141:0>@199:0>:int,<<<<fold_right_1143@71:0>@141:0>@199:1>@261:0>:int),
        P[<fold_right_1143@71:1>](var325:int), (1 <= var325)
        |- P[<<<<fold_right_1143@71:0>@141:0>@199:1>@261:0>](<<<fold_right_1143@71:0>@141:0>@199:0>:int,
                                                             <<<<fold_right_1143@71:0>@141:0>@199:1>@261:0>:int)
        
        P[<<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:1>@243:0>](
        <f_main_2163@123:0>:int,<fold_right_1143@71:1>:int,<<fold_right_1143@71:2>@79:0>:int,<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>:int,<<<<<fold_right_1143@71:2>@79:1>@102:0>@213:1>@247:0>:int),
        P[<<make_list_1030@51:1>@67:0>](<f_main_2163@123:0>:int,<fold_right_1143@71:1>:int),
        P[<fold_right_1143@71:1>](<fold_right_1143@71:1>:int)|- P[<<<<<fold_right_1143@71:2>@79:1>@102:0>@213:1>@247:0>](
        <fold_right_1143@71:1>:int,<<fold_right_1143@71:2>@79:0>:int,
        <<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>:int,<<<<<fold_right_1143@71:2>@79:1>@102:0>@213:1>@247:0>:int)
        
        P[<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>](<make_list_1030@51:0>:int,(
                                                              1 + var326):int,0:int,<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>:int),
        P[<<<make_list_1030@51:1>@67:1>@83:0>](<make_list_1030@51:0>:int,(
                                               1 + var326):int,0:int),
        P[<<make_list_1030@54:1>@57:0>]((-1 + <make_list_1030@51:0>):int,var326:int),
        P[<<<make_list_1030@51:1>@67:1>@83:0>](<make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int),
        P[<make_list_1030@51:0>](<make_list_1030@51:0>:int),
        P[<<make_list_1030@54:1>@57:0>]((-1 + <make_list_1030@51:0>):int,(
                                        -1 + <<make_list_1030@51:1>@67:0>):int),
        P[<<make_list_1030@51:1>@67:0>](<make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int),
        ((<<<make_list_1030@51:1>@67:1>@83:0> = 0) &&
         ((<make_list_1030@51:0> > 0) &&
          (<<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:1>@243:0> =
           (<make_list_1030@51:0> + <<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>))))
        |- P[<<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:1>@243:0>](
        <make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int,
        <<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>:int,<<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:1>@243:0>:int)
        
        P[<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>](<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int,<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>:int),
        P[<<make_list_1030@51:1>@67:0>](<make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int),
        P[<<fold_right_1143@71:2>@79:0>](<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int),
        P[<make_list_1030@51:0>](<make_list_1030@51:0>:int),
        P[<<<make_list_1030@51:1>@67:1>@83:0>](<make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int)|- P[<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>](
        <make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int,
        <<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>:int)
        
        P[<<<fold_right_1143@71:0>@141:0>@199:0>](<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>:int),
        P[<fold_right_1143@71:1>](<fold_right_1143@71:1>:int),
        P[<<fold_right_1143@71:2>@79:0>](<fold_right_1143@71:1>:int,<<fold_right_1143@71:2>@79:0>:int),
        ((<<fold_right_1143@71:2>@79:0> = 0) && (<fold_right_1143@71:1> >= 1))
        |- P[<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>](<fold_right_1143@71:1>:int,
                                                            <<fold_right_1143@71:2>@79:0>:int,
                                                            <<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>:int)
        
        P[<<make_list_1030@51:1>@67:0>](<f_main_2163@123:0>:int,<fold_right_1143@71:1>:int),
        P[<<fold_right_1143@71:0>@141:2>](var329:int),
        P[<<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>](var329:int,<<<fold_right_1143@71:0>@141:0>@199:0>:int)|- P[<<<fold_right_1143@71:0>@141:0>@199:0>](
        <<<fold_right_1143@71:0>@141:0>@199:0>:int)
        
        P[<fold_right_1143@71:1>](var330:int),
        ((1 <= var330) && (var330 <= (1 + <<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>)))
        |- P[<<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>](<<<fold_right_1143@71:0>@141:1>@147:0>:int,
                                                             <<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>:int)
        
        P[<fold_right_1143@108:1>](0:int),
        P[<<<fold_right_1143@108:3>@159:1>@177:0>](0:int,<<<fold_right_1143@108:4>@111:0>@157:0>:int,<<<<fold_right_1143@108:4>@111:0>@157:1>@179:0>:int),
        (0 > <<<<fold_right_1143@108:4>@111:0>@157:1>@179:0>) |- bot
        
        P[<<<fold_right_1143@71:3>@165:1>@171:0>]((1 + <fold_right_1143@108:1>):int,<<fold_right_1143@108:3>@159:0>:int,<<<fold_right_1143@108:3>@159:1>@177:0>:int),
        P[<fold_right_1143@71:1>]((1 + <fold_right_1143@108:1>):int),
        P[<fold_right_1143@108:1>](<fold_right_1143@108:1>:int), (<fold_right_1143@108:1> >= 0)
        |- P[<<<fold_right_1143@108:3>@159:1>@177:0>](<fold_right_1143@108:1>:int,
                                                      <<fold_right_1143@108:3>@159:0>:int,
                                                      <<<fold_right_1143@108:3>@159:1>@177:0>:int)
        
        P[<<make_list_1030@51:1>@67:0>](<f_main_2163@123:0>:int,<fold_right_1143@71:1>:int),
        P[<<fold_right_1143@71:3>@165:0>](<fold_right_1143@71:1>:int,<<fold_right_1143@71:3>@165:0>:int),
        P[<fold_right_1143@71:1>](<fold_right_1143@71:1>:int),
        (<<<fold_right_1143@71:3>@165:1>@171:0> = <<fold_right_1143@71:3>@165:0>)
        |- P[<<<fold_right_1143@71:3>@165:1>@171:0>](<fold_right_1143@71:1>:int,
                                                     <<fold_right_1143@71:3>@165:0>:int,
                                                     <<<fold_right_1143@71:3>@165:1>@171:0>:int)
        
        P[<fold_right_1143@71:1>](<fold_right_1143@71:1>:int),
        P[<<fold_right_1143@108:3>@159:0>]((-1 + <fold_right_1143@71:1>):int,<<fold_right_1143@71:3>@165:0>:int),
        (<fold_right_1143@71:1> >= 1)
        |- P[<<fold_right_1143@71:3>@165:0>](<fold_right_1143@71:1>:int,
                                             <<fold_right_1143@71:3>@165:0>:int)
        
        P[<fold_right_1143@108:1>](<fold_right_1143@108:1>:int),
        P[<<<fold_right_1143@108:4>@111:0>@157:0>](<fold_right_1143@108:1>:int,<<fold_right_1143@108:3>@159:0>:int),
        (<fold_right_1143@108:1> = 0)
        |- P[<<fold_right_1143@108:3>@159:0>](<fold_right_1143@108:1>:int,
                                              <<fold_right_1143@108:3>@159:0>:int)
        
        P[<<<fold_right_1143@71:0>@141:1>@147:0>](<<<fold_right_1143@108:4>@111:0>@157:0>:int),
        P[<fold_right_1143@71:1>]((1 + <fold_right_1143@108:1>):int),
        P[<fold_right_1143@108:1>](<fold_right_1143@108:1>:int), (<fold_right_1143@108:1> >= 0)
        |- P[<<<fold_right_1143@108:4>@111:0>@157:0>](<fold_right_1143@108:1>:int,
                                                      <<<fold_right_1143@108:4>@111:0>@157:0>:int)
        
        P[<<make_list_1030@51:1>@67:0>](<f_main_2163@123:0>:int,<fold_right_1143@71:1>:int),
        P[<<fold_right_1143@71:0>@141:2>](<<<fold_right_1143@71:0>@141:1>@147:0>:int)|- P[<<<fold_right_1143@71:0>@141:1>@147:0>](
        <<<fold_right_1143@71:0>@141:1>@147:0>:int)
        
        P[<<<fold_right_1143@71:4>@121:0>@127:0>](var333:int,<<fold_right_1143@71:0>@141:2>:int),
        P[<fold_right_1143@71:1>](var333:int), (1 <= var333)
        |- P[<<fold_right_1143@71:0>@141:2>](<<fold_right_1143@71:0>@141:2>:int)
        
        P[<<make_list_1030@51:1>@67:0>](<f_main_2163@123:0>:int,<fold_right_1143@71:1>:int),
        P[<fold_right_1143@71:1>](<fold_right_1143@71:1>:int), (<<<fold_right_1143@71:4>@121:0>@127:0> = 0)
        |- P[<<<fold_right_1143@71:4>@121:0>@127:0>](<fold_right_1143@71:1>:int,
                                                     <<<fold_right_1143@71:4>@121:0>@127:0>:int)
        
        P[<fold_right_1143@71:1>]((1 + <fold_right_1143@108:1>):int), (
        <fold_right_1143@108:1> >= 0) |- P[<fold_right_1143@108:1>](<fold_right_1143@108:1>:int)
        
        P[<<make_list_1030@51:1>@67:0>](<make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int),
        P[<<fold_right_1143@71:2>@79:0>](<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int),
        P[<make_list_1030@51:0>](<make_list_1030@51:0>:int)|- P[<<<make_list_1030@51:1>@67:1>@83:0>](
        <make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int)
        
        P[<fold_right_1143@71:1>](<fold_right_1143@71:1>:int),
        ((<<fold_right_1143@71:2>@79:0> = 0) && (<fold_right_1143@71:1> >= 1))
        |- P[<<fold_right_1143@71:2>@79:0>](<fold_right_1143@71:1>:int,
                                            <<fold_right_1143@71:2>@79:0>:int)
        
        P[<<make_list_1030@51:1>@67:0>](<f_main_2161@69:0>:int,<fold_right_1143@71:1>:int)|- P[<fold_right_1143@71:1>](
        <fold_right_1143@71:1>:int)
        
        P[<make_list_1030@51:0>](<make_list_1030@51:0>:int),
        P[<<make_list_1030@54:1>@57:0>]((-1 + <make_list_1030@51:0>):int,(
                                        -1 + <<make_list_1030@51:1>@67:0>):int), (
        <make_list_1030@51:0> > 0)
        |- P[<<make_list_1030@51:1>@67:0>](<make_list_1030@51:0>:int,
                                           <<make_list_1030@51:1>@67:0>:int)
        
        P[<make_list_1030@54:0>](<make_list_1030@54:0>:int),
        ((<<make_list_1030@54:1>@57:0> = 0) && (<make_list_1030@54:0> <= 0))
        |- P[<<make_list_1030@54:1>@57:0>](<make_list_1030@54:0>:int,
                                           <<make_list_1030@54:1>@57:0>:int)
        
        P[<make_list_1030@51:0>]((1 + <make_list_1030@54:0>):int), ((1 + <make_list_1030@54:0>) > 0)
        |- P[<make_list_1030@54:0>](<make_list_1030@54:0>:int)
        
        |- P[<make_list_1030@51:0>](<make_list_1030@51:0>:int)
      lower bounds:
        P[<make_list_1030@51:0>](<make_list_1030@51:0>:int) = true
        P[<make_list_1030@54:0>](<make_list_1030@54:0>:int) = ((1 + <make_list_1030@54:0>) > 0)
        P[<<make_list_1030@54:1>@57:0>](<make_list_1030@54:0>:int,<<make_list_1030@54:1>@57:0>:int) =
        ((<<make_list_1030@54:1>@57:0> = 0) && (<make_list_1030@54:0> = 0))
        P[<<make_list_1030@51:1>@67:0>](<make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int) =
        ((<make_list_1030@51:0> = 1) && (<<make_list_1030@51:1>@67:0> = 1))
        P[<fail_2169@292:0>](<fail_2169@292:0>:bool) = false
        P[<fold_right_1143@71:1>](<fold_right_1143@71:1>:int) = (<fold_right_1143@71:1> = 1)
        P[<<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>](<<<fold_right_1143@71:0>@141:1>@147:0>:int,<<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>:int) =
        (0 <= <<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>)
        P[<<<fold_right_1143@71:4>@121:0>@127:0>](<fold_right_1143@71:1>:int,<<<fold_right_1143@71:4>@121:0>@127:0>:int) =
        ((<fold_right_1143@71:1> = 1) && (<<<fold_right_1143@71:4>@121:0>@127:0> = 0))
        P[<fold_right_1143@108:1>](<fold_right_1143@108:1>:int) = (<fold_right_1143@108:1> = 0)
        P[<<fold_right_1143@71:2>@79:0>](<fold_right_1143@71:1>:int,<<fold_right_1143@71:2>@79:0>:int) =
        ((<<fold_right_1143@71:2>@79:0> = 0) && (<fold_right_1143@71:1> = 1))
        P[<<fold_right_1143@71:0>@141:2>](<<fold_right_1143@71:0>@141:2>:int) = (<<fold_right_1143@71:0>@141:2> = 0)
        P[<<<make_list_1030@51:1>@67:1>@83:0>](<make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int) =
        ((<make_list_1030@51:0> = 1) &&
         ((<<<make_list_1030@51:1>@67:1>@83:0> = 0) && (<<make_list_1030@51:1>@67:0> = 1)))
        P[<<<fold_right_1143@71:0>@141:0>@199:0>](<<<fold_right_1143@71:0>@141:0>@199:0>:int) =
        (0 <= <<<fold_right_1143@71:0>@141:0>@199:0>)
        P[<<<fold_right_1143@71:0>@141:1>@147:0>](<<<fold_right_1143@71:0>@141:1>@147:0>:int) =
        (<<<fold_right_1143@71:0>@141:1>@147:0> = 0)
        P[<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>](<fold_right_1143@71:1>:int,<<fold_right_1143@71:2>@79:0>:int,<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>:int) =
        ((<fold_right_1143@71:1> = 1) &&
         ((<<fold_right_1143@71:2>@79:0> = 0) && (0 <= <<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>)))
        P[<<<fold_right_1143@108:4>@111:0>@157:0>](<fold_right_1143@108:1>:int,<<<fold_right_1143@108:4>@111:0>@157:0>:int) =
        ((<fold_right_1143@108:1> = 0) && (<<<fold_right_1143@108:4>@111:0>@157:0> = 0))
        P[<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>](<make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int,<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>:int) =
        ((<make_list_1030@51:0> = 1) &&
         ((<<<make_list_1030@51:1>@67:1>@83:0> = 0) &&
          ((<<make_list_1030@51:1>@67:0> = 1) && (0 <= <<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>))))
        P[<<fold_right_1143@108:3>@159:0>](<fold_right_1143@108:1>:int,<<fold_right_1143@108:3>@159:0>:int) =
        ((<fold_right_1143@108:1> = 0) && (<<fold_right_1143@108:3>@159:0> = 0))
        P[<<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:1>@243:0>](
        <make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int,<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>:int,<<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:1>@243:0>:int) =
        ((<<make_list_1030@51:1>@67:0> = 1) &&
         ((<<<make_list_1030@51:1>@67:1>@83:0> = 0) &&
          ((<make_list_1030@51:0> = 1) &&
           ((0 <= <<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>) &&
            (<<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:1>@243:0> =
             (<make_list_1030@51:0> + <<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>))))))
        P[<<fold_right_1143@71:3>@165:0>](<fold_right_1143@71:1>:int,<<fold_right_1143@71:3>@165:0>:int) =
        ((<fold_right_1143@71:1> = 1) && (<<fold_right_1143@71:3>@165:0> = 0))
        P[<<<<<fold_right_1143@71:2>@79:1>@102:0>@213:1>@247:0>](<fold_right_1143@71:1>:int,<<fold_right_1143@71:2>@79:0>:int,<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>:int,<<<<<fold_right_1143@71:2>@79:1>@102:0>@213:1>@247:0>:int) =
        ((<fold_right_1143@71:1> = 1) &&
         ((<<fold_right_1143@71:2>@79:0> = 0) &&
          ((0 <= <<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>) &&
           (<<<<<fold_right_1143@71:2>@79:1>@102:0>@213:1>@247:0> = (1 + <<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>)))))
        P[<<<fold_right_1143@71:3>@165:1>@171:0>](<fold_right_1143@71:1>:int,<<fold_right_1143@71:3>@165:0>:int,<<<fold_right_1143@71:3>@165:1>@171:0>:int) =
        ((<fold_right_1143@71:1> = 1) &&
         ((<<fold_right_1143@71:3>@165:0> = 0) &&
          (<<<fold_right_1143@71:3>@165:1>@171:0> = <<fold_right_1143@71:3>@165:0>)))
        P[<<<<fold_right_1143@71:0>@141:0>@199:1>@261:0>](<<<fold_right_1143@71:0>@141:0>@199:0>:int,<<<<fold_right_1143@71:0>@141:0>@199:1>@261:0>:int) =
        ((<<<<fold_right_1143@71:0>@141:0>@199:1>@261:0> = (1 + <<<fold_right_1143@71:0>@141:0>@199:0>)) &&
         (0 <= <<<fold_right_1143@71:0>@141:0>@199:0>))
        P[<<<fold_right_1143@108:3>@159:1>@177:0>](<fold_right_1143@108:1>:int,<<fold_right_1143@108:3>@159:0>:int,<<<fold_right_1143@108:3>@159:1>@177:0>:int) =
        ((<fold_right_1143@108:1> = 0) &&
         ((<<fold_right_1143@108:3>@159:0> = 0) &&
          (<<<fold_right_1143@108:3>@159:1>@177:0> = <<fold_right_1143@108:3>@159:0>)))
        P[<<<fold_right_1143@71:0>@141:3>@271:0>](<<fold_right_1143@71:0>@141:2>:int,<<<fold_right_1143@71:0>@141:3>@271:0>:int) =
        ((<<fold_right_1143@71:0>@141:2> = 0) && (1 <= <<<fold_right_1143@71:0>@141:3>@271:0>))
      upper bounds:
        P[<<<fold_right_1143@108:3>@159:1>@177:0>](var489:int,var490:int,var491:int) = ((var489 <> 0) || (0 <= var491))
        P[<<<fold_right_1143@71:3>@165:1>@171:0>](var486:int,var487:int,var488:int) = ((var486 <> 1) || (0 <= var488))
      begin GenHcSolver.classify_pids(296144)[4]
        output:
          [<<<fold_right_1143@71:3>@165:1>@171:0>;<<<fold_right_1143@108:3>@159:1>@177:0>]
      end GenHcSolver.classify_pids(296144)[4] (0.000000 sec.)
      begin ApronInterface.convex_hull_interpolate(296203)[4]
        lb:(((<fold_right_1143@71:1> = 1) &&
             ((<<fold_right_1143@71:3>@165:0> = 0) &&
              (<<<fold_right_1143@71:3>@165:1>@171:0> = <<fold_right_1143@71:3>@165:0>))) ||
            ((<fold_right_1143@71:1> = 0) &&
             ((<<fold_right_1143@71:3>@165:0> = 0) &&
              (<<<fold_right_1143@71:3>@165:1>@171:0> = <<fold_right_1143@71:3>@165:0>))))
        nub:((not ((<fold_right_1143@71:1> <> 1) || (0 <= <<<fold_right_1143@71:3>@165:1>@171:0>))) ||
             (not ((<fold_right_1143@71:1> <> 0) || (0 <= <<<fold_right_1143@71:3>@165:1>@171:0>))))
        begin ExtFormula.Formula.case_analysis_boolean(296262)[5]
          ts: (((<<fold_right_1143@71:3>@165:0> = 0) &&
                (<<<fold_right_1143@71:3>@165:1>@171:0> = <<fold_right_1143@71:3>@165:0>)) &&
               ((<fold_right_1143@71:1> = 0) || (<fold_right_1143@71:1> = 1)))
          
        end ExtFormula.Formula.case_analysis_boolean(296262)[5] (0.000000 sec.)
        begin ExtFormula.Formula.case_analysis_boolean(296304)[5]
          ts: ((0 > <<<fold_right_1143@71:3>@165:1>@171:0>) &&
               ((<fold_right_1143@71:1> = 0) || (<fold_right_1143@71:1> = 1)))
          
        end ExtFormula.Formula.case_analysis_boolean(296304)[5] (0.000000 sec.)
        lb':((<<<fold_right_1143@71:3>@165:1>@171:0> = 0) &&
             ((<<fold_right_1143@71:3>@165:0> = 0) &&
              (((1 + (-1 * <fold_right_1143@71:1>)) >= 0) && (<fold_right_1143@71:1> >= 0))))
        nub':(((1 + (-1 * <fold_right_1143@71:1>)) >= 0) &&
              (((-1 + (-1 * <<<fold_right_1143@71:3>@165:1>@171:0>)) >= 0) && (<fold_right_1143@71:1> >= 0)))
        begin InterpProver.interpolate(296312)[5]
          begin InterpProver.interpolate_fresh(296313)[6]
            begin InterpProver.interpolate_log(296314)[7]
              input1: ((<<<fold_right_1143@71:3>@165:1>@171:0> = 0) &&
                       ((<<fold_right_1143@71:3>@165:0> = 0) &&
                        (((1 + (-1 * <fold_right_1143@71:1>)) >= 0) && (<fold_right_1143@71:1> >= 0))))
              input2: (((1 + (-1 * <fold_right_1143@71:1>)) >= 0) &&
                       (((-1 + (-1 * <<<fold_right_1143@71:3>@165:1>@171:0>)) >= 0) && (<fold_right_1143@71:1> >= 0)))
              begin InterpProver.interpolate_check(296315)[8]
                begin InterpProver.interpolate_simplify(296316)[9]
                  begin InterpProver.interpolate_quick(296505)[10]
                    begin CsisatInterface.interpolate_csisat_wrap(296514)[11]
                      begin CsisatInterface.interpolate_csisat_post_process(296515)[12]
                        begin CsisatInterface.interpolate_csisat_log(296516)[13]
                          input1: (0 = v_sep_fold_right_1143_sep_71_sep_3_sep_165_sep_1_sep_171_sep_0 & 0 <= v_sep_fold_right_1143_sep_71_sep_1 & v_sep_fold_right_1143_sep_71_sep_1 <= 1)
                          input2: (0 <= v_sep_fold_right_1143_sep_71_sep_1 & v_sep_fold_right_1143_sep_71_sep_1 <= 1 & (1 + v_sep_fold_right_1143_sep_71_sep_3_sep_165_sep_1_sep_171_sep_0) <= 0)
                          begin CsisatInterface.interpolate_csisat_raw(296517)[14]
                            
                          end CsisatInterface.interpolate_csisat_raw(296517)[14] (0.000000 sec.)
                          output: -2*v_sep_fold_right_1143_sep_71_sep_3_sep_165_sep_1_sep_171_sep_0 <= 0
                          
                        end CsisatInterface.interpolate_csisat_log(296516)[13] (0.000000 sec.)
                        after simplification: -2*v_sep_fold_right_1143_sep_71_sep_3_sep_165_sep_1_sep_171_sep_0 <= 0
                        after dnf conversion: ((-2*v_sep_fold_right_1143_sep_71_sep_3_sep_165_sep_1_sep_171_sep_0 <= 0))
                        
                      end CsisatInterface.interpolate_csisat_post_process(296515)[12] (0.000000 sec.)
                      
                    end CsisatInterface.interpolate_csisat_wrap(296514)[11] (0.000000 sec.)
                    
                  end InterpProver.interpolate_quick(296505)[10] (0.001000 sec.)
                  
                end InterpProver.interpolate_simplify(296316)[9] (0.002000 sec.)
                
              end InterpProver.interpolate_check(296315)[8] (0.003000 sec.)
              output: (0 <= <<<fold_right_1143@71:3>@165:1>@171:0>)
            end InterpProver.interpolate_log(296314)[7] (0.004000 sec.)
            
          end InterpProver.interpolate_fresh(296313)[6] (0.004000 sec.)
          
        end InterpProver.interpolate(296312)[5] (0.004000 sec.)
        output:
          P[<<<fold_right_1143@71:3>@165:1>@171:0>](<fold_right_1143@71:1>:int,<<fold_right_1143@71:3>@165:0>:int,<<<fold_right_1143@71:3>@165:1>@171:0>:int) =
          (0 <= <<<fold_right_1143@71:3>@165:1>@171:0>)
          P[<<<fold_right_1143@108:3>@159:1>@177:0>](<fold_right_1143@71:1>:int,<<fold_right_1143@71:3>@165:0>:int,<<<fold_right_1143@71:3>@165:1>@171:0>:int) =
          (0 <= <<<fold_right_1143@71:3>@165:1>@171:0>)
      end ApronInterface.convex_hull_interpolate(296203)[4] (0.004000 sec.)
      Horn clauses:
        P[<fail_2169@292:0>](<fail_2169@292:0>:bool)|- bot
        
        P[<<make_list_1030@51:1>@67:0>](<f_main_2164@289:0>:int,<f_main_2164@289:1>:int),
        ((<f_main_2164@289:1> < 0) && <fail_2169@292:0>) |- P[<fail_2169@292:0>](
        <fail_2169@292:0>:bool)
        
        P[<<<fold_right_1143@71:0>@141:3>@271:0>](<<<fold_right_1143@71:4>@121:0>@127:0>:int,<<<<fold_right_1143@71:4>@121:0>@127:1>@285:0>:int),
        P[<fold_right_1143@71:1>](<fold_right_1143@71:1>:int),
        ((<fold_right_1143@71:1> >= 1) && (<fold_right_1143@71:1> > <<<<fold_right_1143@71:4>@121:0>@127:1>@285:0>))
        |- bot
        
        P[<<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>](<<fold_right_1143@71:0>@141:2>:int,var322:int),
        P[<<<<fold_right_1143@71:0>@141:0>@199:1>@261:0>](var322:int,<<<fold_right_1143@71:0>@141:3>@271:0>:int),
        P[<<make_list_1030@51:1>@67:0>](<f_main_2163@123:0>:int,<fold_right_1143@71:1>:int),
        P[<<fold_right_1143@71:0>@141:2>](<<fold_right_1143@71:0>@141:2>:int)|- P[<<<fold_right_1143@71:0>@141:3>@271:0>](
        <<fold_right_1143@71:0>@141:2>:int,<<<fold_right_1143@71:0>@141:3>@271:0>:int)
        
        P[<<<<<fold_right_1143@71:2>@79:1>@102:0>@213:1>@247:0>](var325:int,0:int,<<<fold_right_1143@71:0>@141:0>@199:0>:int,<<<<fold_right_1143@71:0>@141:0>@199:1>@261:0>:int),
        P[<fold_right_1143@71:1>](var325:int), (1 <= var325)
        |- P[<<<<fold_right_1143@71:0>@141:0>@199:1>@261:0>](<<<fold_right_1143@71:0>@141:0>@199:0>:int,
                                                             <<<<fold_right_1143@71:0>@141:0>@199:1>@261:0>:int)
        
        P[<<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:1>@243:0>](
        <f_main_2163@123:0>:int,<fold_right_1143@71:1>:int,<<fold_right_1143@71:2>@79:0>:int,<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>:int,<<<<<fold_right_1143@71:2>@79:1>@102:0>@213:1>@247:0>:int),
        P[<<make_list_1030@51:1>@67:0>](<f_main_2163@123:0>:int,<fold_right_1143@71:1>:int),
        P[<fold_right_1143@71:1>](<fold_right_1143@71:1>:int)|- P[<<<<<fold_right_1143@71:2>@79:1>@102:0>@213:1>@247:0>](
        <fold_right_1143@71:1>:int,<<fold_right_1143@71:2>@79:0>:int,
        <<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>:int,<<<<<fold_right_1143@71:2>@79:1>@102:0>@213:1>@247:0>:int)
        
        P[<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>](<make_list_1030@51:0>:int,(
                                                              1 + var326):int,0:int,<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>:int),
        P[<<<make_list_1030@51:1>@67:1>@83:0>](<make_list_1030@51:0>:int,(
                                               1 + var326):int,0:int),
        P[<<make_list_1030@54:1>@57:0>]((-1 + <make_list_1030@51:0>):int,var326:int),
        P[<<<make_list_1030@51:1>@67:1>@83:0>](<make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int),
        P[<make_list_1030@51:0>](<make_list_1030@51:0>:int),
        P[<<make_list_1030@54:1>@57:0>]((-1 + <make_list_1030@51:0>):int,(
                                        -1 + <<make_list_1030@51:1>@67:0>):int),
        P[<<make_list_1030@51:1>@67:0>](<make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int),
        ((<<<make_list_1030@51:1>@67:1>@83:0> = 0) &&
         ((<make_list_1030@51:0> > 0) &&
          (<<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:1>@243:0> =
           (<make_list_1030@51:0> + <<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>))))
        |- P[<<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:1>@243:0>](
        <make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int,
        <<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>:int,<<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:1>@243:0>:int)
        
        P[<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>](<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int,<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>:int),
        P[<<make_list_1030@51:1>@67:0>](<make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int),
        P[<<fold_right_1143@71:2>@79:0>](<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int),
        P[<make_list_1030@51:0>](<make_list_1030@51:0>:int),
        P[<<<make_list_1030@51:1>@67:1>@83:0>](<make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int)|- P[<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>](
        <make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int,
        <<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>:int)
        
        P[<<<fold_right_1143@71:0>@141:0>@199:0>](<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>:int),
        P[<fold_right_1143@71:1>](<fold_right_1143@71:1>:int),
        P[<<fold_right_1143@71:2>@79:0>](<fold_right_1143@71:1>:int,<<fold_right_1143@71:2>@79:0>:int),
        ((<<fold_right_1143@71:2>@79:0> = 0) && (<fold_right_1143@71:1> >= 1))
        |- P[<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>](<fold_right_1143@71:1>:int,
                                                            <<fold_right_1143@71:2>@79:0>:int,
                                                            <<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>:int)
        
        P[<<make_list_1030@51:1>@67:0>](<f_main_2163@123:0>:int,<fold_right_1143@71:1>:int),
        P[<<fold_right_1143@71:0>@141:2>](var329:int),
        P[<<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>](var329:int,<<<fold_right_1143@71:0>@141:0>@199:0>:int)|- P[<<<fold_right_1143@71:0>@141:0>@199:0>](
        <<<fold_right_1143@71:0>@141:0>@199:0>:int)
        
        P[<fold_right_1143@71:1>](var330:int),
        ((1 <= var330) && (var330 <= (1 + <<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>)))
        |- P[<<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>](<<<fold_right_1143@71:0>@141:1>@147:0>:int,
                                                             <<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>:int)
        
        P[<<make_list_1030@51:1>@67:0>](<f_main_2163@123:0>:int,<fold_right_1143@71:1>:int),
        P[<<fold_right_1143@71:3>@165:0>](<fold_right_1143@71:1>:int,<<<fold_right_1143@71:3>@165:1>@171:0>:int),
        P[<fold_right_1143@71:1>](<fold_right_1143@71:1>:int), (0 > <<<fold_right_1143@71:3>@165:1>@171:0>) |- bot
        
        P[<fold_right_1143@71:1>](<fold_right_1143@71:1>:int),
        P[<<fold_right_1143@108:3>@159:0>]((-1 + <fold_right_1143@71:1>):int,<<fold_right_1143@71:3>@165:0>:int),
        (<fold_right_1143@71:1> >= 1)
        |- P[<<fold_right_1143@71:3>@165:0>](<fold_right_1143@71:1>:int,
                                             <<fold_right_1143@71:3>@165:0>:int)
        
        P[<fold_right_1143@108:1>](<fold_right_1143@108:1>:int),
        P[<<<fold_right_1143@108:4>@111:0>@157:0>](<fold_right_1143@108:1>:int,<<fold_right_1143@108:3>@159:0>:int),
        (<fold_right_1143@108:1> = 0)
        |- P[<<fold_right_1143@108:3>@159:0>](<fold_right_1143@108:1>:int,
                                              <<fold_right_1143@108:3>@159:0>:int)
        
        P[<<<fold_right_1143@71:0>@141:1>@147:0>](<<<fold_right_1143@108:4>@111:0>@157:0>:int),
        P[<fold_right_1143@71:1>]((1 + <fold_right_1143@108:1>):int),
        P[<fold_right_1143@108:1>](<fold_right_1143@108:1>:int), (<fold_right_1143@108:1> >= 0)
        |- P[<<<fold_right_1143@108:4>@111:0>@157:0>](<fold_right_1143@108:1>:int,
                                                      <<<fold_right_1143@108:4>@111:0>@157:0>:int)
        
        P[<<make_list_1030@51:1>@67:0>](<f_main_2163@123:0>:int,<fold_right_1143@71:1>:int),
        P[<<fold_right_1143@71:0>@141:2>](<<<fold_right_1143@71:0>@141:1>@147:0>:int)|- P[<<<fold_right_1143@71:0>@141:1>@147:0>](
        <<<fold_right_1143@71:0>@141:1>@147:0>:int)
        
        P[<<<fold_right_1143@71:4>@121:0>@127:0>](var333:int,<<fold_right_1143@71:0>@141:2>:int),
        P[<fold_right_1143@71:1>](var333:int), (1 <= var333)
        |- P[<<fold_right_1143@71:0>@141:2>](<<fold_right_1143@71:0>@141:2>:int)
        
        P[<<make_list_1030@51:1>@67:0>](<f_main_2163@123:0>:int,<fold_right_1143@71:1>:int),
        P[<fold_right_1143@71:1>](<fold_right_1143@71:1>:int), (<<<fold_right_1143@71:4>@121:0>@127:0> = 0)
        |- P[<<<fold_right_1143@71:4>@121:0>@127:0>](<fold_right_1143@71:1>:int,
                                                     <<<fold_right_1143@71:4>@121:0>@127:0>:int)
        
        P[<fold_right_1143@71:1>]((1 + <fold_right_1143@108:1>):int), (
        <fold_right_1143@108:1> >= 0) |- P[<fold_right_1143@108:1>](<fold_right_1143@108:1>:int)
        
        P[<<make_list_1030@51:1>@67:0>](<make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int),
        P[<<fold_right_1143@71:2>@79:0>](<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int),
        P[<make_list_1030@51:0>](<make_list_1030@51:0>:int)|- P[<<<make_list_1030@51:1>@67:1>@83:0>](
        <make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int)
        
        P[<fold_right_1143@71:1>](<fold_right_1143@71:1>:int),
        ((<<fold_right_1143@71:2>@79:0> = 0) && (<fold_right_1143@71:1> >= 1))
        |- P[<<fold_right_1143@71:2>@79:0>](<fold_right_1143@71:1>:int,
                                            <<fold_right_1143@71:2>@79:0>:int)
        
        P[<<make_list_1030@51:1>@67:0>](<f_main_2161@69:0>:int,<fold_right_1143@71:1>:int)|- P[<fold_right_1143@71:1>](
        <fold_right_1143@71:1>:int)
        
        P[<make_list_1030@51:0>](<make_list_1030@51:0>:int),
        P[<<make_list_1030@54:1>@57:0>]((-1 + <make_list_1030@51:0>):int,(
                                        -1 + <<make_list_1030@51:1>@67:0>):int), (
        <make_list_1030@51:0> > 0)
        |- P[<<make_list_1030@51:1>@67:0>](<make_list_1030@51:0>:int,
                                           <<make_list_1030@51:1>@67:0>:int)
        
        P[<make_list_1030@54:0>](<make_list_1030@54:0>:int),
        ((<<make_list_1030@54:1>@57:0> = 0) && (<make_list_1030@54:0> <= 0))
        |- P[<<make_list_1030@54:1>@57:0>](<make_list_1030@54:0>:int,
                                           <<make_list_1030@54:1>@57:0>:int)
        
        P[<make_list_1030@51:0>]((1 + <make_list_1030@54:0>):int), ((1 + <make_list_1030@54:0>) > 0)
        |- P[<make_list_1030@54:0>](<make_list_1030@54:0>:int)
        
        |- P[<make_list_1030@51:0>](<make_list_1030@51:0>:int)
      lower bounds:
        P[<make_list_1030@51:0>](<make_list_1030@51:0>:int) = true
        P[<make_list_1030@54:0>](<make_list_1030@54:0>:int) = ((1 + <make_list_1030@54:0>) > 0)
        P[<<make_list_1030@54:1>@57:0>](<make_list_1030@54:0>:int,<<make_list_1030@54:1>@57:0>:int) =
        ((<<make_list_1030@54:1>@57:0> = 0) && (<make_list_1030@54:0> = 0))
        P[<<make_list_1030@51:1>@67:0>](<make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int) =
        ((<make_list_1030@51:0> = 1) && (<<make_list_1030@51:1>@67:0> = 1))
        P[<fail_2169@292:0>](<fail_2169@292:0>:bool) = false
        P[<fold_right_1143@71:1>](<fold_right_1143@71:1>:int) = (<fold_right_1143@71:1> = 1)
        P[<<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>](<<<fold_right_1143@71:0>@141:1>@147:0>:int,<<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>:int) =
        (0 <= <<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>)
        P[<<<fold_right_1143@71:4>@121:0>@127:0>](<fold_right_1143@71:1>:int,<<<fold_right_1143@71:4>@121:0>@127:0>:int) =
        ((<fold_right_1143@71:1> = 1) && (<<<fold_right_1143@71:4>@121:0>@127:0> = 0))
        P[<fold_right_1143@108:1>](<fold_right_1143@108:1>:int) = (<fold_right_1143@108:1> = 0)
        P[<<fold_right_1143@71:2>@79:0>](<fold_right_1143@71:1>:int,<<fold_right_1143@71:2>@79:0>:int) =
        ((<<fold_right_1143@71:2>@79:0> = 0) && (<fold_right_1143@71:1> = 1))
        P[<<fold_right_1143@71:0>@141:2>](<<fold_right_1143@71:0>@141:2>:int) = (<<fold_right_1143@71:0>@141:2> = 0)
        P[<<<make_list_1030@51:1>@67:1>@83:0>](<make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int) =
        ((<make_list_1030@51:0> = 1) &&
         ((<<<make_list_1030@51:1>@67:1>@83:0> = 0) && (<<make_list_1030@51:1>@67:0> = 1)))
        P[<<<fold_right_1143@71:0>@141:0>@199:0>](<<<fold_right_1143@71:0>@141:0>@199:0>:int) =
        (0 <= <<<fold_right_1143@71:0>@141:0>@199:0>)
        P[<<<fold_right_1143@71:0>@141:1>@147:0>](<<<fold_right_1143@71:0>@141:1>@147:0>:int) =
        (<<<fold_right_1143@71:0>@141:1>@147:0> = 0)
        P[<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>](<fold_right_1143@71:1>:int,<<fold_right_1143@71:2>@79:0>:int,<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>:int) =
        ((<fold_right_1143@71:1> = 1) &&
         ((<<fold_right_1143@71:2>@79:0> = 0) && (0 <= <<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>)))
        P[<<<fold_right_1143@108:4>@111:0>@157:0>](<fold_right_1143@108:1>:int,<<<fold_right_1143@108:4>@111:0>@157:0>:int) =
        ((<fold_right_1143@108:1> = 0) && (<<<fold_right_1143@108:4>@111:0>@157:0> = 0))
        P[<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>](<make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int,<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>:int) =
        ((<make_list_1030@51:0> = 1) &&
         ((<<<make_list_1030@51:1>@67:1>@83:0> = 0) &&
          ((<<make_list_1030@51:1>@67:0> = 1) && (0 <= <<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>))))
        P[<<fold_right_1143@108:3>@159:0>](<fold_right_1143@108:1>:int,<<fold_right_1143@108:3>@159:0>:int) =
        ((<fold_right_1143@108:1> = 0) && (<<fold_right_1143@108:3>@159:0> = 0))
        P[<<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:1>@243:0>](
        <make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int,<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>:int,<<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:1>@243:0>:int) =
        ((<<make_list_1030@51:1>@67:0> = 1) &&
         ((<<<make_list_1030@51:1>@67:1>@83:0> = 0) &&
          ((<make_list_1030@51:0> = 1) &&
           ((0 <= <<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>) &&
            (<<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:1>@243:0> =
             (<make_list_1030@51:0> + <<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>))))))
        P[<<fold_right_1143@71:3>@165:0>](<fold_right_1143@71:1>:int,<<fold_right_1143@71:3>@165:0>:int) =
        ((<fold_right_1143@71:1> = 1) && (<<fold_right_1143@71:3>@165:0> = 0))
        P[<<<<<fold_right_1143@71:2>@79:1>@102:0>@213:1>@247:0>](<fold_right_1143@71:1>:int,<<fold_right_1143@71:2>@79:0>:int,<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>:int,<<<<<fold_right_1143@71:2>@79:1>@102:0>@213:1>@247:0>:int) =
        ((<fold_right_1143@71:1> = 1) &&
         ((<<fold_right_1143@71:2>@79:0> = 0) &&
          ((0 <= <<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>) &&
           (<<<<<fold_right_1143@71:2>@79:1>@102:0>@213:1>@247:0> = (1 + <<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>)))))
        P[<<<<fold_right_1143@71:0>@141:0>@199:1>@261:0>](<<<fold_right_1143@71:0>@141:0>@199:0>:int,<<<<fold_right_1143@71:0>@141:0>@199:1>@261:0>:int) =
        ((<<<<fold_right_1143@71:0>@141:0>@199:1>@261:0> = (1 + <<<fold_right_1143@71:0>@141:0>@199:0>)) &&
         (0 <= <<<fold_right_1143@71:0>@141:0>@199:0>))
        P[<<<fold_right_1143@71:0>@141:3>@271:0>](<<fold_right_1143@71:0>@141:2>:int,<<<fold_right_1143@71:0>@141:3>@271:0>:int) =
        ((<<fold_right_1143@71:0>@141:2> = 0) && (1 <= <<<fold_right_1143@71:0>@141:3>@271:0>))
      upper bounds:
        P[<<fold_right_1143@71:3>@165:0>](var494:int,var495:int) = ((var494 <> 1) || (0 <= var495))
        P[<<fold_right_1143@108:3>@159:0>](var492:int,var493:int) = ((var492 <> 0) || (0 <= var493))
      begin GenHcSolver.classify_pids(321215)[4]
        output:
          [<<fold_right_1143@108:3>@159:0>;<<fold_right_1143@71:3>@165:0>]
      end GenHcSolver.classify_pids(321215)[4] (0.001000 sec.)
      begin ApronInterface.convex_hull_interpolate(321274)[4]
        lb:(((<fold_right_1143@108:1> = 0) && (<<fold_right_1143@108:3>@159:0> = 0)) ||
            ((<fold_right_1143@108:1> = 1) && (<<fold_right_1143@108:3>@159:0> = 0)))
        nub:((not ((<fold_right_1143@108:1> <> 0) || (0 <= <<fold_right_1143@108:3>@159:0>))) ||
             (not ((<fold_right_1143@108:1> <> 1) || (0 <= <<fold_right_1143@108:3>@159:0>))))
        begin ExtFormula.Formula.case_analysis_boolean(321301)[5]
          ts: ((<<fold_right_1143@108:3>@159:0> = 0) &&
               ((<fold_right_1143@108:1> = 0) || (<fold_right_1143@108:1> = 1)))
          
        end ExtFormula.Formula.case_analysis_boolean(321301)[5] (0.000000 sec.)
        begin ExtFormula.Formula.case_analysis_boolean(321339)[5]
          ts: ((0 > <<fold_right_1143@108:3>@159:0>) &&
               ((<fold_right_1143@108:1> = 0) || (<fold_right_1143@108:1> = 1)))
          
        end ExtFormula.Formula.case_analysis_boolean(321339)[5] (0.000999 sec.)
        lb':((<<fold_right_1143@108:3>@159:0> = 0) &&
             (((1 + (-1 * <fold_right_1143@108:1>)) >= 0) && (<fold_right_1143@108:1> >= 0)))
        nub':(((1 + (-1 * <fold_right_1143@108:1>)) >= 0) &&
              (((-1 + (-1 * <<fold_right_1143@108:3>@159:0>)) >= 0) && (<fold_right_1143@108:1> >= 0)))
        begin InterpProver.interpolate(321347)[5]
          begin InterpProver.interpolate_fresh(321348)[6]
            begin InterpProver.interpolate_log(321349)[7]
              input1: ((<<fold_right_1143@108:3>@159:0> = 0) &&
                       (((1 + (-1 * <fold_right_1143@108:1>)) >= 0) && (<fold_right_1143@108:1> >= 0)))
              input2: (((1 + (-1 * <fold_right_1143@108:1>)) >= 0) &&
                       (((-1 + (-1 * <<fold_right_1143@108:3>@159:0>)) >= 0) && (<fold_right_1143@108:1> >= 0)))
              begin InterpProver.interpolate_check(321350)[8]
                begin InterpProver.interpolate_simplify(321351)[9]
                  begin InterpProver.interpolate_quick(321468)[10]
                    begin CsisatInterface.interpolate_csisat_wrap(321477)[11]
                      begin CsisatInterface.interpolate_csisat_post_process(321478)[12]
                        begin CsisatInterface.interpolate_csisat_log(321479)[13]
                          input1: (0 = v_sep_fold_right_1143_sep_108_sep_3_sep_159_sep_0 & 0 <= v_sep_fold_right_1143_sep_108_sep_1 & v_sep_fold_right_1143_sep_108_sep_1 <= 1)
                          input2: (0 <= v_sep_fold_right_1143_sep_108_sep_1 & v_sep_fold_right_1143_sep_108_sep_1 <= 1 & (1 + v_sep_fold_right_1143_sep_108_sep_3_sep_159_sep_0) <= 0)
                          begin CsisatInterface.interpolate_csisat_raw(321480)[14]
                            
                          end CsisatInterface.interpolate_csisat_raw(321480)[14] (0.000000 sec.)
                          output: -2*v_sep_fold_right_1143_sep_108_sep_3_sep_159_sep_0 <= 0
                          
                        end CsisatInterface.interpolate_csisat_log(321479)[13] (0.000000 sec.)
                        after simplification: -2*v_sep_fold_right_1143_sep_108_sep_3_sep_159_sep_0 <= 0
                        after dnf conversion: ((-2*v_sep_fold_right_1143_sep_108_sep_3_sep_159_sep_0 <= 0))
                        
                      end CsisatInterface.interpolate_csisat_post_process(321478)[12] (0.001000 sec.)
                      
                    end CsisatInterface.interpolate_csisat_wrap(321477)[11] (0.001000 sec.)
                    
                  end InterpProver.interpolate_quick(321468)[10] (0.001000 sec.)
                  
                end InterpProver.interpolate_simplify(321351)[9] (0.002000 sec.)
                
              end InterpProver.interpolate_check(321350)[8] (0.002000 sec.)
              output: (0 <= <<fold_right_1143@108:3>@159:0>)
            end InterpProver.interpolate_log(321349)[7] (0.002000 sec.)
            
          end InterpProver.interpolate_fresh(321348)[6] (0.002000 sec.)
          
        end InterpProver.interpolate(321347)[5] (0.002000 sec.)
        output:
          P[<<fold_right_1143@108:3>@159:0>](<fold_right_1143@108:1>:int,<<fold_right_1143@108:3>@159:0>:int) =
          (0 <= <<fold_right_1143@108:3>@159:0>)
          P[<<fold_right_1143@71:3>@165:0>](<fold_right_1143@108:1>:int,<<fold_right_1143@108:3>@159:0>:int) =
          (0 <= <<fold_right_1143@108:3>@159:0>)
      end ApronInterface.convex_hull_interpolate(321274)[4] (0.002999 sec.)
      Horn clauses:
        P[<fail_2169@292:0>](<fail_2169@292:0>:bool)|- bot
        
        P[<<make_list_1030@51:1>@67:0>](<f_main_2164@289:0>:int,<f_main_2164@289:1>:int),
        ((<f_main_2164@289:1> < 0) && <fail_2169@292:0>) |- P[<fail_2169@292:0>](
        <fail_2169@292:0>:bool)
        
        P[<<<fold_right_1143@71:0>@141:3>@271:0>](<<<fold_right_1143@71:4>@121:0>@127:0>:int,<<<<fold_right_1143@71:4>@121:0>@127:1>@285:0>:int),
        P[<fold_right_1143@71:1>](<fold_right_1143@71:1>:int),
        ((<fold_right_1143@71:1> >= 1) && (<fold_right_1143@71:1> > <<<<fold_right_1143@71:4>@121:0>@127:1>@285:0>))
        |- bot
        
        P[<<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>](<<fold_right_1143@71:0>@141:2>:int,var322:int),
        P[<<<<fold_right_1143@71:0>@141:0>@199:1>@261:0>](var322:int,<<<fold_right_1143@71:0>@141:3>@271:0>:int),
        P[<<make_list_1030@51:1>@67:0>](<f_main_2163@123:0>:int,<fold_right_1143@71:1>:int),
        P[<<fold_right_1143@71:0>@141:2>](<<fold_right_1143@71:0>@141:2>:int)|- P[<<<fold_right_1143@71:0>@141:3>@271:0>](
        <<fold_right_1143@71:0>@141:2>:int,<<<fold_right_1143@71:0>@141:3>@271:0>:int)
        
        P[<<<<<fold_right_1143@71:2>@79:1>@102:0>@213:1>@247:0>](var325:int,0:int,<<<fold_right_1143@71:0>@141:0>@199:0>:int,<<<<fold_right_1143@71:0>@141:0>@199:1>@261:0>:int),
        P[<fold_right_1143@71:1>](var325:int), (1 <= var325)
        |- P[<<<<fold_right_1143@71:0>@141:0>@199:1>@261:0>](<<<fold_right_1143@71:0>@141:0>@199:0>:int,
                                                             <<<<fold_right_1143@71:0>@141:0>@199:1>@261:0>:int)
        
        P[<<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:1>@243:0>](
        <f_main_2163@123:0>:int,<fold_right_1143@71:1>:int,<<fold_right_1143@71:2>@79:0>:int,<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>:int,<<<<<fold_right_1143@71:2>@79:1>@102:0>@213:1>@247:0>:int),
        P[<<make_list_1030@51:1>@67:0>](<f_main_2163@123:0>:int,<fold_right_1143@71:1>:int),
        P[<fold_right_1143@71:1>](<fold_right_1143@71:1>:int)|- P[<<<<<fold_right_1143@71:2>@79:1>@102:0>@213:1>@247:0>](
        <fold_right_1143@71:1>:int,<<fold_right_1143@71:2>@79:0>:int,
        <<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>:int,<<<<<fold_right_1143@71:2>@79:1>@102:0>@213:1>@247:0>:int)
        
        P[<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>](<make_list_1030@51:0>:int,(
                                                              1 + var326):int,0:int,<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>:int),
        P[<<<make_list_1030@51:1>@67:1>@83:0>](<make_list_1030@51:0>:int,(
                                               1 + var326):int,0:int),
        P[<<make_list_1030@54:1>@57:0>]((-1 + <make_list_1030@51:0>):int,var326:int),
        P[<<<make_list_1030@51:1>@67:1>@83:0>](<make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int),
        P[<make_list_1030@51:0>](<make_list_1030@51:0>:int),
        P[<<make_list_1030@54:1>@57:0>]((-1 + <make_list_1030@51:0>):int,(
                                        -1 + <<make_list_1030@51:1>@67:0>):int),
        P[<<make_list_1030@51:1>@67:0>](<make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int),
        ((<<<make_list_1030@51:1>@67:1>@83:0> = 0) &&
         ((<make_list_1030@51:0> > 0) &&
          (<<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:1>@243:0> =
           (<make_list_1030@51:0> + <<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>))))
        |- P[<<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:1>@243:0>](
        <make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int,
        <<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>:int,<<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:1>@243:0>:int)
        
        P[<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>](<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int,<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>:int),
        P[<<make_list_1030@51:1>@67:0>](<make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int),
        P[<<fold_right_1143@71:2>@79:0>](<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int),
        P[<make_list_1030@51:0>](<make_list_1030@51:0>:int),
        P[<<<make_list_1030@51:1>@67:1>@83:0>](<make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int)|- P[<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>](
        <make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int,
        <<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>:int)
        
        P[<<<fold_right_1143@71:0>@141:0>@199:0>](<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>:int),
        P[<fold_right_1143@71:1>](<fold_right_1143@71:1>:int),
        P[<<fold_right_1143@71:2>@79:0>](<fold_right_1143@71:1>:int,<<fold_right_1143@71:2>@79:0>:int),
        ((<<fold_right_1143@71:2>@79:0> = 0) && (<fold_right_1143@71:1> >= 1))
        |- P[<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>](<fold_right_1143@71:1>:int,
                                                            <<fold_right_1143@71:2>@79:0>:int,
                                                            <<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>:int)
        
        P[<<make_list_1030@51:1>@67:0>](<f_main_2163@123:0>:int,<fold_right_1143@71:1>:int),
        P[<<fold_right_1143@71:0>@141:2>](var329:int),
        P[<<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>](var329:int,<<<fold_right_1143@71:0>@141:0>@199:0>:int)|- P[<<<fold_right_1143@71:0>@141:0>@199:0>](
        <<<fold_right_1143@71:0>@141:0>@199:0>:int)
        
        P[<fold_right_1143@71:1>](var330:int),
        ((1 <= var330) && (var330 <= (1 + <<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>)))
        |- P[<<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>](<<<fold_right_1143@71:0>@141:1>@147:0>:int,
                                                             <<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>:int)
        
        P[<fold_right_1143@108:1>](0:int),
        P[<<<fold_right_1143@108:4>@111:0>@157:0>](0:int,<<fold_right_1143@108:3>@159:0>:int),
        (0 > <<fold_right_1143@108:3>@159:0>) |- bot
        
        P[<<<fold_right_1143@71:0>@141:1>@147:0>](<<<fold_right_1143@108:4>@111:0>@157:0>:int),
        P[<fold_right_1143@71:1>]((1 + <fold_right_1143@108:1>):int),
        P[<fold_right_1143@108:1>](<fold_right_1143@108:1>:int), (<fold_right_1143@108:1> >= 0)
        |- P[<<<fold_right_1143@108:4>@111:0>@157:0>](<fold_right_1143@108:1>:int,
                                                      <<<fold_right_1143@108:4>@111:0>@157:0>:int)
        
        P[<<make_list_1030@51:1>@67:0>](<f_main_2163@123:0>:int,<fold_right_1143@71:1>:int),
        P[<<fold_right_1143@71:0>@141:2>](<<<fold_right_1143@71:0>@141:1>@147:0>:int)|- P[<<<fold_right_1143@71:0>@141:1>@147:0>](
        <<<fold_right_1143@71:0>@141:1>@147:0>:int)
        
        P[<<<fold_right_1143@71:4>@121:0>@127:0>](var333:int,<<fold_right_1143@71:0>@141:2>:int),
        P[<fold_right_1143@71:1>](var333:int), (1 <= var333)
        |- P[<<fold_right_1143@71:0>@141:2>](<<fold_right_1143@71:0>@141:2>:int)
        
        P[<<make_list_1030@51:1>@67:0>](<f_main_2163@123:0>:int,<fold_right_1143@71:1>:int),
        P[<fold_right_1143@71:1>](<fold_right_1143@71:1>:int), (<<<fold_right_1143@71:4>@121:0>@127:0> = 0)
        |- P[<<<fold_right_1143@71:4>@121:0>@127:0>](<fold_right_1143@71:1>:int,
                                                     <<<fold_right_1143@71:4>@121:0>@127:0>:int)
        
        P[<fold_right_1143@71:1>]((1 + <fold_right_1143@108:1>):int), (
        <fold_right_1143@108:1> >= 0) |- P[<fold_right_1143@108:1>](<fold_right_1143@108:1>:int)
        
        P[<<make_list_1030@51:1>@67:0>](<make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int),
        P[<<fold_right_1143@71:2>@79:0>](<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int),
        P[<make_list_1030@51:0>](<make_list_1030@51:0>:int)|- P[<<<make_list_1030@51:1>@67:1>@83:0>](
        <make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int)
        
        P[<fold_right_1143@71:1>](<fold_right_1143@71:1>:int),
        ((<<fold_right_1143@71:2>@79:0> = 0) && (<fold_right_1143@71:1> >= 1))
        |- P[<<fold_right_1143@71:2>@79:0>](<fold_right_1143@71:1>:int,
                                            <<fold_right_1143@71:2>@79:0>:int)
        
        P[<<make_list_1030@51:1>@67:0>](<f_main_2161@69:0>:int,<fold_right_1143@71:1>:int)|- P[<fold_right_1143@71:1>](
        <fold_right_1143@71:1>:int)
        
        P[<make_list_1030@51:0>](<make_list_1030@51:0>:int),
        P[<<make_list_1030@54:1>@57:0>]((-1 + <make_list_1030@51:0>):int,(
                                        -1 + <<make_list_1030@51:1>@67:0>):int), (
        <make_list_1030@51:0> > 0)
        |- P[<<make_list_1030@51:1>@67:0>](<make_list_1030@51:0>:int,
                                           <<make_list_1030@51:1>@67:0>:int)
        
        P[<make_list_1030@54:0>](<make_list_1030@54:0>:int),
        ((<<make_list_1030@54:1>@57:0> = 0) && (<make_list_1030@54:0> <= 0))
        |- P[<<make_list_1030@54:1>@57:0>](<make_list_1030@54:0>:int,
                                           <<make_list_1030@54:1>@57:0>:int)
        
        P[<make_list_1030@51:0>]((1 + <make_list_1030@54:0>):int), ((1 + <make_list_1030@54:0>) > 0)
        |- P[<make_list_1030@54:0>](<make_list_1030@54:0>:int)
        
        |- P[<make_list_1030@51:0>](<make_list_1030@51:0>:int)
      lower bounds:
        P[<make_list_1030@51:0>](<make_list_1030@51:0>:int) = true
        P[<make_list_1030@54:0>](<make_list_1030@54:0>:int) = ((1 + <make_list_1030@54:0>) > 0)
        P[<<make_list_1030@54:1>@57:0>](<make_list_1030@54:0>:int,<<make_list_1030@54:1>@57:0>:int) =
        ((<<make_list_1030@54:1>@57:0> = 0) && (<make_list_1030@54:0> = 0))
        P[<<make_list_1030@51:1>@67:0>](<make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int) =
        ((<make_list_1030@51:0> = 1) && (<<make_list_1030@51:1>@67:0> = 1))
        P[<fail_2169@292:0>](<fail_2169@292:0>:bool) = false
        P[<fold_right_1143@71:1>](<fold_right_1143@71:1>:int) = (<fold_right_1143@71:1> = 1)
        P[<<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>](<<<fold_right_1143@71:0>@141:1>@147:0>:int,<<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>:int) =
        (0 <= <<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>)
        P[<<<fold_right_1143@71:4>@121:0>@127:0>](<fold_right_1143@71:1>:int,<<<fold_right_1143@71:4>@121:0>@127:0>:int) =
        ((<fold_right_1143@71:1> = 1) && (<<<fold_right_1143@71:4>@121:0>@127:0> = 0))
        P[<fold_right_1143@108:1>](<fold_right_1143@108:1>:int) = (<fold_right_1143@108:1> = 0)
        P[<<fold_right_1143@71:2>@79:0>](<fold_right_1143@71:1>:int,<<fold_right_1143@71:2>@79:0>:int) =
        ((<<fold_right_1143@71:2>@79:0> = 0) && (<fold_right_1143@71:1> = 1))
        P[<<fold_right_1143@71:0>@141:2>](<<fold_right_1143@71:0>@141:2>:int) = (<<fold_right_1143@71:0>@141:2> = 0)
        P[<<<make_list_1030@51:1>@67:1>@83:0>](<make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int) =
        ((<make_list_1030@51:0> = 1) &&
         ((<<<make_list_1030@51:1>@67:1>@83:0> = 0) && (<<make_list_1030@51:1>@67:0> = 1)))
        P[<<<fold_right_1143@71:0>@141:0>@199:0>](<<<fold_right_1143@71:0>@141:0>@199:0>:int) =
        (0 <= <<<fold_right_1143@71:0>@141:0>@199:0>)
        P[<<<fold_right_1143@71:0>@141:1>@147:0>](<<<fold_right_1143@71:0>@141:1>@147:0>:int) =
        (<<<fold_right_1143@71:0>@141:1>@147:0> = 0)
        P[<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>](<fold_right_1143@71:1>:int,<<fold_right_1143@71:2>@79:0>:int,<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>:int) =
        ((<fold_right_1143@71:1> = 1) &&
         ((<<fold_right_1143@71:2>@79:0> = 0) && (0 <= <<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>)))
        P[<<<fold_right_1143@108:4>@111:0>@157:0>](<fold_right_1143@108:1>:int,<<<fold_right_1143@108:4>@111:0>@157:0>:int) =
        ((<fold_right_1143@108:1> = 0) && (<<<fold_right_1143@108:4>@111:0>@157:0> = 0))
        P[<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>](<make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int,<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>:int) =
        ((<make_list_1030@51:0> = 1) &&
         ((<<<make_list_1030@51:1>@67:1>@83:0> = 0) &&
          ((<<make_list_1030@51:1>@67:0> = 1) && (0 <= <<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>))))
        P[<<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:1>@243:0>](
        <make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int,<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>:int,<<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:1>@243:0>:int) =
        ((<<make_list_1030@51:1>@67:0> = 1) &&
         ((<<<make_list_1030@51:1>@67:1>@83:0> = 0) &&
          ((<make_list_1030@51:0> = 1) &&
           ((0 <= <<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>) &&
            (<<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:1>@243:0> =
             (<make_list_1030@51:0> + <<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>))))))
        P[<<<<<fold_right_1143@71:2>@79:1>@102:0>@213:1>@247:0>](<fold_right_1143@71:1>:int,<<fold_right_1143@71:2>@79:0>:int,<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>:int,<<<<<fold_right_1143@71:2>@79:1>@102:0>@213:1>@247:0>:int) =
        ((<fold_right_1143@71:1> = 1) &&
         ((<<fold_right_1143@71:2>@79:0> = 0) &&
          ((0 <= <<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>) &&
           (<<<<<fold_right_1143@71:2>@79:1>@102:0>@213:1>@247:0> = (1 + <<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>)))))
        P[<<<<fold_right_1143@71:0>@141:0>@199:1>@261:0>](<<<fold_right_1143@71:0>@141:0>@199:0>:int,<<<<fold_right_1143@71:0>@141:0>@199:1>@261:0>:int) =
        ((<<<<fold_right_1143@71:0>@141:0>@199:1>@261:0> = (1 + <<<fold_right_1143@71:0>@141:0>@199:0>)) &&
         (0 <= <<<fold_right_1143@71:0>@141:0>@199:0>))
        P[<<<fold_right_1143@71:0>@141:3>@271:0>](<<fold_right_1143@71:0>@141:2>:int,<<<fold_right_1143@71:0>@141:3>@271:0>:int) =
        ((<<fold_right_1143@71:0>@141:2> = 0) && (1 <= <<<fold_right_1143@71:0>@141:3>@271:0>))
      upper bounds:
        P[<<<fold_right_1143@108:4>@111:0>@157:0>](var504:int,var505:int) = ((var504 <> 0) || (0 <= var505))
        P[<<<fold_right_1143@71:4>@121:0>@127:0>](var502:int,var503:int) = ((var502 <> 1) || (0 <= var503))
      begin GenHcSolver.classify_pids(344636)[4]
        output:
          [<<<fold_right_1143@71:4>@121:0>@127:0>;<<<fold_right_1143@108:4>@111:0>@157:0>]
      end GenHcSolver.classify_pids(344636)[4] (0.000000 sec.)
      begin ApronInterface.convex_hull_interpolate(344695)[4]
        lb:(((<fold_right_1143@71:1> = 1) && (<<<fold_right_1143@71:4>@121:0>@127:0> = 0)) ||
            ((<fold_right_1143@71:1> = 0) && (<<<fold_right_1143@71:4>@121:0>@127:0> = 0)))
        nub:((not ((<fold_right_1143@71:1> <> 1) || (0 <= <<<fold_right_1143@71:4>@121:0>@127:0>))) ||
             (not ((<fold_right_1143@71:1> <> 0) || (0 <= <<<fold_right_1143@71:4>@121:0>@127:0>))))
        begin ExtFormula.Formula.case_analysis_boolean(344722)[5]
          ts: ((<<<fold_right_1143@71:4>@121:0>@127:0> = 0) &&
               ((<fold_right_1143@71:1> = 0) || (<fold_right_1143@71:1> = 1)))
          
        end ExtFormula.Formula.case_analysis_boolean(344722)[5] (0.000000 sec.)
        begin ExtFormula.Formula.case_analysis_boolean(344760)[5]
          ts: ((0 > <<<fold_right_1143@71:4>@121:0>@127:0>) &&
               ((<fold_right_1143@71:1> = 0) || (<fold_right_1143@71:1> = 1)))
          
        end ExtFormula.Formula.case_analysis_boolean(344760)[5] (0.000000 sec.)
        lb':((<<<fold_right_1143@71:4>@121:0>@127:0> = 0) &&
             (((1 + (-1 * <fold_right_1143@71:1>)) >= 0) && (<fold_right_1143@71:1> >= 0)))
        nub':(((1 + (-1 * <fold_right_1143@71:1>)) >= 0) &&
              (((-1 + (-1 * <<<fold_right_1143@71:4>@121:0>@127:0>)) >= 0) && (<fold_right_1143@71:1> >= 0)))
        begin InterpProver.interpolate(344768)[5]
          begin InterpProver.interpolate_fresh(344769)[6]
            begin InterpProver.interpolate_log(344770)[7]
              input1: ((<<<fold_right_1143@71:4>@121:0>@127:0> = 0) &&
                       (((1 + (-1 * <fold_right_1143@71:1>)) >= 0) && (<fold_right_1143@71:1> >= 0)))
              input2: (((1 + (-1 * <fold_right_1143@71:1>)) >= 0) &&
                       (((-1 + (-1 * <<<fold_right_1143@71:4>@121:0>@127:0>)) >= 0) && (<fold_right_1143@71:1> >= 0)))
              begin InterpProver.interpolate_check(344771)[8]
                begin InterpProver.interpolate_simplify(344772)[9]
                  begin InterpProver.interpolate_quick(344889)[10]
                    begin CsisatInterface.interpolate_csisat_wrap(344898)[11]
                      begin CsisatInterface.interpolate_csisat_post_process(344899)[12]
                        begin CsisatInterface.interpolate_csisat_log(344900)[13]
                          input1: (0 = v_sep_fold_right_1143_sep_71_sep_4_sep_121_sep_0_sep_127_sep_0 & 0 <= v_sep_fold_right_1143_sep_71_sep_1 & v_sep_fold_right_1143_sep_71_sep_1 <= 1)
                          input2: (0 <= v_sep_fold_right_1143_sep_71_sep_1 & v_sep_fold_right_1143_sep_71_sep_1 <= 1 & (1 + v_sep_fold_right_1143_sep_71_sep_4_sep_121_sep_0_sep_127_sep_0) <= 0)
                          begin CsisatInterface.interpolate_csisat_raw(344901)[14]
                            
                          end CsisatInterface.interpolate_csisat_raw(344901)[14] (0.000000 sec.)
                          output: -2*v_sep_fold_right_1143_sep_71_sep_4_sep_121_sep_0_sep_127_sep_0 <= 0
                          
                        end CsisatInterface.interpolate_csisat_log(344900)[13] (0.000000 sec.)
                        after simplification: -2*v_sep_fold_right_1143_sep_71_sep_4_sep_121_sep_0_sep_127_sep_0 <= 0
                        after dnf conversion: ((-2*v_sep_fold_right_1143_sep_71_sep_4_sep_121_sep_0_sep_127_sep_0 <= 0))
                        
                      end CsisatInterface.interpolate_csisat_post_process(344899)[12] (0.000000 sec.)
                      
                    end CsisatInterface.interpolate_csisat_wrap(344898)[11] (0.000000 sec.)
                    
                  end InterpProver.interpolate_quick(344889)[10] (0.001000 sec.)
                  
                end InterpProver.interpolate_simplify(344772)[9] (0.001999 sec.)
                
              end InterpProver.interpolate_check(344771)[8] (0.002999 sec.)
              output: (0 <= <<<fold_right_1143@71:4>@121:0>@127:0>)
            end InterpProver.interpolate_log(344770)[7] (0.002999 sec.)
            
          end InterpProver.interpolate_fresh(344769)[6] (0.002999 sec.)
          
        end InterpProver.interpolate(344768)[5] (0.002999 sec.)
        output:
          P[<<<fold_right_1143@71:4>@121:0>@127:0>](<fold_right_1143@71:1>:int,<<<fold_right_1143@71:4>@121:0>@127:0>:int) =
          (0 <= <<<fold_right_1143@71:4>@121:0>@127:0>)
          P[<<<fold_right_1143@108:4>@111:0>@157:0>](<fold_right_1143@71:1>:int,<<<fold_right_1143@71:4>@121:0>@127:0>:int) =
          (0 <= <<<fold_right_1143@71:4>@121:0>@127:0>)
      end ApronInterface.convex_hull_interpolate(344695)[4] (0.003999 sec.)
      Horn clauses:
        P[<fail_2169@292:0>](<fail_2169@292:0>:bool)|- bot
        
        P[<<make_list_1030@51:1>@67:0>](<f_main_2164@289:0>:int,<f_main_2164@289:1>:int),
        ((<f_main_2164@289:1> < 0) && <fail_2169@292:0>) |- P[<fail_2169@292:0>](
        <fail_2169@292:0>:bool)
        
        P[<<<fold_right_1143@71:0>@141:3>@271:0>](<<<fold_right_1143@71:4>@121:0>@127:0>:int,<<<<fold_right_1143@71:4>@121:0>@127:1>@285:0>:int),
        P[<fold_right_1143@71:1>](<fold_right_1143@71:1>:int),
        ((<fold_right_1143@71:1> >= 1) && (<fold_right_1143@71:1> > <<<<fold_right_1143@71:4>@121:0>@127:1>@285:0>))
        |- bot
        
        P[<<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>](<<fold_right_1143@71:0>@141:2>:int,var322:int),
        P[<<<<fold_right_1143@71:0>@141:0>@199:1>@261:0>](var322:int,<<<fold_right_1143@71:0>@141:3>@271:0>:int),
        P[<<make_list_1030@51:1>@67:0>](<f_main_2163@123:0>:int,<fold_right_1143@71:1>:int),
        P[<<fold_right_1143@71:0>@141:2>](<<fold_right_1143@71:0>@141:2>:int)|- P[<<<fold_right_1143@71:0>@141:3>@271:0>](
        <<fold_right_1143@71:0>@141:2>:int,<<<fold_right_1143@71:0>@141:3>@271:0>:int)
        
        P[<<<<<fold_right_1143@71:2>@79:1>@102:0>@213:1>@247:0>](var325:int,0:int,<<<fold_right_1143@71:0>@141:0>@199:0>:int,<<<<fold_right_1143@71:0>@141:0>@199:1>@261:0>:int),
        P[<fold_right_1143@71:1>](var325:int), (1 <= var325)
        |- P[<<<<fold_right_1143@71:0>@141:0>@199:1>@261:0>](<<<fold_right_1143@71:0>@141:0>@199:0>:int,
                                                             <<<<fold_right_1143@71:0>@141:0>@199:1>@261:0>:int)
        
        P[<<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:1>@243:0>](
        <f_main_2163@123:0>:int,<fold_right_1143@71:1>:int,<<fold_right_1143@71:2>@79:0>:int,<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>:int,<<<<<fold_right_1143@71:2>@79:1>@102:0>@213:1>@247:0>:int),
        P[<<make_list_1030@51:1>@67:0>](<f_main_2163@123:0>:int,<fold_right_1143@71:1>:int),
        P[<fold_right_1143@71:1>](<fold_right_1143@71:1>:int)|- P[<<<<<fold_right_1143@71:2>@79:1>@102:0>@213:1>@247:0>](
        <fold_right_1143@71:1>:int,<<fold_right_1143@71:2>@79:0>:int,
        <<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>:int,<<<<<fold_right_1143@71:2>@79:1>@102:0>@213:1>@247:0>:int)
        
        P[<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>](<make_list_1030@51:0>:int,(
                                                              1 + var326):int,0:int,<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>:int),
        P[<<<make_list_1030@51:1>@67:1>@83:0>](<make_list_1030@51:0>:int,(
                                               1 + var326):int,0:int),
        P[<<make_list_1030@54:1>@57:0>]((-1 + <make_list_1030@51:0>):int,var326:int),
        P[<<<make_list_1030@51:1>@67:1>@83:0>](<make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int),
        P[<make_list_1030@51:0>](<make_list_1030@51:0>:int),
        P[<<make_list_1030@54:1>@57:0>]((-1 + <make_list_1030@51:0>):int,(
                                        -1 + <<make_list_1030@51:1>@67:0>):int),
        P[<<make_list_1030@51:1>@67:0>](<make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int),
        ((<<<make_list_1030@51:1>@67:1>@83:0> = 0) &&
         ((<make_list_1030@51:0> > 0) &&
          (<<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:1>@243:0> =
           (<make_list_1030@51:0> + <<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>))))
        |- P[<<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:1>@243:0>](
        <make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int,
        <<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>:int,<<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:1>@243:0>:int)
        
        P[<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>](<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int,<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>:int),
        P[<<make_list_1030@51:1>@67:0>](<make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int),
        P[<<fold_right_1143@71:2>@79:0>](<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int),
        P[<make_list_1030@51:0>](<make_list_1030@51:0>:int),
        P[<<<make_list_1030@51:1>@67:1>@83:0>](<make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int)|- P[<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>](
        <make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int,
        <<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>:int)
        
        P[<<<fold_right_1143@71:0>@141:0>@199:0>](<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>:int),
        P[<fold_right_1143@71:1>](<fold_right_1143@71:1>:int),
        P[<<fold_right_1143@71:2>@79:0>](<fold_right_1143@71:1>:int,<<fold_right_1143@71:2>@79:0>:int),
        ((<<fold_right_1143@71:2>@79:0> = 0) && (<fold_right_1143@71:1> >= 1))
        |- P[<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>](<fold_right_1143@71:1>:int,
                                                            <<fold_right_1143@71:2>@79:0>:int,
                                                            <<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>:int)
        
        P[<<make_list_1030@51:1>@67:0>](<f_main_2163@123:0>:int,<fold_right_1143@71:1>:int),
        P[<<fold_right_1143@71:0>@141:2>](var329:int),
        P[<<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>](var329:int,<<<fold_right_1143@71:0>@141:0>@199:0>:int)|- P[<<<fold_right_1143@71:0>@141:0>@199:0>](
        <<<fold_right_1143@71:0>@141:0>@199:0>:int)
        
        P[<fold_right_1143@71:1>](var330:int),
        ((1 <= var330) && (var330 <= (1 + <<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>)))
        |- P[<<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>](<<<fold_right_1143@71:0>@141:1>@147:0>:int,
                                                             <<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>:int)
        
        P[<<<fold_right_1143@71:0>@141:1>@147:0>](<<<fold_right_1143@108:4>@111:0>@157:0>:int),
        P[<fold_right_1143@71:1>]((1 + <fold_right_1143@108:1>):int),
        P[<fold_right_1143@108:1>](<fold_right_1143@108:1>:int),
        ((<fold_right_1143@108:1> >= 0) && (0 > <<<fold_right_1143@108:4>@111:0>@157:0>)) |- bot
        
        P[<<make_list_1030@51:1>@67:0>](<f_main_2163@123:0>:int,<fold_right_1143@71:1>:int),
        P[<<fold_right_1143@71:0>@141:2>](<<<fold_right_1143@71:0>@141:1>@147:0>:int)|- P[<<<fold_right_1143@71:0>@141:1>@147:0>](
        <<<fold_right_1143@71:0>@141:1>@147:0>:int)
        
        P[<fold_right_1143@71:1>](var333:int), ((1 <= var333) && (0 <= <<fold_right_1143@71:0>@141:2>))
        |- P[<<fold_right_1143@71:0>@141:2>](<<fold_right_1143@71:0>@141:2>:int)
        
        P[<fold_right_1143@71:1>]((1 + <fold_right_1143@108:1>):int), (
        <fold_right_1143@108:1> >= 0) |- P[<fold_right_1143@108:1>](<fold_right_1143@108:1>:int)
        
        P[<<make_list_1030@51:1>@67:0>](<make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int),
        P[<<fold_right_1143@71:2>@79:0>](<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int),
        P[<make_list_1030@51:0>](<make_list_1030@51:0>:int)|- P[<<<make_list_1030@51:1>@67:1>@83:0>](
        <make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int)
        
        P[<fold_right_1143@71:1>](<fold_right_1143@71:1>:int),
        ((<<fold_right_1143@71:2>@79:0> = 0) && (<fold_right_1143@71:1> >= 1))
        |- P[<<fold_right_1143@71:2>@79:0>](<fold_right_1143@71:1>:int,
                                            <<fold_right_1143@71:2>@79:0>:int)
        
        P[<<make_list_1030@51:1>@67:0>](<f_main_2161@69:0>:int,<fold_right_1143@71:1>:int)|- P[<fold_right_1143@71:1>](
        <fold_right_1143@71:1>:int)
        
        P[<make_list_1030@51:0>](<make_list_1030@51:0>:int),
        P[<<make_list_1030@54:1>@57:0>]((-1 + <make_list_1030@51:0>):int,(
                                        -1 + <<make_list_1030@51:1>@67:0>):int), (
        <make_list_1030@51:0> > 0)
        |- P[<<make_list_1030@51:1>@67:0>](<make_list_1030@51:0>:int,
                                           <<make_list_1030@51:1>@67:0>:int)
        
        P[<make_list_1030@54:0>](<make_list_1030@54:0>:int),
        ((<<make_list_1030@54:1>@57:0> = 0) && (<make_list_1030@54:0> <= 0))
        |- P[<<make_list_1030@54:1>@57:0>](<make_list_1030@54:0>:int,
                                           <<make_list_1030@54:1>@57:0>:int)
        
        P[<make_list_1030@51:0>]((1 + <make_list_1030@54:0>):int), ((1 + <make_list_1030@54:0>) > 0)
        |- P[<make_list_1030@54:0>](<make_list_1030@54:0>:int)
        
        |- P[<make_list_1030@51:0>](<make_list_1030@51:0>:int)
      lower bounds:
        P[<make_list_1030@51:0>](<make_list_1030@51:0>:int) = true
        P[<make_list_1030@54:0>](<make_list_1030@54:0>:int) = ((1 + <make_list_1030@54:0>) > 0)
        P[<<make_list_1030@54:1>@57:0>](<make_list_1030@54:0>:int,<<make_list_1030@54:1>@57:0>:int) =
        ((<<make_list_1030@54:1>@57:0> = 0) && (<make_list_1030@54:0> = 0))
        P[<<make_list_1030@51:1>@67:0>](<make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int) =
        ((<make_list_1030@51:0> = 1) && (<<make_list_1030@51:1>@67:0> = 1))
        P[<fail_2169@292:0>](<fail_2169@292:0>:bool) = false
        P[<fold_right_1143@71:1>](<fold_right_1143@71:1>:int) = (<fold_right_1143@71:1> = 1)
        P[<<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>](<<<fold_right_1143@71:0>@141:1>@147:0>:int,<<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>:int) =
        (0 <= <<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>)
        P[<<fold_right_1143@71:0>@141:2>](<<fold_right_1143@71:0>@141:2>:int) = (0 <= <<fold_right_1143@71:0>@141:2>)
        P[<fold_right_1143@108:1>](<fold_right_1143@108:1>:int) = (<fold_right_1143@108:1> = 0)
        P[<<fold_right_1143@71:2>@79:0>](<fold_right_1143@71:1>:int,<<fold_right_1143@71:2>@79:0>:int) =
        ((<<fold_right_1143@71:2>@79:0> = 0) && (<fold_right_1143@71:1> = 1))
        P[<<<fold_right_1143@71:0>@141:0>@199:0>](<<<fold_right_1143@71:0>@141:0>@199:0>:int) =
        (0 <= <<<fold_right_1143@71:0>@141:0>@199:0>)
        P[<<<fold_right_1143@71:0>@141:1>@147:0>](<<<fold_right_1143@71:0>@141:1>@147:0>:int) =
        (0 <= <<<fold_right_1143@71:0>@141:1>@147:0>)
        P[<<<make_list_1030@51:1>@67:1>@83:0>](<make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int) =
        ((<make_list_1030@51:0> = 1) &&
         ((<<<make_list_1030@51:1>@67:1>@83:0> = 0) && (<<make_list_1030@51:1>@67:0> = 1)))
        P[<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>](<fold_right_1143@71:1>:int,<<fold_right_1143@71:2>@79:0>:int,<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>:int) =
        ((<fold_right_1143@71:1> = 1) &&
         ((<<fold_right_1143@71:2>@79:0> = 0) && (0 <= <<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>)))
        P[<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>](<make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int,<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>:int) =
        ((<make_list_1030@51:0> = 1) &&
         ((<<<make_list_1030@51:1>@67:1>@83:0> = 0) &&
          ((<<make_list_1030@51:1>@67:0> = 1) && (0 <= <<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>))))
        P[<<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:1>@243:0>](
        <make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int,<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>:int,<<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:1>@243:0>:int) =
        ((<<make_list_1030@51:1>@67:0> = 1) &&
         ((<<<make_list_1030@51:1>@67:1>@83:0> = 0) &&
          ((<make_list_1030@51:0> = 1) &&
           ((0 <= <<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>) &&
            (<<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:1>@243:0> =
             (<make_list_1030@51:0> + <<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>))))))
        P[<<<<<fold_right_1143@71:2>@79:1>@102:0>@213:1>@247:0>](<fold_right_1143@71:1>:int,<<fold_right_1143@71:2>@79:0>:int,<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>:int,<<<<<fold_right_1143@71:2>@79:1>@102:0>@213:1>@247:0>:int) =
        ((<fold_right_1143@71:1> = 1) &&
         ((<<fold_right_1143@71:2>@79:0> = 0) &&
          ((0 <= <<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>) &&
           (<<<<<fold_right_1143@71:2>@79:1>@102:0>@213:1>@247:0> = (1 + <<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>)))))
        P[<<<<fold_right_1143@71:0>@141:0>@199:1>@261:0>](<<<fold_right_1143@71:0>@141:0>@199:0>:int,<<<<fold_right_1143@71:0>@141:0>@199:1>@261:0>:int) =
        ((<<<<fold_right_1143@71:0>@141:0>@199:1>@261:0> = (1 + <<<fold_right_1143@71:0>@141:0>@199:0>)) &&
         (0 <= <<<fold_right_1143@71:0>@141:0>@199:0>))
        P[<<<fold_right_1143@71:0>@141:3>@271:0>](<<fold_right_1143@71:0>@141:2>:int,<<<fold_right_1143@71:0>@141:3>@271:0>:int) =
        ((0 <= <<fold_right_1143@71:0>@141:2>) && (1 <= <<<fold_right_1143@71:0>@141:3>@271:0>))
      upper bounds:
        P[<fold_right_1143@108:1>](var519:int) = true
      begin GenHcSolver.classify_pids(370361)[4]
        output:
          [<fold_right_1143@108:1>]
      end GenHcSolver.classify_pids(370361)[4] (0.000000 sec.)
      lb:(<fold_right_1143@108:1> = 0)
      nub:false
      begin ApronInterface.convex_hull_interpolate(370364)[4]
        lb:(<fold_right_1143@108:1> = 0)
        nub:false
        begin ExtFormula.Formula.case_analysis_boolean(370368)[5]
          ts: (<fold_right_1143@108:1> = 0)
          
        end ExtFormula.Formula.case_analysis_boolean(370368)[5] (0.000000 sec.)
        begin ExtFormula.Formula.case_analysis_boolean(370374)[5]
          ts: false
          
        end ExtFormula.Formula.case_analysis_boolean(370374)[5] (0.000000 sec.)
        lb':(<fold_right_1143@108:1> = 0)
        nub':(-1 >= 0)
        begin InterpProver.interpolate(370377)[5]
          begin InterpProver.interpolate_fresh(370378)[6]
            begin InterpProver.interpolate_log(370379)[7]
              input1: (<fold_right_1143@108:1> = 0)
              input2: (-1 >= 0)
              begin InterpProver.interpolate_check(370380)[8]
                begin InterpProver.interpolate_simplify(370381)[9]
                  begin InterpProver.interpolate_quick(370401)[10]
                    
                  end InterpProver.interpolate_quick(370401)[10] (0.000000 sec.)
                  
                end InterpProver.interpolate_simplify(370381)[9] (0.000000 sec.)
                
              end InterpProver.interpolate_check(370380)[8] (0.000000 sec.)
              output: true
            end InterpProver.interpolate_log(370379)[7] (0.000000 sec.)
            
          end InterpProver.interpolate_fresh(370378)[6] (0.000000 sec.)
          
        end InterpProver.interpolate(370377)[5] (0.000000 sec.)
        output:
          P[<fold_right_1143@108:1>](<fold_right_1143@108:1>:int) = true
      end ApronInterface.convex_hull_interpolate(370364)[4] (0.000999 sec.)
      Horn clauses:
        P[<fail_2169@292:0>](<fail_2169@292:0>:bool)|- bot
        
        P[<<make_list_1030@51:1>@67:0>](<f_main_2164@289:0>:int,<f_main_2164@289:1>:int),
        ((<f_main_2164@289:1> < 0) && <fail_2169@292:0>) |- P[<fail_2169@292:0>](
        <fail_2169@292:0>:bool)
        
        P[<<<fold_right_1143@71:0>@141:3>@271:0>](<<<fold_right_1143@71:4>@121:0>@127:0>:int,<<<<fold_right_1143@71:4>@121:0>@127:1>@285:0>:int),
        P[<fold_right_1143@71:1>](<fold_right_1143@71:1>:int),
        ((<fold_right_1143@71:1> >= 1) && (<fold_right_1143@71:1> > <<<<fold_right_1143@71:4>@121:0>@127:1>@285:0>))
        |- bot
        
        P[<<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>](<<fold_right_1143@71:0>@141:2>:int,var322:int),
        P[<<<<fold_right_1143@71:0>@141:0>@199:1>@261:0>](var322:int,<<<fold_right_1143@71:0>@141:3>@271:0>:int),
        P[<<make_list_1030@51:1>@67:0>](<f_main_2163@123:0>:int,<fold_right_1143@71:1>:int),
        P[<<fold_right_1143@71:0>@141:2>](<<fold_right_1143@71:0>@141:2>:int)|- P[<<<fold_right_1143@71:0>@141:3>@271:0>](
        <<fold_right_1143@71:0>@141:2>:int,<<<fold_right_1143@71:0>@141:3>@271:0>:int)
        
        P[<<<<<fold_right_1143@71:2>@79:1>@102:0>@213:1>@247:0>](var325:int,0:int,<<<fold_right_1143@71:0>@141:0>@199:0>:int,<<<<fold_right_1143@71:0>@141:0>@199:1>@261:0>:int),
        P[<fold_right_1143@71:1>](var325:int), (1 <= var325)
        |- P[<<<<fold_right_1143@71:0>@141:0>@199:1>@261:0>](<<<fold_right_1143@71:0>@141:0>@199:0>:int,
                                                             <<<<fold_right_1143@71:0>@141:0>@199:1>@261:0>:int)
        
        P[<<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:1>@243:0>](
        <f_main_2163@123:0>:int,<fold_right_1143@71:1>:int,<<fold_right_1143@71:2>@79:0>:int,<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>:int,<<<<<fold_right_1143@71:2>@79:1>@102:0>@213:1>@247:0>:int),
        P[<<make_list_1030@51:1>@67:0>](<f_main_2163@123:0>:int,<fold_right_1143@71:1>:int),
        P[<fold_right_1143@71:1>](<fold_right_1143@71:1>:int)|- P[<<<<<fold_right_1143@71:2>@79:1>@102:0>@213:1>@247:0>](
        <fold_right_1143@71:1>:int,<<fold_right_1143@71:2>@79:0>:int,
        <<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>:int,<<<<<fold_right_1143@71:2>@79:1>@102:0>@213:1>@247:0>:int)
        
        P[<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>](<make_list_1030@51:0>:int,(
                                                              1 + var326):int,0:int,<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>:int),
        P[<<<make_list_1030@51:1>@67:1>@83:0>](<make_list_1030@51:0>:int,(
                                               1 + var326):int,0:int),
        P[<<make_list_1030@54:1>@57:0>]((-1 + <make_list_1030@51:0>):int,var326:int),
        P[<<<make_list_1030@51:1>@67:1>@83:0>](<make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int),
        P[<make_list_1030@51:0>](<make_list_1030@51:0>:int),
        P[<<make_list_1030@54:1>@57:0>]((-1 + <make_list_1030@51:0>):int,(
                                        -1 + <<make_list_1030@51:1>@67:0>):int),
        P[<<make_list_1030@51:1>@67:0>](<make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int),
        ((<<<make_list_1030@51:1>@67:1>@83:0> = 0) &&
         ((<make_list_1030@51:0> > 0) &&
          (<<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:1>@243:0> =
           (<make_list_1030@51:0> + <<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>))))
        |- P[<<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:1>@243:0>](
        <make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int,
        <<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>:int,<<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:1>@243:0>:int)
        
        P[<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>](<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int,<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>:int),
        P[<<make_list_1030@51:1>@67:0>](<make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int),
        P[<<fold_right_1143@71:2>@79:0>](<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int),
        P[<make_list_1030@51:0>](<make_list_1030@51:0>:int),
        P[<<<make_list_1030@51:1>@67:1>@83:0>](<make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int)|- P[<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>](
        <make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int,
        <<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>:int)
        
        P[<<<fold_right_1143@71:0>@141:0>@199:0>](<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>:int),
        P[<fold_right_1143@71:1>](<fold_right_1143@71:1>:int),
        P[<<fold_right_1143@71:2>@79:0>](<fold_right_1143@71:1>:int,<<fold_right_1143@71:2>@79:0>:int),
        ((<<fold_right_1143@71:2>@79:0> = 0) && (<fold_right_1143@71:1> >= 1))
        |- P[<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>](<fold_right_1143@71:1>:int,
                                                            <<fold_right_1143@71:2>@79:0>:int,
                                                            <<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>:int)
        
        P[<<make_list_1030@51:1>@67:0>](<f_main_2163@123:0>:int,<fold_right_1143@71:1>:int),
        P[<<fold_right_1143@71:0>@141:2>](var329:int),
        P[<<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>](var329:int,<<<fold_right_1143@71:0>@141:0>@199:0>:int)|- P[<<<fold_right_1143@71:0>@141:0>@199:0>](
        <<<fold_right_1143@71:0>@141:0>@199:0>:int)
        
        P[<fold_right_1143@71:1>](var330:int),
        ((1 <= var330) && (var330 <= (1 + <<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>)))
        |- P[<<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>](<<<fold_right_1143@71:0>@141:1>@147:0>:int,
                                                             <<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>:int)
        
        P[<<<fold_right_1143@71:0>@141:1>@147:0>](<<<fold_right_1143@108:4>@111:0>@157:0>:int),
        P[<fold_right_1143@71:1>]((1 + <fold_right_1143@108:1>):int),
        ((<fold_right_1143@108:1> >= 0) && (0 > <<<fold_right_1143@108:4>@111:0>@157:0>)) |- bot
        
        P[<<make_list_1030@51:1>@67:0>](<f_main_2163@123:0>:int,<fold_right_1143@71:1>:int),
        P[<<fold_right_1143@71:0>@141:2>](<<<fold_right_1143@71:0>@141:1>@147:0>:int)|- P[<<<fold_right_1143@71:0>@141:1>@147:0>](
        <<<fold_right_1143@71:0>@141:1>@147:0>:int)
        
        P[<fold_right_1143@71:1>](var333:int), ((1 <= var333) && (0 <= <<fold_right_1143@71:0>@141:2>))
        |- P[<<fold_right_1143@71:0>@141:2>](<<fold_right_1143@71:0>@141:2>:int)
        
        P[<<make_list_1030@51:1>@67:0>](<make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int),
        P[<<fold_right_1143@71:2>@79:0>](<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int),
        P[<make_list_1030@51:0>](<make_list_1030@51:0>:int)|- P[<<<make_list_1030@51:1>@67:1>@83:0>](
        <make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int)
        
        P[<fold_right_1143@71:1>](<fold_right_1143@71:1>:int),
        ((<<fold_right_1143@71:2>@79:0> = 0) && (<fold_right_1143@71:1> >= 1))
        |- P[<<fold_right_1143@71:2>@79:0>](<fold_right_1143@71:1>:int,
                                            <<fold_right_1143@71:2>@79:0>:int)
        
        P[<<make_list_1030@51:1>@67:0>](<f_main_2161@69:0>:int,<fold_right_1143@71:1>:int)|- P[<fold_right_1143@71:1>](
        <fold_right_1143@71:1>:int)
        
        P[<make_list_1030@51:0>](<make_list_1030@51:0>:int),
        P[<<make_list_1030@54:1>@57:0>]((-1 + <make_list_1030@51:0>):int,(
                                        -1 + <<make_list_1030@51:1>@67:0>):int), (
        <make_list_1030@51:0> > 0)
        |- P[<<make_list_1030@51:1>@67:0>](<make_list_1030@51:0>:int,
                                           <<make_list_1030@51:1>@67:0>:int)
        
        P[<make_list_1030@54:0>](<make_list_1030@54:0>:int),
        ((<<make_list_1030@54:1>@57:0> = 0) && (<make_list_1030@54:0> <= 0))
        |- P[<<make_list_1030@54:1>@57:0>](<make_list_1030@54:0>:int,
                                           <<make_list_1030@54:1>@57:0>:int)
        
        P[<make_list_1030@51:0>]((1 + <make_list_1030@54:0>):int), ((1 + <make_list_1030@54:0>) > 0)
        |- P[<make_list_1030@54:0>](<make_list_1030@54:0>:int)
        
        |- P[<make_list_1030@51:0>](<make_list_1030@51:0>:int)
      lower bounds:
        P[<make_list_1030@51:0>](<make_list_1030@51:0>:int) = true
        P[<make_list_1030@54:0>](<make_list_1030@54:0>:int) = ((1 + <make_list_1030@54:0>) > 0)
        P[<<make_list_1030@54:1>@57:0>](<make_list_1030@54:0>:int,<<make_list_1030@54:1>@57:0>:int) =
        ((<<make_list_1030@54:1>@57:0> = 0) && (<make_list_1030@54:0> = 0))
        P[<<make_list_1030@51:1>@67:0>](<make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int) =
        ((<make_list_1030@51:0> = 1) && (<<make_list_1030@51:1>@67:0> = 1))
        P[<fail_2169@292:0>](<fail_2169@292:0>:bool) = false
        P[<fold_right_1143@71:1>](<fold_right_1143@71:1>:int) = (<fold_right_1143@71:1> = 1)
        P[<<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>](<<<fold_right_1143@71:0>@141:1>@147:0>:int,<<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>:int) =
        (0 <= <<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>)
        P[<<fold_right_1143@71:0>@141:2>](<<fold_right_1143@71:0>@141:2>:int) = (0 <= <<fold_right_1143@71:0>@141:2>)
        P[<<fold_right_1143@71:2>@79:0>](<fold_right_1143@71:1>:int,<<fold_right_1143@71:2>@79:0>:int) =
        ((<<fold_right_1143@71:2>@79:0> = 0) && (<fold_right_1143@71:1> = 1))
        P[<<<fold_right_1143@71:0>@141:0>@199:0>](<<<fold_right_1143@71:0>@141:0>@199:0>:int) =
        (0 <= <<<fold_right_1143@71:0>@141:0>@199:0>)
        P[<<<fold_right_1143@71:0>@141:1>@147:0>](<<<fold_right_1143@71:0>@141:1>@147:0>:int) =
        (0 <= <<<fold_right_1143@71:0>@141:1>@147:0>)
        P[<<<make_list_1030@51:1>@67:1>@83:0>](<make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int) =
        ((<make_list_1030@51:0> = 1) &&
         ((<<<make_list_1030@51:1>@67:1>@83:0> = 0) && (<<make_list_1030@51:1>@67:0> = 1)))
        P[<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>](<fold_right_1143@71:1>:int,<<fold_right_1143@71:2>@79:0>:int,<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>:int) =
        ((<fold_right_1143@71:1> = 1) &&
         ((<<fold_right_1143@71:2>@79:0> = 0) && (0 <= <<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>)))
        P[<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>](<make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int,<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>:int) =
        ((<make_list_1030@51:0> = 1) &&
         ((<<<make_list_1030@51:1>@67:1>@83:0> = 0) &&
          ((<<make_list_1030@51:1>@67:0> = 1) && (0 <= <<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>))))
        P[<<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:1>@243:0>](
        <make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int,<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>:int,<<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:1>@243:0>:int) =
        ((<<make_list_1030@51:1>@67:0> = 1) &&
         ((<<<make_list_1030@51:1>@67:1>@83:0> = 0) &&
          ((<make_list_1030@51:0> = 1) &&
           ((0 <= <<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>) &&
            (<<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:1>@243:0> =
             (<make_list_1030@51:0> + <<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>))))))
        P[<<<<<fold_right_1143@71:2>@79:1>@102:0>@213:1>@247:0>](<fold_right_1143@71:1>:int,<<fold_right_1143@71:2>@79:0>:int,<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>:int,<<<<<fold_right_1143@71:2>@79:1>@102:0>@213:1>@247:0>:int) =
        ((<fold_right_1143@71:1> = 1) &&
         ((<<fold_right_1143@71:2>@79:0> = 0) &&
          ((0 <= <<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>) &&
           (<<<<<fold_right_1143@71:2>@79:1>@102:0>@213:1>@247:0> = (1 + <<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>)))))
        P[<<<<fold_right_1143@71:0>@141:0>@199:1>@261:0>](<<<fold_right_1143@71:0>@141:0>@199:0>:int,<<<<fold_right_1143@71:0>@141:0>@199:1>@261:0>:int) =
        ((<<<<fold_right_1143@71:0>@141:0>@199:1>@261:0> = (1 + <<<fold_right_1143@71:0>@141:0>@199:0>)) &&
         (0 <= <<<fold_right_1143@71:0>@141:0>@199:0>))
        P[<<<fold_right_1143@71:0>@141:3>@271:0>](<<fold_right_1143@71:0>@141:2>:int,<<<fold_right_1143@71:0>@141:3>@271:0>:int) =
        ((0 <= <<fold_right_1143@71:0>@141:2>) && (1 <= <<<fold_right_1143@71:0>@141:3>@271:0>))
      upper bounds:
        P[<make_list_1030@54:0>](var606:int) = true
        P[<make_list_1030@51:0>](var604:int) = true
      begin GenHcSolver.classify_pids(409693)[4]
        output:
          [<make_list_1030@51:0>;<make_list_1030@54:0>]
      end GenHcSolver.classify_pids(409693)[4] (0.000000 sec.)
      begin ApronInterface.convex_hull_interpolate(409704)[4]
        lb:true
        nub:false
        begin ExtFormula.Formula.case_analysis_boolean(409707)[5]
          ts: true
          
        end ExtFormula.Formula.case_analysis_boolean(409707)[5] (0.000000 sec.)
        begin ExtFormula.Formula.case_analysis_boolean(409712)[5]
          ts: false
          
        end ExtFormula.Formula.case_analysis_boolean(409712)[5] (0.000000 sec.)
        lb':true
        nub':(-1 >= 0)
        begin InterpProver.interpolate(409715)[5]
          begin InterpProver.interpolate_fresh(409716)[6]
            begin InterpProver.interpolate_log(409717)[7]
              input1: true
              input2: (-1 >= 0)
              begin InterpProver.interpolate_check(409718)[8]
                begin InterpProver.interpolate_simplify(409719)[9]
                  begin InterpProver.interpolate_quick(409733)[10]
                    
                  end InterpProver.interpolate_quick(409733)[10] (0.000000 sec.)
                  
                end InterpProver.interpolate_simplify(409719)[9] (0.000000 sec.)
                
              end InterpProver.interpolate_check(409718)[8] (0.000000 sec.)
              output: true
            end InterpProver.interpolate_log(409717)[7] (0.000000 sec.)
            
          end InterpProver.interpolate_fresh(409716)[6] (0.000000 sec.)
          
        end InterpProver.interpolate(409715)[5] (0.000000 sec.)
        output:
          P[<make_list_1030@51:0>](<make_list_1030@51:0>:int) = true
          P[<make_list_1030@54:0>](<make_list_1030@51:0>:int) = true
      end ApronInterface.convex_hull_interpolate(409704)[4] (0.000000 sec.)
      Horn clauses:
        P[<fail_2169@292:0>](<fail_2169@292:0>:bool)|- bot
        
        P[<<make_list_1030@51:1>@67:0>](<f_main_2164@289:0>:int,<f_main_2164@289:1>:int),
        ((<f_main_2164@289:1> < 0) && <fail_2169@292:0>) |- P[<fail_2169@292:0>](
        <fail_2169@292:0>:bool)
        
        P[<<<fold_right_1143@71:0>@141:3>@271:0>](<<<fold_right_1143@71:4>@121:0>@127:0>:int,<<<<fold_right_1143@71:4>@121:0>@127:1>@285:0>:int),
        P[<fold_right_1143@71:1>](<fold_right_1143@71:1>:int),
        ((<fold_right_1143@71:1> >= 1) && (<fold_right_1143@71:1> > <<<<fold_right_1143@71:4>@121:0>@127:1>@285:0>))
        |- bot
        
        P[<<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>](<<fold_right_1143@71:0>@141:2>:int,var322:int),
        P[<<<<fold_right_1143@71:0>@141:0>@199:1>@261:0>](var322:int,<<<fold_right_1143@71:0>@141:3>@271:0>:int),
        P[<<make_list_1030@51:1>@67:0>](<f_main_2163@123:0>:int,<fold_right_1143@71:1>:int),
        P[<<fold_right_1143@71:0>@141:2>](<<fold_right_1143@71:0>@141:2>:int)|- P[<<<fold_right_1143@71:0>@141:3>@271:0>](
        <<fold_right_1143@71:0>@141:2>:int,<<<fold_right_1143@71:0>@141:3>@271:0>:int)
        
        P[<<<<<fold_right_1143@71:2>@79:1>@102:0>@213:1>@247:0>](var325:int,0:int,<<<fold_right_1143@71:0>@141:0>@199:0>:int,<<<<fold_right_1143@71:0>@141:0>@199:1>@261:0>:int),
        P[<fold_right_1143@71:1>](var325:int), (1 <= var325)
        |- P[<<<<fold_right_1143@71:0>@141:0>@199:1>@261:0>](<<<fold_right_1143@71:0>@141:0>@199:0>:int,
                                                             <<<<fold_right_1143@71:0>@141:0>@199:1>@261:0>:int)
        
        P[<<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:1>@243:0>](
        <f_main_2163@123:0>:int,<fold_right_1143@71:1>:int,<<fold_right_1143@71:2>@79:0>:int,<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>:int,<<<<<fold_right_1143@71:2>@79:1>@102:0>@213:1>@247:0>:int),
        P[<<make_list_1030@51:1>@67:0>](<f_main_2163@123:0>:int,<fold_right_1143@71:1>:int),
        P[<fold_right_1143@71:1>](<fold_right_1143@71:1>:int)|- P[<<<<<fold_right_1143@71:2>@79:1>@102:0>@213:1>@247:0>](
        <fold_right_1143@71:1>:int,<<fold_right_1143@71:2>@79:0>:int,
        <<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>:int,<<<<<fold_right_1143@71:2>@79:1>@102:0>@213:1>@247:0>:int)
        
        P[<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>](<make_list_1030@51:0>:int,(
                                                              1 + var326):int,0:int,<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>:int),
        P[<<<make_list_1030@51:1>@67:1>@83:0>](<make_list_1030@51:0>:int,(
                                               1 + var326):int,0:int),
        P[<<make_list_1030@54:1>@57:0>]((-1 + <make_list_1030@51:0>):int,var326:int),
        P[<<<make_list_1030@51:1>@67:1>@83:0>](<make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int),
        P[<<make_list_1030@54:1>@57:0>]((-1 + <make_list_1030@51:0>):int,(
                                        -1 + <<make_list_1030@51:1>@67:0>):int),
        P[<<make_list_1030@51:1>@67:0>](<make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int),
        ((<<<make_list_1030@51:1>@67:1>@83:0> = 0) &&
         ((<make_list_1030@51:0> > 0) &&
          (<<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:1>@243:0> =
           (<make_list_1030@51:0> + <<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>))))
        |- P[<<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:1>@243:0>](
        <make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int,
        <<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>:int,<<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:1>@243:0>:int)
        
        P[<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>](<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int,<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>:int),
        P[<<make_list_1030@51:1>@67:0>](<make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int),
        P[<<fold_right_1143@71:2>@79:0>](<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int),
        P[<<<make_list_1030@51:1>@67:1>@83:0>](<make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int)|- P[<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>](
        <make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int,
        <<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>:int)
        
        P[<<<fold_right_1143@71:0>@141:0>@199:0>](<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>:int),
        P[<fold_right_1143@71:1>](<fold_right_1143@71:1>:int),
        P[<<fold_right_1143@71:2>@79:0>](<fold_right_1143@71:1>:int,<<fold_right_1143@71:2>@79:0>:int),
        ((<<fold_right_1143@71:2>@79:0> = 0) && (<fold_right_1143@71:1> >= 1))
        |- P[<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>](<fold_right_1143@71:1>:int,
                                                            <<fold_right_1143@71:2>@79:0>:int,
                                                            <<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>:int)
        
        P[<<make_list_1030@51:1>@67:0>](<f_main_2163@123:0>:int,<fold_right_1143@71:1>:int),
        P[<<fold_right_1143@71:0>@141:2>](var329:int),
        P[<<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>](var329:int,<<<fold_right_1143@71:0>@141:0>@199:0>:int)|- P[<<<fold_right_1143@71:0>@141:0>@199:0>](
        <<<fold_right_1143@71:0>@141:0>@199:0>:int)
        
        P[<fold_right_1143@71:1>](var330:int),
        ((1 <= var330) && (var330 <= (1 + <<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>)))
        |- P[<<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>](<<<fold_right_1143@71:0>@141:1>@147:0>:int,
                                                             <<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>:int)
        
        P[<<<fold_right_1143@71:0>@141:1>@147:0>](<<<fold_right_1143@108:4>@111:0>@157:0>:int),
        P[<fold_right_1143@71:1>]((1 + <fold_right_1143@108:1>):int),
        ((<fold_right_1143@108:1> >= 0) && (0 > <<<fold_right_1143@108:4>@111:0>@157:0>)) |- bot
        
        P[<<make_list_1030@51:1>@67:0>](<f_main_2163@123:0>:int,<fold_right_1143@71:1>:int),
        P[<<fold_right_1143@71:0>@141:2>](<<<fold_right_1143@71:0>@141:1>@147:0>:int)|- P[<<<fold_right_1143@71:0>@141:1>@147:0>](
        <<<fold_right_1143@71:0>@141:1>@147:0>:int)
        
        P[<fold_right_1143@71:1>](var333:int), ((1 <= var333) && (0 <= <<fold_right_1143@71:0>@141:2>))
        |- P[<<fold_right_1143@71:0>@141:2>](<<fold_right_1143@71:0>@141:2>:int)
        
        P[<<make_list_1030@51:1>@67:0>](<make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int),
        P[<<fold_right_1143@71:2>@79:0>](<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int)|- P[<<<make_list_1030@51:1>@67:1>@83:0>](
        <make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int)
        
        P[<fold_right_1143@71:1>](<fold_right_1143@71:1>:int),
        ((<<fold_right_1143@71:2>@79:0> = 0) && (<fold_right_1143@71:1> >= 1))
        |- P[<<fold_right_1143@71:2>@79:0>](<fold_right_1143@71:1>:int,
                                            <<fold_right_1143@71:2>@79:0>:int)
        
        P[<<make_list_1030@51:1>@67:0>](<f_main_2161@69:0>:int,<fold_right_1143@71:1>:int)|- P[<fold_right_1143@71:1>](
        <fold_right_1143@71:1>:int)
        
        P[<<make_list_1030@54:1>@57:0>]((-1 + <make_list_1030@51:0>):int,(
                                        -1 + <<make_list_1030@51:1>@67:0>):int), (
        <make_list_1030@51:0> > 0)
        |- P[<<make_list_1030@51:1>@67:0>](<make_list_1030@51:0>:int,
                                           <<make_list_1030@51:1>@67:0>:int)
        
         ((<<make_list_1030@54:1>@57:0> = 0) && (<make_list_1030@54:0> <= 0))
        |- P[<<make_list_1030@54:1>@57:0>](<make_list_1030@54:0>:int,
                                           <<make_list_1030@54:1>@57:0>:int)
      lower bounds:
        P[<<make_list_1030@54:1>@57:0>](<make_list_1030@54:0>:int,<<make_list_1030@54:1>@57:0>:int) =
        ((<<make_list_1030@54:1>@57:0> = 0) && (<make_list_1030@54:0> <= 0))
        P[<<make_list_1030@51:1>@67:0>](<make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int) =
        ((<make_list_1030@51:0> = 1) && (<<make_list_1030@51:1>@67:0> = 1))
        P[<fail_2169@292:0>](<fail_2169@292:0>:bool) = false
        P[<fold_right_1143@71:1>](<fold_right_1143@71:1>:int) = (<fold_right_1143@71:1> = 1)
        P[<<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>](<<<fold_right_1143@71:0>@141:1>@147:0>:int,<<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>:int) =
        (0 <= <<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>)
        P[<<fold_right_1143@71:0>@141:2>](<<fold_right_1143@71:0>@141:2>:int) = (0 <= <<fold_right_1143@71:0>@141:2>)
        P[<<fold_right_1143@71:2>@79:0>](<fold_right_1143@71:1>:int,<<fold_right_1143@71:2>@79:0>:int) =
        ((<<fold_right_1143@71:2>@79:0> = 0) && (<fold_right_1143@71:1> = 1))
        P[<<<fold_right_1143@71:0>@141:0>@199:0>](<<<fold_right_1143@71:0>@141:0>@199:0>:int) =
        (0 <= <<<fold_right_1143@71:0>@141:0>@199:0>)
        P[<<<fold_right_1143@71:0>@141:1>@147:0>](<<<fold_right_1143@71:0>@141:1>@147:0>:int) =
        (0 <= <<<fold_right_1143@71:0>@141:1>@147:0>)
        P[<<<make_list_1030@51:1>@67:1>@83:0>](<make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int) =
        ((<make_list_1030@51:0> = 1) &&
         ((<<<make_list_1030@51:1>@67:1>@83:0> = 0) && (<<make_list_1030@51:1>@67:0> = 1)))
        P[<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>](<fold_right_1143@71:1>:int,<<fold_right_1143@71:2>@79:0>:int,<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>:int) =
        ((<fold_right_1143@71:1> = 1) &&
         ((<<fold_right_1143@71:2>@79:0> = 0) && (0 <= <<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>)))
        P[<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>](<make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int,<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>:int) =
        ((<make_list_1030@51:0> = 1) &&
         ((<<<make_list_1030@51:1>@67:1>@83:0> = 0) &&
          ((<<make_list_1030@51:1>@67:0> = 1) && (0 <= <<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>))))
        P[<<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:1>@243:0>](
        <make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int,<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>:int,<<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:1>@243:0>:int) =
        ((<<make_list_1030@51:1>@67:0> = 1) &&
         ((<<<make_list_1030@51:1>@67:1>@83:0> = 0) &&
          ((<make_list_1030@51:0> = 1) &&
           ((0 <= <<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>) &&
            (<<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:1>@243:0> =
             (<make_list_1030@51:0> + <<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>))))))
        P[<<<<<fold_right_1143@71:2>@79:1>@102:0>@213:1>@247:0>](<fold_right_1143@71:1>:int,<<fold_right_1143@71:2>@79:0>:int,<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>:int,<<<<<fold_right_1143@71:2>@79:1>@102:0>@213:1>@247:0>:int) =
        ((<fold_right_1143@71:1> = 1) &&
         ((<<fold_right_1143@71:2>@79:0> = 0) &&
          ((0 <= <<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>) &&
           (<<<<<fold_right_1143@71:2>@79:1>@102:0>@213:1>@247:0> = (1 + <<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>)))))
        P[<<<<fold_right_1143@71:0>@141:0>@199:1>@261:0>](<<<fold_right_1143@71:0>@141:0>@199:0>:int,<<<<fold_right_1143@71:0>@141:0>@199:1>@261:0>:int) =
        ((<<<<fold_right_1143@71:0>@141:0>@199:1>@261:0> = (1 + <<<fold_right_1143@71:0>@141:0>@199:0>)) &&
         (0 <= <<<fold_right_1143@71:0>@141:0>@199:0>))
        P[<<<fold_right_1143@71:0>@141:3>@271:0>](<<fold_right_1143@71:0>@141:2>:int,<<<fold_right_1143@71:0>@141:3>@271:0>:int) =
        ((0 <= <<fold_right_1143@71:0>@141:2>) && (1 <= <<<fold_right_1143@71:0>@141:3>@271:0>))
      upper bounds:
        P[<fail_2169@292:0>](var691:bool) = true
      begin GenHcSolver.classify_pids(447862)[4]
        output:
          [<fail_2169@292:0>]
      end GenHcSolver.classify_pids(447862)[4] (0.000000 sec.)
      lb:false
      nub:false
      begin ApronInterface.convex_hull_interpolate(447865)[4]
        lb:false
        nub:false
        begin ExtFormula.Formula.case_analysis_boolean(447868)[5]
          ts: false
          
        end ExtFormula.Formula.case_analysis_boolean(447868)[5] (0.000000 sec.)
        begin ExtFormula.Formula.case_analysis_boolean(447873)[5]
          ts: false
          
        end ExtFormula.Formula.case_analysis_boolean(447873)[5] (0.000000 sec.)
        lb':(-1 >= 0)
        nub':(-1 >= 0)
        begin InterpProver.interpolate(447876)[5]
          begin InterpProver.interpolate_fresh(447877)[6]
            begin InterpProver.interpolate_log(447878)[7]
              input1: (-1 >= 0)
              input2: (-1 >= 0)
              begin InterpProver.interpolate_check(447879)[8]
                begin InterpProver.interpolate_simplify(447880)[9]
                  begin InterpProver.interpolate_quick(447895)[10]
                    
                  end InterpProver.interpolate_quick(447895)[10] (0.000000 sec.)
                  begin minimizing # of disjunctions(447899)[10]
                    input: false
                    output: false
                  end minimizing # of disjunctions(447899)[10] (0.000000 sec.)
                  
                end InterpProver.interpolate_simplify(447880)[9] (0.000000 sec.)
                
              end InterpProver.interpolate_check(447879)[8] (0.000000 sec.)
              output: false
            end InterpProver.interpolate_log(447878)[7] (0.000000 sec.)
            
          end InterpProver.interpolate_fresh(447877)[6] (0.000000 sec.)
          
        end InterpProver.interpolate(447876)[5] (0.000000 sec.)
        output:
          P[<fail_2169@292:0>](<fail_2169@292:0>:bool) = false
      end ApronInterface.convex_hull_interpolate(447865)[4] (0.001000 sec.)
      Horn clauses:
        P[<<make_list_1030@51:1>@67:0>](<f_main_2164@289:0>:int,<f_main_2164@289:1>:int), (
        <f_main_2164@289:1> < 0) |- bot
        
        P[<<<fold_right_1143@71:0>@141:3>@271:0>](<<<fold_right_1143@71:4>@121:0>@127:0>:int,<<<<fold_right_1143@71:4>@121:0>@127:1>@285:0>:int),
        P[<fold_right_1143@71:1>](<fold_right_1143@71:1>:int),
        ((<fold_right_1143@71:1> >= 1) && (<fold_right_1143@71:1> > <<<<fold_right_1143@71:4>@121:0>@127:1>@285:0>))
        |- bot
        
        P[<<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>](<<fold_right_1143@71:0>@141:2>:int,var322:int),
        P[<<<<fold_right_1143@71:0>@141:0>@199:1>@261:0>](var322:int,<<<fold_right_1143@71:0>@141:3>@271:0>:int),
        P[<<make_list_1030@51:1>@67:0>](<f_main_2163@123:0>:int,<fold_right_1143@71:1>:int),
        P[<<fold_right_1143@71:0>@141:2>](<<fold_right_1143@71:0>@141:2>:int)|- P[<<<fold_right_1143@71:0>@141:3>@271:0>](
        <<fold_right_1143@71:0>@141:2>:int,<<<fold_right_1143@71:0>@141:3>@271:0>:int)
        
        P[<<<<<fold_right_1143@71:2>@79:1>@102:0>@213:1>@247:0>](var325:int,0:int,<<<fold_right_1143@71:0>@141:0>@199:0>:int,<<<<fold_right_1143@71:0>@141:0>@199:1>@261:0>:int),
        P[<fold_right_1143@71:1>](var325:int), (1 <= var325)
        |- P[<<<<fold_right_1143@71:0>@141:0>@199:1>@261:0>](<<<fold_right_1143@71:0>@141:0>@199:0>:int,
                                                             <<<<fold_right_1143@71:0>@141:0>@199:1>@261:0>:int)
        
        P[<<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:1>@243:0>](
        <f_main_2163@123:0>:int,<fold_right_1143@71:1>:int,<<fold_right_1143@71:2>@79:0>:int,<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>:int,<<<<<fold_right_1143@71:2>@79:1>@102:0>@213:1>@247:0>:int),
        P[<<make_list_1030@51:1>@67:0>](<f_main_2163@123:0>:int,<fold_right_1143@71:1>:int),
        P[<fold_right_1143@71:1>](<fold_right_1143@71:1>:int)|- P[<<<<<fold_right_1143@71:2>@79:1>@102:0>@213:1>@247:0>](
        <fold_right_1143@71:1>:int,<<fold_right_1143@71:2>@79:0>:int,
        <<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>:int,<<<<<fold_right_1143@71:2>@79:1>@102:0>@213:1>@247:0>:int)
        
        P[<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>](<make_list_1030@51:0>:int,(
                                                              1 + var326):int,0:int,<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>:int),
        P[<<<make_list_1030@51:1>@67:1>@83:0>](<make_list_1030@51:0>:int,(
                                               1 + var326):int,0:int),
        P[<<make_list_1030@54:1>@57:0>]((-1 + <make_list_1030@51:0>):int,var326:int),
        P[<<<make_list_1030@51:1>@67:1>@83:0>](<make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int),
        P[<<make_list_1030@54:1>@57:0>]((-1 + <make_list_1030@51:0>):int,(
                                        -1 + <<make_list_1030@51:1>@67:0>):int),
        P[<<make_list_1030@51:1>@67:0>](<make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int),
        ((<<<make_list_1030@51:1>@67:1>@83:0> = 0) &&
         ((<make_list_1030@51:0> > 0) &&
          (<<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:1>@243:0> =
           (<make_list_1030@51:0> + <<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>))))
        |- P[<<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:1>@243:0>](
        <make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int,
        <<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>:int,<<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:1>@243:0>:int)
        
        P[<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>](<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int,<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>:int),
        P[<<make_list_1030@51:1>@67:0>](<make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int),
        P[<<fold_right_1143@71:2>@79:0>](<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int),
        P[<<<make_list_1030@51:1>@67:1>@83:0>](<make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int)|- P[<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>](
        <make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int,
        <<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>:int)
        
        P[<<<fold_right_1143@71:0>@141:0>@199:0>](<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>:int),
        P[<fold_right_1143@71:1>](<fold_right_1143@71:1>:int),
        P[<<fold_right_1143@71:2>@79:0>](<fold_right_1143@71:1>:int,<<fold_right_1143@71:2>@79:0>:int),
        ((<<fold_right_1143@71:2>@79:0> = 0) && (<fold_right_1143@71:1> >= 1))
        |- P[<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>](<fold_right_1143@71:1>:int,
                                                            <<fold_right_1143@71:2>@79:0>:int,
                                                            <<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>:int)
        
        P[<<make_list_1030@51:1>@67:0>](<f_main_2163@123:0>:int,<fold_right_1143@71:1>:int),
        P[<<fold_right_1143@71:0>@141:2>](var329:int),
        P[<<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>](var329:int,<<<fold_right_1143@71:0>@141:0>@199:0>:int)|- P[<<<fold_right_1143@71:0>@141:0>@199:0>](
        <<<fold_right_1143@71:0>@141:0>@199:0>:int)
        
        P[<fold_right_1143@71:1>](var330:int),
        ((1 <= var330) && (var330 <= (1 + <<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>)))
        |- P[<<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>](<<<fold_right_1143@71:0>@141:1>@147:0>:int,
                                                             <<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>:int)
        
        P[<<<fold_right_1143@71:0>@141:1>@147:0>](<<<fold_right_1143@108:4>@111:0>@157:0>:int),
        P[<fold_right_1143@71:1>]((1 + <fold_right_1143@108:1>):int),
        ((<fold_right_1143@108:1> >= 0) && (0 > <<<fold_right_1143@108:4>@111:0>@157:0>)) |- bot
        
        P[<<make_list_1030@51:1>@67:0>](<f_main_2163@123:0>:int,<fold_right_1143@71:1>:int),
        P[<<fold_right_1143@71:0>@141:2>](<<<fold_right_1143@71:0>@141:1>@147:0>:int)|- P[<<<fold_right_1143@71:0>@141:1>@147:0>](
        <<<fold_right_1143@71:0>@141:1>@147:0>:int)
        
        P[<fold_right_1143@71:1>](var333:int), ((1 <= var333) && (0 <= <<fold_right_1143@71:0>@141:2>))
        |- P[<<fold_right_1143@71:0>@141:2>](<<fold_right_1143@71:0>@141:2>:int)
        
        P[<<make_list_1030@51:1>@67:0>](<make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int),
        P[<<fold_right_1143@71:2>@79:0>](<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int)|- P[<<<make_list_1030@51:1>@67:1>@83:0>](
        <make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int)
        
        P[<fold_right_1143@71:1>](<fold_right_1143@71:1>:int),
        ((<<fold_right_1143@71:2>@79:0> = 0) && (<fold_right_1143@71:1> >= 1))
        |- P[<<fold_right_1143@71:2>@79:0>](<fold_right_1143@71:1>:int,
                                            <<fold_right_1143@71:2>@79:0>:int)
        
        P[<<make_list_1030@51:1>@67:0>](<f_main_2161@69:0>:int,<fold_right_1143@71:1>:int)|- P[<fold_right_1143@71:1>](
        <fold_right_1143@71:1>:int)
        
        P[<<make_list_1030@54:1>@57:0>]((-1 + <make_list_1030@51:0>):int,(
                                        -1 + <<make_list_1030@51:1>@67:0>):int), (
        <make_list_1030@51:0> > 0)
        |- P[<<make_list_1030@51:1>@67:0>](<make_list_1030@51:0>:int,
                                           <<make_list_1030@51:1>@67:0>:int)
        
         ((<<make_list_1030@54:1>@57:0> = 0) && (<make_list_1030@54:0> <= 0))
        |- P[<<make_list_1030@54:1>@57:0>](<make_list_1030@54:0>:int,
                                           <<make_list_1030@54:1>@57:0>:int)
      lower bounds:
        P[<<make_list_1030@54:1>@57:0>](<make_list_1030@54:0>:int,<<make_list_1030@54:1>@57:0>:int) =
        ((<<make_list_1030@54:1>@57:0> = 0) && (<make_list_1030@54:0> <= 0))
        P[<<make_list_1030@51:1>@67:0>](<make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int) =
        ((<make_list_1030@51:0> = 1) && (<<make_list_1030@51:1>@67:0> = 1))
        P[<fold_right_1143@71:1>](<fold_right_1143@71:1>:int) = (<fold_right_1143@71:1> = 1)
        P[<<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>](<<<fold_right_1143@71:0>@141:1>@147:0>:int,<<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>:int) =
        (0 <= <<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>)
        P[<<fold_right_1143@71:0>@141:2>](<<fold_right_1143@71:0>@141:2>:int) = (0 <= <<fold_right_1143@71:0>@141:2>)
        P[<<fold_right_1143@71:2>@79:0>](<fold_right_1143@71:1>:int,<<fold_right_1143@71:2>@79:0>:int) =
        ((<<fold_right_1143@71:2>@79:0> = 0) && (<fold_right_1143@71:1> = 1))
        P[<<<fold_right_1143@71:0>@141:0>@199:0>](<<<fold_right_1143@71:0>@141:0>@199:0>:int) =
        (0 <= <<<fold_right_1143@71:0>@141:0>@199:0>)
        P[<<<fold_right_1143@71:0>@141:1>@147:0>](<<<fold_right_1143@71:0>@141:1>@147:0>:int) =
        (0 <= <<<fold_right_1143@71:0>@141:1>@147:0>)
        P[<<<make_list_1030@51:1>@67:1>@83:0>](<make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int) =
        ((<make_list_1030@51:0> = 1) &&
         ((<<<make_list_1030@51:1>@67:1>@83:0> = 0) && (<<make_list_1030@51:1>@67:0> = 1)))
        P[<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>](<fold_right_1143@71:1>:int,<<fold_right_1143@71:2>@79:0>:int,<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>:int) =
        ((<fold_right_1143@71:1> = 1) &&
         ((<<fold_right_1143@71:2>@79:0> = 0) && (0 <= <<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>)))
        P[<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>](<make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int,<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>:int) =
        ((<make_list_1030@51:0> = 1) &&
         ((<<<make_list_1030@51:1>@67:1>@83:0> = 0) &&
          ((<<make_list_1030@51:1>@67:0> = 1) && (0 <= <<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>))))
        P[<<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:1>@243:0>](
        <make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int,<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>:int,<<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:1>@243:0>:int) =
        ((<<make_list_1030@51:1>@67:0> = 1) &&
         ((<<<make_list_1030@51:1>@67:1>@83:0> = 0) &&
          ((<make_list_1030@51:0> = 1) &&
           ((0 <= <<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>) &&
            (<<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:1>@243:0> =
             (<make_list_1030@51:0> + <<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>))))))
        P[<<<<<fold_right_1143@71:2>@79:1>@102:0>@213:1>@247:0>](<fold_right_1143@71:1>:int,<<fold_right_1143@71:2>@79:0>:int,<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>:int,<<<<<fold_right_1143@71:2>@79:1>@102:0>@213:1>@247:0>:int) =
        ((<fold_right_1143@71:1> = 1) &&
         ((<<fold_right_1143@71:2>@79:0> = 0) &&
          ((0 <= <<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>) &&
           (<<<<<fold_right_1143@71:2>@79:1>@102:0>@213:1>@247:0> = (1 + <<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>)))))
        P[<<<<fold_right_1143@71:0>@141:0>@199:1>@261:0>](<<<fold_right_1143@71:0>@141:0>@199:0>:int,<<<<fold_right_1143@71:0>@141:0>@199:1>@261:0>:int) =
        ((<<<<fold_right_1143@71:0>@141:0>@199:1>@261:0> = (1 + <<<fold_right_1143@71:0>@141:0>@199:0>)) &&
         (0 <= <<<fold_right_1143@71:0>@141:0>@199:0>))
        P[<<<fold_right_1143@71:0>@141:3>@271:0>](<<fold_right_1143@71:0>@141:2>:int,<<<fold_right_1143@71:0>@141:3>@271:0>:int) =
        ((0 <= <<fold_right_1143@71:0>@141:2>) && (1 <= <<<fold_right_1143@71:0>@141:3>@271:0>))
      upper bounds:
        P[<<<fold_right_1143@71:0>@141:3>@271:0>](var771:int,var772:int) = (1 <= var772)
      begin GenHcSolver.classify_pids(479997)[4]
        output:
          [<<<fold_right_1143@71:0>@141:3>@271:0>]
      end GenHcSolver.classify_pids(479997)[4] (0.000000 sec.)
      lb:((0 <= <<fold_right_1143@71:0>@141:2>) && (1 <= <<<fold_right_1143@71:0>@141:3>@271:0>))
      nub:(not (1 <= <<<fold_right_1143@71:0>@141:3>@271:0>))
      begin ApronInterface.convex_hull_interpolate(480000)[4]
        lb:((0 <= <<fold_right_1143@71:0>@141:2>) && (1 <= <<<fold_right_1143@71:0>@141:3>@271:0>))
        nub:(not (1 <= <<<fold_right_1143@71:0>@141:3>@271:0>))
        begin ExtFormula.Formula.case_analysis_boolean(480015)[5]
          ts: ((0 <= <<fold_right_1143@71:0>@141:2>) && (1 <= <<<fold_right_1143@71:0>@141:3>@271:0>))
          
        end ExtFormula.Formula.case_analysis_boolean(480015)[5] (0.000000 sec.)
        begin ExtFormula.Formula.case_analysis_boolean(480025)[5]
          ts: (1 > <<<fold_right_1143@71:0>@141:3>@271:0>)
          
        end ExtFormula.Formula.case_analysis_boolean(480025)[5] (0.000000 sec.)
        lb':(((-1 + <<<fold_right_1143@71:0>@141:3>@271:0>) >= 0) && (<<fold_right_1143@71:0>@141:2> >= 0))
        nub':((-1 * <<<fold_right_1143@71:0>@141:3>@271:0>) >= 0)
        begin InterpProver.interpolate(480030)[5]
          begin InterpProver.interpolate_fresh(480031)[6]
            begin InterpProver.interpolate_log(480032)[7]
              input1: (((-1 + <<<fold_right_1143@71:0>@141:3>@271:0>) >= 0) && (<<fold_right_1143@71:0>@141:2> >= 0))
              input2: ((-1 * <<<fold_right_1143@71:0>@141:3>@271:0>) >= 0)
              begin InterpProver.interpolate_check(480033)[8]
                begin InterpProver.interpolate_simplify(480034)[9]
                  begin InterpProver.interpolate_quick(480073)[10]
                    begin CsisatInterface.interpolate_csisat_wrap(480082)[11]
                      begin CsisatInterface.interpolate_csisat_post_process(480083)[12]
                        begin CsisatInterface.interpolate_csisat_log(480084)[13]
                          input1: (0 <= v_sep_fold_right_1143_sep_71_sep_0_sep_141_sep_2 & 1 <= v_sep_fold_right_1143_sep_71_sep_0_sep_141_sep_3_sep_271_sep_0)
                          input2: v_sep_fold_right_1143_sep_71_sep_0_sep_141_sep_3_sep_271_sep_0 <= 0
                          begin CsisatInterface.interpolate_csisat_raw(480085)[14]
                            
                          end CsisatInterface.interpolate_csisat_raw(480085)[14] (0.000000 sec.)
                          output: -2*v_sep_fold_right_1143_sep_71_sep_0_sep_141_sep_3_sep_271_sep_0 <= -2
                          
                        end CsisatInterface.interpolate_csisat_log(480084)[13] (0.000000 sec.)
                        after simplification: -2*v_sep_fold_right_1143_sep_71_sep_0_sep_141_sep_3_sep_271_sep_0 <= -2
                        after dnf conversion: ((-2*v_sep_fold_right_1143_sep_71_sep_0_sep_141_sep_3_sep_271_sep_0 <= -2))
                        
                      end CsisatInterface.interpolate_csisat_post_process(480083)[12] (0.000000 sec.)
                      
                    end CsisatInterface.interpolate_csisat_wrap(480082)[11] (0.000000 sec.)
                    
                  end InterpProver.interpolate_quick(480073)[10] (0.000000 sec.)
                  
                end InterpProver.interpolate_simplify(480034)[9] (0.001000 sec.)
                
              end InterpProver.interpolate_check(480033)[8] (0.001000 sec.)
              output: (1 <= <<<fold_right_1143@71:0>@141:3>@271:0>)
            end InterpProver.interpolate_log(480032)[7] (0.001000 sec.)
            
          end InterpProver.interpolate_fresh(480031)[6] (0.001000 sec.)
          
        end InterpProver.interpolate(480030)[5] (0.001000 sec.)
        output:
          P[<<<fold_right_1143@71:0>@141:3>@271:0>](<<fold_right_1143@71:0>@141:2>:int,<<<fold_right_1143@71:0>@141:3>@271:0>:int) =
          (1 <= <<<fold_right_1143@71:0>@141:3>@271:0>)
      end ApronInterface.convex_hull_interpolate(480000)[4] (0.002000 sec.)
      Horn clauses:
        P[<<make_list_1030@51:1>@67:0>](<f_main_2164@289:0>:int,<f_main_2164@289:1>:int), (
        <f_main_2164@289:1> < 0) |- bot
        
        P[<fold_right_1143@71:1>](<fold_right_1143@71:1>:int), (1 < <fold_right_1143@71:1>) |- bot
        
        P[<<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>](<<fold_right_1143@71:0>@141:2>:int,var322:int),
        P[<<<<fold_right_1143@71:0>@141:0>@199:1>@261:0>](var322:int,<<<fold_right_1143@71:0>@141:3>@271:0>:int),
        P[<<make_list_1030@51:1>@67:0>](<f_main_2163@123:0>:int,<fold_right_1143@71:1>:int),
        P[<<fold_right_1143@71:0>@141:2>](<<fold_right_1143@71:0>@141:2>:int),
        (1 > <<<fold_right_1143@71:0>@141:3>@271:0>) |- bot
        
        P[<<<<<fold_right_1143@71:2>@79:1>@102:0>@213:1>@247:0>](var325:int,0:int,<<<fold_right_1143@71:0>@141:0>@199:0>:int,<<<<fold_right_1143@71:0>@141:0>@199:1>@261:0>:int),
        P[<fold_right_1143@71:1>](var325:int), (1 <= var325)
        |- P[<<<<fold_right_1143@71:0>@141:0>@199:1>@261:0>](<<<fold_right_1143@71:0>@141:0>@199:0>:int,
                                                             <<<<fold_right_1143@71:0>@141:0>@199:1>@261:0>:int)
        
        P[<<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:1>@243:0>](
        <f_main_2163@123:0>:int,<fold_right_1143@71:1>:int,<<fold_right_1143@71:2>@79:0>:int,<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>:int,<<<<<fold_right_1143@71:2>@79:1>@102:0>@213:1>@247:0>:int),
        P[<<make_list_1030@51:1>@67:0>](<f_main_2163@123:0>:int,<fold_right_1143@71:1>:int),
        P[<fold_right_1143@71:1>](<fold_right_1143@71:1>:int)|- P[<<<<<fold_right_1143@71:2>@79:1>@102:0>@213:1>@247:0>](
        <fold_right_1143@71:1>:int,<<fold_right_1143@71:2>@79:0>:int,
        <<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>:int,<<<<<fold_right_1143@71:2>@79:1>@102:0>@213:1>@247:0>:int)
        
        P[<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>](<make_list_1030@51:0>:int,(
                                                              1 + var326):int,0:int,<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>:int),
        P[<<<make_list_1030@51:1>@67:1>@83:0>](<make_list_1030@51:0>:int,(
                                               1 + var326):int,0:int),
        P[<<make_list_1030@54:1>@57:0>]((-1 + <make_list_1030@51:0>):int,var326:int),
        P[<<<make_list_1030@51:1>@67:1>@83:0>](<make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int),
        P[<<make_list_1030@54:1>@57:0>]((-1 + <make_list_1030@51:0>):int,(
                                        -1 + <<make_list_1030@51:1>@67:0>):int),
        P[<<make_list_1030@51:1>@67:0>](<make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int),
        ((<<<make_list_1030@51:1>@67:1>@83:0> = 0) &&
         ((<make_list_1030@51:0> > 0) &&
          (<<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:1>@243:0> =
           (<make_list_1030@51:0> + <<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>))))
        |- P[<<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:1>@243:0>](
        <make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int,
        <<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>:int,<<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:1>@243:0>:int)
        
        P[<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>](<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int,<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>:int),
        P[<<make_list_1030@51:1>@67:0>](<make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int),
        P[<<fold_right_1143@71:2>@79:0>](<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int),
        P[<<<make_list_1030@51:1>@67:1>@83:0>](<make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int)|- P[<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>](
        <make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int,
        <<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>:int)
        
        P[<<<fold_right_1143@71:0>@141:0>@199:0>](<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>:int),
        P[<fold_right_1143@71:1>](<fold_right_1143@71:1>:int),
        P[<<fold_right_1143@71:2>@79:0>](<fold_right_1143@71:1>:int,<<fold_right_1143@71:2>@79:0>:int),
        ((<<fold_right_1143@71:2>@79:0> = 0) && (<fold_right_1143@71:1> >= 1))
        |- P[<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>](<fold_right_1143@71:1>:int,
                                                            <<fold_right_1143@71:2>@79:0>:int,
                                                            <<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>:int)
        
        P[<<make_list_1030@51:1>@67:0>](<f_main_2163@123:0>:int,<fold_right_1143@71:1>:int),
        P[<<fold_right_1143@71:0>@141:2>](var329:int),
        P[<<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>](var329:int,<<<fold_right_1143@71:0>@141:0>@199:0>:int)|- P[<<<fold_right_1143@71:0>@141:0>@199:0>](
        <<<fold_right_1143@71:0>@141:0>@199:0>:int)
        
        P[<fold_right_1143@71:1>](var330:int),
        ((1 <= var330) && (var330 <= (1 + <<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>)))
        |- P[<<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>](<<<fold_right_1143@71:0>@141:1>@147:0>:int,
                                                             <<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>:int)
        
        P[<<<fold_right_1143@71:0>@141:1>@147:0>](<<<fold_right_1143@108:4>@111:0>@157:0>:int),
        P[<fold_right_1143@71:1>]((1 + <fold_right_1143@108:1>):int),
        ((<fold_right_1143@108:1> >= 0) && (0 > <<<fold_right_1143@108:4>@111:0>@157:0>)) |- bot
        
        P[<<make_list_1030@51:1>@67:0>](<f_main_2163@123:0>:int,<fold_right_1143@71:1>:int),
        P[<<fold_right_1143@71:0>@141:2>](<<<fold_right_1143@71:0>@141:1>@147:0>:int)|- P[<<<fold_right_1143@71:0>@141:1>@147:0>](
        <<<fold_right_1143@71:0>@141:1>@147:0>:int)
        
        P[<fold_right_1143@71:1>](var333:int), ((1 <= var333) && (0 <= <<fold_right_1143@71:0>@141:2>))
        |- P[<<fold_right_1143@71:0>@141:2>](<<fold_right_1143@71:0>@141:2>:int)
        
        P[<<make_list_1030@51:1>@67:0>](<make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int),
        P[<<fold_right_1143@71:2>@79:0>](<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int)|- P[<<<make_list_1030@51:1>@67:1>@83:0>](
        <make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int)
        
        P[<fold_right_1143@71:1>](<fold_right_1143@71:1>:int),
        ((<<fold_right_1143@71:2>@79:0> = 0) && (<fold_right_1143@71:1> >= 1))
        |- P[<<fold_right_1143@71:2>@79:0>](<fold_right_1143@71:1>:int,
                                            <<fold_right_1143@71:2>@79:0>:int)
        
        P[<<make_list_1030@51:1>@67:0>](<f_main_2161@69:0>:int,<fold_right_1143@71:1>:int)|- P[<fold_right_1143@71:1>](
        <fold_right_1143@71:1>:int)
        
        P[<<make_list_1030@54:1>@57:0>]((-1 + <make_list_1030@51:0>):int,(
                                        -1 + <<make_list_1030@51:1>@67:0>):int), (
        <make_list_1030@51:0> > 0)
        |- P[<<make_list_1030@51:1>@67:0>](<make_list_1030@51:0>:int,
                                           <<make_list_1030@51:1>@67:0>:int)
        
         ((<<make_list_1030@54:1>@57:0> = 0) && (<make_list_1030@54:0> <= 0))
        |- P[<<make_list_1030@54:1>@57:0>](<make_list_1030@54:0>:int,
                                           <<make_list_1030@54:1>@57:0>:int)
      lower bounds:
        P[<<make_list_1030@54:1>@57:0>](<make_list_1030@54:0>:int,<<make_list_1030@54:1>@57:0>:int) =
        ((<<make_list_1030@54:1>@57:0> = 0) && (<make_list_1030@54:0> <= 0))
        P[<<make_list_1030@51:1>@67:0>](<make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int) =
        ((<make_list_1030@51:0> = 1) && (<<make_list_1030@51:1>@67:0> = 1))
        P[<fold_right_1143@71:1>](<fold_right_1143@71:1>:int) = (<fold_right_1143@71:1> = 1)
        P[<<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>](<<<fold_right_1143@71:0>@141:1>@147:0>:int,<<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>:int) =
        (0 <= <<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>)
        P[<<fold_right_1143@71:0>@141:2>](<<fold_right_1143@71:0>@141:2>:int) = (0 <= <<fold_right_1143@71:0>@141:2>)
        P[<<fold_right_1143@71:2>@79:0>](<fold_right_1143@71:1>:int,<<fold_right_1143@71:2>@79:0>:int) =
        ((<<fold_right_1143@71:2>@79:0> = 0) && (<fold_right_1143@71:1> = 1))
        P[<<<fold_right_1143@71:0>@141:0>@199:0>](<<<fold_right_1143@71:0>@141:0>@199:0>:int) =
        (0 <= <<<fold_right_1143@71:0>@141:0>@199:0>)
        P[<<<fold_right_1143@71:0>@141:1>@147:0>](<<<fold_right_1143@71:0>@141:1>@147:0>:int) =
        (0 <= <<<fold_right_1143@71:0>@141:1>@147:0>)
        P[<<<make_list_1030@51:1>@67:1>@83:0>](<make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int) =
        ((<make_list_1030@51:0> = 1) &&
         ((<<<make_list_1030@51:1>@67:1>@83:0> = 0) && (<<make_list_1030@51:1>@67:0> = 1)))
        P[<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>](<fold_right_1143@71:1>:int,<<fold_right_1143@71:2>@79:0>:int,<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>:int) =
        ((<fold_right_1143@71:1> = 1) &&
         ((<<fold_right_1143@71:2>@79:0> = 0) && (0 <= <<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>)))
        P[<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>](<make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int,<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>:int) =
        ((<make_list_1030@51:0> = 1) &&
         ((<<<make_list_1030@51:1>@67:1>@83:0> = 0) &&
          ((<<make_list_1030@51:1>@67:0> = 1) && (0 <= <<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>))))
        P[<<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:1>@243:0>](
        <make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int,<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>:int,<<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:1>@243:0>:int) =
        ((<<make_list_1030@51:1>@67:0> = 1) &&
         ((<<<make_list_1030@51:1>@67:1>@83:0> = 0) &&
          ((<make_list_1030@51:0> = 1) &&
           ((0 <= <<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>) &&
            (<<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:1>@243:0> =
             (<make_list_1030@51:0> + <<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>))))))
        P[<<<<<fold_right_1143@71:2>@79:1>@102:0>@213:1>@247:0>](<fold_right_1143@71:1>:int,<<fold_right_1143@71:2>@79:0>:int,<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>:int,<<<<<fold_right_1143@71:2>@79:1>@102:0>@213:1>@247:0>:int) =
        ((<fold_right_1143@71:1> = 1) &&
         ((<<fold_right_1143@71:2>@79:0> = 0) &&
          ((0 <= <<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>) &&
           (<<<<<fold_right_1143@71:2>@79:1>@102:0>@213:1>@247:0> = (1 + <<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>)))))
        P[<<<<fold_right_1143@71:0>@141:0>@199:1>@261:0>](<<<fold_right_1143@71:0>@141:0>@199:0>:int,<<<<fold_right_1143@71:0>@141:0>@199:1>@261:0>:int) =
        ((<<<<fold_right_1143@71:0>@141:0>@199:1>@261:0> = (1 + <<<fold_right_1143@71:0>@141:0>@199:0>)) &&
         (0 <= <<<fold_right_1143@71:0>@141:0>@199:0>))
      upper bounds:
        P[<<<<fold_right_1143@71:0>@141:0>@199:1>@261:0>](var846:int,var847:int) = ((0 > var846) || (1 <= var847))
      begin GenHcSolver.classify_pids(510888)[4]
        output:
          [<<<<fold_right_1143@71:0>@141:0>@199:1>@261:0>]
      end GenHcSolver.classify_pids(510888)[4] (0.000000 sec.)
      lb:((<<<<fold_right_1143@71:0>@141:0>@199:1>@261:0> = (1 + <<<fold_right_1143@71:0>@141:0>@199:0>)) &&
          (0 <= <<<fold_right_1143@71:0>@141:0>@199:0>))
      nub:(not ((0 > <<<fold_right_1143@71:0>@141:0>@199:0>) || (1 <= <<<<fold_right_1143@71:0>@141:0>@199:1>@261:0>)))
      begin ApronInterface.convex_hull_interpolate(510891)[4]
        lb:((<<<<fold_right_1143@71:0>@141:0>@199:1>@261:0> = (1 + <<<fold_right_1143@71:0>@141:0>@199:0>)) &&
            (0 <= <<<fold_right_1143@71:0>@141:0>@199:0>))
        nub:(not
               ((0 > <<<fold_right_1143@71:0>@141:0>@199:0>) || (1 <= <<<<fold_right_1143@71:0>@141:0>@199:1>@261:0>)))
        begin ExtFormula.Formula.case_analysis_boolean(510909)[5]
          ts: ((<<<<fold_right_1143@71:0>@141:0>@199:1>@261:0> = (1 + <<<fold_right_1143@71:0>@141:0>@199:0>)) &&
               (0 <= <<<fold_right_1143@71:0>@141:0>@199:0>))
          
        end ExtFormula.Formula.case_analysis_boolean(510909)[5] (0.000000 sec.)
        begin ExtFormula.Formula.case_analysis_boolean(510930)[5]
          ts: ((0 <= <<<fold_right_1143@71:0>@141:0>@199:0>) && (1 > <<<<fold_right_1143@71:0>@141:0>@199:1>@261:0>))
          
        end ExtFormula.Formula.case_analysis_boolean(510930)[5] (0.001000 sec.)
        lb':((((-1 + <<<<fold_right_1143@71:0>@141:0>@199:1>@261:0>) + (-1 * <<<fold_right_1143@71:0>@141:0>@199:0>)) =
              0) && (<<<fold_right_1143@71:0>@141:0>@199:0> >= 0))
        nub':(((-1 * <<<<fold_right_1143@71:0>@141:0>@199:1>@261:0>) >= 0) &&
              (<<<fold_right_1143@71:0>@141:0>@199:0> >= 0))
        begin InterpProver.interpolate(510936)[5]
          begin InterpProver.interpolate_fresh(510937)[6]
            begin InterpProver.interpolate_log(510938)[7]
              input1: ((((-1 + <<<<fold_right_1143@71:0>@141:0>@199:1>@261:0>) +
                         (-1 * <<<fold_right_1143@71:0>@141:0>@199:0>)) = 0) &&
                       (<<<fold_right_1143@71:0>@141:0>@199:0> >= 0))
              input2: (((-1 * <<<<fold_right_1143@71:0>@141:0>@199:1>@261:0>) >= 0) &&
                       (<<<fold_right_1143@71:0>@141:0>@199:0> >= 0))
              begin InterpProver.interpolate_check(510939)[8]
                begin InterpProver.interpolate_simplify(510940)[9]
                  begin InterpProver.interpolate_quick(511001)[10]
                    begin CsisatInterface.interpolate_csisat_wrap(511010)[11]
                      begin CsisatInterface.interpolate_csisat_post_process(511011)[12]
                        begin CsisatInterface.interpolate_csisat_log(511012)[13]
                          input1: (v_sep_fold_right_1143_sep_71_sep_0_sep_141_sep_0_sep_199_sep_1_sep_261_sep_0 = (1 + v_sep_fold_right_1143_sep_71_sep_0_sep_141_sep_0_sep_199_sep_0) & 0 <= v_sep_fold_right_1143_sep_71_sep_0_sep_141_sep_0_sep_199_sep_0)
                          input2: (0 <= v_sep_fold_right_1143_sep_71_sep_0_sep_141_sep_0_sep_199_sep_0 & v_sep_fold_right_1143_sep_71_sep_0_sep_141_sep_0_sep_199_sep_1_sep_261_sep_0 <= 0)
                          begin CsisatInterface.interpolate_csisat_raw(511013)[14]
                            
                          end CsisatInterface.interpolate_csisat_raw(511013)[14] (0.000000 sec.)
                          output: -2*v_sep_fold_right_1143_sep_71_sep_0_sep_141_sep_0_sep_199_sep_1_sep_261_sep_0 <= -2
                          
                        end CsisatInterface.interpolate_csisat_log(511012)[13] (0.000000 sec.)
                        after simplification: -2*v_sep_fold_right_1143_sep_71_sep_0_sep_141_sep_0_sep_199_sep_1_sep_261_sep_0 <= -2
                        after dnf conversion: ((-2*v_sep_fold_right_1143_sep_71_sep_0_sep_141_sep_0_sep_199_sep_1_sep_261_sep_0 <= -2))
                        
                      end CsisatInterface.interpolate_csisat_post_process(511011)[12] (0.000000 sec.)
                      
                    end CsisatInterface.interpolate_csisat_wrap(511010)[11] (0.000000 sec.)
                    
                  end InterpProver.interpolate_quick(511001)[10] (0.001000 sec.)
                  
                end InterpProver.interpolate_simplify(510940)[9] (0.001000 sec.)
                
              end InterpProver.interpolate_check(510939)[8] (0.002000 sec.)
              output: (1 <= <<<<fold_right_1143@71:0>@141:0>@199:1>@261:0>)
            end InterpProver.interpolate_log(510938)[7] (0.002000 sec.)
            
          end InterpProver.interpolate_fresh(510937)[6] (0.002000 sec.)
          
        end InterpProver.interpolate(510936)[5] (0.002000 sec.)
        output:
          P[<<<<fold_right_1143@71:0>@141:0>@199:1>@261:0>](<<<fold_right_1143@71:0>@141:0>@199:0>:int,<<<<fold_right_1143@71:0>@141:0>@199:1>@261:0>:int) =
          (1 <= <<<<fold_right_1143@71:0>@141:0>@199:1>@261:0>)
      end ApronInterface.convex_hull_interpolate(510891)[4] (0.003000 sec.)
      Horn clauses:
        P[<<make_list_1030@51:1>@67:0>](<f_main_2164@289:0>:int,<f_main_2164@289:1>:int), (
        <f_main_2164@289:1> < 0) |- bot
        
        P[<fold_right_1143@71:1>](<fold_right_1143@71:1>:int), (1 < <fold_right_1143@71:1>) |- bot
        
        P[<<<<<fold_right_1143@71:2>@79:1>@102:0>@213:1>@247:0>](var325:int,0:int,<<<fold_right_1143@71:0>@141:0>@199:0>:int,<<<<fold_right_1143@71:0>@141:0>@199:1>@261:0>:int),
        P[<fold_right_1143@71:1>](var325:int), ((1 <= var325) && (1 > <<<<fold_right_1143@71:0>@141:0>@199:1>@261:0>))
        |- bot
        
        P[<<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:1>@243:0>](
        <f_main_2163@123:0>:int,<fold_right_1143@71:1>:int,<<fold_right_1143@71:2>@79:0>:int,<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>:int,<<<<<fold_right_1143@71:2>@79:1>@102:0>@213:1>@247:0>:int),
        P[<<make_list_1030@51:1>@67:0>](<f_main_2163@123:0>:int,<fold_right_1143@71:1>:int),
        P[<fold_right_1143@71:1>](<fold_right_1143@71:1>:int)|- P[<<<<<fold_right_1143@71:2>@79:1>@102:0>@213:1>@247:0>](
        <fold_right_1143@71:1>:int,<<fold_right_1143@71:2>@79:0>:int,
        <<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>:int,<<<<<fold_right_1143@71:2>@79:1>@102:0>@213:1>@247:0>:int)
        
        P[<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>](<make_list_1030@51:0>:int,(
                                                              1 + var326):int,0:int,<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>:int),
        P[<<<make_list_1030@51:1>@67:1>@83:0>](<make_list_1030@51:0>:int,(
                                               1 + var326):int,0:int),
        P[<<make_list_1030@54:1>@57:0>]((-1 + <make_list_1030@51:0>):int,var326:int),
        P[<<<make_list_1030@51:1>@67:1>@83:0>](<make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int),
        P[<<make_list_1030@54:1>@57:0>]((-1 + <make_list_1030@51:0>):int,(
                                        -1 + <<make_list_1030@51:1>@67:0>):int),
        P[<<make_list_1030@51:1>@67:0>](<make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int),
        ((<<<make_list_1030@51:1>@67:1>@83:0> = 0) &&
         ((<make_list_1030@51:0> > 0) &&
          (<<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:1>@243:0> =
           (<make_list_1030@51:0> + <<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>))))
        |- P[<<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:1>@243:0>](
        <make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int,
        <<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>:int,<<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:1>@243:0>:int)
        
        P[<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>](<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int,<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>:int),
        P[<<make_list_1030@51:1>@67:0>](<make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int),
        P[<<fold_right_1143@71:2>@79:0>](<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int),
        P[<<<make_list_1030@51:1>@67:1>@83:0>](<make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int)|- P[<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>](
        <make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int,
        <<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>:int)
        
        P[<<<fold_right_1143@71:0>@141:0>@199:0>](<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>:int),
        P[<fold_right_1143@71:1>](<fold_right_1143@71:1>:int),
        P[<<fold_right_1143@71:2>@79:0>](<fold_right_1143@71:1>:int,<<fold_right_1143@71:2>@79:0>:int),
        ((<<fold_right_1143@71:2>@79:0> = 0) && (<fold_right_1143@71:1> >= 1))
        |- P[<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>](<fold_right_1143@71:1>:int,
                                                            <<fold_right_1143@71:2>@79:0>:int,
                                                            <<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>:int)
        
        P[<<make_list_1030@51:1>@67:0>](<f_main_2163@123:0>:int,<fold_right_1143@71:1>:int),
        P[<<fold_right_1143@71:0>@141:2>](var329:int),
        P[<<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>](var329:int,<<<fold_right_1143@71:0>@141:0>@199:0>:int)|- P[<<<fold_right_1143@71:0>@141:0>@199:0>](
        <<<fold_right_1143@71:0>@141:0>@199:0>:int)
        
        P[<fold_right_1143@71:1>](var330:int),
        ((1 <= var330) && (var330 <= (1 + <<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>)))
        |- P[<<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>](<<<fold_right_1143@71:0>@141:1>@147:0>:int,
                                                             <<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>:int)
        
        P[<<<fold_right_1143@71:0>@141:1>@147:0>](<<<fold_right_1143@108:4>@111:0>@157:0>:int),
        P[<fold_right_1143@71:1>]((1 + <fold_right_1143@108:1>):int),
        ((<fold_right_1143@108:1> >= 0) && (0 > <<<fold_right_1143@108:4>@111:0>@157:0>)) |- bot
        
        P[<<make_list_1030@51:1>@67:0>](<f_main_2163@123:0>:int,<fold_right_1143@71:1>:int),
        P[<<fold_right_1143@71:0>@141:2>](<<<fold_right_1143@71:0>@141:1>@147:0>:int)|- P[<<<fold_right_1143@71:0>@141:1>@147:0>](
        <<<fold_right_1143@71:0>@141:1>@147:0>:int)
        
        P[<fold_right_1143@71:1>](var333:int), ((1 <= var333) && (0 <= <<fold_right_1143@71:0>@141:2>))
        |- P[<<fold_right_1143@71:0>@141:2>](<<fold_right_1143@71:0>@141:2>:int)
        
        P[<<make_list_1030@51:1>@67:0>](<make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int),
        P[<<fold_right_1143@71:2>@79:0>](<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int)|- P[<<<make_list_1030@51:1>@67:1>@83:0>](
        <make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int)
        
        P[<fold_right_1143@71:1>](<fold_right_1143@71:1>:int),
        ((<<fold_right_1143@71:2>@79:0> = 0) && (<fold_right_1143@71:1> >= 1))
        |- P[<<fold_right_1143@71:2>@79:0>](<fold_right_1143@71:1>:int,
                                            <<fold_right_1143@71:2>@79:0>:int)
        
        P[<<make_list_1030@51:1>@67:0>](<f_main_2161@69:0>:int,<fold_right_1143@71:1>:int)|- P[<fold_right_1143@71:1>](
        <fold_right_1143@71:1>:int)
        
        P[<<make_list_1030@54:1>@57:0>]((-1 + <make_list_1030@51:0>):int,(
                                        -1 + <<make_list_1030@51:1>@67:0>):int), (
        <make_list_1030@51:0> > 0)
        |- P[<<make_list_1030@51:1>@67:0>](<make_list_1030@51:0>:int,
                                           <<make_list_1030@51:1>@67:0>:int)
        
         ((<<make_list_1030@54:1>@57:0> = 0) && (<make_list_1030@54:0> <= 0))
        |- P[<<make_list_1030@54:1>@57:0>](<make_list_1030@54:0>:int,
                                           <<make_list_1030@54:1>@57:0>:int)
      lower bounds:
        P[<<make_list_1030@54:1>@57:0>](<make_list_1030@54:0>:int,<<make_list_1030@54:1>@57:0>:int) =
        ((<<make_list_1030@54:1>@57:0> = 0) && (<make_list_1030@54:0> <= 0))
        P[<<make_list_1030@51:1>@67:0>](<make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int) =
        ((<make_list_1030@51:0> = 1) && (<<make_list_1030@51:1>@67:0> = 1))
        P[<fold_right_1143@71:1>](<fold_right_1143@71:1>:int) = (<fold_right_1143@71:1> = 1)
        P[<<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>](<<<fold_right_1143@71:0>@141:1>@147:0>:int,<<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>:int) =
        (0 <= <<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>)
        P[<<fold_right_1143@71:0>@141:2>](<<fold_right_1143@71:0>@141:2>:int) = (0 <= <<fold_right_1143@71:0>@141:2>)
        P[<<fold_right_1143@71:2>@79:0>](<fold_right_1143@71:1>:int,<<fold_right_1143@71:2>@79:0>:int) =
        ((<<fold_right_1143@71:2>@79:0> = 0) && (<fold_right_1143@71:1> = 1))
        P[<<<fold_right_1143@71:0>@141:0>@199:0>](<<<fold_right_1143@71:0>@141:0>@199:0>:int) =
        (0 <= <<<fold_right_1143@71:0>@141:0>@199:0>)
        P[<<<fold_right_1143@71:0>@141:1>@147:0>](<<<fold_right_1143@71:0>@141:1>@147:0>:int) =
        (0 <= <<<fold_right_1143@71:0>@141:1>@147:0>)
        P[<<<make_list_1030@51:1>@67:1>@83:0>](<make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int) =
        ((<make_list_1030@51:0> = 1) &&
         ((<<<make_list_1030@51:1>@67:1>@83:0> = 0) && (<<make_list_1030@51:1>@67:0> = 1)))
        P[<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>](<fold_right_1143@71:1>:int,<<fold_right_1143@71:2>@79:0>:int,<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>:int) =
        ((<fold_right_1143@71:1> = 1) &&
         ((<<fold_right_1143@71:2>@79:0> = 0) && (0 <= <<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>)))
        P[<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>](<make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int,<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>:int) =
        ((<make_list_1030@51:0> = 1) &&
         ((<<<make_list_1030@51:1>@67:1>@83:0> = 0) &&
          ((<<make_list_1030@51:1>@67:0> = 1) && (0 <= <<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>))))
        P[<<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:1>@243:0>](
        <make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int,<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>:int,<<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:1>@243:0>:int) =
        ((<<make_list_1030@51:1>@67:0> = 1) &&
         ((<<<make_list_1030@51:1>@67:1>@83:0> = 0) &&
          ((<make_list_1030@51:0> = 1) &&
           ((0 <= <<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>) &&
            (<<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:1>@243:0> =
             (<make_list_1030@51:0> + <<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>))))))
        P[<<<<<fold_right_1143@71:2>@79:1>@102:0>@213:1>@247:0>](<fold_right_1143@71:1>:int,<<fold_right_1143@71:2>@79:0>:int,<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>:int,<<<<<fold_right_1143@71:2>@79:1>@102:0>@213:1>@247:0>:int) =
        ((<fold_right_1143@71:1> = 1) &&
         ((<<fold_right_1143@71:2>@79:0> = 0) &&
          ((0 <= <<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>) &&
           (<<<<<fold_right_1143@71:2>@79:1>@102:0>@213:1>@247:0> = (1 + <<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>)))))
      upper bounds:
        P[<<make_list_1030@51:1>@67:0>](var908:int,var909:int) = ((var909 <= 1) && (var909 >= 0))
      begin GenHcSolver.classify_pids(531761)[4]
        output:
          [<<make_list_1030@51:1>@67:0>]
      end GenHcSolver.classify_pids(531761)[4] (0.000000 sec.)
      lb:((<make_list_1030@51:0> = 1) && (<<make_list_1030@51:1>@67:0> = 1))
      nub:(not ((<<make_list_1030@51:1>@67:0> <= 1) && (<<make_list_1030@51:1>@67:0> >= 0)))
      begin ApronInterface.convex_hull_interpolate(531764)[4]
        lb:((<make_list_1030@51:0> = 1) && (<<make_list_1030@51:1>@67:0> = 1))
        nub:(not ((<<make_list_1030@51:1>@67:0> <= 1) && (<<make_list_1030@51:1>@67:0> >= 0)))
        begin ExtFormula.Formula.case_analysis_boolean(531776)[5]
          ts: ((<make_list_1030@51:0> = 1) && (<<make_list_1030@51:1>@67:0> = 1))
          
        end ExtFormula.Formula.case_analysis_boolean(531776)[5] (0.000000 sec.)
        begin ExtFormula.Formula.case_analysis_boolean(531792)[5]
          ts: ((<<make_list_1030@51:1>@67:0> < 0) || (<<make_list_1030@51:1>@67:0> > 1))
          
        end ExtFormula.Formula.case_analysis_boolean(531792)[5] (0.000000 sec.)
        lb':(((-1 + <<make_list_1030@51:1>@67:0>) = 0) && ((-1 + <make_list_1030@51:0>) = 0))
        nub':true
        begin InterpProver.interpolate(531798)[5]
          begin InterpProver.interpolate_fresh(531799)[6]
            begin InterpProver.interpolate_log(531800)[7]
              input1: (((-1 + <<make_list_1030@51:1>@67:0>) = 0) && ((-1 + <make_list_1030@51:0>) = 0))
              input2: true
              begin InterpProver.interpolate_check(531801)[8]
                begin InterpProver.interpolate_simplify(531802)[9]
                  begin InterpProver.interpolate_quick(531837)[10]
                    begin CsisatInterface.interpolate_csisat_wrap(531840)[11]
                      begin CsisatInterface.interpolate_csisat_post_process(531841)[12]
                        begin CsisatInterface.interpolate_csisat_log(531842)[13]
                          input1: true
                          input2: true
                          begin CsisatInterface.interpolate_csisat_raw(531843)[14]
                            
                          end CsisatInterface.interpolate_csisat_raw(531843)[14] (0.000000 sec.)
                          
                        end CsisatInterface.interpolate_csisat_log(531842)[13] (0.000000 sec.)
                        
                      end CsisatInterface.interpolate_csisat_post_process(531841)[12] (0.000000 sec.)
                      
                    end CsisatInterface.interpolate_csisat_wrap(531840)[11] (0.000000 sec.)
                    
                  end InterpProver.interpolate_quick(531837)[10] (0.000000 sec.)
                  
                end InterpProver.interpolate_simplify(531802)[9] (0.000000 sec.)
                
              end InterpProver.interpolate_check(531801)[8] (0.000999 sec.)
              there is no interpolant
            end InterpProver.interpolate_log(531800)[7] (0.000999 sec.)
            
          end InterpProver.interpolate_fresh(531799)[6] (0.000999 sec.)
          
        end InterpProver.interpolate(531798)[5] (0.000999 sec.)
        begin InterpProver.interpolate(531851)[5]
          begin InterpProver.interpolate_fresh(531852)[6]
            begin InterpProver.interpolate_log(531853)[7]
              input1: (((-1 + <<make_list_1030@51:1>@67:0>) = 0) && ((-1 + <make_list_1030@51:0>) = 0))
              input2: (not ((<<make_list_1030@51:1>@67:0> <= 1) && (<<make_list_1030@51:1>@67:0> >= 0)))
              begin InterpProver.interpolate_check(531854)[8]
                begin InterpProver.interpolate_simplify(531855)[9]
                  begin InterpProver.interpolate_quick(531906)[10]
                    begin CsisatInterface.interpolate_csisat_wrap(531915)[11]
                      begin CsisatInterface.interpolate_csisat_post_process(531916)[12]
                        begin CsisatInterface.interpolate_csisat_log(531917)[13]
                          input1: 1 = v_sep_make_list_1030_sep_51_sep_1_sep_67_sep_0
                          input2: (2 <= v_sep_make_list_1030_sep_51_sep_1_sep_67_sep_0 | (1 + v_sep_make_list_1030_sep_51_sep_1_sep_67_sep_0) <= 0)
                          begin CsisatInterface.interpolate_csisat_raw(531918)[14]
                            
                          end CsisatInterface.interpolate_csisat_raw(531918)[14] (0.000000 sec.)
                          output: (-1*v_sep_make_list_1030_sep_51_sep_1_sep_67_sep_0 <= -1 & 2*v_sep_make_list_1030_sep_51_sep_1_sep_67_sep_0 <= 2)
                          
                        end CsisatInterface.interpolate_csisat_log(531917)[13] (0.000000 sec.)
                        after simplification: (-1*v_sep_make_list_1030_sep_51_sep_1_sep_67_sep_0 <= -1 & 2*v_sep_make_list_1030_sep_51_sep_1_sep_67_sep_0 <= 2)
                        after dnf conversion: ((-1*v_sep_make_list_1030_sep_51_sep_1_sep_67_sep_0 <= -1 & 2*v_sep_make_list_1030_sep_51_sep_1_sep_67_sep_0 <= 2))
                        
                      end CsisatInterface.interpolate_csisat_post_process(531916)[12] (0.001000 sec.)
                      
                    end CsisatInterface.interpolate_csisat_wrap(531915)[11] (0.001000 sec.)
                    
                  end InterpProver.interpolate_quick(531906)[10] (0.001000 sec.)
                  
                end InterpProver.interpolate_simplify(531855)[9] (0.001000 sec.)
                
              end InterpProver.interpolate_check(531854)[8] (0.002000 sec.)
              output: (<<make_list_1030@51:1>@67:0> = 1)
            end InterpProver.interpolate_log(531853)[7] (0.002000 sec.)
            
          end InterpProver.interpolate_fresh(531852)[6] (0.002000 sec.)
          
        end InterpProver.interpolate(531851)[5] (0.002000 sec.)
        output:
          P[<<make_list_1030@51:1>@67:0>](<make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int) =
          (<<make_list_1030@51:1>@67:0> = 1)
      end ApronInterface.convex_hull_interpolate(531764)[4] (0.003999 sec.)
      Horn clauses:
        P[<fold_right_1143@71:1>](<fold_right_1143@71:1>:int), (1 < <fold_right_1143@71:1>) |- bot
        
        P[<<<<<fold_right_1143@71:2>@79:1>@102:0>@213:1>@247:0>](var325:int,0:int,<<<fold_right_1143@71:0>@141:0>@199:0>:int,<<<<fold_right_1143@71:0>@141:0>@199:1>@261:0>:int),
        P[<fold_right_1143@71:1>](var325:int), ((1 <= var325) && (1 > <<<<fold_right_1143@71:0>@141:0>@199:1>@261:0>))
        |- bot
        
        P[<<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:1>@243:0>](
        <f_main_2163@123:0>:int,<fold_right_1143@71:1>:int,<<fold_right_1143@71:2>@79:0>:int,<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>:int,<<<<<fold_right_1143@71:2>@79:1>@102:0>@213:1>@247:0>:int),
        P[<fold_right_1143@71:1>](<fold_right_1143@71:1>:int), (<fold_right_1143@71:1> = 1)
        |- P[<<<<<fold_right_1143@71:2>@79:1>@102:0>@213:1>@247:0>](<fold_right_1143@71:1>:int,
                                                                    <<fold_right_1143@71:2>@79:0>:int,
                                                                    <<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>:int,
                                                                    <<<<<fold_right_1143@71:2>@79:1>@102:0>@213:1>@247:0>:int)
        
        P[<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>](<make_list_1030@51:0>:int,(
                                                              1 + var326):int,0:int,<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>:int),
        P[<<<make_list_1030@51:1>@67:1>@83:0>](<make_list_1030@51:0>:int,(
                                               1 + var326):int,0:int),
        P[<<make_list_1030@54:1>@57:0>]((-1 + <make_list_1030@51:0>):int,var326:int),
        P[<<<make_list_1030@51:1>@67:1>@83:0>](<make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int),
        P[<<make_list_1030@54:1>@57:0>]((-1 + <make_list_1030@51:0>):int,(
                                        -1 + <<make_list_1030@51:1>@67:0>):int),
        ((<<<make_list_1030@51:1>@67:1>@83:0> = 0) &&
         ((<<make_list_1030@51:1>@67:0> = 1) &&
          ((<make_list_1030@51:0> > 0) &&
           (<<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:1>@243:0> =
            (<make_list_1030@51:0> + <<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>)))))
        |- P[<<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:1>@243:0>](
        <make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int,
        <<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>:int,<<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:1>@243:0>:int)
        
        P[<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>](<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int,<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>:int),
        P[<<fold_right_1143@71:2>@79:0>](<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int),
        P[<<<make_list_1030@51:1>@67:1>@83:0>](<make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int),
        (<<make_list_1030@51:1>@67:0> = 1)
        |- P[<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>](<make_list_1030@51:0>:int,
                                                                 <<make_list_1030@51:1>@67:0>:int,
                                                                 <<<make_list_1030@51:1>@67:1>@83:0>:int,
                                                                 <<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>:int)
        
        P[<<<fold_right_1143@71:0>@141:0>@199:0>](<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>:int),
        P[<fold_right_1143@71:1>](<fold_right_1143@71:1>:int),
        P[<<fold_right_1143@71:2>@79:0>](<fold_right_1143@71:1>:int,<<fold_right_1143@71:2>@79:0>:int),
        ((<<fold_right_1143@71:2>@79:0> = 0) && (<fold_right_1143@71:1> >= 1))
        |- P[<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>](<fold_right_1143@71:1>:int,
                                                            <<fold_right_1143@71:2>@79:0>:int,
                                                            <<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>:int)
        
        P[<<fold_right_1143@71:0>@141:2>](var329:int),
        P[<<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>](var329:int,<<<fold_right_1143@71:0>@141:0>@199:0>:int)|- P[<<<fold_right_1143@71:0>@141:0>@199:0>](
        <<<fold_right_1143@71:0>@141:0>@199:0>:int)
        
        P[<fold_right_1143@71:1>](var330:int),
        ((1 <= var330) && (var330 <= (1 + <<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>)))
        |- P[<<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>](<<<fold_right_1143@71:0>@141:1>@147:0>:int,
                                                             <<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>:int)
        
        P[<<<fold_right_1143@71:0>@141:1>@147:0>](<<<fold_right_1143@108:4>@111:0>@157:0>:int),
        P[<fold_right_1143@71:1>]((1 + <fold_right_1143@108:1>):int),
        ((<fold_right_1143@108:1> >= 0) && (0 > <<<fold_right_1143@108:4>@111:0>@157:0>)) |- bot
        
        P[<<fold_right_1143@71:0>@141:2>](<<<fold_right_1143@71:0>@141:1>@147:0>:int)|- P[<<<fold_right_1143@71:0>@141:1>@147:0>](
        <<<fold_right_1143@71:0>@141:1>@147:0>:int)
        
        P[<fold_right_1143@71:1>](var333:int), ((1 <= var333) && (0 <= <<fold_right_1143@71:0>@141:2>))
        |- P[<<fold_right_1143@71:0>@141:2>](<<fold_right_1143@71:0>@141:2>:int)
        
        P[<<fold_right_1143@71:2>@79:0>](<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int),
        (<<make_list_1030@51:1>@67:0> = 1)
        |- P[<<<make_list_1030@51:1>@67:1>@83:0>](<make_list_1030@51:0>:int,
                                                  <<make_list_1030@51:1>@67:0>:int,
                                                  <<<make_list_1030@51:1>@67:1>@83:0>:int)
        
        P[<fold_right_1143@71:1>](<fold_right_1143@71:1>:int),
        ((<<fold_right_1143@71:2>@79:0> = 0) && (<fold_right_1143@71:1> >= 1))
        |- P[<<fold_right_1143@71:2>@79:0>](<fold_right_1143@71:1>:int,
                                            <<fold_right_1143@71:2>@79:0>:int)
        
         (<fold_right_1143@71:1> = 1) |- P[<fold_right_1143@71:1>](<fold_right_1143@71:1>:int)
        
        P[<<make_list_1030@54:1>@57:0>]((-1 + <make_list_1030@51:0>):int,(
                                        -1 + <<make_list_1030@51:1>@67:0>):int),
        ((<make_list_1030@51:0> > 0) && (<<make_list_1030@51:1>@67:0> <> 1)) |- bot
        
         ((<<make_list_1030@54:1>@57:0> = 0) && (<make_list_1030@54:0> <= 0))
        |- P[<<make_list_1030@54:1>@57:0>](<make_list_1030@54:0>:int,
                                           <<make_list_1030@54:1>@57:0>:int)
      lower bounds:
        P[<fold_right_1143@71:1>](<fold_right_1143@71:1>:int) = (<fold_right_1143@71:1> = 1)
        P[<<make_list_1030@54:1>@57:0>](<make_list_1030@54:0>:int,<<make_list_1030@54:1>@57:0>:int) =
        ((<<make_list_1030@54:1>@57:0> = 0) && (<make_list_1030@54:0> <= 0))
        P[<<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>](<<<fold_right_1143@71:0>@141:1>@147:0>:int,<<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>:int) =
        (0 <= <<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>)
        P[<<fold_right_1143@71:0>@141:2>](<<fold_right_1143@71:0>@141:2>:int) = (0 <= <<fold_right_1143@71:0>@141:2>)
        P[<<fold_right_1143@71:2>@79:0>](<fold_right_1143@71:1>:int,<<fold_right_1143@71:2>@79:0>:int) =
        ((<<fold_right_1143@71:2>@79:0> = 0) && (<fold_right_1143@71:1> = 1))
        P[<<<fold_right_1143@71:0>@141:0>@199:0>](<<<fold_right_1143@71:0>@141:0>@199:0>:int) =
        (0 <= <<<fold_right_1143@71:0>@141:0>@199:0>)
        P[<<<fold_right_1143@71:0>@141:1>@147:0>](<<<fold_right_1143@71:0>@141:1>@147:0>:int) =
        (0 <= <<<fold_right_1143@71:0>@141:1>@147:0>)
        P[<<<make_list_1030@51:1>@67:1>@83:0>](<make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int) =
        ((<<<make_list_1030@51:1>@67:1>@83:0> = 0) && (<<make_list_1030@51:1>@67:0> = 1))
        P[<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>](<fold_right_1143@71:1>:int,<<fold_right_1143@71:2>@79:0>:int,<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>:int) =
        ((<fold_right_1143@71:1> = 1) &&
         ((<<fold_right_1143@71:2>@79:0> = 0) && (0 <= <<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>)))
        P[<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>](<make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int,<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>:int) =
        ((<<<make_list_1030@51:1>@67:1>@83:0> = 0) &&
         ((<<make_list_1030@51:1>@67:0> = 1) && (0 <= <<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>)))
        P[<<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:1>@243:0>](
        <make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int,<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>:int,<<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:1>@243:0>:int) =
        ((<<make_list_1030@51:1>@67:0> = 1) &&
         ((<<<make_list_1030@51:1>@67:1>@83:0> = 0) &&
          ((<make_list_1030@51:0> = 1) &&
           ((0 <= <<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>) &&
            (<<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:1>@243:0> =
             (<make_list_1030@51:0> + <<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>))))))
        P[<<<<<fold_right_1143@71:2>@79:1>@102:0>@213:1>@247:0>](<fold_right_1143@71:1>:int,<<fold_right_1143@71:2>@79:0>:int,<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>:int,<<<<<fold_right_1143@71:2>@79:1>@102:0>@213:1>@247:0>:int) =
        ((<fold_right_1143@71:1> = 1) &&
         ((<<fold_right_1143@71:2>@79:0> = 0) &&
          ((0 <= <<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>) &&
           (<<<<<fold_right_1143@71:2>@79:1>@102:0>@213:1>@247:0> = (1 + <<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>)))))
      upper bounds:
        P[<<<<<fold_right_1143@71:2>@79:1>@102:0>@213:1>@247:0>](var912:int,var913:int,var914:int,var915:int) =
        ((var912 <> 1) || ((var913 <> 0) || (1 <= var915)))
      begin GenHcSolver.classify_pids(540563)[4]
        output:
          [<<<<<fold_right_1143@71:2>@79:1>@102:0>@213:1>@247:0>]
      end GenHcSolver.classify_pids(540563)[4] (0.000000 sec.)
      lb:((<fold_right_1143@71:1> = 1) &&
          ((<<fold_right_1143@71:2>@79:0> = 0) &&
           ((0 <= <<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>) &&
            (<<<<<fold_right_1143@71:2>@79:1>@102:0>@213:1>@247:0> =
             (1 + <<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>)))))
      nub:(not
             ((<fold_right_1143@71:1> <> 1) ||
              ((<<fold_right_1143@71:2>@79:0> <> 0) || (1 <= <<<<<fold_right_1143@71:2>@79:1>@102:0>@213:1>@247:0>))))
      begin ApronInterface.convex_hull_interpolate(540566)[4]
        lb:((<fold_right_1143@71:1> = 1) &&
            ((<<fold_right_1143@71:2>@79:0> = 0) &&
             ((0 <= <<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>) &&
              (<<<<<fold_right_1143@71:2>@79:1>@102:0>@213:1>@247:0> =
               (1 + <<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>)))))
        nub:(not
               ((<fold_right_1143@71:1> <> 1) ||
                ((<<fold_right_1143@71:2>@79:0> <> 0) || (1 <= <<<<<fold_right_1143@71:2>@79:1>@102:0>@213:1>@247:0>))))
        begin ExtFormula.Formula.case_analysis_boolean(540613)[5]
          ts: ((<fold_right_1143@71:1> = 1) &&
               ((<<fold_right_1143@71:2>@79:0> = 0) &&
                ((0 <= <<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>) &&
                 (<<<<<fold_right_1143@71:2>@79:1>@102:0>@213:1>@247:0> =
                  (1 + <<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>)))))
          
        end ExtFormula.Formula.case_analysis_boolean(540613)[5] (0.001000 sec.)
        begin ExtFormula.Formula.case_analysis_boolean(540646)[5]
          ts: ((<fold_right_1143@71:1> = 1) &&
               ((<<fold_right_1143@71:2>@79:0> = 0) && (1 > <<<<<fold_right_1143@71:2>@79:1>@102:0>@213:1>@247:0>)))
          
        end ExtFormula.Formula.case_analysis_boolean(540646)[5] (0.000000 sec.)
        lb':((((-1 + <<<<<fold_right_1143@71:2>@79:1>@102:0>@213:1>@247:0>) +
               (-1 * <<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>)) = 0) &&
             ((<<fold_right_1143@71:2>@79:0> = 0) &&
              (((-1 + <fold_right_1143@71:1>) = 0) && (<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0> >= 0))))
        nub':((<<fold_right_1143@71:2>@79:0> = 0) &&
              (((-1 + <fold_right_1143@71:1>) = 0) &&
               ((-1 * <<<<<fold_right_1143@71:2>@79:1>@102:0>@213:1>@247:0>) >= 0)))
        begin InterpProver.interpolate(540654)[5]
          begin InterpProver.interpolate_fresh(540655)[6]
            begin InterpProver.interpolate_log(540656)[7]
              input1: ((((-1 + <<<<<fold_right_1143@71:2>@79:1>@102:0>@213:1>@247:0>) +
                         (-1 * <<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>)) = 0) &&
                       ((<<fold_right_1143@71:2>@79:0> = 0) &&
                        (((-1 + <fold_right_1143@71:1>) = 0) && (<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0> >= 0))))
              input2: ((<<fold_right_1143@71:2>@79:0> = 0) &&
                       (((-1 + <fold_right_1143@71:1>) = 0) &&
                        ((-1 * <<<<<fold_right_1143@71:2>@79:1>@102:0>@213:1>@247:0>) >= 0)))
              begin InterpProver.interpolate_check(540657)[8]
                begin InterpProver.interpolate_simplify(540658)[9]
                  begin InterpProver.interpolate_quick(540829)[10]
                    begin CsisatInterface.interpolate_csisat_wrap(540838)[11]
                      begin CsisatInterface.interpolate_csisat_post_process(540839)[12]
                        begin CsisatInterface.interpolate_csisat_log(540840)[13]
                          input1: (0 = v_sep_fold_right_1143_sep_71_sep_2_sep_79_sep_0 & 1 = v_sep_fold_right_1143_sep_71_sep_1 & 1 <= v_sep_fold_right_1143_sep_71_sep_2_sep_79_sep_1_sep_102_sep_0_sep_213_sep_1_sep_247_sep_0)
                          input2: (0 = v_sep_fold_right_1143_sep_71_sep_2_sep_79_sep_0 & 1 = v_sep_fold_right_1143_sep_71_sep_1 & v_sep_fold_right_1143_sep_71_sep_2_sep_79_sep_1_sep_102_sep_0_sep_213_sep_1_sep_247_sep_0 <= 0)
                          begin CsisatInterface.interpolate_csisat_raw(540841)[14]
                            
                          end CsisatInterface.interpolate_csisat_raw(540841)[14] (0.000000 sec.)
                          output: -2*v_sep_fold_right_1143_sep_71_sep_2_sep_79_sep_1_sep_102_sep_0_sep_213_sep_1_sep_247_sep_0 <= -2
                          
                        end CsisatInterface.interpolate_csisat_log(540840)[13] (0.000000 sec.)
                        after simplification: -2*v_sep_fold_right_1143_sep_71_sep_2_sep_79_sep_1_sep_102_sep_0_sep_213_sep_1_sep_247_sep_0 <= -2
                        after dnf conversion: ((-2*v_sep_fold_right_1143_sep_71_sep_2_sep_79_sep_1_sep_102_sep_0_sep_213_sep_1_sep_247_sep_0 <= -2))
                        
                      end CsisatInterface.interpolate_csisat_post_process(540839)[12] (0.000000 sec.)
                      
                    end CsisatInterface.interpolate_csisat_wrap(540838)[11] (0.000000 sec.)
                    
                  end InterpProver.interpolate_quick(540829)[10] (0.001000 sec.)
                  
                end InterpProver.interpolate_simplify(540658)[9] (0.002000 sec.)
                
              end InterpProver.interpolate_check(540657)[8] (0.003000 sec.)
              output: (1 <= <<<<<fold_right_1143@71:2>@79:1>@102:0>@213:1>@247:0>)
            end InterpProver.interpolate_log(540656)[7] (0.003000 sec.)
            
          end InterpProver.interpolate_fresh(540655)[6] (0.003000 sec.)
          
        end InterpProver.interpolate(540654)[5] (0.003000 sec.)
        output:
          P[<<<<<fold_right_1143@71:2>@79:1>@102:0>@213:1>@247:0>](<fold_right_1143@71:1>:int,<<fold_right_1143@71:2>@79:0>:int,<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>:int,<<<<<fold_right_1143@71:2>@79:1>@102:0>@213:1>@247:0>:int) =
          (1 <= <<<<<fold_right_1143@71:2>@79:1>@102:0>@213:1>@247:0>)
      end ApronInterface.convex_hull_interpolate(540566)[4] (0.005000 sec.)
      Horn clauses:
        P[<fold_right_1143@71:1>](<fold_right_1143@71:1>:int), (1 < <fold_right_1143@71:1>) |- bot
        
        P[<<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:1>@243:0>](
        <f_main_2163@123:0>:int,1:int,<<fold_right_1143@71:2>@79:0>:int,<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>:int,<<<<<fold_right_1143@71:2>@79:1>@102:0>@213:1>@247:0>:int),
        P[<fold_right_1143@71:1>](1:int), (1 > <<<<<fold_right_1143@71:2>@79:1>@102:0>@213:1>@247:0>) |- bot
        
        P[<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>](<make_list_1030@51:0>:int,(
                                                              1 + var326):int,0:int,<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>:int),
        P[<<<make_list_1030@51:1>@67:1>@83:0>](<make_list_1030@51:0>:int,(
                                               1 + var326):int,0:int),
        P[<<make_list_1030@54:1>@57:0>]((-1 + <make_list_1030@51:0>):int,var326:int),
        P[<<<make_list_1030@51:1>@67:1>@83:0>](<make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int),
        P[<<make_list_1030@54:1>@57:0>]((-1 + <make_list_1030@51:0>):int,(
                                        -1 + <<make_list_1030@51:1>@67:0>):int),
        ((<<<make_list_1030@51:1>@67:1>@83:0> = 0) &&
         ((<<make_list_1030@51:1>@67:0> = 1) &&
          ((<make_list_1030@51:0> > 0) &&
           (<<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:1>@243:0> =
            (<make_list_1030@51:0> + <<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>)))))
        |- P[<<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:1>@243:0>](
        <make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int,
        <<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>:int,<<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:1>@243:0>:int)
        
        P[<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>](<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int,<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>:int),
        P[<<fold_right_1143@71:2>@79:0>](<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int),
        P[<<<make_list_1030@51:1>@67:1>@83:0>](<make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int),
        (<<make_list_1030@51:1>@67:0> = 1)
        |- P[<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>](<make_list_1030@51:0>:int,
                                                                 <<make_list_1030@51:1>@67:0>:int,
                                                                 <<<make_list_1030@51:1>@67:1>@83:0>:int,
                                                                 <<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>:int)
        
        P[<<<fold_right_1143@71:0>@141:0>@199:0>](<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>:int),
        P[<fold_right_1143@71:1>](<fold_right_1143@71:1>:int),
        P[<<fold_right_1143@71:2>@79:0>](<fold_right_1143@71:1>:int,<<fold_right_1143@71:2>@79:0>:int),
        ((<<fold_right_1143@71:2>@79:0> = 0) && (<fold_right_1143@71:1> >= 1))
        |- P[<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>](<fold_right_1143@71:1>:int,
                                                            <<fold_right_1143@71:2>@79:0>:int,
                                                            <<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>:int)
        
        P[<<fold_right_1143@71:0>@141:2>](var329:int),
        P[<<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>](var329:int,<<<fold_right_1143@71:0>@141:0>@199:0>:int)|- P[<<<fold_right_1143@71:0>@141:0>@199:0>](
        <<<fold_right_1143@71:0>@141:0>@199:0>:int)
        
        P[<fold_right_1143@71:1>](var330:int),
        ((1 <= var330) && (var330 <= (1 + <<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>)))
        |- P[<<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>](<<<fold_right_1143@71:0>@141:1>@147:0>:int,
                                                             <<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>:int)
        
        P[<<<fold_right_1143@71:0>@141:1>@147:0>](<<<fold_right_1143@108:4>@111:0>@157:0>:int),
        P[<fold_right_1143@71:1>]((1 + <fold_right_1143@108:1>):int),
        ((<fold_right_1143@108:1> >= 0) && (0 > <<<fold_right_1143@108:4>@111:0>@157:0>)) |- bot
        
        P[<<fold_right_1143@71:0>@141:2>](<<<fold_right_1143@71:0>@141:1>@147:0>:int)|- P[<<<fold_right_1143@71:0>@141:1>@147:0>](
        <<<fold_right_1143@71:0>@141:1>@147:0>:int)
        
        P[<fold_right_1143@71:1>](var333:int), ((1 <= var333) && (0 <= <<fold_right_1143@71:0>@141:2>))
        |- P[<<fold_right_1143@71:0>@141:2>](<<fold_right_1143@71:0>@141:2>:int)
        
        P[<<fold_right_1143@71:2>@79:0>](<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int),
        (<<make_list_1030@51:1>@67:0> = 1)
        |- P[<<<make_list_1030@51:1>@67:1>@83:0>](<make_list_1030@51:0>:int,
                                                  <<make_list_1030@51:1>@67:0>:int,
                                                  <<<make_list_1030@51:1>@67:1>@83:0>:int)
        
        P[<fold_right_1143@71:1>](<fold_right_1143@71:1>:int),
        ((<<fold_right_1143@71:2>@79:0> = 0) && (<fold_right_1143@71:1> >= 1))
        |- P[<<fold_right_1143@71:2>@79:0>](<fold_right_1143@71:1>:int,
                                            <<fold_right_1143@71:2>@79:0>:int)
        
         (<fold_right_1143@71:1> = 1) |- P[<fold_right_1143@71:1>](<fold_right_1143@71:1>:int)
        
        P[<<make_list_1030@54:1>@57:0>]((-1 + <make_list_1030@51:0>):int,(
                                        -1 + <<make_list_1030@51:1>@67:0>):int),
        ((<make_list_1030@51:0> > 0) && (<<make_list_1030@51:1>@67:0> <> 1)) |- bot
        
         ((<<make_list_1030@54:1>@57:0> = 0) && (<make_list_1030@54:0> <= 0))
        |- P[<<make_list_1030@54:1>@57:0>](<make_list_1030@54:0>:int,
                                           <<make_list_1030@54:1>@57:0>:int)
      lower bounds:
        P[<fold_right_1143@71:1>](<fold_right_1143@71:1>:int) = (<fold_right_1143@71:1> = 1)
        P[<<make_list_1030@54:1>@57:0>](<make_list_1030@54:0>:int,<<make_list_1030@54:1>@57:0>:int) =
        ((<<make_list_1030@54:1>@57:0> = 0) && (<make_list_1030@54:0> <= 0))
        P[<<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>](<<<fold_right_1143@71:0>@141:1>@147:0>:int,<<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>:int) =
        (0 <= <<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>)
        P[<<fold_right_1143@71:0>@141:2>](<<fold_right_1143@71:0>@141:2>:int) = (0 <= <<fold_right_1143@71:0>@141:2>)
        P[<<fold_right_1143@71:2>@79:0>](<fold_right_1143@71:1>:int,<<fold_right_1143@71:2>@79:0>:int) =
        ((<<fold_right_1143@71:2>@79:0> = 0) && (<fold_right_1143@71:1> = 1))
        P[<<<fold_right_1143@71:0>@141:0>@199:0>](<<<fold_right_1143@71:0>@141:0>@199:0>:int) =
        (0 <= <<<fold_right_1143@71:0>@141:0>@199:0>)
        P[<<<fold_right_1143@71:0>@141:1>@147:0>](<<<fold_right_1143@71:0>@141:1>@147:0>:int) =
        (0 <= <<<fold_right_1143@71:0>@141:1>@147:0>)
        P[<<<make_list_1030@51:1>@67:1>@83:0>](<make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int) =
        ((<<<make_list_1030@51:1>@67:1>@83:0> = 0) && (<<make_list_1030@51:1>@67:0> = 1))
        P[<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>](<fold_right_1143@71:1>:int,<<fold_right_1143@71:2>@79:0>:int,<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>:int) =
        ((<fold_right_1143@71:1> = 1) &&
         ((<<fold_right_1143@71:2>@79:0> = 0) && (0 <= <<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>)))
        P[<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>](<make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int,<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>:int) =
        ((<<<make_list_1030@51:1>@67:1>@83:0> = 0) &&
         ((<<make_list_1030@51:1>@67:0> = 1) && (0 <= <<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>)))
        P[<<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:1>@243:0>](
        <make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int,<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>:int,<<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:1>@243:0>:int) =
        ((<<make_list_1030@51:1>@67:0> = 1) &&
         ((<<<make_list_1030@51:1>@67:1>@83:0> = 0) &&
          ((<make_list_1030@51:0> = 1) &&
           ((0 <= <<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>) &&
            (<<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:1>@243:0> =
             (<make_list_1030@51:0> + <<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>))))))
      upper bounds:
        P[<<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:1>@243:0>](
        var916:int,var917:int,var918:int,var919:int,var920:int) = ((var917 <> 1) || (1 <= var920))
      begin GenHcSolver.classify_pids(548234)[4]
        output:
          [<<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:1>@243:0>]
      end GenHcSolver.classify_pids(548234)[4] (0.000000 sec.)
      lb:((<<make_list_1030@51:1>@67:0> = 1) &&
          ((<<<make_list_1030@51:1>@67:1>@83:0> = 0) &&
           ((<make_list_1030@51:0> = 1) &&
            ((0 <= <<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>) &&
             (<<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:1>@243:0> =
              (<make_list_1030@51:0> + <<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>))))))
      nub:(not
             ((<<make_list_1030@51:1>@67:0> <> 1) || (1 <= <<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:1>@243:0>)))
      begin ApronInterface.convex_hull_interpolate(548237)[4]
        lb:((<<make_list_1030@51:1>@67:0> = 1) &&
            ((<<<make_list_1030@51:1>@67:1>@83:0> = 0) &&
             ((<make_list_1030@51:0> = 1) &&
              ((0 <= <<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>) &&
               (<<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:1>@243:0> =
                (<make_list_1030@51:0> + <<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>))))))
        nub:(not
               ((<<make_list_1030@51:1>@67:0> <> 1) ||
                (1 <= <<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:1>@243:0>)))
        begin ExtFormula.Formula.case_analysis_boolean(548303)[5]
          ts: ((<<make_list_1030@51:1>@67:0> = 1) &&
               ((<<<make_list_1030@51:1>@67:1>@83:0> = 0) &&
                ((<make_list_1030@51:0> = 1) &&
                 ((0 <= <<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>) &&
                  (<<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:1>@243:0> =
                   (<make_list_1030@51:0> + <<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>))))))
          
        end ExtFormula.Formula.case_analysis_boolean(548303)[5] (0.000000 sec.)
        begin ExtFormula.Formula.case_analysis_boolean(548329)[5]
          ts: ((<<make_list_1030@51:1>@67:0> = 1) && (1 > <<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:1>@243:0>))
          
        end ExtFormula.Formula.case_analysis_boolean(548329)[5] (0.000000 sec.)
        lb':((((-1 + <<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:1>@243:0>) +
               (-1 * <<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>)) = 0) &&
             ((<<<make_list_1030@51:1>@67:1>@83:0> = 0) &&
              (((-1 + <<make_list_1030@51:1>@67:0>) = 0) &&
               (((-1 + <make_list_1030@51:0>) = 0) && (<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0> >= 0)))))
        nub':(((-1 + <<make_list_1030@51:1>@67:0>) = 0) &&
              ((-1 * <<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:1>@243:0>) >= 0))
        begin InterpProver.interpolate(548336)[5]
          begin InterpProver.interpolate_fresh(548337)[6]
            begin InterpProver.interpolate_log(548338)[7]
              input1: ((((-1 + <<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:1>@243:0>) +
                         (-1 * <<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>)) = 0) &&
                       ((<<<make_list_1030@51:1>@67:1>@83:0> = 0) &&
                        (((-1 + <<make_list_1030@51:1>@67:0>) = 0) &&
                         (((-1 + <make_list_1030@51:0>) = 0) &&
                          (<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0> >= 0)))))
              input2: (((-1 + <<make_list_1030@51:1>@67:0>) = 0) &&
                       ((-1 * <<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:1>@243:0>) >= 0))
              begin InterpProver.interpolate_check(548339)[8]
                begin InterpProver.interpolate_simplify(548340)[9]
                  begin InterpProver.interpolate_quick(548513)[10]
                    begin CsisatInterface.interpolate_csisat_wrap(548522)[11]
                      begin CsisatInterface.interpolate_csisat_post_process(548523)[12]
                        begin CsisatInterface.interpolate_csisat_log(548524)[13]
                          input1: (1 = v_sep_make_list_1030_sep_51_sep_1_sep_67_sep_0 & 1 <= v_sep_make_list_1030_sep_51_sep_1_sep_67_sep_1_sep_83_sep_1_sep_98_sep_0_sep_217_sep_1_sep_243_sep_0)
                          input2: (1 = v_sep_make_list_1030_sep_51_sep_1_sep_67_sep_0 & v_sep_make_list_1030_sep_51_sep_1_sep_67_sep_1_sep_83_sep_1_sep_98_sep_0_sep_217_sep_1_sep_243_sep_0 <= 0)
                          begin CsisatInterface.interpolate_csisat_raw(548525)[14]
                            
                          end CsisatInterface.interpolate_csisat_raw(548525)[14] (0.000000 sec.)
                          output: -2*v_sep_make_list_1030_sep_51_sep_1_sep_67_sep_1_sep_83_sep_1_sep_98_sep_0_sep_217_sep_1_sep_243_sep_0 <= -2
                          
                        end CsisatInterface.interpolate_csisat_log(548524)[13] (0.000000 sec.)
                        after simplification: -2*v_sep_make_list_1030_sep_51_sep_1_sep_67_sep_1_sep_83_sep_1_sep_98_sep_0_sep_217_sep_1_sep_243_sep_0 <= -2
                        after dnf conversion: ((-2*v_sep_make_list_1030_sep_51_sep_1_sep_67_sep_1_sep_83_sep_1_sep_98_sep_0_sep_217_sep_1_sep_243_sep_0 <= -2))
                        
                      end CsisatInterface.interpolate_csisat_post_process(548523)[12] (0.000000 sec.)
                      
                    end CsisatInterface.interpolate_csisat_wrap(548522)[11] (0.000000 sec.)
                    
                  end InterpProver.interpolate_quick(548513)[10] (0.000000 sec.)
                  
                end InterpProver.interpolate_simplify(548340)[9] (0.001000 sec.)
                
              end InterpProver.interpolate_check(548339)[8] (0.002000 sec.)
              output: (1 <= <<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:1>@243:0>)
            end InterpProver.interpolate_log(548338)[7] (0.002000 sec.)
            
          end InterpProver.interpolate_fresh(548337)[6] (0.002000 sec.)
          
        end InterpProver.interpolate(548336)[5] (0.002000 sec.)
        output:
          P[<<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:1>@243:0>](
          <make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int,<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>:int,<<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:1>@243:0>:int) =
          (1 <= <<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:1>@243:0>)
      end ApronInterface.convex_hull_interpolate(548237)[4] (0.004000 sec.)
      Horn clauses:
        P[<fold_right_1143@71:1>](<fold_right_1143@71:1>:int), (1 < <fold_right_1143@71:1>) |- bot
        
        P[<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>](<make_list_1030@51:0>:int,(
                                                              1 + var326):int,0:int,<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>:int),
        P[<<<make_list_1030@51:1>@67:1>@83:0>](<make_list_1030@51:0>:int,(
                                               1 + var326):int,0:int),
        P[<<make_list_1030@54:1>@57:0>]((-1 + <make_list_1030@51:0>):int,var326:int),
        P[<<<make_list_1030@51:1>@67:1>@83:0>](<make_list_1030@51:0>:int,1:int,0:int),
        P[<<make_list_1030@54:1>@57:0>]((-1 + <make_list_1030@51:0>):int,0:int),
        ((1 > (<make_list_1030@51:0> + <<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>)) &&
         (<make_list_1030@51:0> > 0)) |- bot
        
        P[<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>](<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int,<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>:int),
        P[<<fold_right_1143@71:2>@79:0>](<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int),
        P[<<<make_list_1030@51:1>@67:1>@83:0>](<make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int),
        (<<make_list_1030@51:1>@67:0> = 1)
        |- P[<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>](<make_list_1030@51:0>:int,
                                                                 <<make_list_1030@51:1>@67:0>:int,
                                                                 <<<make_list_1030@51:1>@67:1>@83:0>:int,
                                                                 <<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>:int)
        
        P[<<<fold_right_1143@71:0>@141:0>@199:0>](<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>:int),
        P[<fold_right_1143@71:1>](<fold_right_1143@71:1>:int),
        P[<<fold_right_1143@71:2>@79:0>](<fold_right_1143@71:1>:int,<<fold_right_1143@71:2>@79:0>:int),
        ((<<fold_right_1143@71:2>@79:0> = 0) && (<fold_right_1143@71:1> >= 1))
        |- P[<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>](<fold_right_1143@71:1>:int,
                                                            <<fold_right_1143@71:2>@79:0>:int,
                                                            <<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>:int)
        
        P[<<fold_right_1143@71:0>@141:2>](var329:int),
        P[<<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>](var329:int,<<<fold_right_1143@71:0>@141:0>@199:0>:int)|- P[<<<fold_right_1143@71:0>@141:0>@199:0>](
        <<<fold_right_1143@71:0>@141:0>@199:0>:int)
        
        P[<fold_right_1143@71:1>](var330:int),
        ((1 <= var330) && (var330 <= (1 + <<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>)))
        |- P[<<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>](<<<fold_right_1143@71:0>@141:1>@147:0>:int,
                                                             <<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>:int)
        
        P[<<<fold_right_1143@71:0>@141:1>@147:0>](<<<fold_right_1143@108:4>@111:0>@157:0>:int),
        P[<fold_right_1143@71:1>]((1 + <fold_right_1143@108:1>):int),
        ((<fold_right_1143@108:1> >= 0) && (0 > <<<fold_right_1143@108:4>@111:0>@157:0>)) |- bot
        
        P[<<fold_right_1143@71:0>@141:2>](<<<fold_right_1143@71:0>@141:1>@147:0>:int)|- P[<<<fold_right_1143@71:0>@141:1>@147:0>](
        <<<fold_right_1143@71:0>@141:1>@147:0>:int)
        
        P[<fold_right_1143@71:1>](var333:int), ((1 <= var333) && (0 <= <<fold_right_1143@71:0>@141:2>))
        |- P[<<fold_right_1143@71:0>@141:2>](<<fold_right_1143@71:0>@141:2>:int)
        
        P[<<fold_right_1143@71:2>@79:0>](<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int),
        (<<make_list_1030@51:1>@67:0> = 1)
        |- P[<<<make_list_1030@51:1>@67:1>@83:0>](<make_list_1030@51:0>:int,
                                                  <<make_list_1030@51:1>@67:0>:int,
                                                  <<<make_list_1030@51:1>@67:1>@83:0>:int)
        
        P[<fold_right_1143@71:1>](<fold_right_1143@71:1>:int),
        ((<<fold_right_1143@71:2>@79:0> = 0) && (<fold_right_1143@71:1> >= 1))
        |- P[<<fold_right_1143@71:2>@79:0>](<fold_right_1143@71:1>:int,
                                            <<fold_right_1143@71:2>@79:0>:int)
        
         (<fold_right_1143@71:1> = 1) |- P[<fold_right_1143@71:1>](<fold_right_1143@71:1>:int)
        
        P[<<make_list_1030@54:1>@57:0>]((-1 + <make_list_1030@51:0>):int,(
                                        -1 + <<make_list_1030@51:1>@67:0>):int),
        ((<make_list_1030@51:0> > 0) && (<<make_list_1030@51:1>@67:0> <> 1)) |- bot
        
         ((<<make_list_1030@54:1>@57:0> = 0) && (<make_list_1030@54:0> <= 0))
        |- P[<<make_list_1030@54:1>@57:0>](<make_list_1030@54:0>:int,
                                           <<make_list_1030@54:1>@57:0>:int)
      lower bounds:
        P[<fold_right_1143@71:1>](<fold_right_1143@71:1>:int) = (<fold_right_1143@71:1> = 1)
        P[<<make_list_1030@54:1>@57:0>](<make_list_1030@54:0>:int,<<make_list_1030@54:1>@57:0>:int) =
        ((<<make_list_1030@54:1>@57:0> = 0) && (<make_list_1030@54:0> <= 0))
        P[<<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>](<<<fold_right_1143@71:0>@141:1>@147:0>:int,<<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>:int) =
        (0 <= <<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>)
        P[<<fold_right_1143@71:0>@141:2>](<<fold_right_1143@71:0>@141:2>:int) = (0 <= <<fold_right_1143@71:0>@141:2>)
        P[<<fold_right_1143@71:2>@79:0>](<fold_right_1143@71:1>:int,<<fold_right_1143@71:2>@79:0>:int) =
        ((<<fold_right_1143@71:2>@79:0> = 0) && (<fold_right_1143@71:1> = 1))
        P[<<<fold_right_1143@71:0>@141:0>@199:0>](<<<fold_right_1143@71:0>@141:0>@199:0>:int) =
        (0 <= <<<fold_right_1143@71:0>@141:0>@199:0>)
        P[<<<fold_right_1143@71:0>@141:1>@147:0>](<<<fold_right_1143@71:0>@141:1>@147:0>:int) =
        (0 <= <<<fold_right_1143@71:0>@141:1>@147:0>)
        P[<<<make_list_1030@51:1>@67:1>@83:0>](<make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int) =
        ((<<<make_list_1030@51:1>@67:1>@83:0> = 0) && (<<make_list_1030@51:1>@67:0> = 1))
        P[<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>](<fold_right_1143@71:1>:int,<<fold_right_1143@71:2>@79:0>:int,<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>:int) =
        ((<fold_right_1143@71:1> = 1) &&
         ((<<fold_right_1143@71:2>@79:0> = 0) && (0 <= <<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>)))
        P[<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>](<make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int,<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>:int) =
        ((<<<make_list_1030@51:1>@67:1>@83:0> = 0) &&
         ((<<make_list_1030@51:1>@67:0> = 1) && (0 <= <<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>)))
      upper bounds:
        P[<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>](var921:int,var922:int,var923:int,var924:int) =
        ((var921 <> 1) || ((var922 <> 1) || ((var923 <> 0) || (0 <= var924))))
      begin GenHcSolver.classify_pids(554037)[4]
        output:
          [<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>]
      end GenHcSolver.classify_pids(554037)[4] (0.000000 sec.)
      lb:((<<<make_list_1030@51:1>@67:1>@83:0> = 0) &&
          ((<<make_list_1030@51:1>@67:0> = 1) && (0 <= <<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>)))
      nub:(not
             ((<make_list_1030@51:0> <> 1) ||
              ((<<make_list_1030@51:1>@67:0> <> 1) ||
               ((<<<make_list_1030@51:1>@67:1>@83:0> <> 0) || (0 <= <<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>)))))
      begin ApronInterface.convex_hull_interpolate(554040)[4]
        lb:((<<<make_list_1030@51:1>@67:1>@83:0> = 0) &&
            ((<<make_list_1030@51:1>@67:0> = 1) && (0 <= <<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>)))
        nub:(not
               ((<make_list_1030@51:0> <> 1) ||
                ((<<make_list_1030@51:1>@67:0> <> 1) ||
                 ((<<<make_list_1030@51:1>@67:1>@83:0> <> 0) ||
                  (0 <= <<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>)))))
        begin ExtFormula.Formula.case_analysis_boolean(554060)[5]
          ts: ((<<<make_list_1030@51:1>@67:1>@83:0> = 0) &&
               ((<<make_list_1030@51:1>@67:0> = 1) && (0 <= <<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>)))
          
        end ExtFormula.Formula.case_analysis_boolean(554060)[5] (0.000000 sec.)
        begin ExtFormula.Formula.case_analysis_boolean(554096)[5]
          ts: ((<make_list_1030@51:0> = 1) &&
               ((<<make_list_1030@51:1>@67:0> = 1) &&
                ((<<<make_list_1030@51:1>@67:1>@83:0> = 0) && (0 > <<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>))))
          
        end ExtFormula.Formula.case_analysis_boolean(554096)[5] (0.000000 sec.)
        lb':((<<<make_list_1030@51:1>@67:1>@83:0> = 0) &&
             (((-1 + <<make_list_1030@51:1>@67:0>) = 0) && (<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0> >= 0)))
        nub':((<<<make_list_1030@51:1>@67:1>@83:0> = 0) &&
              (((-1 + <<make_list_1030@51:1>@67:0>) = 0) &&
               (((-1 + <make_list_1030@51:0>) = 0) &&
                ((-1 + (-1 * <<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>)) >= 0))))
        begin InterpProver.interpolate(554105)[5]
          begin InterpProver.interpolate_fresh(554106)[6]
            begin InterpProver.interpolate_log(554107)[7]
              input1: ((<<<make_list_1030@51:1>@67:1>@83:0> = 0) &&
                       (((-1 + <<make_list_1030@51:1>@67:0>) = 0) &&
                        (<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0> >= 0)))
              input2: ((<<<make_list_1030@51:1>@67:1>@83:0> = 0) &&
                       (((-1 + <<make_list_1030@51:1>@67:0>) = 0) &&
                        (((-1 + <make_list_1030@51:0>) = 0) &&
                         ((-1 + (-1 * <<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>)) >= 0))))
              begin InterpProver.interpolate_check(554108)[8]
                begin InterpProver.interpolate_simplify(554109)[9]
                  begin InterpProver.interpolate_quick(554273)[10]
                    begin CsisatInterface.interpolate_csisat_wrap(554282)[11]
                      begin CsisatInterface.interpolate_csisat_post_process(554283)[12]
                        begin CsisatInterface.interpolate_csisat_log(554284)[13]
                          input1: (0 = v_sep_make_list_1030_sep_51_sep_1_sep_67_sep_1_sep_83_sep_0 & 1 = v_sep_make_list_1030_sep_51_sep_1_sep_67_sep_0 & 0 <= v_sep_make_list_1030_sep_51_sep_1_sep_67_sep_1_sep_83_sep_1_sep_98_sep_0_sep_217_sep_0)
                          input2: (0 = v_sep_make_list_1030_sep_51_sep_1_sep_67_sep_1_sep_83_sep_0 & 1 = v_sep_make_list_1030_sep_51_sep_1_sep_67_sep_0 & (1 + v_sep_make_list_1030_sep_51_sep_1_sep_67_sep_1_sep_83_sep_1_sep_98_sep_0_sep_217_sep_0) <= 0)
                          begin CsisatInterface.interpolate_csisat_raw(554285)[14]
                            
                          end CsisatInterface.interpolate_csisat_raw(554285)[14] (0.000000 sec.)
                          output: -2*v_sep_make_list_1030_sep_51_sep_1_sep_67_sep_1_sep_83_sep_1_sep_98_sep_0_sep_217_sep_0 <= 0
                          
                        end CsisatInterface.interpolate_csisat_log(554284)[13] (0.000000 sec.)
                        after simplification: -2*v_sep_make_list_1030_sep_51_sep_1_sep_67_sep_1_sep_83_sep_1_sep_98_sep_0_sep_217_sep_0 <= 0
                        after dnf conversion: ((-2*v_sep_make_list_1030_sep_51_sep_1_sep_67_sep_1_sep_83_sep_1_sep_98_sep_0_sep_217_sep_0 <= 0))
                        
                      end CsisatInterface.interpolate_csisat_post_process(554283)[12] (0.000000 sec.)
                      
                    end CsisatInterface.interpolate_csisat_wrap(554282)[11] (0.000000 sec.)
                    
                  end InterpProver.interpolate_quick(554273)[10] (0.000000 sec.)
                  
                end InterpProver.interpolate_simplify(554109)[9] (0.000000 sec.)
                
              end InterpProver.interpolate_check(554108)[8] (0.001000 sec.)
              output: (0 <= <<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>)
            end InterpProver.interpolate_log(554107)[7] (0.002000 sec.)
            
          end InterpProver.interpolate_fresh(554106)[6] (0.002000 sec.)
          
        end InterpProver.interpolate(554105)[5] (0.002000 sec.)
        output:
          P[<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>](<make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int,<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>:int) =
          (0 <= <<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>)
      end ApronInterface.convex_hull_interpolate(554040)[4] (0.003999 sec.)
      Horn clauses:
        P[<fold_right_1143@71:1>](<fold_right_1143@71:1>:int), (1 < <fold_right_1143@71:1>) |- bot
        
        P[<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>](1:int,<<<make_list_1030@51:1>@67:1>@83:0>:int,<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>:int),
        P[<<fold_right_1143@71:2>@79:0>](1:int,<<<make_list_1030@51:1>@67:1>@83:0>:int),
        P[<<<make_list_1030@51:1>@67:1>@83:0>](<make_list_1030@51:0>:int,1:int,<<<make_list_1030@51:1>@67:1>@83:0>:int),
        (0 > <<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>) |- bot
        
        P[<<<fold_right_1143@71:0>@141:0>@199:0>](<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>:int),
        P[<fold_right_1143@71:1>](<fold_right_1143@71:1>:int),
        P[<<fold_right_1143@71:2>@79:0>](<fold_right_1143@71:1>:int,<<fold_right_1143@71:2>@79:0>:int),
        ((<<fold_right_1143@71:2>@79:0> = 0) && (<fold_right_1143@71:1> >= 1))
        |- P[<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>](<fold_right_1143@71:1>:int,
                                                            <<fold_right_1143@71:2>@79:0>:int,
                                                            <<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>:int)
        
        P[<<fold_right_1143@71:0>@141:2>](var329:int),
        P[<<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>](var329:int,<<<fold_right_1143@71:0>@141:0>@199:0>:int)|- P[<<<fold_right_1143@71:0>@141:0>@199:0>](
        <<<fold_right_1143@71:0>@141:0>@199:0>:int)
        
        P[<fold_right_1143@71:1>](var330:int),
        ((1 <= var330) && (var330 <= (1 + <<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>)))
        |- P[<<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>](<<<fold_right_1143@71:0>@141:1>@147:0>:int,
                                                             <<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>:int)
        
        P[<<<fold_right_1143@71:0>@141:1>@147:0>](<<<fold_right_1143@108:4>@111:0>@157:0>:int),
        P[<fold_right_1143@71:1>]((1 + <fold_right_1143@108:1>):int),
        ((<fold_right_1143@108:1> >= 0) && (0 > <<<fold_right_1143@108:4>@111:0>@157:0>)) |- bot
        
        P[<<fold_right_1143@71:0>@141:2>](<<<fold_right_1143@71:0>@141:1>@147:0>:int)|- P[<<<fold_right_1143@71:0>@141:1>@147:0>](
        <<<fold_right_1143@71:0>@141:1>@147:0>:int)
        
        P[<fold_right_1143@71:1>](var333:int), ((1 <= var333) && (0 <= <<fold_right_1143@71:0>@141:2>))
        |- P[<<fold_right_1143@71:0>@141:2>](<<fold_right_1143@71:0>@141:2>:int)
        
        P[<<fold_right_1143@71:2>@79:0>](<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int),
        (<<make_list_1030@51:1>@67:0> = 1)
        |- P[<<<make_list_1030@51:1>@67:1>@83:0>](<make_list_1030@51:0>:int,
                                                  <<make_list_1030@51:1>@67:0>:int,
                                                  <<<make_list_1030@51:1>@67:1>@83:0>:int)
        
        P[<fold_right_1143@71:1>](<fold_right_1143@71:1>:int),
        ((<<fold_right_1143@71:2>@79:0> = 0) && (<fold_right_1143@71:1> >= 1))
        |- P[<<fold_right_1143@71:2>@79:0>](<fold_right_1143@71:1>:int,
                                            <<fold_right_1143@71:2>@79:0>:int)
        
         (<fold_right_1143@71:1> = 1) |- P[<fold_right_1143@71:1>](<fold_right_1143@71:1>:int)
        
        P[<<make_list_1030@54:1>@57:0>]((-1 + <make_list_1030@51:0>):int,(
                                        -1 + <<make_list_1030@51:1>@67:0>):int),
        ((<make_list_1030@51:0> > 0) && (<<make_list_1030@51:1>@67:0> <> 1)) |- bot
        
         ((<<make_list_1030@54:1>@57:0> = 0) && (<make_list_1030@54:0> <= 0))
        |- P[<<make_list_1030@54:1>@57:0>](<make_list_1030@54:0>:int,
                                           <<make_list_1030@54:1>@57:0>:int)
      lower bounds:
        P[<fold_right_1143@71:1>](<fold_right_1143@71:1>:int) = (<fold_right_1143@71:1> = 1)
        P[<<make_list_1030@54:1>@57:0>](<make_list_1030@54:0>:int,<<make_list_1030@54:1>@57:0>:int) =
        ((<<make_list_1030@54:1>@57:0> = 0) && (<make_list_1030@54:0> <= 0))
        P[<<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>](<<<fold_right_1143@71:0>@141:1>@147:0>:int,<<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>:int) =
        (0 <= <<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>)
        P[<<fold_right_1143@71:0>@141:2>](<<fold_right_1143@71:0>@141:2>:int) = (0 <= <<fold_right_1143@71:0>@141:2>)
        P[<<fold_right_1143@71:2>@79:0>](<fold_right_1143@71:1>:int,<<fold_right_1143@71:2>@79:0>:int) =
        ((<<fold_right_1143@71:2>@79:0> = 0) && (<fold_right_1143@71:1> = 1))
        P[<<<fold_right_1143@71:0>@141:0>@199:0>](<<<fold_right_1143@71:0>@141:0>@199:0>:int) =
        (0 <= <<<fold_right_1143@71:0>@141:0>@199:0>)
        P[<<<fold_right_1143@71:0>@141:1>@147:0>](<<<fold_right_1143@71:0>@141:1>@147:0>:int) =
        (0 <= <<<fold_right_1143@71:0>@141:1>@147:0>)
        P[<<<make_list_1030@51:1>@67:1>@83:0>](<make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int) =
        ((<<<make_list_1030@51:1>@67:1>@83:0> = 0) && (<<make_list_1030@51:1>@67:0> = 1))
        P[<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>](<fold_right_1143@71:1>:int,<<fold_right_1143@71:2>@79:0>:int,<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>:int) =
        ((<fold_right_1143@71:1> = 1) &&
         ((<<fold_right_1143@71:2>@79:0> = 0) && (0 <= <<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>)))
      upper bounds:
        P[<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>](var925:int,var926:int,var927:int) =
        ((var925 <> 1) || ((var926 <> 0) || (0 <= var927)))
      begin GenHcSolver.classify_pids(558560)[4]
        output:
          [<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>]
      end GenHcSolver.classify_pids(558560)[4] (0.000000 sec.)
      lb:((<fold_right_1143@71:1> = 1) &&
          ((<<fold_right_1143@71:2>@79:0> = 0) && (0 <= <<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>)))
      nub:(not
             ((<fold_right_1143@71:1> <> 1) ||
              ((<<fold_right_1143@71:2>@79:0> <> 0) || (0 <= <<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>))))
      begin ApronInterface.convex_hull_interpolate(558563)[4]
        lb:((<fold_right_1143@71:1> = 1) &&
            ((<<fold_right_1143@71:2>@79:0> = 0) && (0 <= <<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>)))
        nub:(not
               ((<fold_right_1143@71:1> <> 1) ||
                ((<<fold_right_1143@71:2>@79:0> <> 0) || (0 <= <<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>))))
        begin ExtFormula.Formula.case_analysis_boolean(558582)[5]
          ts: ((<fold_right_1143@71:1> = 1) &&
               ((<<fold_right_1143@71:2>@79:0> = 0) && (0 <= <<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>)))
          
        end ExtFormula.Formula.case_analysis_boolean(558582)[5] (0.000000 sec.)
        begin ExtFormula.Formula.case_analysis_boolean(558607)[5]
          ts: ((<fold_right_1143@71:1> = 1) &&
               ((<<fold_right_1143@71:2>@79:0> = 0) && (0 > <<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>)))
          
        end ExtFormula.Formula.case_analysis_boolean(558607)[5] (0.001000 sec.)
        lb':((<<fold_right_1143@71:2>@79:0> = 0) &&
             (((-1 + <fold_right_1143@71:1>) = 0) && (<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0> >= 0)))
        nub':((<<fold_right_1143@71:2>@79:0> = 0) &&
              (((-1 + <fold_right_1143@71:1>) = 0) &&
               ((-1 + (-1 * <<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>)) >= 0)))
        begin InterpProver.interpolate(558614)[5]
          begin InterpProver.interpolate_fresh(558615)[6]
            begin InterpProver.interpolate_log(558616)[7]
              input1: ((<<fold_right_1143@71:2>@79:0> = 0) &&
                       (((-1 + <fold_right_1143@71:1>) = 0) && (<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0> >= 0)))
              input2: ((<<fold_right_1143@71:2>@79:0> = 0) &&
                       (((-1 + <fold_right_1143@71:1>) = 0) &&
                        ((-1 + (-1 * <<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>)) >= 0)))
              begin InterpProver.interpolate_check(558617)[8]
                begin InterpProver.interpolate_simplify(558618)[9]
                  begin InterpProver.interpolate_quick(558709)[10]
                    begin CsisatInterface.interpolate_csisat_wrap(558718)[11]
                      begin CsisatInterface.interpolate_csisat_post_process(558719)[12]
                        begin CsisatInterface.interpolate_csisat_log(558720)[13]
                          input1: (0 = v_sep_fold_right_1143_sep_71_sep_2_sep_79_sep_0 & 1 = v_sep_fold_right_1143_sep_71_sep_1 & 0 <= v_sep_fold_right_1143_sep_71_sep_2_sep_79_sep_1_sep_102_sep_0_sep_213_sep_0)
                          input2: (0 = v_sep_fold_right_1143_sep_71_sep_2_sep_79_sep_0 & 1 = v_sep_fold_right_1143_sep_71_sep_1 & (1 + v_sep_fold_right_1143_sep_71_sep_2_sep_79_sep_1_sep_102_sep_0_sep_213_sep_0) <= 0)
                          begin CsisatInterface.interpolate_csisat_raw(558721)[14]
                            
                          end CsisatInterface.interpolate_csisat_raw(558721)[14] (0.000000 sec.)
                          output: -2*v_sep_fold_right_1143_sep_71_sep_2_sep_79_sep_1_sep_102_sep_0_sep_213_sep_0 <= 0
                          
                        end CsisatInterface.interpolate_csisat_log(558720)[13] (0.000000 sec.)
                        after simplification: -2*v_sep_fold_right_1143_sep_71_sep_2_sep_79_sep_1_sep_102_sep_0_sep_213_sep_0 <= 0
                        after dnf conversion: ((-2*v_sep_fold_right_1143_sep_71_sep_2_sep_79_sep_1_sep_102_sep_0_sep_213_sep_0 <= 0))
                        
                      end CsisatInterface.interpolate_csisat_post_process(558719)[12] (0.000000 sec.)
                      
                    end CsisatInterface.interpolate_csisat_wrap(558718)[11] (0.000000 sec.)
                    
                  end InterpProver.interpolate_quick(558709)[10] (0.001000 sec.)
                  
                end InterpProver.interpolate_simplify(558618)[9] (0.001000 sec.)
                
              end InterpProver.interpolate_check(558617)[8] (0.002000 sec.)
              output: (0 <= <<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>)
            end InterpProver.interpolate_log(558616)[7] (0.002000 sec.)
            
          end InterpProver.interpolate_fresh(558615)[6] (0.002000 sec.)
          
        end InterpProver.interpolate(558614)[5] (0.002000 sec.)
        output:
          P[<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>](<fold_right_1143@71:1>:int,<<fold_right_1143@71:2>@79:0>:int,<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>:int) =
          (0 <= <<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>)
      end ApronInterface.convex_hull_interpolate(558563)[4] (0.003000 sec.)
      Horn clauses:
        P[<fold_right_1143@71:1>](<fold_right_1143@71:1>:int), (1 < <fold_right_1143@71:1>) |- bot
        
        P[<<<fold_right_1143@71:0>@141:0>@199:0>](<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>:int),
        P[<fold_right_1143@71:1>](<fold_right_1143@71:1>:int),
        P[<<fold_right_1143@71:2>@79:0>](<fold_right_1143@71:1>:int,0:int),
        ((0 > <<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>) && (<fold_right_1143@71:1> >= 1)) |- bot
        
        P[<<fold_right_1143@71:0>@141:2>](var329:int),
        P[<<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>](var329:int,<<<fold_right_1143@71:0>@141:0>@199:0>:int)|- P[<<<fold_right_1143@71:0>@141:0>@199:0>](
        <<<fold_right_1143@71:0>@141:0>@199:0>:int)
        
        P[<fold_right_1143@71:1>](var330:int),
        ((1 <= var330) && (var330 <= (1 + <<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>)))
        |- P[<<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>](<<<fold_right_1143@71:0>@141:1>@147:0>:int,
                                                             <<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>:int)
        
        P[<<<fold_right_1143@71:0>@141:1>@147:0>](<<<fold_right_1143@108:4>@111:0>@157:0>:int),
        P[<fold_right_1143@71:1>]((1 + <fold_right_1143@108:1>):int),
        ((<fold_right_1143@108:1> >= 0) && (0 > <<<fold_right_1143@108:4>@111:0>@157:0>)) |- bot
        
        P[<<fold_right_1143@71:0>@141:2>](<<<fold_right_1143@71:0>@141:1>@147:0>:int)|- P[<<<fold_right_1143@71:0>@141:1>@147:0>](
        <<<fold_right_1143@71:0>@141:1>@147:0>:int)
        
        P[<fold_right_1143@71:1>](var333:int), ((1 <= var333) && (0 <= <<fold_right_1143@71:0>@141:2>))
        |- P[<<fold_right_1143@71:0>@141:2>](<<fold_right_1143@71:0>@141:2>:int)
        
        P[<<fold_right_1143@71:2>@79:0>](<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int),
        (<<make_list_1030@51:1>@67:0> = 1)
        |- P[<<<make_list_1030@51:1>@67:1>@83:0>](<make_list_1030@51:0>:int,
                                                  <<make_list_1030@51:1>@67:0>:int,
                                                  <<<make_list_1030@51:1>@67:1>@83:0>:int)
        
        P[<fold_right_1143@71:1>](<fold_right_1143@71:1>:int),
        ((<<fold_right_1143@71:2>@79:0> = 0) && (<fold_right_1143@71:1> >= 1))
        |- P[<<fold_right_1143@71:2>@79:0>](<fold_right_1143@71:1>:int,
                                            <<fold_right_1143@71:2>@79:0>:int)
        
         (<fold_right_1143@71:1> = 1) |- P[<fold_right_1143@71:1>](<fold_right_1143@71:1>:int)
        
        P[<<make_list_1030@54:1>@57:0>]((-1 + <make_list_1030@51:0>):int,(
                                        -1 + <<make_list_1030@51:1>@67:0>):int),
        ((<make_list_1030@51:0> > 0) && (<<make_list_1030@51:1>@67:0> <> 1)) |- bot
        
         ((<<make_list_1030@54:1>@57:0> = 0) && (<make_list_1030@54:0> <= 0))
        |- P[<<make_list_1030@54:1>@57:0>](<make_list_1030@54:0>:int,
                                           <<make_list_1030@54:1>@57:0>:int)
      lower bounds:
        P[<fold_right_1143@71:1>](<fold_right_1143@71:1>:int) = (<fold_right_1143@71:1> = 1)
        P[<<make_list_1030@54:1>@57:0>](<make_list_1030@54:0>:int,<<make_list_1030@54:1>@57:0>:int) =
        ((<<make_list_1030@54:1>@57:0> = 0) && (<make_list_1030@54:0> <= 0))
        P[<<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>](<<<fold_right_1143@71:0>@141:1>@147:0>:int,<<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>:int) =
        (0 <= <<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>)
        P[<<fold_right_1143@71:0>@141:2>](<<fold_right_1143@71:0>@141:2>:int) = (0 <= <<fold_right_1143@71:0>@141:2>)
        P[<<fold_right_1143@71:2>@79:0>](<fold_right_1143@71:1>:int,<<fold_right_1143@71:2>@79:0>:int) =
        ((<<fold_right_1143@71:2>@79:0> = 0) && (<fold_right_1143@71:1> = 1))
        P[<<<fold_right_1143@71:0>@141:0>@199:0>](<<<fold_right_1143@71:0>@141:0>@199:0>:int) =
        (0 <= <<<fold_right_1143@71:0>@141:0>@199:0>)
        P[<<<fold_right_1143@71:0>@141:1>@147:0>](<<<fold_right_1143@71:0>@141:1>@147:0>:int) =
        (0 <= <<<fold_right_1143@71:0>@141:1>@147:0>)
        P[<<<make_list_1030@51:1>@67:1>@83:0>](<make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int) =
        ((<<<make_list_1030@51:1>@67:1>@83:0> = 0) && (<<make_list_1030@51:1>@67:0> = 1))
      upper bounds:
        P[<<<make_list_1030@51:1>@67:1>@83:0>](var928:int,var929:int,var930:int) = true
      begin GenHcSolver.classify_pids(562318)[4]
        output:
          [<<<make_list_1030@51:1>@67:1>@83:0>]
      end GenHcSolver.classify_pids(562318)[4] (0.000000 sec.)
      lb:((<<<make_list_1030@51:1>@67:1>@83:0> = 0) && (<<make_list_1030@51:1>@67:0> = 1))
      nub:false
      begin ApronInterface.convex_hull_interpolate(562321)[4]
        lb:((<<<make_list_1030@51:1>@67:1>@83:0> = 0) && (<<make_list_1030@51:1>@67:0> = 1))
        nub:false
        begin ExtFormula.Formula.case_analysis_boolean(562331)[5]
          ts: ((<<<make_list_1030@51:1>@67:1>@83:0> = 0) && (<<make_list_1030@51:1>@67:0> = 1))
          
        end ExtFormula.Formula.case_analysis_boolean(562331)[5] (0.000000 sec.)
        begin ExtFormula.Formula.case_analysis_boolean(562339)[5]
          ts: false
          
        end ExtFormula.Formula.case_analysis_boolean(562339)[5] (0.000000 sec.)
        lb':((<<<make_list_1030@51:1>@67:1>@83:0> = 0) && ((-1 + <<make_list_1030@51:1>@67:0>) = 0))
        nub':(-1 >= 0)
        begin InterpProver.interpolate(562342)[5]
          begin InterpProver.interpolate_fresh(562343)[6]
            begin InterpProver.interpolate_log(562344)[7]
              input1: ((<<<make_list_1030@51:1>@67:1>@83:0> = 0) && ((-1 + <<make_list_1030@51:1>@67:0>) = 0))
              input2: (-1 >= 0)
              begin InterpProver.interpolate_check(562345)[8]
                begin InterpProver.interpolate_simplify(562346)[9]
                  begin InterpProver.interpolate_quick(562378)[10]
                    
                  end InterpProver.interpolate_quick(562378)[10] (0.000000 sec.)
                  
                end InterpProver.interpolate_simplify(562346)[9] (0.000000 sec.)
                
              end InterpProver.interpolate_check(562345)[8] (0.000000 sec.)
              output: true
            end InterpProver.interpolate_log(562344)[7] (0.000000 sec.)
            
          end InterpProver.interpolate_fresh(562343)[6] (0.000000 sec.)
          
        end InterpProver.interpolate(562342)[5] (0.000000 sec.)
        output:
          P[<<<make_list_1030@51:1>@67:1>@83:0>](<make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int) =
          true
      end ApronInterface.convex_hull_interpolate(562321)[4] (0.001000 sec.)
      Horn clauses:
        P[<fold_right_1143@71:1>](<fold_right_1143@71:1>:int), (1 < <fold_right_1143@71:1>) |- bot
        
        P[<<<fold_right_1143@71:0>@141:0>@199:0>](<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>:int),
        P[<fold_right_1143@71:1>](<fold_right_1143@71:1>:int),
        P[<<fold_right_1143@71:2>@79:0>](<fold_right_1143@71:1>:int,0:int),
        ((0 > <<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>) && (<fold_right_1143@71:1> >= 1)) |- bot
        
        P[<<fold_right_1143@71:0>@141:2>](var329:int),
        P[<<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>](var329:int,<<<fold_right_1143@71:0>@141:0>@199:0>:int)|- P[<<<fold_right_1143@71:0>@141:0>@199:0>](
        <<<fold_right_1143@71:0>@141:0>@199:0>:int)
        
        P[<fold_right_1143@71:1>](var330:int),
        ((1 <= var330) && (var330 <= (1 + <<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>)))
        |- P[<<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>](<<<fold_right_1143@71:0>@141:1>@147:0>:int,
                                                             <<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>:int)
        
        P[<<<fold_right_1143@71:0>@141:1>@147:0>](<<<fold_right_1143@108:4>@111:0>@157:0>:int),
        P[<fold_right_1143@71:1>]((1 + <fold_right_1143@108:1>):int),
        ((<fold_right_1143@108:1> >= 0) && (0 > <<<fold_right_1143@108:4>@111:0>@157:0>)) |- bot
        
        P[<<fold_right_1143@71:0>@141:2>](<<<fold_right_1143@71:0>@141:1>@147:0>:int)|- P[<<<fold_right_1143@71:0>@141:1>@147:0>](
        <<<fold_right_1143@71:0>@141:1>@147:0>:int)
        
        P[<fold_right_1143@71:1>](var333:int), ((1 <= var333) && (0 <= <<fold_right_1143@71:0>@141:2>))
        |- P[<<fold_right_1143@71:0>@141:2>](<<fold_right_1143@71:0>@141:2>:int)
        
        P[<fold_right_1143@71:1>](<fold_right_1143@71:1>:int),
        ((<<fold_right_1143@71:2>@79:0> = 0) && (<fold_right_1143@71:1> >= 1))
        |- P[<<fold_right_1143@71:2>@79:0>](<fold_right_1143@71:1>:int,
                                            <<fold_right_1143@71:2>@79:0>:int)
        
         (<fold_right_1143@71:1> = 1) |- P[<fold_right_1143@71:1>](<fold_right_1143@71:1>:int)
        
        P[<<make_list_1030@54:1>@57:0>]((-1 + <make_list_1030@51:0>):int,(
                                        -1 + <<make_list_1030@51:1>@67:0>):int),
        ((<make_list_1030@51:0> > 0) && (<<make_list_1030@51:1>@67:0> <> 1)) |- bot
        
         ((<<make_list_1030@54:1>@57:0> = 0) && (<make_list_1030@54:0> <= 0))
        |- P[<<make_list_1030@54:1>@57:0>](<make_list_1030@54:0>:int,
                                           <<make_list_1030@54:1>@57:0>:int)
      lower bounds:
        P[<fold_right_1143@71:1>](<fold_right_1143@71:1>:int) = (<fold_right_1143@71:1> = 1)
        P[<<make_list_1030@54:1>@57:0>](<make_list_1030@54:0>:int,<<make_list_1030@54:1>@57:0>:int) =
        ((<<make_list_1030@54:1>@57:0> = 0) && (<make_list_1030@54:0> <= 0))
        P[<<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>](<<<fold_right_1143@71:0>@141:1>@147:0>:int,<<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>:int) =
        (0 <= <<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>)
        P[<<fold_right_1143@71:0>@141:2>](<<fold_right_1143@71:0>@141:2>:int) = (0 <= <<fold_right_1143@71:0>@141:2>)
        P[<<fold_right_1143@71:2>@79:0>](<fold_right_1143@71:1>:int,<<fold_right_1143@71:2>@79:0>:int) =
        ((<<fold_right_1143@71:2>@79:0> = 0) && (<fold_right_1143@71:1> = 1))
        P[<<<fold_right_1143@71:0>@141:0>@199:0>](<<<fold_right_1143@71:0>@141:0>@199:0>:int) =
        (0 <= <<<fold_right_1143@71:0>@141:0>@199:0>)
        P[<<<fold_right_1143@71:0>@141:1>@147:0>](<<<fold_right_1143@71:0>@141:1>@147:0>:int) =
        (0 <= <<<fold_right_1143@71:0>@141:1>@147:0>)
      upper bounds:
        P[<<<fold_right_1143@71:0>@141:0>@199:0>](var931:int) = (0 <= var931)
      begin GenHcSolver.classify_pids(565626)[4]
        output:
          [<<<fold_right_1143@71:0>@141:0>@199:0>]
      end GenHcSolver.classify_pids(565626)[4] (0.000000 sec.)
      lb:(0 <= <<<fold_right_1143@71:0>@141:0>@199:0>)
      nub:(not (0 <= <<<fold_right_1143@71:0>@141:0>@199:0>))
      begin ApronInterface.convex_hull_interpolate(565629)[4]
        lb:(0 <= <<<fold_right_1143@71:0>@141:0>@199:0>)
        nub:(not (0 <= <<<fold_right_1143@71:0>@141:0>@199:0>))
        begin ExtFormula.Formula.case_analysis_boolean(565633)[5]
          ts: (0 <= <<<fold_right_1143@71:0>@141:0>@199:0>)
          
        end ExtFormula.Formula.case_analysis_boolean(565633)[5] (0.000000 sec.)
        begin ExtFormula.Formula.case_analysis_boolean(565640)[5]
          ts: (0 > <<<fold_right_1143@71:0>@141:0>@199:0>)
          
        end ExtFormula.Formula.case_analysis_boolean(565640)[5] (0.000000 sec.)
        lb':(<<<fold_right_1143@71:0>@141:0>@199:0> >= 0)
        nub':((-1 + (-1 * <<<fold_right_1143@71:0>@141:0>@199:0>)) >= 0)
        begin InterpProver.interpolate(565644)[5]
          begin InterpProver.interpolate_fresh(565645)[6]
            begin InterpProver.interpolate_log(565646)[7]
              input1: (<<<fold_right_1143@71:0>@141:0>@199:0> >= 0)
              input2: ((-1 + (-1 * <<<fold_right_1143@71:0>@141:0>@199:0>)) >= 0)
              begin InterpProver.interpolate_check(565647)[8]
                begin InterpProver.interpolate_simplify(565648)[9]
                  begin InterpProver.interpolate_quick(565667)[10]
                    begin CsisatInterface.interpolate_csisat_wrap(565676)[11]
                      begin CsisatInterface.interpolate_csisat_post_process(565677)[12]
                        begin CsisatInterface.interpolate_csisat_log(565678)[13]
                          input1: 0 <= v_sep_fold_right_1143_sep_71_sep_0_sep_141_sep_0_sep_199_sep_0
                          input2: (1 + v_sep_fold_right_1143_sep_71_sep_0_sep_141_sep_0_sep_199_sep_0) <= 0
                          begin CsisatInterface.interpolate_csisat_raw(565679)[14]
                            
                          end CsisatInterface.interpolate_csisat_raw(565679)[14] (0.000000 sec.)
                          output: -2*v_sep_fold_right_1143_sep_71_sep_0_sep_141_sep_0_sep_199_sep_0 <= 0
                          
                        end CsisatInterface.interpolate_csisat_log(565678)[13] (0.000000 sec.)
                        after simplification: -2*v_sep_fold_right_1143_sep_71_sep_0_sep_141_sep_0_sep_199_sep_0 <= 0
                        after dnf conversion: ((-2*v_sep_fold_right_1143_sep_71_sep_0_sep_141_sep_0_sep_199_sep_0 <= 0))
                        
                      end CsisatInterface.interpolate_csisat_post_process(565677)[12] (0.000000 sec.)
                      
                    end CsisatInterface.interpolate_csisat_wrap(565676)[11] (0.000000 sec.)
                    
                  end InterpProver.interpolate_quick(565667)[10] (0.000000 sec.)
                  
                end InterpProver.interpolate_simplify(565648)[9] (0.000000 sec.)
                
              end InterpProver.interpolate_check(565647)[8] (0.001000 sec.)
              output: (0 <= <<<fold_right_1143@71:0>@141:0>@199:0>)
            end InterpProver.interpolate_log(565646)[7] (0.001000 sec.)
            
          end InterpProver.interpolate_fresh(565645)[6] (0.001000 sec.)
          
        end InterpProver.interpolate(565644)[5] (0.001000 sec.)
        output:
          P[<<<fold_right_1143@71:0>@141:0>@199:0>](<<<fold_right_1143@71:0>@141:0>@199:0>:int) =
          (0 <= <<<fold_right_1143@71:0>@141:0>@199:0>)
      end ApronInterface.convex_hull_interpolate(565629)[4] (0.001000 sec.)
      Horn clauses:
        P[<fold_right_1143@71:1>](<fold_right_1143@71:1>:int), (1 < <fold_right_1143@71:1>) |- bot
        
        P[<<fold_right_1143@71:0>@141:2>](var329:int),
        P[<<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>](var329:int,<<<fold_right_1143@71:0>@141:0>@199:0>:int),
        (0 > <<<fold_right_1143@71:0>@141:0>@199:0>) |- bot
        
        P[<fold_right_1143@71:1>](var330:int),
        ((1 <= var330) && (var330 <= (1 + <<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>)))
        |- P[<<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>](<<<fold_right_1143@71:0>@141:1>@147:0>:int,
                                                             <<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>:int)
        
        P[<<<fold_right_1143@71:0>@141:1>@147:0>](<<<fold_right_1143@108:4>@111:0>@157:0>:int),
        P[<fold_right_1143@71:1>]((1 + <fold_right_1143@108:1>):int),
        ((<fold_right_1143@108:1> >= 0) && (0 > <<<fold_right_1143@108:4>@111:0>@157:0>)) |- bot
        
        P[<<fold_right_1143@71:0>@141:2>](<<<fold_right_1143@71:0>@141:1>@147:0>:int)|- P[<<<fold_right_1143@71:0>@141:1>@147:0>](
        <<<fold_right_1143@71:0>@141:1>@147:0>:int)
        
        P[<fold_right_1143@71:1>](var333:int), ((1 <= var333) && (0 <= <<fold_right_1143@71:0>@141:2>))
        |- P[<<fold_right_1143@71:0>@141:2>](<<fold_right_1143@71:0>@141:2>:int)
        
        P[<fold_right_1143@71:1>](<fold_right_1143@71:1>:int),
        ((<<fold_right_1143@71:2>@79:0> = 0) && (<fold_right_1143@71:1> >= 1))
        |- P[<<fold_right_1143@71:2>@79:0>](<fold_right_1143@71:1>:int,
                                            <<fold_right_1143@71:2>@79:0>:int)
        
         (<fold_right_1143@71:1> = 1) |- P[<fold_right_1143@71:1>](<fold_right_1143@71:1>:int)
        
        P[<<make_list_1030@54:1>@57:0>]((-1 + <make_list_1030@51:0>):int,(
                                        -1 + <<make_list_1030@51:1>@67:0>):int),
        ((<make_list_1030@51:0> > 0) && (<<make_list_1030@51:1>@67:0> <> 1)) |- bot
        
         ((<<make_list_1030@54:1>@57:0> = 0) && (<make_list_1030@54:0> <= 0))
        |- P[<<make_list_1030@54:1>@57:0>](<make_list_1030@54:0>:int,
                                           <<make_list_1030@54:1>@57:0>:int)
      lower bounds:
        P[<fold_right_1143@71:1>](<fold_right_1143@71:1>:int) = (<fold_right_1143@71:1> = 1)
        P[<<make_list_1030@54:1>@57:0>](<make_list_1030@54:0>:int,<<make_list_1030@54:1>@57:0>:int) =
        ((<<make_list_1030@54:1>@57:0> = 0) && (<make_list_1030@54:0> <= 0))
        P[<<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>](<<<fold_right_1143@71:0>@141:1>@147:0>:int,<<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>:int) =
        (0 <= <<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>)
        P[<<fold_right_1143@71:0>@141:2>](<<fold_right_1143@71:0>@141:2>:int) = (0 <= <<fold_right_1143@71:0>@141:2>)
        P[<<fold_right_1143@71:2>@79:0>](<fold_right_1143@71:1>:int,<<fold_right_1143@71:2>@79:0>:int) =
        ((<<fold_right_1143@71:2>@79:0> = 0) && (<fold_right_1143@71:1> = 1))
        P[<<<fold_right_1143@71:0>@141:1>@147:0>](<<<fold_right_1143@71:0>@141:1>@147:0>:int) =
        (0 <= <<<fold_right_1143@71:0>@141:1>@147:0>)
      upper bounds:
        P[<<fold_right_1143@71:2>@79:0>](var932:int,var933:int) = true
      begin GenHcSolver.classify_pids(568519)[4]
        output:
          [<<fold_right_1143@71:2>@79:0>]
      end GenHcSolver.classify_pids(568519)[4] (0.000000 sec.)
      lb:((<<fold_right_1143@71:2>@79:0> = 0) && (<fold_right_1143@71:1> = 1))
      nub:false
      begin ApronInterface.convex_hull_interpolate(568522)[4]
        lb:((<<fold_right_1143@71:2>@79:0> = 0) && (<fold_right_1143@71:1> = 1))
        nub:false
        begin ExtFormula.Formula.case_analysis_boolean(568532)[5]
          ts: ((<<fold_right_1143@71:2>@79:0> = 0) && (<fold_right_1143@71:1> = 1))
          
        end ExtFormula.Formula.case_analysis_boolean(568532)[5] (0.001000 sec.)
        begin ExtFormula.Formula.case_analysis_boolean(568540)[5]
          ts: false
          
        end ExtFormula.Formula.case_analysis_boolean(568540)[5] (0.000000 sec.)
        lb':((<<fold_right_1143@71:2>@79:0> = 0) && ((-1 + <fold_right_1143@71:1>) = 0))
        nub':(-1 >= 0)
        begin InterpProver.interpolate(568543)[5]
          begin InterpProver.interpolate_fresh(568544)[6]
            begin InterpProver.interpolate_log(568545)[7]
              input1: ((<<fold_right_1143@71:2>@79:0> = 0) && ((-1 + <fold_right_1143@71:1>) = 0))
              input2: (-1 >= 0)
              begin InterpProver.interpolate_check(568546)[8]
                begin InterpProver.interpolate_simplify(568547)[9]
                  begin InterpProver.interpolate_quick(568579)[10]
                    
                  end InterpProver.interpolate_quick(568579)[10] (0.000000 sec.)
                  
                end InterpProver.interpolate_simplify(568547)[9] (0.000000 sec.)
                
              end InterpProver.interpolate_check(568546)[8] (0.000000 sec.)
              output: true
            end InterpProver.interpolate_log(568545)[7] (0.000000 sec.)
            
          end InterpProver.interpolate_fresh(568544)[6] (0.000000 sec.)
          
        end InterpProver.interpolate(568543)[5] (0.000000 sec.)
        output:
          P[<<fold_right_1143@71:2>@79:0>](<fold_right_1143@71:1>:int,<<fold_right_1143@71:2>@79:0>:int) = true
      end ApronInterface.convex_hull_interpolate(568522)[4] (0.001000 sec.)
      Horn clauses:
        P[<fold_right_1143@71:1>](<fold_right_1143@71:1>:int), (1 < <fold_right_1143@71:1>) |- bot
        
        P[<<fold_right_1143@71:0>@141:2>](var329:int),
        P[<<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>](var329:int,<<<fold_right_1143@71:0>@141:0>@199:0>:int),
        (0 > <<<fold_right_1143@71:0>@141:0>@199:0>) |- bot
        
        P[<fold_right_1143@71:1>](var330:int),
        ((1 <= var330) && (var330 <= (1 + <<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>)))
        |- P[<<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>](<<<fold_right_1143@71:0>@141:1>@147:0>:int,
                                                             <<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>:int)
        
        P[<<<fold_right_1143@71:0>@141:1>@147:0>](<<<fold_right_1143@108:4>@111:0>@157:0>:int),
        P[<fold_right_1143@71:1>]((1 + <fold_right_1143@108:1>):int),
        ((<fold_right_1143@108:1> >= 0) && (0 > <<<fold_right_1143@108:4>@111:0>@157:0>)) |- bot
        
        P[<<fold_right_1143@71:0>@141:2>](<<<fold_right_1143@71:0>@141:1>@147:0>:int)|- P[<<<fold_right_1143@71:0>@141:1>@147:0>](
        <<<fold_right_1143@71:0>@141:1>@147:0>:int)
        
        P[<fold_right_1143@71:1>](var333:int), ((1 <= var333) && (0 <= <<fold_right_1143@71:0>@141:2>))
        |- P[<<fold_right_1143@71:0>@141:2>](<<fold_right_1143@71:0>@141:2>:int)
        
         (<fold_right_1143@71:1> = 1) |- P[<fold_right_1143@71:1>](<fold_right_1143@71:1>:int)
        
        P[<<make_list_1030@54:1>@57:0>]((-1 + <make_list_1030@51:0>):int,(
                                        -1 + <<make_list_1030@51:1>@67:0>):int),
        ((<make_list_1030@51:0> > 0) && (<<make_list_1030@51:1>@67:0> <> 1)) |- bot
        
         ((<<make_list_1030@54:1>@57:0> = 0) && (<make_list_1030@54:0> <= 0))
        |- P[<<make_list_1030@54:1>@57:0>](<make_list_1030@54:0>:int,
                                           <<make_list_1030@54:1>@57:0>:int)
      lower bounds:
        P[<fold_right_1143@71:1>](<fold_right_1143@71:1>:int) = (<fold_right_1143@71:1> = 1)
        P[<<make_list_1030@54:1>@57:0>](<make_list_1030@54:0>:int,<<make_list_1030@54:1>@57:0>:int) =
        ((<<make_list_1030@54:1>@57:0> = 0) && (<make_list_1030@54:0> <= 0))
        P[<<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>](<<<fold_right_1143@71:0>@141:1>@147:0>:int,<<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>:int) =
        (0 <= <<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>)
        P[<<fold_right_1143@71:0>@141:2>](<<fold_right_1143@71:0>@141:2>:int) = (0 <= <<fold_right_1143@71:0>@141:2>)
        P[<<<fold_right_1143@71:0>@141:1>@147:0>](<<<fold_right_1143@71:0>@141:1>@147:0>:int) =
        (0 <= <<<fold_right_1143@71:0>@141:1>@147:0>)
      upper bounds:
        P[<<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>](var934:int,var935:int) = ((0 <= var935) || (0 > var934))
      begin GenHcSolver.classify_pids(571203)[4]
        output:
          [<<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>]
      end GenHcSolver.classify_pids(571203)[4] (0.000000 sec.)
      lb:(0 <= <<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>)
      nub:(not ((0 <= <<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>) || (0 > <<<fold_right_1143@71:0>@141:1>@147:0>)))
      begin ApronInterface.convex_hull_interpolate(571206)[4]
        lb:(0 <= <<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>)
        nub:(not
               ((0 <= <<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>) || (0 > <<<fold_right_1143@71:0>@141:1>@147:0>)))
        begin ExtFormula.Formula.case_analysis_boolean(571210)[5]
          ts: (0 <= <<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>)
          
        end ExtFormula.Formula.case_analysis_boolean(571210)[5] (0.000000 sec.)
        begin ExtFormula.Formula.case_analysis_boolean(571225)[5]
          ts: ((0 > <<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>) && (0 <= <<<fold_right_1143@71:0>@141:1>@147:0>))
          
        end ExtFormula.Formula.case_analysis_boolean(571225)[5] (0.000000 sec.)
        lb':(<<<<fold_right_1143@71:0>@141:1>@147:1>@189:0> >= 0)
        nub':(((-1 + (-1 * <<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>)) >= 0) &&
              (<<<fold_right_1143@71:0>@141:1>@147:0> >= 0))
        begin InterpProver.interpolate(571230)[5]
          begin InterpProver.interpolate_fresh(571231)[6]
            begin InterpProver.interpolate_log(571232)[7]
              input1: (<<<<fold_right_1143@71:0>@141:1>@147:1>@189:0> >= 0)
              input2: (((-1 + (-1 * <<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>)) >= 0) &&
                       (<<<fold_right_1143@71:0>@141:1>@147:0> >= 0))
              begin InterpProver.interpolate_check(571233)[8]
                begin InterpProver.interpolate_simplify(571234)[9]
                  begin InterpProver.interpolate_quick(571273)[10]
                    begin CsisatInterface.interpolate_csisat_wrap(571282)[11]
                      begin CsisatInterface.interpolate_csisat_post_process(571283)[12]
                        begin CsisatInterface.interpolate_csisat_log(571284)[13]
                          input1: 0 <= v_sep_fold_right_1143_sep_71_sep_0_sep_141_sep_1_sep_147_sep_1_sep_189_sep_0
                          input2: (0 <= v_sep_fold_right_1143_sep_71_sep_0_sep_141_sep_1_sep_147_sep_0 & (1 + v_sep_fold_right_1143_sep_71_sep_0_sep_141_sep_1_sep_147_sep_1_sep_189_sep_0) <= 0)
                          begin CsisatInterface.interpolate_csisat_raw(571285)[14]
                            
                          end CsisatInterface.interpolate_csisat_raw(571285)[14] (0.000000 sec.)
                          output: -2*v_sep_fold_right_1143_sep_71_sep_0_sep_141_sep_1_sep_147_sep_1_sep_189_sep_0 <= 0
                          
                        end CsisatInterface.interpolate_csisat_log(571284)[13] (0.000000 sec.)
                        after simplification: -2*v_sep_fold_right_1143_sep_71_sep_0_sep_141_sep_1_sep_147_sep_1_sep_189_sep_0 <= 0
                        after dnf conversion: ((-2*v_sep_fold_right_1143_sep_71_sep_0_sep_141_sep_1_sep_147_sep_1_sep_189_sep_0 <= 0))
                        
                      end CsisatInterface.interpolate_csisat_post_process(571283)[12] (0.000000 sec.)
                      
                    end CsisatInterface.interpolate_csisat_wrap(571282)[11] (0.000000 sec.)
                    
                  end InterpProver.interpolate_quick(571273)[10] (0.000000 sec.)
                  
                end InterpProver.interpolate_simplify(571234)[9] (0.001000 sec.)
                
              end InterpProver.interpolate_check(571233)[8] (0.001999 sec.)
              output: (0 <= <<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>)
            end InterpProver.interpolate_log(571232)[7] (0.001999 sec.)
            
          end InterpProver.interpolate_fresh(571231)[6] (0.001999 sec.)
          
        end InterpProver.interpolate(571230)[5] (0.001999 sec.)
        output:
          P[<<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>](<<<fold_right_1143@71:0>@141:1>@147:0>:int,<<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>:int) =
          (0 <= <<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>)
      end ApronInterface.convex_hull_interpolate(571206)[4] (0.001999 sec.)
      Horn clauses:
        P[<fold_right_1143@71:1>](<fold_right_1143@71:1>:int), (1 < <fold_right_1143@71:1>) |- bot
        
        P[<<<fold_right_1143@71:0>@141:1>@147:0>](<<<fold_right_1143@108:4>@111:0>@157:0>:int),
        P[<fold_right_1143@71:1>]((1 + <fold_right_1143@108:1>):int),
        ((<fold_right_1143@108:1> >= 0) && (0 > <<<fold_right_1143@108:4>@111:0>@157:0>)) |- bot
        
        P[<<fold_right_1143@71:0>@141:2>](<<<fold_right_1143@71:0>@141:1>@147:0>:int)|- P[<<<fold_right_1143@71:0>@141:1>@147:0>](
        <<<fold_right_1143@71:0>@141:1>@147:0>:int)
        
        P[<fold_right_1143@71:1>](var333:int), ((1 <= var333) && (0 <= <<fold_right_1143@71:0>@141:2>))
        |- P[<<fold_right_1143@71:0>@141:2>](<<fold_right_1143@71:0>@141:2>:int)
        
         (<fold_right_1143@71:1> = 1) |- P[<fold_right_1143@71:1>](<fold_right_1143@71:1>:int)
        
        P[<<make_list_1030@54:1>@57:0>]((-1 + <make_list_1030@51:0>):int,(
                                        -1 + <<make_list_1030@51:1>@67:0>):int),
        ((<make_list_1030@51:0> > 0) && (<<make_list_1030@51:1>@67:0> <> 1)) |- bot
        
         ((<<make_list_1030@54:1>@57:0> = 0) && (<make_list_1030@54:0> <= 0))
        |- P[<<make_list_1030@54:1>@57:0>](<make_list_1030@54:0>:int,
                                           <<make_list_1030@54:1>@57:0>:int)
      lower bounds:
        P[<fold_right_1143@71:1>](<fold_right_1143@71:1>:int) = (<fold_right_1143@71:1> = 1)
        P[<<make_list_1030@54:1>@57:0>](<make_list_1030@54:0>:int,<<make_list_1030@54:1>@57:0>:int) =
        ((<<make_list_1030@54:1>@57:0> = 0) && (<make_list_1030@54:0> <= 0))
        P[<<fold_right_1143@71:0>@141:2>](<<fold_right_1143@71:0>@141:2>:int) = (0 <= <<fold_right_1143@71:0>@141:2>)
        P[<<<fold_right_1143@71:0>@141:1>@147:0>](<<<fold_right_1143@71:0>@141:1>@147:0>:int) =
        (0 <= <<<fold_right_1143@71:0>@141:1>@147:0>)
      upper bounds:
        P[<<<fold_right_1143@71:0>@141:1>@147:0>](var936:int) = (0 <= var936)
      begin GenHcSolver.classify_pids(573343)[4]
        output:
          [<<<fold_right_1143@71:0>@141:1>@147:0>]
      end GenHcSolver.classify_pids(573343)[4] (0.000000 sec.)
      lb:(0 <= <<<fold_right_1143@71:0>@141:1>@147:0>)
      nub:(not (0 <= <<<fold_right_1143@71:0>@141:1>@147:0>))
      begin ApronInterface.convex_hull_interpolate(573346)[4]
        lb:(0 <= <<<fold_right_1143@71:0>@141:1>@147:0>)
        nub:(not (0 <= <<<fold_right_1143@71:0>@141:1>@147:0>))
        begin ExtFormula.Formula.case_analysis_boolean(573350)[5]
          ts: (0 <= <<<fold_right_1143@71:0>@141:1>@147:0>)
          
        end ExtFormula.Formula.case_analysis_boolean(573350)[5] (0.000000 sec.)
        begin ExtFormula.Formula.case_analysis_boolean(573357)[5]
          ts: (0 > <<<fold_right_1143@71:0>@141:1>@147:0>)
          
        end ExtFormula.Formula.case_analysis_boolean(573357)[5] (0.000000 sec.)
        lb':(<<<fold_right_1143@71:0>@141:1>@147:0> >= 0)
        nub':((-1 + (-1 * <<<fold_right_1143@71:0>@141:1>@147:0>)) >= 0)
        begin InterpProver.interpolate(573361)[5]
          begin InterpProver.interpolate_fresh(573362)[6]
            begin InterpProver.interpolate_log(573363)[7]
              input1: (<<<fold_right_1143@71:0>@141:1>@147:0> >= 0)
              input2: ((-1 + (-1 * <<<fold_right_1143@71:0>@141:1>@147:0>)) >= 0)
              begin InterpProver.interpolate_check(573364)[8]
                begin InterpProver.interpolate_simplify(573365)[9]
                  begin InterpProver.interpolate_quick(573384)[10]
                    begin CsisatInterface.interpolate_csisat_wrap(573393)[11]
                      begin CsisatInterface.interpolate_csisat_post_process(573394)[12]
                        begin CsisatInterface.interpolate_csisat_log(573395)[13]
                          input1: 0 <= v_sep_fold_right_1143_sep_71_sep_0_sep_141_sep_1_sep_147_sep_0
                          input2: (1 + v_sep_fold_right_1143_sep_71_sep_0_sep_141_sep_1_sep_147_sep_0) <= 0
                          begin CsisatInterface.interpolate_csisat_raw(573396)[14]
                            
                          end CsisatInterface.interpolate_csisat_raw(573396)[14] (0.000000 sec.)
                          output: -2*v_sep_fold_right_1143_sep_71_sep_0_sep_141_sep_1_sep_147_sep_0 <= 0
                          
                        end CsisatInterface.interpolate_csisat_log(573395)[13] (0.000000 sec.)
                        after simplification: -2*v_sep_fold_right_1143_sep_71_sep_0_sep_141_sep_1_sep_147_sep_0 <= 0
                        after dnf conversion: ((-2*v_sep_fold_right_1143_sep_71_sep_0_sep_141_sep_1_sep_147_sep_0 <= 0))
                        
                      end CsisatInterface.interpolate_csisat_post_process(573394)[12] (0.000000 sec.)
                      
                    end CsisatInterface.interpolate_csisat_wrap(573393)[11] (0.000000 sec.)
                    
                  end InterpProver.interpolate_quick(573384)[10] (0.000000 sec.)
                  
                end InterpProver.interpolate_simplify(573365)[9] (0.001000 sec.)
                
              end InterpProver.interpolate_check(573364)[8] (0.002000 sec.)
              output: (0 <= <<<fold_right_1143@71:0>@141:1>@147:0>)
            end InterpProver.interpolate_log(573363)[7] (0.002000 sec.)
            
          end InterpProver.interpolate_fresh(573362)[6] (0.002000 sec.)
          
        end InterpProver.interpolate(573361)[5] (0.002000 sec.)
        output:
          P[<<<fold_right_1143@71:0>@141:1>@147:0>](<<<fold_right_1143@71:0>@141:1>@147:0>:int) =
          (0 <= <<<fold_right_1143@71:0>@141:1>@147:0>)
      end ApronInterface.convex_hull_interpolate(573346)[4] (0.002000 sec.)
      Horn clauses:
        P[<fold_right_1143@71:1>](<fold_right_1143@71:1>:int), (1 < <fold_right_1143@71:1>) |- bot
        
        P[<<fold_right_1143@71:0>@141:2>](<<<fold_right_1143@71:0>@141:1>@147:0>:int),
        (0 > <<<fold_right_1143@71:0>@141:1>@147:0>) |- bot
        
        P[<fold_right_1143@71:1>](var333:int), ((1 <= var333) && (0 <= <<fold_right_1143@71:0>@141:2>))
        |- P[<<fold_right_1143@71:0>@141:2>](<<fold_right_1143@71:0>@141:2>:int)
        
         (<fold_right_1143@71:1> = 1) |- P[<fold_right_1143@71:1>](<fold_right_1143@71:1>:int)
        
        P[<<make_list_1030@54:1>@57:0>]((-1 + <make_list_1030@51:0>):int,(
                                        -1 + <<make_list_1030@51:1>@67:0>):int),
        ((<make_list_1030@51:0> > 0) && (<<make_list_1030@51:1>@67:0> <> 1)) |- bot
        
         ((<<make_list_1030@54:1>@57:0> = 0) && (<make_list_1030@54:0> <= 0))
        |- P[<<make_list_1030@54:1>@57:0>](<make_list_1030@54:0>:int,
                                           <<make_list_1030@54:1>@57:0>:int)
      lower bounds:
        P[<fold_right_1143@71:1>](<fold_right_1143@71:1>:int) = (<fold_right_1143@71:1> = 1)
        P[<<make_list_1030@54:1>@57:0>](<make_list_1030@54:0>:int,<<make_list_1030@54:1>@57:0>:int) =
        ((<<make_list_1030@54:1>@57:0> = 0) && (<make_list_1030@54:0> <= 0))
        P[<<fold_right_1143@71:0>@141:2>](<<fold_right_1143@71:0>@141:2>:int) = (0 <= <<fold_right_1143@71:0>@141:2>)
      upper bounds:
        P[<<fold_right_1143@71:0>@141:2>](var937:int) = (0 <= var937)
      begin GenHcSolver.classify_pids(574998)[4]
        output:
          [<<fold_right_1143@71:0>@141:2>]
      end GenHcSolver.classify_pids(574998)[4] (0.000000 sec.)
      lb:(0 <= <<fold_right_1143@71:0>@141:2>)
      nub:(not (0 <= <<fold_right_1143@71:0>@141:2>))
      begin ApronInterface.convex_hull_interpolate(575001)[4]
        lb:(0 <= <<fold_right_1143@71:0>@141:2>)
        nub:(not (0 <= <<fold_right_1143@71:0>@141:2>))
        begin ExtFormula.Formula.case_analysis_boolean(575005)[5]
          ts: (0 <= <<fold_right_1143@71:0>@141:2>)
          
        end ExtFormula.Formula.case_analysis_boolean(575005)[5] (0.000000 sec.)
        begin ExtFormula.Formula.case_analysis_boolean(575012)[5]
          ts: (0 > <<fold_right_1143@71:0>@141:2>)
          
        end ExtFormula.Formula.case_analysis_boolean(575012)[5] (0.000000 sec.)
        lb':(<<fold_right_1143@71:0>@141:2> >= 0)
        nub':((-1 + (-1 * <<fold_right_1143@71:0>@141:2>)) >= 0)
        begin InterpProver.interpolate(575016)[5]
          begin InterpProver.interpolate_fresh(575017)[6]
            begin InterpProver.interpolate_log(575018)[7]
              input1: (<<fold_right_1143@71:0>@141:2> >= 0)
              input2: ((-1 + (-1 * <<fold_right_1143@71:0>@141:2>)) >= 0)
              begin InterpProver.interpolate_check(575019)[8]
                begin InterpProver.interpolate_simplify(575020)[9]
                  begin InterpProver.interpolate_quick(575039)[10]
                    begin CsisatInterface.interpolate_csisat_wrap(575048)[11]
                      begin CsisatInterface.interpolate_csisat_post_process(575049)[12]
                        begin CsisatInterface.interpolate_csisat_log(575050)[13]
                          input1: 0 <= v_sep_fold_right_1143_sep_71_sep_0_sep_141_sep_2
                          input2: (1 + v_sep_fold_right_1143_sep_71_sep_0_sep_141_sep_2) <= 0
                          begin CsisatInterface.interpolate_csisat_raw(575051)[14]
                            
                          end CsisatInterface.interpolate_csisat_raw(575051)[14] (0.000000 sec.)
                          output: -2*v_sep_fold_right_1143_sep_71_sep_0_sep_141_sep_2 <= 0
                          
                        end CsisatInterface.interpolate_csisat_log(575050)[13] (0.000000 sec.)
                        after simplification: -2*v_sep_fold_right_1143_sep_71_sep_0_sep_141_sep_2 <= 0
                        after dnf conversion: ((-2*v_sep_fold_right_1143_sep_71_sep_0_sep_141_sep_2 <= 0))
                        
                      end CsisatInterface.interpolate_csisat_post_process(575049)[12] (0.000000 sec.)
                      
                    end CsisatInterface.interpolate_csisat_wrap(575048)[11] (0.000000 sec.)
                    
                  end InterpProver.interpolate_quick(575039)[10] (0.000999 sec.)
                  
                end InterpProver.interpolate_simplify(575020)[9] (0.000999 sec.)
                
              end InterpProver.interpolate_check(575019)[8] (0.000999 sec.)
              output: (0 <= <<fold_right_1143@71:0>@141:2>)
            end InterpProver.interpolate_log(575018)[7] (0.001999 sec.)
            
          end InterpProver.interpolate_fresh(575017)[6] (0.001999 sec.)
          
        end InterpProver.interpolate(575016)[5] (0.001999 sec.)
        output:
          P[<<fold_right_1143@71:0>@141:2>](<<fold_right_1143@71:0>@141:2>:int) = (0 <= <<fold_right_1143@71:0>@141:2>)
      end ApronInterface.convex_hull_interpolate(575001)[4] (0.001999 sec.)
      Horn clauses:
        P[<fold_right_1143@71:1>](<fold_right_1143@71:1>:int), (1 < <fold_right_1143@71:1>) |- bot
        
         (<fold_right_1143@71:1> = 1) |- P[<fold_right_1143@71:1>](<fold_right_1143@71:1>:int)
        
        P[<<make_list_1030@54:1>@57:0>]((-1 + <make_list_1030@51:0>):int,(
                                        -1 + <<make_list_1030@51:1>@67:0>):int),
        ((<make_list_1030@51:0> > 0) && (<<make_list_1030@51:1>@67:0> <> 1)) |- bot
        
         ((<<make_list_1030@54:1>@57:0> = 0) && (<make_list_1030@54:0> <= 0))
        |- P[<<make_list_1030@54:1>@57:0>](<make_list_1030@54:0>:int,
                                           <<make_list_1030@54:1>@57:0>:int)
      lower bounds:
        P[<fold_right_1143@71:1>](<fold_right_1143@71:1>:int) = (<fold_right_1143@71:1> = 1)
        P[<<make_list_1030@54:1>@57:0>](<make_list_1030@54:0>:int,<<make_list_1030@54:1>@57:0>:int) =
        ((<<make_list_1030@54:1>@57:0> = 0) && (<make_list_1030@54:0> <= 0))
      upper bounds:
        P[<fold_right_1143@71:1>](var938:int) = (1 >= var938)
      begin GenHcSolver.classify_pids(576251)[4]
        output:
          [<fold_right_1143@71:1>]
      end GenHcSolver.classify_pids(576251)[4] (0.000000 sec.)
      lb:(<fold_right_1143@71:1> = 1)
      nub:(not (1 >= <fold_right_1143@71:1>))
      begin ApronInterface.convex_hull_interpolate(576254)[4]
        lb:(<fold_right_1143@71:1> = 1)
        nub:(not (1 >= <fold_right_1143@71:1>))
        begin ExtFormula.Formula.case_analysis_boolean(576259)[5]
          ts: (<fold_right_1143@71:1> = 1)
          
        end ExtFormula.Formula.case_analysis_boolean(576259)[5] (0.000000 sec.)
        begin ExtFormula.Formula.case_analysis_boolean(576268)[5]
          ts: (1 < <fold_right_1143@71:1>)
          
        end ExtFormula.Formula.case_analysis_boolean(576268)[5] (0.000000 sec.)
        lb':((-1 + <fold_right_1143@71:1>) = 0)
        nub':((-2 + <fold_right_1143@71:1>) >= 0)
        begin InterpProver.interpolate(576273)[5]
          begin InterpProver.interpolate_fresh(576274)[6]
            begin InterpProver.interpolate_log(576275)[7]
              input1: ((-1 + <fold_right_1143@71:1>) = 0)
              input2: ((-2 + <fold_right_1143@71:1>) >= 0)
              begin InterpProver.interpolate_check(576276)[8]
                begin InterpProver.interpolate_simplify(576277)[9]
                  begin InterpProver.interpolate_quick(576298)[10]
                    begin CsisatInterface.interpolate_csisat_wrap(576307)[11]
                      begin CsisatInterface.interpolate_csisat_post_process(576308)[12]
                        begin CsisatInterface.interpolate_csisat_log(576309)[13]
                          input1: 1 = v_sep_fold_right_1143_sep_71_sep_1
                          input2: 2 <= v_sep_fold_right_1143_sep_71_sep_1
                          begin CsisatInterface.interpolate_csisat_raw(576310)[14]
                            
                          end CsisatInterface.interpolate_csisat_raw(576310)[14] (0.000000 sec.)
                          output: 2*v_sep_fold_right_1143_sep_71_sep_1 <= 2
                          
                        end CsisatInterface.interpolate_csisat_log(576309)[13] (0.000000 sec.)
                        after simplification: 2*v_sep_fold_right_1143_sep_71_sep_1 <= 2
                        after dnf conversion: ((2*v_sep_fold_right_1143_sep_71_sep_1 <= 2))
                        
                      end CsisatInterface.interpolate_csisat_post_process(576308)[12] (0.001000 sec.)
                      
                    end CsisatInterface.interpolate_csisat_wrap(576307)[11] (0.001000 sec.)
                    
                  end InterpProver.interpolate_quick(576298)[10] (0.001000 sec.)
                  
                end InterpProver.interpolate_simplify(576277)[9] (0.001000 sec.)
                
              end InterpProver.interpolate_check(576276)[8] (0.001000 sec.)
              output: (<fold_right_1143@71:1> <= 1)
            end InterpProver.interpolate_log(576275)[7] (0.001000 sec.)
            
          end InterpProver.interpolate_fresh(576274)[6] (0.001000 sec.)
          
        end InterpProver.interpolate(576273)[5] (0.001000 sec.)
        output:
          P[<fold_right_1143@71:1>](<fold_right_1143@71:1>:int) = (<fold_right_1143@71:1> <= 1)
      end ApronInterface.convex_hull_interpolate(576254)[4] (0.002000 sec.)
      Horn clauses:
        P[<<make_list_1030@54:1>@57:0>]((-1 + <make_list_1030@51:0>):int,(
                                        -1 + <<make_list_1030@51:1>@67:0>):int),
        ((<make_list_1030@51:0> > 0) && (<<make_list_1030@51:1>@67:0> <> 1)) |- bot
        
         ((<<make_list_1030@54:1>@57:0> = 0) && (<make_list_1030@54:0> <= 0))
        |- P[<<make_list_1030@54:1>@57:0>](<make_list_1030@54:0>:int,
                                           <<make_list_1030@54:1>@57:0>:int)
      lower bounds:
        P[<<make_list_1030@54:1>@57:0>](<make_list_1030@54:0>:int,<<make_list_1030@54:1>@57:0>:int) =
        ((<<make_list_1030@54:1>@57:0> = 0) && (<make_list_1030@54:0> <= 0))
      upper bounds:
        P[<<make_list_1030@54:1>@57:0>](var939:int,var940:int) = ((var940 = 0) || ((1 + var939) <= 0))
      begin GenHcSolver.classify_pids(577426)[4]
        output:
          [<<make_list_1030@54:1>@57:0>]
      end GenHcSolver.classify_pids(577426)[4] (0.000000 sec.)
      lb:((<<make_list_1030@54:1>@57:0> = 0) && (<make_list_1030@54:0> <= 0))
      nub:(not ((<<make_list_1030@54:1>@57:0> = 0) || ((1 + <make_list_1030@54:0>) <= 0)))
      begin ApronInterface.convex_hull_interpolate(577429)[4]
        lb:((<<make_list_1030@54:1>@57:0> = 0) && (<make_list_1030@54:0> <= 0))
        nub:(not ((<<make_list_1030@54:1>@57:0> = 0) || ((1 + <make_list_1030@54:0>) <= 0)))
        begin ExtFormula.Formula.case_analysis_boolean(577439)[5]
          ts: ((<<make_list_1030@54:1>@57:0> = 0) && (<make_list_1030@54:0> <= 0))
          
        end ExtFormula.Formula.case_analysis_boolean(577439)[5] (0.000000 sec.)
        begin ExtFormula.Formula.case_analysis_boolean(577458)[5]
          ts: ((<<make_list_1030@54:1>@57:0> <> 0) && ((1 + <make_list_1030@54:0>) > 0))
          
        end ExtFormula.Formula.case_analysis_boolean(577458)[5] (0.000000 sec.)
        lb':((<<make_list_1030@54:1>@57:0> = 0) && ((-1 * <make_list_1030@54:0>) >= 0))
        nub':(<make_list_1030@54:0> >= 0)
        begin InterpProver.interpolate(577464)[5]
          begin InterpProver.interpolate_fresh(577465)[6]
            begin InterpProver.interpolate_log(577466)[7]
              input1: ((<<make_list_1030@54:1>@57:0> = 0) && ((-1 * <make_list_1030@54:0>) >= 0))
              input2: (<make_list_1030@54:0> >= 0)
              begin InterpProver.interpolate_check(577467)[8]
                begin InterpProver.interpolate_simplify(577468)[9]
                  begin InterpProver.interpolate_quick(577502)[10]
                    begin CsisatInterface.interpolate_csisat_wrap(577511)[11]
                      begin CsisatInterface.interpolate_csisat_post_process(577512)[12]
                        begin CsisatInterface.interpolate_csisat_log(577513)[13]
                          input1: v_sep_make_list_1030_sep_54_sep_0 <= 0
                          input2: 0 <= v_sep_make_list_1030_sep_54_sep_0
                          begin CsisatInterface.interpolate_csisat_raw(577514)[14]
                            
                          end CsisatInterface.interpolate_csisat_raw(577514)[14] (0.000000 sec.)
                          
                        end CsisatInterface.interpolate_csisat_log(577513)[13] (0.000000 sec.)
                        
                      end CsisatInterface.interpolate_csisat_post_process(577512)[12] (0.000000 sec.)
                      
                    end CsisatInterface.interpolate_csisat_wrap(577511)[11] (0.000000 sec.)
                    
                  end InterpProver.interpolate_quick(577502)[10] (0.001000 sec.)
                  
                end InterpProver.interpolate_simplify(577468)[9] (0.001000 sec.)
                
              end InterpProver.interpolate_check(577467)[8] (0.002000 sec.)
              there is no interpolant
            end InterpProver.interpolate_log(577466)[7] (0.002000 sec.)
            
          end InterpProver.interpolate_fresh(577465)[6] (0.002000 sec.)
          
        end InterpProver.interpolate(577464)[5] (0.002000 sec.)
        begin InterpProver.interpolate(577523)[5]
          begin InterpProver.interpolate_fresh(577524)[6]
            begin InterpProver.interpolate_log(577525)[7]
              input1: ((<<make_list_1030@54:1>@57:0> = 0) && ((-1 * <make_list_1030@54:0>) >= 0))
              input2: (not ((<<make_list_1030@54:1>@57:0> = 0) || ((1 + <make_list_1030@54:0>) <= 0)))
              begin InterpProver.interpolate_check(577526)[8]
                begin InterpProver.interpolate_simplify(577527)[9]
                  begin InterpProver.interpolate_quick(577578)[10]
                    begin CsisatInterface.interpolate_csisat_wrap(577587)[11]
                      begin CsisatInterface.interpolate_csisat_post_process(577588)[12]
                        begin CsisatInterface.interpolate_csisat_log(577589)[13]
                          input1: (0 = v_sep_make_list_1030_sep_54_sep_1_sep_57_sep_0 & v_sep_make_list_1030_sep_54_sep_0 <= 0)
                          input2: (not 0 = v_sep_make_list_1030_sep_54_sep_1_sep_57_sep_0 & 1 <= (1 + v_sep_make_list_1030_sep_54_sep_0))
                          begin CsisatInterface.interpolate_csisat_raw(577590)[14]
                            
                          end CsisatInterface.interpolate_csisat_raw(577590)[14] (0.000000 sec.)
                          output: 0 = v_sep_make_list_1030_sep_54_sep_1_sep_57_sep_0
                          
                        end CsisatInterface.interpolate_csisat_log(577589)[13] (0.000000 sec.)
                        after simplification: 0 = v_sep_make_list_1030_sep_54_sep_1_sep_57_sep_0
                        after dnf conversion: ((0 = v_sep_make_list_1030_sep_54_sep_1_sep_57_sep_0))
                        
                      end CsisatInterface.interpolate_csisat_post_process(577588)[12] (0.000000 sec.)
                      
                    end CsisatInterface.interpolate_csisat_wrap(577587)[11] (0.000000 sec.)
                    
                  end InterpProver.interpolate_quick(577578)[10] (0.000000 sec.)
                  
                end InterpProver.interpolate_simplify(577527)[9] (0.000000 sec.)
                
              end InterpProver.interpolate_check(577526)[8] (0.000000 sec.)
              output: (0 = <<make_list_1030@54:1>@57:0>)
            end InterpProver.interpolate_log(577525)[7] (0.000000 sec.)
            
          end InterpProver.interpolate_fresh(577524)[6] (0.000000 sec.)
          
        end InterpProver.interpolate(577523)[5] (0.000000 sec.)
        output:
          P[<<make_list_1030@54:1>@57:0>](<make_list_1030@54:0>:int,<<make_list_1030@54:1>@57:0>:int) =
          (0 = <<make_list_1030@54:1>@57:0>)
      end ApronInterface.convex_hull_interpolate(577429)[4] (0.002000 sec.)
      begin HcSolver.check_validity(577744)[4]
        input:
          P[<fail_2169@292:0>](<fail_2169@292:0>:bool)|- bot
          
          P[<<<<fold_right_1143@71:4>@121:0>@127:1>@285:0>](<f_main_2164@289:1>:int,0:int,<f_main_2164@289:3>:int),
          P[<<make_list_1030@51:1>@67:0>](<f_main_2164@289:0>:int,<f_main_2164@289:1>:int),
          ((<f_main_2164@289:3> < 0) && <fail_2169@292:0>) |- P[<fail_2169@292:0>](
          <fail_2169@292:0>:bool)
          
          P[<<<fold_right_1143@71:0>@141:3>@271:0>](<<<fold_right_1143@71:4>@121:0>@127:0>:int,<<<<fold_right_1143@71:4>@121:0>@127:1>@285:0>:int),
          P[<fold_right_1143@71:1>](<fold_right_1143@71:1>:int), (<fold_right_1143@71:1> >= 1)
          |- P[<<<<fold_right_1143@71:4>@121:0>@127:1>@285:0>](<fold_right_1143@71:1>:int,
                                                               <<<fold_right_1143@71:4>@121:0>@127:0>:int,
                                                               <<<<fold_right_1143@71:4>@121:0>@127:1>@285:0>:int)
          
          P[<<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>](<<fold_right_1143@71:0>@141:2>:int,var322:int),
          P[<<<<fold_right_1143@71:0>@141:0>@199:1>@261:0>](var322:int,<<<fold_right_1143@71:0>@141:3>@271:0>:int),
          P[<<make_list_1030@51:1>@67:0>](<f_main_2163@123:0>:int,<fold_right_1143@71:1>:int),
          P[<<fold_right_1143@71:0>@141:2>](<<fold_right_1143@71:0>@141:2>:int)|- P[<<<fold_right_1143@71:0>@141:3>@271:0>](
          <<fold_right_1143@71:0>@141:2>:int,<<<fold_right_1143@71:0>@141:3>@271:0>:int)
          
          P[<<<<<fold_right_1143@71:2>@79:1>@102:0>@213:1>@247:0>](var325:int,0:int,<<<fold_right_1143@71:0>@141:0>@199:0>:int,<<<<fold_right_1143@71:0>@141:0>@199:1>@261:0>:int),
          P[<fold_right_1143@71:1>](var325:int), (1 <= var325)
          |- P[<<<<fold_right_1143@71:0>@141:0>@199:1>@261:0>](<<<fold_right_1143@71:0>@141:0>@199:0>:int,
                                                               <<<<fold_right_1143@71:0>@141:0>@199:1>@261:0>:int)
          
          P[<<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:1>@243:0>](
          <f_main_2163@123:0>:int,<fold_right_1143@71:1>:int,<<fold_right_1143@71:2>@79:0>:int,<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>:int,<<<<<fold_right_1143@71:2>@79:1>@102:0>@213:1>@247:0>:int),
          P[<<make_list_1030@51:1>@67:0>](<f_main_2163@123:0>:int,<fold_right_1143@71:1>:int),
          P[<fold_right_1143@71:1>](<fold_right_1143@71:1>:int)|- P[<<<<<fold_right_1143@71:2>@79:1>@102:0>@213:1>@247:0>](
          <fold_right_1143@71:1>:int,<<fold_right_1143@71:2>@79:0>:int,
          <<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>:int,<<<<<fold_right_1143@71:2>@79:1>@102:0>@213:1>@247:0>:int)
          
          P[<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>](<make_list_1030@51:0>:int,(
                                                                1 + var326):int,0:int,<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>:int),
          P[<<<make_list_1030@51:1>@67:1>@83:0>](<make_list_1030@51:0>:int,(
                                                 1 + var326):int,0:int),
          P[<<make_list_1030@54:1>@57:0>]((-1 + <make_list_1030@51:0>):int,var326:int),
          P[<<<make_list_1030@51:1>@67:1>@83:0>](<make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int),
          P[<make_list_1030@51:0>](<make_list_1030@51:0>:int),
          P[<<make_list_1030@54:1>@57:0>]((-1 + <make_list_1030@51:0>):int,(
                                          -1 + <<make_list_1030@51:1>@67:0>):int),
          P[<<make_list_1030@51:1>@67:0>](<make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int),
          ((<<<make_list_1030@51:1>@67:1>@83:0> = 0) &&
           ((<make_list_1030@51:0> > 0) &&
            (<<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:1>@243:0> =
             (<make_list_1030@51:0> + <<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>))))
          |- P[<<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:1>@243:0>](
          <make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,
          <<<make_list_1030@51:1>@67:1>@83:0>:int,<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>:int,
          <<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:1>@243:0>:int)
          
          P[<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>](<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int,<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>:int),
          P[<<make_list_1030@51:1>@67:0>](<make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int),
          P[<<fold_right_1143@71:2>@79:0>](<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int),
          P[<make_list_1030@51:0>](<make_list_1030@51:0>:int),
          P[<<<make_list_1030@51:1>@67:1>@83:0>](<make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int)|- P[<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>](
          <make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,
          <<<make_list_1030@51:1>@67:1>@83:0>:int,<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>:int)
          
          P[<<<fold_right_1143@71:0>@141:0>@199:0>](<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>:int),
          P[<fold_right_1143@71:1>](<fold_right_1143@71:1>:int),
          P[<<fold_right_1143@71:2>@79:0>](<fold_right_1143@71:1>:int,<<fold_right_1143@71:2>@79:0>:int),
          ((<<fold_right_1143@71:2>@79:0> = 0) && (<fold_right_1143@71:1> >= 1))
          |- P[<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>](<fold_right_1143@71:1>:int,
                                                              <<fold_right_1143@71:2>@79:0>:int,
                                                              <<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>:int)
          
          P[<<make_list_1030@51:1>@67:0>](<f_main_2163@123:0>:int,<fold_right_1143@71:1>:int),
          P[<<fold_right_1143@71:0>@141:2>](var329:int),
          P[<<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>](var329:int,<<<fold_right_1143@71:0>@141:0>@199:0>:int)|- P[<<<fold_right_1143@71:0>@141:0>@199:0>](
          <<<fold_right_1143@71:0>@141:0>@199:0>:int)
          
          P[<<<<fold_right_1143@108:4>@111:0>@157:1>@179:0>]((-1 + var330):int,<<<fold_right_1143@71:0>@141:1>@147:0>:int,<<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>:int),
          P[<fold_right_1143@71:1>](var330:int), (1 <= var330)
          |- P[<<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>](<<<fold_right_1143@71:0>@141:1>@147:0>:int,
                                                               <<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>:int)
          
          P[<fold_right_1143@108:1>](<fold_right_1143@108:1>:int),
          P[<<<fold_right_1143@108:3>@159:1>@177:0>](<fold_right_1143@108:1>:int,<<<fold_right_1143@108:4>@111:0>@157:0>:int,<<<<fold_right_1143@108:4>@111:0>@157:1>@179:0>:int),
          (<fold_right_1143@108:1> = 0)
          |- P[<<<<fold_right_1143@108:4>@111:0>@157:1>@179:0>](<fold_right_1143@108:1>:int,
                                                                <<<fold_right_1143@108:4>@111:0>@157:0>:int,
                                                                <<<<fold_right_1143@108:4>@111:0>@157:1>@179:0>:int)
          
          P[<<<fold_right_1143@71:3>@165:1>@171:0>]((1 + <fold_right_1143@108:1>):int,<<fold_right_1143@108:3>@159:0>:int,<<<fold_right_1143@108:3>@159:1>@177:0>:int),
          P[<fold_right_1143@71:1>]((1 + <fold_right_1143@108:1>):int),
          P[<fold_right_1143@108:1>](<fold_right_1143@108:1>:int), (<fold_right_1143@108:1> >= 0)
          |- P[<<<fold_right_1143@108:3>@159:1>@177:0>](<fold_right_1143@108:1>:int,
                                                        <<fold_right_1143@108:3>@159:0>:int,
                                                        <<<fold_right_1143@108:3>@159:1>@177:0>:int)
          
          P[<<make_list_1030@51:1>@67:0>](<f_main_2163@123:0>:int,<fold_right_1143@71:1>:int),
          P[<<fold_right_1143@71:3>@165:0>](<fold_right_1143@71:1>:int,<<fold_right_1143@71:3>@165:0>:int),
          P[<fold_right_1143@71:1>](<fold_right_1143@71:1>:int),
          (<<<fold_right_1143@71:3>@165:1>@171:0> = <<fold_right_1143@71:3>@165:0>)
          |- P[<<<fold_right_1143@71:3>@165:1>@171:0>](<fold_right_1143@71:1>:int,
                                                       <<fold_right_1143@71:3>@165:0>:int,
                                                       <<<fold_right_1143@71:3>@165:1>@171:0>:int)
          
          P[<fold_right_1143@71:1>](<fold_right_1143@71:1>:int),
          P[<<fold_right_1143@108:3>@159:0>]((-1 + <fold_right_1143@71:1>):int,<<fold_right_1143@71:3>@165:0>:int),
          (<fold_right_1143@71:1> >= 1)
          |- P[<<fold_right_1143@71:3>@165:0>](<fold_right_1143@71:1>:int,
                                               <<fold_right_1143@71:3>@165:0>:int)
          
          P[<fold_right_1143@108:1>](<fold_right_1143@108:1>:int),
          P[<<<fold_right_1143@108:4>@111:0>@157:0>](<fold_right_1143@108:1>:int,<<fold_right_1143@108:3>@159:0>:int),
          (<fold_right_1143@108:1> = 0)
          |- P[<<fold_right_1143@108:3>@159:0>](<fold_right_1143@108:1>:int,
                                                <<fold_right_1143@108:3>@159:0>:int)
          
          P[<<<fold_right_1143@71:0>@141:1>@147:0>](<<<fold_right_1143@108:4>@111:0>@157:0>:int),
          P[<fold_right_1143@71:1>]((1 + <fold_right_1143@108:1>):int),
          P[<fold_right_1143@108:1>](<fold_right_1143@108:1>:int), (<fold_right_1143@108:1> >= 0)
          |- P[<<<fold_right_1143@108:4>@111:0>@157:0>](<fold_right_1143@108:1>:int,
                                                        <<<fold_right_1143@108:4>@111:0>@157:0>:int)
          
          P[<<make_list_1030@51:1>@67:0>](<f_main_2163@123:0>:int,<fold_right_1143@71:1>:int),
          P[<<fold_right_1143@71:0>@141:2>](<<<fold_right_1143@71:0>@141:1>@147:0>:int)|- P[<<<fold_right_1143@71:0>@141:1>@147:0>](
          <<<fold_right_1143@71:0>@141:1>@147:0>:int)
          
          P[<<<fold_right_1143@71:4>@121:0>@127:0>](var333:int,<<fold_right_1143@71:0>@141:2>:int),
          P[<fold_right_1143@71:1>](var333:int), (1 <= var333)
          |- P[<<fold_right_1143@71:0>@141:2>](<<fold_right_1143@71:0>@141:2>:int)
          
          P[<<make_list_1030@51:1>@67:0>](<f_main_2163@123:0>:int,<fold_right_1143@71:1>:int),
          P[<fold_right_1143@71:1>](<fold_right_1143@71:1>:int), (<<<fold_right_1143@71:4>@121:0>@127:0> = 0)
          |- P[<<<fold_right_1143@71:4>@121:0>@127:0>](<fold_right_1143@71:1>:int,
                                                       <<<fold_right_1143@71:4>@121:0>@127:0>:int)
          
          P[<fold_right_1143@71:1>]((1 + <fold_right_1143@108:1>):int), (
          <fold_right_1143@108:1> >= 0) |- P[<fold_right_1143@108:1>](
          <fold_right_1143@108:1>:int)
          
          P[<<make_list_1030@51:1>@67:0>](<make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int),
          P[<<fold_right_1143@71:2>@79:0>](<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int),
          P[<make_list_1030@51:0>](<make_list_1030@51:0>:int)|- P[<<<make_list_1030@51:1>@67:1>@83:0>](
          <make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,
          <<<make_list_1030@51:1>@67:1>@83:0>:int)
          
          P[<fold_right_1143@71:1>](<fold_right_1143@71:1>:int),
          ((<<fold_right_1143@71:2>@79:0> = 0) && (<fold_right_1143@71:1> >= 1))
          |- P[<<fold_right_1143@71:2>@79:0>](<fold_right_1143@71:1>:int,
                                              <<fold_right_1143@71:2>@79:0>:int)
          
          P[<<make_list_1030@51:1>@67:0>](<f_main_2161@69:0>:int,<fold_right_1143@71:1>:int)|- P[<fold_right_1143@71:1>](
          <fold_right_1143@71:1>:int)
          
          P[<make_list_1030@51:0>](<make_list_1030@51:0>:int),
          P[<<make_list_1030@54:1>@57:0>]((-1 + <make_list_1030@51:0>):int,(
                                          -1 + <<make_list_1030@51:1>@67:0>):int), (
          <make_list_1030@51:0> > 0)
          |- P[<<make_list_1030@51:1>@67:0>](<make_list_1030@51:0>:int,
                                             <<make_list_1030@51:1>@67:0>:int)
          
          P[<make_list_1030@54:0>](<make_list_1030@54:0>:int),
          ((<<make_list_1030@54:1>@57:0> = 0) && (<make_list_1030@54:0> <= 0))
          |- P[<<make_list_1030@54:1>@57:0>](<make_list_1030@54:0>:int,
                                             <<make_list_1030@54:1>@57:0>:int)
          
          P[<make_list_1030@51:0>]((1 + <make_list_1030@54:0>):int), (
          (1 + <make_list_1030@54:0>) > 0) |- P[<make_list_1030@54:0>](
          <make_list_1030@54:0>:int)
          
          |- P[<make_list_1030@51:0>](<make_list_1030@51:0>:int)
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        
      end HcSolver.check_validity(577744)[4] (0.019997 sec.)
      solution:
        P[<fail_2169@292:0>](<fail_2169@292:0>:bool) = false
        P[<<<<fold_right_1143@71:4>@121:0>@127:1>@285:0>](<fold_right_1143@108:1>:int,<<<fold_right_1143@108:4>@111:0>@157:0>:int,<<<<fold_right_1143@108:4>@111:0>@157:1>@179:0>:int) =
        (<fold_right_1143@108:1> <= <<<<fold_right_1143@108:4>@111:0>@157:1>@179:0>)
        P[<<<fold_right_1143@71:0>@141:3>@271:0>](<<fold_right_1143@71:0>@141:2>:int,<<<fold_right_1143@71:0>@141:3>@271:0>:int) =
        (1 <= <<<fold_right_1143@71:0>@141:3>@271:0>)
        P[<<<<fold_right_1143@71:0>@141:0>@199:1>@261:0>](<<<fold_right_1143@71:0>@141:0>@199:0>:int,<<<<fold_right_1143@71:0>@141:0>@199:1>@261:0>:int) =
        (1 <= <<<<fold_right_1143@71:0>@141:0>@199:1>@261:0>)
        P[<<<<<fold_right_1143@71:2>@79:1>@102:0>@213:1>@247:0>](<fold_right_1143@71:1>:int,<<fold_right_1143@71:2>@79:0>:int,<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>:int,<<<<<fold_right_1143@71:2>@79:1>@102:0>@213:1>@247:0>:int) =
        (1 <= <<<<<fold_right_1143@71:2>@79:1>@102:0>@213:1>@247:0>)
        P[<<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:1>@243:0>](
        <make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int,<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>:int,<<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:1>@243:0>:int) =
        (1 <= <<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:1>@243:0>)
        P[<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>](<make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int,<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>:int) =
        (0 <= <<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>)
        P[<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>](<fold_right_1143@71:1>:int,<<fold_right_1143@71:2>@79:0>:int,<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>:int) =
        (0 <= <<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>)
        P[<<<fold_right_1143@71:0>@141:0>@199:0>](<<<fold_right_1143@71:0>@141:0>@199:0>:int) =
        (0 <= <<<fold_right_1143@71:0>@141:0>@199:0>)
        P[<<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>](<<<fold_right_1143@71:0>@141:1>@147:0>:int,<<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>:int) =
        (0 <= <<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>)
        P[<<<<fold_right_1143@108:4>@111:0>@157:1>@179:0>](<fold_right_1143@108:1>:int,<<<fold_right_1143@108:4>@111:0>@157:0>:int,<<<<fold_right_1143@108:4>@111:0>@157:1>@179:0>:int) =
        (<fold_right_1143@108:1> <= <<<<fold_right_1143@108:4>@111:0>@157:1>@179:0>)
        P[<<<fold_right_1143@108:3>@159:1>@177:0>](<fold_right_1143@71:1>:int,<<fold_right_1143@71:3>@165:0>:int,<<<fold_right_1143@71:3>@165:1>@171:0>:int) =
        (0 <= <<<fold_right_1143@71:3>@165:1>@171:0>)
        P[<<<fold_right_1143@71:3>@165:1>@171:0>](<fold_right_1143@71:1>:int,<<fold_right_1143@71:3>@165:0>:int,<<<fold_right_1143@71:3>@165:1>@171:0>:int) =
        (0 <= <<<fold_right_1143@71:3>@165:1>@171:0>)
        P[<<fold_right_1143@71:3>@165:0>](<fold_right_1143@108:1>:int,<<fold_right_1143@108:3>@159:0>:int) =
        (0 <= <<fold_right_1143@108:3>@159:0>)
        P[<<fold_right_1143@108:3>@159:0>](<fold_right_1143@108:1>:int,<<fold_right_1143@108:3>@159:0>:int) =
        (0 <= <<fold_right_1143@108:3>@159:0>)
        P[<<<fold_right_1143@108:4>@111:0>@157:0>](<fold_right_1143@71:1>:int,<<<fold_right_1143@71:4>@121:0>@127:0>:int) =
        (0 <= <<<fold_right_1143@71:4>@121:0>@127:0>)
        P[<<<fold_right_1143@71:0>@141:1>@147:0>](<<<fold_right_1143@71:0>@141:1>@147:0>:int) =
        (0 <= <<<fold_right_1143@71:0>@141:1>@147:0>)
        P[<<fold_right_1143@71:0>@141:2>](<<fold_right_1143@71:0>@141:2>:int) = (0 <= <<fold_right_1143@71:0>@141:2>)
        P[<<<fold_right_1143@71:4>@121:0>@127:0>](<fold_right_1143@71:1>:int,<<<fold_right_1143@71:4>@121:0>@127:0>:int) =
        (0 <= <<<fold_right_1143@71:4>@121:0>@127:0>)
        P[<fold_right_1143@108:1>](<fold_right_1143@108:1>:int) = true
        P[<<<make_list_1030@51:1>@67:1>@83:0>](<make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int) =
        true
        P[<<fold_right_1143@71:2>@79:0>](<fold_right_1143@71:1>:int,<<fold_right_1143@71:2>@79:0>:int) = true
        P[<fold_right_1143@71:1>](<fold_right_1143@71:1>:int) = (<fold_right_1143@71:1> <= 1)
        P[<<make_list_1030@51:1>@67:0>](<make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int) =
        (<<make_list_1030@51:1>@67:0> = 1)
        P[<<make_list_1030@54:1>@57:0>](<make_list_1030@54:0>:int,<<make_list_1030@54:1>@57:0>:int) =
        (0 = <<make_list_1030@54:1>@57:0>)
        P[<make_list_1030@54:0>](<make_list_1030@51:0>:int) = true
        P[<make_list_1030@51:0>](<make_list_1030@51:0>:int) = true
    end GenHcSolver.solve(250447)[3] (1.676745 sec.)
    begin YhornInterface.solve(581154)[3]
      begin HcSolver.solve_ub(581155)[4]
        encoded:
          P[<fail_2169@292:0>](<fail_2169@292:0>:int)|- bot
          
          P[<<<<fold_right_1143@71:4>@121:0>@127:1>@285:0>](<f_main_2164@289:1>:int,0:int,<f_main_2164@289:3>:int),
          P[<<make_list_1030@51:1>@67:0>](<f_main_2164@289:0>:int,<f_main_2164@289:1>:int),
          ((<f_main_2164@289:3> < 0) && (<fail_2169@292:0> = 1)) |- P[<fail_2169@292:0>](
          <fail_2169@292:0>:int)
          
          P[<<<fold_right_1143@71:0>@141:3>@271:0>](<<<fold_right_1143@71:4>@121:0>@127:0>:int,<<<<fold_right_1143@71:4>@121:0>@127:1>@285:0>:int),
          P[<fold_right_1143@71:1>](<fold_right_1143@71:1>:int), (<fold_right_1143@71:1> >= 1)
          |- P[<<<<fold_right_1143@71:4>@121:0>@127:1>@285:0>](<fold_right_1143@71:1>:int,
                                                               <<<fold_right_1143@71:4>@121:0>@127:0>:int,
                                                               <<<<fold_right_1143@71:4>@121:0>@127:1>@285:0>:int)
          
          P[<<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>](<<fold_right_1143@71:0>@141:2>:int,var322:int),
          P[<<<<fold_right_1143@71:0>@141:0>@199:1>@261:0>](var322:int,<<<fold_right_1143@71:0>@141:3>@271:0>:int),
          P[<<make_list_1030@51:1>@67:0>](<f_main_2163@123:0>:int,<fold_right_1143@71:1>:int),
          P[<<fold_right_1143@71:0>@141:2>](<<fold_right_1143@71:0>@141:2>:int)|- P[<<<fold_right_1143@71:0>@141:3>@271:0>](
          <<fold_right_1143@71:0>@141:2>:int,<<<fold_right_1143@71:0>@141:3>@271:0>:int)
          
          P[<<<<<fold_right_1143@71:2>@79:1>@102:0>@213:1>@247:0>](var325:int,0:int,<<<fold_right_1143@71:0>@141:0>@199:0>:int,<<<<fold_right_1143@71:0>@141:0>@199:1>@261:0>:int),
          P[<fold_right_1143@71:1>](var325:int), (1 <= var325)
          |- P[<<<<fold_right_1143@71:0>@141:0>@199:1>@261:0>](<<<fold_right_1143@71:0>@141:0>@199:0>:int,
                                                               <<<<fold_right_1143@71:0>@141:0>@199:1>@261:0>:int)
          
          P[<<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:1>@243:0>](
          <f_main_2163@123:0>:int,<fold_right_1143@71:1>:int,<<fold_right_1143@71:2>@79:0>:int,<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>:int,<<<<<fold_right_1143@71:2>@79:1>@102:0>@213:1>@247:0>:int),
          P[<<make_list_1030@51:1>@67:0>](<f_main_2163@123:0>:int,<fold_right_1143@71:1>:int),
          P[<fold_right_1143@71:1>](<fold_right_1143@71:1>:int)|- P[<<<<<fold_right_1143@71:2>@79:1>@102:0>@213:1>@247:0>](
          <fold_right_1143@71:1>:int,<<fold_right_1143@71:2>@79:0>:int,
          <<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>:int,<<<<<fold_right_1143@71:2>@79:1>@102:0>@213:1>@247:0>:int)
          
          P[<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>](<make_list_1030@51:0>:int,(
                                                                1 + var326):int,0:int,<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>:int),
          P[<<<make_list_1030@51:1>@67:1>@83:0>](<make_list_1030@51:0>:int,(
                                                 1 + var326):int,0:int),
          P[<<make_list_1030@54:1>@57:0>]((-1 + <make_list_1030@51:0>):int,var326:int),
          P[<<<make_list_1030@51:1>@67:1>@83:0>](<make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int),
          P[<make_list_1030@51:0>](<make_list_1030@51:0>:int),
          P[<<make_list_1030@54:1>@57:0>]((-1 + <make_list_1030@51:0>):int,(
                                          -1 + <<make_list_1030@51:1>@67:0>):int),
          P[<<make_list_1030@51:1>@67:0>](<make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int),
          ((<<<make_list_1030@51:1>@67:1>@83:0> = 0) &&
           ((<make_list_1030@51:0> > 0) &&
            (<<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:1>@243:0> =
             (<make_list_1030@51:0> + <<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>))))
          |- P[<<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:1>@243:0>](
          <make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,
          <<<make_list_1030@51:1>@67:1>@83:0>:int,<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>:int,
          <<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:1>@243:0>:int)
          
          P[<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>](<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int,<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>:int),
          P[<<make_list_1030@51:1>@67:0>](<make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int),
          P[<<fold_right_1143@71:2>@79:0>](<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int),
          P[<make_list_1030@51:0>](<make_list_1030@51:0>:int),
          P[<<<make_list_1030@51:1>@67:1>@83:0>](<make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int)|- P[<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>](
          <make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,
          <<<make_list_1030@51:1>@67:1>@83:0>:int,<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>:int)
          
          P[<<<fold_right_1143@71:0>@141:0>@199:0>](<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>:int),
          P[<fold_right_1143@71:1>](<fold_right_1143@71:1>:int),
          P[<<fold_right_1143@71:2>@79:0>](<fold_right_1143@71:1>:int,<<fold_right_1143@71:2>@79:0>:int),
          ((<<fold_right_1143@71:2>@79:0> = 0) && (<fold_right_1143@71:1> >= 1))
          |- P[<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>](<fold_right_1143@71:1>:int,
                                                              <<fold_right_1143@71:2>@79:0>:int,
                                                              <<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>:int)
          
          P[<<make_list_1030@51:1>@67:0>](<f_main_2163@123:0>:int,<fold_right_1143@71:1>:int),
          P[<<fold_right_1143@71:0>@141:2>](var329:int),
          P[<<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>](var329:int,<<<fold_right_1143@71:0>@141:0>@199:0>:int)|- P[<<<fold_right_1143@71:0>@141:0>@199:0>](
          <<<fold_right_1143@71:0>@141:0>@199:0>:int)
          
          P[<<<<fold_right_1143@108:4>@111:0>@157:1>@179:0>]((-1 + var330):int,<<<fold_right_1143@71:0>@141:1>@147:0>:int,<<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>:int),
          P[<fold_right_1143@71:1>](var330:int), (1 <= var330)
          |- P[<<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>](<<<fold_right_1143@71:0>@141:1>@147:0>:int,
                                                               <<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>:int)
          
          P[<fold_right_1143@108:1>](<fold_right_1143@108:1>:int),
          P[<<<fold_right_1143@108:3>@159:1>@177:0>](<fold_right_1143@108:1>:int,<<<fold_right_1143@108:4>@111:0>@157:0>:int,<<<<fold_right_1143@108:4>@111:0>@157:1>@179:0>:int),
          (<fold_right_1143@108:1> = 0)
          |- P[<<<<fold_right_1143@108:4>@111:0>@157:1>@179:0>](<fold_right_1143@108:1>:int,
                                                                <<<fold_right_1143@108:4>@111:0>@157:0>:int,
                                                                <<<<fold_right_1143@108:4>@111:0>@157:1>@179:0>:int)
          
          P[<<<fold_right_1143@71:3>@165:1>@171:0>]((1 + <fold_right_1143@108:1>):int,<<fold_right_1143@108:3>@159:0>:int,<<<fold_right_1143@108:3>@159:1>@177:0>:int),
          P[<fold_right_1143@71:1>]((1 + <fold_right_1143@108:1>):int),
          P[<fold_right_1143@108:1>](<fold_right_1143@108:1>:int), (<fold_right_1143@108:1> >= 0)
          |- P[<<<fold_right_1143@108:3>@159:1>@177:0>](<fold_right_1143@108:1>:int,
                                                        <<fold_right_1143@108:3>@159:0>:int,
                                                        <<<fold_right_1143@108:3>@159:1>@177:0>:int)
          
          P[<<make_list_1030@51:1>@67:0>](<f_main_2163@123:0>:int,<fold_right_1143@71:1>:int),
          P[<<fold_right_1143@71:3>@165:0>](<fold_right_1143@71:1>:int,<<fold_right_1143@71:3>@165:0>:int),
          P[<fold_right_1143@71:1>](<fold_right_1143@71:1>:int),
          (<<<fold_right_1143@71:3>@165:1>@171:0> = <<fold_right_1143@71:3>@165:0>)
          |- P[<<<fold_right_1143@71:3>@165:1>@171:0>](<fold_right_1143@71:1>:int,
                                                       <<fold_right_1143@71:3>@165:0>:int,
                                                       <<<fold_right_1143@71:3>@165:1>@171:0>:int)
          
          P[<fold_right_1143@71:1>](<fold_right_1143@71:1>:int),
          P[<<fold_right_1143@108:3>@159:0>]((-1 + <fold_right_1143@71:1>):int,<<fold_right_1143@71:3>@165:0>:int),
          (<fold_right_1143@71:1> >= 1)
          |- P[<<fold_right_1143@71:3>@165:0>](<fold_right_1143@71:1>:int,
                                               <<fold_right_1143@71:3>@165:0>:int)
          
          P[<fold_right_1143@108:1>](<fold_right_1143@108:1>:int),
          P[<<<fold_right_1143@108:4>@111:0>@157:0>](<fold_right_1143@108:1>:int,<<fold_right_1143@108:3>@159:0>:int),
          (<fold_right_1143@108:1> = 0)
          |- P[<<fold_right_1143@108:3>@159:0>](<fold_right_1143@108:1>:int,
                                                <<fold_right_1143@108:3>@159:0>:int)
          
          P[<<<fold_right_1143@71:0>@141:1>@147:0>](<<<fold_right_1143@108:4>@111:0>@157:0>:int),
          P[<fold_right_1143@71:1>]((1 + <fold_right_1143@108:1>):int),
          P[<fold_right_1143@108:1>](<fold_right_1143@108:1>:int), (<fold_right_1143@108:1> >= 0)
          |- P[<<<fold_right_1143@108:4>@111:0>@157:0>](<fold_right_1143@108:1>:int,
                                                        <<<fold_right_1143@108:4>@111:0>@157:0>:int)
          
          P[<<make_list_1030@51:1>@67:0>](<f_main_2163@123:0>:int,<fold_right_1143@71:1>:int),
          P[<<fold_right_1143@71:0>@141:2>](<<<fold_right_1143@71:0>@141:1>@147:0>:int)|- P[<<<fold_right_1143@71:0>@141:1>@147:0>](
          <<<fold_right_1143@71:0>@141:1>@147:0>:int)
          
          P[<<<fold_right_1143@71:4>@121:0>@127:0>](var333:int,<<fold_right_1143@71:0>@141:2>:int),
          P[<fold_right_1143@71:1>](var333:int), (1 <= var333)
          |- P[<<fold_right_1143@71:0>@141:2>](<<fold_right_1143@71:0>@141:2>:int)
          
          P[<<make_list_1030@51:1>@67:0>](<f_main_2163@123:0>:int,<fold_right_1143@71:1>:int),
          P[<fold_right_1143@71:1>](<fold_right_1143@71:1>:int), (<<<fold_right_1143@71:4>@121:0>@127:0> = 0)
          |- P[<<<fold_right_1143@71:4>@121:0>@127:0>](<fold_right_1143@71:1>:int,
                                                       <<<fold_right_1143@71:4>@121:0>@127:0>:int)
          
          P[<fold_right_1143@71:1>]((1 + <fold_right_1143@108:1>):int), (
          <fold_right_1143@108:1> >= 0) |- P[<fold_right_1143@108:1>](
          <fold_right_1143@108:1>:int)
          
          P[<<make_list_1030@51:1>@67:0>](<make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int),
          P[<<fold_right_1143@71:2>@79:0>](<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int),
          P[<make_list_1030@51:0>](<make_list_1030@51:0>:int)|- P[<<<make_list_1030@51:1>@67:1>@83:0>](
          <make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,
          <<<make_list_1030@51:1>@67:1>@83:0>:int)
          
          P[<fold_right_1143@71:1>](<fold_right_1143@71:1>:int),
          ((<<fold_right_1143@71:2>@79:0> = 0) && (<fold_right_1143@71:1> >= 1))
          |- P[<<fold_right_1143@71:2>@79:0>](<fold_right_1143@71:1>:int,
                                              <<fold_right_1143@71:2>@79:0>:int)
          
          P[<<make_list_1030@51:1>@67:0>](<f_main_2161@69:0>:int,<fold_right_1143@71:1>:int)|- P[<fold_right_1143@71:1>](
          <fold_right_1143@71:1>:int)
          
          P[<make_list_1030@51:0>](<make_list_1030@51:0>:int),
          P[<<make_list_1030@54:1>@57:0>]((-1 + <make_list_1030@51:0>):int,(
                                          -1 + <<make_list_1030@51:1>@67:0>):int), (
          <make_list_1030@51:0> > 0)
          |- P[<<make_list_1030@51:1>@67:0>](<make_list_1030@51:0>:int,
                                             <<make_list_1030@51:1>@67:0>:int)
          
          P[<make_list_1030@54:0>](<make_list_1030@54:0>:int),
          ((<<make_list_1030@54:1>@57:0> = 0) && (<make_list_1030@54:0> <= 0))
          |- P[<<make_list_1030@54:1>@57:0>](<make_list_1030@54:0>:int,
                                             <<make_list_1030@54:1>@57:0>:int)
          
          P[<make_list_1030@51:0>]((1 + <make_list_1030@54:0>):int), (
          (1 + <make_list_1030@54:0>) > 0) |- P[<make_list_1030@54:0>](
          <make_list_1030@54:0>:int)
          
          |- P[<make_list_1030@51:0>](<make_list_1030@51:0>:int)
        input to Yhorn:
          P[<fail_2169@292:0>](<fail_2169@292:0>:int)|- bot
          
          P[<<<<fold_right_1143@71:4>@121:0>@127:1>@285:0>](<f_main_2164@289:1>:int,var941:int,<f_main_2164@289:3>:int),
          P[<<make_list_1030@51:1>@67:0>](<f_main_2164@289:0>:int,<f_main_2164@289:1>:int),
          ((<f_main_2164@289:3> < 0) && ((var941 = 0) && (<fail_2169@292:0> = 1)))
          |- P[<fail_2169@292:0>](<fail_2169@292:0>:int)
          
          P[<<<fold_right_1143@71:0>@141:3>@271:0>](<<<fold_right_1143@71:4>@121:0>@127:0>:int,<<<<fold_right_1143@71:4>@121:0>@127:1>@285:0>:int),
          P[<fold_right_1143@71:1>](<fold_right_1143@71:1>:int), (<fold_right_1143@71:1> >= 1)
          |- P[<<<<fold_right_1143@71:4>@121:0>@127:1>@285:0>](<fold_right_1143@71:1>:int,
                                                               <<<fold_right_1143@71:4>@121:0>@127:0>:int,
                                                               <<<<fold_right_1143@71:4>@121:0>@127:1>@285:0>:int)
          
          P[<<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>](<<fold_right_1143@71:0>@141:2>:int,var322:int),
          P[<<<<fold_right_1143@71:0>@141:0>@199:1>@261:0>](var322:int,<<<fold_right_1143@71:0>@141:3>@271:0>:int),
          P[<<make_list_1030@51:1>@67:0>](<f_main_2163@123:0>:int,<fold_right_1143@71:1>:int),
          P[<<fold_right_1143@71:0>@141:2>](<<fold_right_1143@71:0>@141:2>:int)|- P[<<<fold_right_1143@71:0>@141:3>@271:0>](
          <<fold_right_1143@71:0>@141:2>:int,<<<fold_right_1143@71:0>@141:3>@271:0>:int)
          
          P[<<<<<fold_right_1143@71:2>@79:1>@102:0>@213:1>@247:0>](var325:int,var942:int,<<<fold_right_1143@71:0>@141:0>@199:0>:int,<<<<fold_right_1143@71:0>@141:0>@199:1>@261:0>:int),
          P[<fold_right_1143@71:1>](var325:int), ((1 <= var325) && (var942 = 0))
          |- P[<<<<fold_right_1143@71:0>@141:0>@199:1>@261:0>](<<<fold_right_1143@71:0>@141:0>@199:0>:int,
                                                               <<<<fold_right_1143@71:0>@141:0>@199:1>@261:0>:int)
          
          P[<<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:1>@243:0>](
          <f_main_2163@123:0>:int,<fold_right_1143@71:1>:int,<<fold_right_1143@71:2>@79:0>:int,<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>:int,<<<<<fold_right_1143@71:2>@79:1>@102:0>@213:1>@247:0>:int),
          P[<<make_list_1030@51:1>@67:0>](<f_main_2163@123:0>:int,<fold_right_1143@71:1>:int),
          P[<fold_right_1143@71:1>](<fold_right_1143@71:1>:int)|- P[<<<<<fold_right_1143@71:2>@79:1>@102:0>@213:1>@247:0>](
          <fold_right_1143@71:1>:int,<<fold_right_1143@71:2>@79:0>:int,
          <<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>:int,<<<<<fold_right_1143@71:2>@79:1>@102:0>@213:1>@247:0>:int)
          
          P[<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>](<make_list_1030@51:0>:int,var943:int,var944:int,<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>:int),
          P[<<<make_list_1030@51:1>@67:1>@83:0>](<make_list_1030@51:0>:int,var945:int,var946:int),
          P[<<make_list_1030@54:1>@57:0>](var947:int,var326:int),
          P[<<<make_list_1030@51:1>@67:1>@83:0>](<make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int),
          P[<make_list_1030@51:0>](<make_list_1030@51:0>:int),
          P[<<make_list_1030@54:1>@57:0>](var948:int,var949:int),
          P[<<make_list_1030@51:1>@67:0>](<make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int),
          (((1 + var949) = <<make_list_1030@51:1>@67:0>) &&
           (((1 + var948) = <make_list_1030@51:0>) &&
            (((1 + var947) = <make_list_1030@51:0>) &&
             ((var945 = (1 + var326)) &&
              ((var943 = (1 + var326)) &&
               ((<<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:1>@243:0> =
                 (<make_list_1030@51:0> + <<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>)) &&
                ((<make_list_1030@51:0> > 0) &&
                 ((var946 = 0) && ((var944 = 0) && (<<<make_list_1030@51:1>@67:1>@83:0> = 0))))))))))
          |- P[<<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:1>@243:0>](
          <make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,
          <<<make_list_1030@51:1>@67:1>@83:0>:int,<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>:int,
          <<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:1>@243:0>:int)
          
          P[<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>](<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int,<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>:int),
          P[<<make_list_1030@51:1>@67:0>](<make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int),
          P[<<fold_right_1143@71:2>@79:0>](<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int),
          P[<make_list_1030@51:0>](<make_list_1030@51:0>:int),
          P[<<<make_list_1030@51:1>@67:1>@83:0>](<make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int)|- P[<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>](
          <make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,
          <<<make_list_1030@51:1>@67:1>@83:0>:int,<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>:int)
          
          P[<<<fold_right_1143@71:0>@141:0>@199:0>](<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>:int),
          P[<fold_right_1143@71:1>](<fold_right_1143@71:1>:int),
          P[<<fold_right_1143@71:2>@79:0>](<fold_right_1143@71:1>:int,<<fold_right_1143@71:2>@79:0>:int),
          ((<fold_right_1143@71:1> >= 1) && (<<fold_right_1143@71:2>@79:0> = 0))
          |- P[<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>](<fold_right_1143@71:1>:int,
                                                              <<fold_right_1143@71:2>@79:0>:int,
                                                              <<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>:int)
          
          P[<<make_list_1030@51:1>@67:0>](<f_main_2163@123:0>:int,<fold_right_1143@71:1>:int),
          P[<<fold_right_1143@71:0>@141:2>](var329:int),
          P[<<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>](var329:int,<<<fold_right_1143@71:0>@141:0>@199:0>:int)|- P[<<<fold_right_1143@71:0>@141:0>@199:0>](
          <<<fold_right_1143@71:0>@141:0>@199:0>:int)
          
          P[<<<<fold_right_1143@108:4>@111:0>@157:1>@179:0>](var950:int,<<<fold_right_1143@71:0>@141:1>@147:0>:int,<<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>:int),
          P[<fold_right_1143@71:1>](var330:int), (((1 + var950) = var330) && (1 <= var330))
          |- P[<<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>](<<<fold_right_1143@71:0>@141:1>@147:0>:int,
                                                               <<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>:int)
          
          P[<fold_right_1143@108:1>](<fold_right_1143@108:1>:int),
          P[<<<fold_right_1143@108:3>@159:1>@177:0>](<fold_right_1143@108:1>:int,<<<fold_right_1143@108:4>@111:0>@157:0>:int,<<<<fold_right_1143@108:4>@111:0>@157:1>@179:0>:int),
          (<fold_right_1143@108:1> = 0)
          |- P[<<<<fold_right_1143@108:4>@111:0>@157:1>@179:0>](<fold_right_1143@108:1>:int,
                                                                <<<fold_right_1143@108:4>@111:0>@157:0>:int,
                                                                <<<<fold_right_1143@108:4>@111:0>@157:1>@179:0>:int)
          
          P[<<<fold_right_1143@71:3>@165:1>@171:0>](var951:int,<<fold_right_1143@108:3>@159:0>:int,<<<fold_right_1143@108:3>@159:1>@177:0>:int),
          P[<fold_right_1143@71:1>](var952:int),
          P[<fold_right_1143@108:1>](<fold_right_1143@108:1>:int),
          ((var952 = (1 + <fold_right_1143@108:1>)) &&
           ((var951 = (1 + <fold_right_1143@108:1>)) && (<fold_right_1143@108:1> >= 0)))
          |- P[<<<fold_right_1143@108:3>@159:1>@177:0>](<fold_right_1143@108:1>:int,
                                                        <<fold_right_1143@108:3>@159:0>:int,
                                                        <<<fold_right_1143@108:3>@159:1>@177:0>:int)
          
          P[<<make_list_1030@51:1>@67:0>](<f_main_2163@123:0>:int,<fold_right_1143@71:1>:int),
          P[<<fold_right_1143@71:3>@165:0>](<fold_right_1143@71:1>:int,<<fold_right_1143@71:3>@165:0>:int),
          P[<fold_right_1143@71:1>](<fold_right_1143@71:1>:int),
          (<<<fold_right_1143@71:3>@165:1>@171:0> = <<fold_right_1143@71:3>@165:0>)
          |- P[<<<fold_right_1143@71:3>@165:1>@171:0>](<fold_right_1143@71:1>:int,
                                                       <<fold_right_1143@71:3>@165:0>:int,
                                                       <<<fold_right_1143@71:3>@165:1>@171:0>:int)
          
          P[<fold_right_1143@71:1>](<fold_right_1143@71:1>:int),
          P[<<fold_right_1143@108:3>@159:0>](var953:int,<<fold_right_1143@71:3>@165:0>:int),
          (((1 + var953) = <fold_right_1143@71:1>) && (<fold_right_1143@71:1> >= 1))
          |- P[<<fold_right_1143@71:3>@165:0>](<fold_right_1143@71:1>:int,
                                               <<fold_right_1143@71:3>@165:0>:int)
          
          P[<fold_right_1143@108:1>](<fold_right_1143@108:1>:int),
          P[<<<fold_right_1143@108:4>@111:0>@157:0>](<fold_right_1143@108:1>:int,<<fold_right_1143@108:3>@159:0>:int),
          (<fold_right_1143@108:1> = 0)
          |- P[<<fold_right_1143@108:3>@159:0>](<fold_right_1143@108:1>:int,
                                                <<fold_right_1143@108:3>@159:0>:int)
          
          P[<<<fold_right_1143@71:0>@141:1>@147:0>](<<<fold_right_1143@108:4>@111:0>@157:0>:int),
          P[<fold_right_1143@71:1>](var954:int),
          P[<fold_right_1143@108:1>](<fold_right_1143@108:1>:int),
          ((var954 = (1 + <fold_right_1143@108:1>)) && (<fold_right_1143@108:1> >= 0))
          |- P[<<<fold_right_1143@108:4>@111:0>@157:0>](<fold_right_1143@108:1>:int,
                                                        <<<fold_right_1143@108:4>@111:0>@157:0>:int)
          
          P[<<make_list_1030@51:1>@67:0>](<f_main_2163@123:0>:int,<fold_right_1143@71:1>:int),
          P[<<fold_right_1143@71:0>@141:2>](<<<fold_right_1143@71:0>@141:1>@147:0>:int)|- P[<<<fold_right_1143@71:0>@141:1>@147:0>](
          <<<fold_right_1143@71:0>@141:1>@147:0>:int)
          
          P[<<<fold_right_1143@71:4>@121:0>@127:0>](var333:int,<<fold_right_1143@71:0>@141:2>:int),
          P[<fold_right_1143@71:1>](var333:int), (1 <= var333)
          |- P[<<fold_right_1143@71:0>@141:2>](<<fold_right_1143@71:0>@141:2>:int)
          
          P[<<make_list_1030@51:1>@67:0>](<f_main_2163@123:0>:int,<fold_right_1143@71:1>:int),
          P[<fold_right_1143@71:1>](<fold_right_1143@71:1>:int), (<<<fold_right_1143@71:4>@121:0>@127:0> = 0)
          |- P[<<<fold_right_1143@71:4>@121:0>@127:0>](<fold_right_1143@71:1>:int,
                                                       <<<fold_right_1143@71:4>@121:0>@127:0>:int)
          
          P[<fold_right_1143@71:1>](var955:int),
          ((var955 = (1 + <fold_right_1143@108:1>)) && (<fold_right_1143@108:1> >= 0))
          |- P[<fold_right_1143@108:1>](<fold_right_1143@108:1>:int)
          
          P[<<make_list_1030@51:1>@67:0>](<make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int),
          P[<<fold_right_1143@71:2>@79:0>](<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int),
          P[<make_list_1030@51:0>](<make_list_1030@51:0>:int)|- P[<<<make_list_1030@51:1>@67:1>@83:0>](
          <make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,
          <<<make_list_1030@51:1>@67:1>@83:0>:int)
          
          P[<fold_right_1143@71:1>](<fold_right_1143@71:1>:int),
          ((<fold_right_1143@71:1> >= 1) && (<<fold_right_1143@71:2>@79:0> = 0))
          |- P[<<fold_right_1143@71:2>@79:0>](<fold_right_1143@71:1>:int,
                                              <<fold_right_1143@71:2>@79:0>:int)
          
          P[<<make_list_1030@51:1>@67:0>](<f_main_2161@69:0>:int,<fold_right_1143@71:1>:int)|- P[<fold_right_1143@71:1>](
          <fold_right_1143@71:1>:int)
          
          P[<make_list_1030@51:0>](<make_list_1030@51:0>:int),
          P[<<make_list_1030@54:1>@57:0>](var956:int,var957:int),
          (((1 + var957) = <<make_list_1030@51:1>@67:0>) &&
           (((1 + var956) = <make_list_1030@51:0>) && (<make_list_1030@51:0> > 0)))
          |- P[<<make_list_1030@51:1>@67:0>](<make_list_1030@51:0>:int,
                                             <<make_list_1030@51:1>@67:0>:int)
          
          P[<make_list_1030@54:0>](<make_list_1030@54:0>:int),
          ((<make_list_1030@54:0> <= 0) && (<<make_list_1030@54:1>@57:0> = 0))
          |- P[<<make_list_1030@54:1>@57:0>](<make_list_1030@54:0>:int,
                                             <<make_list_1030@54:1>@57:0>:int)
          
          P[<make_list_1030@51:0>](var958:int),
          ((var958 = (1 + <make_list_1030@54:0>)) && ((1 + <make_list_1030@54:0>) > 0))
          |- P[<make_list_1030@54:0>](<make_list_1030@54:0>:int)
          Yhorn (Wed Sep 25 10:52:05 JST 2013)


(0=0) & (v_sep_fail_2169_sep_292_sep_0($231)) -> 1=0.
(($231-1=0) & ($232=0) & ($233<0)) & (v_sep_make_list_1030_sep_51_sep_1_sep_67_sep_0($234,$235)) & (v_sep_fold_right_1143_sep_71_sep_4_sep_121_sep_0_sep_127_sep_1_sep_285_sep_0($235,$232,$233)) -> v_sep_fail_2169_sep_292_sep_0($231).
($236-1>=0) & (v_sep_fold_right_1143_sep_71_sep_1($236)) & (v_sep_fold_right_1143_sep_71_sep_0_sep_141_sep_3_sep_271_sep_0($237,$238)) -> v_sep_fold_right_1143_sep_71_sep_4_sep_121_sep_0_sep_127_sep_1_sep_285_sep_0($236,$237,$238).
(0=0) & (v_sep_fold_right_1143_sep_71_sep_0_sep_141_sep_2($239)) & (v_sep_make_list_1030_sep_51_sep_1_sep_67_sep_0($240,$236)) & (v_sep_fold_right_1143_sep_71_sep_0_sep_141_sep_0_sep_199_sep_1_sep_261_sep_0($241,$242)) & (v_sep_fold_right_1143_sep_71_sep_0_sep_141_sep_1_sep_147_sep_1_sep_189_sep_0($239,$241)) -> v_sep_fold_right_1143_sep_71_sep_0_sep_141_sep_3_sep_271_sep_0($239,$242).
(($243=0) & (-$244+1<=0)) & (v_sep_fold_right_1143_sep_71_sep_1($244)) & (v_sep_fold_right_1143_sep_71_sep_2_sep_79_sep_1_sep_102_sep_0_sep_213_sep_1_sep_247_sep_0($244,$243,$245,$246)) -> v_sep_fold_right_1143_sep_71_sep_0_sep_141_sep_0_sep_199_sep_1_sep_261_sep_0($245,$246).
(0=0) & (v_sep_fold_right_1143_sep_71_sep_1($236)) & (v_sep_make_list_1030_sep_51_sep_1_sep_67_sep_0($240,$236)) & (v_sep_make_list_1030_sep_51_sep_1_sep_67_sep_1_sep_83_sep_1_sep_98_sep_0_sep_217_sep_1_sep_243_sep_0($240,$236,$247,$248,$249)) -> v_sep_fold_right_1143_sep_71_sep_2_sep_79_sep_1_sep_102_sep_0_sep_213_sep_1_sep_247_sep_0($236,$247,$248,$249).
(($250=0) & ($251=0) & ($252=0) & ($253>0) & (-$253+$254-$255=0) & (-$256+$257-1=0) & (-$256+$258-1=0) & (-$253+$259+1=0) & (-$253+$260+1=0) & ($261-$262+1=0)) & (v_sep_make_list_1030_sep_51_sep_1_sep_67_sep_0($253,$262)) & (v_sep_make_list_1030_sep_54_sep_1_sep_57_sep_0($260,$261)) & (v_sep_make_list_1030_sep_51_sep_0($253)) & (v_sep_make_list_1030_sep_51_sep_1_sep_67_sep_1_sep_83_sep_0($253,$262,$250)) & (v_sep_make_list_1030_sep_54_sep_1_sep_57_sep_0($259,$256)) & (v_sep_make_list_1030_sep_51_sep_1_sep_67_sep_1_sep_83_sep_0($253,$258,$252)) & (v_sep_make_list_1030_sep_51_sep_1_sep_67_sep_1_sep_83_sep_1_sep_98_sep_0_sep_217_sep_0($253,$257,$251,$255)) -> v_sep_make_list_1030_sep_51_sep_1_sep_67_sep_1_sep_83_sep_1_sep_98_sep_0_sep_217_sep_1_sep_243_sep_0($253,$262,$250,$255,$254).
(0=0) & (v_sep_make_list_1030_sep_51_sep_1_sep_67_sep_1_sep_83_sep_0($253,$262,$250)) & (v_sep_make_list_1030_sep_51_sep_0($253)) & (v_sep_fold_right_1143_sep_71_sep_2_sep_79_sep_0($262,$250)) & (v_sep_make_list_1030_sep_51_sep_1_sep_67_sep_0($253,$262)) & (v_sep_fold_right_1143_sep_71_sep_2_sep_79_sep_1_sep_102_sep_0_sep_213_sep_0($262,$250,$255)) -> v_sep_make_list_1030_sep_51_sep_1_sep_67_sep_1_sep_83_sep_1_sep_98_sep_0_sep_217_sep_0($253,$262,$250,$255).
(($247=0) & ($236-1>=0)) & (v_sep_fold_right_1143_sep_71_sep_2_sep_79_sep_0($236,$247)) & (v_sep_fold_right_1143_sep_71_sep_1($236)) & (v_sep_fold_right_1143_sep_71_sep_0_sep_141_sep_0_sep_199_sep_0($248)) -> v_sep_fold_right_1143_sep_71_sep_2_sep_79_sep_1_sep_102_sep_0_sep_213_sep_0($236,$247,$248).
(0=0) & (v_sep_fold_right_1143_sep_71_sep_0_sep_141_sep_1_sep_147_sep_1_sep_189_sep_0($263,$245)) & (v_sep_fold_right_1143_sep_71_sep_0_sep_141_sep_2($263)) & (v_sep_make_list_1030_sep_51_sep_1_sep_67_sep_0($240,$236)) -> v_sep_fold_right_1143_sep_71_sep_0_sep_141_sep_0_sep_199_sep_0($245).
((-$264+1<=0) & (-$264+$265+1=0)) & (v_sep_fold_right_1143_sep_71_sep_1($264)) & (v_sep_fold_right_1143_sep_108_sep_4_sep_111_sep_0_sep_157_sep_1_sep_179_sep_0($265,$266,$267)) -> v_sep_fold_right_1143_sep_71_sep_0_sep_141_sep_1_sep_147_sep_1_sep_189_sep_0($266,$267).
($268=0) & (v_sep_fold_right_1143_sep_108_sep_3_sep_159_sep_1_sep_177_sep_0($268,$269,$270)) & (v_sep_fold_right_1143_sep_108_sep_1($268)) -> v_sep_fold_right_1143_sep_108_sep_4_sep_111_sep_0_sep_157_sep_1_sep_179_sep_0($268,$269,$270).
(($268>=0) & (-$268+$271-1=0) & (-$268+$272-1=0)) & (v_sep_fold_right_1143_sep_108_sep_1($268)) & (v_sep_fold_right_1143_sep_71_sep_1($272)) & (v_sep_fold_right_1143_sep_71_sep_3_sep_165_sep_1_sep_171_sep_0($271,$273,$274)) -> v_sep_fold_right_1143_sep_108_sep_3_sep_159_sep_1_sep_177_sep_0($268,$273,$274).
($275-$276=0) & (v_sep_fold_right_1143_sep_71_sep_1($236)) & (v_sep_fold_right_1143_sep_71_sep_3_sep_165_sep_0($236,$276)) & (v_sep_make_list_1030_sep_51_sep_1_sep_67_sep_0($240,$236)) -> v_sep_fold_right_1143_sep_71_sep_3_sep_165_sep_1_sep_171_sep_0($236,$276,$275).
(($236-1>=0) & (-$236+$277+1=0)) & (v_sep_fold_right_1143_sep_108_sep_3_sep_159_sep_0($277,$276)) & (v_sep_fold_right_1143_sep_71_sep_1($236)) -> v_sep_fold_right_1143_sep_71_sep_3_sep_165_sep_0($236,$276).
($268=0) & (v_sep_fold_right_1143_sep_108_sep_4_sep_111_sep_0_sep_157_sep_0($268,$273)) & (v_sep_fold_right_1143_sep_108_sep_1($268)) -> v_sep_fold_right_1143_sep_108_sep_3_sep_159_sep_0($268,$273).
(($268>=0) & (-$268+$278-1=0)) & (v_sep_fold_right_1143_sep_108_sep_1($268)) & (v_sep_fold_right_1143_sep_71_sep_1($278)) & (v_sep_fold_right_1143_sep_71_sep_0_sep_141_sep_1_sep_147_sep_0($269)) -> v_sep_fold_right_1143_sep_108_sep_4_sep_111_sep_0_sep_157_sep_0($268,$269).
(0=0) & (v_sep_fold_right_1143_sep_71_sep_0_sep_141_sep_2($266)) & (v_sep_make_list_1030_sep_51_sep_1_sep_67_sep_0($240,$236)) -> v_sep_fold_right_1143_sep_71_sep_0_sep_141_sep_1_sep_147_sep_0($266).
(-$279+1<=0) & (v_sep_fold_right_1143_sep_71_sep_1($279)) & (v_sep_fold_right_1143_sep_71_sep_4_sep_121_sep_0_sep_127_sep_0($279,$239)) -> v_sep_fold_right_1143_sep_71_sep_0_sep_141_sep_2($239).
($237=0) & (v_sep_fold_right_1143_sep_71_sep_1($236)) & (v_sep_make_list_1030_sep_51_sep_1_sep_67_sep_0($240,$236)) -> v_sep_fold_right_1143_sep_71_sep_4_sep_121_sep_0_sep_127_sep_0($236,$237).
(($268>=0) & (-$268+$280-1=0)) & (v_sep_fold_right_1143_sep_71_sep_1($280)) -> v_sep_fold_right_1143_sep_108_sep_1($268).
(0=0) & (v_sep_make_list_1030_sep_51_sep_0($253)) & (v_sep_fold_right_1143_sep_71_sep_2_sep_79_sep_0($262,$250)) & (v_sep_make_list_1030_sep_51_sep_1_sep_67_sep_0($253,$262)) -> v_sep_make_list_1030_sep_51_sep_1_sep_67_sep_1_sep_83_sep_0($253,$262,$250).
(($247=0) & ($236-1>=0)) & (v_sep_fold_right_1143_sep_71_sep_1($236)) -> v_sep_fold_right_1143_sep_71_sep_2_sep_79_sep_0($236,$247).
(0=0) & (v_sep_make_list_1030_sep_51_sep_1_sep_67_sep_0($281,$236)) -> v_sep_fold_right_1143_sep_71_sep_1($236).
(($253>0) & (-$253+$282+1=0) & (-$262+$283+1=0)) & (v_sep_make_list_1030_sep_54_sep_1_sep_57_sep_0($282,$283)) & (v_sep_make_list_1030_sep_51_sep_0($253)) -> v_sep_make_list_1030_sep_51_sep_1_sep_67_sep_0($253,$262).
(($284=0) & ($285<=0)) & (v_sep_make_list_1030_sep_54_sep_0($285)) -> v_sep_make_list_1030_sep_54_sep_1_sep_57_sep_0($285,$284).
(($285+1>0) & (-$285+$286-1=0)) & (v_sep_make_list_1030_sep_51_sep_0($286)) -> v_sep_make_list_1030_sep_54_sep_0($285).
0=0 -> v_sep_make_list_1030_sep_51_sep_0($253).


v_sep_fail_2169_sep_292_sep_0: X
v_sep_fold_right_1143_sep_108_sep_1: X
v_sep_fold_right_1143_sep_108_sep_3_sep_159_sep_0: X
v_sep_fold_right_1143_sep_108_sep_3_sep_159_sep_1_sep_177_sep_0: X
v_sep_fold_right_1143_sep_108_sep_4_sep_111_sep_0_sep_157_sep_0: X
v_sep_fold_right_1143_sep_108_sep_4_sep_111_sep_0_sep_157_sep_1_sep_179_sep_0: X
v_sep_fold_right_1143_sep_71_sep_0_sep_141_sep_0_sep_199_sep_0: X
v_sep_fold_right_1143_sep_71_sep_0_sep_141_sep_0_sep_199_sep_1_sep_261_sep_0: X
v_sep_fold_right_1143_sep_71_sep_0_sep_141_sep_1_sep_147_sep_0: X
v_sep_fold_right_1143_sep_71_sep_0_sep_141_sep_1_sep_147_sep_1_sep_189_sep_0: X
v_sep_fold_right_1143_sep_71_sep_0_sep_141_sep_2: X
v_sep_fold_right_1143_sep_71_sep_0_sep_141_sep_3_sep_271_sep_0: X
v_sep_fold_right_1143_sep_71_sep_1: X
v_sep_fold_right_1143_sep_71_sep_2_sep_79_sep_0: X
v_sep_fold_right_1143_sep_71_sep_2_sep_79_sep_1_sep_102_sep_0_sep_213_sep_0: X
v_sep_fold_right_1143_sep_71_sep_2_sep_79_sep_1_sep_102_sep_0_sep_213_sep_1_sep_247_sep_0: X
v_sep_fold_right_1143_sep_71_sep_3_sep_165_sep_0: X
v_sep_fold_right_1143_sep_71_sep_3_sep_165_sep_1_sep_171_sep_0: X
v_sep_fold_right_1143_sep_71_sep_4_sep_121_sep_0_sep_127_sep_0: X
v_sep_fold_right_1143_sep_71_sep_4_sep_121_sep_0_sep_127_sep_1_sep_285_sep_0: X
v_sep_make_list_1030_sep_51_sep_0: X
v_sep_make_list_1030_sep_51_sep_1_sep_67_sep_0: X
v_sep_make_list_1030_sep_51_sep_1_sep_67_sep_1_sep_83_sep_0: X
v_sep_make_list_1030_sep_51_sep_1_sep_67_sep_1_sep_83_sep_1_sep_98_sep_0_sep_217_sep_0: X
v_sep_make_list_1030_sep_51_sep_1_sep_67_sep_1_sep_83_sep_1_sep_98_sep_0_sep_217_sep_1_sep_243_sep_0: X
v_sep_make_list_1030_sep_54_sep_0: X
v_sep_make_list_1030_sep_54_sep_1_sep_57_sep_0: X
..................................................................
v_sep_fail_2169_sep_292_sep_0: X
v_sep_fold_right_1143_sep_108_sep_1: X
v_sep_fold_right_1143_sep_108_sep_3_sep_159_sep_0: X
v_sep_fold_right_1143_sep_108_sep_3_sep_159_sep_1_sep_177_sep_0: X
v_sep_fold_right_1143_sep_108_sep_4_sep_111_sep_0_sep_157_sep_0: X
v_sep_fold_right_1143_sep_108_sep_4_sep_111_sep_0_sep_157_sep_1_sep_179_sep_0: X
v_sep_fold_right_1143_sep_71_sep_0_sep_141_sep_0_sep_199_sep_0: X
v_sep_fold_right_1143_sep_71_sep_0_sep_141_sep_0_sep_199_sep_1_sep_261_sep_0: X
v_sep_fold_right_1143_sep_71_sep_0_sep_141_sep_1_sep_147_sep_0: X
v_sep_fold_right_1143_sep_71_sep_0_sep_141_sep_1_sep_147_sep_1_sep_189_sep_0: X
v_sep_fold_right_1143_sep_71_sep_0_sep_141_sep_2: X
v_sep_fold_right_1143_sep_71_sep_0_sep_141_sep_3_sep_271_sep_0: X
v_sep_fold_right_1143_sep_71_sep_1: X
v_sep_fold_right_1143_sep_71_sep_2_sep_79_sep_0: X
v_sep_fold_right_1143_sep_71_sep_2_sep_79_sep_1_sep_102_sep_0_sep_213_sep_0: X
v_sep_fold_right_1143_sep_71_sep_2_sep_79_sep_1_sep_102_sep_0_sep_213_sep_1_sep_247_sep_0: X
v_sep_fold_right_1143_sep_71_sep_3_sep_165_sep_0: X
v_sep_fold_right_1143_sep_71_sep_3_sep_165_sep_1_sep_171_sep_0: X
v_sep_fold_right_1143_sep_71_sep_4_sep_121_sep_0_sep_127_sep_0: X
v_sep_fold_right_1143_sep_71_sep_4_sep_121_sep_0_sep_127_sep_1_sep_285_sep_0: X
v_sep_make_list_1030_sep_51_sep_0: X
v_sep_make_list_1030_sep_51_sep_1_sep_67_sep_0: X
v_sep_make_list_1030_sep_51_sep_1_sep_67_sep_1_sep_83_sep_0: X
v_sep_make_list_1030_sep_51_sep_1_sep_67_sep_1_sep_83_sep_1_sep_98_sep_0_sep_217_sep_0: X
v_sep_make_list_1030_sep_51_sep_1_sep_67_sep_1_sep_83_sep_1_sep_98_sep_0_sep_217_sep_1_sep_243_sep_0: X
v_sep_make_list_1030_sep_54_sep_0: X
v_sep_make_list_1030_sep_54_sep_1_sep_57_sep_0: X
....
v_sep_fail_2169_sep_292_sep_0: X
v_sep_fold_right_1143_sep_108_sep_1: X
v_sep_fold_right_1143_sep_108_sep_3_sep_159_sep_0: X
v_sep_fold_right_1143_sep_108_sep_3_sep_159_sep_1_sep_177_sep_0: X
v_sep_fold_right_1143_sep_108_sep_4_sep_111_sep_0_sep_157_sep_0: X
v_sep_fold_right_1143_sep_108_sep_4_sep_111_sep_0_sep_157_sep_1_sep_179_sep_0: X
v_sep_fold_right_1143_sep_71_sep_0_sep_141_sep_0_sep_199_sep_0: X
v_sep_fold_right_1143_sep_71_sep_0_sep_141_sep_0_sep_199_sep_1_sep_261_sep_0: X
v_sep_fold_right_1143_sep_71_sep_0_sep_141_sep_1_sep_147_sep_0: X
v_sep_fold_right_1143_sep_71_sep_0_sep_141_sep_1_sep_147_sep_1_sep_189_sep_0: X
v_sep_fold_right_1143_sep_71_sep_0_sep_141_sep_2: X
v_sep_fold_right_1143_sep_71_sep_0_sep_141_sep_3_sep_271_sep_0: X
v_sep_fold_right_1143_sep_71_sep_1: X
v_sep_fold_right_1143_sep_71_sep_2_sep_79_sep_0: X
v_sep_fold_right_1143_sep_71_sep_2_sep_79_sep_1_sep_102_sep_0_sep_213_sep_0: X
v_sep_fold_right_1143_sep_71_sep_2_sep_79_sep_1_sep_102_sep_0_sep_213_sep_1_sep_247_sep_0: X
v_sep_fold_right_1143_sep_71_sep_3_sep_165_sep_0: X
v_sep_fold_right_1143_sep_71_sep_3_sep_165_sep_1_sep_171_sep_0: X
v_sep_fold_right_1143_sep_71_sep_4_sep_121_sep_0_sep_127_sep_0: X
v_sep_fold_right_1143_sep_71_sep_4_sep_121_sep_0_sep_127_sep_1_sep_285_sep_0: X
v_sep_make_list_1030_sep_51_sep_0: X
v_sep_make_list_1030_sep_51_sep_1_sep_67_sep_0: X
v_sep_make_list_1030_sep_51_sep_1_sep_67_sep_1_sep_83_sep_0: X
v_sep_make_list_1030_sep_51_sep_1_sep_67_sep_1_sep_83_sep_1_sep_98_sep_0_sep_217_sep_0: X
v_sep_make_list_1030_sep_51_sep_1_sep_67_sep_1_sep_83_sep_1_sep_98_sep_0_sep_217_sep_1_sep_243_sep_0: X
v_sep_make_list_1030_sep_54_sep_0: X
v_sep_make_list_1030_sep_54_sep_1_sep_57_sep_0: X
........
v_sep_fail_2169_sep_292_sep_0: X
v_sep_fold_right_1143_sep_108_sep_1: X
v_sep_fold_right_1143_sep_108_sep_3_sep_159_sep_0: X
v_sep_fold_right_1143_sep_108_sep_3_sep_159_sep_1_sep_177_sep_0: X
v_sep_fold_right_1143_sep_108_sep_4_sep_111_sep_0_sep_157_sep_0: X
v_sep_fold_right_1143_sep_108_sep_4_sep_111_sep_0_sep_157_sep_1_sep_179_sep_0: X
v_sep_fold_right_1143_sep_71_sep_0_sep_141_sep_0_sep_199_sep_0: X
v_sep_fold_right_1143_sep_71_sep_0_sep_141_sep_0_sep_199_sep_1_sep_261_sep_0: X
v_sep_fold_right_1143_sep_71_sep_0_sep_141_sep_1_sep_147_sep_0: X
v_sep_fold_right_1143_sep_71_sep_0_sep_141_sep_1_sep_147_sep_1_sep_189_sep_0: X
v_sep_fold_right_1143_sep_71_sep_0_sep_141_sep_2: X
v_sep_fold_right_1143_sep_71_sep_0_sep_141_sep_3_sep_271_sep_0: X
v_sep_fold_right_1143_sep_71_sep_1: X
v_sep_fold_right_1143_sep_71_sep_2_sep_79_sep_0: X
v_sep_fold_right_1143_sep_71_sep_2_sep_79_sep_1_sep_102_sep_0_sep_213_sep_0: X
v_sep_fold_right_1143_sep_71_sep_2_sep_79_sep_1_sep_102_sep_0_sep_213_sep_1_sep_247_sep_0: X
v_sep_fold_right_1143_sep_71_sep_3_sep_165_sep_0: X
v_sep_fold_right_1143_sep_71_sep_3_sep_165_sep_1_sep_171_sep_0: X
v_sep_fold_right_1143_sep_71_sep_4_sep_121_sep_0_sep_127_sep_0: X
v_sep_fold_right_1143_sep_71_sep_4_sep_121_sep_0_sep_127_sep_1_sep_285_sep_0: X
v_sep_make_list_1030_sep_51_sep_0: X
v_sep_make_list_1030_sep_51_sep_1_sep_67_sep_0: X
v_sep_make_list_1030_sep_51_sep_1_sep_67_sep_1_sep_83_sep_0: X
v_sep_make_list_1030_sep_51_sep_1_sep_67_sep_1_sep_83_sep_1_sep_98_sep_0_sep_217_sep_0: X
v_sep_make_list_1030_sep_51_sep_1_sep_67_sep_1_sep_83_sep_1_sep_98_sep_0_sep_217_sep_1_sep_243_sep_0: X
v_sep_make_list_1030_sep_54_sep_0: X
v_sep_make_list_1030_sep_54_sep_1_sep_57_sep_0: X
..............
v_sep_fail_2169_sep_292_sep_0: X
v_sep_fold_right_1143_sep_108_sep_1: X
v_sep_fold_right_1143_sep_108_sep_3_sep_159_sep_0: X
v_sep_fold_right_1143_sep_108_sep_3_sep_159_sep_1_sep_177_sep_0: X
v_sep_fold_right_1143_sep_108_sep_4_sep_111_sep_0_sep_157_sep_0: X
v_sep_fold_right_1143_sep_108_sep_4_sep_111_sep_0_sep_157_sep_1_sep_179_sep_0: X
v_sep_fold_right_1143_sep_71_sep_0_sep_141_sep_0_sep_199_sep_0: X
v_sep_fold_right_1143_sep_71_sep_0_sep_141_sep_0_sep_199_sep_1_sep_261_sep_0: X
v_sep_fold_right_1143_sep_71_sep_0_sep_141_sep_1_sep_147_sep_0: X
v_sep_fold_right_1143_sep_71_sep_0_sep_141_sep_1_sep_147_sep_1_sep_189_sep_0: X
v_sep_fold_right_1143_sep_71_sep_0_sep_141_sep_2: X
v_sep_fold_right_1143_sep_71_sep_0_sep_141_sep_3_sep_271_sep_0: X
v_sep_fold_right_1143_sep_71_sep_1: X
v_sep_fold_right_1143_sep_71_sep_2_sep_79_sep_0: X
v_sep_fold_right_1143_sep_71_sep_2_sep_79_sep_1_sep_102_sep_0_sep_213_sep_0: X
v_sep_fold_right_1143_sep_71_sep_2_sep_79_sep_1_sep_102_sep_0_sep_213_sep_1_sep_247_sep_0: X
v_sep_fold_right_1143_sep_71_sep_3_sep_165_sep_0: X
v_sep_fold_right_1143_sep_71_sep_3_sep_165_sep_1_sep_171_sep_0: X
v_sep_fold_right_1143_sep_71_sep_4_sep_121_sep_0_sep_127_sep_0: X
v_sep_fold_right_1143_sep_71_sep_4_sep_121_sep_0_sep_127_sep_1_sep_285_sep_0: X
v_sep_make_list_1030_sep_51_sep_0: X
v_sep_make_list_1030_sep_51_sep_1_sep_67_sep_0: X
v_sep_make_list_1030_sep_51_sep_1_sep_67_sep_1_sep_83_sep_0: X
v_sep_make_list_1030_sep_51_sep_1_sep_67_sep_1_sep_83_sep_1_sep_98_sep_0_sep_217_sep_0: X
v_sep_make_list_1030_sep_51_sep_1_sep_67_sep_1_sep_83_sep_1_sep_98_sep_0_sep_217_sep_1_sep_243_sep_0: X
v_sep_make_list_1030_sep_54_sep_0: X
v_sep_make_list_1030_sep_54_sep_1_sep_57_sep_0: X
.....................
v_sep_fail_2169_sep_292_sep_0: X
v_sep_fold_right_1143_sep_108_sep_1: X
v_sep_fold_right_1143_sep_108_sep_3_sep_159_sep_0: X
v_sep_fold_right_1143_sep_108_sep_3_sep_159_sep_1_sep_177_sep_0: X
v_sep_fold_right_1143_sep_108_sep_4_sep_111_sep_0_sep_157_sep_0: X
v_sep_fold_right_1143_sep_108_sep_4_sep_111_sep_0_sep_157_sep_1_sep_179_sep_0: X
v_sep_fold_right_1143_sep_71_sep_0_sep_141_sep_0_sep_199_sep_0: X
v_sep_fold_right_1143_sep_71_sep_0_sep_141_sep_0_sep_199_sep_1_sep_261_sep_0: X
v_sep_fold_right_1143_sep_71_sep_0_sep_141_sep_1_sep_147_sep_0: X
v_sep_fold_right_1143_sep_71_sep_0_sep_141_sep_1_sep_147_sep_1_sep_189_sep_0: X
v_sep_fold_right_1143_sep_71_sep_0_sep_141_sep_2: X
v_sep_fold_right_1143_sep_71_sep_0_sep_141_sep_3_sep_271_sep_0: X
v_sep_fold_right_1143_sep_71_sep_1: X
v_sep_fold_right_1143_sep_71_sep_2_sep_79_sep_0: X
v_sep_fold_right_1143_sep_71_sep_2_sep_79_sep_1_sep_102_sep_0_sep_213_sep_0: X
v_sep_fold_right_1143_sep_71_sep_2_sep_79_sep_1_sep_102_sep_0_sep_213_sep_1_sep_247_sep_0: X
v_sep_fold_right_1143_sep_71_sep_3_sep_165_sep_0: X
v_sep_fold_right_1143_sep_71_sep_3_sep_165_sep_1_sep_171_sep_0: X
v_sep_fold_right_1143_sep_71_sep_4_sep_121_sep_0_sep_127_sep_0: X
v_sep_fold_right_1143_sep_71_sep_4_sep_121_sep_0_sep_127_sep_1_sep_285_sep_0: X
v_sep_make_list_1030_sep_51_sep_0: X
v_sep_make_list_1030_sep_51_sep_1_sep_67_sep_0: X
v_sep_make_list_1030_sep_51_sep_1_sep_67_sep_1_sep_83_sep_0: X
v_sep_make_list_1030_sep_51_sep_1_sep_67_sep_1_sep_83_sep_1_sep_98_sep_0_sep_217_sep_0: X
v_sep_make_list_1030_sep_51_sep_1_sep_67_sep_1_sep_83_sep_1_sep_98_sep_0_sep_217_sep_1_sep_243_sep_0: X
v_sep_make_list_1030_sep_54_sep_0: X
v_sep_make_list_1030_sep_54_sep_1_sep_57_sep_0: X
............................
v_sep_fail_2169_sep_292_sep_0: X
v_sep_fold_right_1143_sep_108_sep_1: X
v_sep_fold_right_1143_sep_108_sep_3_sep_159_sep_0: X
v_sep_fold_right_1143_sep_108_sep_3_sep_159_sep_1_sep_177_sep_0: X
v_sep_fold_right_1143_sep_108_sep_4_sep_111_sep_0_sep_157_sep_0: X
v_sep_fold_right_1143_sep_108_sep_4_sep_111_sep_0_sep_157_sep_1_sep_179_sep_0: X
v_sep_fold_right_1143_sep_71_sep_0_sep_141_sep_0_sep_199_sep_0: X
v_sep_fold_right_1143_sep_71_sep_0_sep_141_sep_0_sep_199_sep_1_sep_261_sep_0: X
v_sep_fold_right_1143_sep_71_sep_0_sep_141_sep_1_sep_147_sep_0: X
v_sep_fold_right_1143_sep_71_sep_0_sep_141_sep_1_sep_147_sep_1_sep_189_sep_0: X
v_sep_fold_right_1143_sep_71_sep_0_sep_141_sep_2: X
v_sep_fold_right_1143_sep_71_sep_0_sep_141_sep_3_sep_271_sep_0: X
v_sep_fold_right_1143_sep_71_sep_1: X
v_sep_fold_right_1143_sep_71_sep_2_sep_79_sep_0: X
v_sep_fold_right_1143_sep_71_sep_2_sep_79_sep_1_sep_102_sep_0_sep_213_sep_0: X
v_sep_fold_right_1143_sep_71_sep_2_sep_79_sep_1_sep_102_sep_0_sep_213_sep_1_sep_247_sep_0: X
v_sep_fold_right_1143_sep_71_sep_3_sep_165_sep_0: X
v_sep_fold_right_1143_sep_71_sep_3_sep_165_sep_1_sep_171_sep_0: X
v_sep_fold_right_1143_sep_71_sep_4_sep_121_sep_0_sep_127_sep_0: X
v_sep_fold_right_1143_sep_71_sep_4_sep_121_sep_0_sep_127_sep_1_sep_285_sep_0: X
v_sep_make_list_1030_sep_51_sep_0: X
v_sep_make_list_1030_sep_51_sep_1_sep_67_sep_0: X
v_sep_make_list_1030_sep_51_sep_1_sep_67_sep_1_sep_83_sep_0: X
v_sep_make_list_1030_sep_51_sep_1_sep_67_sep_1_sep_83_sep_1_sep_98_sep_0_sep_217_sep_0: X
v_sep_make_list_1030_sep_51_sep_1_sep_67_sep_1_sep_83_sep_1_sep_98_sep_0_sep_217_sep_1_sep_243_sep_0: X
v_sep_make_list_1030_sep_54_sep_0: X
v_sep_make_list_1030_sep_54_sep_1_sep_57_sep_0: X
.......................................
v_sep_fail_2169_sep_292_sep_0: X
v_sep_fold_right_1143_sep_108_sep_1: X
v_sep_fold_right_1143_sep_108_sep_3_sep_159_sep_0: X
v_sep_fold_right_1143_sep_108_sep_3_sep_159_sep_1_sep_177_sep_0: X
v_sep_fold_right_1143_sep_108_sep_4_sep_111_sep_0_sep_157_sep_0: X
v_sep_fold_right_1143_sep_108_sep_4_sep_111_sep_0_sep_157_sep_1_sep_179_sep_0: X
v_sep_fold_right_1143_sep_71_sep_0_sep_141_sep_0_sep_199_sep_0: X
v_sep_fold_right_1143_sep_71_sep_0_sep_141_sep_0_sep_199_sep_1_sep_261_sep_0: X
v_sep_fold_right_1143_sep_71_sep_0_sep_141_sep_1_sep_147_sep_0: X
v_sep_fold_right_1143_sep_71_sep_0_sep_141_sep_1_sep_147_sep_1_sep_189_sep_0: X
v_sep_fold_right_1143_sep_71_sep_0_sep_141_sep_2: X
v_sep_fold_right_1143_sep_71_sep_0_sep_141_sep_3_sep_271_sep_0: X
v_sep_fold_right_1143_sep_71_sep_1: X
v_sep_fold_right_1143_sep_71_sep_2_sep_79_sep_0: X
v_sep_fold_right_1143_sep_71_sep_2_sep_79_sep_1_sep_102_sep_0_sep_213_sep_0: X
v_sep_fold_right_1143_sep_71_sep_2_sep_79_sep_1_sep_102_sep_0_sep_213_sep_1_sep_247_sep_0: X
v_sep_fold_right_1143_sep_71_sep_3_sep_165_sep_0: X
v_sep_fold_right_1143_sep_71_sep_3_sep_165_sep_1_sep_171_sep_0: X
v_sep_fold_right_1143_sep_71_sep_4_sep_121_sep_0_sep_127_sep_0: X
v_sep_fold_right_1143_sep_71_sep_4_sep_121_sep_0_sep_127_sep_1_sep_285_sep_0: X
v_sep_make_list_1030_sep_51_sep_0: X
v_sep_make_list_1030_sep_51_sep_1_sep_67_sep_0: X
v_sep_make_list_1030_sep_51_sep_1_sep_67_sep_1_sep_83_sep_0: X
v_sep_make_list_1030_sep_51_sep_1_sep_67_sep_1_sep_83_sep_1_sep_98_sep_0_sep_217_sep_0: X
v_sep_make_list_1030_sep_51_sep_1_sep_67_sep_1_sep_83_sep_1_sep_98_sep_0_sep_217_sep_1_sep_243_sep_0: X
v_sep_make_list_1030_sep_54_sep_0: X
v_sep_make_list_1030_sep_54_sep_1_sep_57_sep_0: X
..................................................
v_sep_fail_2169_sep_292_sep_0: X
v_sep_fold_right_1143_sep_108_sep_1: X
v_sep_fold_right_1143_sep_108_sep_3_sep_159_sep_0: X
v_sep_fold_right_1143_sep_108_sep_3_sep_159_sep_1_sep_177_sep_0: X
v_sep_fold_right_1143_sep_108_sep_4_sep_111_sep_0_sep_157_sep_0: X
v_sep_fold_right_1143_sep_108_sep_4_sep_111_sep_0_sep_157_sep_1_sep_179_sep_0: X
v_sep_fold_right_1143_sep_71_sep_0_sep_141_sep_0_sep_199_sep_0: X
v_sep_fold_right_1143_sep_71_sep_0_sep_141_sep_0_sep_199_sep_1_sep_261_sep_0: X
v_sep_fold_right_1143_sep_71_sep_0_sep_141_sep_1_sep_147_sep_0: X
v_sep_fold_right_1143_sep_71_sep_0_sep_141_sep_1_sep_147_sep_1_sep_189_sep_0: X
v_sep_fold_right_1143_sep_71_sep_0_sep_141_sep_2: X
v_sep_fold_right_1143_sep_71_sep_0_sep_141_sep_3_sep_271_sep_0: X
v_sep_fold_right_1143_sep_71_sep_1: X
v_sep_fold_right_1143_sep_71_sep_2_sep_79_sep_0: X
v_sep_fold_right_1143_sep_71_sep_2_sep_79_sep_1_sep_102_sep_0_sep_213_sep_0: X
v_sep_fold_right_1143_sep_71_sep_2_sep_79_sep_1_sep_102_sep_0_sep_213_sep_1_sep_247_sep_0: X
v_sep_fold_right_1143_sep_71_sep_3_sep_165_sep_0: X
v_sep_fold_right_1143_sep_71_sep_3_sep_165_sep_1_sep_171_sep_0: X
v_sep_fold_right_1143_sep_71_sep_4_sep_121_sep_0_sep_127_sep_0: X
v_sep_fold_right_1143_sep_71_sep_4_sep_121_sep_0_sep_127_sep_1_sep_285_sep_0: X
v_sep_make_list_1030_sep_51_sep_0: X
v_sep_make_list_1030_sep_51_sep_1_sep_67_sep_0: X
v_sep_make_list_1030_sep_51_sep_1_sep_67_sep_1_sep_83_sep_0: X
v_sep_make_list_1030_sep_51_sep_1_sep_67_sep_1_sep_83_sep_1_sep_98_sep_0_sep_217_sep_0: X
v_sep_make_list_1030_sep_51_sep_1_sep_67_sep_1_sep_83_sep_1_sep_98_sep_0_sep_217_sep_1_sep_243_sep_0: X
v_sep_make_list_1030_sep_54_sep_0: X
v_sep_make_list_1030_sep_54_sep_1_sep_57_sep_0: X
........................................................
v_sep_fail_2169_sep_292_sep_0: X
v_sep_fold_right_1143_sep_108_sep_1: X
v_sep_fold_right_1143_sep_108_sep_3_sep_159_sep_0: X
v_sep_fold_right_1143_sep_108_sep_3_sep_159_sep_1_sep_177_sep_0: X
v_sep_fold_right_1143_sep_108_sep_4_sep_111_sep_0_sep_157_sep_0: X
v_sep_fold_right_1143_sep_108_sep_4_sep_111_sep_0_sep_157_sep_1_sep_179_sep_0: X
v_sep_fold_right_1143_sep_71_sep_0_sep_141_sep_0_sep_199_sep_0: X
v_sep_fold_right_1143_sep_71_sep_0_sep_141_sep_0_sep_199_sep_1_sep_261_sep_0: X
v_sep_fold_right_1143_sep_71_sep_0_sep_141_sep_1_sep_147_sep_0: X
v_sep_fold_right_1143_sep_71_sep_0_sep_141_sep_1_sep_147_sep_1_sep_189_sep_0: X
v_sep_fold_right_1143_sep_71_sep_0_sep_141_sep_2: X
v_sep_fold_right_1143_sep_71_sep_0_sep_141_sep_3_sep_271_sep_0: X
v_sep_fold_right_1143_sep_71_sep_1: X
v_sep_fold_right_1143_sep_71_sep_2_sep_79_sep_0: X
v_sep_fold_right_1143_sep_71_sep_2_sep_79_sep_1_sep_102_sep_0_sep_213_sep_0: X
v_sep_fold_right_1143_sep_71_sep_2_sep_79_sep_1_sep_102_sep_0_sep_213_sep_1_sep_247_sep_0: X
v_sep_fold_right_1143_sep_71_sep_3_sep_165_sep_0: X
v_sep_fold_right_1143_sep_71_sep_3_sep_165_sep_1_sep_171_sep_0: X
v_sep_fold_right_1143_sep_71_sep_4_sep_121_sep_0_sep_127_sep_0: X
v_sep_fold_right_1143_sep_71_sep_4_sep_121_sep_0_sep_127_sep_1_sep_285_sep_0: X
v_sep_make_list_1030_sep_51_sep_0: X
v_sep_make_list_1030_sep_51_sep_1_sep_67_sep_0: X
v_sep_make_list_1030_sep_51_sep_1_sep_67_sep_1_sep_83_sep_0: X
v_sep_make_list_1030_sep_51_sep_1_sep_67_sep_1_sep_83_sep_1_sep_98_sep_0_sep_217_sep_0: X
v_sep_make_list_1030_sep_51_sep_1_sep_67_sep_1_sep_83_sep_1_sep_98_sep_0_sep_217_sep_1_sep_243_sep_0: X
v_sep_make_list_1030_sep_54_sep_0: X
v_sep_make_list_1030_sep_54_sep_1_sep_57_sep_0: X
.............................................................
v_sep_fail_2169_sep_292_sep_0: X
v_sep_fold_right_1143_sep_108_sep_1: X
v_sep_fold_right_1143_sep_108_sep_3_sep_159_sep_0: X
v_sep_fold_right_1143_sep_108_sep_3_sep_159_sep_1_sep_177_sep_0: X
v_sep_fold_right_1143_sep_108_sep_4_sep_111_sep_0_sep_157_sep_0: X
v_sep_fold_right_1143_sep_108_sep_4_sep_111_sep_0_sep_157_sep_1_sep_179_sep_0: X
v_sep_fold_right_1143_sep_71_sep_0_sep_141_sep_0_sep_199_sep_0: X
v_sep_fold_right_1143_sep_71_sep_0_sep_141_sep_0_sep_199_sep_1_sep_261_sep_0: X
v_sep_fold_right_1143_sep_71_sep_0_sep_141_sep_1_sep_147_sep_0: X
v_sep_fold_right_1143_sep_71_sep_0_sep_141_sep_1_sep_147_sep_1_sep_189_sep_0: X
v_sep_fold_right_1143_sep_71_sep_0_sep_141_sep_2: X
v_sep_fold_right_1143_sep_71_sep_0_sep_141_sep_3_sep_271_sep_0: X
v_sep_fold_right_1143_sep_71_sep_1: X
v_sep_fold_right_1143_sep_71_sep_2_sep_79_sep_0: X
v_sep_fold_right_1143_sep_71_sep_2_sep_79_sep_1_sep_102_sep_0_sep_213_sep_0: X
v_sep_fold_right_1143_sep_71_sep_2_sep_79_sep_1_sep_102_sep_0_sep_213_sep_1_sep_247_sep_0: X
v_sep_fold_right_1143_sep_71_sep_3_sep_165_sep_0: X
v_sep_fold_right_1143_sep_71_sep_3_sep_165_sep_1_sep_171_sep_0: X
v_sep_fold_right_1143_sep_71_sep_4_sep_121_sep_0_sep_127_sep_0: X
v_sep_fold_right_1143_sep_71_sep_4_sep_121_sep_0_sep_127_sep_1_sep_285_sep_0: X
v_sep_make_list_1030_sep_51_sep_0: X
v_sep_make_list_1030_sep_51_sep_1_sep_67_sep_0: X
v_sep_make_list_1030_sep_51_sep_1_sep_67_sep_1_sep_83_sep_0: X
v_sep_make_list_1030_sep_51_sep_1_sep_67_sep_1_sep_83_sep_1_sep_98_sep_0_sep_217_sep_0: X
v_sep_make_list_1030_sep_51_sep_1_sep_67_sep_1_sep_83_sep_1_sep_98_sep_0_sep_217_sep_1_sep_243_sep_0: X
v_sep_make_list_1030_sep_54_sep_0: X
v_sep_make_list_1030_sep_54_sep_1_sep_57_sep_0: X
................................................................
v_sep_fail_2169_sep_292_sep_0: X
v_sep_fold_right_1143_sep_108_sep_1: X
v_sep_fold_right_1143_sep_108_sep_3_sep_159_sep_0: X
v_sep_fold_right_1143_sep_108_sep_3_sep_159_sep_1_sep_177_sep_0: X
v_sep_fold_right_1143_sep_108_sep_4_sep_111_sep_0_sep_157_sep_0: X
v_sep_fold_right_1143_sep_108_sep_4_sep_111_sep_0_sep_157_sep_1_sep_179_sep_0: X
v_sep_fold_right_1143_sep_71_sep_0_sep_141_sep_0_sep_199_sep_0: X
v_sep_fold_right_1143_sep_71_sep_0_sep_141_sep_0_sep_199_sep_1_sep_261_sep_0: X
v_sep_fold_right_1143_sep_71_sep_0_sep_141_sep_1_sep_147_sep_0: X
v_sep_fold_right_1143_sep_71_sep_0_sep_141_sep_1_sep_147_sep_1_sep_189_sep_0: X
v_sep_fold_right_1143_sep_71_sep_0_sep_141_sep_2: X
v_sep_fold_right_1143_sep_71_sep_0_sep_141_sep_3_sep_271_sep_0: X
v_sep_fold_right_1143_sep_71_sep_1: X
v_sep_fold_right_1143_sep_71_sep_2_sep_79_sep_0: X
v_sep_fold_right_1143_sep_71_sep_2_sep_79_sep_1_sep_102_sep_0_sep_213_sep_0: X
v_sep_fold_right_1143_sep_71_sep_2_sep_79_sep_1_sep_102_sep_0_sep_213_sep_1_sep_247_sep_0: X
v_sep_fold_right_1143_sep_71_sep_3_sep_165_sep_0: X
v_sep_fold_right_1143_sep_71_sep_3_sep_165_sep_1_sep_171_sep_0: X
v_sep_fold_right_1143_sep_71_sep_4_sep_121_sep_0_sep_127_sep_0: X
v_sep_fold_right_1143_sep_71_sep_4_sep_121_sep_0_sep_127_sep_1_sep_285_sep_0: X
v_sep_make_list_1030_sep_51_sep_0: X
v_sep_make_list_1030_sep_51_sep_1_sep_67_sep_0: X
v_sep_make_list_1030_sep_51_sep_1_sep_67_sep_1_sep_83_sep_0: X
v_sep_make_list_1030_sep_51_sep_1_sep_67_sep_1_sep_83_sep_1_sep_98_sep_0_sep_217_sep_0: X
v_sep_make_list_1030_sep_51_sep_1_sep_67_sep_1_sep_83_sep_1_sep_98_sep_0_sep_217_sep_1_sep_243_sep_0: X
v_sep_make_list_1030_sep_54_sep_0: X
v_sep_make_list_1030_sep_54_sep_1_sep_57_sep_0: X
..................................................................(0=0) & (v_sep_fail_2169_sep_292_sep_0($231)) -> 1=0.
(($231-1=0) & ($232=0) & ($233<0)) & (v_sep_make_list_1030_sep_51_sep_1_sep_67_sep_0($234,$235)) & (v_sep_fold_right_1143_sep_71_sep_4_sep_121_sep_0_sep_127_sep_1_sep_285_sep_0($235,$232,$233)) -> v_sep_fail_2169_sep_292_sep_0($231).
($236-1>=0) & (v_sep_fold_right_1143_sep_71_sep_1($236)) & (v_sep_fold_right_1143_sep_71_sep_0_sep_141_sep_3_sep_271_sep_0($237,$238)) -> v_sep_fold_right_1143_sep_71_sep_4_sep_121_sep_0_sep_127_sep_1_sep_285_sep_0($236,$237,$238).
(0=0) & (v_sep_fold_right_1143_sep_71_sep_0_sep_141_sep_2($239)) & (v_sep_make_list_1030_sep_51_sep_1_sep_67_sep_0($240,$236)) & (v_sep_fold_right_1143_sep_71_sep_0_sep_141_sep_0_sep_199_sep_1_sep_261_sep_0($241,$242)) & (v_sep_fold_right_1143_sep_71_sep_0_sep_141_sep_1_sep_147_sep_1_sep_189_sep_0($239,$241)) -> v_sep_fold_right_1143_sep_71_sep_0_sep_141_sep_3_sep_271_sep_0($239,$242).
(($243=0) & (-$244+1<=0)) & (v_sep_fold_right_1143_sep_71_sep_1($244)) & (v_sep_fold_right_1143_sep_71_sep_2_sep_79_sep_1_sep_102_sep_0_sep_213_sep_1_sep_247_sep_0($244,$243,$245,$246)) -> v_sep_fold_right_1143_sep_71_sep_0_sep_141_sep_0_sep_199_sep_1_sep_261_sep_0($245,$246).
(0=0) & (v_sep_fold_right_1143_sep_71_sep_1($236)) & (v_sep_make_list_1030_sep_51_sep_1_sep_67_sep_0($240,$236)) & (v_sep_make_list_1030_sep_51_sep_1_sep_67_sep_1_sep_83_sep_1_sep_98_sep_0_sep_217_sep_1_sep_243_sep_0($240,$236,$247,$248,$249)) -> v_sep_fold_right_1143_sep_71_sep_2_sep_79_sep_1_sep_102_sep_0_sep_213_sep_1_sep_247_sep_0($236,$247,$248,$249).
(($250=0) & ($251=0) & ($252=0) & ($253>0) & (-$253+$254-$255=0) & (-$256+$257-1=0) & (-$256+$258-1=0) & (-$253+$259+1=0) & (-$253+$260+1=0) & ($261-$262+1=0)) & (v_sep_make_list_1030_sep_51_sep_1_sep_67_sep_0($253,$262)) & (v_sep_make_list_1030_sep_54_sep_1_sep_57_sep_0($260,$261)) & (v_sep_make_list_1030_sep_51_sep_0($253)) & (v_sep_make_list_1030_sep_51_sep_1_sep_67_sep_1_sep_83_sep_0($253,$262,$250)) & (v_sep_make_list_1030_sep_54_sep_1_sep_57_sep_0($259,$256)) & (v_sep_make_list_1030_sep_51_sep_1_sep_67_sep_1_sep_83_sep_0($253,$258,$252)) & (v_sep_make_list_1030_sep_51_sep_1_sep_67_sep_1_sep_83_sep_1_sep_98_sep_0_sep_217_sep_0($253,$257,$251,$255)) -> v_sep_make_list_1030_sep_51_sep_1_sep_67_sep_1_sep_83_sep_1_sep_98_sep_0_sep_217_sep_1_sep_243_sep_0($253,$262,$250,$255,$254).
(0=0) & (v_sep_make_list_1030_sep_51_sep_1_sep_67_sep_1_sep_83_sep_0($253,$262,$250)) & (v_sep_make_list_1030_sep_51_sep_0($253)) & (v_sep_fold_right_1143_sep_71_sep_2_sep_79_sep_0($262,$250)) & (v_sep_make_list_1030_sep_51_sep_1_sep_67_sep_0($253,$262)) & (v_sep_fold_right_1143_sep_71_sep_2_sep_79_sep_1_sep_102_sep_0_sep_213_sep_0($262,$250,$255)) -> v_sep_make_list_1030_sep_51_sep_1_sep_67_sep_1_sep_83_sep_1_sep_98_sep_0_sep_217_sep_0($253,$262,$250,$255).
(($247=0) & ($236-1>=0)) & (v_sep_fold_right_1143_sep_71_sep_2_sep_79_sep_0($236,$247)) & (v_sep_fold_right_1143_sep_71_sep_1($236)) & (v_sep_fold_right_1143_sep_71_sep_0_sep_141_sep_0_sep_199_sep_0($248)) -> v_sep_fold_right_1143_sep_71_sep_2_sep_79_sep_1_sep_102_sep_0_sep_213_sep_0($236,$247,$248).
(0=0) & (v_sep_fold_right_1143_sep_71_sep_0_sep_141_sep_1_sep_147_sep_1_sep_189_sep_0($263,$245)) & (v_sep_fold_right_1143_sep_71_sep_0_sep_141_sep_2($263)) & (v_sep_make_list_1030_sep_51_sep_1_sep_67_sep_0($240,$236)) -> v_sep_fold_right_1143_sep_71_sep_0_sep_141_sep_0_sep_199_sep_0($245).
((-$264+1<=0) & (-$264+$265+1=0)) & (v_sep_fold_right_1143_sep_71_sep_1($264)) & (v_sep_fold_right_1143_sep_108_sep_4_sep_111_sep_0_sep_157_sep_1_sep_179_sep_0($265,$266,$267)) -> v_sep_fold_right_1143_sep_71_sep_0_sep_141_sep_1_sep_147_sep_1_sep_189_sep_0($266,$267).
($268=0) & (v_sep_fold_right_1143_sep_108_sep_3_sep_159_sep_1_sep_177_sep_0($268,$269,$270)) & (v_sep_fold_right_1143_sep_108_sep_1($268)) -> v_sep_fold_right_1143_sep_108_sep_4_sep_111_sep_0_sep_157_sep_1_sep_179_sep_0($268,$269,$270).
(($268>=0) & (-$268+$271-1=0) & (-$268+$272-1=0)) & (v_sep_fold_right_1143_sep_108_sep_1($268)) & (v_sep_fold_right_1143_sep_71_sep_1($272)) & (v_sep_fold_right_1143_sep_71_sep_3_sep_165_sep_1_sep_171_sep_0($271,$273,$274)) -> v_sep_fold_right_1143_sep_108_sep_3_sep_159_sep_1_sep_177_sep_0($268,$273,$274).
($275-$276=0) & (v_sep_fold_right_1143_sep_71_sep_1($236)) & (v_sep_fold_right_1143_sep_71_sep_3_sep_165_sep_0($236,$276)) & (v_sep_make_list_1030_sep_51_sep_1_sep_67_sep_0($240,$236)) -> v_sep_fold_right_1143_sep_71_sep_3_sep_165_sep_1_sep_171_sep_0($236,$276,$275).
(($236-1>=0) & (-$236+$277+1=0)) & (v_sep_fold_right_1143_sep_108_sep_3_sep_159_sep_0($277,$276)) & (v_sep_fold_right_1143_sep_71_sep_1($236)) -> v_sep_fold_right_1143_sep_71_sep_3_sep_165_sep_0($236,$276).
($268=0) & (v_sep_fold_right_1143_sep_108_sep_4_sep_111_sep_0_sep_157_sep_0($268,$273)) & (v_sep_fold_right_1143_sep_108_sep_1($268)) -> v_sep_fold_right_1143_sep_108_sep_3_sep_159_sep_0($268,$273).
(($268>=0) & (-$268+$278-1=0)) & (v_sep_fold_right_1143_sep_108_sep_1($268)) & (v_sep_fold_right_1143_sep_71_sep_1($278)) & (v_sep_fold_right_1143_sep_71_sep_0_sep_141_sep_1_sep_147_sep_0($269)) -> v_sep_fold_right_1143_sep_108_sep_4_sep_111_sep_0_sep_157_sep_0($268,$269).
(0=0) & (v_sep_fold_right_1143_sep_71_sep_0_sep_141_sep_2($266)) & (v_sep_make_list_1030_sep_51_sep_1_sep_67_sep_0($240,$236)) -> v_sep_fold_right_1143_sep_71_sep_0_sep_141_sep_1_sep_147_sep_0($266).
(-$279+1<=0) & (v_sep_fold_right_1143_sep_71_sep_1($279)) & (v_sep_fold_right_1143_sep_71_sep_4_sep_121_sep_0_sep_127_sep_0($279,$239)) -> v_sep_fold_right_1143_sep_71_sep_0_sep_141_sep_2($239).
($237=0) & (v_sep_fold_right_1143_sep_71_sep_1($236)) & (v_sep_make_list_1030_sep_51_sep_1_sep_67_sep_0($240,$236)) -> v_sep_fold_right_1143_sep_71_sep_4_sep_121_sep_0_sep_127_sep_0($236,$237).
(($268>=0) & (-$268+$280-1=0)) & (v_sep_fold_right_1143_sep_71_sep_1($280)) -> v_sep_fold_right_1143_sep_108_sep_1($268).
(0=0) & (v_sep_make_list_1030_sep_51_sep_0($253)) & (v_sep_fold_right_1143_sep_71_sep_2_sep_79_sep_0($262,$250)) & (v_sep_make_list_1030_sep_51_sep_1_sep_67_sep_0($253,$262)) -> v_sep_make_list_1030_sep_51_sep_1_sep_67_sep_1_sep_83_sep_0($253,$262,$250).
(($247=0) & ($236-1>=0)) & (v_sep_fold_right_1143_sep_71_sep_1($236)) -> v_sep_fold_right_1143_sep_71_sep_2_sep_79_sep_0($236,$247).
(0=0) & (v_sep_make_list_1030_sep_51_sep_1_sep_67_sep_0($281,$236)) -> v_sep_fold_right_1143_sep_71_sep_1($236).
(($253>0) & (-$253+$282+1=0) & (-$262+$283+1=0)) & (v_sep_make_list_1030_sep_54_sep_1_sep_57_sep_0($282,$283)) & (v_sep_make_list_1030_sep_51_sep_0($253)) -> v_sep_make_list_1030_sep_51_sep_1_sep_67_sep_0($253,$262).
(($284=0) & ($285<=0)) & (v_sep_make_list_1030_sep_54_sep_0($285)) -> v_sep_make_list_1030_sep_54_sep_1_sep_57_sep_0($285,$284).
(($285+1>0) & (-$285+$286-1=0)) & (v_sep_make_list_1030_sep_51_sep_0($286)) -> v_sep_make_list_1030_sep_54_sep_0($285).
0=0 -> v_sep_make_list_1030_sep_51_sep_0($253).

          |- P[<make_list_1030@51:0>](<make_list_1030@51:0>:int)
        solution:
          P[<fail_2169@292:0>]($287:bool) = false
          P[<fold_right_1143@108:1>]($396:int) = true
          P[<<fold_right_1143@108:3>@159:0>]($411:int,$413:int) = (0 <= $413)
          P[<<<fold_right_1143@108:3>@159:1>@177:0>]($389:int,$391:int,$393:int) = ($391 <= (2 * $393))
          P[<<<fold_right_1143@108:4>@111:0>@157:0>]($416:int,$418:int) = (0 <= $418)
          P[<<<<fold_right_1143@108:4>@111:0>@157:1>@179:0>]($382:int,$384:int,$386:int) = ($384 <= (2 * $386))
          P[<<<fold_right_1143@71:0>@141:0>@199:0>]($379:int) = (0 <= $379)
          P[<<<<fold_right_1143@71:0>@141:0>@199:1>@261:0>]($313:int,$315:int) = ((2 + $313) <= (2 * $315))
          P[<<<fold_right_1143@71:0>@141:1>@147:0>]($421:int) = (0 <= $421)
          P[<<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>]($318:int,$320:int) = ($318 <= (2 * $320))
          P[<<fold_right_1143@71:0>@141:2>]($310:int) = (0 <= $310)
          P[<<<fold_right_1143@71:0>@141:3>@271:0>]($305:int,$307:int) = (1 <= $307)
          P[<fold_right_1143@71:1>]($302:int) = true
          P[<<fold_right_1143@71:2>@79:0>]($367:int,$369:int) = true
          P[<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>]($372:int,$374:int,$376:int) = (0 <= $376)
          P[<<<<<fold_right_1143@71:2>@79:1>@102:0>@213:1>@247:0>]($323:int,$325:int,$327:int,$329:int) =
          ((2 + $327) <= (2 * $329))
          P[<<fold_right_1143@71:3>@165:0>]($406:int,$408:int) = (0 <= $408)
          P[<<<fold_right_1143@71:3>@165:1>@171:0>]($399:int,$401:int,$403:int) = ($401 <= (2 * $403))
          P[<<<fold_right_1143@71:4>@121:0>@127:0>]($424:int,$426:int) = (0 <= $426)
          P[<<<<fold_right_1143@71:4>@121:0>@127:1>@285:0>]($295:int,$297:int,$299:int) = (1 <= $299)
          P[<make_list_1030@51:0>]($348:int) = true
          P[<<make_list_1030@51:1>@67:0>]($290:int,$292:int) = true
          P[<<<make_list_1030@51:1>@67:1>@83:0>]($351:int,$353:int,$355:int) = true
          P[<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>]($358:int,$360:int,$362:int,$364:int) = (0 <= $364)
          P[<<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:1>@243:0>](
          $332:int,$334:int,$336:int,$338:int,$340:int) = ((2 + $338) <= (2 * $340))
          P[<make_list_1030@54:0>]($429:int) = true
          P[<<make_list_1030@54:1>@57:0>]($343:int,$345:int) = true
        
      end HcSolver.solve_ub(581155)[4] (0.445932 sec.)
      begin HcSolver.check_validity(582704)[4]
        input:
          P[<fail_2169@292:0>](<fail_2169@292:0>:bool)|- bot
          
          P[<<<<fold_right_1143@71:4>@121:0>@127:1>@285:0>](<f_main_2164@289:1>:int,0:int,<f_main_2164@289:3>:int),
          P[<<make_list_1030@51:1>@67:0>](<f_main_2164@289:0>:int,<f_main_2164@289:1>:int),
          ((<f_main_2164@289:3> < 0) && <fail_2169@292:0>) |- P[<fail_2169@292:0>](
          <fail_2169@292:0>:bool)
          
          P[<<<fold_right_1143@71:0>@141:3>@271:0>](<<<fold_right_1143@71:4>@121:0>@127:0>:int,<<<<fold_right_1143@71:4>@121:0>@127:1>@285:0>:int),
          P[<fold_right_1143@71:1>](<fold_right_1143@71:1>:int), (<fold_right_1143@71:1> >= 1)
          |- P[<<<<fold_right_1143@71:4>@121:0>@127:1>@285:0>](<fold_right_1143@71:1>:int,
                                                               <<<fold_right_1143@71:4>@121:0>@127:0>:int,
                                                               <<<<fold_right_1143@71:4>@121:0>@127:1>@285:0>:int)
          
          P[<<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>](<<fold_right_1143@71:0>@141:2>:int,var322:int),
          P[<<<<fold_right_1143@71:0>@141:0>@199:1>@261:0>](var322:int,<<<fold_right_1143@71:0>@141:3>@271:0>:int),
          P[<<make_list_1030@51:1>@67:0>](<f_main_2163@123:0>:int,<fold_right_1143@71:1>:int),
          P[<<fold_right_1143@71:0>@141:2>](<<fold_right_1143@71:0>@141:2>:int)|- P[<<<fold_right_1143@71:0>@141:3>@271:0>](
          <<fold_right_1143@71:0>@141:2>:int,<<<fold_right_1143@71:0>@141:3>@271:0>:int)
          
          P[<<<<<fold_right_1143@71:2>@79:1>@102:0>@213:1>@247:0>](var325:int,0:int,<<<fold_right_1143@71:0>@141:0>@199:0>:int,<<<<fold_right_1143@71:0>@141:0>@199:1>@261:0>:int),
          P[<fold_right_1143@71:1>](var325:int), (1 <= var325)
          |- P[<<<<fold_right_1143@71:0>@141:0>@199:1>@261:0>](<<<fold_right_1143@71:0>@141:0>@199:0>:int,
                                                               <<<<fold_right_1143@71:0>@141:0>@199:1>@261:0>:int)
          
          P[<<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:1>@243:0>](
          <f_main_2163@123:0>:int,<fold_right_1143@71:1>:int,<<fold_right_1143@71:2>@79:0>:int,<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>:int,<<<<<fold_right_1143@71:2>@79:1>@102:0>@213:1>@247:0>:int),
          P[<<make_list_1030@51:1>@67:0>](<f_main_2163@123:0>:int,<fold_right_1143@71:1>:int),
          P[<fold_right_1143@71:1>](<fold_right_1143@71:1>:int)|- P[<<<<<fold_right_1143@71:2>@79:1>@102:0>@213:1>@247:0>](
          <fold_right_1143@71:1>:int,<<fold_right_1143@71:2>@79:0>:int,
          <<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>:int,<<<<<fold_right_1143@71:2>@79:1>@102:0>@213:1>@247:0>:int)
          
          P[<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>](<make_list_1030@51:0>:int,(
                                                                1 + var326):int,0:int,<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>:int),
          P[<<<make_list_1030@51:1>@67:1>@83:0>](<make_list_1030@51:0>:int,(
                                                 1 + var326):int,0:int),
          P[<<make_list_1030@54:1>@57:0>]((-1 + <make_list_1030@51:0>):int,var326:int),
          P[<<<make_list_1030@51:1>@67:1>@83:0>](<make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int),
          P[<make_list_1030@51:0>](<make_list_1030@51:0>:int),
          P[<<make_list_1030@54:1>@57:0>]((-1 + <make_list_1030@51:0>):int,(
                                          -1 + <<make_list_1030@51:1>@67:0>):int),
          P[<<make_list_1030@51:1>@67:0>](<make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int),
          ((<<<make_list_1030@51:1>@67:1>@83:0> = 0) &&
           ((<make_list_1030@51:0> > 0) &&
            (<<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:1>@243:0> =
             (<make_list_1030@51:0> + <<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>))))
          |- P[<<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:1>@243:0>](
          <make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,
          <<<make_list_1030@51:1>@67:1>@83:0>:int,<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>:int,
          <<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:1>@243:0>:int)
          
          P[<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>](<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int,<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>:int),
          P[<<make_list_1030@51:1>@67:0>](<make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int),
          P[<<fold_right_1143@71:2>@79:0>](<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int),
          P[<make_list_1030@51:0>](<make_list_1030@51:0>:int),
          P[<<<make_list_1030@51:1>@67:1>@83:0>](<make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int)|- P[<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>](
          <make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,
          <<<make_list_1030@51:1>@67:1>@83:0>:int,<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>:int)
          
          P[<<<fold_right_1143@71:0>@141:0>@199:0>](<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>:int),
          P[<fold_right_1143@71:1>](<fold_right_1143@71:1>:int),
          P[<<fold_right_1143@71:2>@79:0>](<fold_right_1143@71:1>:int,<<fold_right_1143@71:2>@79:0>:int),
          ((<<fold_right_1143@71:2>@79:0> = 0) && (<fold_right_1143@71:1> >= 1))
          |- P[<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>](<fold_right_1143@71:1>:int,
                                                              <<fold_right_1143@71:2>@79:0>:int,
                                                              <<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>:int)
          
          P[<<make_list_1030@51:1>@67:0>](<f_main_2163@123:0>:int,<fold_right_1143@71:1>:int),
          P[<<fold_right_1143@71:0>@141:2>](var329:int),
          P[<<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>](var329:int,<<<fold_right_1143@71:0>@141:0>@199:0>:int)|- P[<<<fold_right_1143@71:0>@141:0>@199:0>](
          <<<fold_right_1143@71:0>@141:0>@199:0>:int)
          
          P[<<<<fold_right_1143@108:4>@111:0>@157:1>@179:0>]((-1 + var330):int,<<<fold_right_1143@71:0>@141:1>@147:0>:int,<<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>:int),
          P[<fold_right_1143@71:1>](var330:int), (1 <= var330)
          |- P[<<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>](<<<fold_right_1143@71:0>@141:1>@147:0>:int,
                                                               <<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>:int)
          
          P[<fold_right_1143@108:1>](<fold_right_1143@108:1>:int),
          P[<<<fold_right_1143@108:3>@159:1>@177:0>](<fold_right_1143@108:1>:int,<<<fold_right_1143@108:4>@111:0>@157:0>:int,<<<<fold_right_1143@108:4>@111:0>@157:1>@179:0>:int),
          (<fold_right_1143@108:1> = 0)
          |- P[<<<<fold_right_1143@108:4>@111:0>@157:1>@179:0>](<fold_right_1143@108:1>:int,
                                                                <<<fold_right_1143@108:4>@111:0>@157:0>:int,
                                                                <<<<fold_right_1143@108:4>@111:0>@157:1>@179:0>:int)
          
          P[<<<fold_right_1143@71:3>@165:1>@171:0>]((1 + <fold_right_1143@108:1>):int,<<fold_right_1143@108:3>@159:0>:int,<<<fold_right_1143@108:3>@159:1>@177:0>:int),
          P[<fold_right_1143@71:1>]((1 + <fold_right_1143@108:1>):int),
          P[<fold_right_1143@108:1>](<fold_right_1143@108:1>:int), (<fold_right_1143@108:1> >= 0)
          |- P[<<<fold_right_1143@108:3>@159:1>@177:0>](<fold_right_1143@108:1>:int,
                                                        <<fold_right_1143@108:3>@159:0>:int,
                                                        <<<fold_right_1143@108:3>@159:1>@177:0>:int)
          
          P[<<make_list_1030@51:1>@67:0>](<f_main_2163@123:0>:int,<fold_right_1143@71:1>:int),
          P[<<fold_right_1143@71:3>@165:0>](<fold_right_1143@71:1>:int,<<fold_right_1143@71:3>@165:0>:int),
          P[<fold_right_1143@71:1>](<fold_right_1143@71:1>:int),
          (<<<fold_right_1143@71:3>@165:1>@171:0> = <<fold_right_1143@71:3>@165:0>)
          |- P[<<<fold_right_1143@71:3>@165:1>@171:0>](<fold_right_1143@71:1>:int,
                                                       <<fold_right_1143@71:3>@165:0>:int,
                                                       <<<fold_right_1143@71:3>@165:1>@171:0>:int)
          
          P[<fold_right_1143@71:1>](<fold_right_1143@71:1>:int),
          P[<<fold_right_1143@108:3>@159:0>]((-1 + <fold_right_1143@71:1>):int,<<fold_right_1143@71:3>@165:0>:int),
          (<fold_right_1143@71:1> >= 1)
          |- P[<<fold_right_1143@71:3>@165:0>](<fold_right_1143@71:1>:int,
                                               <<fold_right_1143@71:3>@165:0>:int)
          
          P[<fold_right_1143@108:1>](<fold_right_1143@108:1>:int),
          P[<<<fold_right_1143@108:4>@111:0>@157:0>](<fold_right_1143@108:1>:int,<<fold_right_1143@108:3>@159:0>:int),
          (<fold_right_1143@108:1> = 0)
          |- P[<<fold_right_1143@108:3>@159:0>](<fold_right_1143@108:1>:int,
                                                <<fold_right_1143@108:3>@159:0>:int)
          
          P[<<<fold_right_1143@71:0>@141:1>@147:0>](<<<fold_right_1143@108:4>@111:0>@157:0>:int),
          P[<fold_right_1143@71:1>]((1 + <fold_right_1143@108:1>):int),
          P[<fold_right_1143@108:1>](<fold_right_1143@108:1>:int), (<fold_right_1143@108:1> >= 0)
          |- P[<<<fold_right_1143@108:4>@111:0>@157:0>](<fold_right_1143@108:1>:int,
                                                        <<<fold_right_1143@108:4>@111:0>@157:0>:int)
          
          P[<<make_list_1030@51:1>@67:0>](<f_main_2163@123:0>:int,<fold_right_1143@71:1>:int),
          P[<<fold_right_1143@71:0>@141:2>](<<<fold_right_1143@71:0>@141:1>@147:0>:int)|- P[<<<fold_right_1143@71:0>@141:1>@147:0>](
          <<<fold_right_1143@71:0>@141:1>@147:0>:int)
          
          P[<<<fold_right_1143@71:4>@121:0>@127:0>](var333:int,<<fold_right_1143@71:0>@141:2>:int),
          P[<fold_right_1143@71:1>](var333:int), (1 <= var333)
          |- P[<<fold_right_1143@71:0>@141:2>](<<fold_right_1143@71:0>@141:2>:int)
          
          P[<<make_list_1030@51:1>@67:0>](<f_main_2163@123:0>:int,<fold_right_1143@71:1>:int),
          P[<fold_right_1143@71:1>](<fold_right_1143@71:1>:int), (<<<fold_right_1143@71:4>@121:0>@127:0> = 0)
          |- P[<<<fold_right_1143@71:4>@121:0>@127:0>](<fold_right_1143@71:1>:int,
                                                       <<<fold_right_1143@71:4>@121:0>@127:0>:int)
          
          P[<fold_right_1143@71:1>]((1 + <fold_right_1143@108:1>):int), (
          <fold_right_1143@108:1> >= 0) |- P[<fold_right_1143@108:1>](
          <fold_right_1143@108:1>:int)
          
          P[<<make_list_1030@51:1>@67:0>](<make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int),
          P[<<fold_right_1143@71:2>@79:0>](<<make_list_1030@51:1>@67:0>:int,<<<make_list_1030@51:1>@67:1>@83:0>:int),
          P[<make_list_1030@51:0>](<make_list_1030@51:0>:int)|- P[<<<make_list_1030@51:1>@67:1>@83:0>](
          <make_list_1030@51:0>:int,<<make_list_1030@51:1>@67:0>:int,
          <<<make_list_1030@51:1>@67:1>@83:0>:int)
          
          P[<fold_right_1143@71:1>](<fold_right_1143@71:1>:int),
          ((<<fold_right_1143@71:2>@79:0> = 0) && (<fold_right_1143@71:1> >= 1))
          |- P[<<fold_right_1143@71:2>@79:0>](<fold_right_1143@71:1>:int,
                                              <<fold_right_1143@71:2>@79:0>:int)
          
          P[<<make_list_1030@51:1>@67:0>](<f_main_2161@69:0>:int,<fold_right_1143@71:1>:int)|- P[<fold_right_1143@71:1>](
          <fold_right_1143@71:1>:int)
          
          P[<make_list_1030@51:0>](<make_list_1030@51:0>:int),
          P[<<make_list_1030@54:1>@57:0>]((-1 + <make_list_1030@51:0>):int,(
                                          -1 + <<make_list_1030@51:1>@67:0>):int), (
          <make_list_1030@51:0> > 0)
          |- P[<<make_list_1030@51:1>@67:0>](<make_list_1030@51:0>:int,
                                             <<make_list_1030@51:1>@67:0>:int)
          
          P[<make_list_1030@54:0>](<make_list_1030@54:0>:int),
          ((<<make_list_1030@54:1>@57:0> = 0) && (<make_list_1030@54:0> <= 0))
          |- P[<<make_list_1030@54:1>@57:0>](<make_list_1030@54:0>:int,
                                             <<make_list_1030@54:1>@57:0>:int)
          
          P[<make_list_1030@51:0>]((1 + <make_list_1030@54:0>):int), (
          (1 + <make_list_1030@54:0>) > 0) |- P[<make_list_1030@54:0>](
          <make_list_1030@54:0>:int)
          
          |- P[<make_list_1030@51:0>](<make_list_1030@51:0>:int)
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        
      end HcSolver.check_validity(582704)[4] (0.021996 sec.)
      solution:
        P[<fail_2169@292:0>]($287:bool) = false
        P[<fold_right_1143@108:1>]($396:int) = true
        P[<<fold_right_1143@108:3>@159:0>]($411:int,$413:int) = (0 <= $413)
        P[<<<fold_right_1143@108:3>@159:1>@177:0>]($389:int,$391:int,$393:int) = ($391 <= (2 * $393))
        P[<<<fold_right_1143@108:4>@111:0>@157:0>]($416:int,$418:int) = (0 <= $418)
        P[<<<<fold_right_1143@108:4>@111:0>@157:1>@179:0>]($382:int,$384:int,$386:int) = ($384 <= (2 * $386))
        P[<<<fold_right_1143@71:0>@141:0>@199:0>]($379:int) = (0 <= $379)
        P[<<<<fold_right_1143@71:0>@141:0>@199:1>@261:0>]($313:int,$315:int) = ((2 + $313) <= (2 * $315))
        P[<<<fold_right_1143@71:0>@141:1>@147:0>]($421:int) = (0 <= $421)
        P[<<<<fold_right_1143@71:0>@141:1>@147:1>@189:0>]($318:int,$320:int) = ($318 <= (2 * $320))
        P[<<fold_right_1143@71:0>@141:2>]($310:int) = (0 <= $310)
        P[<<<fold_right_1143@71:0>@141:3>@271:0>]($305:int,$307:int) = (1 <= $307)
        P[<fold_right_1143@71:1>]($302:int) = true
        P[<<fold_right_1143@71:2>@79:0>]($367:int,$369:int) = true
        P[<<<<fold_right_1143@71:2>@79:1>@102:0>@213:0>]($372:int,$374:int,$376:int) = (0 <= $376)
        P[<<<<<fold_right_1143@71:2>@79:1>@102:0>@213:1>@247:0>]($323:int,$325:int,$327:int,$329:int) =
        ((2 + $327) <= (2 * $329))
        P[<<fold_right_1143@71:3>@165:0>]($406:int,$408:int) = (0 <= $408)
        P[<<<fold_right_1143@71:3>@165:1>@171:0>]($399:int,$401:int,$403:int) = ($401 <= (2 * $403))
        P[<<<fold_right_1143@71:4>@121:0>@127:0>]($424:int,$426:int) = (0 <= $426)
        P[<<<<fold_right_1143@71:4>@121:0>@127:1>@285:0>]($295:int,$297:int,$299:int) = (1 <= $299)
        P[<make_list_1030@51:0>]($348:int) = true
        P[<<make_list_1030@51:1>@67:0>]($290:int,$292:int) = true
        P[<<<make_list_1030@51:1>@67:1>@83:0>]($351:int,$353:int,$355:int) = true
        P[<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:0>]($358:int,$360:int,$362:int,$364:int) = (0 <= $364)
        P[<<<<<<make_list_1030@51:1>@67:1>@83:1>@98:0>@217:1>@243:0>](
        $332:int,$334:int,$336:int,$338:int,$340:int) = ((2 + $338) <= (2 * $340))
        P[<make_list_1030@54:0>]($429:int) = true
        P[<<make_list_1030@54:1>@57:0>]($343:int,$345:int) = true
    end YhornInterface.solve(581154)[3] (0.469928 sec.)
    
  end RefTypeInfer.infer_etrs(30291)[2] (3.483470 sec.)
  refinement types:
    main_2152: X
    f_2165: v1:int -> X
    main_1043: v1:int -> (v2:unit -> X) -> X
    make_list_1030: v1:int ->
                    (v2:{v2:int | (v2 = 1)} ->
                     (v3:int -> ((v4:{v4:int | (0 <= v4)} -> (v5:{v5:int | (1 <= v5)} -> X) -> X) -> X) -> X) -> X) ->
                    X
    make_list_1030: v1:int ->
                    (v2:{v2:int | (0 = v2)} -> (v3:int -> ((v4:int -> (v5:int -> X) -> X) -> X) -> X) -> X) -> X
    f_make_list_2155: v1:int ->
                      (v2:int -> (v3:int -> ((v4:int -> (v5:int -> X) -> X) -> X) -> X) -> X) ->
                      v11:int -> (v12:int -> ((v13:int -> (v14:int -> X) -> X) -> X) -> X) -> X
    cons_make_list_1161: v1:int ->
                         (v2:int -> (v3:int -> X) -> X) ->
                         v6:int ->
                         (v7:int -> ((v8:int -> (v9:int -> X) -> X) -> X) -> X) ->
                         (v14:int -> (v15:int -> ((v16:int -> (v17:int -> X) -> X) -> X) -> X) -> X) -> X
    f_main_2161: v1:int -> (v2:unit -> X) -> v4:int -> (v5:int -> ((v6:int -> (v7:int -> X) -> X) -> X) -> X) -> X
    fold_right_1143: ((v1:{v1:int | (0 <= v1)} -> (v2:{v2:int | (1 <= v2)} -> X) -> X) ->
                      (v5:{v5:int | (0 <= v5)} -> (v6:{v6:int | (0 <= v6)} -> X) -> X) ->
                      v9:{v9:int | (0 <= v9)} -> (v10:{v10:int | (1 <= v10)} -> X) -> X) ->
                     v13:{v13:int | (v13 <= 1)} ->
                     (v14:int -> ((v15:{v15:int | (0 <= v15)} -> (v16:{v16:int | (1 <= v16)} -> X) -> X) -> X) -> X) ->
                     (v21:{v21:int | (0 <= v21)} -> (v22:{v22:int | (0 <= v22)} -> X) -> X) ->
                     ((v25:{v25:int | (0 <= v25)} -> (v26:{v26:int | (v13 <= v26)} -> X) -> X) -> X) -> X
    br_fold_right_2167: v1:bool ->
                        ((v2:int -> (v3:int -> X) -> X) ->
                         (v6:int -> (v7:int -> X) -> X) -> v10:int -> (v11:int -> X) -> X) ->
                        v14:int ->
                        (v15:int -> ((v16:int -> (v17:int -> X) -> X) -> X) -> X) ->
                        (v22:int -> (v23:int -> X) -> X) -> ((v26:int -> (v27:int -> X) -> X) -> X) -> X
    f_cons_make_list_2154: v1:int ->
                           v2:int ->
                           (v3:int -> (v4:int -> X) -> X) ->
                           (v7:int -> ((v8:int -> (v9:int -> X) -> X) -> X) -> X) ->
                           v14:int -> ((v15:int -> (v16:int -> X) -> X) -> X) -> X
    f_fold_right_2157: v1:int ->
                       ((v2:int -> (v3:int -> X) -> X) ->
                        (v6:int -> (v7:int -> X) -> X) -> v10:int -> (v11:int -> X) -> X) ->
                       (v14:int -> (v15:int -> X) -> X) ->
                       ((v18:int -> (v19:int -> X) -> X) -> X) ->
                       (v23:int -> ((v24:int -> (v25:int -> X) -> X) -> X) -> X) ->
                       (v30:int -> (v31:int -> X) -> X) -> X
    fold_right_1143: ((v1:int -> (v2:int -> X) -> X) -> (v5:int -> (v6:int -> X) -> X) -> v9:int -> (v10:int -> X) -> X)
                     ->
                     v13:int ->
                     (v14:int -> ((v15:int -> (v16:int -> X) -> X) -> X) -> X) ->
                     (v21:{v21:int | (0 <= v21)} -> (v22:{v22:int | (0 <= v22)} -> X) -> X) ->
                     ((v25:{v25:int | (0 <= v25)} -> (v26:{v26:int | (v13 <= v26)} -> X) -> X) -> X) -> X
    f_fold_right_2159: v1:int ->
                       ((v2:int -> (v3:int -> X) -> X) ->
                        (v6:int -> (v7:int -> X) -> X) -> v10:int -> (v11:int -> X) -> X) ->
                       ((v14:int -> (v15:int -> X) -> X) -> X) ->
                       (v19:int -> (v20:int -> X) -> X) -> (v23:int -> (v24:int -> X) -> X) -> X
    f_main_2163: v1:int -> v2:int -> (v3:unit -> X) -> (v5:int -> (v6:int -> X) -> X) -> X
    compose_1142: (v1:int -> (v2:int -> X) -> X) -> (v5:int -> (v6:int -> X) -> X) -> v9:int -> (v10:int -> X) -> X
    f_main_2162: v1:int -> v2:int -> v3:int -> (v4:int -> X) -> X
    f_compose_2160: v1:int -> (v2:int -> (v3:int -> X) -> X) -> (v6:int -> X) -> v8:int -> X
    f_make_list_2156: v1:int -> v2:int -> v3:int -> (v4:int -> X) -> X
    f_main_2164: v1:int -> v2:int -> (v3:unit -> X) -> v5:int -> X
    fail_2169: v1:{v1:bool | false} -> (v2:unit -> X) -> X
    f_2166: var1025:int -> var1024:unit -> X
    f_fold_right_2158: var1040:int ->
                       (var1039:int -> ((var1038:int -> (var1037:int -> X) -> X) -> X) -> X) ->
                       var1032:int -> ((var1031:int -> (var1030:int -> X) -> X) -> X) -> X
    f_make_list_2153: var1048:int -> var1047:int -> ((var1046:int -> (var1045:int -> X) -> X) -> X) -> X
  abstraction types:
    main_2152: X
    f_2165: v1:int -> X
    main_1043: v1:int -> (v2:unit -> X) -> X
    make_list_1030: var1049:int ->
                    (var1050:int[var1050 -> (var1050 = 1),
                                 var1050 -> (0 = var1050)] ->
                     (var1051:int ->
                      ((var1052:int[var1052 -> (0 <= var1052)] -> (var1053:int[var1053 -> (
                                                                    1 <= var1053)] -> X) -> X) -> X) -> X) -> X) -> X
    f_make_list_2155: v1:int ->
                      (v2:int -> (v3:int -> ((v4:int -> (v5:int -> X) -> X) -> X) -> X) -> X) ->
                      v11:int -> (v12:int -> ((v13:int -> (v14:int -> X) -> X) -> X) -> X) -> X
    cons_make_list_1161: v1:int ->
                         (v2:int -> (v3:int -> X) -> X) ->
                         v6:int ->
                         (v7:int -> ((v8:int -> (v9:int -> X) -> X) -> X) -> X) ->
                         (v14:int -> (v15:int -> ((v16:int -> (v17:int -> X) -> X) -> X) -> X) -> X) -> X
    f_main_2161: v1:int -> (v2:unit -> X) -> v4:int -> (v5:int -> ((v6:int -> (v7:int -> X) -> X) -> X) -> X) -> X
    fold_right_1143: ((var1060:int[var1060 -> (0 <= var1060)] -> (var1061:int[var1061 -> (
                                                                    1 <= var1061)] -> X) -> X) ->
                      (var1064:int[var1064 -> (0 <= var1064)] -> (var1065:int[var1065 -> (
                                                                    0 <= var1065)] -> X) -> X) ->
                      var1068:int[var1068 -> (0 <= var1068)] -> (var1069:int[var1069 -> (
                                                                    1 <= var1069)] -> X) -> X) ->
                     var1072:int[var1072 -> (var1072 <= 1)] ->
                     (var1073:int ->
                      ((var1074:int[var1074 -> (0 <= var1074)] -> (var1075:int[var1075 -> (
                                                                    1 <= var1075)] -> X) -> X) -> X) -> X) ->
                     (var1080:int[var1080 -> (0 <= var1080)] -> (var1081:int[var1081 -> (
                                                                    0 <= var1081)] -> X) -> X) ->
                     ((var1084:int[var1084 -> (0 <= var1084)] ->
                       (var1085:int[var1085 -> (var1072 <= var1085)] -> X) -> X) -> X) -> X
    br_fold_right_2167: v1:bool ->
                        ((v2:int -> (v3:int -> X) -> X) ->
                         (v6:int -> (v7:int -> X) -> X) -> v10:int -> (v11:int -> X) -> X) ->
                        v14:int ->
                        (v15:int -> ((v16:int -> (v17:int -> X) -> X) -> X) -> X) ->
                        (v22:int -> (v23:int -> X) -> X) -> ((v26:int -> (v27:int -> X) -> X) -> X) -> X
    f_cons_make_list_2154: v1:int ->
                           v2:int ->
                           (v3:int -> (v4:int -> X) -> X) ->
                           (v7:int -> ((v8:int -> (v9:int -> X) -> X) -> X) -> X) ->
                           v14:int -> ((v15:int -> (v16:int -> X) -> X) -> X) -> X
    f_fold_right_2157: v1:int ->
                       ((v2:int -> (v3:int -> X) -> X) ->
                        (v6:int -> (v7:int -> X) -> X) -> v10:int -> (v11:int -> X) -> X) ->
                       (v14:int -> (v15:int -> X) -> X) ->
                       ((v18:int -> (v19:int -> X) -> X) -> X) ->
                       (v23:int -> ((v24:int -> (v25:int -> X) -> X) -> X) -> X) ->
                       (v30:int -> (v31:int -> X) -> X) -> X
    f_fold_right_2159: v1:int ->
                       ((v2:int -> (v3:int -> X) -> X) ->
                        (v6:int -> (v7:int -> X) -> X) -> v10:int -> (v11:int -> X) -> X) ->
                       ((v14:int -> (v15:int -> X) -> X) -> X) ->
                       (v19:int -> (v20:int -> X) -> X) -> (v23:int -> (v24:int -> X) -> X) -> X
    f_main_2163: v1:int -> v2:int -> (v3:unit -> X) -> (v5:int -> (v6:int -> X) -> X) -> X
    compose_1142: (v1:int -> (v2:int -> X) -> X) -> (v5:int -> (v6:int -> X) -> X) -> v9:int -> (v10:int -> X) -> X
    f_main_2162: v1:int -> v2:int -> v3:int -> (v4:int -> X) -> X
    f_compose_2160: v1:int -> (v2:int -> (v3:int -> X) -> X) -> (v6:int -> X) -> v8:int -> X
    f_make_list_2156: v1:int -> v2:int -> v3:int -> (v4:int -> X) -> X
    f_main_2164: v1:int -> v2:int -> (v3:unit -> X) -> v5:int -> X
    fail_2169: v1:bool -> (v2:unit -> X) -> X
    f_2166: var1025:int -> var1024:unit -> X
    f_fold_right_2158: var1040:int ->
                       (var1039:int -> ((var1038:int -> (var1037:int -> X) -> X) -> X) -> X) ->
                       var1032:int -> ((var1031:int -> (var1030:int -> X) -> X) -> X) -> X
    f_make_list_2153: var1048:int -> var1047:int -> ((var1046:int -> (var1045:int -> X) -> X) -> X) -> X
  
end AbsTypeInfer.refine(30290)[1] (3.512466 sec.)
DONE!

Prefix of spurious counter-example::
0; 0; 0; 1; 0; 0; 0; 0; 1; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 1

Program with abstraction types (CEGAR-cycle 2)::
Main: main_2152
  main_2152 -> (rand_int f_2165)
  br_fold_right_2167 b_2168 f_1034 xs1_1035 xs2_1035 init_1036 k_fold_right_1623 when b_2168 ->
      (xs2_1035 0 (f_fold_right_2157 xs1_1035 f_1034 init_1036 k_fold_right_1623 xs2_1035))
  br_fold_right_2167 b_2168 f_1034 xs1_1035 xs2_1035 init_1036 k_fold_right_1623 when (not b_2168) -> _|_
  compose_1142 f_1040 g_1041 x_1042 k_compose_1904 -> (g_1041 x_1042 (f_compose_2160 x_1042 f_1040 k_compose_1904))
  cons_make_list_1161 n_1031 x_1158 xs1_1159 xs2_1159 k_make_list_cons_make_list_1364 ->
      (k_make_list_cons_make_list_1364 (xs1_1159 + 1) (f_cons_make_list_2154 n_1031 xs1_1159 x_1158 xs2_1159))
  f_2165 x_2096 -> (main_1043 x_2096 (f_2166 x_2096))
  f_2166 x_2096 x_2093 -> end
  f_compose_2160 x_1042 f_1040 k_compose_1904 x_1924 -> (f_1040 x_1924 k_compose_1904)
  f_cons_make_list_2154 n_1031 xs1_1159 x_1158 xs2_1159 i_1157 k_make_list_cons_make_list_1391 when (
      i_1157 = 0) -> (k_make_list_cons_make_list_1391 x_1158)
  f_cons_make_list_2154 n_1031 xs1_1159 x_1158 xs2_1159 i_1157 k_make_list_cons_make_list_1391 when (
      not (i_1157 = 0)) -> (xs2_1159 (i_1157 - 1) k_make_list_cons_make_list_1391)
  f_fold_right_2157 xs1_1035 f_1034 init_1036 k_fold_right_1623 xs2_1035 x_1718 ->
      (fold_right_1143 f_1034 (xs1_1035 - 1) (f_fold_right_2158 xs1_1035 xs2_1035) init_1036
        (f_fold_right_2159 xs1_1035 f_1034 k_fold_right_1623 x_1718))
  f_fold_right_2158 xs1_1035 xs2_1035 x_1174 k_fold_right_xs'_1689 -> (xs2_1035 (x_1174 + 1) k_fold_right_xs'_1689)
  f_fold_right_2159 xs1_1035 f_1034 k_fold_right_1623 x_1718 x_1841 -> (k_fold_right_1623 (f_1034 x_1718 x_1841))
  f_main_2161 n_1044 k_main_1938 x1_1947 x2_1947 ->
      (fold_right_1143 compose_1142 x1_1947 x2_1947 (f_main_2162 n_1044 x1_1947)
        (f_main_2163 n_1044 x1_1947 k_main_1938))
  f_main_2162 n_1044 x1_1947 x_1047 k_main_f_2046 -> (k_main_f_2046 x_1047)
  f_main_2163 n_1044 x1_1947 k_main_1938 x_1993 -> (x_1993 0 (f_main_2164 n_1044 x1_1947 k_main_1938))
  f_main_2164 n_1044 x1_1947 k_main_1938 x_2068 when (x_2068 >= 0) -> (k_main_1938 ())
  f_main_2164 n_1044 x1_1947 k_main_1938 x_2068 when (not (x_2068 >= 0)) -> (fail_2169 true k_main_1938)
  f_make_list_2153 n_1031 x_1165 k_make_list_1275 -> _|_
  f_make_list_2155 n_1031 k_make_list_1254 x1_1501 x2_1501 ->
      (cons_make_list_1161 n_1031 (f_make_list_2156 n_1031 x1_1501) x1_1501 x2_1501 k_make_list_1254)
  f_make_list_2156 n_1031 x1_1501 m_1032 k_make_list_1442 -> (k_make_list_1442 (n_1031 + m_1032))
  fail_2169 b k -> {fail} => (k ())
  fold_right_1143 f_1034 xs1_1035 xs2_1035 init_1036 k_fold_right_1623 when (
      xs1_1035 = 0) -> (k_fold_right_1623 init_1036)
  fold_right_1143 f_1034 xs1_1035 xs2_1035 init_1036 k_fold_right_1623 when (
      not (xs1_1035 = 0)) -> (br_fold_right_2167 (1 <= xs1_1035) f_1034 xs1_1035 xs2_1035 init_1036 k_fold_right_1623)
  main_1043 n_1044 k_main_1938 -> (make_list_1030 n_1044 (f_main_2161 n_1044 k_main_1938))
  make_list_1030 n_1031 k_make_list_1254 when (n_1031 <= 0) -> (k_make_list_1254 0 (f_make_list_2153 n_1031))
  make_list_1030 n_1031 k_make_list_1254 when (not (n_1031 <= 0)) ->
      (make_list_1030 (n_1031 - 1) (f_make_list_2155 n_1031 k_make_list_1254))
Types:
  main_2152 : X
  fail_2169 : (x_1:bool[x_1] -> (unit -> X) -> X)
  fold_right_1143 : (((x_3:int[x_3 >= 0] -> (x_5:int[x_5 >= 1] -> X) -> X) ->
                      (x_9:int[x_9 >= 0] -> (x_11:int[x_11 >= 0] -> X) -> X) ->
                      x_14:int[x_14 >= 0] -> (x_16:int[x_16 >= 1] -> X) -> X) ->
                     x_19:int[x_19 <= 1] ->
                     (int -> ((x_24:int[x_24 >= 0] -> (x_26:int[x_26 >= 1] -> X) -> X) -> X) -> X) ->
                     (x_32:int[x_32 >= 0] -> (x_34:int[x_34 >= 0] -> X) -> X) ->
                     ((x_39:int[x_39 >= 0] -> (x_41:int[x_19 <= x_41; x_41 >= 0] -> X) -> X) -> X) -> X)
  make_list_1030 : (int ->
                    (x_3:int[x_3 = 0; x_3 = 1] ->
                     (int -> ((x_8:int[x_8 >= 0] -> (x_10:int[x_10 >= 1] -> X) -> X) -> X) -> X) -> X) -> X)
  
(2-1) Abstracting ... DONE!

(2-2) Checking HORS ... DONE!

Safe!

Refinement Types:
  fold_right: ((Top ->
                    (x_2:(Bottom list) ->
                         (({x_6:int | x_6 >= 0} -> {x_7:int | x_7 >= 0}) ->
                              ({x_4:int | x_4 >= 0} -> {x_5:int | fst x_2 <= x_5})))) /\
               ((({x_27:int | x_27 >= 0} -> {x_28:int | x_28 >= 1}) ->
                     (({x_25:int | x_25 >= 0} -> {x_26:int | x_26 >= 0}) ->
                          ({x_23:int | x_23 >= 0} -> {x_24:int | x_24 >= 1}))) ->
                    (x_11:(({x_19:int | x_19 >= 0} -> {x_20:int | x_20 >= 1}) list|x_17:x_17 <= 1|) ->
                         (({x_15:int | x_15 >= 0} -> {x_16:int | x_16 >= 0}) ->
                              ({x_13:int | x_13 >= 0} -> {x_14:int | fst x_11 <= x_14})))) /\
               ((({x_46:int | x_46 >= 0} -> {x_47:int | x_47 >= 1}) ->
                     (({x_44:int | x_44 >= 0} -> {x_45:int | x_45 >= 0}) ->
                          ({x_42:int | x_42 >= 0} -> {x_43:int | x_43 >= 1}))) ->
                    (x_30:(({x_38:int | x_38 >= 0} -> {x_39:int | x_39 >= 1}) list|x_36:x_36 <= 1|) ->
                         (({x_34:int | x_34 >= 0} -> {x_35:int | x_35 >= 0}) ->
                              ({x_32:int | x_32 >= 0} -> {x_33:int | x_33 >= 0 && fst x_30 <= x_33})))) /\
               ((({x_66:int | x_66 >= 0} -> {x_67:int | x_67 >= 1}) ->
                     (({x_64:int | x_64 >= 0} -> {x_65:int | x_65 >= 0}) ->
                          ({x_62:int | x_62 >= 0} -> {x_63:int | x_63 >= 1}))) ->
                    (x_49:(({x_58:int | x_58 >= 0} -> {x_59:int | x_59 >= 1}) list|x_56:x_56 > 1|) ->
                         (({x_54:int | x_54 >= 0} -> {x_55:int | x_55 >= 0}) ->
                              ({x_51:int | x_51 >= 0} ->
                                   ({x_52:int | fst x_49 <= x_52} \/ {x_53:int | x_53 >= 0 && fst x_49 > x_53}))))) /\
               ((({x_86:int | x_86 >= 0} -> {x_87:int | x_87 >= 1}) ->
                     (({x_84:int | x_84 >= 0} -> {x_85:int | x_85 >= 0}) ->
                          ({x_82:int | x_82 >= 0} -> {x_83:int | x_83 >= 1}))) ->
                    (x_69:(({x_78:int | x_78 >= 0} -> {x_79:int | x_79 >= 1}) list|x_76:x_76 > 1|) ->
                         (({x_74:int | x_74 >= 0} -> {x_75:int | x_75 >= 0}) ->
                              ({x_71:int | x_71 >= 0} ->
                                   ({x_72:int | x_72 >= 0 && fst x_69 <= x_72} \/ 
                                    {x_73:int | x_73 >= 0 && fst x_69 > x_73}))))))
  make_list: (int ->
                  ((({x_4:int | x_4 >= 0} -> {x_5:int | x_5 >= 1}) list|x_2:x_2 = 0|) \/ 
                   (({x_8:int | x_8 >= 0} -> {x_9:int | x_9 >= 1}) list|x_6:x_6 = 1 && x_6 <> 0|) \/ 
                   (({x_12:int | x_12 >= 0} -> {x_13:int | x_13 >= 1}) list|x_10:x_10 <> 1 && x_10 <> 0|)))

cycles: 2
total: 6.209 sec
  abst: 0.036 sec
  mc: 0.431 sec
  refine: 5.379 sec
    exparam: 0.136 sec
