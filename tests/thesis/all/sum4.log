MoCHi: Model Checker for Higher-Order Programs
  TRecS version: 1.30
  OCaml version: 4.00.1
  Command: ../mochi.opt -gchi sum4.ml

parsed::
 let rec sum_1030 n_1031 = if n_1031 <= 0 then
                             0
                           else
                             n_1031 + sum_1030 (n_1031 - 1) 
 in
 let main_1032 n_1033 = if (4 * n_1033) - 6 <= sum_1030 n_1033 then
                          ()
                        else
                          {fail} () 
 in
   ()

set_target::
 let rec sum_1030 n_1031 = if n_1031 <= 0 then
                             0
                           else
                             n_1031 + sum_1030 (n_1031 - 1) 
 in
 let main_1032 n_1033 = if (4 * n_1033) - 6 <= sum_1030 n_1033 then
                          ()
                        else
                          {fail} () 
 in
 let main_1052 = let arg1_1051 = rand_int () 
                 in
                   main_1032 arg1_1051 
 in
   ()

CPS::
 let rec sum_1030 (n_1031:int) (k_sum_1077:(int -> X)) =
   if n_1031 <= 0 then
     k_sum_1077 0
   else
     sum_1030 (n_1031 - 1) (fun x_1081 -> k_sum_1077 (n_1031 + x_1081)) 
 in
 let main_1032 (n_1033:int) (k_main_1109:(unit -> X)) =
   sum_1030 n_1033 (fun x_1113 -> (if (4 * n_1033) - 6 <= x_1113 then
                                     k_main_1109 ()
                                   else
                                     {|fail|} () k_main_1109)) 
 in
   rand_int_cps () (fun x_1140 -> main_1032 x_1140 (fun x_1137 -> end))

Program with abstraction types (CEGAR-cycle 0)::
Main: main_1165
  main_1165 -> (rand_int f_1168)
  f_1168 x_1140 -> (main_1032 x_1140 (f_1169 x_1140))
  f_1169 x_1140 x_1137 -> end
  f_main_1167 n_1033 k_main_1109 x_1113 when (((4 * n_1033) - 6) <= x_1113) -> (k_main_1109 ())
  f_main_1167 n_1033 k_main_1109 x_1113 when (not (((4 * n_1033) - 6) <= x_1113)) -> (fail_1170 true k_main_1109)
  f_sum_1166 n_1031 k_sum_1077 x_1081 -> (k_sum_1077 (n_1031 + x_1081))
  fail_1170 b k -> {fail} => (k ())
  main_1032 n_1033 k_main_1109 -> (sum_1030 n_1033 (f_main_1167 n_1033 k_main_1109))
  sum_1030 n_1031 k_sum_1077 when (n_1031 <= 0) -> (k_sum_1077 0)
  sum_1030 n_1031 k_sum_1077 when (not (n_1031 <= 0)) -> (sum_1030 (n_1031 - 1) (f_sum_1166 n_1031 k_sum_1077))
Types:
  main_1165 : X
  fail_1170 : (x_1:bool[x_1] -> (unit -> X) -> X)
  sum_1030 : (int -> (int -> X) -> X)
  
(0-1) Abstracting ... DONE!

(0-2) Checking HORS ... DONE!

Error trace::
  main_1165 ... --> 
  f_1168 ... --> 
  main_1032 ... --> 
  sum_1030 [1/2] ... --> 
  f_main_1167 [2/2] ... --> 
  fail_1170 ... --> fail -->
  ERROR!

Spurious counter-example::
  0; 0; 0; 0; 1; 0

(0-3) Checking counter-example ... DONE!

(0-4) Discovering predicates ... 
begin AbsTypeInfer.refine(96)[1]
  program:
    main_1165  | true = ((Random.int 0) f_1168)
    f_1168 x_1140 | true = (main_1032 x_1140
                                      (f_1169 x_1140))
    f_1169 x_1140 x_1137 | true = end
    f_main_1167 n_1033 k_main_1109 x_1113 | (((4 * n_1033) - 6) <= x_1113) = (
    k_main_1109 ())
    f_main_1167 n_1033 k_main_1109 x_1113 | (not (((4 * n_1033) - 6) <= x_1113)) = (
    fail_1170 true
              k_main_1109)
    f_sum_1166 n_1031 k_sum_1077 x_1081 | true = (k_sum_1077 (n_1031 + x_1081))
    fail_1170 b k | true = (fail ())
    main_1032 n_1033 k_main_1109 | true = (sum_1030 n_1033
                                                    (f_main_1167 n_1033
                                                                 k_main_1109))
    sum_1030 n_1031 k_sum_1077 | (n_1031 <= 0) = (k_sum_1077 0)
    sum_1030 n_1031 k_sum_1077 | (not (n_1031 <= 0)) = (sum_1030 (n_1031 - 1)
                                                                 (f_sum_1166 n_1031
                                                                    k_sum_1077))
    main_1165:X
    f_1168:int -> X
    f_1169:int -> unit -> X
    f_main_1167:int -> (unit -> X) -> int -> X
    f_sum_1166:int -> (int -> X) -> int -> X
    fail_1170:bool -> (unit -> X) -> X
    main_1032:int -> (unit -> X) -> X
    sum_1030:int -> (int -> X) -> X
  inlined functions: f_1168,f_1169,f_main_1167,f_sum_1166,main_1032
  counterexample: 0:0:0:0:1:0
  error traces:
    [true.nop(<f_1168@4:0> = var2)
     [true.(<main_1032@6:0> = <f_1168@4:0>)
      [true.(<sum_1030@8:0> = <main_1032@6:0>)
       [(<sum_1030@8:0> <= 0).(<<sum_1030@8:1>@11:0> = 0)
        [true.((<f_main_1167@13:0> = <main_1032@6:0>) && (<f_main_1167@13:2> = <<sum_1030@8:1>@11:0>))
         [(not (((4 * <f_main_1167@13:0>) - 6) <= <f_main_1167@13:2>)).(<fail_1170@16:0> = true)[true.error
  begin RefTypeInfer.infer_etrs(97)[2]
    horn clauses:
      P[<fail_1170@16:0>](<fail_1170@16:0>:bool)|- bot
      
      P[<f_main_1167@13:2>](<f_main_1167@13:0>:int,<f_main_1167@13:2>:int),
      (((4 * <f_main_1167@13:0>) > (6 + <f_main_1167@13:2>)) && <fail_1170@16:0>)
      |- P[<fail_1170@16:0>](<fail_1170@16:0>:bool)
      
      P[<main_1032@6:0>](<f_main_1167@13:0>:int),
      P[<<sum_1030@8:1>@11:0>](<f_main_1167@13:0>:int,<f_main_1167@13:2>:int)|- P[<f_main_1167@13:2>](
      <f_main_1167@13:0>:int,<f_main_1167@13:2>:int)
      
      P[<sum_1030@8:0>](<sum_1030@8:0>:int), ((<<sum_1030@8:1>@11:0> = 0) && (<sum_1030@8:0> <= 0))
      |- P[<<sum_1030@8:1>@11:0>](<sum_1030@8:0>:int,<<sum_1030@8:1>@11:0>:int)
      
      P[<main_1032@6:0>](<sum_1030@8:0>:int)|- P[<sum_1030@8:0>](<sum_1030@8:0>:int)
      
      P[<f_1168@4:0>](<main_1032@6:0>:int)|- P[<main_1032@6:0>](<main_1032@6:0>:int)
      
      |- P[<f_1168@4:0>](<f_1168@4:0>:int)
    call trees:
      <main_1165@1>
        <f_1168@4>
          <main_1032@6>
            <sum_1030@8>
            </<sum_1030@8:1>@11>
            <f_main_1167@13>
              <fail_1170@16>
    inlined horn clauses:
      P[<fail_1170@16:0>](<fail_1170@16:0>:bool)|- bot
      
      P[<<sum_1030@8:1>@11:0>](<f_main_1167@13:0>:int,<f_main_1167@13:2>:int),
      (((4 * <f_main_1167@13:0>) > (6 + <f_main_1167@13:2>)) && <fail_1170@16:0>)
      |- P[<fail_1170@16:0>](<fail_1170@16:0>:bool)
      
      P[<sum_1030@8:0>](<sum_1030@8:0>:int), ((<<sum_1030@8:1>@11:0> = 0) && (<sum_1030@8:0> <= 0))
      |- P[<<sum_1030@8:1>@11:0>](<sum_1030@8:0>:int,<<sum_1030@8:1>@11:0>:int)
      
      |- P[<sum_1030@8:0>](<sum_1030@8:0>:int)
    begin ParamSubstInfer.infer(952)[3]
      
    end ParamSubstInfer.infer(952)[3] (0.014998 sec.)
    inferred extra parameters:
      
    begin RefTypeInfer.elim_coeffs(954)[3]
      
    end RefTypeInfer.elim_coeffs(954)[3] (0.000000 sec.)
    begin GenHcSolver.solve(1123)[3]
      Horn clauses:
        P[<fail_1170@16:0>](<fail_1170@16:0>:bool)|- bot
        
        P[<<sum_1030@8:1>@11:0>](<f_main_1167@13:0>:int,<f_main_1167@13:2>:int),
        (((4 * <f_main_1167@13:0>) > (6 + <f_main_1167@13:2>)) && <fail_1170@16:0>)
        |- P[<fail_1170@16:0>](<fail_1170@16:0>:bool)
        
        P[<sum_1030@8:0>](<sum_1030@8:0>:int), ((<<sum_1030@8:1>@11:0> = 0) && (<sum_1030@8:0> <= 0))
        |- P[<<sum_1030@8:1>@11:0>](<sum_1030@8:0>:int,<<sum_1030@8:1>@11:0>:int)
        
        |- P[<sum_1030@8:0>](<sum_1030@8:0>:int)
      lower bounds:
        P[<sum_1030@8:0>](<sum_1030@8:0>:int) = true
        P[<<sum_1030@8:1>@11:0>](<sum_1030@8:0>:int,<<sum_1030@8:1>@11:0>:int) =
        ((<<sum_1030@8:1>@11:0> = 0) && (<sum_1030@8:0> <= 0))
        P[<fail_1170@16:0>](<fail_1170@16:0>:bool) = false
      upper bounds:
        P[<fail_1170@16:0>](var4:bool) = true
      begin GenHcSolver.classify_pids(2277)[4]
        output:
          [<fail_1170@16:0>]
      end GenHcSolver.classify_pids(2277)[4] (0.000000 sec.)
      lb:false
      nub:false
      begin ApronInterface.convex_hull_interpolate(2280)[4]
        lb:false
        nub:false
        lb':false
        nub':false
        begin InterpProver.interpolate(2281)[5]
          begin InterpProver.interpolate_fresh(2282)[6]
            begin InterpProver.interpolate_log(2283)[7]
              input1: false
              input2: false
              begin InterpProver.interpolate_check(2284)[8]
                begin InterpProver.interpolate_simplify(2285)[9]
                  begin InterpProver.interpolate_quick(2298)[10]
                    
                  end InterpProver.interpolate_quick(2298)[10] (0.000000 sec.)
                  begin minimizing # of disjunctions(2302)[10]
                    input: false
                    output: false
                  end minimizing # of disjunctions(2302)[10] (0.000000 sec.)
                  
                end InterpProver.interpolate_simplify(2285)[9] (0.000000 sec.)
                
              end InterpProver.interpolate_check(2284)[8] (0.000000 sec.)
              output: false
            end InterpProver.interpolate_log(2283)[7] (0.000000 sec.)
            
          end InterpProver.interpolate_fresh(2282)[6] (0.000000 sec.)
          
        end InterpProver.interpolate(2281)[5] (0.000000 sec.)
        output:
          P[<fail_1170@16:0>](<fail_1170@16:0>:bool) = false
      end ApronInterface.convex_hull_interpolate(2280)[4] (0.000000 sec.)
      Horn clauses:
        P[<<sum_1030@8:1>@11:0>](<f_main_1167@13:0>:int,<f_main_1167@13:2>:int),
        ((4 * <f_main_1167@13:0>) > (6 + <f_main_1167@13:2>)) |- bot
        
        P[<sum_1030@8:0>](<sum_1030@8:0>:int), ((<<sum_1030@8:1>@11:0> = 0) && (<sum_1030@8:0> <= 0))
        |- P[<<sum_1030@8:1>@11:0>](<sum_1030@8:0>:int,<<sum_1030@8:1>@11:0>:int)
        
        |- P[<sum_1030@8:0>](<sum_1030@8:0>:int)
      lower bounds:
        P[<sum_1030@8:0>](<sum_1030@8:0>:int) = true
        P[<<sum_1030@8:1>@11:0>](<sum_1030@8:0>:int,<<sum_1030@8:1>@11:0>:int) =
        ((<<sum_1030@8:1>@11:0> = 0) && (<sum_1030@8:0> <= 0))
      upper bounds:
        P[<<sum_1030@8:1>@11:0>](var5:int,var6:int) = ((4 * var5) <= (6 + var6))
      begin GenHcSolver.classify_pids(3338)[4]
        output:
          [<<sum_1030@8:1>@11:0>]
      end GenHcSolver.classify_pids(3338)[4] (0.000000 sec.)
      lb:((<<sum_1030@8:1>@11:0> = 0) && (<sum_1030@8:0> <= 0))
      nub:(not ((4 * <sum_1030@8:0>) <= (6 + <<sum_1030@8:1>@11:0>)))
      begin ApronInterface.convex_hull_interpolate(3341)[4]
        lb:((<<sum_1030@8:1>@11:0> = 0) && (<sum_1030@8:0> <= 0))
        nub:(not ((4 * <sum_1030@8:0>) <= (6 + <<sum_1030@8:1>@11:0>)))
        lb':((<<sum_1030@8:1>@11:0> = 0) && (<sum_1030@8:0> <= 0))
        nub':(not ((4 * <sum_1030@8:0>) <= (6 + <<sum_1030@8:1>@11:0>)))
        begin InterpProver.interpolate(3342)[5]
          begin InterpProver.interpolate_fresh(3343)[6]
            begin InterpProver.interpolate_log(3344)[7]
              input1: ((<<sum_1030@8:1>@11:0> = 0) && (<sum_1030@8:0> <= 0))
              input2: (not ((4 * <sum_1030@8:0>) <= (6 + <<sum_1030@8:1>@11:0>)))
              begin InterpProver.interpolate_check(3345)[8]
                begin InterpProver.interpolate_simplify(3346)[9]
                  begin InterpProver.interpolate_quick(3379)[10]
                    begin CsisatInterface.interpolate_csisat_wrap(3388)[11]
                      begin CsisatInterface.interpolate_csisat_post_process(3389)[12]
                        begin CsisatInterface.interpolate_csisat_log(3390)[13]
                          input1: (0 = v_sep_sum_1030_sep_8_sep_1_sep_11_sep_0 & v_sep_sum_1030_sep_8_sep_0 <= 0)
                          input2: (7 + v_sep_sum_1030_sep_8_sep_1_sep_11_sep_0) <= 4*v_sep_sum_1030_sep_8_sep_0
                          begin CsisatInterface.interpolate_csisat_raw(3391)[14]
                            
                          end CsisatInterface.interpolate_csisat_raw(3391)[14] (0.001000 sec.)
                          output: (-0.285714285714*v_sep_sum_1030_sep_8_sep_1_sep_11_sep_0 + 1.14285714286*v_sep_sum_1030_sep_8_sep_0) <= 0
                          
                        end CsisatInterface.interpolate_csisat_log(3390)[13] (0.001000 sec.)
                        after simplification: (-2*v_sep_sum_1030_sep_8_sep_1_sep_11_sep_0 + 8*v_sep_sum_1030_sep_8_sep_0) <= 0
                        after dnf conversion: (((-2*v_sep_sum_1030_sep_8_sep_1_sep_11_sep_0 + 8*v_sep_sum_1030_sep_8_sep_0) <= 0))
                        
                      end CsisatInterface.interpolate_csisat_post_process(3389)[12] (0.001000 sec.)
                      
                    end CsisatInterface.interpolate_csisat_wrap(3388)[11] (0.001000 sec.)
                    
                  end InterpProver.interpolate_quick(3379)[10] (0.001000 sec.)
                  
                end InterpProver.interpolate_simplify(3346)[9] (0.001000 sec.)
                
              end InterpProver.interpolate_check(3345)[8] (0.001999 sec.)
              output: ((4 * <sum_1030@8:0>) <= <<sum_1030@8:1>@11:0>)
            end InterpProver.interpolate_log(3344)[7] (0.001999 sec.)
            
          end InterpProver.interpolate_fresh(3343)[6] (0.001999 sec.)
          
        end InterpProver.interpolate(3342)[5] (0.001999 sec.)
        output:
          P[<<sum_1030@8:1>@11:0>](<sum_1030@8:0>:int,<<sum_1030@8:1>@11:0>:int) =
          ((4 * <sum_1030@8:0>) <= <<sum_1030@8:1>@11:0>)
      end ApronInterface.convex_hull_interpolate(3341)[4] (0.001999 sec.)
      Horn clauses:
        |- P[<sum_1030@8:0>](<sum_1030@8:0>:int)
      lower bounds:
        P[<sum_1030@8:0>](<sum_1030@8:0>:int) = true
      upper bounds:
        P[<sum_1030@8:0>](var7:int) = true
      begin GenHcSolver.classify_pids(3742)[4]
        output:
          [<sum_1030@8:0>]
      end GenHcSolver.classify_pids(3742)[4] (0.000000 sec.)
      lb:true
      nub:false
      begin ApronInterface.convex_hull_interpolate(3745)[4]
        lb:true
        nub:false
        lb':true
        nub':false
        begin InterpProver.interpolate(3746)[5]
          begin InterpProver.interpolate_fresh(3747)[6]
            begin InterpProver.interpolate_log(3748)[7]
              input1: true
              input2: false
              begin InterpProver.interpolate_check(3749)[8]
                begin InterpProver.interpolate_simplify(3750)[9]
                  begin InterpProver.interpolate_quick(3763)[10]
                    
                  end InterpProver.interpolate_quick(3763)[10] (0.000000 sec.)
                  
                end InterpProver.interpolate_simplify(3750)[9] (0.000000 sec.)
                
              end InterpProver.interpolate_check(3749)[8] (0.000000 sec.)
              output: true
            end InterpProver.interpolate_log(3748)[7] (0.000000 sec.)
            
          end InterpProver.interpolate_fresh(3747)[6] (0.000000 sec.)
          
        end InterpProver.interpolate(3746)[5] (0.000000 sec.)
        output:
          P[<sum_1030@8:0>](<sum_1030@8:0>:int) = true
      end ApronInterface.convex_hull_interpolate(3745)[4] (0.000000 sec.)
      begin HcSolver.check_validity(3818)[4]
        input:
          P[<fail_1170@16:0>](<fail_1170@16:0>:bool)|- bot
          
          P[<<sum_1030@8:1>@11:0>](<f_main_1167@13:0>:int,<f_main_1167@13:2>:int),
          (((4 * <f_main_1167@13:0>) > (6 + <f_main_1167@13:2>)) && <fail_1170@16:0>)
          |- P[<fail_1170@16:0>](<fail_1170@16:0>:bool)
          
          P[<sum_1030@8:0>](<sum_1030@8:0>:int), ((<<sum_1030@8:1>@11:0> = 0) && (<sum_1030@8:0> <= 0))
          |- P[<<sum_1030@8:1>@11:0>](<sum_1030@8:0>:int,<<sum_1030@8:1>@11:0>:int)
          
          |- P[<sum_1030@8:0>](<sum_1030@8:0>:int)
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        
      end HcSolver.check_validity(3818)[4] (0.002000 sec.)
      solution:
        P[<fail_1170@16:0>](<fail_1170@16:0>:bool) = false
        P[<<sum_1030@8:1>@11:0>](<sum_1030@8:0>:int,<<sum_1030@8:1>@11:0>:int) =
        ((4 * <sum_1030@8:0>) <= <<sum_1030@8:1>@11:0>)
        P[<sum_1030@8:0>](<sum_1030@8:0>:int) = true
    end GenHcSolver.solve(1123)[3] (0.018997 sec.)
    begin GenHcSolver.solve(4071)[3]
      Horn clauses:
        P[<fail_1170@16:0>](<fail_1170@16:0>:bool)|- bot
        
        P[<<sum_1030@8:1>@11:0>](<f_main_1167@13:0>:int,<f_main_1167@13:2>:int),
        (((4 * <f_main_1167@13:0>) > (6 + <f_main_1167@13:2>)) && <fail_1170@16:0>)
        |- P[<fail_1170@16:0>](<fail_1170@16:0>:bool)
        
        P[<sum_1030@8:0>](<sum_1030@8:0>:int), ((<<sum_1030@8:1>@11:0> = 0) && (<sum_1030@8:0> <= 0))
        |- P[<<sum_1030@8:1>@11:0>](<sum_1030@8:0>:int,<<sum_1030@8:1>@11:0>:int)
        
        |- P[<sum_1030@8:0>](<sum_1030@8:0>:int)
      lower bounds:
        P[<sum_1030@8:0>](<sum_1030@8:0>:int) = true
        P[<<sum_1030@8:1>@11:0>](<sum_1030@8:0>:int,<<sum_1030@8:1>@11:0>:int) =
        ((<<sum_1030@8:1>@11:0> = 0) && (<sum_1030@8:0> <= 0))
        P[<fail_1170@16:0>](<fail_1170@16:0>:bool) = false
      upper bounds:
        P[<fail_1170@16:0>](var9:bool) = true
      begin GenHcSolver.classify_pids(5225)[4]
        output:
          [<fail_1170@16:0>]
      end GenHcSolver.classify_pids(5225)[4] (0.000000 sec.)
      lb:false
      nub:false
      begin ApronInterface.convex_hull_interpolate(5228)[4]
        lb:false
        nub:false
        begin ExtFormula.Formula.case_analysis_boolean(5231)[5]
          ts: false
          
        end ExtFormula.Formula.case_analysis_boolean(5231)[5] (0.000000 sec.)
        begin ExtFormula.Formula.case_analysis_boolean(5236)[5]
          ts: false
          
        end ExtFormula.Formula.case_analysis_boolean(5236)[5] (0.000000 sec.)
        lb':(-1 >= 0)
        nub':(-1 >= 0)
        begin InterpProver.interpolate(5239)[5]
          begin InterpProver.interpolate_fresh(5240)[6]
            begin InterpProver.interpolate_log(5241)[7]
              input1: (-1 >= 0)
              input2: (-1 >= 0)
              begin InterpProver.interpolate_check(5242)[8]
                begin InterpProver.interpolate_simplify(5243)[9]
                  begin InterpProver.interpolate_quick(5258)[10]
                    
                  end InterpProver.interpolate_quick(5258)[10] (0.000000 sec.)
                  begin minimizing # of disjunctions(5262)[10]
                    input: false
                    output: false
                  end minimizing # of disjunctions(5262)[10] (0.000000 sec.)
                  
                end InterpProver.interpolate_simplify(5243)[9] (0.000000 sec.)
                
              end InterpProver.interpolate_check(5242)[8] (0.000999 sec.)
              output: false
            end InterpProver.interpolate_log(5241)[7] (0.000999 sec.)
            
          end InterpProver.interpolate_fresh(5240)[6] (0.000999 sec.)
          
        end InterpProver.interpolate(5239)[5] (0.000999 sec.)
        output:
          P[<fail_1170@16:0>](<fail_1170@16:0>:bool) = false
      end ApronInterface.convex_hull_interpolate(5228)[4] (0.000999 sec.)
      Horn clauses:
        P[<<sum_1030@8:1>@11:0>](<f_main_1167@13:0>:int,<f_main_1167@13:2>:int),
        ((4 * <f_main_1167@13:0>) > (6 + <f_main_1167@13:2>)) |- bot
        
        P[<sum_1030@8:0>](<sum_1030@8:0>:int), ((<<sum_1030@8:1>@11:0> = 0) && (<sum_1030@8:0> <= 0))
        |- P[<<sum_1030@8:1>@11:0>](<sum_1030@8:0>:int,<<sum_1030@8:1>@11:0>:int)
        
        |- P[<sum_1030@8:0>](<sum_1030@8:0>:int)
      lower bounds:
        P[<sum_1030@8:0>](<sum_1030@8:0>:int) = true
        P[<<sum_1030@8:1>@11:0>](<sum_1030@8:0>:int,<<sum_1030@8:1>@11:0>:int) =
        ((<<sum_1030@8:1>@11:0> = 0) && (<sum_1030@8:0> <= 0))
      upper bounds:
        P[<<sum_1030@8:1>@11:0>](var10:int,var11:int) = ((4 * var10) <= (6 + var11))
      begin GenHcSolver.classify_pids(6305)[4]
        output:
          [<<sum_1030@8:1>@11:0>]
      end GenHcSolver.classify_pids(6305)[4] (0.000000 sec.)
      lb:((<<sum_1030@8:1>@11:0> = 0) && (<sum_1030@8:0> <= 0))
      nub:(not ((4 * <sum_1030@8:0>) <= (6 + <<sum_1030@8:1>@11:0>)))
      begin ApronInterface.convex_hull_interpolate(6308)[4]
        lb:((<<sum_1030@8:1>@11:0> = 0) && (<sum_1030@8:0> <= 0))
        nub:(not ((4 * <sum_1030@8:0>) <= (6 + <<sum_1030@8:1>@11:0>)))
        begin ExtFormula.Formula.case_analysis_boolean(6318)[5]
          ts: ((<<sum_1030@8:1>@11:0> = 0) && (<sum_1030@8:0> <= 0))
          
        end ExtFormula.Formula.case_analysis_boolean(6318)[5] (0.000000 sec.)
        begin ExtFormula.Formula.case_analysis_boolean(6328)[5]
          ts: ((4 * <sum_1030@8:0>) > (6 + <<sum_1030@8:1>@11:0>))
          
        end ExtFormula.Formula.case_analysis_boolean(6328)[5] (0.001000 sec.)
        lb':((<<sum_1030@8:1>@11:0> = 0) && ((-1 * <sum_1030@8:0>) >= 0))
        nub':(((-7 + (-1 * <<sum_1030@8:1>@11:0>)) + (4 * <sum_1030@8:0>)) >= 0)
        begin InterpProver.interpolate(6334)[5]
          begin InterpProver.interpolate_fresh(6335)[6]
            begin InterpProver.interpolate_log(6336)[7]
              input1: ((<<sum_1030@8:1>@11:0> = 0) && ((-1 * <sum_1030@8:0>) >= 0))
              input2: (((-7 + (-1 * <<sum_1030@8:1>@11:0>)) + (4 * <sum_1030@8:0>)) >= 0)
              begin InterpProver.interpolate_check(6337)[8]
                begin InterpProver.interpolate_simplify(6338)[9]
                  begin InterpProver.interpolate_quick(6371)[10]
                    begin CsisatInterface.interpolate_csisat_wrap(6380)[11]
                      begin CsisatInterface.interpolate_csisat_post_process(6381)[12]
                        begin CsisatInterface.interpolate_csisat_log(6382)[13]
                          input1: (0 = v_sep_sum_1030_sep_8_sep_1_sep_11_sep_0 & v_sep_sum_1030_sep_8_sep_0 <= 0)
                          input2: (7 + v_sep_sum_1030_sep_8_sep_1_sep_11_sep_0) <= 4*v_sep_sum_1030_sep_8_sep_0
                          begin CsisatInterface.interpolate_csisat_raw(6383)[14]
                            
                          end CsisatInterface.interpolate_csisat_raw(6383)[14] (0.000000 sec.)
                          output: (-0.285714285714*v_sep_sum_1030_sep_8_sep_1_sep_11_sep_0 + 1.14285714286*v_sep_sum_1030_sep_8_sep_0) <= 0
                          
                        end CsisatInterface.interpolate_csisat_log(6382)[13] (0.000000 sec.)
                        after simplification: (-2*v_sep_sum_1030_sep_8_sep_1_sep_11_sep_0 + 8*v_sep_sum_1030_sep_8_sep_0) <= 0
                        after dnf conversion: (((-2*v_sep_sum_1030_sep_8_sep_1_sep_11_sep_0 + 8*v_sep_sum_1030_sep_8_sep_0) <= 0))
                        
                      end CsisatInterface.interpolate_csisat_post_process(6381)[12] (0.000000 sec.)
                      
                    end CsisatInterface.interpolate_csisat_wrap(6380)[11] (0.000000 sec.)
                    
                  end InterpProver.interpolate_quick(6371)[10] (0.001000 sec.)
                  
                end InterpProver.interpolate_simplify(6338)[9] (0.001000 sec.)
                
              end InterpProver.interpolate_check(6337)[8] (0.001000 sec.)
              output: ((4 * <sum_1030@8:0>) <= <<sum_1030@8:1>@11:0>)
            end InterpProver.interpolate_log(6336)[7] (0.001000 sec.)
            
          end InterpProver.interpolate_fresh(6335)[6] (0.001000 sec.)
          
        end InterpProver.interpolate(6334)[5] (0.001000 sec.)
        output:
          P[<<sum_1030@8:1>@11:0>](<sum_1030@8:0>:int,<<sum_1030@8:1>@11:0>:int) =
          ((4 * <sum_1030@8:0>) <= <<sum_1030@8:1>@11:0>)
      end ApronInterface.convex_hull_interpolate(6308)[4] (0.002000 sec.)
      Horn clauses:
        |- P[<sum_1030@8:0>](<sum_1030@8:0>:int)
      lower bounds:
        P[<sum_1030@8:0>](<sum_1030@8:0>:int) = true
      upper bounds:
        P[<sum_1030@8:0>](var12:int) = true
      begin GenHcSolver.classify_pids(6731)[4]
        output:
          [<sum_1030@8:0>]
      end GenHcSolver.classify_pids(6731)[4] (0.000000 sec.)
      lb:true
      nub:false
      begin ApronInterface.convex_hull_interpolate(6734)[4]
        lb:true
        nub:false
        begin ExtFormula.Formula.case_analysis_boolean(6737)[5]
          ts: true
          
        end ExtFormula.Formula.case_analysis_boolean(6737)[5] (0.000000 sec.)
        begin ExtFormula.Formula.case_analysis_boolean(6742)[5]
          ts: false
          
        end ExtFormula.Formula.case_analysis_boolean(6742)[5] (0.000000 sec.)
        lb':true
        nub':(-1 >= 0)
        begin InterpProver.interpolate(6745)[5]
          begin InterpProver.interpolate_fresh(6746)[6]
            begin InterpProver.interpolate_log(6747)[7]
              input1: true
              input2: (-1 >= 0)
              begin InterpProver.interpolate_check(6748)[8]
                begin InterpProver.interpolate_simplify(6749)[9]
                  begin InterpProver.interpolate_quick(6763)[10]
                    
                  end InterpProver.interpolate_quick(6763)[10] (0.000000 sec.)
                  
                end InterpProver.interpolate_simplify(6749)[9] (0.000000 sec.)
                
              end InterpProver.interpolate_check(6748)[8] (0.000000 sec.)
              output: true
            end InterpProver.interpolate_log(6747)[7] (0.000000 sec.)
            
          end InterpProver.interpolate_fresh(6746)[6] (0.000000 sec.)
          
        end InterpProver.interpolate(6745)[5] (0.000000 sec.)
        output:
          P[<sum_1030@8:0>](<sum_1030@8:0>:int) = true
      end ApronInterface.convex_hull_interpolate(6734)[4] (0.000000 sec.)
      begin HcSolver.check_validity(6820)[4]
        input:
          P[<fail_1170@16:0>](<fail_1170@16:0>:bool)|- bot
          
          P[<<sum_1030@8:1>@11:0>](<f_main_1167@13:0>:int,<f_main_1167@13:2>:int),
          (((4 * <f_main_1167@13:0>) > (6 + <f_main_1167@13:2>)) && <fail_1170@16:0>)
          |- P[<fail_1170@16:0>](<fail_1170@16:0>:bool)
          
          P[<sum_1030@8:0>](<sum_1030@8:0>:int), ((<<sum_1030@8:1>@11:0> = 0) && (<sum_1030@8:0> <= 0))
          |- P[<<sum_1030@8:1>@11:0>](<sum_1030@8:0>:int,<<sum_1030@8:1>@11:0>:int)
          
          |- P[<sum_1030@8:0>](<sum_1030@8:0>:int)
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        
      end HcSolver.check_validity(6820)[4] (0.002000 sec.)
      solution:
        P[<fail_1170@16:0>](<fail_1170@16:0>:bool) = false
        P[<<sum_1030@8:1>@11:0>](<sum_1030@8:0>:int,<<sum_1030@8:1>@11:0>:int) =
        ((4 * <sum_1030@8:0>) <= <<sum_1030@8:1>@11:0>)
        P[<sum_1030@8:0>](<sum_1030@8:0>:int) = true
    end GenHcSolver.solve(4071)[3] (0.014998 sec.)
    begin YhornInterface.solve(7073)[3]
      begin HcSolver.solve_ub(7074)[4]
        encoded:
          P[<fail_1170@16:0>](<fail_1170@16:0>:int)|- bot
          
          P[<<sum_1030@8:1>@11:0>](<f_main_1167@13:0>:int,<f_main_1167@13:2>:int),
          (((4 * <f_main_1167@13:0>) > (6 + <f_main_1167@13:2>)) && (<fail_1170@16:0> = 1))
          |- P[<fail_1170@16:0>](<fail_1170@16:0>:int)
          
          P[<sum_1030@8:0>](<sum_1030@8:0>:int), ((<<sum_1030@8:1>@11:0> = 0) && (<sum_1030@8:0> <= 0))
          |- P[<<sum_1030@8:1>@11:0>](<sum_1030@8:0>:int,<<sum_1030@8:1>@11:0>:int)
          
          |- P[<sum_1030@8:0>](<sum_1030@8:0>:int)
        input to Yhorn:
          P[<fail_1170@16:0>](<fail_1170@16:0>:int)|- bot
          
          P[<<sum_1030@8:1>@11:0>](<f_main_1167@13:0>:int,<f_main_1167@13:2>:int),
          (((4 * <f_main_1167@13:0>) > (6 + <f_main_1167@13:2>)) && (<fail_1170@16:0> = 1))
          |- P[<fail_1170@16:0>](<fail_1170@16:0>:int)
          
          P[<sum_1030@8:0>](<sum_1030@8:0>:int), ((<sum_1030@8:0> <= 0) && (<<sum_1030@8:1>@11:0> = 0))
          |- P[<<sum_1030@8:1>@11:0>](<sum_1030@8:0>:int,<<sum_1030@8:1>@11:0>:int)
          Yhorn (Wed Sep 25 10:52:05 JST 2013)


(0=0) & (v_sep_fail_1170_sep_16_sep_0($6)) -> 1=0.
(($6-1=0) & (4$7-$8-6>0)) & (v_sep_sum_1030_sep_8_sep_1_sep_11_sep_0($7,$8)) -> v_sep_fail_1170_sep_16_sep_0($6).
(($9=0) & ($10<=0)) & (v_sep_sum_1030_sep_8_sep_0($10)) -> v_sep_sum_1030_sep_8_sep_1_sep_11_sep_0($10,$9).
0=0 -> v_sep_sum_1030_sep_8_sep_0($10).


v_sep_fail_1170_sep_16_sep_0: X
v_sep_sum_1030_sep_8_sep_0: X
v_sep_sum_1030_sep_8_sep_1_sep_11_sep_0: X
....
v_sep_fail_1170_sep_16_sep_0: X
v_sep_sum_1030_sep_8_sep_0: X
v_sep_sum_1030_sep_8_sep_1_sep_11_sep_0: X
...
v_sep_fail_1170_sep_16_sep_0: X
v_sep_sum_1030_sep_8_sep_0: X
v_sep_sum_1030_sep_8_sep_1_sep_11_sep_0: X
....
v_sep_fail_1170_sep_16_sep_0: X
v_sep_sum_1030_sep_8_sep_0: X
v_sep_sum_1030_sep_8_sep_1_sep_11_sep_0: X
....(0=0) & (v_sep_fail_1170_sep_16_sep_0($6)) -> 1=0.
(($6-1=0) & (4$7-$8-6>0)) & (v_sep_sum_1030_sep_8_sep_1_sep_11_sep_0($7,$8)) -> v_sep_fail_1170_sep_16_sep_0($6).
(($9=0) & ($10<=0)) & (v_sep_sum_1030_sep_8_sep_0($10)) -> v_sep_sum_1030_sep_8_sep_1_sep_11_sep_0($10,$9).
0=0 -> v_sep_sum_1030_sep_8_sep_0($10).

          |- P[<sum_1030@8:0>](<sum_1030@8:0>:int)
        solution:
          P[<fail_1170@16:0>]($11:bool) = false
          P[<sum_1030@8:0>]($19:int) = true
          P[<<sum_1030@8:1>@11:0>]($14:int,$16:int) = ((4 * $14) <= $16)
        
      end HcSolver.solve_ub(7074)[4] (0.015997 sec.)
      begin HcSolver.check_validity(7190)[4]
        input:
          P[<fail_1170@16:0>](<fail_1170@16:0>:bool)|- bot
          
          P[<<sum_1030@8:1>@11:0>](<f_main_1167@13:0>:int,<f_main_1167@13:2>:int),
          (((4 * <f_main_1167@13:0>) > (6 + <f_main_1167@13:2>)) && <fail_1170@16:0>)
          |- P[<fail_1170@16:0>](<fail_1170@16:0>:bool)
          
          P[<sum_1030@8:0>](<sum_1030@8:0>:int), ((<<sum_1030@8:1>@11:0> = 0) && (<sum_1030@8:0> <= 0))
          |- P[<<sum_1030@8:1>@11:0>](<sum_1030@8:0>:int,<<sum_1030@8:1>@11:0>:int)
          
          |- P[<sum_1030@8:0>](<sum_1030@8:0>:int)
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        
      end HcSolver.check_validity(7190)[4] (0.001000 sec.)
      solution:
        P[<fail_1170@16:0>]($11:bool) = false
        P[<sum_1030@8:0>]($19:int) = true
        P[<<sum_1030@8:1>@11:0>]($14:int,$16:int) = ((4 * $14) <= $16)
    end YhornInterface.solve(7073)[3] (0.016997 sec.)
    
  end RefTypeInfer.infer_etrs(97)[2] (0.071989 sec.)
  refinement types:
    main_1165: X
    f_1168: v1:int -> X
    main_1032: v1:int -> (v2:unit -> X) -> X
    sum_1030: v1:int -> (v2:{v2:int | ((4 * v1) <= v2)} -> X) -> X
    f_main_1167: v1:int -> (v2:unit -> X) -> v4:int -> X
    fail_1170: v1:{v1:bool | false} -> (v2:unit -> X) -> X
    f_1169: var21:int -> var20:unit -> X
    f_sum_1166: var26:int -> (var25:int -> X) -> var23:int -> X
  abstraction types:
    main_1165: X
    f_1168: v1:int -> X
    main_1032: v1:int -> (v2:unit -> X) -> X
    sum_1030: v1:int -> (v2:int[v2 -> ((4 * v1) <= v2)] -> X) -> X
    f_main_1167: v1:int -> (v2:unit -> X) -> v4:int -> X
    fail_1170: v1:bool -> (v2:unit -> X) -> X
    f_1169: var21:int -> var20:unit -> X
    f_sum_1166: var26:int -> (var25:int -> X) -> var23:int -> X
  
end AbsTypeInfer.refine(96)[1] (0.073989 sec.)
DONE!

Prefix of spurious counter-example::
0; 0; 0; 0; 1

Program with abstraction types (CEGAR-cycle 1)::
Main: main_1165
  main_1165 -> (rand_int f_1168)
  f_1168 x_1140 -> (main_1032 x_1140 (f_1169 x_1140))
  f_1169 x_1140 x_1137 -> end
  f_main_1167 n_1033 k_main_1109 x_1113 when (((4 * n_1033) - 6) <= x_1113) -> (k_main_1109 ())
  f_main_1167 n_1033 k_main_1109 x_1113 when (not (((4 * n_1033) - 6) <= x_1113)) -> (fail_1170 true k_main_1109)
  f_sum_1166 n_1031 k_sum_1077 x_1081 -> (k_sum_1077 (n_1031 + x_1081))
  fail_1170 b k -> {fail} => (k ())
  main_1032 n_1033 k_main_1109 -> (sum_1030 n_1033 (f_main_1167 n_1033 k_main_1109))
  sum_1030 n_1031 k_sum_1077 when (n_1031 <= 0) -> (k_sum_1077 0)
  sum_1030 n_1031 k_sum_1077 when (not (n_1031 <= 0)) -> (sum_1030 (n_1031 - 1) (f_sum_1166 n_1031 k_sum_1077))
Types:
  main_1165 : X
  fail_1170 : (x_1:bool[x_1] -> (unit -> X) -> X)
  sum_1030 : (x_1:int -> (x_3:int[4*x_1 <= x_3] -> X) -> X)
  
(1-1) Abstracting ... DONE!

(1-2) Checking HORS ... DONE!

Error trace::
  main_1165 ... --> 
  f_1168 ... --> 
  main_1032 ... --> 
  sum_1030 [2/2] ... --> 
  sum_1030 [1/2] ... --> 
  f_sum_1166 ... --> 
  f_main_1167 [2/2] ... --> 
  fail_1170 ... --> fail -->
  ERROR!

Spurious counter-example::
  0; 0; 0; 1; 0; 0; 1; 0

(1-3) Checking counter-example ... DONE!

(1-4) Discovering predicates ... 
begin AbsTypeInfer.refine(7633)[1]
  program:
    main_1165  | true = ((Random.int 0) f_1168)
    f_1168 x_1140 | true = (main_1032 x_1140
                                      (f_1169 x_1140))
    f_1169 x_1140 x_1137 | true = end
    f_main_1167 n_1033 k_main_1109 x_1113 | (((4 * n_1033) - 6) <= x_1113) = (
    k_main_1109 ())
    f_main_1167 n_1033 k_main_1109 x_1113 | (not (((4 * n_1033) - 6) <= x_1113)) = (
    fail_1170 true
              k_main_1109)
    f_sum_1166 n_1031 k_sum_1077 x_1081 | true = (k_sum_1077 (n_1031 + x_1081))
    fail_1170 b k | true = (fail ())
    main_1032 n_1033 k_main_1109 | true = (sum_1030 n_1033
                                                    (f_main_1167 n_1033
                                                                 k_main_1109))
    sum_1030 n_1031 k_sum_1077 | (n_1031 <= 0) = (k_sum_1077 0)
    sum_1030 n_1031 k_sum_1077 | (not (n_1031 <= 0)) = (sum_1030 (n_1031 - 1)
                                                                 (f_sum_1166 n_1031
                                                                    k_sum_1077))
    main_1165:X
    f_1168:int -> X
    f_1169:int -> unit -> X
    f_main_1167:int -> (unit -> X) -> int -> X
    f_sum_1166:int -> (int -> X) -> int -> X
    fail_1170:bool -> (unit -> X) -> X
    main_1032:int -> (unit -> X) -> X
    sum_1030:int -> (int -> X) -> X
  inlined functions: f_1168,f_1169,f_main_1167,f_sum_1166,main_1032
  counterexample: 0:0:0:1:0:0:1:0
  error traces:
    [true.nop(<f_1168@22:0> = var27)
     [true.(<main_1032@24:0> = <f_1168@22:0>)
      [true.(<sum_1030@26:0> = <main_1032@24:0>)
       [(not (<sum_1030@26:0> <= 0)).(<sum_1030@29:0> = (<sum_1030@26:0> - 1))
        [(<sum_1030@29:0> <= 0).(<<sum_1030@29:1>@32:0> = 0)
         [true.((<f_sum_1166@34:0> = <sum_1030@26:0>) && (<f_sum_1166@34:2> = <<sum_1030@29:1>@32:0>))
          [true.(<<f_sum_1166@34:1>@36:0> = (<f_sum_1166@34:0> + <f_sum_1166@34:2>))
           [true.(<<sum_1030@26:1>@38:0> = <<f_sum_1166@34:1>@36:0>)
            [true.((<f_main_1167@40:0> = <main_1032@24:0>) && (<f_main_1167@40:2> = <<sum_1030@26:1>@38:0>))
             [(not (((4 * <f_main_1167@40:0>) - 6) <= <f_main_1167@40:2>)).(<fail_1170@43:0> = true)[true.error
  begin RefTypeInfer.infer_etrs(7634)[2]
    horn clauses:
      P[<fail_1170@43:0>](<fail_1170@43:0>:bool)|- bot
      
      P[<f_main_1167@40:2>](<f_main_1167@40:0>:int,<f_main_1167@40:2>:int),
      (((4 * <f_main_1167@40:0>) > (6 + <f_main_1167@40:2>)) && <fail_1170@43:0>)
      |- P[<fail_1170@43:0>](<fail_1170@43:0>:bool)
      
      P[<main_1032@24:0>](<f_main_1167@40:0>:int),
      P[<<sum_1030@26:1>@38:0>](<f_main_1167@40:0>:int,<f_main_1167@40:2>:int)|- P[<f_main_1167@40:2>](
      <f_main_1167@40:0>:int,<f_main_1167@40:2>:int)
      
      P[<sum_1030@26:0>](<sum_1030@26:0>:int),
      P[<<f_sum_1166@34:1>@36:0>](<sum_1030@26:0>:int,<<sum_1030@26:1>@38:0>:int), (
      <sum_1030@26:0> > 0) |- P[<<sum_1030@26:1>@38:0>](<sum_1030@26:0>:int,
                                                        <<sum_1030@26:1>@38:0>:int)
      
      P[<f_sum_1166@34:2>](<f_sum_1166@34:0>:int,(<<f_sum_1166@34:1>@36:0> + (-1 * <f_sum_1166@34:0>)):int)|- P[<<f_sum_1166@34:1>@36:0>](
      <f_sum_1166@34:0>:int,<<f_sum_1166@34:1>@36:0>:int)
      
      P[<sum_1030@26:0>](<f_sum_1166@34:0>:int),
      P[<<sum_1030@29:1>@32:0>]((-1 + <f_sum_1166@34:0>):int,<f_sum_1166@34:2>:int), (
      <f_sum_1166@34:0> > 0) |- P[<f_sum_1166@34:2>](<f_sum_1166@34:0>:int,
                                                     <f_sum_1166@34:2>:int)
      
      P[<sum_1030@29:0>](<sum_1030@29:0>:int), ((<<sum_1030@29:1>@32:0> = 0) && (<sum_1030@29:0> <= 0))
      |- P[<<sum_1030@29:1>@32:0>](<sum_1030@29:0>:int,<<sum_1030@29:1>@32:0>:int)
      
      P[<sum_1030@26:0>]((1 + <sum_1030@29:0>):int), ((1 + <sum_1030@29:0>) > 0)
      |- P[<sum_1030@29:0>](<sum_1030@29:0>:int)
      
      P[<main_1032@24:0>](<sum_1030@26:0>:int)|- P[<sum_1030@26:0>](<sum_1030@26:0>:int)
      
      P[<f_1168@22:0>](<main_1032@24:0>:int)|- P[<main_1032@24:0>](<main_1032@24:0>:int)
      
      |- P[<f_1168@22:0>](<f_1168@22:0>:int)
    call trees:
      <main_1165@19>
        <f_1168@22>
          <main_1032@24>
            <sum_1030@26>
              <sum_1030@29>
              </<sum_1030@29:1>@32>
              <f_sum_1166@34>
              </<f_sum_1166@34:1>@36>
            </<sum_1030@26:1>@38>
            <f_main_1167@40>
              <fail_1170@43>
    inlined horn clauses:
      P[<fail_1170@43:0>](<fail_1170@43:0>:bool)|- bot
      
      P[<<sum_1030@26:1>@38:0>](<f_main_1167@40:0>:int,<f_main_1167@40:2>:int),
      (((4 * <f_main_1167@40:0>) > (6 + <f_main_1167@40:2>)) && <fail_1170@43:0>)
      |- P[<fail_1170@43:0>](<fail_1170@43:0>:bool)
      
      P[<sum_1030@26:0>](<sum_1030@26:0>:int),
      P[<<sum_1030@29:1>@32:0>]((-1 + <sum_1030@26:0>):int,(<<sum_1030@26:1>@38:0> + (-1 * <sum_1030@26:0>)):int),
      (<sum_1030@26:0> > 0) |- P[<<sum_1030@26:1>@38:0>](<sum_1030@26:0>:int,
                                                         <<sum_1030@26:1>@38:0>:int)
      
      P[<sum_1030@29:0>](<sum_1030@29:0>:int), ((<<sum_1030@29:1>@32:0> = 0) && (<sum_1030@29:0> <= 0))
      |- P[<<sum_1030@29:1>@32:0>](<sum_1030@29:0>:int,<<sum_1030@29:1>@32:0>:int)
      
      P[<sum_1030@26:0>]((1 + <sum_1030@29:0>):int), ((1 + <sum_1030@29:0>) > 0)
      |- P[<sum_1030@29:0>](<sum_1030@29:0>:int)
      
      |- P[<sum_1030@26:0>](<sum_1030@26:0>:int)
    begin ParamSubstInfer.infer(9002)[3]
      
    end ParamSubstInfer.infer(9002)[3] (0.041994 sec.)
    inferred extra parameters:
      
    begin RefTypeInfer.elim_coeffs(9004)[3]
      
    end RefTypeInfer.elim_coeffs(9004)[3] (0.000000 sec.)
    begin GenHcSolver.solve(9227)[3]
      Horn clauses:
        P[<fail_1170@43:0>](<fail_1170@43:0>:bool)|- bot
        
        P[<<sum_1030@26:1>@38:0>](<f_main_1167@40:0>:int,<f_main_1167@40:2>:int),
        (((4 * <f_main_1167@40:0>) > (6 + <f_main_1167@40:2>)) && <fail_1170@43:0>)
        |- P[<fail_1170@43:0>](<fail_1170@43:0>:bool)
        
        P[<sum_1030@26:0>](<sum_1030@26:0>:int),
        P[<<sum_1030@29:1>@32:0>]((-1 + <sum_1030@26:0>):int,(<<sum_1030@26:1>@38:0> + (-1 * <sum_1030@26:0>)):int),
        (<sum_1030@26:0> > 0) |- P[<<sum_1030@26:1>@38:0>](<sum_1030@26:0>:int,
                                                           <<sum_1030@26:1>@38:0>:int)
        
        P[<sum_1030@29:0>](<sum_1030@29:0>:int), ((<<sum_1030@29:1>@32:0> = 0) && (<sum_1030@29:0> <= 0))
        |- P[<<sum_1030@29:1>@32:0>](<sum_1030@29:0>:int,<<sum_1030@29:1>@32:0>:int)
        
        P[<sum_1030@26:0>]((1 + <sum_1030@29:0>):int), ((1 + <sum_1030@29:0>) > 0)
        |- P[<sum_1030@29:0>](<sum_1030@29:0>:int)
        
        |- P[<sum_1030@26:0>](<sum_1030@26:0>:int)
      lower bounds:
        P[<sum_1030@26:0>](<sum_1030@26:0>:int) = true
        P[<sum_1030@29:0>](<sum_1030@29:0>:int) = ((1 + <sum_1030@29:0>) > 0)
        P[<<sum_1030@29:1>@32:0>](<sum_1030@29:0>:int,<<sum_1030@29:1>@32:0>:int) =
        ((<<sum_1030@29:1>@32:0> = 0) && (<sum_1030@29:0> = 0))
        P[<<sum_1030@26:1>@38:0>](<sum_1030@26:0>:int,<<sum_1030@26:1>@38:0>:int) =
        ((<sum_1030@26:0> = 1) && (<<sum_1030@26:1>@38:0> = <sum_1030@26:0>))
        P[<fail_1170@43:0>](<fail_1170@43:0>:bool) = false
      upper bounds:
        P[<<sum_1030@26:1>@38:0>](var34:int,var35:int) = ((4 * var34) <= (6 + var35))
        P[<<sum_1030@29:1>@32:0>](var30:int,var31:int) = (((1 + var30) <= 0) || ((3 * var30) <= (3 + var31)))
      begin GenHcSolver.classify_pids(12107)[4]
        output:
          [<<sum_1030@29:1>@32:0>;<<sum_1030@26:1>@38:0>]
      end GenHcSolver.classify_pids(12107)[4] (0.000000 sec.)
      begin ApronInterface.convex_hull_interpolate(12157)[4]
        lb:(((<<sum_1030@29:1>@32:0> = 0) && (<sum_1030@29:0> = 0)) ||
            ((<sum_1030@29:0> = 1) && (<<sum_1030@29:1>@32:0> = <sum_1030@29:0>)))
        nub:((not (((1 + <sum_1030@29:0>) <= 0) || ((3 * <sum_1030@29:0>) <= (3 + <<sum_1030@29:1>@32:0>)))) ||
             (not ((4 * <sum_1030@29:0>) <= (6 + <<sum_1030@29:1>@32:0>))))
        lb':(((<<sum_1030@29:1>@32:0> = 0) && (<sum_1030@29:0> = 0)) ||
             ((<sum_1030@29:0> = 1) && (<<sum_1030@29:1>@32:0> = <sum_1030@29:0>)))
        nub':((not (((1 + <sum_1030@29:0>) <= 0) || ((3 * <sum_1030@29:0>) <= (3 + <<sum_1030@29:1>@32:0>)))) ||
              (not ((4 * <sum_1030@29:0>) <= (6 + <<sum_1030@29:1>@32:0>))))
        begin InterpProver.interpolate(12158)[5]
          begin InterpProver.interpolate_fresh(12159)[6]
            begin InterpProver.interpolate_log(12160)[7]
              input1: (((<<sum_1030@29:1>@32:0> = 0) && (<sum_1030@29:0> = 0)) ||
                       ((<sum_1030@29:0> = 1) && (<<sum_1030@29:1>@32:0> = <sum_1030@29:0>)))
              input2: ((not (((1 + <sum_1030@29:0>) <= 0) || ((3 * <sum_1030@29:0>) <= (3 + <<sum_1030@29:1>@32:0>)))) ||
                       (not ((4 * <sum_1030@29:0>) <= (6 + <<sum_1030@29:1>@32:0>))))
              begin InterpProver.interpolate_check(12161)[8]
                begin InterpProver.interpolate_simplify(12162)[9]
                  begin InterpProver.interpolate_quick(12261)[10]
                    begin CsisatInterface.interpolate_csisat_wrap(12270)[11]
                      begin CsisatInterface.interpolate_csisat_post_process(12271)[12]
                        begin CsisatInterface.interpolate_csisat_log(12272)[13]
                          input1: ((0 = v_sep_sum_1030_sep_29_sep_0 & 0 = v_sep_sum_1030_sep_29_sep_1_sep_32_sep_0) | (1 = v_sep_sum_1030_sep_29_sep_0 & v_sep_sum_1030_sep_29_sep_0 = v_sep_sum_1030_sep_29_sep_1_sep_32_sep_0))
                          input2: ((1 <= (1 + v_sep_sum_1030_sep_29_sep_0) & (4 + v_sep_sum_1030_sep_29_sep_1_sep_32_sep_0) <= 3*v_sep_sum_1030_sep_29_sep_0) | (7 + v_sep_sum_1030_sep_29_sep_1_sep_32_sep_0) <= 4*v_sep_sum_1030_sep_29_sep_0)
                          begin CsisatInterface.interpolate_csisat_raw(12273)[14]
                            
                          end CsisatInterface.interpolate_csisat_raw(12273)[14] (0.004000 sec.)
                          output: (((-1*v_sep_sum_1030_sep_29_sep_1_sep_32_sep_0 + 3*v_sep_sum_1030_sep_29_sep_0) <= 2. | (-0.5*v_sep_sum_1030_sep_29_sep_1_sep_32_sep_0 + 1.5*v_sep_sum_1030_sep_29_sep_0) <= 0) & ((-0.5*v_sep_sum_1030_sep_29_sep_1_sep_32_sep_0 + 2*v_sep_sum_1030_sep_29_sep_0) <= 1.5 | (-0.285714285714*v_sep_sum_1030_sep_29_sep_1_sep_32_sep_0 + 1.14285714286*v_sep_sum_1030_sep_29_sep_0) <= 0))
                          
                        end CsisatInterface.interpolate_csisat_log(12272)[13] (0.004000 sec.)
                        after simplification: (((-2*v_sep_sum_1030_sep_29_sep_1_sep_32_sep_0 + 8*v_sep_sum_1030_sep_29_sep_0) <= 0 | (-1*v_sep_sum_1030_sep_29_sep_1_sep_32_sep_0 + 4*v_sep_sum_1030_sep_29_sep_0) <= 3) & ((-1*v_sep_sum_1030_sep_29_sep_1_sep_32_sep_0 + 3*v_sep_sum_1030_sep_29_sep_0) <= 0 | (-1*v_sep_sum_1030_sep_29_sep_1_sep_32_sep_0 + 3*v_sep_sum_1030_sep_29_sep_0) <= 2))
                        after dnf conversion: (((-2*v_sep_sum_1030_sep_29_sep_1_sep_32_sep_0 + 8*v_sep_sum_1030_sep_29_sep_0) <= 0 & (-1*v_sep_sum_1030_sep_29_sep_1_sep_32_sep_0 + 3*v_sep_sum_1030_sep_29_sep_0) <= 0) | ((-2*v_sep_sum_1030_sep_29_sep_1_sep_32_sep_0 + 8*v_sep_sum_1030_sep_29_sep_0) <= 0 & (-1*v_sep_sum_1030_sep_29_sep_1_sep_32_sep_0 + 3*v_sep_sum_1030_sep_29_sep_0) <= 2) | ((-1*v_sep_sum_1030_sep_29_sep_1_sep_32_sep_0 + 4*v_sep_sum_1030_sep_29_sep_0) <= 3 & (-1*v_sep_sum_1030_sep_29_sep_1_sep_32_sep_0 + 3*v_sep_sum_1030_sep_29_sep_0) <= 0) | ((-1*v_sep_sum_1030_sep_29_sep_1_sep_32_sep_0 + 4*v_sep_sum_1030_sep_29_sep_0) <= 3 & (-1*v_sep_sum_1030_sep_29_sep_1_sep_32_sep_0 + 3*v_sep_sum_1030_sep_29_sep_0) <= 2))
                        
                      end CsisatInterface.interpolate_csisat_post_process(12271)[12] (0.004000 sec.)
                      
                    end CsisatInterface.interpolate_csisat_wrap(12270)[11] (0.004000 sec.)
                    
                  end InterpProver.interpolate_quick(12261)[10] (0.004000 sec.)
                  begin minimizing # of disjunctions(12385)[10]
                    input: ((((4 * <sum_1030@29:0>) <= <<sum_1030@29:1>@32:0>) &&
                             ((3 * <sum_1030@29:0>) <= <<sum_1030@29:1>@32:0>)) ||
                            (((3 * <sum_1030@29:0>) <= (2 + <<sum_1030@29:1>@32:0>)) &&
                             ((4 * <sum_1030@29:0>) <= (3 + <<sum_1030@29:1>@32:0>))))
                    output: (((3 * <sum_1030@29:0>) <= (2 + <<sum_1030@29:1>@32:0>)) &&
                             ((4 * <sum_1030@29:0>) <= (3 + <<sum_1030@29:1>@32:0>)))
                  end minimizing # of disjunctions(12385)[10] (0.000999 sec.)
                  begin minimizing # of conjunctions(12421)[10]
                    input: (((3 * <sum_1030@29:0>) <= (2 + <<sum_1030@29:1>@32:0>)) &&
                            ((4 * <sum_1030@29:0>) <= (3 + <<sum_1030@29:1>@32:0>)))
                    output: ((4 * <sum_1030@29:0>) <= (3 + <<sum_1030@29:1>@32:0>))
                  end minimizing # of conjunctions(12421)[10] (0.002000 sec.)
                  
                end InterpProver.interpolate_simplify(12162)[9] (0.007999 sec.)
                
              end InterpProver.interpolate_check(12161)[8] (0.008999 sec.)
              output: ((4 * <sum_1030@29:0>) <= (3 + <<sum_1030@29:1>@32:0>))
            end InterpProver.interpolate_log(12160)[7] (0.009998 sec.)
            
          end InterpProver.interpolate_fresh(12159)[6] (0.009998 sec.)
          
        end InterpProver.interpolate(12158)[5] (0.009998 sec.)
        output:
          P[<<sum_1030@29:1>@32:0>](<sum_1030@29:0>:int,<<sum_1030@29:1>@32:0>:int) =
          ((4 * <sum_1030@29:0>) <= (3 + <<sum_1030@29:1>@32:0>))
          P[<<sum_1030@26:1>@38:0>](<sum_1030@29:0>:int,<<sum_1030@29:1>@32:0>:int) =
          ((4 * <sum_1030@29:0>) <= (3 + <<sum_1030@29:1>@32:0>))
      end ApronInterface.convex_hull_interpolate(12157)[4] (0.009998 sec.)
      Horn clauses:
        P[<fail_1170@43:0>](<fail_1170@43:0>:bool)|- bot
        
        P[<sum_1030@26:0>](<sum_1030@26:0>:int),
        P[<<sum_1030@29:1>@32:0>]((-1 + <sum_1030@26:0>):int,(<<sum_1030@26:1>@38:0> + (-1 * <sum_1030@26:0>)):int),
        ((<sum_1030@26:0> > 0) && ((4 * <sum_1030@26:0>) > (3 + <<sum_1030@26:1>@38:0>))) |- bot
        
        P[<sum_1030@29:0>](<sum_1030@29:0>:int), ((<<sum_1030@29:1>@32:0> = 0) && (<sum_1030@29:0> <= 0))
        |- P[<<sum_1030@29:1>@32:0>](<sum_1030@29:0>:int,<<sum_1030@29:1>@32:0>:int)
        
        P[<sum_1030@26:0>]((1 + <sum_1030@29:0>):int), ((1 + <sum_1030@29:0>) > 0)
        |- P[<sum_1030@29:0>](<sum_1030@29:0>:int)
        
        |- P[<sum_1030@26:0>](<sum_1030@26:0>:int)
      lower bounds:
        P[<sum_1030@26:0>](<sum_1030@26:0>:int) = true
        P[<fail_1170@43:0>](var39:bool) = false
        P[<sum_1030@29:0>](<sum_1030@29:0>:int) = ((1 + <sum_1030@29:0>) > 0)
        P[<<sum_1030@29:1>@32:0>](<sum_1030@29:0>:int,<<sum_1030@29:1>@32:0>:int) =
        ((<<sum_1030@29:1>@32:0> = 0) && (<sum_1030@29:0> = 0))
      upper bounds:
        P[<sum_1030@29:0>](var45:int) = true
        P[<sum_1030@26:0>](var42:int) = true
      begin GenHcSolver.classify_pids(15339)[4]
        output:
          [<sum_1030@26:0>;<sum_1030@29:0>]
      end GenHcSolver.classify_pids(15339)[4] (0.000000 sec.)
      begin ApronInterface.convex_hull_interpolate(15350)[4]
        lb:true
        nub:false
        lb':true
        nub':false
        begin InterpProver.interpolate(15351)[5]
          begin InterpProver.interpolate_fresh(15352)[6]
            begin InterpProver.interpolate_log(15353)[7]
              input1: true
              input2: false
              begin InterpProver.interpolate_check(15354)[8]
                begin InterpProver.interpolate_simplify(15355)[9]
                  begin InterpProver.interpolate_quick(15368)[10]
                    
                  end InterpProver.interpolate_quick(15368)[10] (0.000000 sec.)
                  
                end InterpProver.interpolate_simplify(15355)[9] (0.000000 sec.)
                
              end InterpProver.interpolate_check(15354)[8] (0.000000 sec.)
              output: true
            end InterpProver.interpolate_log(15353)[7] (0.000000 sec.)
            
          end InterpProver.interpolate_fresh(15352)[6] (0.000000 sec.)
          
        end InterpProver.interpolate(15351)[5] (0.000000 sec.)
        output:
          P[<sum_1030@26:0>](<sum_1030@26:0>:int) = true
          P[<sum_1030@29:0>](<sum_1030@26:0>:int) = true
      end ApronInterface.convex_hull_interpolate(15350)[4] (0.000000 sec.)
      Horn clauses:
        P[<fail_1170@43:0>](<fail_1170@43:0>:bool)|- bot
        
        P[<<sum_1030@29:1>@32:0>]((-1 + <sum_1030@26:0>):int,(<<sum_1030@26:1>@38:0> + (-1 * <sum_1030@26:0>)):int),
        ((<sum_1030@26:0> > 0) && ((4 * <sum_1030@26:0>) > (3 + <<sum_1030@26:1>@38:0>))) |- bot
        
         ((<<sum_1030@29:1>@32:0> = 0) && (<sum_1030@29:0> <= 0))
        |- P[<<sum_1030@29:1>@32:0>](<sum_1030@29:0>:int,<<sum_1030@29:1>@32:0>:int)
      lower bounds:
        P[<<sum_1030@29:1>@32:0>](<sum_1030@29:0>:int,<<sum_1030@29:1>@32:0>:int) =
        ((<<sum_1030@29:1>@32:0> = 0) && (<sum_1030@29:0> <= 0))
        P[<fail_1170@43:0>](var49:bool) = false
      upper bounds:
        P[<fail_1170@43:0>](var52:bool) = true
      begin GenHcSolver.classify_pids(16970)[4]
        output:
          [<fail_1170@43:0>]
      end GenHcSolver.classify_pids(16970)[4] (0.000000 sec.)
      lb:false
      nub:false
      begin ApronInterface.convex_hull_interpolate(16973)[4]
        lb:false
        nub:false
        lb':false
        nub':false
        begin InterpProver.interpolate(16974)[5]
          begin InterpProver.interpolate_fresh(16975)[6]
            begin InterpProver.interpolate_log(16976)[7]
              input1: false
              input2: false
              begin InterpProver.interpolate_check(16977)[8]
                begin InterpProver.interpolate_simplify(16978)[9]
                  begin InterpProver.interpolate_quick(16991)[10]
                    
                  end InterpProver.interpolate_quick(16991)[10] (0.000000 sec.)
                  begin minimizing # of disjunctions(16995)[10]
                    input: false
                    output: false
                  end minimizing # of disjunctions(16995)[10] (0.000000 sec.)
                  
                end InterpProver.interpolate_simplify(16978)[9] (0.000000 sec.)
                
              end InterpProver.interpolate_check(16977)[8] (0.000000 sec.)
              output: false
            end InterpProver.interpolate_log(16976)[7] (0.000000 sec.)
            
          end InterpProver.interpolate_fresh(16975)[6] (0.000000 sec.)
          
        end InterpProver.interpolate(16974)[5] (0.000000 sec.)
        output:
          P[<fail_1170@43:0>](var49:bool) = false
      end ApronInterface.convex_hull_interpolate(16973)[4] (0.000000 sec.)
      Horn clauses:
        P[<<sum_1030@29:1>@32:0>]((-1 + <sum_1030@26:0>):int,(<<sum_1030@26:1>@38:0> + (-1 * <sum_1030@26:0>)):int),
        ((<sum_1030@26:0> > 0) && ((4 * <sum_1030@26:0>) > (3 + <<sum_1030@26:1>@38:0>))) |- bot
        
         ((<<sum_1030@29:1>@32:0> = 0) && (<sum_1030@29:0> <= 0))
        |- P[<<sum_1030@29:1>@32:0>](<sum_1030@29:0>:int,<<sum_1030@29:1>@32:0>:int)
      lower bounds:
        P[<<sum_1030@29:1>@32:0>](<sum_1030@29:0>:int,<<sum_1030@29:1>@32:0>:int) =
        ((<<sum_1030@29:1>@32:0> = 0) && (<sum_1030@29:0> <= 0))
      upper bounds:
        P[<<sum_1030@29:1>@32:0>](var53:int,var54:int) = (((1 + var53) <= 0) || ((3 * var53) <= var54))
      begin GenHcSolver.classify_pids(18284)[4]
        output:
          [<<sum_1030@29:1>@32:0>]
      end GenHcSolver.classify_pids(18284)[4] (0.000000 sec.)
      lb:((<<sum_1030@29:1>@32:0> = 0) && (<sum_1030@29:0> <= 0))
      nub:(not (((1 + <sum_1030@29:0>) <= 0) || ((3 * <sum_1030@29:0>) <= <<sum_1030@29:1>@32:0>)))
      begin ApronInterface.convex_hull_interpolate(18287)[4]
        lb:((<<sum_1030@29:1>@32:0> = 0) && (<sum_1030@29:0> <= 0))
        nub:(not (((1 + <sum_1030@29:0>) <= 0) || ((3 * <sum_1030@29:0>) <= <<sum_1030@29:1>@32:0>)))
        lb':((<<sum_1030@29:1>@32:0> = 0) && (<sum_1030@29:0> <= 0))
        nub':(not (((1 + <sum_1030@29:0>) <= 0) || ((3 * <sum_1030@29:0>) <= <<sum_1030@29:1>@32:0>)))
        begin InterpProver.interpolate(18288)[5]
          begin InterpProver.interpolate_fresh(18289)[6]
            begin InterpProver.interpolate_log(18290)[7]
              input1: ((<<sum_1030@29:1>@32:0> = 0) && (<sum_1030@29:0> <= 0))
              input2: (not (((1 + <sum_1030@29:0>) <= 0) || ((3 * <sum_1030@29:0>) <= <<sum_1030@29:1>@32:0>)))
              begin InterpProver.interpolate_check(18291)[8]
                begin InterpProver.interpolate_simplify(18292)[9]
                  begin InterpProver.interpolate_quick(18349)[10]
                    begin CsisatInterface.interpolate_csisat_wrap(18358)[11]
                      begin CsisatInterface.interpolate_csisat_post_process(18359)[12]
                        begin CsisatInterface.interpolate_csisat_log(18360)[13]
                          input1: (0 = v_sep_sum_1030_sep_29_sep_1_sep_32_sep_0 & v_sep_sum_1030_sep_29_sep_0 <= 0)
                          input2: (1 <= (1 + v_sep_sum_1030_sep_29_sep_0) & (1 + v_sep_sum_1030_sep_29_sep_1_sep_32_sep_0) <= 3*v_sep_sum_1030_sep_29_sep_0)
                          begin CsisatInterface.interpolate_csisat_raw(18361)[14]
                            
                          end CsisatInterface.interpolate_csisat_raw(18361)[14] (0.000000 sec.)
                          output: (-2*v_sep_sum_1030_sep_29_sep_1_sep_32_sep_0 + 6*v_sep_sum_1030_sep_29_sep_0) <= 0
                          
                        end CsisatInterface.interpolate_csisat_log(18360)[13] (0.000000 sec.)
                        after simplification: (-2*v_sep_sum_1030_sep_29_sep_1_sep_32_sep_0 + 6*v_sep_sum_1030_sep_29_sep_0) <= 0
                        after dnf conversion: (((-2*v_sep_sum_1030_sep_29_sep_1_sep_32_sep_0 + 6*v_sep_sum_1030_sep_29_sep_0) <= 0))
                        
                      end CsisatInterface.interpolate_csisat_post_process(18359)[12] (0.000000 sec.)
                      
                    end CsisatInterface.interpolate_csisat_wrap(18358)[11] (0.000000 sec.)
                    
                  end InterpProver.interpolate_quick(18349)[10] (0.000000 sec.)
                  
                end InterpProver.interpolate_simplify(18292)[9] (0.001000 sec.)
                
              end InterpProver.interpolate_check(18291)[8] (0.002000 sec.)
              output: ((3 * <sum_1030@29:0>) <= <<sum_1030@29:1>@32:0>)
            end InterpProver.interpolate_log(18290)[7] (0.002000 sec.)
            
          end InterpProver.interpolate_fresh(18289)[6] (0.002000 sec.)
          
        end InterpProver.interpolate(18288)[5] (0.002000 sec.)
        output:
          P[<<sum_1030@29:1>@32:0>](<sum_1030@29:0>:int,<<sum_1030@29:1>@32:0>:int) =
          ((3 * <sum_1030@29:0>) <= <<sum_1030@29:1>@32:0>)
      end ApronInterface.convex_hull_interpolate(18287)[4] (0.002000 sec.)
      begin HcSolver.check_validity(18565)[4]
        input:
          P[<fail_1170@43:0>](<fail_1170@43:0>:bool)|- bot
          
          P[<<sum_1030@26:1>@38:0>](<f_main_1167@40:0>:int,<f_main_1167@40:2>:int),
          (((4 * <f_main_1167@40:0>) > (6 + <f_main_1167@40:2>)) && <fail_1170@43:0>)
          |- P[<fail_1170@43:0>](<fail_1170@43:0>:bool)
          
          P[<sum_1030@26:0>](<sum_1030@26:0>:int),
          P[<<sum_1030@29:1>@32:0>]((-1 + <sum_1030@26:0>):int,(<<sum_1030@26:1>@38:0> + (-1 * <sum_1030@26:0>)):int),
          (<sum_1030@26:0> > 0) |- P[<<sum_1030@26:1>@38:0>](<sum_1030@26:0>:int,
                                                             <<sum_1030@26:1>@38:0>:int)
          
          P[<sum_1030@29:0>](<sum_1030@29:0>:int), ((<<sum_1030@29:1>@32:0> = 0) && (<sum_1030@29:0> <= 0))
          |- P[<<sum_1030@29:1>@32:0>](<sum_1030@29:0>:int,<<sum_1030@29:1>@32:0>:int)
          
          P[<sum_1030@26:0>]((1 + <sum_1030@29:0>):int), ((1 + <sum_1030@29:0>) > 0)
          |- P[<sum_1030@29:0>](<sum_1030@29:0>:int)
          
          |- P[<sum_1030@26:0>](<sum_1030@26:0>:int)
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        
      end HcSolver.check_validity(18565)[4] (0.003000 sec.)
      solution:
        P[<fail_1170@43:0>](var49:bool) = false
        P[<<sum_1030@26:1>@38:0>](<sum_1030@29:0>:int,<<sum_1030@29:1>@32:0>:int) =
        ((4 * <sum_1030@29:0>) <= (3 + <<sum_1030@29:1>@32:0>))
        P[<<sum_1030@29:1>@32:0>](<sum_1030@29:0>:int,<<sum_1030@29:1>@32:0>:int) =
        ((3 * <sum_1030@29:0>) <= <<sum_1030@29:1>@32:0>)
        P[<sum_1030@29:0>](<sum_1030@26:0>:int) = true
        P[<sum_1030@26:0>](<sum_1030@26:0>:int) = true
    end GenHcSolver.solve(9227)[3] (0.050993 sec.)
    begin GenHcSolver.solve(19000)[3]
      Horn clauses:
        P[<fail_1170@43:0>](<fail_1170@43:0>:bool)|- bot
        
        P[<<sum_1030@26:1>@38:0>](<f_main_1167@40:0>:int,<f_main_1167@40:2>:int),
        (((4 * <f_main_1167@40:0>) > (6 + <f_main_1167@40:2>)) && <fail_1170@43:0>)
        |- P[<fail_1170@43:0>](<fail_1170@43:0>:bool)
        
        P[<sum_1030@26:0>](<sum_1030@26:0>:int),
        P[<<sum_1030@29:1>@32:0>]((-1 + <sum_1030@26:0>):int,(<<sum_1030@26:1>@38:0> + (-1 * <sum_1030@26:0>)):int),
        (<sum_1030@26:0> > 0) |- P[<<sum_1030@26:1>@38:0>](<sum_1030@26:0>:int,
                                                           <<sum_1030@26:1>@38:0>:int)
        
        P[<sum_1030@29:0>](<sum_1030@29:0>:int), ((<<sum_1030@29:1>@32:0> = 0) && (<sum_1030@29:0> <= 0))
        |- P[<<sum_1030@29:1>@32:0>](<sum_1030@29:0>:int,<<sum_1030@29:1>@32:0>:int)
        
        P[<sum_1030@26:0>]((1 + <sum_1030@29:0>):int), ((1 + <sum_1030@29:0>) > 0)
        |- P[<sum_1030@29:0>](<sum_1030@29:0>:int)
        
        |- P[<sum_1030@26:0>](<sum_1030@26:0>:int)
      lower bounds:
        P[<sum_1030@26:0>](<sum_1030@26:0>:int) = true
        P[<sum_1030@29:0>](<sum_1030@29:0>:int) = ((1 + <sum_1030@29:0>) > 0)
        P[<<sum_1030@29:1>@32:0>](<sum_1030@29:0>:int,<<sum_1030@29:1>@32:0>:int) =
        ((<<sum_1030@29:1>@32:0> = 0) && (<sum_1030@29:0> = 0))
        P[<<sum_1030@26:1>@38:0>](<sum_1030@26:0>:int,<<sum_1030@26:1>@38:0>:int) =
        ((<sum_1030@26:0> = 1) && (<<sum_1030@26:1>@38:0> = <sum_1030@26:0>))
        P[<fail_1170@43:0>](<fail_1170@43:0>:bool) = false
      upper bounds:
        P[<<sum_1030@26:1>@38:0>](var61:int,var62:int) = ((4 * var61) <= (6 + var62))
        P[<<sum_1030@29:1>@32:0>](var57:int,var58:int) = (((1 + var57) <= 0) || ((3 * var57) <= (3 + var58)))
      begin GenHcSolver.classify_pids(21880)[4]
        output:
          [<<sum_1030@29:1>@32:0>;<<sum_1030@26:1>@38:0>]
      end GenHcSolver.classify_pids(21880)[4] (0.000000 sec.)
      begin ApronInterface.convex_hull_interpolate(21930)[4]
        lb:(((<<sum_1030@29:1>@32:0> = 0) && (<sum_1030@29:0> = 0)) ||
            ((<sum_1030@29:0> = 1) && (<<sum_1030@29:1>@32:0> = <sum_1030@29:0>)))
        nub:((not (((1 + <sum_1030@29:0>) <= 0) || ((3 * <sum_1030@29:0>) <= (3 + <<sum_1030@29:1>@32:0>)))) ||
             (not ((4 * <sum_1030@29:0>) <= (6 + <<sum_1030@29:1>@32:0>))))
        begin ExtFormula.Formula.case_analysis_boolean(21951)[5]
          ts: (((<<sum_1030@29:1>@32:0> = 0) && (<sum_1030@29:0> = 0)) ||
               ((<sum_1030@29:0> = 1) && (<<sum_1030@29:1>@32:0> = <sum_1030@29:0>)))
          
        end ExtFormula.Formula.case_analysis_boolean(21951)[5] (0.001000 sec.)
        begin ExtFormula.Formula.case_analysis_boolean(21987)[5]
          ts: (((4 * <sum_1030@29:0>) > (6 + <<sum_1030@29:1>@32:0>)) ||
               (((1 + <sum_1030@29:0>) > 0) && ((3 * <sum_1030@29:0>) > (3 + <<sum_1030@29:1>@32:0>))))
          
        end ExtFormula.Formula.case_analysis_boolean(21987)[5] (0.000000 sec.)
        lb':(((<<sum_1030@29:1>@32:0> + (-1 * <sum_1030@29:0>)) = 0) &&
             (((1 + (-1 * <sum_1030@29:0>)) >= 0) && (<sum_1030@29:0> >= 0)))
        nub':(((-4 + (-1 * <<sum_1030@29:1>@32:0>)) + (4 * <sum_1030@29:0>)) >= 0)
        begin InterpProver.interpolate(21998)[5]
          begin InterpProver.interpolate_fresh(21999)[6]
            begin InterpProver.interpolate_log(22000)[7]
              input1: (((<<sum_1030@29:1>@32:0> + (-1 * <sum_1030@29:0>)) = 0) &&
                       (((1 + (-1 * <sum_1030@29:0>)) >= 0) && (<sum_1030@29:0> >= 0)))
              input2: (((-4 + (-1 * <<sum_1030@29:1>@32:0>)) + (4 * <sum_1030@29:0>)) >= 0)
              begin InterpProver.interpolate_check(22001)[8]
                begin InterpProver.interpolate_simplify(22002)[9]
                  begin InterpProver.interpolate_quick(22079)[10]
                    begin CsisatInterface.interpolate_csisat_wrap(22088)[11]
                      begin CsisatInterface.interpolate_csisat_post_process(22089)[12]
                        begin CsisatInterface.interpolate_csisat_log(22090)[13]
                          input1: (v_sep_sum_1030_sep_29_sep_0 = v_sep_sum_1030_sep_29_sep_1_sep_32_sep_0 & 0 <= v_sep_sum_1030_sep_29_sep_0 & v_sep_sum_1030_sep_29_sep_0 <= 1)
                          input2: (4 + v_sep_sum_1030_sep_29_sep_1_sep_32_sep_0) <= 4*v_sep_sum_1030_sep_29_sep_0
                          begin CsisatInterface.interpolate_csisat_raw(22091)[14]
                            
                          end CsisatInterface.interpolate_csisat_raw(22091)[14] (0.000000 sec.)
                          output: (-2*v_sep_sum_1030_sep_29_sep_1_sep_32_sep_0 + 8*v_sep_sum_1030_sep_29_sep_0) <= 6
                          
                        end CsisatInterface.interpolate_csisat_log(22090)[13] (0.000000 sec.)
                        after simplification: (-2*v_sep_sum_1030_sep_29_sep_1_sep_32_sep_0 + 8*v_sep_sum_1030_sep_29_sep_0) <= 6
                        after dnf conversion: (((-2*v_sep_sum_1030_sep_29_sep_1_sep_32_sep_0 + 8*v_sep_sum_1030_sep_29_sep_0) <= 6))
                        
                      end CsisatInterface.interpolate_csisat_post_process(22089)[12] (0.000000 sec.)
                      
                    end CsisatInterface.interpolate_csisat_wrap(22088)[11] (0.000000 sec.)
                    
                  end InterpProver.interpolate_quick(22079)[10] (0.001000 sec.)
                  
                end InterpProver.interpolate_simplify(22002)[9] (0.001000 sec.)
                
              end InterpProver.interpolate_check(22001)[8] (0.001999 sec.)
              output: ((4 * <sum_1030@29:0>) <= (3 + <<sum_1030@29:1>@32:0>))
            end InterpProver.interpolate_log(22000)[7] (0.002999 sec.)
            
          end InterpProver.interpolate_fresh(21999)[6] (0.002999 sec.)
          
        end InterpProver.interpolate(21998)[5] (0.002999 sec.)
        output:
          P[<<sum_1030@29:1>@32:0>](<sum_1030@29:0>:int,<<sum_1030@29:1>@32:0>:int) =
          ((4 * <sum_1030@29:0>) <= (3 + <<sum_1030@29:1>@32:0>))
          P[<<sum_1030@26:1>@38:0>](<sum_1030@29:0>:int,<<sum_1030@29:1>@32:0>:int) =
          ((4 * <sum_1030@29:0>) <= (3 + <<sum_1030@29:1>@32:0>))
      end ApronInterface.convex_hull_interpolate(21930)[4] (0.003999 sec.)
      Horn clauses:
        P[<fail_1170@43:0>](<fail_1170@43:0>:bool)|- bot
        
        P[<sum_1030@26:0>](<sum_1030@26:0>:int),
        P[<<sum_1030@29:1>@32:0>]((-1 + <sum_1030@26:0>):int,(<<sum_1030@26:1>@38:0> + (-1 * <sum_1030@26:0>)):int),
        ((<sum_1030@26:0> > 0) && ((4 * <sum_1030@26:0>) > (3 + <<sum_1030@26:1>@38:0>))) |- bot
        
        P[<sum_1030@29:0>](<sum_1030@29:0>:int), ((<<sum_1030@29:1>@32:0> = 0) && (<sum_1030@29:0> <= 0))
        |- P[<<sum_1030@29:1>@32:0>](<sum_1030@29:0>:int,<<sum_1030@29:1>@32:0>:int)
        
        P[<sum_1030@26:0>]((1 + <sum_1030@29:0>):int), ((1 + <sum_1030@29:0>) > 0)
        |- P[<sum_1030@29:0>](<sum_1030@29:0>:int)
        
        |- P[<sum_1030@26:0>](<sum_1030@26:0>:int)
      lower bounds:
        P[<sum_1030@26:0>](<sum_1030@26:0>:int) = true
        P[<fail_1170@43:0>](var66:bool) = false
        P[<sum_1030@29:0>](<sum_1030@29:0>:int) = ((1 + <sum_1030@29:0>) > 0)
        P[<<sum_1030@29:1>@32:0>](<sum_1030@29:0>:int,<<sum_1030@29:1>@32:0>:int) =
        ((<<sum_1030@29:1>@32:0> = 0) && (<sum_1030@29:0> = 0))
      upper bounds:
        P[<sum_1030@29:0>](var72:int) = true
        P[<sum_1030@26:0>](var69:int) = true
      begin GenHcSolver.classify_pids(24901)[4]
        output:
          [<sum_1030@26:0>;<sum_1030@29:0>]
      end GenHcSolver.classify_pids(24901)[4] (0.000000 sec.)
      begin ApronInterface.convex_hull_interpolate(24912)[4]
        lb:true
        nub:false
        begin ExtFormula.Formula.case_analysis_boolean(24915)[5]
          ts: true
          
        end ExtFormula.Formula.case_analysis_boolean(24915)[5] (0.000000 sec.)
        begin ExtFormula.Formula.case_analysis_boolean(24920)[5]
          ts: false
          
        end ExtFormula.Formula.case_analysis_boolean(24920)[5] (0.000000 sec.)
        lb':true
        nub':(-1 >= 0)
        begin InterpProver.interpolate(24923)[5]
          begin InterpProver.interpolate_fresh(24924)[6]
            begin InterpProver.interpolate_log(24925)[7]
              input1: true
              input2: (-1 >= 0)
              begin InterpProver.interpolate_check(24926)[8]
                begin InterpProver.interpolate_simplify(24927)[9]
                  begin InterpProver.interpolate_quick(24941)[10]
                    
                  end InterpProver.interpolate_quick(24941)[10] (0.000000 sec.)
                  
                end InterpProver.interpolate_simplify(24927)[9] (0.000000 sec.)
                
              end InterpProver.interpolate_check(24926)[8] (0.000000 sec.)
              output: true
            end InterpProver.interpolate_log(24925)[7] (0.000000 sec.)
            
          end InterpProver.interpolate_fresh(24924)[6] (0.000000 sec.)
          
        end InterpProver.interpolate(24923)[5] (0.000000 sec.)
        output:
          P[<sum_1030@26:0>](<sum_1030@26:0>:int) = true
          P[<sum_1030@29:0>](<sum_1030@26:0>:int) = true
      end ApronInterface.convex_hull_interpolate(24912)[4] (0.000000 sec.)
      Horn clauses:
        P[<fail_1170@43:0>](<fail_1170@43:0>:bool)|- bot
        
        P[<<sum_1030@29:1>@32:0>]((-1 + <sum_1030@26:0>):int,(<<sum_1030@26:1>@38:0> + (-1 * <sum_1030@26:0>)):int),
        ((<sum_1030@26:0> > 0) && ((4 * <sum_1030@26:0>) > (3 + <<sum_1030@26:1>@38:0>))) |- bot
        
         ((<<sum_1030@29:1>@32:0> = 0) && (<sum_1030@29:0> <= 0))
        |- P[<<sum_1030@29:1>@32:0>](<sum_1030@29:0>:int,<<sum_1030@29:1>@32:0>:int)
      lower bounds:
        P[<<sum_1030@29:1>@32:0>](<sum_1030@29:0>:int,<<sum_1030@29:1>@32:0>:int) =
        ((<<sum_1030@29:1>@32:0> = 0) && (<sum_1030@29:0> <= 0))
        P[<fail_1170@43:0>](var76:bool) = false
      upper bounds:
        P[<fail_1170@43:0>](var79:bool) = true
      begin GenHcSolver.classify_pids(26545)[4]
        output:
          [<fail_1170@43:0>]
      end GenHcSolver.classify_pids(26545)[4] (0.000000 sec.)
      lb:false
      nub:false
      begin ApronInterface.convex_hull_interpolate(26548)[4]
        lb:false
        nub:false
        begin ExtFormula.Formula.case_analysis_boolean(26551)[5]
          ts: false
          
        end ExtFormula.Formula.case_analysis_boolean(26551)[5] (0.000000 sec.)
        begin ExtFormula.Formula.case_analysis_boolean(26556)[5]
          ts: false
          
        end ExtFormula.Formula.case_analysis_boolean(26556)[5] (0.000000 sec.)
        lb':(-1 >= 0)
        nub':(-1 >= 0)
        begin InterpProver.interpolate(26559)[5]
          begin InterpProver.interpolate_fresh(26560)[6]
            begin InterpProver.interpolate_log(26561)[7]
              input1: (-1 >= 0)
              input2: (-1 >= 0)
              begin InterpProver.interpolate_check(26562)[8]
                begin InterpProver.interpolate_simplify(26563)[9]
                  begin InterpProver.interpolate_quick(26578)[10]
                    
                  end InterpProver.interpolate_quick(26578)[10] (0.000000 sec.)
                  begin minimizing # of disjunctions(26582)[10]
                    input: false
                    output: false
                  end minimizing # of disjunctions(26582)[10] (0.000000 sec.)
                  
                end InterpProver.interpolate_simplify(26563)[9] (0.001000 sec.)
                
              end InterpProver.interpolate_check(26562)[8] (0.001000 sec.)
              output: false
            end InterpProver.interpolate_log(26561)[7] (0.001000 sec.)
            
          end InterpProver.interpolate_fresh(26560)[6] (0.001000 sec.)
          
        end InterpProver.interpolate(26559)[5] (0.001000 sec.)
        output:
          P[<fail_1170@43:0>](var76:bool) = false
      end ApronInterface.convex_hull_interpolate(26548)[4] (0.001000 sec.)
      Horn clauses:
        P[<<sum_1030@29:1>@32:0>]((-1 + <sum_1030@26:0>):int,(<<sum_1030@26:1>@38:0> + (-1 * <sum_1030@26:0>)):int),
        ((<sum_1030@26:0> > 0) && ((4 * <sum_1030@26:0>) > (3 + <<sum_1030@26:1>@38:0>))) |- bot
        
         ((<<sum_1030@29:1>@32:0> = 0) && (<sum_1030@29:0> <= 0))
        |- P[<<sum_1030@29:1>@32:0>](<sum_1030@29:0>:int,<<sum_1030@29:1>@32:0>:int)
      lower bounds:
        P[<<sum_1030@29:1>@32:0>](<sum_1030@29:0>:int,<<sum_1030@29:1>@32:0>:int) =
        ((<<sum_1030@29:1>@32:0> = 0) && (<sum_1030@29:0> <= 0))
      upper bounds:
        P[<<sum_1030@29:1>@32:0>](var80:int,var81:int) = (((1 + var80) <= 0) || ((3 * var80) <= var81))
      begin GenHcSolver.classify_pids(27878)[4]
        output:
          [<<sum_1030@29:1>@32:0>]
      end GenHcSolver.classify_pids(27878)[4] (0.000000 sec.)
      lb:((<<sum_1030@29:1>@32:0> = 0) && (<sum_1030@29:0> <= 0))
      nub:(not (((1 + <sum_1030@29:0>) <= 0) || ((3 * <sum_1030@29:0>) <= <<sum_1030@29:1>@32:0>)))
      begin ApronInterface.convex_hull_interpolate(27881)[4]
        lb:((<<sum_1030@29:1>@32:0> = 0) && (<sum_1030@29:0> <= 0))
        nub:(not (((1 + <sum_1030@29:0>) <= 0) || ((3 * <sum_1030@29:0>) <= <<sum_1030@29:1>@32:0>)))
        begin ExtFormula.Formula.case_analysis_boolean(27891)[5]
          ts: ((<<sum_1030@29:1>@32:0> = 0) && (<sum_1030@29:0> <= 0))
          
        end ExtFormula.Formula.case_analysis_boolean(27891)[5] (0.000000 sec.)
        begin ExtFormula.Formula.case_analysis_boolean(27913)[5]
          ts: (((1 + <sum_1030@29:0>) > 0) && ((3 * <sum_1030@29:0>) > <<sum_1030@29:1>@32:0>))
          
        end ExtFormula.Formula.case_analysis_boolean(27913)[5] (0.000000 sec.)
        lb':((<<sum_1030@29:1>@32:0> = 0) && ((-1 * <sum_1030@29:0>) >= 0))
        nub':((<sum_1030@29:0> >= 0) && (((-1 + (-1 * <<sum_1030@29:1>@32:0>)) + (3 * <sum_1030@29:0>)) >= 0))
        begin InterpProver.interpolate(27920)[5]
          begin InterpProver.interpolate_fresh(27921)[6]
            begin InterpProver.interpolate_log(27922)[7]
              input1: ((<<sum_1030@29:1>@32:0> = 0) && ((-1 * <sum_1030@29:0>) >= 0))
              input2: ((<sum_1030@29:0> >= 0) && (((-1 + (-1 * <<sum_1030@29:1>@32:0>)) + (3 * <sum_1030@29:0>)) >= 0))
              begin InterpProver.interpolate_check(27923)[8]
                begin InterpProver.interpolate_simplify(27924)[9]
                  begin InterpProver.interpolate_quick(27981)[10]
                    begin CsisatInterface.interpolate_csisat_wrap(27990)[11]
                      begin CsisatInterface.interpolate_csisat_post_process(27991)[12]
                        begin CsisatInterface.interpolate_csisat_log(27992)[13]
                          input1: (0 = v_sep_sum_1030_sep_29_sep_1_sep_32_sep_0 & v_sep_sum_1030_sep_29_sep_0 <= 0)
                          input2: (0 <= v_sep_sum_1030_sep_29_sep_0 & (1 + v_sep_sum_1030_sep_29_sep_1_sep_32_sep_0) <= 3*v_sep_sum_1030_sep_29_sep_0)
                          begin CsisatInterface.interpolate_csisat_raw(27993)[14]
                            
                          end CsisatInterface.interpolate_csisat_raw(27993)[14] (0.000000 sec.)
                          output: (-2*v_sep_sum_1030_sep_29_sep_1_sep_32_sep_0 + 6*v_sep_sum_1030_sep_29_sep_0) <= 0
                          
                        end CsisatInterface.interpolate_csisat_log(27992)[13] (0.000000 sec.)
                        after simplification: (-2*v_sep_sum_1030_sep_29_sep_1_sep_32_sep_0 + 6*v_sep_sum_1030_sep_29_sep_0) <= 0
                        after dnf conversion: (((-2*v_sep_sum_1030_sep_29_sep_1_sep_32_sep_0 + 6*v_sep_sum_1030_sep_29_sep_0) <= 0))
                        
                      end CsisatInterface.interpolate_csisat_post_process(27991)[12] (0.000000 sec.)
                      
                    end CsisatInterface.interpolate_csisat_wrap(27990)[11] (0.000000 sec.)
                    
                  end InterpProver.interpolate_quick(27981)[10] (0.001000 sec.)
                  
                end InterpProver.interpolate_simplify(27924)[9] (0.001000 sec.)
                
              end InterpProver.interpolate_check(27923)[8] (0.001000 sec.)
              output: ((3 * <sum_1030@29:0>) <= <<sum_1030@29:1>@32:0>)
            end InterpProver.interpolate_log(27922)[7] (0.001000 sec.)
            
          end InterpProver.interpolate_fresh(27921)[6] (0.001000 sec.)
          
        end InterpProver.interpolate(27920)[5] (0.001000 sec.)
        output:
          P[<<sum_1030@29:1>@32:0>](<sum_1030@29:0>:int,<<sum_1030@29:1>@32:0>:int) =
          ((3 * <sum_1030@29:0>) <= <<sum_1030@29:1>@32:0>)
      end ApronInterface.convex_hull_interpolate(27881)[4] (0.002000 sec.)
      begin HcSolver.check_validity(28197)[4]
        input:
          P[<fail_1170@43:0>](<fail_1170@43:0>:bool)|- bot
          
          P[<<sum_1030@26:1>@38:0>](<f_main_1167@40:0>:int,<f_main_1167@40:2>:int),
          (((4 * <f_main_1167@40:0>) > (6 + <f_main_1167@40:2>)) && <fail_1170@43:0>)
          |- P[<fail_1170@43:0>](<fail_1170@43:0>:bool)
          
          P[<sum_1030@26:0>](<sum_1030@26:0>:int),
          P[<<sum_1030@29:1>@32:0>]((-1 + <sum_1030@26:0>):int,(<<sum_1030@26:1>@38:0> + (-1 * <sum_1030@26:0>)):int),
          (<sum_1030@26:0> > 0) |- P[<<sum_1030@26:1>@38:0>](<sum_1030@26:0>:int,
                                                             <<sum_1030@26:1>@38:0>:int)
          
          P[<sum_1030@29:0>](<sum_1030@29:0>:int), ((<<sum_1030@29:1>@32:0> = 0) && (<sum_1030@29:0> <= 0))
          |- P[<<sum_1030@29:1>@32:0>](<sum_1030@29:0>:int,<<sum_1030@29:1>@32:0>:int)
          
          P[<sum_1030@26:0>]((1 + <sum_1030@29:0>):int), ((1 + <sum_1030@29:0>) > 0)
          |- P[<sum_1030@29:0>](<sum_1030@29:0>:int)
          
          |- P[<sum_1030@26:0>](<sum_1030@26:0>:int)
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        
      end HcSolver.check_validity(28197)[4] (0.002000 sec.)
      solution:
        P[<fail_1170@43:0>](var76:bool) = false
        P[<<sum_1030@26:1>@38:0>](<sum_1030@29:0>:int,<<sum_1030@29:1>@32:0>:int) =
        ((4 * <sum_1030@29:0>) <= (3 + <<sum_1030@29:1>@32:0>))
        P[<<sum_1030@29:1>@32:0>](<sum_1030@29:0>:int,<<sum_1030@29:1>@32:0>:int) =
        ((3 * <sum_1030@29:0>) <= <<sum_1030@29:1>@32:0>)
        P[<sum_1030@29:0>](<sum_1030@26:0>:int) = true
        P[<sum_1030@26:0>](<sum_1030@26:0>:int) = true
    end GenHcSolver.solve(19000)[3] (0.045993 sec.)
    begin YhornInterface.solve(28632)[3]
      begin HcSolver.solve_ub(28633)[4]
        encoded:
          P[<fail_1170@43:0>](<fail_1170@43:0>:int)|- bot
          
          P[<<sum_1030@26:1>@38:0>](<f_main_1167@40:0>:int,<f_main_1167@40:2>:int),
          (((4 * <f_main_1167@40:0>) > (6 + <f_main_1167@40:2>)) && (<fail_1170@43:0> = 1))
          |- P[<fail_1170@43:0>](<fail_1170@43:0>:int)
          
          P[<sum_1030@26:0>](<sum_1030@26:0>:int),
          P[<<sum_1030@29:1>@32:0>]((-1 + <sum_1030@26:0>):int,(<<sum_1030@26:1>@38:0> + (-1 * <sum_1030@26:0>)):int),
          (<sum_1030@26:0> > 0) |- P[<<sum_1030@26:1>@38:0>](<sum_1030@26:0>:int,
                                                             <<sum_1030@26:1>@38:0>:int)
          
          P[<sum_1030@29:0>](<sum_1030@29:0>:int), ((<<sum_1030@29:1>@32:0> = 0) && (<sum_1030@29:0> <= 0))
          |- P[<<sum_1030@29:1>@32:0>](<sum_1030@29:0>:int,<<sum_1030@29:1>@32:0>:int)
          
          P[<sum_1030@26:0>]((1 + <sum_1030@29:0>):int), ((1 + <sum_1030@29:0>) > 0)
          |- P[<sum_1030@29:0>](<sum_1030@29:0>:int)
          
          |- P[<sum_1030@26:0>](<sum_1030@26:0>:int)
        input to Yhorn:
          P[<fail_1170@43:0>](<fail_1170@43:0>:int)|- bot
          
          P[<<sum_1030@26:1>@38:0>](<f_main_1167@40:0>:int,<f_main_1167@40:2>:int),
          (((4 * <f_main_1167@40:0>) > (6 + <f_main_1167@40:2>)) && (<fail_1170@43:0> = 1))
          |- P[<fail_1170@43:0>](<fail_1170@43:0>:int)
          
          P[<sum_1030@26:0>](<sum_1030@26:0>:int),
          P[<<sum_1030@29:1>@32:0>](var82:int,var83:int),
          (((var83 + <sum_1030@26:0>) = <<sum_1030@26:1>@38:0>) &&
           (((1 + var82) = <sum_1030@26:0>) && (<sum_1030@26:0> > 0)))
          |- P[<<sum_1030@26:1>@38:0>](<sum_1030@26:0>:int,<<sum_1030@26:1>@38:0>:int)
          
          P[<sum_1030@29:0>](<sum_1030@29:0>:int), ((<sum_1030@29:0> <= 0) && (<<sum_1030@29:1>@32:0> = 0))
          |- P[<<sum_1030@29:1>@32:0>](<sum_1030@29:0>:int,<<sum_1030@29:1>@32:0>:int)
          
          P[<sum_1030@26:0>](var84:int), ((var84 = (1 + <sum_1030@29:0>)) && ((1 + <sum_1030@29:0>) > 0))
          |- P[<sum_1030@29:0>](<sum_1030@29:0>:int)
          Yhorn (Wed Sep 25 10:52:05 JST 2013)


(0=0) & (v_sep_fail_1170_sep_43_sep_0($67)) -> 1=0.
(($67-1=0) & (4$68-$69-6>0)) & (v_sep_sum_1030_sep_26_sep_1_sep_38_sep_0($68,$69)) -> v_sep_fail_1170_sep_43_sep_0($67).
(($70>0) & (-$70+$71+1=0) & ($70+$72-$73=0)) & (v_sep_sum_1030_sep_29_sep_1_sep_32_sep_0($71,$72)) & (v_sep_sum_1030_sep_26_sep_0($70)) -> v_sep_sum_1030_sep_26_sep_1_sep_38_sep_0($70,$73).
(($74=0) & ($75<=0)) & (v_sep_sum_1030_sep_29_sep_0($75)) -> v_sep_sum_1030_sep_29_sep_1_sep_32_sep_0($75,$74).
(($75+1>0) & (-$75+$76-1=0)) & (v_sep_sum_1030_sep_26_sep_0($76)) -> v_sep_sum_1030_sep_29_sep_0($75).
0=0 -> v_sep_sum_1030_sep_26_sep_0($70).


v_sep_fail_1170_sep_43_sep_0: X
v_sep_sum_1030_sep_26_sep_0: X
v_sep_sum_1030_sep_26_sep_1_sep_38_sep_0: X
v_sep_sum_1030_sep_29_sep_0: X
v_sep_sum_1030_sep_29_sep_1_sep_32_sep_0: X
.......
v_sep_fail_1170_sep_43_sep_0: X
v_sep_sum_1030_sep_26_sep_0: X
v_sep_sum_1030_sep_26_sep_1_sep_38_sep_0: X
v_sep_sum_1030_sep_29_sep_0: X
v_sep_sum_1030_sep_29_sep_1_sep_32_sep_0: X
...
v_sep_fail_1170_sep_43_sep_0: X
v_sep_sum_1030_sep_26_sep_0: X
v_sep_sum_1030_sep_26_sep_1_sep_38_sep_0: X
v_sep_sum_1030_sep_29_sep_0: X
v_sep_sum_1030_sep_29_sep_1_sep_32_sep_0: X
.....
v_sep_fail_1170_sep_43_sep_0: X
v_sep_sum_1030_sep_26_sep_0: X
v_sep_sum_1030_sep_26_sep_1_sep_38_sep_0: X
v_sep_sum_1030_sep_29_sep_0: X
v_sep_sum_1030_sep_29_sep_1_sep_32_sep_0: X
......
v_sep_fail_1170_sep_43_sep_0: X
v_sep_sum_1030_sep_26_sep_0: X
v_sep_sum_1030_sep_26_sep_1_sep_38_sep_0: X
v_sep_sum_1030_sep_29_sep_0: X
v_sep_sum_1030_sep_29_sep_1_sep_32_sep_0: X
.......(0=0) & (v_sep_fail_1170_sep_43_sep_0($67)) -> 1=0.
(($67-1=0) & (4$68-$69-6>0)) & (v_sep_sum_1030_sep_26_sep_1_sep_38_sep_0($68,$69)) -> v_sep_fail_1170_sep_43_sep_0($67).
(($70>0) & (-$70+$71+1=0) & ($70+$72-$73=0)) & (v_sep_sum_1030_sep_29_sep_1_sep_32_sep_0($71,$72)) & (v_sep_sum_1030_sep_26_sep_0($70)) -> v_sep_sum_1030_sep_26_sep_1_sep_38_sep_0($70,$73).
(($74=0) & ($75<=0)) & (v_sep_sum_1030_sep_29_sep_0($75)) -> v_sep_sum_1030_sep_29_sep_1_sep_32_sep_0($75,$74).
(($75+1>0) & (-$75+$76-1=0)) & (v_sep_sum_1030_sep_26_sep_0($76)) -> v_sep_sum_1030_sep_29_sep_0($75).
0=0 -> v_sep_sum_1030_sep_26_sep_0($70).

          |- P[<sum_1030@26:0>](<sum_1030@26:0>:int)
        solution:
          P[<fail_1170@43:0>]($77:bool) = false
          P[<sum_1030@26:0>]($90:int) = true
          P[<<sum_1030@26:1>@38:0>]($80:int,$82:int) = ((4 * $80) <= (3 + $82))
          P[<sum_1030@29:0>]($93:int) = true
          P[<<sum_1030@29:1>@32:0>]($85:int,$87:int) = ((3 * $85) <= $87)
        
      end HcSolver.solve_ub(28633)[4] (0.016997 sec.)
      begin HcSolver.check_validity(28903)[4]
        input:
          P[<fail_1170@43:0>](<fail_1170@43:0>:bool)|- bot
          
          P[<<sum_1030@26:1>@38:0>](<f_main_1167@40:0>:int,<f_main_1167@40:2>:int),
          (((4 * <f_main_1167@40:0>) > (6 + <f_main_1167@40:2>)) && <fail_1170@43:0>)
          |- P[<fail_1170@43:0>](<fail_1170@43:0>:bool)
          
          P[<sum_1030@26:0>](<sum_1030@26:0>:int),
          P[<<sum_1030@29:1>@32:0>]((-1 + <sum_1030@26:0>):int,(<<sum_1030@26:1>@38:0> + (-1 * <sum_1030@26:0>)):int),
          (<sum_1030@26:0> > 0) |- P[<<sum_1030@26:1>@38:0>](<sum_1030@26:0>:int,
                                                             <<sum_1030@26:1>@38:0>:int)
          
          P[<sum_1030@29:0>](<sum_1030@29:0>:int), ((<<sum_1030@29:1>@32:0> = 0) && (<sum_1030@29:0> <= 0))
          |- P[<<sum_1030@29:1>@32:0>](<sum_1030@29:0>:int,<<sum_1030@29:1>@32:0>:int)
          
          P[<sum_1030@26:0>]((1 + <sum_1030@29:0>):int), ((1 + <sum_1030@29:0>) > 0)
          |- P[<sum_1030@29:0>](<sum_1030@29:0>:int)
          
          |- P[<sum_1030@26:0>](<sum_1030@26:0>:int)
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        
      end HcSolver.check_validity(28903)[4] (0.003000 sec.)
      solution:
        P[<fail_1170@43:0>]($77:bool) = false
        P[<sum_1030@26:0>]($90:int) = true
        P[<<sum_1030@26:1>@38:0>]($80:int,$82:int) = ((4 * $80) <= (3 + $82))
        P[<sum_1030@29:0>]($93:int) = true
        P[<<sum_1030@29:1>@32:0>]($85:int,$87:int) = ((3 * $85) <= $87)
    end YhornInterface.solve(28632)[3] (0.019997 sec.)
    
  end RefTypeInfer.infer_etrs(7634)[2] (0.161976 sec.)
  refinement types:
    main_1165: X
    f_1168: v1:int -> X
    main_1032: v1:int -> (v2:unit -> X) -> X
    sum_1030: v1:int -> (v2:{v2:int | ((4 * v1) <= (3 + v2))} -> X) -> X
    sum_1030: v1:int -> (v2:{v2:int | ((3 * v1) <= v2)} -> X) -> X
    f_sum_1166: v1:int -> (v2:int -> X) -> v4:int -> X
    f_main_1167: v1:int -> (v2:unit -> X) -> v4:int -> X
    fail_1170: v1:{v1:bool | false} -> (v2:unit -> X) -> X
    f_1169: var93:int -> var92:unit -> X
  abstraction types:
    main_1165: X
    f_1168: v1:int -> X
    main_1032: v1:int -> (v2:unit -> X) -> X
    sum_1030: var94:int -> (var95:int[var95 -> ((4 * var94) <= (3 + var95)),
                                      var95 -> ((3 * var94) <= var95)] -> X) -> X
    f_sum_1166: v1:int -> (v2:int -> X) -> v4:int -> X
    f_main_1167: v1:int -> (v2:unit -> X) -> v4:int -> X
    fail_1170: v1:bool -> (v2:unit -> X) -> X
    f_1169: var93:int -> var92:unit -> X
  
end AbsTypeInfer.refine(7633)[1] (0.163975 sec.)
DONE!

Prefix of spurious counter-example::
0; 0; 0; 1; 0; 0; 1

Program with abstraction types (CEGAR-cycle 2)::
Main: main_1165
  main_1165 -> (rand_int f_1168)
  f_1168 x_1140 -> (main_1032 x_1140 (f_1169 x_1140))
  f_1169 x_1140 x_1137 -> end
  f_main_1167 n_1033 k_main_1109 x_1113 when (((4 * n_1033) - 6) <= x_1113) -> (k_main_1109 ())
  f_main_1167 n_1033 k_main_1109 x_1113 when (not (((4 * n_1033) - 6) <= x_1113)) -> (fail_1170 true k_main_1109)
  f_sum_1166 n_1031 k_sum_1077 x_1081 -> (k_sum_1077 (n_1031 + x_1081))
  fail_1170 b k -> {fail} => (k ())
  main_1032 n_1033 k_main_1109 -> (sum_1030 n_1033 (f_main_1167 n_1033 k_main_1109))
  sum_1030 n_1031 k_sum_1077 when (n_1031 <= 0) -> (k_sum_1077 0)
  sum_1030 n_1031 k_sum_1077 when (not (n_1031 <= 0)) -> (sum_1030 (n_1031 - 1) (f_sum_1166 n_1031 k_sum_1077))
Types:
  main_1165 : X
  fail_1170 : (x_1:bool[x_1] -> (unit -> X) -> X)
  sum_1030 : (x_1:int -> (x_3:int[3*x_1 <= x_3; 4*x_1 <= x_3 + 3; 4*x_1 <= x_3] -> X) -> X)
  
(2-1) Abstracting ... DONE!

(2-2) Checking HORS ... DONE!

Error trace::
  main_1165 ... --> 
  f_1168 ... --> 
  main_1032 ... --> 
  sum_1030 [2/2] ... --> 
  sum_1030 [2/2] ... --> 
  sum_1030 [1/2] ... --> 
  f_sum_1166 ... --> 
  f_sum_1166 ... --> 
  f_main_1167 [2/2] ... --> 
  fail_1170 ... --> fail -->
  ERROR!

Spurious counter-example::
  0; 0; 0; 1; 1; 0; 0; 0; 1; 0

(2-3) Checking counter-example ... DONE!

(2-4) Discovering predicates ... 
begin AbsTypeInfer.refine(30038)[1]
  program:
    main_1165  | true = ((Random.int 0) f_1168)
    f_1168 x_1140 | true = (main_1032 x_1140
                                      (f_1169 x_1140))
    f_1169 x_1140 x_1137 | true = end
    f_main_1167 n_1033 k_main_1109 x_1113 | (((4 * n_1033) - 6) <= x_1113) = (
    k_main_1109 ())
    f_main_1167 n_1033 k_main_1109 x_1113 | (not (((4 * n_1033) - 6) <= x_1113)) = (
    fail_1170 true
              k_main_1109)
    f_sum_1166 n_1031 k_sum_1077 x_1081 | true = (k_sum_1077 (n_1031 + x_1081))
    fail_1170 b k | true = (fail ())
    main_1032 n_1033 k_main_1109 | true = (sum_1030 n_1033
                                                    (f_main_1167 n_1033
                                                                 k_main_1109))
    sum_1030 n_1031 k_sum_1077 | (n_1031 <= 0) = (k_sum_1077 0)
    sum_1030 n_1031 k_sum_1077 | (not (n_1031 <= 0)) = (sum_1030 (n_1031 - 1)
                                                                 (f_sum_1166 n_1031
                                                                    k_sum_1077))
    main_1165:X
    f_1168:int -> X
    f_1169:int -> unit -> X
    f_main_1167:int -> (unit -> X) -> int -> X
    f_sum_1166:int -> (int -> X) -> int -> X
    fail_1170:bool -> (unit -> X) -> X
    main_1032:int -> (unit -> X) -> X
    sum_1030:int -> (int -> X) -> X
  inlined functions: f_1168,f_1169,f_main_1167,f_sum_1166,main_1032
  counterexample: 0:0:0:1:1:0:0:0:1:0
  error traces:
    [true.nop(<f_1168@49:0> = var98)
     [true.(<main_1032@51:0> = <f_1168@49:0>)
      [true.(<sum_1030@53:0> = <main_1032@51:0>)
       [(not (<sum_1030@53:0> <= 0)).(<sum_1030@56:0> = (<sum_1030@53:0> - 1))
        [(not (<sum_1030@56:0> <= 0)).(<sum_1030@59:0> = (<sum_1030@56:0> - 1))
         [(<sum_1030@59:0> <= 0).(<<sum_1030@59:1>@62:0> = 0)
          [true.((<f_sum_1166@64:0> = <sum_1030@56:0>) && (<f_sum_1166@64:2> = <<sum_1030@59:1>@62:0>))
           [true.(<<f_sum_1166@64:1>@66:0> = (<f_sum_1166@64:0> + <f_sum_1166@64:2>))
            [true.(<<sum_1030@56:1>@68:0> = <<f_sum_1166@64:1>@66:0>)
             [true.((<f_sum_1166@70:0> = <sum_1030@53:0>) && (<f_sum_1166@70:2> = <<sum_1030@56:1>@68:0>))
              [true.(<<f_sum_1166@70:1>@72:0> = (<f_sum_1166@70:0> + <f_sum_1166@70:2>))
               [true.(<<sum_1030@53:1>@74:0> = <<f_sum_1166@70:1>@72:0>)
                [true.((<f_main_1167@76:0> = <main_1032@51:0>) && (<f_main_1167@76:2> = <<sum_1030@53:1>@74:0>))
                 [(not (((4 * <f_main_1167@76:0>) - 6) <= <f_main_1167@76:2>)).(<fail_1170@79:0> = true)[true.error
  begin RefTypeInfer.infer_etrs(30039)[2]
    horn clauses:
      P[<fail_1170@79:0>](<fail_1170@79:0>:bool)|- bot
      
      P[<f_main_1167@76:2>](<f_main_1167@76:0>:int,<f_main_1167@76:2>:int),
      (((4 * <f_main_1167@76:0>) > (6 + <f_main_1167@76:2>)) && <fail_1170@79:0>)
      |- P[<fail_1170@79:0>](<fail_1170@79:0>:bool)
      
      P[<main_1032@51:0>](<f_main_1167@76:0>:int),
      P[<<sum_1030@53:1>@74:0>](<f_main_1167@76:0>:int,<f_main_1167@76:2>:int)|- P[<f_main_1167@76:2>](
      <f_main_1167@76:0>:int,<f_main_1167@76:2>:int)
      
      P[<sum_1030@53:0>](<sum_1030@53:0>:int),
      P[<<f_sum_1166@70:1>@72:0>](<sum_1030@53:0>:int,<<sum_1030@53:1>@74:0>:int), (
      <sum_1030@53:0> > 0) |- P[<<sum_1030@53:1>@74:0>](<sum_1030@53:0>:int,
                                                        <<sum_1030@53:1>@74:0>:int)
      
      P[<f_sum_1166@70:2>](<f_sum_1166@70:0>:int,(<<f_sum_1166@70:1>@72:0> + (-1 * <f_sum_1166@70:0>)):int)|- P[<<f_sum_1166@70:1>@72:0>](
      <f_sum_1166@70:0>:int,<<f_sum_1166@70:1>@72:0>:int)
      
      P[<sum_1030@53:0>](<f_sum_1166@70:0>:int),
      P[<<sum_1030@56:1>@68:0>]((-1 + <f_sum_1166@70:0>):int,<f_sum_1166@70:2>:int), (
      <f_sum_1166@70:0> > 0) |- P[<f_sum_1166@70:2>](<f_sum_1166@70:0>:int,
                                                     <f_sum_1166@70:2>:int)
      
      P[<sum_1030@56:0>](<sum_1030@56:0>:int),
      P[<<f_sum_1166@64:1>@66:0>](<sum_1030@56:0>:int,<<sum_1030@56:1>@68:0>:int), (
      <sum_1030@56:0> > 0) |- P[<<sum_1030@56:1>@68:0>](<sum_1030@56:0>:int,
                                                        <<sum_1030@56:1>@68:0>:int)
      
      P[<f_sum_1166@64:2>](<f_sum_1166@64:0>:int,(<<f_sum_1166@64:1>@66:0> + (-1 * <f_sum_1166@64:0>)):int)|- P[<<f_sum_1166@64:1>@66:0>](
      <f_sum_1166@64:0>:int,<<f_sum_1166@64:1>@66:0>:int)
      
      P[<sum_1030@56:0>](<f_sum_1166@64:0>:int),
      P[<<sum_1030@59:1>@62:0>]((-1 + <f_sum_1166@64:0>):int,<f_sum_1166@64:2>:int), (
      <f_sum_1166@64:0> > 0) |- P[<f_sum_1166@64:2>](<f_sum_1166@64:0>:int,
                                                     <f_sum_1166@64:2>:int)
      
      P[<sum_1030@59:0>](<sum_1030@59:0>:int), ((<<sum_1030@59:1>@62:0> = 0) && (<sum_1030@59:0> <= 0))
      |- P[<<sum_1030@59:1>@62:0>](<sum_1030@59:0>:int,<<sum_1030@59:1>@62:0>:int)
      
      P[<sum_1030@56:0>]((1 + <sum_1030@59:0>):int), ((1 + <sum_1030@59:0>) > 0)
      |- P[<sum_1030@59:0>](<sum_1030@59:0>:int)
      
      P[<sum_1030@53:0>]((1 + <sum_1030@56:0>):int), ((1 + <sum_1030@56:0>) > 0)
      |- P[<sum_1030@56:0>](<sum_1030@56:0>:int)
      
      P[<main_1032@51:0>](<sum_1030@53:0>:int)|- P[<sum_1030@53:0>](<sum_1030@53:0>:int)
      
      P[<f_1168@49:0>](<main_1032@51:0>:int)|- P[<main_1032@51:0>](<main_1032@51:0>:int)
      
      |- P[<f_1168@49:0>](<f_1168@49:0>:int)
    call trees:
      <main_1165@46>
        <f_1168@49>
          <main_1032@51>
            <sum_1030@53>
              <sum_1030@56>
                <sum_1030@59>
                </<sum_1030@59:1>@62>
                <f_sum_1166@64>
                </<f_sum_1166@64:1>@66>
              </<sum_1030@56:1>@68>
              <f_sum_1166@70>
              </<f_sum_1166@70:1>@72>
            </<sum_1030@53:1>@74>
            <f_main_1167@76>
              <fail_1170@79>
    inlined horn clauses:
      P[<fail_1170@79:0>](<fail_1170@79:0>:bool)|- bot
      
      P[<<sum_1030@53:1>@74:0>](<f_main_1167@76:0>:int,<f_main_1167@76:2>:int),
      (((4 * <f_main_1167@76:0>) > (6 + <f_main_1167@76:2>)) && <fail_1170@79:0>)
      |- P[<fail_1170@79:0>](<fail_1170@79:0>:bool)
      
      P[<sum_1030@53:0>](<sum_1030@53:0>:int),
      P[<<sum_1030@56:1>@68:0>]((-1 + <sum_1030@53:0>):int,(<<sum_1030@53:1>@74:0> + (-1 * <sum_1030@53:0>)):int),
      (<sum_1030@53:0> > 0) |- P[<<sum_1030@53:1>@74:0>](<sum_1030@53:0>:int,
                                                         <<sum_1030@53:1>@74:0>:int)
      
      P[<sum_1030@56:0>](<sum_1030@56:0>:int),
      P[<<sum_1030@59:1>@62:0>]((-1 + <sum_1030@56:0>):int,(<<sum_1030@56:1>@68:0> + (-1 * <sum_1030@56:0>)):int),
      (<sum_1030@56:0> > 0) |- P[<<sum_1030@56:1>@68:0>](<sum_1030@56:0>:int,
                                                         <<sum_1030@56:1>@68:0>:int)
      
      P[<sum_1030@59:0>](<sum_1030@59:0>:int), ((<<sum_1030@59:1>@62:0> = 0) && (<sum_1030@59:0> <= 0))
      |- P[<<sum_1030@59:1>@62:0>](<sum_1030@59:0>:int,<<sum_1030@59:1>@62:0>:int)
      
      P[<sum_1030@56:0>]((1 + <sum_1030@59:0>):int), ((1 + <sum_1030@59:0>) > 0)
      |- P[<sum_1030@59:0>](<sum_1030@59:0>:int)
      
      P[<sum_1030@53:0>]((1 + <sum_1030@56:0>):int), ((1 + <sum_1030@56:0>) > 0)
      |- P[<sum_1030@56:0>](<sum_1030@56:0>:int)
      
      |- P[<sum_1030@53:0>](<sum_1030@53:0>:int)
    begin ParamSubstInfer.infer(31920)[3]
      
    end ParamSubstInfer.infer(31920)[3] (0.197970 sec.)
    inferred extra parameters:
      
    begin RefTypeInfer.elim_coeffs(31922)[3]
      
    end RefTypeInfer.elim_coeffs(31922)[3] (0.001000 sec.)
    begin GenHcSolver.solve(32199)[3]
      Horn clauses:
        P[<fail_1170@79:0>](<fail_1170@79:0>:bool)|- bot
        
        P[<<sum_1030@53:1>@74:0>](<f_main_1167@76:0>:int,<f_main_1167@76:2>:int),
        (((4 * <f_main_1167@76:0>) > (6 + <f_main_1167@76:2>)) && <fail_1170@79:0>)
        |- P[<fail_1170@79:0>](<fail_1170@79:0>:bool)
        
        P[<sum_1030@53:0>](<sum_1030@53:0>:int),
        P[<<sum_1030@56:1>@68:0>]((-1 + <sum_1030@53:0>):int,(<<sum_1030@53:1>@74:0> + (-1 * <sum_1030@53:0>)):int),
        (<sum_1030@53:0> > 0) |- P[<<sum_1030@53:1>@74:0>](<sum_1030@53:0>:int,
                                                           <<sum_1030@53:1>@74:0>:int)
        
        P[<sum_1030@56:0>](<sum_1030@56:0>:int),
        P[<<sum_1030@59:1>@62:0>]((-1 + <sum_1030@56:0>):int,(<<sum_1030@56:1>@68:0> + (-1 * <sum_1030@56:0>)):int),
        (<sum_1030@56:0> > 0) |- P[<<sum_1030@56:1>@68:0>](<sum_1030@56:0>:int,
                                                           <<sum_1030@56:1>@68:0>:int)
        
        P[<sum_1030@59:0>](<sum_1030@59:0>:int), ((<<sum_1030@59:1>@62:0> = 0) && (<sum_1030@59:0> <= 0))
        |- P[<<sum_1030@59:1>@62:0>](<sum_1030@59:0>:int,<<sum_1030@59:1>@62:0>:int)
        
        P[<sum_1030@56:0>]((1 + <sum_1030@59:0>):int), ((1 + <sum_1030@59:0>) > 0)
        |- P[<sum_1030@59:0>](<sum_1030@59:0>:int)
        
        P[<sum_1030@53:0>]((1 + <sum_1030@56:0>):int), ((1 + <sum_1030@56:0>) > 0)
        |- P[<sum_1030@56:0>](<sum_1030@56:0>:int)
        
        |- P[<sum_1030@53:0>](<sum_1030@53:0>:int)
      lower bounds:
        P[<sum_1030@53:0>](<sum_1030@53:0>:int) = true
        P[<sum_1030@56:0>](<sum_1030@56:0>:int) = ((1 + <sum_1030@56:0>) > 0)
        P[<sum_1030@59:0>](<sum_1030@59:0>:int) = ((1 + <sum_1030@59:0>) > 0)
        P[<<sum_1030@59:1>@62:0>](<sum_1030@59:0>:int,<<sum_1030@59:1>@62:0>:int) =
        ((<<sum_1030@59:1>@62:0> = 0) && (<sum_1030@59:0> = 0))
        P[<<sum_1030@56:1>@68:0>](<sum_1030@56:0>:int,<<sum_1030@56:1>@68:0>:int) =
        ((<sum_1030@56:0> = 1) && (<<sum_1030@56:1>@68:0> = <sum_1030@56:0>))
        P[<<sum_1030@53:1>@74:0>](<sum_1030@53:0>:int,<<sum_1030@53:1>@74:0>:int) =
        ((<sum_1030@53:0> = 2) && ((1 + <<sum_1030@53:1>@74:0>) = (2 * <sum_1030@53:0>)))
        P[<fail_1170@79:0>](<fail_1170@79:0>:bool) = false
      upper bounds:
        P[<<sum_1030@53:1>@74:0>](var109:int,var110:int) = ((4 * var109) <= (6 + var110))
        P[<<sum_1030@56:1>@68:0>](var105:int,var106:int) = (((1 + var105) <= 0) || ((3 * var105) <= (3 + var106)))
        P[<<sum_1030@59:1>@62:0>](var101:int,var102:int) = (((1 + var101) <= 0) || ((2 * var101) <= (1 + var102)))
      begin GenHcSolver.classify_pids(38186)[4]
        output:
          [<<sum_1030@59:1>@62:0>;<<sum_1030@56:1>@68:0>;<<sum_1030@53:1>@74:0>]
      end GenHcSolver.classify_pids(38186)[4] (0.000000 sec.)
      begin ApronInterface.convex_hull_interpolate(38328)[4]
        lb:(((<<sum_1030@59:1>@62:0> = 0) && (<sum_1030@59:0> = 0)) ||
            (((<sum_1030@59:0> = 1) && (<<sum_1030@59:1>@62:0> = <sum_1030@59:0>)) ||
             ((<sum_1030@59:0> = 2) && ((1 + <<sum_1030@59:1>@62:0>) = (2 * <sum_1030@59:0>)))))
        nub:((not (((1 + <sum_1030@59:0>) <= 0) || ((2 * <sum_1030@59:0>) <= (1 + <<sum_1030@59:1>@62:0>)))) ||
             ((not (((1 + <sum_1030@59:0>) <= 0) || ((3 * <sum_1030@59:0>) <= (3 + <<sum_1030@59:1>@62:0>)))) ||
              (not ((4 * <sum_1030@59:0>) <= (6 + <<sum_1030@59:1>@62:0>)))))
        lb':(((<<sum_1030@59:1>@62:0> = 0) && (<sum_1030@59:0> = 0)) ||
             (((<sum_1030@59:0> = 1) && (<<sum_1030@59:1>@62:0> = <sum_1030@59:0>)) ||
              ((<sum_1030@59:0> = 2) && ((1 + <<sum_1030@59:1>@62:0>) = (2 * <sum_1030@59:0>)))))
        nub':((not (((1 + <sum_1030@59:0>) <= 0) || ((2 * <sum_1030@59:0>) <= (1 + <<sum_1030@59:1>@62:0>)))) ||
              ((not (((1 + <sum_1030@59:0>) <= 0) || ((3 * <sum_1030@59:0>) <= (3 + <<sum_1030@59:1>@62:0>)))) ||
               (not ((4 * <sum_1030@59:0>) <= (6 + <<sum_1030@59:1>@62:0>)))))
        begin InterpProver.interpolate(38329)[5]
          begin InterpProver.interpolate_fresh(38330)[6]
            begin InterpProver.interpolate_log(38331)[7]
              input1: (((<<sum_1030@59:1>@62:0> = 0) && (<sum_1030@59:0> = 0)) ||
                       (((<sum_1030@59:0> = 1) && (<<sum_1030@59:1>@62:0> = <sum_1030@59:0>)) ||
                        ((<sum_1030@59:0> = 2) && ((1 + <<sum_1030@59:1>@62:0>) = (2 * <sum_1030@59:0>)))))
              input2: ((not (((1 + <sum_1030@59:0>) <= 0) || ((2 * <sum_1030@59:0>) <= (1 + <<sum_1030@59:1>@62:0>)))) ||
                       ((not (((1 + <sum_1030@59:0>) <= 0) || ((3 * <sum_1030@59:0>) <= (3 + <<sum_1030@59:1>@62:0>)))) ||
                        (not ((4 * <sum_1030@59:0>) <= (6 + <<sum_1030@59:1>@62:0>)))))
              begin InterpProver.interpolate_check(38332)[8]
                begin InterpProver.interpolate_simplify(38333)[9]
                  begin InterpProver.interpolate_quick(38521)[10]
                    begin CsisatInterface.interpolate_csisat_wrap(38530)[11]
                      begin CsisatInterface.interpolate_csisat_post_process(38531)[12]
                        begin CsisatInterface.interpolate_csisat_log(38532)[13]
                          input1: ((0 = v_sep_sum_1030_sep_59_sep_0 & 0 = v_sep_sum_1030_sep_59_sep_1_sep_62_sep_0) | (1 = v_sep_sum_1030_sep_59_sep_0 & v_sep_sum_1030_sep_59_sep_0 = v_sep_sum_1030_sep_59_sep_1_sep_62_sep_0) | (2 = v_sep_sum_1030_sep_59_sep_0 & (1 + v_sep_sum_1030_sep_59_sep_1_sep_62_sep_0) = 2*v_sep_sum_1030_sep_59_sep_0))
                          input2: ((((2 + v_sep_sum_1030_sep_59_sep_1_sep_62_sep_0) <= 2*v_sep_sum_1030_sep_59_sep_0 | (4 + v_sep_sum_1030_sep_59_sep_1_sep_62_sep_0) <= 3*v_sep_sum_1030_sep_59_sep_0) & 1 <= (1 + v_sep_sum_1030_sep_59_sep_0)) | (7 + v_sep_sum_1030_sep_59_sep_1_sep_62_sep_0) <= 4*v_sep_sum_1030_sep_59_sep_0)
                          begin CsisatInterface.interpolate_csisat_raw(38533)[14]
                            
                          end CsisatInterface.interpolate_csisat_raw(38533)[14] (0.008998 sec.)
                          output: (((-2*v_sep_sum_1030_sep_59_sep_1_sep_62_sep_0 + 4*v_sep_sum_1030_sep_59_sep_0) <= 2 | (-1*v_sep_sum_1030_sep_59_sep_1_sep_62_sep_0 + 2*v_sep_sum_1030_sep_59_sep_0) <= 0) & ((-1*v_sep_sum_1030_sep_59_sep_1_sep_62_sep_0 + 4*v_sep_sum_1030_sep_59_sep_0) <= 5 | (-0.5*v_sep_sum_1030_sep_59_sep_1_sep_62_sep_0 + 2*v_sep_sum_1030_sep_59_sep_0) <= 1.5 | (-0.285714285714*v_sep_sum_1030_sep_59_sep_1_sep_62_sep_0 + 1.14285714286*v_sep_sum_1030_sep_59_sep_0) <= 0) & ((-1.*v_sep_sum_1030_sep_59_sep_1_sep_62_sep_0 + 4.*v_sep_sum_1030_sep_59_sep_0) <= 5. | 0.666666666667*v_sep_sum_1030_sep_59_sep_0 <= 0 | 1.*v_sep_sum_1030_sep_59_sep_0 <= 1.))
                          
                        end CsisatInterface.interpolate_csisat_log(38532)[13] (0.008998 sec.)
                        after simplification: ((v_sep_sum_1030_sep_59_sep_0 <= 1 | (-1*v_sep_sum_1030_sep_59_sep_1_sep_62_sep_0 + 4*v_sep_sum_1030_sep_59_sep_0) <= 5 | 2*v_sep_sum_1030_sep_59_sep_0 <= 0) & ((-2*v_sep_sum_1030_sep_59_sep_1_sep_62_sep_0 + 4*v_sep_sum_1030_sep_59_sep_0) <= 2 | (-1*v_sep_sum_1030_sep_59_sep_1_sep_62_sep_0 + 2*v_sep_sum_1030_sep_59_sep_0) <= 0) & ((-2*v_sep_sum_1030_sep_59_sep_1_sep_62_sep_0 + 8*v_sep_sum_1030_sep_59_sep_0) <= 0 | (-1*v_sep_sum_1030_sep_59_sep_1_sep_62_sep_0 + 4*v_sep_sum_1030_sep_59_sep_0) <= 3 | (-1*v_sep_sum_1030_sep_59_sep_1_sep_62_sep_0 + 4*v_sep_sum_1030_sep_59_sep_0) <= 5))
                        after dnf conversion: ((v_sep_sum_1030_sep_59_sep_0 <= 1 & (-2*v_sep_sum_1030_sep_59_sep_1_sep_62_sep_0 + 4*v_sep_sum_1030_sep_59_sep_0) <= 2 & (-2*v_sep_sum_1030_sep_59_sep_1_sep_62_sep_0 + 8*v_sep_sum_1030_sep_59_sep_0) <= 0) | (v_sep_sum_1030_sep_59_sep_0 <= 1 & (-2*v_sep_sum_1030_sep_59_sep_1_sep_62_sep_0 + 4*v_sep_sum_1030_sep_59_sep_0) <= 2 & (-1*v_sep_sum_1030_sep_59_sep_1_sep_62_sep_0 + 4*v_sep_sum_1030_sep_59_sep_0) <= 3) | (v_sep_sum_1030_sep_59_sep_0 <= 1 & (-2*v_sep_sum_1030_sep_59_sep_1_sep_62_sep_0 + 4*v_sep_sum_1030_sep_59_sep_0) <= 2 & (-1*v_sep_sum_1030_sep_59_sep_1_sep_62_sep_0 + 4*v_sep_sum_1030_sep_59_sep_0) <= 5) | (v_sep_sum_1030_sep_59_sep_0 <= 1 & (-1*v_sep_sum_1030_sep_59_sep_1_sep_62_sep_0 + 2*v_sep_sum_1030_sep_59_sep_0) <= 0 & (-2*v_sep_sum_1030_sep_59_sep_1_sep_62_sep_0 + 8*v_sep_sum_1030_sep_59_sep_0) <= 0) | (v_sep_sum_1030_sep_59_sep_0 <= 1 & (-1*v_sep_sum_1030_sep_59_sep_1_sep_62_sep_0 + 2*v_sep_sum_1030_sep_59_sep_0) <= 0 & (-1*v_sep_sum_1030_sep_59_sep_1_sep_62_sep_0 + 4*v_sep_sum_1030_sep_59_sep_0) <= 3) | (v_sep_sum_1030_sep_59_sep_0 <= 1 & (-1*v_sep_sum_1030_sep_59_sep_1_sep_62_sep_0 + 2*v_sep_sum_1030_sep_59_sep_0) <= 0 & (-1*v_sep_sum_1030_sep_59_sep_1_sep_62_sep_0 + 4*v_sep_sum_1030_sep_59_sep_0) <= 5) | ((-1*v_sep_sum_1030_sep_59_sep_1_sep_62_sep_0 + 4*v_sep_sum_1030_sep_59_sep_0) <= 5 & (-2*v_sep_sum_1030_sep_59_sep_1_sep_62_sep_0 + 4*v_sep_sum_1030_sep_59_sep_0) <= 2 & (-2*v_sep_sum_1030_sep_59_sep_1_sep_62_sep_0 + 8*v_sep_sum_1030_sep_59_sep_0) <= 0) | ((-1*v_sep_sum_1030_sep_59_sep_1_sep_62_sep_0 + 4*v_sep_sum_1030_sep_59_sep_0) <= 5 & (-2*v_sep_sum_1030_sep_59_sep_1_sep_62_sep_0 + 4*v_sep_sum_1030_sep_59_sep_0) <= 2 & (-1*v_sep_sum_1030_sep_59_sep_1_sep_62_sep_0 + 4*v_sep_sum_1030_sep_59_sep_0) <= 3) | ((-1*v_sep_sum_1030_sep_59_sep_1_sep_62_sep_0 + 4*v_sep_sum_1030_sep_59_sep_0) <= 5 & (-2*v_sep_sum_1030_sep_59_sep_1_sep_62_sep_0 + 4*v_sep_sum_1030_sep_59_sep_0) <= 2 & (-1*v_sep_sum_1030_sep_59_sep_1_sep_62_sep_0 + 4*v_sep_sum_1030_sep_59_sep_0) <= 5) | ((-1*v_sep_sum_1030_sep_59_sep_1_sep_62_sep_0 + 4*v_sep_sum_1030_sep_59_sep_0) <= 5 & (-1*v_sep_sum_1030_sep_59_sep_1_sep_62_sep_0 + 2*v_sep_sum_1030_sep_59_sep_0) <= 0 & (-2*v_sep_sum_1030_sep_59_sep_1_sep_62_sep_0 + 8*v_sep_sum_1030_sep_59_sep_0) <= 0) | ((-1*v_sep_sum_1030_sep_59_sep_1_sep_62_sep_0 + 4*v_sep_sum_1030_sep_59_sep_0) <= 5 & (-1*v_sep_sum_1030_sep_59_sep_1_sep_62_sep_0 + 2*v_sep_sum_1030_sep_59_sep_0) <= 0 & (-1*v_sep_sum_1030_sep_59_sep_1_sep_62_sep_0 + 4*v_sep_sum_1030_sep_59_sep_0) <= 3) | ((-1*v_sep_sum_1030_sep_59_sep_1_sep_62_sep_0 + 4*v_sep_sum_1030_sep_59_sep_0) <= 5 & (-1*v_sep_sum_1030_sep_59_sep_1_sep_62_sep_0 + 2*v_sep_sum_1030_sep_59_sep_0) <= 0 & (-1*v_sep_sum_1030_sep_59_sep_1_sep_62_sep_0 + 4*v_sep_sum_1030_sep_59_sep_0) <= 5) | (2*v_sep_sum_1030_sep_59_sep_0 <= 0 & (-2*v_sep_sum_1030_sep_59_sep_1_sep_62_sep_0 + 4*v_sep_sum_1030_sep_59_sep_0) <= 2 & (-2*v_sep_sum_1030_sep_59_sep_1_sep_62_sep_0 + 8*v_sep_sum_1030_sep_59_sep_0) <= 0) | (2*v_sep_sum_1030_sep_59_sep_0 <= 0 & (-2*v_sep_sum_1030_sep_59_sep_1_sep_62_sep_0 + 4*v_sep_sum_1030_sep_59_sep_0) <= 2 & (-1*v_sep_sum_1030_sep_59_sep_1_sep_62_sep_0 + 4*v_sep_sum_1030_sep_59_sep_0) <= 3) | (2*v_sep_sum_1030_sep_59_sep_0 <= 0 & (-2*v_sep_sum_1030_sep_59_sep_1_sep_62_sep_0 + 4*v_sep_sum_1030_sep_59_sep_0) <= 2 & (-1*v_sep_sum_1030_sep_59_sep_1_sep_62_sep_0 + 4*v_sep_sum_1030_sep_59_sep_0) <= 5) | (2*v_sep_sum_1030_sep_59_sep_0 <= 0 & (-1*v_sep_sum_1030_sep_59_sep_1_sep_62_sep_0 + 2*v_sep_sum_1030_sep_59_sep_0) <= 0 & (-2*v_sep_sum_1030_sep_59_sep_1_sep_62_sep_0 + 8*v_sep_sum_1030_sep_59_sep_0) <= 0) | (2*v_sep_sum_1030_sep_59_sep_0 <= 0 & (-1*v_sep_sum_1030_sep_59_sep_1_sep_62_sep_0 + 2*v_sep_sum_1030_sep_59_sep_0) <= 0 & (-1*v_sep_sum_1030_sep_59_sep_1_sep_62_sep_0 + 4*v_sep_sum_1030_sep_59_sep_0) <= 3) | (2*v_sep_sum_1030_sep_59_sep_0 <= 0 & (-1*v_sep_sum_1030_sep_59_sep_1_sep_62_sep_0 + 2*v_sep_sum_1030_sep_59_sep_0) <= 0 & (-1*v_sep_sum_1030_sep_59_sep_1_sep_62_sep_0 + 4*v_sep_sum_1030_sep_59_sep_0) <= 5))
                        
                      end CsisatInterface.interpolate_csisat_post_process(38531)[12] (0.009998 sec.)
                      
                    end CsisatInterface.interpolate_csisat_wrap(38530)[11] (0.009998 sec.)
                    
                  end InterpProver.interpolate_quick(38521)[10] (0.010998 sec.)
                  begin minimizing # of disjunctions(39357)[10]
                    input: (((<sum_1030@59:0> <= 1) &&
                             (((2 * <sum_1030@59:0>) <= (1 + <<sum_1030@59:1>@62:0>)) &&
                              ((4 * <sum_1030@59:0>) <= <<sum_1030@59:1>@62:0>))) ||
                            (((<sum_1030@59:0> <= 1) &&
                              (((2 * <sum_1030@59:0>) <= (1 + <<sum_1030@59:1>@62:0>)) &&
                               ((4 * <sum_1030@59:0>) <= (3 + <<sum_1030@59:1>@62:0>)))) ||
                             (((<sum_1030@59:0> <= 1) &&
                               (((2 * <sum_1030@59:0>) <= (1 + <<sum_1030@59:1>@62:0>)) &&
                                ((4 * <sum_1030@59:0>) <= (5 + <<sum_1030@59:1>@62:0>)))) ||
                              (((<sum_1030@59:0> <= 1) &&
                                (((2 * <sum_1030@59:0>) <= <<sum_1030@59:1>@62:0>) &&
                                 ((4 * <sum_1030@59:0>) <= <<sum_1030@59:1>@62:0>))) ||
                               (((<sum_1030@59:0> <= 1) &&
                                 (((2 * <sum_1030@59:0>) <= <<sum_1030@59:1>@62:0>) &&
                                  ((4 * <sum_1030@59:0>) <= (3 + <<sum_1030@59:1>@62:0>)))) ||
                                (((<sum_1030@59:0> <= 1) &&
                                  (((2 * <sum_1030@59:0>) <= <<sum_1030@59:1>@62:0>) &&
                                   ((4 * <sum_1030@59:0>) <= (5 + <<sum_1030@59:1>@62:0>)))) ||
                                 ((((4 * <sum_1030@59:0>) <= <<sum_1030@59:1>@62:0>) &&
                                   ((2 * <sum_1030@59:0>) <= (1 + <<sum_1030@59:1>@62:0>))) ||
                                  ((((4 * <sum_1030@59:0>) <= (3 + <<sum_1030@59:1>@62:0>)) &&
                                    ((2 * <sum_1030@59:0>) <= (1 + <<sum_1030@59:1>@62:0>))) ||
                                   ((((2 * <sum_1030@59:0>) <= (1 + <<sum_1030@59:1>@62:0>)) &&
                                     ((4 * <sum_1030@59:0>) <= (5 + <<sum_1030@59:1>@62:0>))) ||
                                    ((((4 * <sum_1030@59:0>) <= <<sum_1030@59:1>@62:0>) &&
                                      ((2 * <sum_1030@59:0>) <= <<sum_1030@59:1>@62:0>)) ||
                                     ((((4 * <sum_1030@59:0>) <= (3 + <<sum_1030@59:1>@62:0>)) &&
                                       ((2 * <sum_1030@59:0>) <= <<sum_1030@59:1>@62:0>)) ||
                                      ((((4 * <sum_1030@59:0>) <= (5 + <<sum_1030@59:1>@62:0>)) &&
                                        ((2 * <sum_1030@59:0>) <= <<sum_1030@59:1>@62:0>)) ||
                                       (((4 * <sum_1030@59:0>) <= (5 + <<sum_1030@59:1>@62:0>)) &&
                                        ((<sum_1030@59:0> <= 0) &&
                                         ((2 * <sum_1030@59:0>) <= (1 + <<sum_1030@59:1>@62:0>))))))))))))))))
                    output: (((2 * <sum_1030@59:0>) <= (1 + <<sum_1030@59:1>@62:0>)) &&
                             ((4 * <sum_1030@59:0>) <= (5 + <<sum_1030@59:1>@62:0>)))
                  end minimizing # of disjunctions(39357)[10] (0.021997 sec.)
                  begin minimizing # of conjunctions(41886)[10]
                    input: (((2 * <sum_1030@59:0>) <= (1 + <<sum_1030@59:1>@62:0>)) &&
                            ((4 * <sum_1030@59:0>) <= (5 + <<sum_1030@59:1>@62:0>)))
                    output: (((4 * <sum_1030@59:0>) <= (5 + <<sum_1030@59:1>@62:0>)) &&
                             ((2 * <sum_1030@59:0>) <= (1 + <<sum_1030@59:1>@62:0>)))
                  end minimizing # of conjunctions(41886)[10] (0.001000 sec.)
                  
                end InterpProver.interpolate_simplify(38333)[9] (0.040994 sec.)
                
              end InterpProver.interpolate_check(38332)[8] (0.041994 sec.)
              output: (((4 * <sum_1030@59:0>) <= (5 + <<sum_1030@59:1>@62:0>)) &&
                       ((2 * <sum_1030@59:0>) <= (1 + <<sum_1030@59:1>@62:0>)))
            end InterpProver.interpolate_log(38331)[7] (0.041994 sec.)
            
          end InterpProver.interpolate_fresh(38330)[6] (0.041994 sec.)
          
        end InterpProver.interpolate(38329)[5] (0.041994 sec.)
        output:
          P[<<sum_1030@59:1>@62:0>](<sum_1030@59:0>:int,<<sum_1030@59:1>@62:0>:int) =
          (((4 * <sum_1030@59:0>) <= (5 + <<sum_1030@59:1>@62:0>)) &&
           ((2 * <sum_1030@59:0>) <= (1 + <<sum_1030@59:1>@62:0>)))
          P[<<sum_1030@56:1>@68:0>](<sum_1030@59:0>:int,<<sum_1030@59:1>@62:0>:int) =
          (((4 * <sum_1030@59:0>) <= (5 + <<sum_1030@59:1>@62:0>)) &&
           ((2 * <sum_1030@59:0>) <= (1 + <<sum_1030@59:1>@62:0>)))
          P[<<sum_1030@53:1>@74:0>](<sum_1030@59:0>:int,<<sum_1030@59:1>@62:0>:int) =
          (((4 * <sum_1030@59:0>) <= (5 + <<sum_1030@59:1>@62:0>)) &&
           ((2 * <sum_1030@59:0>) <= (1 + <<sum_1030@59:1>@62:0>)))
      end ApronInterface.convex_hull_interpolate(38328)[4] (0.042994 sec.)
      Horn clauses:
        P[<fail_1170@79:0>](<fail_1170@79:0>:bool)|- bot
        
        P[<sum_1030@53:0>](<sum_1030@53:0>:int),
        P[<<sum_1030@56:1>@68:0>]((-1 + <sum_1030@53:0>):int,(<<sum_1030@53:1>@74:0> + (-1 * <sum_1030@53:0>)):int),
        ((<sum_1030@53:0> > 0) &&
         (((4 * <sum_1030@53:0>) > (5 + <<sum_1030@53:1>@74:0>)) ||
          ((2 * <sum_1030@53:0>) > (1 + <<sum_1030@53:1>@74:0>)))) |- bot
        
        P[<sum_1030@56:0>](<sum_1030@56:0>:int),
        P[<<sum_1030@59:1>@62:0>]((-1 + <sum_1030@56:0>):int,(<<sum_1030@56:1>@68:0> + (-1 * <sum_1030@56:0>)):int),
        (<sum_1030@56:0> > 0) |- P[<<sum_1030@56:1>@68:0>](<sum_1030@56:0>:int,
                                                           <<sum_1030@56:1>@68:0>:int)
        
        P[<sum_1030@59:0>](<sum_1030@59:0>:int), ((<<sum_1030@59:1>@62:0> = 0) && (<sum_1030@59:0> <= 0))
        |- P[<<sum_1030@59:1>@62:0>](<sum_1030@59:0>:int,<<sum_1030@59:1>@62:0>:int)
        
        P[<sum_1030@56:0>]((1 + <sum_1030@59:0>):int), ((1 + <sum_1030@59:0>) > 0)
        |- P[<sum_1030@59:0>](<sum_1030@59:0>:int)
        
        P[<sum_1030@53:0>]((1 + <sum_1030@56:0>):int), ((1 + <sum_1030@56:0>) > 0)
        |- P[<sum_1030@56:0>](<sum_1030@56:0>:int)
        
        |- P[<sum_1030@53:0>](<sum_1030@53:0>:int)
      lower bounds:
        P[<sum_1030@53:0>](<sum_1030@53:0>:int) = true
        P[<fail_1170@79:0>](var115:bool) = false
        P[<sum_1030@56:0>](<sum_1030@56:0>:int) = ((1 + <sum_1030@56:0>) > 0)
        P[<sum_1030@59:0>](<sum_1030@59:0>:int) = ((1 + <sum_1030@59:0>) > 0)
        P[<<sum_1030@59:1>@62:0>](<sum_1030@59:0>:int,<<sum_1030@59:1>@62:0>:int) =
        ((<<sum_1030@59:1>@62:0> = 0) && (<sum_1030@59:0> = 0))
        P[<<sum_1030@56:1>@68:0>](<sum_1030@56:0>:int,<<sum_1030@56:1>@68:0>:int) =
        ((<sum_1030@56:0> = 1) && (<<sum_1030@56:1>@68:0> = <sum_1030@56:0>))
      upper bounds:
        P[<sum_1030@59:0>](var124:int) = true
        P[<sum_1030@56:0>](var121:int) = true
        P[<sum_1030@53:0>](var118:int) = true
      begin GenHcSolver.classify_pids(50138)[4]
        output:
          [<sum_1030@53:0>;<sum_1030@56:0>;<sum_1030@59:0>]
      end GenHcSolver.classify_pids(50138)[4] (0.000000 sec.)
      begin ApronInterface.convex_hull_interpolate(50159)[4]
        lb:true
        nub:false
        lb':true
        nub':false
        begin InterpProver.interpolate(50160)[5]
          begin InterpProver.interpolate_fresh(50161)[6]
            begin InterpProver.interpolate_log(50162)[7]
              input1: true
              input2: false
              begin InterpProver.interpolate_check(50163)[8]
                begin InterpProver.interpolate_simplify(50164)[9]
                  begin InterpProver.interpolate_quick(50177)[10]
                    
                  end InterpProver.interpolate_quick(50177)[10] (0.000000 sec.)
                  
                end InterpProver.interpolate_simplify(50164)[9] (0.000000 sec.)
                
              end InterpProver.interpolate_check(50163)[8] (0.000000 sec.)
              output: true
            end InterpProver.interpolate_log(50162)[7] (0.000000 sec.)
            
          end InterpProver.interpolate_fresh(50161)[6] (0.000000 sec.)
          
        end InterpProver.interpolate(50160)[5] (0.000000 sec.)
        output:
          P[<sum_1030@53:0>](<sum_1030@53:0>:int) = true
          P[<sum_1030@56:0>](<sum_1030@53:0>:int) = true
          P[<sum_1030@59:0>](<sum_1030@53:0>:int) = true
      end ApronInterface.convex_hull_interpolate(50159)[4] (0.000000 sec.)
      Horn clauses:
        P[<fail_1170@79:0>](<fail_1170@79:0>:bool)|- bot
        
        P[<<sum_1030@56:1>@68:0>]((-1 + <sum_1030@53:0>):int,(<<sum_1030@53:1>@74:0> + (-1 * <sum_1030@53:0>)):int),
        ((<sum_1030@53:0> > 0) &&
         (((4 * <sum_1030@53:0>) > (5 + <<sum_1030@53:1>@74:0>)) ||
          ((2 * <sum_1030@53:0>) > (1 + <<sum_1030@53:1>@74:0>)))) |- bot
        
        P[<<sum_1030@59:1>@62:0>]((-1 + <sum_1030@56:0>):int,(<<sum_1030@56:1>@68:0> + (-1 * <sum_1030@56:0>)):int),
        (<sum_1030@56:0> > 0) |- P[<<sum_1030@56:1>@68:0>](<sum_1030@56:0>:int,
                                                           <<sum_1030@56:1>@68:0>:int)
        
         ((<<sum_1030@59:1>@62:0> = 0) && (<sum_1030@59:0> <= 0))
        |- P[<<sum_1030@59:1>@62:0>](<sum_1030@59:0>:int,<<sum_1030@59:1>@62:0>:int)
      lower bounds:
        P[<<sum_1030@59:1>@62:0>](<sum_1030@59:0>:int,<<sum_1030@59:1>@62:0>:int) =
        ((<<sum_1030@59:1>@62:0> = 0) && (<sum_1030@59:0> <= 0))
        P[<fail_1170@79:0>](var129:bool) = false
        P[<<sum_1030@56:1>@68:0>](<sum_1030@56:0>:int,<<sum_1030@56:1>@68:0>:int) =
        ((<sum_1030@56:0> = 1) && (<<sum_1030@56:1>@68:0> = <sum_1030@56:0>))
      upper bounds:
        P[<<sum_1030@56:1>@68:0>](var136:int,var137:int) =
        (((1 + var136) <= 0) || (((3 * var136) <= (2 + var137)) && (var136 <= var137)))
        P[<<sum_1030@59:1>@62:0>](var132:int,var133:int) =
        (((1 + var132) <= 0) || (((2 * var132) <= var133) && (0 <= var133)))
      begin GenHcSolver.classify_pids(56048)[4]
        output:
          [<<sum_1030@56:1>@68:0>],[<<sum_1030@59:1>@62:0>]
      end GenHcSolver.classify_pids(56048)[4] (0.001000 sec.)
      lb:((<sum_1030@56:0> = 1) && (<<sum_1030@56:1>@68:0> = <sum_1030@56:0>))
      nub:(not
             (((1 + <sum_1030@56:0>) <= 0) ||
              (((3 * <sum_1030@56:0>) <= (2 + <<sum_1030@56:1>@68:0>)) && (<sum_1030@56:0> <= <<sum_1030@56:1>@68:0>))))
      begin ApronInterface.convex_hull_interpolate(56213)[4]
        lb:((<sum_1030@56:0> = 1) && (<<sum_1030@56:1>@68:0> = <sum_1030@56:0>))
        nub:(not
               (((1 + <sum_1030@56:0>) <= 0) ||
                (((3 * <sum_1030@56:0>) <= (2 + <<sum_1030@56:1>@68:0>)) && (<sum_1030@56:0> <= <<sum_1030@56:1>@68:0>))))
        lb':((<sum_1030@56:0> = 1) && (<<sum_1030@56:1>@68:0> = <sum_1030@56:0>))
        nub':(not
                (((1 + <sum_1030@56:0>) <= 0) ||
                 (((3 * <sum_1030@56:0>) <= (2 + <<sum_1030@56:1>@68:0>)) &&
                  (<sum_1030@56:0> <= <<sum_1030@56:1>@68:0>))))
        begin InterpProver.interpolate(56214)[5]
          begin InterpProver.interpolate_fresh(56215)[6]
            begin InterpProver.interpolate_log(56216)[7]
              input1: ((<sum_1030@56:0> = 1) && (<<sum_1030@56:1>@68:0> = <sum_1030@56:0>))
              input2: (not
                         (((1 + <sum_1030@56:0>) <= 0) ||
                          (((3 * <sum_1030@56:0>) <= (2 + <<sum_1030@56:1>@68:0>)) &&
                           (<sum_1030@56:0> <= <<sum_1030@56:1>@68:0>))))
              begin InterpProver.interpolate_check(56217)[8]
                begin InterpProver.interpolate_simplify(56218)[9]
                  begin InterpProver.interpolate_quick(56317)[10]
                    begin CsisatInterface.interpolate_csisat_wrap(56326)[11]
                      begin CsisatInterface.interpolate_csisat_post_process(56327)[12]
                        begin CsisatInterface.interpolate_csisat_log(56328)[13]
                          input1: (1 = v_sep_sum_1030_sep_56_sep_0 & v_sep_sum_1030_sep_56_sep_0 = v_sep_sum_1030_sep_56_sep_1_sep_68_sep_0)
                          input2: (((1 + v_sep_sum_1030_sep_56_sep_1_sep_68_sep_0) <= v_sep_sum_1030_sep_56_sep_0 | (3 + v_sep_sum_1030_sep_56_sep_1_sep_68_sep_0) <= 3*v_sep_sum_1030_sep_56_sep_0) & 1 <= (1 + v_sep_sum_1030_sep_56_sep_0))
                          begin CsisatInterface.interpolate_csisat_raw(56329)[14]
                            
                          end CsisatInterface.interpolate_csisat_raw(56329)[14] (0.001000 sec.)
                          output: ((-2*v_sep_sum_1030_sep_56_sep_1_sep_68_sep_0 + 2*v_sep_sum_1030_sep_56_sep_0) <= 0 & (-1*v_sep_sum_1030_sep_56_sep_1_sep_68_sep_0 + 5*v_sep_sum_1030_sep_56_sep_0) <= 4.)
                          
                        end CsisatInterface.interpolate_csisat_log(56328)[13] (0.001000 sec.)
                        after simplification: ((-2*v_sep_sum_1030_sep_56_sep_1_sep_68_sep_0 + 2*v_sep_sum_1030_sep_56_sep_0) <= 0 & (-1*v_sep_sum_1030_sep_56_sep_1_sep_68_sep_0 + 5*v_sep_sum_1030_sep_56_sep_0) <= 4)
                        after dnf conversion: (((-2*v_sep_sum_1030_sep_56_sep_1_sep_68_sep_0 + 2*v_sep_sum_1030_sep_56_sep_0) <= 0 & (-1*v_sep_sum_1030_sep_56_sep_1_sep_68_sep_0 + 5*v_sep_sum_1030_sep_56_sep_0) <= 4))
                        
                      end CsisatInterface.interpolate_csisat_post_process(56327)[12] (0.001000 sec.)
                      
                    end CsisatInterface.interpolate_csisat_wrap(56326)[11] (0.001000 sec.)
                    
                  end InterpProver.interpolate_quick(56317)[10] (0.002000 sec.)
                  begin minimizing # of conjunctions(56350)[10]
                    input: ((<sum_1030@56:0> <= <<sum_1030@56:1>@68:0>) &&
                            ((5 * <sum_1030@56:0>) <= (4 + <<sum_1030@56:1>@68:0>)))
                    output: (((5 * <sum_1030@56:0>) <= (4 + <<sum_1030@56:1>@68:0>)) &&
                             (<sum_1030@56:0> <= <<sum_1030@56:1>@68:0>))
                  end minimizing # of conjunctions(56350)[10] (0.001000 sec.)
                  
                end InterpProver.interpolate_simplify(56218)[9] (0.003000 sec.)
                
              end InterpProver.interpolate_check(56217)[8] (0.004000 sec.)
              output: (((5 * <sum_1030@56:0>) <= (4 + <<sum_1030@56:1>@68:0>)) &&
                       (<sum_1030@56:0> <= <<sum_1030@56:1>@68:0>))
            end InterpProver.interpolate_log(56216)[7] (0.004000 sec.)
            
          end InterpProver.interpolate_fresh(56215)[6] (0.004000 sec.)
          
        end InterpProver.interpolate(56214)[5] (0.004000 sec.)
        output:
          P[<<sum_1030@56:1>@68:0>](<sum_1030@56:0>:int,<<sum_1030@56:1>@68:0>:int) =
          (((5 * <sum_1030@56:0>) <= (4 + <<sum_1030@56:1>@68:0>)) && (<sum_1030@56:0> <= <<sum_1030@56:1>@68:0>))
      end ApronInterface.convex_hull_interpolate(56213)[4] (0.004000 sec.)
      Horn clauses:
        P[<fail_1170@79:0>](<fail_1170@79:0>:bool)|- bot
        
        P[<<sum_1030@59:1>@62:0>]((-1 + <sum_1030@56:0>):int,(<<sum_1030@56:1>@68:0> + (-1 * <sum_1030@56:0>)):int),
        ((<sum_1030@56:0> > 0) &&
         (((5 * <sum_1030@56:0>) > (4 + <<sum_1030@56:1>@68:0>)) || (<sum_1030@56:0> > <<sum_1030@56:1>@68:0>))) |- bot
        
         ((<<sum_1030@59:1>@62:0> = 0) && (<sum_1030@59:0> <= 0))
        |- P[<<sum_1030@59:1>@62:0>](<sum_1030@59:0>:int,<<sum_1030@59:1>@62:0>:int)
      lower bounds:
        P[<<sum_1030@59:1>@62:0>](<sum_1030@59:0>:int,<<sum_1030@59:1>@62:0>:int) =
        ((<<sum_1030@59:1>@62:0> = 0) && (<sum_1030@59:0> <= 0))
        P[<fail_1170@79:0>](var139:bool) = false
      upper bounds:
        P[<fail_1170@79:0>](var142:bool) = true
      begin GenHcSolver.classify_pids(57818)[4]
        output:
          [<fail_1170@79:0>]
      end GenHcSolver.classify_pids(57818)[4] (0.000000 sec.)
      lb:false
      nub:false
      begin ApronInterface.convex_hull_interpolate(57821)[4]
        lb:false
        nub:false
        lb':false
        nub':false
        begin InterpProver.interpolate(57822)[5]
          begin InterpProver.interpolate_fresh(57823)[6]
            begin InterpProver.interpolate_log(57824)[7]
              input1: false
              input2: false
              begin InterpProver.interpolate_check(57825)[8]
                begin InterpProver.interpolate_simplify(57826)[9]
                  begin InterpProver.interpolate_quick(57839)[10]
                    
                  end InterpProver.interpolate_quick(57839)[10] (0.000000 sec.)
                  begin minimizing # of disjunctions(57843)[10]
                    input: false
                    output: false
                  end minimizing # of disjunctions(57843)[10] (0.000000 sec.)
                  
                end InterpProver.interpolate_simplify(57826)[9] (0.000000 sec.)
                
              end InterpProver.interpolate_check(57825)[8] (0.000000 sec.)
              output: false
            end InterpProver.interpolate_log(57824)[7] (0.000000 sec.)
            
          end InterpProver.interpolate_fresh(57823)[6] (0.000000 sec.)
          
        end InterpProver.interpolate(57822)[5] (0.000000 sec.)
        output:
          P[<fail_1170@79:0>](var139:bool) = false
      end ApronInterface.convex_hull_interpolate(57821)[4] (0.000000 sec.)
      Horn clauses:
        P[<<sum_1030@59:1>@62:0>]((-1 + <sum_1030@56:0>):int,(<<sum_1030@56:1>@68:0> + (-1 * <sum_1030@56:0>)):int),
        ((<sum_1030@56:0> > 0) &&
         (((5 * <sum_1030@56:0>) > (4 + <<sum_1030@56:1>@68:0>)) || (<sum_1030@56:0> > <<sum_1030@56:1>@68:0>))) |- bot
        
         ((<<sum_1030@59:1>@62:0> = 0) && (<sum_1030@59:0> <= 0))
        |- P[<<sum_1030@59:1>@62:0>](<sum_1030@59:0>:int,<<sum_1030@59:1>@62:0>:int)
      lower bounds:
        P[<<sum_1030@59:1>@62:0>](<sum_1030@59:0>:int,<<sum_1030@59:1>@62:0>:int) =
        ((<<sum_1030@59:1>@62:0> = 0) && (<sum_1030@59:0> <= 0))
      upper bounds:
        P[<<sum_1030@59:1>@62:0>](var143:int,var144:int) =
        (((1 + var143) <= 0) || (((4 * var143) <= var144) && (0 <= var144)))
      begin GenHcSolver.classify_pids(59506)[4]
        output:
          [<<sum_1030@59:1>@62:0>]
      end GenHcSolver.classify_pids(59506)[4] (0.000000 sec.)
      lb:((<<sum_1030@59:1>@62:0> = 0) && (<sum_1030@59:0> <= 0))
      nub:(not
             (((1 + <sum_1030@59:0>) <= 0) ||
              (((4 * <sum_1030@59:0>) <= <<sum_1030@59:1>@62:0>) && (0 <= <<sum_1030@59:1>@62:0>))))
      begin ApronInterface.convex_hull_interpolate(59509)[4]
        lb:((<<sum_1030@59:1>@62:0> = 0) && (<sum_1030@59:0> <= 0))
        nub:(not
               (((1 + <sum_1030@59:0>) <= 0) ||
                (((4 * <sum_1030@59:0>) <= <<sum_1030@59:1>@62:0>) && (0 <= <<sum_1030@59:1>@62:0>))))
        lb':((<<sum_1030@59:1>@62:0> = 0) && (<sum_1030@59:0> <= 0))
        nub':(not
                (((1 + <sum_1030@59:0>) <= 0) ||
                 (((4 * <sum_1030@59:0>) <= <<sum_1030@59:1>@62:0>) && (0 <= <<sum_1030@59:1>@62:0>))))
        begin InterpProver.interpolate(59510)[5]
          begin InterpProver.interpolate_fresh(59511)[6]
            begin InterpProver.interpolate_log(59512)[7]
              input1: ((<<sum_1030@59:1>@62:0> = 0) && (<sum_1030@59:0> <= 0))
              input2: (not
                         (((1 + <sum_1030@59:0>) <= 0) ||
                          (((4 * <sum_1030@59:0>) <= <<sum_1030@59:1>@62:0>) && (0 <= <<sum_1030@59:1>@62:0>))))
              begin InterpProver.interpolate_check(59513)[8]
                begin InterpProver.interpolate_simplify(59514)[9]
                  begin InterpProver.interpolate_quick(59587)[10]
                    begin CsisatInterface.interpolate_csisat_wrap(59596)[11]
                      begin CsisatInterface.interpolate_csisat_post_process(59597)[12]
                        begin CsisatInterface.interpolate_csisat_log(59598)[13]
                          input1: (0 = v_sep_sum_1030_sep_59_sep_1_sep_62_sep_0 & v_sep_sum_1030_sep_59_sep_0 <= 0)
                          input2: (((1 + v_sep_sum_1030_sep_59_sep_1_sep_62_sep_0) <= 0 | (1 + v_sep_sum_1030_sep_59_sep_1_sep_62_sep_0) <= 4*v_sep_sum_1030_sep_59_sep_0) & 1 <= (1 + v_sep_sum_1030_sep_59_sep_0))
                          begin CsisatInterface.interpolate_csisat_raw(59599)[14]
                            
                          end CsisatInterface.interpolate_csisat_raw(59599)[14] (0.000000 sec.)
                          output: ((-2*v_sep_sum_1030_sep_59_sep_1_sep_62_sep_0 + 8*v_sep_sum_1030_sep_59_sep_0) <= 0 & -2*v_sep_sum_1030_sep_59_sep_1_sep_62_sep_0 <= 0)
                          
                        end CsisatInterface.interpolate_csisat_log(59598)[13] (0.000000 sec.)
                        after simplification: ((-2*v_sep_sum_1030_sep_59_sep_1_sep_62_sep_0 + 8*v_sep_sum_1030_sep_59_sep_0) <= 0 & -2*v_sep_sum_1030_sep_59_sep_1_sep_62_sep_0 <= 0)
                        after dnf conversion: (((-2*v_sep_sum_1030_sep_59_sep_1_sep_62_sep_0 + 8*v_sep_sum_1030_sep_59_sep_0) <= 0 & -2*v_sep_sum_1030_sep_59_sep_1_sep_62_sep_0 <= 0))
                        
                      end CsisatInterface.interpolate_csisat_post_process(59597)[12] (0.000000 sec.)
                      
                    end CsisatInterface.interpolate_csisat_wrap(59596)[11] (0.000000 sec.)
                    
                  end InterpProver.interpolate_quick(59587)[10] (0.001000 sec.)
                  begin minimizing # of conjunctions(59614)[10]
                    input: (((4 * <sum_1030@59:0>) <= <<sum_1030@59:1>@62:0>) && (0 <= <<sum_1030@59:1>@62:0>))
                    output: ((4 * <sum_1030@59:0>) <= <<sum_1030@59:1>@62:0>)
                  end minimizing # of conjunctions(59614)[10] (0.002000 sec.)
                  
                end InterpProver.interpolate_simplify(59514)[9] (0.003000 sec.)
                
              end InterpProver.interpolate_check(59513)[8] (0.003000 sec.)
              output: ((4 * <sum_1030@59:0>) <= <<sum_1030@59:1>@62:0>)
            end InterpProver.interpolate_log(59512)[7] (0.003000 sec.)
            
          end InterpProver.interpolate_fresh(59511)[6] (0.003000 sec.)
          
        end InterpProver.interpolate(59510)[5] (0.003000 sec.)
        output:
          P[<<sum_1030@59:1>@62:0>](<sum_1030@59:0>:int,<<sum_1030@59:1>@62:0>:int) =
          ((4 * <sum_1030@59:0>) <= <<sum_1030@59:1>@62:0>)
      end ApronInterface.convex_hull_interpolate(59509)[4] (0.004000 sec.)
      begin HcSolver.check_validity(59972)[4]
        input:
          P[<fail_1170@79:0>](<fail_1170@79:0>:bool)|- bot
          
          P[<<sum_1030@53:1>@74:0>](<f_main_1167@76:0>:int,<f_main_1167@76:2>:int),
          (((4 * <f_main_1167@76:0>) > (6 + <f_main_1167@76:2>)) && <fail_1170@79:0>)
          |- P[<fail_1170@79:0>](<fail_1170@79:0>:bool)
          
          P[<sum_1030@53:0>](<sum_1030@53:0>:int),
          P[<<sum_1030@56:1>@68:0>]((-1 + <sum_1030@53:0>):int,(<<sum_1030@53:1>@74:0> + (-1 * <sum_1030@53:0>)):int),
          (<sum_1030@53:0> > 0) |- P[<<sum_1030@53:1>@74:0>](<sum_1030@53:0>:int,
                                                             <<sum_1030@53:1>@74:0>:int)
          
          P[<sum_1030@56:0>](<sum_1030@56:0>:int),
          P[<<sum_1030@59:1>@62:0>]((-1 + <sum_1030@56:0>):int,(<<sum_1030@56:1>@68:0> + (-1 * <sum_1030@56:0>)):int),
          (<sum_1030@56:0> > 0) |- P[<<sum_1030@56:1>@68:0>](<sum_1030@56:0>:int,
                                                             <<sum_1030@56:1>@68:0>:int)
          
          P[<sum_1030@59:0>](<sum_1030@59:0>:int), ((<<sum_1030@59:1>@62:0> = 0) && (<sum_1030@59:0> <= 0))
          |- P[<<sum_1030@59:1>@62:0>](<sum_1030@59:0>:int,<<sum_1030@59:1>@62:0>:int)
          
          P[<sum_1030@56:0>]((1 + <sum_1030@59:0>):int), ((1 + <sum_1030@59:0>) > 0)
          |- P[<sum_1030@59:0>](<sum_1030@59:0>:int)
          
          P[<sum_1030@53:0>]((1 + <sum_1030@56:0>):int), ((1 + <sum_1030@56:0>) > 0)
          |- P[<sum_1030@56:0>](<sum_1030@56:0>:int)
          
          |- P[<sum_1030@53:0>](<sum_1030@53:0>:int)
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        
      end HcSolver.check_validity(59972)[4] (0.005999 sec.)
      solution:
        P[<fail_1170@79:0>](var139:bool) = false
        P[<<sum_1030@53:1>@74:0>](<sum_1030@59:0>:int,<<sum_1030@59:1>@62:0>:int) =
        (((4 * <sum_1030@59:0>) <= (5 + <<sum_1030@59:1>@62:0>)) &&
         ((2 * <sum_1030@59:0>) <= (1 + <<sum_1030@59:1>@62:0>)))
        P[<<sum_1030@56:1>@68:0>](<sum_1030@56:0>:int,<<sum_1030@56:1>@68:0>:int) =
        (((5 * <sum_1030@56:0>) <= (4 + <<sum_1030@56:1>@68:0>)) && (<sum_1030@56:0> <= <<sum_1030@56:1>@68:0>))
        P[<<sum_1030@59:1>@62:0>](<sum_1030@59:0>:int,<<sum_1030@59:1>@62:0>:int) =
        ((4 * <sum_1030@59:0>) <= <<sum_1030@59:1>@62:0>)
        P[<sum_1030@59:0>](<sum_1030@53:0>:int) = true
        P[<sum_1030@56:0>](<sum_1030@53:0>:int) = true
        P[<sum_1030@53:0>](<sum_1030@53:0>:int) = true
    end GenHcSolver.solve(32199)[3] (0.171974 sec.)
    begin GenHcSolver.solve(61009)[3]
      Horn clauses:
        P[<fail_1170@79:0>](<fail_1170@79:0>:bool)|- bot
        
        P[<<sum_1030@53:1>@74:0>](<f_main_1167@76:0>:int,<f_main_1167@76:2>:int),
        (((4 * <f_main_1167@76:0>) > (6 + <f_main_1167@76:2>)) && <fail_1170@79:0>)
        |- P[<fail_1170@79:0>](<fail_1170@79:0>:bool)
        
        P[<sum_1030@53:0>](<sum_1030@53:0>:int),
        P[<<sum_1030@56:1>@68:0>]((-1 + <sum_1030@53:0>):int,(<<sum_1030@53:1>@74:0> + (-1 * <sum_1030@53:0>)):int),
        (<sum_1030@53:0> > 0) |- P[<<sum_1030@53:1>@74:0>](<sum_1030@53:0>:int,
                                                           <<sum_1030@53:1>@74:0>:int)
        
        P[<sum_1030@56:0>](<sum_1030@56:0>:int),
        P[<<sum_1030@59:1>@62:0>]((-1 + <sum_1030@56:0>):int,(<<sum_1030@56:1>@68:0> + (-1 * <sum_1030@56:0>)):int),
        (<sum_1030@56:0> > 0) |- P[<<sum_1030@56:1>@68:0>](<sum_1030@56:0>:int,
                                                           <<sum_1030@56:1>@68:0>:int)
        
        P[<sum_1030@59:0>](<sum_1030@59:0>:int), ((<<sum_1030@59:1>@62:0> = 0) && (<sum_1030@59:0> <= 0))
        |- P[<<sum_1030@59:1>@62:0>](<sum_1030@59:0>:int,<<sum_1030@59:1>@62:0>:int)
        
        P[<sum_1030@56:0>]((1 + <sum_1030@59:0>):int), ((1 + <sum_1030@59:0>) > 0)
        |- P[<sum_1030@59:0>](<sum_1030@59:0>:int)
        
        P[<sum_1030@53:0>]((1 + <sum_1030@56:0>):int), ((1 + <sum_1030@56:0>) > 0)
        |- P[<sum_1030@56:0>](<sum_1030@56:0>:int)
        
        |- P[<sum_1030@53:0>](<sum_1030@53:0>:int)
      lower bounds:
        P[<sum_1030@53:0>](<sum_1030@53:0>:int) = true
        P[<sum_1030@56:0>](<sum_1030@56:0>:int) = ((1 + <sum_1030@56:0>) > 0)
        P[<sum_1030@59:0>](<sum_1030@59:0>:int) = ((1 + <sum_1030@59:0>) > 0)
        P[<<sum_1030@59:1>@62:0>](<sum_1030@59:0>:int,<<sum_1030@59:1>@62:0>:int) =
        ((<<sum_1030@59:1>@62:0> = 0) && (<sum_1030@59:0> = 0))
        P[<<sum_1030@56:1>@68:0>](<sum_1030@56:0>:int,<<sum_1030@56:1>@68:0>:int) =
        ((<sum_1030@56:0> = 1) && (<<sum_1030@56:1>@68:0> = <sum_1030@56:0>))
        P[<<sum_1030@53:1>@74:0>](<sum_1030@53:0>:int,<<sum_1030@53:1>@74:0>:int) =
        ((<sum_1030@53:0> = 2) && ((1 + <<sum_1030@53:1>@74:0>) = (2 * <sum_1030@53:0>)))
        P[<fail_1170@79:0>](<fail_1170@79:0>:bool) = false
      upper bounds:
        P[<<sum_1030@53:1>@74:0>](var155:int,var156:int) = ((4 * var155) <= (6 + var156))
        P[<<sum_1030@56:1>@68:0>](var151:int,var152:int) = (((1 + var151) <= 0) || ((3 * var151) <= (3 + var152)))
        P[<<sum_1030@59:1>@62:0>](var147:int,var148:int) = (((1 + var147) <= 0) || ((2 * var147) <= (1 + var148)))
      begin GenHcSolver.classify_pids(66996)[4]
        output:
          [<<sum_1030@59:1>@62:0>;<<sum_1030@56:1>@68:0>;<<sum_1030@53:1>@74:0>]
      end GenHcSolver.classify_pids(66996)[4] (0.001000 sec.)
      begin ApronInterface.convex_hull_interpolate(67138)[4]
        lb:(((<<sum_1030@59:1>@62:0> = 0) && (<sum_1030@59:0> = 0)) ||
            (((<sum_1030@59:0> = 1) && (<<sum_1030@59:1>@62:0> = <sum_1030@59:0>)) ||
             ((<sum_1030@59:0> = 2) && ((1 + <<sum_1030@59:1>@62:0>) = (2 * <sum_1030@59:0>)))))
        nub:((not (((1 + <sum_1030@59:0>) <= 0) || ((2 * <sum_1030@59:0>) <= (1 + <<sum_1030@59:1>@62:0>)))) ||
             ((not (((1 + <sum_1030@59:0>) <= 0) || ((3 * <sum_1030@59:0>) <= (3 + <<sum_1030@59:1>@62:0>)))) ||
              (not ((4 * <sum_1030@59:0>) <= (6 + <<sum_1030@59:1>@62:0>)))))
        begin ExtFormula.Formula.case_analysis_boolean(67174)[5]
          ts: (((<<sum_1030@59:1>@62:0> = 0) && (<sum_1030@59:0> = 0)) ||
               (((<sum_1030@59:0> = 1) && (<<sum_1030@59:1>@62:0> = <sum_1030@59:0>)) ||
                ((<sum_1030@59:0> = 2) && ((1 + <<sum_1030@59:1>@62:0>) = (2 * <sum_1030@59:0>)))))
          
        end ExtFormula.Formula.case_analysis_boolean(67174)[5] (0.000999 sec.)
        begin ExtFormula.Formula.case_analysis_boolean(67237)[5]
          ts: (((4 * <sum_1030@59:0>) > (6 + <<sum_1030@59:1>@62:0>)) ||
               ((((1 + <sum_1030@59:0>) > 0) && ((2 * <sum_1030@59:0>) > (1 + <<sum_1030@59:1>@62:0>))) ||
                (((1 + <sum_1030@59:0>) > 0) && ((3 * <sum_1030@59:0>) > (3 + <<sum_1030@59:1>@62:0>)))))
          
        end ExtFormula.Formula.case_analysis_boolean(67237)[5] (0.001000 sec.)
        lb':((((1 + <<sum_1030@59:1>@62:0>) + (-2 * <sum_1030@59:0>)) >= 0) &&
             (((<<sum_1030@59:1>@62:0> + (-1 * <sum_1030@59:0>)) >= 0) &&
              (((-2 * <<sum_1030@59:1>@62:0>) + (3 * <sum_1030@59:0>)) >= 0)))
        nub':(((-2 + (-1 * <<sum_1030@59:1>@62:0>)) + (4 * <sum_1030@59:0>)) >= 0)
        begin InterpProver.interpolate(67253)[5]
          begin InterpProver.interpolate_fresh(67254)[6]
            begin InterpProver.interpolate_log(67255)[7]
              input1: ((((1 + <<sum_1030@59:1>@62:0>) + (-2 * <sum_1030@59:0>)) >= 0) &&
                       (((<<sum_1030@59:1>@62:0> + (-1 * <sum_1030@59:0>)) >= 0) &&
                        (((-2 * <<sum_1030@59:1>@62:0>) + (3 * <sum_1030@59:0>)) >= 0)))
              input2: (((-2 + (-1 * <<sum_1030@59:1>@62:0>)) + (4 * <sum_1030@59:0>)) >= 0)
              begin InterpProver.interpolate_check(67256)[8]
                begin InterpProver.interpolate_simplify(67257)[9]
                  begin InterpProver.interpolate_quick(67348)[10]
                    begin CsisatInterface.interpolate_csisat_wrap(67357)[11]
                      begin CsisatInterface.interpolate_csisat_post_process(67358)[12]
                        begin CsisatInterface.interpolate_csisat_log(67359)[13]
                          input1: (v_sep_sum_1030_sep_59_sep_0 <= v_sep_sum_1030_sep_59_sep_1_sep_62_sep_0 & 2*v_sep_sum_1030_sep_59_sep_0 <= (1 + v_sep_sum_1030_sep_59_sep_1_sep_62_sep_0) & 2*v_sep_sum_1030_sep_59_sep_1_sep_62_sep_0 <= 3*v_sep_sum_1030_sep_59_sep_0)
                          input2: (2 + v_sep_sum_1030_sep_59_sep_1_sep_62_sep_0) <= 4*v_sep_sum_1030_sep_59_sep_0
                          begin CsisatInterface.interpolate_csisat_raw(67360)[14]
                            
                          end CsisatInterface.interpolate_csisat_raw(67360)[14] (0.000000 sec.)
                          
                        end CsisatInterface.interpolate_csisat_log(67359)[13] (0.000000 sec.)
                        
                      end CsisatInterface.interpolate_csisat_post_process(67358)[12] (0.000000 sec.)
                      
                    end CsisatInterface.interpolate_csisat_wrap(67357)[11] (0.000000 sec.)
                    
                  end InterpProver.interpolate_quick(67348)[10] (0.001000 sec.)
                  
                end InterpProver.interpolate_simplify(67257)[9] (0.002000 sec.)
                
              end InterpProver.interpolate_check(67256)[8] (0.002000 sec.)
              there is no interpolant
            end InterpProver.interpolate_log(67255)[7] (0.002000 sec.)
            
          end InterpProver.interpolate_fresh(67254)[6] (0.002000 sec.)
          
        end InterpProver.interpolate(67253)[5] (0.002000 sec.)
        begin InterpProver.interpolate(67371)[5]
          begin InterpProver.interpolate_fresh(67372)[6]
            begin InterpProver.interpolate_log(67373)[7]
              input1: ((((1 + <<sum_1030@59:1>@62:0>) + (-2 * <sum_1030@59:0>)) >= 0) &&
                       (((<<sum_1030@59:1>@62:0> + (-1 * <sum_1030@59:0>)) >= 0) &&
                        (((-2 * <<sum_1030@59:1>@62:0>) + (3 * <sum_1030@59:0>)) >= 0)))
              input2: (not ((4 * <sum_1030@59:0>) <= (6 + <<sum_1030@59:1>@62:0>)))
              begin InterpProver.interpolate_check(67374)[8]
                begin InterpProver.interpolate_simplify(67375)[9]
                  begin InterpProver.interpolate_quick(67466)[10]
                    begin CsisatInterface.interpolate_csisat_wrap(67475)[11]
                      begin CsisatInterface.interpolate_csisat_post_process(67476)[12]
                        begin CsisatInterface.interpolate_csisat_log(67477)[13]
                          input1: (v_sep_sum_1030_sep_59_sep_0 <= v_sep_sum_1030_sep_59_sep_1_sep_62_sep_0 & 2*v_sep_sum_1030_sep_59_sep_0 <= (1 + v_sep_sum_1030_sep_59_sep_1_sep_62_sep_0) & 2*v_sep_sum_1030_sep_59_sep_1_sep_62_sep_0 <= 3*v_sep_sum_1030_sep_59_sep_0)
                          input2: (7 + v_sep_sum_1030_sep_59_sep_1_sep_62_sep_0) <= 4*v_sep_sum_1030_sep_59_sep_0
                          begin CsisatInterface.interpolate_csisat_raw(67478)[14]
                            
                          end CsisatInterface.interpolate_csisat_raw(67478)[14] (0.000000 sec.)
                          output: (-1*v_sep_sum_1030_sep_59_sep_1_sep_62_sep_0 + 4*v_sep_sum_1030_sep_59_sep_0) <= 5
                          
                        end CsisatInterface.interpolate_csisat_log(67477)[13] (0.000000 sec.)
                        after simplification: (-1*v_sep_sum_1030_sep_59_sep_1_sep_62_sep_0 + 4*v_sep_sum_1030_sep_59_sep_0) <= 5
                        after dnf conversion: (((-1*v_sep_sum_1030_sep_59_sep_1_sep_62_sep_0 + 4*v_sep_sum_1030_sep_59_sep_0) <= 5))
                        
                      end CsisatInterface.interpolate_csisat_post_process(67476)[12] (0.000000 sec.)
                      
                    end CsisatInterface.interpolate_csisat_wrap(67475)[11] (0.000000 sec.)
                    
                  end InterpProver.interpolate_quick(67466)[10] (0.000000 sec.)
                  
                end InterpProver.interpolate_simplify(67375)[9] (0.001000 sec.)
                
              end InterpProver.interpolate_check(67374)[8] (0.001000 sec.)
              output: ((4 * <sum_1030@59:0>) <= (5 + <<sum_1030@59:1>@62:0>))
            end InterpProver.interpolate_log(67373)[7] (0.001000 sec.)
            
          end InterpProver.interpolate_fresh(67372)[6] (0.001000 sec.)
          
        end InterpProver.interpolate(67371)[5] (0.001000 sec.)
        begin InterpProver.interpolate(67510)[5]
          begin InterpProver.interpolate_fresh(67511)[6]
            begin InterpProver.interpolate_log(67512)[7]
              input1: ((((1 + <<sum_1030@59:1>@62:0>) + (-2 * <sum_1030@59:0>)) >= 0) &&
                       (((<<sum_1030@59:1>@62:0> + (-1 * <sum_1030@59:0>)) >= 0) &&
                        (((-2 * <<sum_1030@59:1>@62:0>) + (3 * <sum_1030@59:0>)) >= 0)))
              input2: (not (((1 + <sum_1030@59:0>) <= 0) || ((3 * <sum_1030@59:0>) <= (3 + <<sum_1030@59:1>@62:0>))))
              begin InterpProver.interpolate_check(67513)[8]
                begin InterpProver.interpolate_simplify(67514)[9]
                  begin InterpProver.interpolate_quick(67635)[10]
                    begin CsisatInterface.interpolate_csisat_wrap(67644)[11]
                      begin CsisatInterface.interpolate_csisat_post_process(67645)[12]
                        begin CsisatInterface.interpolate_csisat_log(67646)[13]
                          input1: (v_sep_sum_1030_sep_59_sep_0 <= v_sep_sum_1030_sep_59_sep_1_sep_62_sep_0 & 2*v_sep_sum_1030_sep_59_sep_0 <= (1 + v_sep_sum_1030_sep_59_sep_1_sep_62_sep_0) & 2*v_sep_sum_1030_sep_59_sep_1_sep_62_sep_0 <= 3*v_sep_sum_1030_sep_59_sep_0)
                          input2: (1 <= (1 + v_sep_sum_1030_sep_59_sep_0) & (4 + v_sep_sum_1030_sep_59_sep_1_sep_62_sep_0) <= 3*v_sep_sum_1030_sep_59_sep_0)
                          begin CsisatInterface.interpolate_csisat_raw(67647)[14]
                            
                          end CsisatInterface.interpolate_csisat_raw(67647)[14] (0.000000 sec.)
                          output: (-2*v_sep_sum_1030_sep_59_sep_1_sep_62_sep_0 + 6*v_sep_sum_1030_sep_59_sep_0) <= 6
                          
                        end CsisatInterface.interpolate_csisat_log(67646)[13] (0.000000 sec.)
                        after simplification: (-2*v_sep_sum_1030_sep_59_sep_1_sep_62_sep_0 + 6*v_sep_sum_1030_sep_59_sep_0) <= 6
                        after dnf conversion: (((-2*v_sep_sum_1030_sep_59_sep_1_sep_62_sep_0 + 6*v_sep_sum_1030_sep_59_sep_0) <= 6))
                        
                      end CsisatInterface.interpolate_csisat_post_process(67645)[12] (0.000000 sec.)
                      
                    end CsisatInterface.interpolate_csisat_wrap(67644)[11] (0.000000 sec.)
                    
                  end InterpProver.interpolate_quick(67635)[10] (0.001000 sec.)
                  
                end InterpProver.interpolate_simplify(67514)[9] (0.001000 sec.)
                
              end InterpProver.interpolate_check(67513)[8] (0.001999 sec.)
              output: ((3 * <sum_1030@59:0>) <= (3 + <<sum_1030@59:1>@62:0>))
            end InterpProver.interpolate_log(67512)[7] (0.002999 sec.)
            
          end InterpProver.interpolate_fresh(67511)[6] (0.002999 sec.)
          
        end InterpProver.interpolate(67510)[5] (0.002999 sec.)
        begin InterpProver.interpolate(67684)[5]
          begin InterpProver.interpolate_fresh(67685)[6]
            begin InterpProver.interpolate_log(67686)[7]
              input1: ((((1 + <<sum_1030@59:1>@62:0>) + (-2 * <sum_1030@59:0>)) >= 0) &&
                       (((<<sum_1030@59:1>@62:0> + (-1 * <sum_1030@59:0>)) >= 0) &&
                        (((-2 * <<sum_1030@59:1>@62:0>) + (3 * <sum_1030@59:0>)) >= 0)))
              input2: (not (((1 + <sum_1030@59:0>) <= 0) || ((2 * <sum_1030@59:0>) <= (1 + <<sum_1030@59:1>@62:0>))))
              begin InterpProver.interpolate_check(67687)[8]
                begin InterpProver.interpolate_simplify(67688)[9]
                  begin InterpProver.interpolate_quick(67809)[10]
                    begin CsisatInterface.interpolate_csisat_wrap(67818)[11]
                      begin CsisatInterface.interpolate_csisat_post_process(67819)[12]
                        begin CsisatInterface.interpolate_csisat_log(67820)[13]
                          input1: (v_sep_sum_1030_sep_59_sep_0 <= v_sep_sum_1030_sep_59_sep_1_sep_62_sep_0 & 2*v_sep_sum_1030_sep_59_sep_0 <= (1 + v_sep_sum_1030_sep_59_sep_1_sep_62_sep_0) & 2*v_sep_sum_1030_sep_59_sep_1_sep_62_sep_0 <= 3*v_sep_sum_1030_sep_59_sep_0)
                          input2: (1 <= (1 + v_sep_sum_1030_sep_59_sep_0) & (2 + v_sep_sum_1030_sep_59_sep_1_sep_62_sep_0) <= 2*v_sep_sum_1030_sep_59_sep_0)
                          begin CsisatInterface.interpolate_csisat_raw(67821)[14]
                            
                          end CsisatInterface.interpolate_csisat_raw(67821)[14] (0.001000 sec.)
                          output: (-2*v_sep_sum_1030_sep_59_sep_1_sep_62_sep_0 + 4*v_sep_sum_1030_sep_59_sep_0) <= 2
                          
                        end CsisatInterface.interpolate_csisat_log(67820)[13] (0.001000 sec.)
                        after simplification: (-2*v_sep_sum_1030_sep_59_sep_1_sep_62_sep_0 + 4*v_sep_sum_1030_sep_59_sep_0) <= 2
                        after dnf conversion: (((-2*v_sep_sum_1030_sep_59_sep_1_sep_62_sep_0 + 4*v_sep_sum_1030_sep_59_sep_0) <= 2))
                        
                      end CsisatInterface.interpolate_csisat_post_process(67819)[12] (0.001000 sec.)
                      
                    end CsisatInterface.interpolate_csisat_wrap(67818)[11] (0.001000 sec.)
                    
                  end InterpProver.interpolate_quick(67809)[10] (0.002000 sec.)
                  
                end InterpProver.interpolate_simplify(67688)[9] (0.002000 sec.)
                
              end InterpProver.interpolate_check(67687)[8] (0.002000 sec.)
              output: ((2 * <sum_1030@59:0>) <= (1 + <<sum_1030@59:1>@62:0>))
            end InterpProver.interpolate_log(67686)[7] (0.002000 sec.)
            
          end InterpProver.interpolate_fresh(67685)[6] (0.002000 sec.)
          
        end InterpProver.interpolate(67684)[5] (0.002000 sec.)
        output:
          P[<<sum_1030@59:1>@62:0>](<sum_1030@59:0>:int,<<sum_1030@59:1>@62:0>:int) =
          ((2 * <sum_1030@59:0>) <= (1 + <<sum_1030@59:1>@62:0>))
          P[<<sum_1030@56:1>@68:0>](<sum_1030@59:0>:int,<<sum_1030@59:1>@62:0>:int) =
          ((3 * <sum_1030@59:0>) <= (3 + <<sum_1030@59:1>@62:0>))
          P[<<sum_1030@53:1>@74:0>](<sum_1030@59:0>:int,<<sum_1030@59:1>@62:0>:int) =
          ((4 * <sum_1030@59:0>) <= (5 + <<sum_1030@59:1>@62:0>))
      end ApronInterface.convex_hull_interpolate(67138)[4] (0.009998 sec.)
      Horn clauses:
        P[<fail_1170@79:0>](<fail_1170@79:0>:bool)|- bot
        
        P[<sum_1030@53:0>](<sum_1030@53:0>:int),
        P[<<sum_1030@56:1>@68:0>]((-1 + <sum_1030@53:0>):int,(<<sum_1030@53:1>@74:0> + (-1 * <sum_1030@53:0>)):int),
        ((<sum_1030@53:0> > 0) && ((4 * <sum_1030@53:0>) > (5 + <<sum_1030@53:1>@74:0>))) |- bot
        
        P[<sum_1030@56:0>](<sum_1030@56:0>:int),
        P[<<sum_1030@59:1>@62:0>]((-1 + <sum_1030@56:0>):int,(<<sum_1030@56:1>@68:0> + (-1 * <sum_1030@56:0>)):int),
        (<sum_1030@56:0> > 0) |- P[<<sum_1030@56:1>@68:0>](<sum_1030@56:0>:int,
                                                           <<sum_1030@56:1>@68:0>:int)
        
        P[<sum_1030@59:0>](<sum_1030@59:0>:int), ((<<sum_1030@59:1>@62:0> = 0) && (<sum_1030@59:0> <= 0))
        |- P[<<sum_1030@59:1>@62:0>](<sum_1030@59:0>:int,<<sum_1030@59:1>@62:0>:int)
        
        P[<sum_1030@56:0>]((1 + <sum_1030@59:0>):int), ((1 + <sum_1030@59:0>) > 0)
        |- P[<sum_1030@59:0>](<sum_1030@59:0>:int)
        
        P[<sum_1030@53:0>]((1 + <sum_1030@56:0>):int), ((1 + <sum_1030@56:0>) > 0)
        |- P[<sum_1030@56:0>](<sum_1030@56:0>:int)
        
        |- P[<sum_1030@53:0>](<sum_1030@53:0>:int)
      lower bounds:
        P[<sum_1030@53:0>](<sum_1030@53:0>:int) = true
        P[<fail_1170@79:0>](var161:bool) = false
        P[<sum_1030@56:0>](<sum_1030@56:0>:int) = ((1 + <sum_1030@56:0>) > 0)
        P[<sum_1030@59:0>](<sum_1030@59:0>:int) = ((1 + <sum_1030@59:0>) > 0)
        P[<<sum_1030@59:1>@62:0>](<sum_1030@59:0>:int,<<sum_1030@59:1>@62:0>:int) =
        ((<<sum_1030@59:1>@62:0> = 0) && (<sum_1030@59:0> = 0))
        P[<<sum_1030@56:1>@68:0>](<sum_1030@56:0>:int,<<sum_1030@56:1>@68:0>:int) =
        ((<sum_1030@56:0> = 1) && (<<sum_1030@56:1>@68:0> = <sum_1030@56:0>))
      upper bounds:
        P[<sum_1030@59:0>](var170:int) = true
        P[<sum_1030@56:0>](var167:int) = true
        P[<sum_1030@53:0>](var164:int) = true
      begin GenHcSolver.classify_pids(73902)[4]
        output:
          [<sum_1030@53:0>;<sum_1030@56:0>;<sum_1030@59:0>]
      end GenHcSolver.classify_pids(73902)[4] (0.000000 sec.)
      begin ApronInterface.convex_hull_interpolate(73923)[4]
        lb:true
        nub:false
        begin ExtFormula.Formula.case_analysis_boolean(73926)[5]
          ts: true
          
        end ExtFormula.Formula.case_analysis_boolean(73926)[5] (0.001000 sec.)
        begin ExtFormula.Formula.case_analysis_boolean(73931)[5]
          ts: false
          
        end ExtFormula.Formula.case_analysis_boolean(73931)[5] (0.000000 sec.)
        lb':true
        nub':(-1 >= 0)
        begin InterpProver.interpolate(73934)[5]
          begin InterpProver.interpolate_fresh(73935)[6]
            begin InterpProver.interpolate_log(73936)[7]
              input1: true
              input2: (-1 >= 0)
              begin InterpProver.interpolate_check(73937)[8]
                begin InterpProver.interpolate_simplify(73938)[9]
                  begin InterpProver.interpolate_quick(73952)[10]
                    
                  end InterpProver.interpolate_quick(73952)[10] (0.000000 sec.)
                  
                end InterpProver.interpolate_simplify(73938)[9] (0.000000 sec.)
                
              end InterpProver.interpolate_check(73937)[8] (0.000000 sec.)
              output: true
            end InterpProver.interpolate_log(73936)[7] (0.000000 sec.)
            
          end InterpProver.interpolate_fresh(73935)[6] (0.000000 sec.)
          
        end InterpProver.interpolate(73934)[5] (0.000000 sec.)
        output:
          P[<sum_1030@53:0>](<sum_1030@53:0>:int) = true
          P[<sum_1030@56:0>](<sum_1030@53:0>:int) = true
          P[<sum_1030@59:0>](<sum_1030@53:0>:int) = true
      end ApronInterface.convex_hull_interpolate(73923)[4] (0.001000 sec.)
      Horn clauses:
        P[<fail_1170@79:0>](<fail_1170@79:0>:bool)|- bot
        
        P[<<sum_1030@56:1>@68:0>]((-1 + <sum_1030@53:0>):int,(<<sum_1030@53:1>@74:0> + (-1 * <sum_1030@53:0>)):int),
        ((<sum_1030@53:0> > 0) && ((4 * <sum_1030@53:0>) > (5 + <<sum_1030@53:1>@74:0>))) |- bot
        
        P[<<sum_1030@59:1>@62:0>]((-1 + <sum_1030@56:0>):int,(<<sum_1030@56:1>@68:0> + (-1 * <sum_1030@56:0>)):int),
        (<sum_1030@56:0> > 0) |- P[<<sum_1030@56:1>@68:0>](<sum_1030@56:0>:int,
                                                           <<sum_1030@56:1>@68:0>:int)
        
         ((<<sum_1030@59:1>@62:0> = 0) && (<sum_1030@59:0> <= 0))
        |- P[<<sum_1030@59:1>@62:0>](<sum_1030@59:0>:int,<<sum_1030@59:1>@62:0>:int)
      lower bounds:
        P[<<sum_1030@59:1>@62:0>](<sum_1030@59:0>:int,<<sum_1030@59:1>@62:0>:int) =
        ((<<sum_1030@59:1>@62:0> = 0) && (<sum_1030@59:0> <= 0))
        P[<fail_1170@79:0>](var175:bool) = false
        P[<<sum_1030@56:1>@68:0>](<sum_1030@56:0>:int,<<sum_1030@56:1>@68:0>:int) =
        ((<sum_1030@56:0> = 1) && (<<sum_1030@56:1>@68:0> = <sum_1030@56:0>))
      upper bounds:
        P[<<sum_1030@56:1>@68:0>](var182:int,var183:int) = (((1 + var182) <= 0) || ((3 * var182) <= (2 + var183)))
        P[<<sum_1030@59:1>@62:0>](var178:int,var179:int) = (((1 + var178) <= 0) || ((2 * var178) <= var179))
      begin GenHcSolver.classify_pids(78658)[4]
        output:
          [<<sum_1030@56:1>@68:0>],[<<sum_1030@59:1>@62:0>]
      end GenHcSolver.classify_pids(78658)[4] (0.000000 sec.)
      lb:((<sum_1030@56:0> = 1) && (<<sum_1030@56:1>@68:0> = <sum_1030@56:0>))
      nub:(not (((1 + <sum_1030@56:0>) <= 0) || ((3 * <sum_1030@56:0>) <= (2 + <<sum_1030@56:1>@68:0>))))
      begin ApronInterface.convex_hull_interpolate(78738)[4]
        lb:((<sum_1030@56:0> = 1) && (<<sum_1030@56:1>@68:0> = <sum_1030@56:0>))
        nub:(not (((1 + <sum_1030@56:0>) <= 0) || ((3 * <sum_1030@56:0>) <= (2 + <<sum_1030@56:1>@68:0>))))
        begin ExtFormula.Formula.case_analysis_boolean(78753)[5]
          ts: ((<sum_1030@56:0> = 1) && (<<sum_1030@56:1>@68:0> = <sum_1030@56:0>))
          
        end ExtFormula.Formula.case_analysis_boolean(78753)[5] (0.000000 sec.)
        begin ExtFormula.Formula.case_analysis_boolean(78780)[5]
          ts: (((1 + <sum_1030@56:0>) > 0) && ((3 * <sum_1030@56:0>) > (2 + <<sum_1030@56:1>@68:0>)))
          
        end ExtFormula.Formula.case_analysis_boolean(78780)[5] (0.000000 sec.)
        lb':(((-1 + <<sum_1030@56:1>@68:0>) = 0) && ((-1 + <sum_1030@56:0>) = 0))
        nub':((<sum_1030@56:0> >= 0) && (((-3 + (-1 * <<sum_1030@56:1>@68:0>)) + (3 * <sum_1030@56:0>)) >= 0))
        begin InterpProver.interpolate(78788)[5]
          begin InterpProver.interpolate_fresh(78789)[6]
            begin InterpProver.interpolate_log(78790)[7]
              input1: (((-1 + <<sum_1030@56:1>@68:0>) = 0) && ((-1 + <sum_1030@56:0>) = 0))
              input2: ((<sum_1030@56:0> >= 0) && (((-3 + (-1 * <<sum_1030@56:1>@68:0>)) + (3 * <sum_1030@56:0>)) >= 0))
              begin InterpProver.interpolate_check(78791)[8]
                begin InterpProver.interpolate_simplify(78792)[9]
                  begin InterpProver.interpolate_quick(78853)[10]
                    begin CsisatInterface.interpolate_csisat_wrap(78862)[11]
                      begin CsisatInterface.interpolate_csisat_post_process(78863)[12]
                        begin CsisatInterface.interpolate_csisat_log(78864)[13]
                          input1: (1 = v_sep_sum_1030_sep_56_sep_0 & 1 = v_sep_sum_1030_sep_56_sep_1_sep_68_sep_0)
                          input2: (0 <= v_sep_sum_1030_sep_56_sep_0 & (3 + v_sep_sum_1030_sep_56_sep_1_sep_68_sep_0) <= 3*v_sep_sum_1030_sep_56_sep_0)
                          begin CsisatInterface.interpolate_csisat_raw(78865)[14]
                            
                          end CsisatInterface.interpolate_csisat_raw(78865)[14] (0.000000 sec.)
                          output: (-2*v_sep_sum_1030_sep_56_sep_1_sep_68_sep_0 + 6.*v_sep_sum_1030_sep_56_sep_0) <= 4.
                          
                        end CsisatInterface.interpolate_csisat_log(78864)[13] (0.000000 sec.)
                        after simplification: (-2*v_sep_sum_1030_sep_56_sep_1_sep_68_sep_0 + 6*v_sep_sum_1030_sep_56_sep_0) <= 4
                        after dnf conversion: (((-2*v_sep_sum_1030_sep_56_sep_1_sep_68_sep_0 + 6*v_sep_sum_1030_sep_56_sep_0) <= 4))
                        
                      end CsisatInterface.interpolate_csisat_post_process(78863)[12] (0.000000 sec.)
                      
                    end CsisatInterface.interpolate_csisat_wrap(78862)[11] (0.000000 sec.)
                    
                  end InterpProver.interpolate_quick(78853)[10] (0.001000 sec.)
                  
                end InterpProver.interpolate_simplify(78792)[9] (0.001999 sec.)
                
              end InterpProver.interpolate_check(78791)[8] (0.002999 sec.)
              output: ((3 * <sum_1030@56:0>) <= (2 + <<sum_1030@56:1>@68:0>))
            end InterpProver.interpolate_log(78790)[7] (0.002999 sec.)
            
          end InterpProver.interpolate_fresh(78789)[6] (0.002999 sec.)
          
        end InterpProver.interpolate(78788)[5] (0.002999 sec.)
        output:
          P[<<sum_1030@56:1>@68:0>](<sum_1030@56:0>:int,<<sum_1030@56:1>@68:0>:int) =
          ((3 * <sum_1030@56:0>) <= (2 + <<sum_1030@56:1>@68:0>))
      end ApronInterface.convex_hull_interpolate(78738)[4] (0.002999 sec.)
      Horn clauses:
        P[<fail_1170@79:0>](<fail_1170@79:0>:bool)|- bot
        
        P[<<sum_1030@59:1>@62:0>]((-1 + <sum_1030@56:0>):int,(<<sum_1030@56:1>@68:0> + (-1 * <sum_1030@56:0>)):int),
        ((<sum_1030@56:0> > 0) && ((3 * <sum_1030@56:0>) > (2 + <<sum_1030@56:1>@68:0>))) |- bot
        
         ((<<sum_1030@59:1>@62:0> = 0) && (<sum_1030@59:0> <= 0))
        |- P[<<sum_1030@59:1>@62:0>](<sum_1030@59:0>:int,<<sum_1030@59:1>@62:0>:int)
      lower bounds:
        P[<<sum_1030@59:1>@62:0>](<sum_1030@59:0>:int,<<sum_1030@59:1>@62:0>:int) =
        ((<<sum_1030@59:1>@62:0> = 0) && (<sum_1030@59:0> <= 0))
        P[<fail_1170@79:0>](var185:bool) = false
      upper bounds:
        P[<fail_1170@79:0>](var188:bool) = true
      begin GenHcSolver.classify_pids(79882)[4]
        output:
          [<fail_1170@79:0>]
      end GenHcSolver.classify_pids(79882)[4] (0.000000 sec.)
      lb:false
      nub:false
      begin ApronInterface.convex_hull_interpolate(79885)[4]
        lb:false
        nub:false
        begin ExtFormula.Formula.case_analysis_boolean(79888)[5]
          ts: false
          
        end ExtFormula.Formula.case_analysis_boolean(79888)[5] (0.000000 sec.)
        begin ExtFormula.Formula.case_analysis_boolean(79893)[5]
          ts: false
          
        end ExtFormula.Formula.case_analysis_boolean(79893)[5] (0.000000 sec.)
        lb':(-1 >= 0)
        nub':(-1 >= 0)
        begin InterpProver.interpolate(79896)[5]
          begin InterpProver.interpolate_fresh(79897)[6]
            begin InterpProver.interpolate_log(79898)[7]
              input1: (-1 >= 0)
              input2: (-1 >= 0)
              begin InterpProver.interpolate_check(79899)[8]
                begin InterpProver.interpolate_simplify(79900)[9]
                  begin InterpProver.interpolate_quick(79915)[10]
                    
                  end InterpProver.interpolate_quick(79915)[10] (0.000000 sec.)
                  begin minimizing # of disjunctions(79919)[10]
                    input: false
                    output: false
                  end minimizing # of disjunctions(79919)[10] (0.000000 sec.)
                  
                end InterpProver.interpolate_simplify(79900)[9] (0.001000 sec.)
                
              end InterpProver.interpolate_check(79899)[8] (0.001000 sec.)
              output: false
            end InterpProver.interpolate_log(79898)[7] (0.001000 sec.)
            
          end InterpProver.interpolate_fresh(79897)[6] (0.001000 sec.)
          
        end InterpProver.interpolate(79896)[5] (0.001000 sec.)
        output:
          P[<fail_1170@79:0>](var185:bool) = false
      end ApronInterface.convex_hull_interpolate(79885)[4] (0.001000 sec.)
      Horn clauses:
        P[<<sum_1030@59:1>@62:0>]((-1 + <sum_1030@56:0>):int,(<<sum_1030@56:1>@68:0> + (-1 * <sum_1030@56:0>)):int),
        ((<sum_1030@56:0> > 0) && ((3 * <sum_1030@56:0>) > (2 + <<sum_1030@56:1>@68:0>))) |- bot
        
         ((<<sum_1030@59:1>@62:0> = 0) && (<sum_1030@59:0> <= 0))
        |- P[<<sum_1030@59:1>@62:0>](<sum_1030@59:0>:int,<<sum_1030@59:1>@62:0>:int)
      lower bounds:
        P[<<sum_1030@59:1>@62:0>](<sum_1030@59:0>:int,<<sum_1030@59:1>@62:0>:int) =
        ((<<sum_1030@59:1>@62:0> = 0) && (<sum_1030@59:0> <= 0))
      upper bounds:
        P[<<sum_1030@59:1>@62:0>](var189:int,var190:int) = (((1 + var189) <= 0) || ((2 * var189) <= var190))
      begin GenHcSolver.classify_pids(81215)[4]
        output:
          [<<sum_1030@59:1>@62:0>]
      end GenHcSolver.classify_pids(81215)[4] (0.000000 sec.)
      lb:((<<sum_1030@59:1>@62:0> = 0) && (<sum_1030@59:0> <= 0))
      nub:(not (((1 + <sum_1030@59:0>) <= 0) || ((2 * <sum_1030@59:0>) <= <<sum_1030@59:1>@62:0>)))
      begin ApronInterface.convex_hull_interpolate(81218)[4]
        lb:((<<sum_1030@59:1>@62:0> = 0) && (<sum_1030@59:0> <= 0))
        nub:(not (((1 + <sum_1030@59:0>) <= 0) || ((2 * <sum_1030@59:0>) <= <<sum_1030@59:1>@62:0>)))
        begin ExtFormula.Formula.case_analysis_boolean(81228)[5]
          ts: ((<<sum_1030@59:1>@62:0> = 0) && (<sum_1030@59:0> <= 0))
          
        end ExtFormula.Formula.case_analysis_boolean(81228)[5] (0.000000 sec.)
        begin ExtFormula.Formula.case_analysis_boolean(81250)[5]
          ts: (((1 + <sum_1030@59:0>) > 0) && ((2 * <sum_1030@59:0>) > <<sum_1030@59:1>@62:0>))
          
        end ExtFormula.Formula.case_analysis_boolean(81250)[5] (0.000000 sec.)
        lb':((<<sum_1030@59:1>@62:0> = 0) && ((-1 * <sum_1030@59:0>) >= 0))
        nub':((<sum_1030@59:0> >= 0) && (((-1 + (-1 * <<sum_1030@59:1>@62:0>)) + (2 * <sum_1030@59:0>)) >= 0))
        begin InterpProver.interpolate(81257)[5]
          begin InterpProver.interpolate_fresh(81258)[6]
            begin InterpProver.interpolate_log(81259)[7]
              input1: ((<<sum_1030@59:1>@62:0> = 0) && ((-1 * <sum_1030@59:0>) >= 0))
              input2: ((<sum_1030@59:0> >= 0) && (((-1 + (-1 * <<sum_1030@59:1>@62:0>)) + (2 * <sum_1030@59:0>)) >= 0))
              begin InterpProver.interpolate_check(81260)[8]
                begin InterpProver.interpolate_simplify(81261)[9]
                  begin InterpProver.interpolate_quick(81318)[10]
                    begin CsisatInterface.interpolate_csisat_wrap(81327)[11]
                      begin CsisatInterface.interpolate_csisat_post_process(81328)[12]
                        begin CsisatInterface.interpolate_csisat_log(81329)[13]
                          input1: (0 = v_sep_sum_1030_sep_59_sep_1_sep_62_sep_0 & v_sep_sum_1030_sep_59_sep_0 <= 0)
                          input2: (0 <= v_sep_sum_1030_sep_59_sep_0 & (1 + v_sep_sum_1030_sep_59_sep_1_sep_62_sep_0) <= 2*v_sep_sum_1030_sep_59_sep_0)
                          begin CsisatInterface.interpolate_csisat_raw(81330)[14]
                            
                          end CsisatInterface.interpolate_csisat_raw(81330)[14] (0.000000 sec.)
                          output: (-2*v_sep_sum_1030_sep_59_sep_1_sep_62_sep_0 + 4*v_sep_sum_1030_sep_59_sep_0) <= 0
                          
                        end CsisatInterface.interpolate_csisat_log(81329)[13] (0.000000 sec.)
                        after simplification: (-2*v_sep_sum_1030_sep_59_sep_1_sep_62_sep_0 + 4*v_sep_sum_1030_sep_59_sep_0) <= 0
                        after dnf conversion: (((-2*v_sep_sum_1030_sep_59_sep_1_sep_62_sep_0 + 4*v_sep_sum_1030_sep_59_sep_0) <= 0))
                        
                      end CsisatInterface.interpolate_csisat_post_process(81328)[12] (0.000000 sec.)
                      
                    end CsisatInterface.interpolate_csisat_wrap(81327)[11] (0.000000 sec.)
                    
                  end InterpProver.interpolate_quick(81318)[10] (0.001000 sec.)
                  
                end InterpProver.interpolate_simplify(81261)[9] (0.001000 sec.)
                
              end InterpProver.interpolate_check(81260)[8] (0.002000 sec.)
              output: ((2 * <sum_1030@59:0>) <= <<sum_1030@59:1>@62:0>)
            end InterpProver.interpolate_log(81259)[7] (0.002000 sec.)
            
          end InterpProver.interpolate_fresh(81258)[6] (0.002000 sec.)
          
        end InterpProver.interpolate(81257)[5] (0.002000 sec.)
        output:
          P[<<sum_1030@59:1>@62:0>](<sum_1030@59:0>:int,<<sum_1030@59:1>@62:0>:int) =
          ((2 * <sum_1030@59:0>) <= <<sum_1030@59:1>@62:0>)
      end ApronInterface.convex_hull_interpolate(81218)[4] (0.002000 sec.)
      begin HcSolver.check_validity(81534)[4]
        input:
          P[<fail_1170@79:0>](<fail_1170@79:0>:bool)|- bot
          
          P[<<sum_1030@53:1>@74:0>](<f_main_1167@76:0>:int,<f_main_1167@76:2>:int),
          (((4 * <f_main_1167@76:0>) > (6 + <f_main_1167@76:2>)) && <fail_1170@79:0>)
          |- P[<fail_1170@79:0>](<fail_1170@79:0>:bool)
          
          P[<sum_1030@53:0>](<sum_1030@53:0>:int),
          P[<<sum_1030@56:1>@68:0>]((-1 + <sum_1030@53:0>):int,(<<sum_1030@53:1>@74:0> + (-1 * <sum_1030@53:0>)):int),
          (<sum_1030@53:0> > 0) |- P[<<sum_1030@53:1>@74:0>](<sum_1030@53:0>:int,
                                                             <<sum_1030@53:1>@74:0>:int)
          
          P[<sum_1030@56:0>](<sum_1030@56:0>:int),
          P[<<sum_1030@59:1>@62:0>]((-1 + <sum_1030@56:0>):int,(<<sum_1030@56:1>@68:0> + (-1 * <sum_1030@56:0>)):int),
          (<sum_1030@56:0> > 0) |- P[<<sum_1030@56:1>@68:0>](<sum_1030@56:0>:int,
                                                             <<sum_1030@56:1>@68:0>:int)
          
          P[<sum_1030@59:0>](<sum_1030@59:0>:int), ((<<sum_1030@59:1>@62:0> = 0) && (<sum_1030@59:0> <= 0))
          |- P[<<sum_1030@59:1>@62:0>](<sum_1030@59:0>:int,<<sum_1030@59:1>@62:0>:int)
          
          P[<sum_1030@56:0>]((1 + <sum_1030@59:0>):int), ((1 + <sum_1030@59:0>) > 0)
          |- P[<sum_1030@59:0>](<sum_1030@59:0>:int)
          
          P[<sum_1030@53:0>]((1 + <sum_1030@56:0>):int), ((1 + <sum_1030@56:0>) > 0)
          |- P[<sum_1030@56:0>](<sum_1030@56:0>:int)
          
          |- P[<sum_1030@53:0>](<sum_1030@53:0>:int)
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        
      end HcSolver.check_validity(81534)[4] (0.003999 sec.)
      solution:
        P[<fail_1170@79:0>](var185:bool) = false
        P[<<sum_1030@53:1>@74:0>](<sum_1030@59:0>:int,<<sum_1030@59:1>@62:0>:int) =
        ((4 * <sum_1030@59:0>) <= (5 + <<sum_1030@59:1>@62:0>))
        P[<<sum_1030@56:1>@68:0>](<sum_1030@56:0>:int,<<sum_1030@56:1>@68:0>:int) =
        ((3 * <sum_1030@56:0>) <= (2 + <<sum_1030@56:1>@68:0>))
        P[<<sum_1030@59:1>@62:0>](<sum_1030@59:0>:int,<<sum_1030@59:1>@62:0>:int) =
        ((2 * <sum_1030@59:0>) <= <<sum_1030@59:1>@62:0>)
        P[<sum_1030@59:0>](<sum_1030@53:0>:int) = true
        P[<sum_1030@56:0>](<sum_1030@53:0>:int) = true
        P[<sum_1030@53:0>](<sum_1030@53:0>:int) = true
    end GenHcSolver.solve(61009)[3] (0.096985 sec.)
    begin YhornInterface.solve(82147)[3]
      begin HcSolver.solve_ub(82148)[4]
        encoded:
          P[<fail_1170@79:0>](<fail_1170@79:0>:int)|- bot
          
          P[<<sum_1030@53:1>@74:0>](<f_main_1167@76:0>:int,<f_main_1167@76:2>:int),
          (((4 * <f_main_1167@76:0>) > (6 + <f_main_1167@76:2>)) && (<fail_1170@79:0> = 1))
          |- P[<fail_1170@79:0>](<fail_1170@79:0>:int)
          
          P[<sum_1030@53:0>](<sum_1030@53:0>:int),
          P[<<sum_1030@56:1>@68:0>]((-1 + <sum_1030@53:0>):int,(<<sum_1030@53:1>@74:0> + (-1 * <sum_1030@53:0>)):int),
          (<sum_1030@53:0> > 0) |- P[<<sum_1030@53:1>@74:0>](<sum_1030@53:0>:int,
                                                             <<sum_1030@53:1>@74:0>:int)
          
          P[<sum_1030@56:0>](<sum_1030@56:0>:int),
          P[<<sum_1030@59:1>@62:0>]((-1 + <sum_1030@56:0>):int,(<<sum_1030@56:1>@68:0> + (-1 * <sum_1030@56:0>)):int),
          (<sum_1030@56:0> > 0) |- P[<<sum_1030@56:1>@68:0>](<sum_1030@56:0>:int,
                                                             <<sum_1030@56:1>@68:0>:int)
          
          P[<sum_1030@59:0>](<sum_1030@59:0>:int), ((<<sum_1030@59:1>@62:0> = 0) && (<sum_1030@59:0> <= 0))
          |- P[<<sum_1030@59:1>@62:0>](<sum_1030@59:0>:int,<<sum_1030@59:1>@62:0>:int)
          
          P[<sum_1030@56:0>]((1 + <sum_1030@59:0>):int), ((1 + <sum_1030@59:0>) > 0)
          |- P[<sum_1030@59:0>](<sum_1030@59:0>:int)
          
          P[<sum_1030@53:0>]((1 + <sum_1030@56:0>):int), ((1 + <sum_1030@56:0>) > 0)
          |- P[<sum_1030@56:0>](<sum_1030@56:0>:int)
          
          |- P[<sum_1030@53:0>](<sum_1030@53:0>:int)
        input to Yhorn:
          P[<fail_1170@79:0>](<fail_1170@79:0>:int)|- bot
          
          P[<<sum_1030@53:1>@74:0>](<f_main_1167@76:0>:int,<f_main_1167@76:2>:int),
          (((4 * <f_main_1167@76:0>) > (6 + <f_main_1167@76:2>)) && (<fail_1170@79:0> = 1))
          |- P[<fail_1170@79:0>](<fail_1170@79:0>:int)
          
          P[<sum_1030@53:0>](<sum_1030@53:0>:int),
          P[<<sum_1030@56:1>@68:0>](var191:int,var192:int),
          (((var192 + <sum_1030@53:0>) = <<sum_1030@53:1>@74:0>) &&
           (((1 + var191) = <sum_1030@53:0>) && (<sum_1030@53:0> > 0)))
          |- P[<<sum_1030@53:1>@74:0>](<sum_1030@53:0>:int,<<sum_1030@53:1>@74:0>:int)
          
          P[<sum_1030@56:0>](<sum_1030@56:0>:int),
          P[<<sum_1030@59:1>@62:0>](var193:int,var194:int),
          (((var194 + <sum_1030@56:0>) = <<sum_1030@56:1>@68:0>) &&
           (((1 + var193) = <sum_1030@56:0>) && (<sum_1030@56:0> > 0)))
          |- P[<<sum_1030@56:1>@68:0>](<sum_1030@56:0>:int,<<sum_1030@56:1>@68:0>:int)
          
          P[<sum_1030@59:0>](<sum_1030@59:0>:int), ((<sum_1030@59:0> <= 0) && (<<sum_1030@59:1>@62:0> = 0))
          |- P[<<sum_1030@59:1>@62:0>](<sum_1030@59:0>:int,<<sum_1030@59:1>@62:0>:int)
          
          P[<sum_1030@56:0>](var195:int), ((var195 = (1 + <sum_1030@59:0>)) && ((1 + <sum_1030@59:0>) > 0))
          |- P[<sum_1030@59:0>](<sum_1030@59:0>:int)
          
          P[<sum_1030@53:0>](var196:int), ((var196 = (1 + <sum_1030@56:0>)) && ((1 + <sum_1030@56:0>) > 0))
          |- P[<sum_1030@56:0>](<sum_1030@56:0>:int)
          Yhorn (Wed Sep 25 10:52:05 JST 2013)


(0=0) & (v_sep_fail_1170_sep_79_sep_0($182)) -> 1=0.
(($182-1=0) & (4$183-$184-6>0)) & (v_sep_sum_1030_sep_53_sep_1_sep_74_sep_0($183,$184)) -> v_sep_fail_1170_sep_79_sep_0($182).
(($185>0) & (-$185+$186+1=0) & ($185+$187-$188=0)) & (v_sep_sum_1030_sep_56_sep_1_sep_68_sep_0($186,$187)) & (v_sep_sum_1030_sep_53_sep_0($185)) -> v_sep_sum_1030_sep_53_sep_1_sep_74_sep_0($185,$188).
(($189>0) & (-$189+$190+1=0) & ($189+$191-$192=0)) & (v_sep_sum_1030_sep_59_sep_1_sep_62_sep_0($190,$191)) & (v_sep_sum_1030_sep_56_sep_0($189)) -> v_sep_sum_1030_sep_56_sep_1_sep_68_sep_0($189,$192).
(($193=0) & ($194<=0)) & (v_sep_sum_1030_sep_59_sep_0($194)) -> v_sep_sum_1030_sep_59_sep_1_sep_62_sep_0($194,$193).
(($194+1>0) & (-$194+$195-1=0)) & (v_sep_sum_1030_sep_56_sep_0($195)) -> v_sep_sum_1030_sep_59_sep_0($194).
(($189+1>0) & (-$189+$196-1=0)) & (v_sep_sum_1030_sep_53_sep_0($196)) -> v_sep_sum_1030_sep_56_sep_0($189).
0=0 -> v_sep_sum_1030_sep_53_sep_0($185).


v_sep_fail_1170_sep_79_sep_0: X
v_sep_sum_1030_sep_53_sep_0: X
v_sep_sum_1030_sep_53_sep_1_sep_74_sep_0: X
v_sep_sum_1030_sep_56_sep_0: X
v_sep_sum_1030_sep_56_sep_1_sep_68_sep_0: X
v_sep_sum_1030_sep_59_sep_0: X
v_sep_sum_1030_sep_59_sep_1_sep_62_sep_0: X
..........
v_sep_fail_1170_sep_79_sep_0: X
v_sep_sum_1030_sep_53_sep_0: X
v_sep_sum_1030_sep_53_sep_1_sep_74_sep_0: X
v_sep_sum_1030_sep_56_sep_0: X
v_sep_sum_1030_sep_56_sep_1_sep_68_sep_0: X
v_sep_sum_1030_sep_59_sep_0: X
v_sep_sum_1030_sep_59_sep_1_sep_62_sep_0: X
...
v_sep_fail_1170_sep_79_sep_0: X
v_sep_sum_1030_sep_53_sep_0: X
v_sep_sum_1030_sep_53_sep_1_sep_74_sep_0: X
v_sep_sum_1030_sep_56_sep_0: X
v_sep_sum_1030_sep_56_sep_1_sep_68_sep_0: X
v_sep_sum_1030_sep_59_sep_0: X
v_sep_sum_1030_sep_59_sep_1_sep_62_sep_0: X
.....
v_sep_fail_1170_sep_79_sep_0: X
v_sep_sum_1030_sep_53_sep_0: X
v_sep_sum_1030_sep_53_sep_1_sep_74_sep_0: X
v_sep_sum_1030_sep_56_sep_0: X
v_sep_sum_1030_sep_56_sep_1_sep_68_sep_0: X
v_sep_sum_1030_sep_59_sep_0: X
v_sep_sum_1030_sep_59_sep_1_sep_62_sep_0: X
.......
v_sep_fail_1170_sep_79_sep_0: X
v_sep_sum_1030_sep_53_sep_0: X
v_sep_sum_1030_sep_53_sep_1_sep_74_sep_0: X
v_sep_sum_1030_sep_56_sep_0: X
v_sep_sum_1030_sep_56_sep_1_sep_68_sep_0: X
v_sep_sum_1030_sep_59_sep_0: X
v_sep_sum_1030_sep_59_sep_1_sep_62_sep_0: X
.........
v_sep_fail_1170_sep_79_sep_0: X
v_sep_sum_1030_sep_53_sep_0: X
v_sep_sum_1030_sep_53_sep_1_sep_74_sep_0: X
v_sep_sum_1030_sep_56_sep_0: X
v_sep_sum_1030_sep_56_sep_1_sep_68_sep_0: X
v_sep_sum_1030_sep_59_sep_0: X
v_sep_sum_1030_sep_59_sep_1_sep_62_sep_0: X
..........(0=0) & (v_sep_fail_1170_sep_79_sep_0($182)) -> 1=0.
(($182-1=0) & (4$183-$184-6>0)) & (v_sep_sum_1030_sep_53_sep_1_sep_74_sep_0($183,$184)) -> v_sep_fail_1170_sep_79_sep_0($182).
(($185>0) & (-$185+$186+1=0) & ($185+$187-$188=0)) & (v_sep_sum_1030_sep_56_sep_1_sep_68_sep_0($186,$187)) & (v_sep_sum_1030_sep_53_sep_0($185)) -> v_sep_sum_1030_sep_53_sep_1_sep_74_sep_0($185,$188).
(($189>0) & (-$189+$190+1=0) & ($189+$191-$192=0)) & (v_sep_sum_1030_sep_59_sep_1_sep_62_sep_0($190,$191)) & (v_sep_sum_1030_sep_56_sep_0($189)) -> v_sep_sum_1030_sep_56_sep_1_sep_68_sep_0($189,$192).
(($193=0) & ($194<=0)) & (v_sep_sum_1030_sep_59_sep_0($194)) -> v_sep_sum_1030_sep_59_sep_1_sep_62_sep_0($194,$193).
(($194+1>0) & (-$194+$195-1=0)) & (v_sep_sum_1030_sep_56_sep_0($195)) -> v_sep_sum_1030_sep_59_sep_0($194).
(($189+1>0) & (-$189+$196-1=0)) & (v_sep_sum_1030_sep_53_sep_0($196)) -> v_sep_sum_1030_sep_56_sep_0($189).
0=0 -> v_sep_sum_1030_sep_53_sep_0($185).

          |- P[<sum_1030@53:0>](<sum_1030@53:0>:int)
        solution:
          P[<fail_1170@79:0>]($197:bool) = false
          P[<sum_1030@53:0>]($210:int) = true
          P[<<sum_1030@53:1>@74:0>]($200:int,$202:int) = ((4 * $200) <= (5 + $202))
          P[<sum_1030@56:0>]($218:int) = true
          P[<<sum_1030@56:1>@68:0>]($205:int,$207:int) = ((3 * $205) <= (2 + $207))
          P[<sum_1030@59:0>]($221:int) = true
          P[<<sum_1030@59:1>@62:0>]($213:int,$215:int) = ((2 * $213) <= $215)
        
      end HcSolver.solve_ub(82148)[4] (0.028996 sec.)
      begin HcSolver.check_validity(82572)[4]
        input:
          P[<fail_1170@79:0>](<fail_1170@79:0>:bool)|- bot
          
          P[<<sum_1030@53:1>@74:0>](<f_main_1167@76:0>:int,<f_main_1167@76:2>:int),
          (((4 * <f_main_1167@76:0>) > (6 + <f_main_1167@76:2>)) && <fail_1170@79:0>)
          |- P[<fail_1170@79:0>](<fail_1170@79:0>:bool)
          
          P[<sum_1030@53:0>](<sum_1030@53:0>:int),
          P[<<sum_1030@56:1>@68:0>]((-1 + <sum_1030@53:0>):int,(<<sum_1030@53:1>@74:0> + (-1 * <sum_1030@53:0>)):int),
          (<sum_1030@53:0> > 0) |- P[<<sum_1030@53:1>@74:0>](<sum_1030@53:0>:int,
                                                             <<sum_1030@53:1>@74:0>:int)
          
          P[<sum_1030@56:0>](<sum_1030@56:0>:int),
          P[<<sum_1030@59:1>@62:0>]((-1 + <sum_1030@56:0>):int,(<<sum_1030@56:1>@68:0> + (-1 * <sum_1030@56:0>)):int),
          (<sum_1030@56:0> > 0) |- P[<<sum_1030@56:1>@68:0>](<sum_1030@56:0>:int,
                                                             <<sum_1030@56:1>@68:0>:int)
          
          P[<sum_1030@59:0>](<sum_1030@59:0>:int), ((<<sum_1030@59:1>@62:0> = 0) && (<sum_1030@59:0> <= 0))
          |- P[<<sum_1030@59:1>@62:0>](<sum_1030@59:0>:int,<<sum_1030@59:1>@62:0>:int)
          
          P[<sum_1030@56:0>]((1 + <sum_1030@59:0>):int), ((1 + <sum_1030@59:0>) > 0)
          |- P[<sum_1030@59:0>](<sum_1030@59:0>:int)
          
          P[<sum_1030@53:0>]((1 + <sum_1030@56:0>):int), ((1 + <sum_1030@56:0>) > 0)
          |- P[<sum_1030@56:0>](<sum_1030@56:0>:int)
          
          |- P[<sum_1030@53:0>](<sum_1030@53:0>:int)
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        
      end HcSolver.check_validity(82572)[4] (0.001999 sec.)
      solution:
        P[<fail_1170@79:0>]($197:bool) = false
        P[<sum_1030@53:0>]($210:int) = true
        P[<<sum_1030@53:1>@74:0>]($200:int,$202:int) = ((4 * $200) <= (5 + $202))
        P[<sum_1030@56:0>]($218:int) = true
        P[<<sum_1030@56:1>@68:0>]($205:int,$207:int) = ((3 * $205) <= (2 + $207))
        P[<sum_1030@59:0>]($221:int) = true
        P[<<sum_1030@59:1>@62:0>]($213:int,$215:int) = ((2 * $213) <= $215)
    end YhornInterface.solve(82147)[3] (0.030995 sec.)
    
  end RefTypeInfer.infer_etrs(30039)[2] (0.507923 sec.)
  refinement types:
    main_1165: X
    f_1168: v1:int -> X
    main_1032: v1:int -> (v2:unit -> X) -> X
    sum_1030: v1:int -> (v2:{v2:int | ((4 * v1) <= (5 + v2))} -> X) -> X
    sum_1030: v1:int -> (v2:{v2:int | ((3 * v1) <= (2 + v2))} -> X) -> X
    sum_1030: v1:int -> (v2:{v2:int | ((2 * v1) <= v2)} -> X) -> X
    f_sum_1166: v1:int -> (v2:int -> X) -> v4:int -> X
    f_sum_1166: v1:int -> (v2:int -> X) -> v4:int -> X
    f_main_1167: v1:int -> (v2:unit -> X) -> v4:int -> X
    fail_1170: v1:{v1:bool | false} -> (v2:unit -> X) -> X
    f_1169: var205:int -> var204:unit -> X
  abstraction types:
    main_1165: X
    f_1168: v1:int -> X
    main_1032: v1:int -> (v2:unit -> X) -> X
    sum_1030: var210:int ->
              (var211:int[var211 -> ((4 * var210) <= (5 + var211)),
                          var211 -> ((3 * var210) <= (2 + var211)),
                          var211 -> ((2 * var210) <= var211)] -> X) -> X
    f_sum_1166: var214:int -> (var215:int -> X) -> var217:int -> X
    f_main_1167: v1:int -> (v2:unit -> X) -> v4:int -> X
    fail_1170: v1:bool -> (v2:unit -> X) -> X
    f_1169: var205:int -> var204:unit -> X
  
end AbsTypeInfer.refine(30038)[1] (0.509922 sec.)
DONE!

Prefix of spurious counter-example::
0; 0; 0; 1; 1; 0; 0; 0; 1

Program with abstraction types (CEGAR-cycle 3)::
Main: main_1165
  main_1165 -> (rand_int f_1168)
  f_1168 x_1140 -> (main_1032 x_1140 (f_1169 x_1140))
  f_1169 x_1140 x_1137 -> end
  f_main_1167 n_1033 k_main_1109 x_1113 when (((4 * n_1033) - 6) <= x_1113) -> (k_main_1109 ())
  f_main_1167 n_1033 k_main_1109 x_1113 when (not (((4 * n_1033) - 6) <= x_1113)) -> (fail_1170 true k_main_1109)
  f_sum_1166 n_1031 k_sum_1077 x_1081 -> (k_sum_1077 (n_1031 + x_1081))
  fail_1170 b k -> {fail} => (k ())
  main_1032 n_1033 k_main_1109 -> (sum_1030 n_1033 (f_main_1167 n_1033 k_main_1109))
  sum_1030 n_1031 k_sum_1077 when (n_1031 <= 0) -> (k_sum_1077 0)
  sum_1030 n_1031 k_sum_1077 when (not (n_1031 <= 0)) -> (sum_1030 (n_1031 - 1) (f_sum_1166 n_1031 k_sum_1077))
Types:
  main_1165 : X
  fail_1170 : (x_1:bool[x_1] -> (unit -> X) -> X)
  sum_1030 : (x_1:int ->
              (x_3:int[2*x_1 <= x_3; 3*x_1 <= x_3 + 2; 4*x_1 <= x_3 + 5; 3*x_1 <= x_3; 4*x_1 <= x_3 + 3; 4*x_1 <= x_3] -> X) -> X)
  
(3-1) Abstracting ... DONE!

(3-2) Checking HORS ... DONE!

Error trace::
  main_1165 ... --> 
  f_1168 ... --> 
  main_1032 ... --> 
  sum_1030 [2/2] ... --> 
  sum_1030 [2/2] ... --> 
  sum_1030 [2/2] ... --> 
  sum_1030 [1/2] ... --> 
  f_sum_1166 ... --> 
  f_sum_1166 ... --> 
  f_sum_1166 ... --> 
  f_main_1167 [2/2] ... --> 
  fail_1170 ... --> fail -->
  ERROR!

Spurious counter-example::
  0; 0; 0; 1; 1; 1; 0; 0; 0; 0; 1; 0

(3-3) Checking counter-example ... DONE!

(3-4) Discovering predicates ... 
begin AbsTypeInfer.refine(87247)[1]
  program:
    main_1165  | true = ((Random.int 0) f_1168)
    f_1168 x_1140 | true = (main_1032 x_1140
                                      (f_1169 x_1140))
    f_1169 x_1140 x_1137 | true = end
    f_main_1167 n_1033 k_main_1109 x_1113 | (((4 * n_1033) - 6) <= x_1113) = (
    k_main_1109 ())
    f_main_1167 n_1033 k_main_1109 x_1113 | (not (((4 * n_1033) - 6) <= x_1113)) = (
    fail_1170 true
              k_main_1109)
    f_sum_1166 n_1031 k_sum_1077 x_1081 | true = (k_sum_1077 (n_1031 + x_1081))
    fail_1170 b k | true = (fail ())
    main_1032 n_1033 k_main_1109 | true = (sum_1030 n_1033
                                                    (f_main_1167 n_1033
                                                                 k_main_1109))
    sum_1030 n_1031 k_sum_1077 | (n_1031 <= 0) = (k_sum_1077 0)
    sum_1030 n_1031 k_sum_1077 | (not (n_1031 <= 0)) = (sum_1030 (n_1031 - 1)
                                                                 (f_sum_1166 n_1031
                                                                    k_sum_1077))
    main_1165:X
    f_1168:int -> X
    f_1169:int -> unit -> X
    f_main_1167:int -> (unit -> X) -> int -> X
    f_sum_1166:int -> (int -> X) -> int -> X
    fail_1170:bool -> (unit -> X) -> X
    main_1032:int -> (unit -> X) -> X
    sum_1030:int -> (int -> X) -> X
  inlined functions: f_1168,f_1169,f_main_1167,f_sum_1166,main_1032
  counterexample: 0:0:0:1:1:1:0:0:0:0:1:0
  error traces:
    [true.nop(<f_1168@85:0> = var219)
     [true.(<main_1032@87:0> = <f_1168@85:0>)
      [true.(<sum_1030@89:0> = <main_1032@87:0>)
       [(not (<sum_1030@89:0> <= 0)).(<sum_1030@92:0> = (<sum_1030@89:0> - 1))
        [(not (<sum_1030@92:0> <= 0)).(<sum_1030@95:0> = (<sum_1030@92:0> - 1))
         [(not (<sum_1030@95:0> <= 0)).(<sum_1030@98:0> = (<sum_1030@95:0> - 1))
          [(<sum_1030@98:0> <= 0).(<<sum_1030@98:1>@101:0> = 0)
           [true.((<f_sum_1166@103:0> = <sum_1030@95:0>) && (<f_sum_1166@103:2> = <<sum_1030@98:1>@101:0>))
            [true.(<<f_sum_1166@103:1>@105:0> = (<f_sum_1166@103:0> + <f_sum_1166@103:2>))
             [true.(<<sum_1030@95:1>@107:0> = <<f_sum_1166@103:1>@105:0>)
              [true.((<f_sum_1166@109:0> = <sum_1030@92:0>) && (<f_sum_1166@109:2> = <<sum_1030@95:1>@107:0>))
               [true.(<<f_sum_1166@109:1>@111:0> = (<f_sum_1166@109:0> + <f_sum_1166@109:2>))
                [true.(<<sum_1030@92:1>@113:0> = <<f_sum_1166@109:1>@111:0>)
                 [true.((<f_sum_1166@115:0> = <sum_1030@89:0>) && (<f_sum_1166@115:2> = <<sum_1030@92:1>@113:0>))
                  [true.(<<f_sum_1166@115:1>@117:0> = (<f_sum_1166@115:0> + <f_sum_1166@115:2>))
                   [true.(<<sum_1030@89:1>@119:0> = <<f_sum_1166@115:1>@117:0>)
                    [true.((<f_main_1167@121:0> = <main_1032@87:0>) && (<f_main_1167@121:2> = <<sum_1030@89:1>@119:0>))
                     [(not (((4 * <f_main_1167@121:0>) - 6) <= <f_main_1167@121:2>)).(
                      <fail_1170@124:0> = true)[true.error
  begin RefTypeInfer.infer_etrs(87248)[2]
    horn clauses:
      P[<fail_1170@124:0>](<fail_1170@124:0>:bool)|- bot
      
      P[<f_main_1167@121:2>](<f_main_1167@121:0>:int,<f_main_1167@121:2>:int),
      (((4 * <f_main_1167@121:0>) > (6 + <f_main_1167@121:2>)) && <fail_1170@124:0>)
      |- P[<fail_1170@124:0>](<fail_1170@124:0>:bool)
      
      P[<main_1032@87:0>](<f_main_1167@121:0>:int),
      P[<<sum_1030@89:1>@119:0>](<f_main_1167@121:0>:int,<f_main_1167@121:2>:int)|- P[<f_main_1167@121:2>](
      <f_main_1167@121:0>:int,<f_main_1167@121:2>:int)
      
      P[<sum_1030@89:0>](<sum_1030@89:0>:int),
      P[<<f_sum_1166@115:1>@117:0>](<sum_1030@89:0>:int,<<sum_1030@89:1>@119:0>:int), (
      <sum_1030@89:0> > 0) |- P[<<sum_1030@89:1>@119:0>](<sum_1030@89:0>:int,
                                                         <<sum_1030@89:1>@119:0>:int)
      
      P[<f_sum_1166@115:2>](<f_sum_1166@115:0>:int,(<<f_sum_1166@115:1>@117:0> + (-1 * <f_sum_1166@115:0>)):int)|- P[<<f_sum_1166@115:1>@117:0>](
      <f_sum_1166@115:0>:int,<<f_sum_1166@115:1>@117:0>:int)
      
      P[<sum_1030@89:0>](<f_sum_1166@115:0>:int),
      P[<<sum_1030@92:1>@113:0>]((-1 + <f_sum_1166@115:0>):int,<f_sum_1166@115:2>:int), (
      <f_sum_1166@115:0> > 0) |- P[<f_sum_1166@115:2>](<f_sum_1166@115:0>:int,
                                                       <f_sum_1166@115:2>:int)
      
      P[<sum_1030@92:0>](<sum_1030@92:0>:int),
      P[<<f_sum_1166@109:1>@111:0>](<sum_1030@92:0>:int,<<sum_1030@92:1>@113:0>:int), (
      <sum_1030@92:0> > 0) |- P[<<sum_1030@92:1>@113:0>](<sum_1030@92:0>:int,
                                                         <<sum_1030@92:1>@113:0>:int)
      
      P[<f_sum_1166@109:2>](<f_sum_1166@109:0>:int,(<<f_sum_1166@109:1>@111:0> + (-1 * <f_sum_1166@109:0>)):int)|- P[<<f_sum_1166@109:1>@111:0>](
      <f_sum_1166@109:0>:int,<<f_sum_1166@109:1>@111:0>:int)
      
      P[<sum_1030@92:0>](<f_sum_1166@109:0>:int),
      P[<<sum_1030@95:1>@107:0>]((-1 + <f_sum_1166@109:0>):int,<f_sum_1166@109:2>:int), (
      <f_sum_1166@109:0> > 0) |- P[<f_sum_1166@109:2>](<f_sum_1166@109:0>:int,
                                                       <f_sum_1166@109:2>:int)
      
      P[<sum_1030@95:0>](<sum_1030@95:0>:int),
      P[<<f_sum_1166@103:1>@105:0>](<sum_1030@95:0>:int,<<sum_1030@95:1>@107:0>:int), (
      <sum_1030@95:0> > 0) |- P[<<sum_1030@95:1>@107:0>](<sum_1030@95:0>:int,
                                                         <<sum_1030@95:1>@107:0>:int)
      
      P[<f_sum_1166@103:2>](<f_sum_1166@103:0>:int,(<<f_sum_1166@103:1>@105:0> + (-1 * <f_sum_1166@103:0>)):int)|- P[<<f_sum_1166@103:1>@105:0>](
      <f_sum_1166@103:0>:int,<<f_sum_1166@103:1>@105:0>:int)
      
      P[<sum_1030@95:0>](<f_sum_1166@103:0>:int),
      P[<<sum_1030@98:1>@101:0>]((-1 + <f_sum_1166@103:0>):int,<f_sum_1166@103:2>:int), (
      <f_sum_1166@103:0> > 0) |- P[<f_sum_1166@103:2>](<f_sum_1166@103:0>:int,
                                                       <f_sum_1166@103:2>:int)
      
      P[<sum_1030@98:0>](<sum_1030@98:0>:int), ((<<sum_1030@98:1>@101:0> = 0) && (<sum_1030@98:0> <= 0))
      |- P[<<sum_1030@98:1>@101:0>](<sum_1030@98:0>:int,<<sum_1030@98:1>@101:0>:int)
      
      P[<sum_1030@95:0>]((1 + <sum_1030@98:0>):int), ((1 + <sum_1030@98:0>) > 0)
      |- P[<sum_1030@98:0>](<sum_1030@98:0>:int)
      
      P[<sum_1030@92:0>]((1 + <sum_1030@95:0>):int), ((1 + <sum_1030@95:0>) > 0)
      |- P[<sum_1030@95:0>](<sum_1030@95:0>:int)
      
      P[<sum_1030@89:0>]((1 + <sum_1030@92:0>):int), ((1 + <sum_1030@92:0>) > 0)
      |- P[<sum_1030@92:0>](<sum_1030@92:0>:int)
      
      P[<main_1032@87:0>](<sum_1030@89:0>:int)|- P[<sum_1030@89:0>](<sum_1030@89:0>:int)
      
      P[<f_1168@85:0>](<main_1032@87:0>:int)|- P[<main_1032@87:0>](<main_1032@87:0>:int)
      
      |- P[<f_1168@85:0>](<f_1168@85:0>:int)
    call trees:
      <main_1165@82>
        <f_1168@85>
          <main_1032@87>
            <sum_1030@89>
              <sum_1030@92>
                <sum_1030@95>
                  <sum_1030@98>
                  </<sum_1030@98:1>@101>
                  <f_sum_1166@103>
                  </<f_sum_1166@103:1>@105>
                </<sum_1030@95:1>@107>
                <f_sum_1166@109>
                </<f_sum_1166@109:1>@111>
              </<sum_1030@92:1>@113>
              <f_sum_1166@115>
              </<f_sum_1166@115:1>@117>
            </<sum_1030@89:1>@119>
            <f_main_1167@121>
              <fail_1170@124>
    inlined horn clauses:
      P[<fail_1170@124:0>](<fail_1170@124:0>:bool)|- bot
      
      P[<<sum_1030@89:1>@119:0>](<f_main_1167@121:0>:int,<f_main_1167@121:2>:int),
      (((4 * <f_main_1167@121:0>) > (6 + <f_main_1167@121:2>)) && <fail_1170@124:0>)
      |- P[<fail_1170@124:0>](<fail_1170@124:0>:bool)
      
      P[<sum_1030@89:0>](<sum_1030@89:0>:int),
      P[<<sum_1030@92:1>@113:0>]((-1 + <sum_1030@89:0>):int,(<<sum_1030@89:1>@119:0> + (-1 * <sum_1030@89:0>)):int),
      (<sum_1030@89:0> > 0) |- P[<<sum_1030@89:1>@119:0>](<sum_1030@89:0>:int,
                                                          <<sum_1030@89:1>@119:0>:int)
      
      P[<sum_1030@92:0>](<sum_1030@92:0>:int),
      P[<<sum_1030@95:1>@107:0>]((-1 + <sum_1030@92:0>):int,(<<sum_1030@92:1>@113:0> + (-1 * <sum_1030@92:0>)):int),
      (<sum_1030@92:0> > 0) |- P[<<sum_1030@92:1>@113:0>](<sum_1030@92:0>:int,
                                                          <<sum_1030@92:1>@113:0>:int)
      
      P[<sum_1030@95:0>](<sum_1030@95:0>:int),
      P[<<sum_1030@98:1>@101:0>]((-1 + <sum_1030@95:0>):int,(<<sum_1030@95:1>@107:0> + (-1 * <sum_1030@95:0>)):int),
      (<sum_1030@95:0> > 0) |- P[<<sum_1030@95:1>@107:0>](<sum_1030@95:0>:int,
                                                          <<sum_1030@95:1>@107:0>:int)
      
      P[<sum_1030@98:0>](<sum_1030@98:0>:int), ((<<sum_1030@98:1>@101:0> = 0) && (<sum_1030@98:0> <= 0))
      |- P[<<sum_1030@98:1>@101:0>](<sum_1030@98:0>:int,<<sum_1030@98:1>@101:0>:int)
      
      P[<sum_1030@95:0>]((1 + <sum_1030@98:0>):int), ((1 + <sum_1030@98:0>) > 0)
      |- P[<sum_1030@98:0>](<sum_1030@98:0>:int)
      
      P[<sum_1030@92:0>]((1 + <sum_1030@95:0>):int), ((1 + <sum_1030@95:0>) > 0)
      |- P[<sum_1030@95:0>](<sum_1030@95:0>:int)
      
      P[<sum_1030@89:0>]((1 + <sum_1030@92:0>):int), ((1 + <sum_1030@92:0>) > 0)
      |- P[<sum_1030@92:0>](<sum_1030@92:0>:int)
      
      |- P[<sum_1030@89:0>](<sum_1030@89:0>:int)
    begin ParamSubstInfer.infer(89642)[3]
      
    end ParamSubstInfer.infer(89642)[3] (1.650749 sec.)
    inferred extra parameters:
      
    begin RefTypeInfer.elim_coeffs(89644)[3]
      
    end RefTypeInfer.elim_coeffs(89644)[3] (0.000999 sec.)
    begin GenHcSolver.solve(89975)[3]
      Horn clauses:
        P[<fail_1170@124:0>](<fail_1170@124:0>:bool)|- bot
        
        P[<<sum_1030@89:1>@119:0>](<f_main_1167@121:0>:int,<f_main_1167@121:2>:int),
        (((4 * <f_main_1167@121:0>) > (6 + <f_main_1167@121:2>)) && <fail_1170@124:0>)
        |- P[<fail_1170@124:0>](<fail_1170@124:0>:bool)
        
        P[<sum_1030@89:0>](<sum_1030@89:0>:int),
        P[<<sum_1030@92:1>@113:0>]((-1 + <sum_1030@89:0>):int,(<<sum_1030@89:1>@119:0> + (-1 * <sum_1030@89:0>)):int),
        (<sum_1030@89:0> > 0) |- P[<<sum_1030@89:1>@119:0>](<sum_1030@89:0>:int,
                                                            <<sum_1030@89:1>@119:0>:int)
        
        P[<sum_1030@92:0>](<sum_1030@92:0>:int),
        P[<<sum_1030@95:1>@107:0>]((-1 + <sum_1030@92:0>):int,(<<sum_1030@92:1>@113:0> + (-1 * <sum_1030@92:0>)):int),
        (<sum_1030@92:0> > 0) |- P[<<sum_1030@92:1>@113:0>](<sum_1030@92:0>:int,
                                                            <<sum_1030@92:1>@113:0>:int)
        
        P[<sum_1030@95:0>](<sum_1030@95:0>:int),
        P[<<sum_1030@98:1>@101:0>]((-1 + <sum_1030@95:0>):int,(<<sum_1030@95:1>@107:0> + (-1 * <sum_1030@95:0>)):int),
        (<sum_1030@95:0> > 0) |- P[<<sum_1030@95:1>@107:0>](<sum_1030@95:0>:int,
                                                            <<sum_1030@95:1>@107:0>:int)
        
        P[<sum_1030@98:0>](<sum_1030@98:0>:int), ((<<sum_1030@98:1>@101:0> = 0) && (<sum_1030@98:0> <= 0))
        |- P[<<sum_1030@98:1>@101:0>](<sum_1030@98:0>:int,<<sum_1030@98:1>@101:0>:int)
        
        P[<sum_1030@95:0>]((1 + <sum_1030@98:0>):int), ((1 + <sum_1030@98:0>) > 0)
        |- P[<sum_1030@98:0>](<sum_1030@98:0>:int)
        
        P[<sum_1030@92:0>]((1 + <sum_1030@95:0>):int), ((1 + <sum_1030@95:0>) > 0)
        |- P[<sum_1030@95:0>](<sum_1030@95:0>:int)
        
        P[<sum_1030@89:0>]((1 + <sum_1030@92:0>):int), ((1 + <sum_1030@92:0>) > 0)
        |- P[<sum_1030@92:0>](<sum_1030@92:0>:int)
        
        |- P[<sum_1030@89:0>](<sum_1030@89:0>:int)
      lower bounds:
        P[<sum_1030@89:0>](<sum_1030@89:0>:int) = true
        P[<sum_1030@92:0>](<sum_1030@92:0>:int) = ((1 + <sum_1030@92:0>) > 0)
        P[<sum_1030@95:0>](<sum_1030@95:0>:int) = ((1 + <sum_1030@95:0>) > 0)
        P[<sum_1030@98:0>](<sum_1030@98:0>:int) = ((1 + <sum_1030@98:0>) > 0)
        P[<<sum_1030@98:1>@101:0>](<sum_1030@98:0>:int,<<sum_1030@98:1>@101:0>:int) =
        ((<<sum_1030@98:1>@101:0> = 0) && (<sum_1030@98:0> = 0))
        P[<<sum_1030@95:1>@107:0>](<sum_1030@95:0>:int,<<sum_1030@95:1>@107:0>:int) =
        ((<sum_1030@95:0> = 1) && (<<sum_1030@95:1>@107:0> = <sum_1030@95:0>))
        P[<<sum_1030@92:1>@113:0>](<sum_1030@92:0>:int,<<sum_1030@92:1>@113:0>:int) =
        ((<sum_1030@92:0> = 2) && ((1 + <<sum_1030@92:1>@113:0>) = (2 * <sum_1030@92:0>)))
        P[<<sum_1030@89:1>@119:0>](<sum_1030@89:0>:int,<<sum_1030@89:1>@119:0>:int) =
        ((<sum_1030@89:0> = 3) && ((3 + <<sum_1030@89:1>@119:0>) = (3 * <sum_1030@89:0>)))
        P[<fail_1170@124:0>](<fail_1170@124:0>:bool) = false
      upper bounds:
        P[<<sum_1030@89:1>@119:0>](var234:int,var235:int) = ((4 * var234) <= (6 + var235))
        P[<<sum_1030@92:1>@113:0>](var230:int,var231:int) = (((1 + var230) <= 0) || ((3 * var230) <= (3 + var231)))
        P[<<sum_1030@95:1>@107:0>](var226:int,var227:int) = (((1 + var226) <= 0) || ((2 * var226) <= (1 + var227)))
        P[<<sum_1030@98:1>@101:0>](var222:int,var223:int) = (((1 + var222) <= 0) || (var222 <= var223))
      begin GenHcSolver.classify_pids(99398)[4]
        output:
          [<<sum_1030@98:1>@101:0>;<<sum_1030@95:1>@107:0>;<<sum_1030@92:1>@113:0>;<<sum_1030@89:1>@119:0>]
      end GenHcSolver.classify_pids(99398)[4] (0.002000 sec.)
      begin ApronInterface.convex_hull_interpolate(99685)[4]
        lb:(((<<sum_1030@98:1>@101:0> = 0) && (<sum_1030@98:0> = 0)) ||
            (((<sum_1030@98:0> = 1) && (<<sum_1030@98:1>@101:0> = <sum_1030@98:0>)) ||
             (((<sum_1030@98:0> = 2) && ((1 + <<sum_1030@98:1>@101:0>) = (2 * <sum_1030@98:0>))) ||
              ((<sum_1030@98:0> = 3) && ((3 + <<sum_1030@98:1>@101:0>) = (3 * <sum_1030@98:0>))))))
        nub:((not (((1 + <sum_1030@98:0>) <= 0) || (<sum_1030@98:0> <= <<sum_1030@98:1>@101:0>))) ||
             ((not (((1 + <sum_1030@98:0>) <= 0) || ((2 * <sum_1030@98:0>) <= (1 + <<sum_1030@98:1>@101:0>)))) ||
              ((not (((1 + <sum_1030@98:0>) <= 0) || ((3 * <sum_1030@98:0>) <= (3 + <<sum_1030@98:1>@101:0>)))) ||
               (not ((4 * <sum_1030@98:0>) <= (6 + <<sum_1030@98:1>@101:0>))))))
        lb':(((<<sum_1030@98:1>@101:0> = 0) && (<sum_1030@98:0> = 0)) ||
             (((<sum_1030@98:0> = 1) && (<<sum_1030@98:1>@101:0> = <sum_1030@98:0>)) ||
              (((<sum_1030@98:0> = 2) && ((1 + <<sum_1030@98:1>@101:0>) = (2 * <sum_1030@98:0>))) ||
               ((<sum_1030@98:0> = 3) && ((3 + <<sum_1030@98:1>@101:0>) = (3 * <sum_1030@98:0>))))))
        nub':((not (((1 + <sum_1030@98:0>) <= 0) || (<sum_1030@98:0> <= <<sum_1030@98:1>@101:0>))) ||
              ((not (((1 + <sum_1030@98:0>) <= 0) || ((2 * <sum_1030@98:0>) <= (1 + <<sum_1030@98:1>@101:0>)))) ||
               ((not (((1 + <sum_1030@98:0>) <= 0) || ((3 * <sum_1030@98:0>) <= (3 + <<sum_1030@98:1>@101:0>)))) ||
                (not ((4 * <sum_1030@98:0>) <= (6 + <<sum_1030@98:1>@101:0>))))))
        begin InterpProver.interpolate(99686)[5]
          begin InterpProver.interpolate_fresh(99687)[6]
            begin InterpProver.interpolate_log(99688)[7]
              input1: (((<<sum_1030@98:1>@101:0> = 0) && (<sum_1030@98:0> = 0)) ||
                       (((<sum_1030@98:0> = 1) && (<<sum_1030@98:1>@101:0> = <sum_1030@98:0>)) ||
                        (((<sum_1030@98:0> = 2) && ((1 + <<sum_1030@98:1>@101:0>) = (2 * <sum_1030@98:0>))) ||
                         ((<sum_1030@98:0> = 3) && ((3 + <<sum_1030@98:1>@101:0>) = (3 * <sum_1030@98:0>))))))
              input2: ((not (((1 + <sum_1030@98:0>) <= 0) || (<sum_1030@98:0> <= <<sum_1030@98:1>@101:0>))) ||
                       ((not (((1 + <sum_1030@98:0>) <= 0) || ((2 * <sum_1030@98:0>) <= (1 + <<sum_1030@98:1>@101:0>)))) ||
                        ((not
                            (((1 + <sum_1030@98:0>) <= 0) || ((3 * <sum_1030@98:0>) <= (3 + <<sum_1030@98:1>@101:0>)))) ||
                         (not ((4 * <sum_1030@98:0>) <= (6 + <<sum_1030@98:1>@101:0>))))))
              begin InterpProver.interpolate_check(99689)[8]
                begin InterpProver.interpolate_simplify(99690)[9]
                  begin InterpProver.interpolate_quick(99966)[10]
                    begin CsisatInterface.interpolate_csisat_wrap(99975)[11]
                      begin CsisatInterface.interpolate_csisat_post_process(99976)[12]
                        begin CsisatInterface.interpolate_csisat_log(99977)[13]
                          input1: ((0 = v_sep_sum_1030_sep_98_sep_0 & 0 = v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0) | (1 = v_sep_sum_1030_sep_98_sep_0 & v_sep_sum_1030_sep_98_sep_0 = v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0) | (2 = v_sep_sum_1030_sep_98_sep_0 & (1 + v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0) = 2*v_sep_sum_1030_sep_98_sep_0) | (3 = v_sep_sum_1030_sep_98_sep_0 & (3 + v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0) = 3*v_sep_sum_1030_sep_98_sep_0))
                          input2: ((((1 + v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0) <= v_sep_sum_1030_sep_98_sep_0 | (2 + v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0) <= 2*v_sep_sum_1030_sep_98_sep_0 | (4 + v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0) <= 3*v_sep_sum_1030_sep_98_sep_0) & 1 <= (1 + v_sep_sum_1030_sep_98_sep_0)) | (7 + v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0) <= 4*v_sep_sum_1030_sep_98_sep_0)
                          begin CsisatInterface.interpolate_csisat_raw(99978)[14]
                            
                          end CsisatInterface.interpolate_csisat_raw(99978)[14] (0.021996 sec.)
                          output: ((v_sep_sum_1030_sep_98_sep_0 <= 0 | (-2*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 4*v_sep_sum_1030_sep_98_sep_0) <= 2 | (-1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 3*v_sep_sum_1030_sep_98_sep_0) <= 2 | -1.*v_sep_sum_1030_sep_98_sep_0 <= -3.) & ((v_sep_sum_1030_sep_98_sep_0 + -1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0) <= -1 | (-2*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 2*v_sep_sum_1030_sep_98_sep_0) <= 0 | (-0.5*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 0.5*v_sep_sum_1030_sep_98_sep_0) <= -1.5) & ((-2*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 6*v_sep_sum_1030_sep_98_sep_0) <= 6 | (-2.*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 6.*v_sep_sum_1030_sep_98_sep_0) <= 6. | (-1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 3*v_sep_sum_1030_sep_98_sep_0) <= 2. | (-0.5*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 1.5*v_sep_sum_1030_sep_98_sep_0) <= 0) & ((-2*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 8*v_sep_sum_1030_sep_98_sep_0) <= 12 | (-1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 4*v_sep_sum_1030_sep_98_sep_0) <= 5 | (-0.5*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 2*v_sep_sum_1030_sep_98_sep_0) <= 1.5 | (-0.285714285714*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 1.14285714286*v_sep_sum_1030_sep_98_sep_0) <= 0))
                          
                        end CsisatInterface.interpolate_csisat_log(99977)[13] (0.021996 sec.)
                        after simplification: ((v_sep_sum_1030_sep_98_sep_0 <= 0 | (-2*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 4*v_sep_sum_1030_sep_98_sep_0) <= 2 | (-1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 3*v_sep_sum_1030_sep_98_sep_0) <= 2 | -1*v_sep_sum_1030_sep_98_sep_0 <= -3) & ((v_sep_sum_1030_sep_98_sep_0 + -1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0) <= -3 | (v_sep_sum_1030_sep_98_sep_0 + -1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0) <= -1 | (-2*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 2*v_sep_sum_1030_sep_98_sep_0) <= 0) & ((-2*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 6*v_sep_sum_1030_sep_98_sep_0) <= 6 | (-1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 3*v_sep_sum_1030_sep_98_sep_0) <= 0 | (-1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 3*v_sep_sum_1030_sep_98_sep_0) <= 2) & ((-2*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 8*v_sep_sum_1030_sep_98_sep_0) <= 0 | (-2*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 8*v_sep_sum_1030_sep_98_sep_0) <= 12 | (-1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 4*v_sep_sum_1030_sep_98_sep_0) <= 3 | (-1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 4*v_sep_sum_1030_sep_98_sep_0) <= 5))
                        after dnf conversion: ((v_sep_sum_1030_sep_98_sep_0 <= 0 & (v_sep_sum_1030_sep_98_sep_0 + -1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0) <= -3 & (-2*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 6*v_sep_sum_1030_sep_98_sep_0) <= 6 & (-2*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 8*v_sep_sum_1030_sep_98_sep_0) <= 0) | (v_sep_sum_1030_sep_98_sep_0 <= 0 & (v_sep_sum_1030_sep_98_sep_0 + -1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0) <= -3 & (-2*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 6*v_sep_sum_1030_sep_98_sep_0) <= 6 & (-2*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 8*v_sep_sum_1030_sep_98_sep_0) <= 12) | (v_sep_sum_1030_sep_98_sep_0 <= 0 & (v_sep_sum_1030_sep_98_sep_0 + -1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0) <= -3 & (-2*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 6*v_sep_sum_1030_sep_98_sep_0) <= 6 & (-1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 4*v_sep_sum_1030_sep_98_sep_0) <= 3) | (v_sep_sum_1030_sep_98_sep_0 <= 0 & (v_sep_sum_1030_sep_98_sep_0 + -1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0) <= -3 & (-2*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 6*v_sep_sum_1030_sep_98_sep_0) <= 6 & (-1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 4*v_sep_sum_1030_sep_98_sep_0) <= 5) | (v_sep_sum_1030_sep_98_sep_0 <= 0 & (v_sep_sum_1030_sep_98_sep_0 + -1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0) <= -3 & (-1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 3*v_sep_sum_1030_sep_98_sep_0) <= 0 & (-2*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 8*v_sep_sum_1030_sep_98_sep_0) <= 0) | (v_sep_sum_1030_sep_98_sep_0 <= 0 & (v_sep_sum_1030_sep_98_sep_0 + -1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0) <= -3 & (-1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 3*v_sep_sum_1030_sep_98_sep_0) <= 0 & (-2*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 8*v_sep_sum_1030_sep_98_sep_0) <= 12) | (v_sep_sum_1030_sep_98_sep_0 <= 0 & (v_sep_sum_1030_sep_98_sep_0 + -1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0) <= -3 & (-1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 3*v_sep_sum_1030_sep_98_sep_0) <= 0 & (-1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 4*v_sep_sum_1030_sep_98_sep_0) <= 3) | (v_sep_sum_1030_sep_98_sep_0 <= 0 & (v_sep_sum_1030_sep_98_sep_0 + -1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0) <= -3 & (-1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 3*v_sep_sum_1030_sep_98_sep_0) <= 0 & (-1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 4*v_sep_sum_1030_sep_98_sep_0) <= 5) | (v_sep_sum_1030_sep_98_sep_0 <= 0 & (v_sep_sum_1030_sep_98_sep_0 + -1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0) <= -3 & (-1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 3*v_sep_sum_1030_sep_98_sep_0) <= 2 & (-2*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 8*v_sep_sum_1030_sep_98_sep_0) <= 0) | (v_sep_sum_1030_sep_98_sep_0 <= 0 & (v_sep_sum_1030_sep_98_sep_0 + -1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0) <= -3 & (-1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 3*v_sep_sum_1030_sep_98_sep_0) <= 2 & (-2*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 8*v_sep_sum_1030_sep_98_sep_0) <= 12) | (v_sep_sum_1030_sep_98_sep_0 <= 0 & (v_sep_sum_1030_sep_98_sep_0 + -1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0) <= -3 & (-1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 3*v_sep_sum_1030_sep_98_sep_0) <= 2 & (-1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 4*v_sep_sum_1030_sep_98_sep_0) <= 3) | (v_sep_sum_1030_sep_98_sep_0 <= 0 & (v_sep_sum_1030_sep_98_sep_0 + -1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0) <= -3 & (-1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 3*v_sep_sum_1030_sep_98_sep_0) <= 2 & (-1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 4*v_sep_sum_1030_sep_98_sep_0) <= 5) | (v_sep_sum_1030_sep_98_sep_0 <= 0 & (v_sep_sum_1030_sep_98_sep_0 + -1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0) <= -1 & (-2*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 6*v_sep_sum_1030_sep_98_sep_0) <= 6 & (-2*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 8*v_sep_sum_1030_sep_98_sep_0) <= 0) | (v_sep_sum_1030_sep_98_sep_0 <= 0 & (v_sep_sum_1030_sep_98_sep_0 + -1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0) <= -1 & (-2*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 6*v_sep_sum_1030_sep_98_sep_0) <= 6 & (-2*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 8*v_sep_sum_1030_sep_98_sep_0) <= 12) | (v_sep_sum_1030_sep_98_sep_0 <= 0 & (v_sep_sum_1030_sep_98_sep_0 + -1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0) <= -1 & (-2*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 6*v_sep_sum_1030_sep_98_sep_0) <= 6 & (-1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 4*v_sep_sum_1030_sep_98_sep_0) <= 3) | (v_sep_sum_1030_sep_98_sep_0 <= 0 & (v_sep_sum_1030_sep_98_sep_0 + -1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0) <= -1 & (-2*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 6*v_sep_sum_1030_sep_98_sep_0) <= 6 & (-1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 4*v_sep_sum_1030_sep_98_sep_0) <= 5) | (v_sep_sum_1030_sep_98_sep_0 <= 0 & (v_sep_sum_1030_sep_98_sep_0 + -1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0) <= -1 & (-1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 3*v_sep_sum_1030_sep_98_sep_0) <= 0 & (-2*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 8*v_sep_sum_1030_sep_98_sep_0) <= 0) | (v_sep_sum_1030_sep_98_sep_0 <= 0 & (v_sep_sum_1030_sep_98_sep_0 + -1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0) <= -1 & (-1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 3*v_sep_sum_1030_sep_98_sep_0) <= 0 & (-2*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 8*v_sep_sum_1030_sep_98_sep_0) <= 12) | (v_sep_sum_1030_sep_98_sep_0 <= 0 & (v_sep_sum_1030_sep_98_sep_0 + -1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0) <= -1 & (-1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 3*v_sep_sum_1030_sep_98_sep_0) <= 0 & (-1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 4*v_sep_sum_1030_sep_98_sep_0) <= 3) | (v_sep_sum_1030_sep_98_sep_0 <= 0 & (v_sep_sum_1030_sep_98_sep_0 + -1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0) <= -1 & (-1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 3*v_sep_sum_1030_sep_98_sep_0) <= 0 & (-1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 4*v_sep_sum_1030_sep_98_sep_0) <= 5) | (v_sep_sum_1030_sep_98_sep_0 <= 0 & (v_sep_sum_1030_sep_98_sep_0 + -1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0) <= -1 & (-1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 3*v_sep_sum_1030_sep_98_sep_0) <= 2 & (-2*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 8*v_sep_sum_1030_sep_98_sep_0) <= 0) | (v_sep_sum_1030_sep_98_sep_0 <= 0 & (v_sep_sum_1030_sep_98_sep_0 + -1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0) <= -1 & (-1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 3*v_sep_sum_1030_sep_98_sep_0) <= 2 & (-2*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 8*v_sep_sum_1030_sep_98_sep_0) <= 12) | (v_sep_sum_1030_sep_98_sep_0 <= 0 & (v_sep_sum_1030_sep_98_sep_0 + -1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0) <= -1 & (-1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 3*v_sep_sum_1030_sep_98_sep_0) <= 2 & (-1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 4*v_sep_sum_1030_sep_98_sep_0) <= 3) | (v_sep_sum_1030_sep_98_sep_0 <= 0 & (v_sep_sum_1030_sep_98_sep_0 + -1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0) <= -1 & (-1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 3*v_sep_sum_1030_sep_98_sep_0) <= 2 & (-1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 4*v_sep_sum_1030_sep_98_sep_0) <= 5) | (v_sep_sum_1030_sep_98_sep_0 <= 0 & (-2*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 2*v_sep_sum_1030_sep_98_sep_0) <= 0 & (-2*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 6*v_sep_sum_1030_sep_98_sep_0) <= 6 & (-2*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 8*v_sep_sum_1030_sep_98_sep_0) <= 0) | (v_sep_sum_1030_sep_98_sep_0 <= 0 & (-2*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 2*v_sep_sum_1030_sep_98_sep_0) <= 0 & (-2*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 6*v_sep_sum_1030_sep_98_sep_0) <= 6 & (-2*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 8*v_sep_sum_1030_sep_98_sep_0) <= 12) | (v_sep_sum_1030_sep_98_sep_0 <= 0 & (-2*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 2*v_sep_sum_1030_sep_98_sep_0) <= 0 & (-2*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 6*v_sep_sum_1030_sep_98_sep_0) <= 6 & (-1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 4*v_sep_sum_1030_sep_98_sep_0) <= 3) | (v_sep_sum_1030_sep_98_sep_0 <= 0 & (-2*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 2*v_sep_sum_1030_sep_98_sep_0) <= 0 & (-2*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 6*v_sep_sum_1030_sep_98_sep_0) <= 6 & (-1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 4*v_sep_sum_1030_sep_98_sep_0) <= 5) | (v_sep_sum_1030_sep_98_sep_0 <= 0 & (-2*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 2*v_sep_sum_1030_sep_98_sep_0) <= 0 & (-1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 3*v_sep_sum_1030_sep_98_sep_0) <= 0 & (-2*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 8*v_sep_sum_1030_sep_98_sep_0) <= 0) | (v_sep_sum_1030_sep_98_sep_0 <= 0 & (-2*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 2*v_sep_sum_1030_sep_98_sep_0) <= 0 & (-1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 3*v_sep_sum_1030_sep_98_sep_0) <= 0 & (-2*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 8*v_sep_sum_1030_sep_98_sep_0) <= 12) | (v_sep_sum_1030_sep_98_sep_0 <= 0 & (-2*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 2*v_sep_sum_1030_sep_98_sep_0) <= 0 & (-1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 3*v_sep_sum_1030_sep_98_sep_0) <= 0 & (-1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 4*v_sep_sum_1030_sep_98_sep_0) <= 3) | (v_sep_sum_1030_sep_98_sep_0 <= 0 & (-2*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 2*v_sep_sum_1030_sep_98_sep_0) <= 0 & (-1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 3*v_sep_sum_1030_sep_98_sep_0) <= 0 & (-1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 4*v_sep_sum_1030_sep_98_sep_0) <= 5) | (v_sep_sum_1030_sep_98_sep_0 <= 0 & (-2*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 2*v_sep_sum_1030_sep_98_sep_0) <= 0 & (-1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 3*v_sep_sum_1030_sep_98_sep_0) <= 2 & (-2*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 8*v_sep_sum_1030_sep_98_sep_0) <= 0) | (v_sep_sum_1030_sep_98_sep_0 <= 0 & (-2*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 2*v_sep_sum_1030_sep_98_sep_0) <= 0 & (-1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 3*v_sep_sum_1030_sep_98_sep_0) <= 2 & (-2*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 8*v_sep_sum_1030_sep_98_sep_0) <= 12) | (v_sep_sum_1030_sep_98_sep_0 <= 0 & (-2*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 2*v_sep_sum_1030_sep_98_sep_0) <= 0 & (-1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 3*v_sep_sum_1030_sep_98_sep_0) <= 2 & (-1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 4*v_sep_sum_1030_sep_98_sep_0) <= 3) | (v_sep_sum_1030_sep_98_sep_0 <= 0 & (-2*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 2*v_sep_sum_1030_sep_98_sep_0) <= 0 & (-1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 3*v_sep_sum_1030_sep_98_sep_0) <= 2 & (-1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 4*v_sep_sum_1030_sep_98_sep_0) <= 5) | ((-2*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 4*v_sep_sum_1030_sep_98_sep_0) <= 2 & (v_sep_sum_1030_sep_98_sep_0 + -1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0) <= -3 & (-2*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 6*v_sep_sum_1030_sep_98_sep_0) <= 6 & (-2*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 8*v_sep_sum_1030_sep_98_sep_0) <= 0) | ((-2*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 4*v_sep_sum_1030_sep_98_sep_0) <= 2 & (v_sep_sum_1030_sep_98_sep_0 + -1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0) <= -3 & (-2*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 6*v_sep_sum_1030_sep_98_sep_0) <= 6 & (-2*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 8*v_sep_sum_1030_sep_98_sep_0) <= 12) | ((-2*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 4*v_sep_sum_1030_sep_98_sep_0) <= 2 & (v_sep_sum_1030_sep_98_sep_0 + -1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0) <= -3 & (-2*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 6*v_sep_sum_1030_sep_98_sep_0) <= 6 & (-1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 4*v_sep_sum_1030_sep_98_sep_0) <= 3) | ((-2*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 4*v_sep_sum_1030_sep_98_sep_0) <= 2 & (v_sep_sum_1030_sep_98_sep_0 + -1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0) <= -3 & (-2*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 6*v_sep_sum_1030_sep_98_sep_0) <= 6 & (-1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 4*v_sep_sum_1030_sep_98_sep_0) <= 5) | ((-2*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 4*v_sep_sum_1030_sep_98_sep_0) <= 2 & (v_sep_sum_1030_sep_98_sep_0 + -1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0) <= -3 & (-1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 3*v_sep_sum_1030_sep_98_sep_0) <= 0 & (-2*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 8*v_sep_sum_1030_sep_98_sep_0) <= 0) | ((-2*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 4*v_sep_sum_1030_sep_98_sep_0) <= 2 & (v_sep_sum_1030_sep_98_sep_0 + -1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0) <= -3 & (-1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 3*v_sep_sum_1030_sep_98_sep_0) <= 0 & (-2*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 8*v_sep_sum_1030_sep_98_sep_0) <= 12) | ((-2*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 4*v_sep_sum_1030_sep_98_sep_0) <= 2 & (v_sep_sum_1030_sep_98_sep_0 + -1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0) <= -3 & (-1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 3*v_sep_sum_1030_sep_98_sep_0) <= 0 & (-1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 4*v_sep_sum_1030_sep_98_sep_0) <= 3) | ((-2*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 4*v_sep_sum_1030_sep_98_sep_0) <= 2 & (v_sep_sum_1030_sep_98_sep_0 + -1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0) <= -3 & (-1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 3*v_sep_sum_1030_sep_98_sep_0) <= 0 & (-1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 4*v_sep_sum_1030_sep_98_sep_0) <= 5) | ((-2*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 4*v_sep_sum_1030_sep_98_sep_0) <= 2 & (v_sep_sum_1030_sep_98_sep_0 + -1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0) <= -3 & (-1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 3*v_sep_sum_1030_sep_98_sep_0) <= 2 & (-2*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 8*v_sep_sum_1030_sep_98_sep_0) <= 0) | ((-2*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 4*v_sep_sum_1030_sep_98_sep_0) <= 2 & (v_sep_sum_1030_sep_98_sep_0 + -1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0) <= -3 & (-1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 3*v_sep_sum_1030_sep_98_sep_0) <= 2 & (-2*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 8*v_sep_sum_1030_sep_98_sep_0) <= 12) | ((-2*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 4*v_sep_sum_1030_sep_98_sep_0) <= 2 & (v_sep_sum_1030_sep_98_sep_0 + -1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0) <= -3 & (-1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 3*v_sep_sum_1030_sep_98_sep_0) <= 2 & (-1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 4*v_sep_sum_1030_sep_98_sep_0) <= 3) | ((-2*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 4*v_sep_sum_1030_sep_98_sep_0) <= 2 & (v_sep_sum_1030_sep_98_sep_0 + -1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0) <= -3 & (-1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 3*v_sep_sum_1030_sep_98_sep_0) <= 2 & (-1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 4*v_sep_sum_1030_sep_98_sep_0) <= 5) | ((-2*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 4*v_sep_sum_1030_sep_98_sep_0) <= 2 & (v_sep_sum_1030_sep_98_sep_0 + -1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0) <= -1 & (-2*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 6*v_sep_sum_1030_sep_98_sep_0) <= 6 & (-2*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 8*v_sep_sum_1030_sep_98_sep_0) <= 0) | ((-2*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 4*v_sep_sum_1030_sep_98_sep_0) <= 2 & (v_sep_sum_1030_sep_98_sep_0 + -1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0) <= -1 & (-2*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 6*v_sep_sum_1030_sep_98_sep_0) <= 6 & (-2*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 8*v_sep_sum_1030_sep_98_sep_0) <= 12) | ((-2*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 4*v_sep_sum_1030_sep_98_sep_0) <= 2 & (v_sep_sum_1030_sep_98_sep_0 + -1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0) <= -1 & (-2*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 6*v_sep_sum_1030_sep_98_sep_0) <= 6 & (-1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 4*v_sep_sum_1030_sep_98_sep_0) <= 3) | ((-2*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 4*v_sep_sum_1030_sep_98_sep_0) <= 2 & (v_sep_sum_1030_sep_98_sep_0 + -1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0) <= -1 & (-2*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 6*v_sep_sum_1030_sep_98_sep_0) <= 6 & (-1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 4*v_sep_sum_1030_sep_98_sep_0) <= 5) | ((-2*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 4*v_sep_sum_1030_sep_98_sep_0) <= 2 & (v_sep_sum_1030_sep_98_sep_0 + -1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0) <= -1 & (-1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 3*v_sep_sum_1030_sep_98_sep_0) <= 0 & (-2*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 8*v_sep_sum_1030_sep_98_sep_0) <= 0) | ((-2*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 4*v_sep_sum_1030_sep_98_sep_0) <= 2 & (v_sep_sum_1030_sep_98_sep_0 + -1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0) <= -1 & (-1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 3*v_sep_sum_1030_sep_98_sep_0) <= 0 & (-2*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 8*v_sep_sum_1030_sep_98_sep_0) <= 12) | ((-2*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 4*v_sep_sum_1030_sep_98_sep_0) <= 2 & (v_sep_sum_1030_sep_98_sep_0 + -1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0) <= -1 & (-1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 3*v_sep_sum_1030_sep_98_sep_0) <= 0 & (-1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 4*v_sep_sum_1030_sep_98_sep_0) <= 3) | ((-2*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 4*v_sep_sum_1030_sep_98_sep_0) <= 2 & (v_sep_sum_1030_sep_98_sep_0 + -1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0) <= -1 & (-1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 3*v_sep_sum_1030_sep_98_sep_0) <= 0 & (-1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 4*v_sep_sum_1030_sep_98_sep_0) <= 5) | ((-2*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 4*v_sep_sum_1030_sep_98_sep_0) <= 2 & (v_sep_sum_1030_sep_98_sep_0 + -1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0) <= -1 & (-1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 3*v_sep_sum_1030_sep_98_sep_0) <= 2 & (-2*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 8*v_sep_sum_1030_sep_98_sep_0) <= 0) | ((-2*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 4*v_sep_sum_1030_sep_98_sep_0) <= 2 & (v_sep_sum_1030_sep_98_sep_0 + -1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0) <= -1 & (-1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 3*v_sep_sum_1030_sep_98_sep_0) <= 2 & (-2*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 8*v_sep_sum_1030_sep_98_sep_0) <= 12) | ((-2*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 4*v_sep_sum_1030_sep_98_sep_0) <= 2 & (v_sep_sum_1030_sep_98_sep_0 + -1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0) <= -1 & (-1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 3*v_sep_sum_1030_sep_98_sep_0) <= 2 & (-1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 4*v_sep_sum_1030_sep_98_sep_0) <= 3) | ((-2*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 4*v_sep_sum_1030_sep_98_sep_0) <= 2 & (v_sep_sum_1030_sep_98_sep_0 + -1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0) <= -1 & (-1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 3*v_sep_sum_1030_sep_98_sep_0) <= 2 & (-1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 4*v_sep_sum_1030_sep_98_sep_0) <= 5) | ((-2*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 4*v_sep_sum_1030_sep_98_sep_0) <= 2 & (-2*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 2*v_sep_sum_1030_sep_98_sep_0) <= 0 & (-2*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 6*v_sep_sum_1030_sep_98_sep_0) <= 6 & (-2*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 8*v_sep_sum_1030_sep_98_sep_0) <= 0) | ((-2*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 4*v_sep_sum_1030_sep_98_sep_0) <= 2 & (-2*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 2*v_sep_sum_1030_sep_98_sep_0) <= 0 & (-2*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 6*v_sep_sum_1030_sep_98_sep_0) <= 6 & (-2*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 8*v_sep_sum_1030_sep_98_sep_0) <= 12) | ((-2*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 4*v_sep_sum_1030_sep_98_sep_0) <= 2 & (-2*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 2*v_sep_sum_1030_sep_98_sep_0) <= 0 & (-2*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 6*v_sep_sum_1030_sep_98_sep_0) <= 6 & (-1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 4*v_sep_sum_1030_sep_98_sep_0) <= 3) | ((-2*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 4*v_sep_sum_1030_sep_98_sep_0) <= 2 & (-2*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 2*v_sep_sum_1030_sep_98_sep_0) <= 0 & (-2*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 6*v_sep_sum_1030_sep_98_sep_0) <= 6 & (-1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 4*v_sep_sum_1030_sep_98_sep_0) <= 5) | ((-2*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 4*v_sep_sum_1030_sep_98_sep_0) <= 2 & (-2*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 2*v_sep_sum_1030_sep_98_sep_0) <= 0 & (-1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 3*v_sep_sum_1030_sep_98_sep_0) <= 0 & (-2*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 8*v_sep_sum_1030_sep_98_sep_0) <= 0) | ((-2*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 4*v_sep_sum_1030_sep_98_sep_0) <= 2 & (-2*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 2*v_sep_sum_1030_sep_98_sep_0) <= 0 & (-1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 3*v_sep_sum_1030_sep_98_sep_0) <= 0 & (-2*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 8*v_sep_sum_1030_sep_98_sep_0) <= 12) | ((-2*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 4*v_sep_sum_1030_sep_98_sep_0) <= 2 & (-2*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 2*v_sep_sum_1030_sep_98_sep_0) <= 0 & (-1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 3*v_sep_sum_1030_sep_98_sep_0) <= 0 & (-1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 4*v_sep_sum_1030_sep_98_sep_0) <= 3) | ((-2*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 4*v_sep_sum_1030_sep_98_sep_0) <= 2 & (-2*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 2*v_sep_sum_1030_sep_98_sep_0) <= 0 & (-1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 3*v_sep_sum_1030_sep_98_sep_0) <= 0 & (-1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 4*v_sep_sum_1030_sep_98_sep_0) <= 5) | ((-2*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 4*v_sep_sum_1030_sep_98_sep_0) <= 2 & (-2*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 2*v_sep_sum_1030_sep_98_sep_0) <= 0 & (-1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 3*v_sep_sum_1030_sep_98_sep_0) <= 2 & (-2*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 8*v_sep_sum_1030_sep_98_sep_0) <= 0) | ((-2*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 4*v_sep_sum_1030_sep_98_sep_0) <= 2 & (-2*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 2*v_sep_sum_1030_sep_98_sep_0) <= 0 & (-1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 3*v_sep_sum_1030_sep_98_sep_0) <= 2 & (-2*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 8*v_sep_sum_1030_sep_98_sep_0) <= 12) | ((-2*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 4*v_sep_sum_1030_sep_98_sep_0) <= 2 & (-2*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 2*v_sep_sum_1030_sep_98_sep_0) <= 0 & (-1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 3*v_sep_sum_1030_sep_98_sep_0) <= 2 & (-1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 4*v_sep_sum_1030_sep_98_sep_0) <= 3) | ((-2*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 4*v_sep_sum_1030_sep_98_sep_0) <= 2 & (-2*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 2*v_sep_sum_1030_sep_98_sep_0) <= 0 & (-1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 3*v_sep_sum_1030_sep_98_sep_0) <= 2 & (-1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 4*v_sep_sum_1030_sep_98_sep_0) <= 5) | ((-1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 3*v_sep_sum_1030_sep_98_sep_0) <= 2 & (v_sep_sum_1030_sep_98_sep_0 + -1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0) <= -3 & (-2*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 6*v_sep_sum_1030_sep_98_sep_0) <= 6 & (-2*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 8*v_sep_sum_1030_sep_98_sep_0) <= 0) | ((-1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 3*v_sep_sum_1030_sep_98_sep_0) <= 2 & (v_sep_sum_1030_sep_98_sep_0 + -1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0) <= -3 & (-2*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 6*v_sep_sum_1030_sep_98_sep_0) <= 6 & (-2*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 8*v_sep_sum_1030_sep_98_sep_0) <= 12) | ((-1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 3*v_sep_sum_1030_sep_98_sep_0) <= 2 & (v_sep_sum_1030_sep_98_sep_0 + -1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0) <= -3 & (-2*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 6*v_sep_sum_1030_sep_98_sep_0) <= 6 & (-1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 4*v_sep_sum_1030_sep_98_sep_0) <= 3) | ((-1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 3*v_sep_sum_1030_sep_98_sep_0) <= 2 & (v_sep_sum_1030_sep_98_sep_0 + -1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0) <= -3 & (-2*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 6*v_sep_sum_1030_sep_98_sep_0) <= 6 & (-1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 4*v_sep_sum_1030_sep_98_sep_0) <= 5) | ((-1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 3*v_sep_sum_1030_sep_98_sep_0) <= 2 & (v_sep_sum_1030_sep_98_sep_0 + -1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0) <= -3 & (-1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 3*v_sep_sum_1030_sep_98_sep_0) <= 0 & (-2*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 8*v_sep_sum_1030_sep_98_sep_0) <= 0) | ((-1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 3*v_sep_sum_1030_sep_98_sep_0) <= 2 & (v_sep_sum_1030_sep_98_sep_0 + -1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0) <= -3 & (-1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 3*v_sep_sum_1030_sep_98_sep_0) <= 0 & (-2*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 8*v_sep_sum_1030_sep_98_sep_0) <= 12) | ((-1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 3*v_sep_sum_1030_sep_98_sep_0) <= 2 & (v_sep_sum_1030_sep_98_sep_0 + -1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0) <= -3 & (-1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 3*v_sep_sum_1030_sep_98_sep_0) <= 0 & (-1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 4*v_sep_sum_1030_sep_98_sep_0) <= 3) | ((-1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 3*v_sep_sum_1030_sep_98_sep_0) <= 2 & (v_sep_sum_1030_sep_98_sep_0 + -1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0) <= -3 & (-1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 3*v_sep_sum_1030_sep_98_sep_0) <= 0 & (-1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 4*v_sep_sum_1030_sep_98_sep_0) <= 5) | ((-1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 3*v_sep_sum_1030_sep_98_sep_0) <= 2 & (v_sep_sum_1030_sep_98_sep_0 + -1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0) <= -3 & (-1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 3*v_sep_sum_1030_sep_98_sep_0) <= 2 & (-2*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 8*v_sep_sum_1030_sep_98_sep_0) <= 0) | ((-1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 3*v_sep_sum_1030_sep_98_sep_0) <= 2 & (v_sep_sum_1030_sep_98_sep_0 + -1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0) <= -3 & (-1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 3*v_sep_sum_1030_sep_98_sep_0) <= 2 & (-2*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 8*v_sep_sum_1030_sep_98_sep_0) <= 12) | ((-1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 3*v_sep_sum_1030_sep_98_sep_0) <= 2 & (v_sep_sum_1030_sep_98_sep_0 + -1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0) <= -3 & (-1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 3*v_sep_sum_1030_sep_98_sep_0) <= 2 & (-1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 4*v_sep_sum_1030_sep_98_sep_0) <= 3) | ((-1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 3*v_sep_sum_1030_sep_98_sep_0) <= 2 & (v_sep_sum_1030_sep_98_sep_0 + -1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0) <= -3 & (-1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 3*v_sep_sum_1030_sep_98_sep_0) <= 2 & (-1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 4*v_sep_sum_1030_sep_98_sep_0) <= 5) | ((-1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 3*v_sep_sum_1030_sep_98_sep_0) <= 2 & (v_sep_sum_1030_sep_98_sep_0 + -1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0) <= -1 & (-2*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 6*v_sep_sum_1030_sep_98_sep_0) <= 6 & (-2*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 8*v_sep_sum_1030_sep_98_sep_0) <= 0) | ((-1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 3*v_sep_sum_1030_sep_98_sep_0) <= 2 & (v_sep_sum_1030_sep_98_sep_0 + -1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0) <= -1 & (-2*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 6*v_sep_sum_1030_sep_98_sep_0) <= 6 & (-2*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 8*v_sep_sum_1030_sep_98_sep_0) <= 12) | ((-1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 3*v_sep_sum_1030_sep_98_sep_0) <= 2 & (v_sep_sum_1030_sep_98_sep_0 + -1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0) <= -1 & (-2*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 6*v_sep_sum_1030_sep_98_sep_0) <= 6 & (-1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 4*v_sep_sum_1030_sep_98_sep_0) <= 3) | ((-1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 3*v_sep_sum_1030_sep_98_sep_0) <= 2 & (v_sep_sum_1030_sep_98_sep_0 + -1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0) <= -1 & (-2*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 6*v_sep_sum_1030_sep_98_sep_0) <= 6 & (-1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 4*v_sep_sum_1030_sep_98_sep_0) <= 5) | ((-1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 3*v_sep_sum_1030_sep_98_sep_0) <= 2 & (v_sep_sum_1030_sep_98_sep_0 + -1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0) <= -1 & (-1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 3*v_sep_sum_1030_sep_98_sep_0) <= 0 & (-2*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 8*v_sep_sum_1030_sep_98_sep_0) <= 0) | ((-1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 3*v_sep_sum_1030_sep_98_sep_0) <= 2 & (v_sep_sum_1030_sep_98_sep_0 + -1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0) <= -1 & (-1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 3*v_sep_sum_1030_sep_98_sep_0) <= 0 & (-2*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 8*v_sep_sum_1030_sep_98_sep_0) <= 12) | ((-1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 3*v_sep_sum_1030_sep_98_sep_0) <= 2 & (v_sep_sum_1030_sep_98_sep_0 + -1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0) <= -1 & (-1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 3*v_sep_sum_1030_sep_98_sep_0) <= 0 & (-1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 4*v_sep_sum_1030_sep_98_sep_0) <= 3) | ((-1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 3*v_sep_sum_1030_sep_98_sep_0) <= 2 & (v_sep_sum_1030_sep_98_sep_0 + -1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0) <= -1 & (-1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 3*v_sep_sum_1030_sep_98_sep_0) <= 0 & (-1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 4*v_sep_sum_1030_sep_98_sep_0) <= 5) | ((-1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 3*v_sep_sum_1030_sep_98_sep_0) <= 2 & (v_sep_sum_1030_sep_98_sep_0 + -1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0) <= -1 & (-1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 3*v_sep_sum_1030_sep_98_sep_0) <= 2 & (-2*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 8*v_sep_sum_1030_sep_98_sep_0) <= 0) | ((-1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 3*v_sep_sum_1030_sep_98_sep_0) <= 2 & (v_sep_sum_1030_sep_98_sep_0 + -1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0) <= -1 & (-1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 3*v_sep_sum_1030_sep_98_sep_0) <= 2 & (-2*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 8*v_sep_sum_1030_sep_98_sep_0) <= 12) | ((-1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 3*v_sep_sum_1030_sep_98_sep_0) <= 2 & (v_sep_sum_1030_sep_98_sep_0 + -1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0) <= -1 & (-1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 3*v_sep_sum_1030_sep_98_sep_0) <= 2 & (-1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 4*v_sep_sum_1030_sep_98_sep_0) <= 3) | ((-1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 3*v_sep_sum_1030_sep_98_sep_0) <= 2 & (v_sep_sum_1030_sep_98_sep_0 + -1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0) <= -1 & (-1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 3*v_sep_sum_1030_sep_98_sep_0) <= 2 & (-1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 4*v_sep_sum_1030_sep_98_sep_0) <= 5) | ((-1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 3*v_sep_sum_1030_sep_98_sep_0) <= 2 & (-2*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 2*v_sep_sum_1030_sep_98_sep_0) <= 0 & (-2*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 6*v_sep_sum_1030_sep_98_sep_0) <= 6 & (-2*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 8*v_sep_sum_1030_sep_98_sep_0) <= 0) | ((-1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 3*v_sep_sum_1030_sep_98_sep_0) <= 2 & (-2*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 2*v_sep_sum_1030_sep_98_sep_0) <= 0 & (-2*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 6*v_sep_sum_1030_sep_98_sep_0) <= 6 & (-2*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 8*v_sep_sum_1030_sep_98_sep_0) <= 12) | ((-1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 3*v_sep_sum_1030_sep_98_sep_0) <= 2 & (-2*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 2*v_sep_sum_1030_sep_98_sep_0) <= 0 & (-2*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 6*v_sep_sum_1030_sep_98_sep_0) <= 6 & (-1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 4*v_sep_sum_1030_sep_98_sep_0) <= 3) | ((-1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 3*v_sep_sum_1030_sep_98_sep_0) <= 2 & (-2*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 2*v_sep_sum_1030_sep_98_sep_0) <= 0 & (-2*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 6*v_sep_sum_1030_sep_98_sep_0) <= 6 & (-1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 4*v_sep_sum_1030_sep_98_sep_0) <= 5) | ((-1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 3*v_sep_sum_1030_sep_98_sep_0) <= 2 & (-2*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 2*v_sep_sum_1030_sep_98_sep_0) <= 0 & (-1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 3*v_sep_sum_1030_sep_98_sep_0) <= 0 & (-2*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 8*v_sep_sum_1030_sep_98_sep_0) <= 0) | ((-1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 3*v_sep_sum_1030_sep_98_sep_0) <= 2 & (-2*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 2*v_sep_sum_1030_sep_98_sep_0) <= 0 & (-1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 3*v_sep_sum_1030_sep_98_sep_0) <= 0 & (-2*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 8*v_sep_sum_1030_sep_98_sep_0) <= 12) | ((-1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 3*v_sep_sum_1030_sep_98_sep_0) <= 2 & (-2*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 2*v_sep_sum_1030_sep_98_sep_0) <= 0 & (-1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 3*v_sep_sum_1030_sep_98_sep_0) <= 0 & (-1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 4*v_sep_sum_1030_sep_98_sep_0) <= 3) | ((-1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 3*v_sep_sum_1030_sep_98_sep_0) <= 2 & (-2*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 2*v_sep_sum_1030_sep_98_sep_0) <= 0 & (-1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 3*v_sep_sum_1030_sep_98_sep_0) <= 0 & (-1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 4*v_sep_sum_1030_sep_98_sep_0) <= 5) | ((-1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 3*v_sep_sum_1030_sep_98_sep_0) <= 2 & (-2*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 2*v_sep_sum_1030_sep_98_sep_0) <= 0 & (-1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 3*v_sep_sum_1030_sep_98_sep_0) <= 2 & (-2*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 8*v_sep_sum_1030_sep_98_sep_0) <= 0) | ((-1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 3*v_sep_sum_1030_sep_98_sep_0) <= 2 & (-2*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 2*v_sep_sum_1030_sep_98_sep_0) <= 0 & (-1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 3*v_sep_sum_1030_sep_98_sep_0) <= 2 & (-2*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 8*v_sep_sum_1030_sep_98_sep_0) <= 12) | ((-1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 3*v_sep_sum_1030_sep_98_sep_0) <= 2 & (-2*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 2*v_sep_sum_1030_sep_98_sep_0) <= 0 & (-1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 3*v_sep_sum_1030_sep_98_sep_0) <= 2 & (-1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 4*v_sep_sum_1030_sep_98_sep_0) <= 3) | ((-1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 3*v_sep_sum_1030_sep_98_sep_0) <= 2 & (-2*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 2*v_sep_sum_1030_sep_98_sep_0) <= 0 & (-1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 3*v_sep_sum_1030_sep_98_sep_0) <= 2 & (-1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 4*v_sep_sum_1030_sep_98_sep_0) <= 5) | (-1*v_sep_sum_1030_sep_98_sep_0 <= -3 & (v_sep_sum_1030_sep_98_sep_0 + -1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0) <= -3 & (-2*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 6*v_sep_sum_1030_sep_98_sep_0) <= 6 & (-2*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 8*v_sep_sum_1030_sep_98_sep_0) <= 0) | (-1*v_sep_sum_1030_sep_98_sep_0 <= -3 & (v_sep_sum_1030_sep_98_sep_0 + -1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0) <= -3 & (-2*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 6*v_sep_sum_1030_sep_98_sep_0) <= 6 & (-2*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 8*v_sep_sum_1030_sep_98_sep_0) <= 12) | (-1*v_sep_sum_1030_sep_98_sep_0 <= -3 & (v_sep_sum_1030_sep_98_sep_0 + -1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0) <= -3 & (-2*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 6*v_sep_sum_1030_sep_98_sep_0) <= 6 & (-1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 4*v_sep_sum_1030_sep_98_sep_0) <= 3) | (-1*v_sep_sum_1030_sep_98_sep_0 <= -3 & (v_sep_sum_1030_sep_98_sep_0 + -1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0) <= -3 & (-2*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 6*v_sep_sum_1030_sep_98_sep_0) <= 6 & (-1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 4*v_sep_sum_1030_sep_98_sep_0) <= 5) | (-1*v_sep_sum_1030_sep_98_sep_0 <= -3 & (v_sep_sum_1030_sep_98_sep_0 + -1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0) <= -3 & (-1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 3*v_sep_sum_1030_sep_98_sep_0) <= 0 & (-2*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 8*v_sep_sum_1030_sep_98_sep_0) <= 0) | (-1*v_sep_sum_1030_sep_98_sep_0 <= -3 & (v_sep_sum_1030_sep_98_sep_0 + -1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0) <= -3 & (-1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 3*v_sep_sum_1030_sep_98_sep_0) <= 0 & (-2*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 8*v_sep_sum_1030_sep_98_sep_0) <= 12) | (-1*v_sep_sum_1030_sep_98_sep_0 <= -3 & (v_sep_sum_1030_sep_98_sep_0 + -1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0) <= -3 & (-1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 3*v_sep_sum_1030_sep_98_sep_0) <= 0 & (-1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 4*v_sep_sum_1030_sep_98_sep_0) <= 3) | (-1*v_sep_sum_1030_sep_98_sep_0 <= -3 & (v_sep_sum_1030_sep_98_sep_0 + -1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0) <= -3 & (-1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 3*v_sep_sum_1030_sep_98_sep_0) <= 0 & (-1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 4*v_sep_sum_1030_sep_98_sep_0) <= 5) | (-1*v_sep_sum_1030_sep_98_sep_0 <= -3 & (v_sep_sum_1030_sep_98_sep_0 + -1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0) <= -3 & (-1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 3*v_sep_sum_1030_sep_98_sep_0) <= 2 & (-2*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 8*v_sep_sum_1030_sep_98_sep_0) <= 0) | (-1*v_sep_sum_1030_sep_98_sep_0 <= -3 & (v_sep_sum_1030_sep_98_sep_0 + -1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0) <= -3 & (-1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 3*v_sep_sum_1030_sep_98_sep_0) <= 2 & (-2*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 8*v_sep_sum_1030_sep_98_sep_0) <= 12) | (-1*v_sep_sum_1030_sep_98_sep_0 <= -3 & (v_sep_sum_1030_sep_98_sep_0 + -1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0) <= -3 & (-1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 3*v_sep_sum_1030_sep_98_sep_0) <= 2 & (-1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 4*v_sep_sum_1030_sep_98_sep_0) <= 3) | (-1*v_sep_sum_1030_sep_98_sep_0 <= -3 & (v_sep_sum_1030_sep_98_sep_0 + -1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0) <= -3 & (-1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 3*v_sep_sum_1030_sep_98_sep_0) <= 2 & (-1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 4*v_sep_sum_1030_sep_98_sep_0) <= 5) | (-1*v_sep_sum_1030_sep_98_sep_0 <= -3 & (v_sep_sum_1030_sep_98_sep_0 + -1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0) <= -1 & (-2*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 6*v_sep_sum_1030_sep_98_sep_0) <= 6 & (-2*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 8*v_sep_sum_1030_sep_98_sep_0) <= 0) | (-1*v_sep_sum_1030_sep_98_sep_0 <= -3 & (v_sep_sum_1030_sep_98_sep_0 + -1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0) <= -1 & (-2*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 6*v_sep_sum_1030_sep_98_sep_0) <= 6 & (-2*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 8*v_sep_sum_1030_sep_98_sep_0) <= 12) | (-1*v_sep_sum_1030_sep_98_sep_0 <= -3 & (v_sep_sum_1030_sep_98_sep_0 + -1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0) <= -1 & (-2*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 6*v_sep_sum_1030_sep_98_sep_0) <= 6 & (-1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 4*v_sep_sum_1030_sep_98_sep_0) <= 3) | (-1*v_sep_sum_1030_sep_98_sep_0 <= -3 & (v_sep_sum_1030_sep_98_sep_0 + -1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0) <= -1 & (-2*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 6*v_sep_sum_1030_sep_98_sep_0) <= 6 & (-1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 4*v_sep_sum_1030_sep_98_sep_0) <= 5) | (-1*v_sep_sum_1030_sep_98_sep_0 <= -3 & (v_sep_sum_1030_sep_98_sep_0 + -1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0) <= -1 & (-1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 3*v_sep_sum_1030_sep_98_sep_0) <= 0 & (-2*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 8*v_sep_sum_1030_sep_98_sep_0) <= 0) | (-1*v_sep_sum_1030_sep_98_sep_0 <= -3 & (v_sep_sum_1030_sep_98_sep_0 + -1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0) <= -1 & (-1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 3*v_sep_sum_1030_sep_98_sep_0) <= 0 & (-2*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 8*v_sep_sum_1030_sep_98_sep_0) <= 12) | (-1*v_sep_sum_1030_sep_98_sep_0 <= -3 & (v_sep_sum_1030_sep_98_sep_0 + -1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0) <= -1 & (-1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 3*v_sep_sum_1030_sep_98_sep_0) <= 0 & (-1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 4*v_sep_sum_1030_sep_98_sep_0) <= 3) | (-1*v_sep_sum_1030_sep_98_sep_0 <= -3 & (v_sep_sum_1030_sep_98_sep_0 + -1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0) <= -1 & (-1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 3*v_sep_sum_1030_sep_98_sep_0) <= 0 & (-1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 4*v_sep_sum_1030_sep_98_sep_0) <= 5) | (-1*v_sep_sum_1030_sep_98_sep_0 <= -3 & (v_sep_sum_1030_sep_98_sep_0 + -1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0) <= -1 & (-1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 3*v_sep_sum_1030_sep_98_sep_0) <= 2 & (-2*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 8*v_sep_sum_1030_sep_98_sep_0) <= 0) | (-1*v_sep_sum_1030_sep_98_sep_0 <= -3 & (v_sep_sum_1030_sep_98_sep_0 + -1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0) <= -1 & (-1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 3*v_sep_sum_1030_sep_98_sep_0) <= 2 & (-2*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 8*v_sep_sum_1030_sep_98_sep_0) <= 12) | (-1*v_sep_sum_1030_sep_98_sep_0 <= -3 & (v_sep_sum_1030_sep_98_sep_0 + -1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0) <= -1 & (-1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 3*v_sep_sum_1030_sep_98_sep_0) <= 2 & (-1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 4*v_sep_sum_1030_sep_98_sep_0) <= 3) | (-1*v_sep_sum_1030_sep_98_sep_0 <= -3 & (v_sep_sum_1030_sep_98_sep_0 + -1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0) <= -1 & (-1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 3*v_sep_sum_1030_sep_98_sep_0) <= 2 & (-1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 4*v_sep_sum_1030_sep_98_sep_0) <= 5) | (-1*v_sep_sum_1030_sep_98_sep_0 <= -3 & (-2*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 2*v_sep_sum_1030_sep_98_sep_0) <= 0 & (-2*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 6*v_sep_sum_1030_sep_98_sep_0) <= 6 & (-2*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 8*v_sep_sum_1030_sep_98_sep_0) <= 0) | (-1*v_sep_sum_1030_sep_98_sep_0 <= -3 & (-2*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 2*v_sep_sum_1030_sep_98_sep_0) <= 0 & (-2*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 6*v_sep_sum_1030_sep_98_sep_0) <= 6 & (-2*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 8*v_sep_sum_1030_sep_98_sep_0) <= 12) | (-1*v_sep_sum_1030_sep_98_sep_0 <= -3 & (-2*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 2*v_sep_sum_1030_sep_98_sep_0) <= 0 & (-2*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 6*v_sep_sum_1030_sep_98_sep_0) <= 6 & (-1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 4*v_sep_sum_1030_sep_98_sep_0) <= 3) | (-1*v_sep_sum_1030_sep_98_sep_0 <= -3 & (-2*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 2*v_sep_sum_1030_sep_98_sep_0) <= 0 & (-2*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 6*v_sep_sum_1030_sep_98_sep_0) <= 6 & (-1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 4*v_sep_sum_1030_sep_98_sep_0) <= 5) | (-1*v_sep_sum_1030_sep_98_sep_0 <= -3 & (-2*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 2*v_sep_sum_1030_sep_98_sep_0) <= 0 & (-1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 3*v_sep_sum_1030_sep_98_sep_0) <= 0 & (-2*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 8*v_sep_sum_1030_sep_98_sep_0) <= 0) | (-1*v_sep_sum_1030_sep_98_sep_0 <= -3 & (-2*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 2*v_sep_sum_1030_sep_98_sep_0) <= 0 & (-1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 3*v_sep_sum_1030_sep_98_sep_0) <= 0 & (-2*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 8*v_sep_sum_1030_sep_98_sep_0) <= 12) | (-1*v_sep_sum_1030_sep_98_sep_0 <= -3 & (-2*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 2*v_sep_sum_1030_sep_98_sep_0) <= 0 & (-1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 3*v_sep_sum_1030_sep_98_sep_0) <= 0 & (-1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 4*v_sep_sum_1030_sep_98_sep_0) <= 3) | (-1*v_sep_sum_1030_sep_98_sep_0 <= -3 & (-2*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 2*v_sep_sum_1030_sep_98_sep_0) <= 0 & (-1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 3*v_sep_sum_1030_sep_98_sep_0) <= 0 & (-1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 4*v_sep_sum_1030_sep_98_sep_0) <= 5) | (-1*v_sep_sum_1030_sep_98_sep_0 <= -3 & (-2*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 2*v_sep_sum_1030_sep_98_sep_0) <= 0 & (-1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 3*v_sep_sum_1030_sep_98_sep_0) <= 2 & (-2*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 8*v_sep_sum_1030_sep_98_sep_0) <= 0) | (-1*v_sep_sum_1030_sep_98_sep_0 <= -3 & (-2*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 2*v_sep_sum_1030_sep_98_sep_0) <= 0 & (-1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 3*v_sep_sum_1030_sep_98_sep_0) <= 2 & (-2*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 8*v_sep_sum_1030_sep_98_sep_0) <= 12) | (-1*v_sep_sum_1030_sep_98_sep_0 <= -3 & (-2*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 2*v_sep_sum_1030_sep_98_sep_0) <= 0 & (-1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 3*v_sep_sum_1030_sep_98_sep_0) <= 2 & (-1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 4*v_sep_sum_1030_sep_98_sep_0) <= 3) | (-1*v_sep_sum_1030_sep_98_sep_0 <= -3 & (-2*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 2*v_sep_sum_1030_sep_98_sep_0) <= 0 & (-1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 3*v_sep_sum_1030_sep_98_sep_0) <= 2 & (-1*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 4*v_sep_sum_1030_sep_98_sep_0) <= 5))
                        
                      end CsisatInterface.interpolate_csisat_post_process(99976)[12] (0.024996 sec.)
                      
                    end CsisatInterface.interpolate_csisat_wrap(99975)[11] (0.036994 sec.)
                    
                  end InterpProver.interpolate_quick(99966)[10] (0.036994 sec.)
                  begin minimizing # of disjunctions(133104)[10]
                    input: (((<sum_1030@98:0> <= 0) &&
                             (((3 + <sum_1030@98:0>) <= <<sum_1030@98:1>@101:0>) &&
                              (((3 * <sum_1030@98:0>) <= (3 + <<sum_1030@98:1>@101:0>)) &&
                               ((4 * <sum_1030@98:0>) <= <<sum_1030@98:1>@101:0>)))) ||
                            (((<sum_1030@98:0> <= 0) &&
                              (((3 + <sum_1030@98:0>) <= <<sum_1030@98:1>@101:0>) &&
                               (((3 * <sum_1030@98:0>) <= (3 + <<sum_1030@98:1>@101:0>)) &&
                                ((4 * <sum_1030@98:0>) <= (6 + <<sum_1030@98:1>@101:0>))))) ||
                             (((<sum_1030@98:0> <= 0) &&
                               (((3 + <sum_1030@98:0>) <= <<sum_1030@98:1>@101:0>) &&
                                (((3 * <sum_1030@98:0>) <= (3 + <<sum_1030@98:1>@101:0>)) &&
                                 ((4 * <sum_1030@98:0>) <= (3 + <<sum_1030@98:1>@101:0>))))) ||
                              (((<sum_1030@98:0> <= 0) &&
                                (((3 + <sum_1030@98:0>) <= <<sum_1030@98:1>@101:0>) &&
                                 (((3 * <sum_1030@98:0>) <= (3 + <<sum_1030@98:1>@101:0>)) &&
                                  ((4 * <sum_1030@98:0>) <= (5 + <<sum_1030@98:1>@101:0>))))) ||
                               (((<sum_1030@98:0> <= 0) &&
                                 (((3 + <sum_1030@98:0>) <= <<sum_1030@98:1>@101:0>) &&
                                  (((3 * <sum_1030@98:0>) <= <<sum_1030@98:1>@101:0>) &&
                                   ((4 * <sum_1030@98:0>) <= <<sum_1030@98:1>@101:0>)))) ||
                                (((<sum_1030@98:0> <= 0) &&
                                  (((3 + <sum_1030@98:0>) <= <<sum_1030@98:1>@101:0>) &&
                                   (((3 * <sum_1030@98:0>) <= <<sum_1030@98:1>@101:0>) &&
                                    ((4 * <sum_1030@98:0>) <= (6 + <<sum_1030@98:1>@101:0>))))) ||
                                 (((<sum_1030@98:0> <= 0) &&
                                   (((3 + <sum_1030@98:0>) <= <<sum_1030@98:1>@101:0>) &&
                                    (((3 * <sum_1030@98:0>) <= <<sum_1030@98:1>@101:0>) &&
                                     ((4 * <sum_1030@98:0>) <= (3 + <<sum_1030@98:1>@101:0>))))) ||
                                  (((<sum_1030@98:0> <= 0) &&
                                    (((3 + <sum_1030@98:0>) <= <<sum_1030@98:1>@101:0>) &&
                                     (((3 * <sum_1030@98:0>) <= <<sum_1030@98:1>@101:0>) &&
                                      ((4 * <sum_1030@98:0>) <= (5 + <<sum_1030@98:1>@101:0>))))) ||
                                   (((<sum_1030@98:0> <= 0) &&
                                     (((3 + <sum_1030@98:0>) <= <<sum_1030@98:1>@101:0>) &&
                                      (((3 * <sum_1030@98:0>) <= (2 + <<sum_1030@98:1>@101:0>)) &&
                                       ((4 * <sum_1030@98:0>) <= <<sum_1030@98:1>@101:0>)))) ||
                                    (((<sum_1030@98:0> <= 0) &&
                                      (((3 + <sum_1030@98:0>) <= <<sum_1030@98:1>@101:0>) &&
                                       (((3 * <sum_1030@98:0>) <= (2 + <<sum_1030@98:1>@101:0>)) &&
                                        ((4 * <sum_1030@98:0>) <= (6 + <<sum_1030@98:1>@101:0>))))) ||
                                     (((<sum_1030@98:0> <= 0) &&
                                       (((3 + <sum_1030@98:0>) <= <<sum_1030@98:1>@101:0>) &&
                                        (((3 * <sum_1030@98:0>) <= (2 + <<sum_1030@98:1>@101:0>)) &&
                                         ((4 * <sum_1030@98:0>) <= (3 + <<sum_1030@98:1>@101:0>))))) ||
                                      (((<sum_1030@98:0> <= 0) &&
                                        (((3 + <sum_1030@98:0>) <= <<sum_1030@98:1>@101:0>) &&
                                         (((3 * <sum_1030@98:0>) <= (2 + <<sum_1030@98:1>@101:0>)) &&
                                          ((4 * <sum_1030@98:0>) <= (5 + <<sum_1030@98:1>@101:0>))))) ||
                                       (((<sum_1030@98:0> <= 0) &&
                                         (((1 + <sum_1030@98:0>) <= <<sum_1030@98:1>@101:0>) &&
                                          (((3 * <sum_1030@98:0>) <= (3 + <<sum_1030@98:1>@101:0>)) &&
                                           ((4 * <sum_1030@98:0>) <= <<sum_1030@98:1>@101:0>)))) ||
                                        (((<sum_1030@98:0> <= 0) &&
                                          (((1 + <sum_1030@98:0>) <= <<sum_1030@98:1>@101:0>) &&
                                           (((3 * <sum_1030@98:0>) <= (3 + <<sum_1030@98:1>@101:0>)) &&
                                            ((4 * <sum_1030@98:0>) <= (6 + <<sum_1030@98:1>@101:0>))))) ||
                                         (((<sum_1030@98:0> <= 0) &&
                                           (((1 + <sum_1030@98:0>) <= <<sum_1030@98:1>@101:0>) &&
                                            (((3 * <sum_1030@98:0>) <= (3 + <<sum_1030@98:1>@101:0>)) &&
                                             ((4 * <sum_1030@98:0>) <= (3 + <<sum_1030@98:1>@101:0>))))) ||
                                          (((<sum_1030@98:0> <= 0) &&
                                            (((1 + <sum_1030@98:0>) <= <<sum_1030@98:1>@101:0>) &&
                                             (((3 * <sum_1030@98:0>) <= (3 + <<sum_1030@98:1>@101:0>)) &&
                                              ((4 * <sum_1030@98:0>) <= (5 + <<sum_1030@98:1>@101:0>))))) ||
                                           (((<sum_1030@98:0> <= 0) &&
                                             (((1 + <sum_1030@98:0>) <= <<sum_1030@98:1>@101:0>) &&
                                              (((3 * <sum_1030@98:0>) <= <<sum_1030@98:1>@101:0>) &&
                                               ((4 * <sum_1030@98:0>) <= <<sum_1030@98:1>@101:0>)))) ||
                                            (((<sum_1030@98:0> <= 0) &&
                                              (((1 + <sum_1030@98:0>) <= <<sum_1030@98:1>@101:0>) &&
                                               (((3 * <sum_1030@98:0>) <= <<sum_1030@98:1>@101:0>) &&
                                                ((4 * <sum_1030@98:0>) <= (6 + <<sum_1030@98:1>@101:0>))))) ||
                                             (((<sum_1030@98:0> <= 0) &&
                                               (((1 + <sum_1030@98:0>) <= <<sum_1030@98:1>@101:0>) &&
                                                (((3 * <sum_1030@98:0>) <= <<sum_1030@98:1>@101:0>) &&
                                                 ((4 * <sum_1030@98:0>) <= (3 + <<sum_1030@98:1>@101:0>))))) ||
                                              (((<sum_1030@98:0> <= 0) &&
                                                (((1 + <sum_1030@98:0>) <= <<sum_1030@98:1>@101:0>) &&
                                                 (((3 * <sum_1030@98:0>) <= <<sum_1030@98:1>@101:0>) &&
                                                  ((4 * <sum_1030@98:0>) <= (5 + <<sum_1030@98:1>@101:0>))))) ||
                                               (((<sum_1030@98:0> <= 0) &&
                                                 (((1 + <sum_1030@98:0>) <= <<sum_1030@98:1>@101:0>) &&
                                                  (((3 * <sum_1030@98:0>) <= (2 + <<sum_1030@98:1>@101:0>)) &&
                                                   ((4 * <sum_1030@98:0>) <= <<sum_1030@98:1>@101:0>)))) ||
                                                (((<sum_1030@98:0> <= 0) &&
                                                  (((1 + <sum_1030@98:0>) <= <<sum_1030@98:1>@101:0>) &&
                                                   (((3 * <sum_1030@98:0>) <= (2 + <<sum_1030@98:1>@101:0>)) &&
                                                    ((4 * <sum_1030@98:0>) <= (6 + <<sum_1030@98:1>@101:0>))))) ||
                                                 (((<sum_1030@98:0> <= 0) &&
                                                   (((1 + <sum_1030@98:0>) <= <<sum_1030@98:1>@101:0>) &&
                                                    (((3 * <sum_1030@98:0>) <= (2 + <<sum_1030@98:1>@101:0>)) &&
                                                     ((4 * <sum_1030@98:0>) <= (3 + <<sum_1030@98:1>@101:0>))))) ||
                                                  (((<sum_1030@98:0> <= 0) &&
                                                    (((1 + <sum_1030@98:0>) <= <<sum_1030@98:1>@101:0>) &&
                                                     (((3 * <sum_1030@98:0>) <= (2 + <<sum_1030@98:1>@101:0>)) &&
                                                      ((4 * <sum_1030@98:0>) <= (5 + <<sum_1030@98:1>@101:0>))))) ||
                                                   (((<sum_1030@98:0> <= 0) &&
                                                     ((<sum_1030@98:0> <= <<sum_1030@98:1>@101:0>) &&
                                                      (((3 * <sum_1030@98:0>) <= (3 + <<sum_1030@98:1>@101:0>)) &&
                                                       ((4 * <sum_1030@98:0>) <= <<sum_1030@98:1>@101:0>)))) ||
                                                    (((<sum_1030@98:0> <= 0) &&
                                                      ((<sum_1030@98:0> <= <<sum_1030@98:1>@101:0>) &&
                                                       (((3 * <sum_1030@98:0>) <= (3 + <<sum_1030@98:1>@101:0>)) &&
                                                        ((4 * <sum_1030@98:0>) <= (6 + <<sum_1030@98:1>@101:0>))))) ||
                                                     (((<sum_1030@98:0> <= 0) &&
                                                       ((<sum_1030@98:0> <= <<sum_1030@98:1>@101:0>) &&
                                                        (((3 * <sum_1030@98:0>) <= (3 + <<sum_1030@98:1>@101:0>)) &&
                                                         ((4 * <sum_1030@98:0>) <= (3 + <<sum_1030@98:1>@101:0>))))) ||
                                                      (((<sum_1030@98:0> <= 0) &&
                                                        ((<sum_1030@98:0> <= <<sum_1030@98:1>@101:0>) &&
                                                         (((3 * <sum_1030@98:0>) <= (3 + <<sum_1030@98:1>@101:0>)) &&
                                                          ((4 * <sum_1030@98:0>) <= (5 + <<sum_1030@98:1>@101:0>))))) ||
                                                       (((<sum_1030@98:0> <= 0) &&
                                                         ((<sum_1030@98:0> <= <<sum_1030@98:1>@101:0>) &&
                                                          (((3 * <sum_1030@98:0>) <= <<sum_1030@98:1>@101:0>) &&
                                                           ((4 * <sum_1030@98:0>) <= <<sum_1030@98:1>@101:0>)))) ||
                                                        (((<sum_1030@98:0> <= 0) &&
                                                          ((<sum_1030@98:0> <= <<sum_1030@98:1>@101:0>) &&
                                                           (((3 * <sum_1030@98:0>) <= <<sum_1030@98:1>@101:0>) &&
                                                            ((4 * <sum_1030@98:0>) <= (6 + <<sum_1030@98:1>@101:0>))))) ||
                                                         (((<sum_1030@98:0> <= 0) &&
                                                           ((<sum_1030@98:0> <= <<sum_1030@98:1>@101:0>) &&
                                                            (((3 * <sum_1030@98:0>) <= <<sum_1030@98:1>@101:0>) &&
                                                             ((4 * <sum_1030@98:0>) <= (3 + <<sum_1030@98:1>@101:0>))))) ||
                                                          (((<sum_1030@98:0> <= 0) &&
                                                            ((<sum_1030@98:0> <= <<sum_1030@98:1>@101:0>) &&
                                                             (((3 * <sum_1030@98:0>) <= <<sum_1030@98:1>@101:0>) &&
                                                              ((4 * <sum_1030@98:0>) <= (5 + <<sum_1030@98:1>@101:0>))))) ||
                                                           (((<sum_1030@98:0> <= 0) &&
                                                             ((<sum_1030@98:0> <= <<sum_1030@98:1>@101:0>) &&
                                                              (((3 * <sum_1030@98:0>) <= (2 + <<sum_1030@98:1>@101:0>)) &&
                                                               ((4 * <sum_1030@98:0>) <= <<sum_1030@98:1>@101:0>)))) ||
                                                            (((<sum_1030@98:0> <= 0) &&
                                                              ((<sum_1030@98:0> <= <<sum_1030@98:1>@101:0>) &&
                                                               (((3 * <sum_1030@98:0>) <= (2 + <<sum_1030@98:1>@101:0>)) &&
                                                                ((4 * <sum_1030@98:0>) <= (6 + <<sum_1030@98:1>@101:0>))))) ||
                                                             (((<sum_1030@98:0> <= 0) &&
                                                               ((<sum_1030@98:0> <= <<sum_1030@98:1>@101:0>) &&
                                                                (((3 * <sum_1030@98:0>) <=
                                                                  (2 + <<sum_1030@98:1>@101:0>)) &&
                                                                 ((4 * <sum_1030@98:0>) <=
                                                                  (3 + <<sum_1030@98:1>@101:0>))))) ||
                                                              (((<sum_1030@98:0> <= 0) &&
                                                                ((<sum_1030@98:0> <= <<sum_1030@98:1>@101:0>) &&
                                                                 (((3 * <sum_1030@98:0>) <=
                                                                   (2 + <<sum_1030@98:1>@101:0>)) &&
                                                                  ((4 * <sum_1030@98:0>) <=
                                                                   (5 + <<sum_1030@98:1>@101:0>))))) ||
                                                               ((((2 * <sum_1030@98:0>) <=
                                                                  (1 + <<sum_1030@98:1>@101:0>)) &&
                                                                 (((3 + <sum_1030@98:0>) <= <<sum_1030@98:1>@101:0>) &&
                                                                  (((
                                                                    3 * <sum_1030@98:0>) <=
                                                                    (
                                                                    3 + <<sum_1030@98:1>@101:0>)) &&
                                                                   ((4 * <sum_1030@98:0>) <= <<sum_1030@98:1>@101:0>)))) ||
                                                                ((((2 * <sum_1030@98:0>) <=
                                                                   (1 + <<sum_1030@98:1>@101:0>)) &&
                                                                  (((3 + <sum_1030@98:0>) <= <<sum_1030@98:1>@101:0>) &&
                                                                   ((
                                                                    (
                                                                    3 * <sum_1030@98:0>) <=
                                                                    (
                                                                    3 + <<sum_1030@98:1>@101:0>)) &&
                                                                    (
                                                                    (
                                                                    4 * <sum_1030@98:0>) <=
                                                                    (
                                                                    6 + <<sum_1030@98:1>@101:0>))))) ||
                                                                 ((((
                                                                    2 * <sum_1030@98:0>) <=
                                                                    (
                                                                    1 + <<sum_1030@98:1>@101:0>)) &&
                                                                   ((
                                                                    (3 + <sum_1030@98:0>) <= <<sum_1030@98:1>@101:0>) &&
                                                                    (
                                                                    (
                                                                    (
                                                                    3 * <sum_1030@98:0>) <=
                                                                    (
                                                                    3 + <<sum_1030@98:1>@101:0>)) &&
                                                                    (
                                                                    (
                                                                    4 * <sum_1030@98:0>) <=
                                                                    (
                                                                    3 + <<sum_1030@98:1>@101:0>))))) ||
                                                                  (((
                                                                    (
                                                                    2 * <sum_1030@98:0>) <=
                                                                    (
                                                                    1 + <<sum_1030@98:1>@101:0>)) &&
                                                                    (
                                                                    (
                                                                    (3 + <sum_1030@98:0>) <= <<sum_1030@98:1>@101:0>) &&
                                                                    (
                                                                    (
                                                                    (
                                                                    3 * <sum_1030@98:0>) <=
                                                                    (
                                                                    3 + <<sum_1030@98:1>@101:0>)) &&
                                                                    (
                                                                    (
                                                                    4 * <sum_1030@98:0>) <=
                                                                    (
                                                                    5 + <<sum_1030@98:1>@101:0>))))) ||
                                                                   ((
                                                                    (
                                                                    (
                                                                    2 * <sum_1030@98:0>) <=
                                                                    (
                                                                    1 + <<sum_1030@98:1>@101:0>)) &&
                                                                    (
                                                                    (
                                                                    (3 + <sum_1030@98:0>) <= <<sum_1030@98:1>@101:0>) &&
                                                                    (
                                                                    (
                                                                    (3 * <sum_1030@98:0>) <= <<sum_1030@98:1>@101:0>) &&
                                                                    (
                                                                    (4 * <sum_1030@98:0>) <= <<sum_1030@98:1>@101:0>)))) ||
                                                                    (
                                                                    (
                                                                    (
                                                                    (
                                                                    2 * <sum_1030@98:0>) <=
                                                                    (
                                                                    1 + <<sum_1030@98:1>@101:0>)) &&
                                                                    (
                                                                    (
                                                                    (3 + <sum_1030@98:0>) <= <<sum_1030@98:1>@101:0>) &&
                                                                    (
                                                                    (
                                                                    (3 * <sum_1030@98:0>) <= <<sum_1030@98:1>@101:0>) &&
                                                                    (
                                                                    (
                                                                    4 * <sum_1030@98:0>) <=
                                                                    (
                                                                    6 + <<sum_1030@98:1>@101:0>))))) ||
                                                                    (
                                                                    (
                                                                    (
                                                                    (
                                                                    2 * <sum_1030@98:0>) <=
                                                                    (
                                                                    1 + <<sum_1030@98:1>@101:0>)) &&
                                                                    (
                                                                    (
                                                                    (3 + <sum_1030@98:0>) <= <<sum_1030@98:1>@101:0>) &&
                                                                    (
                                                                    (
                                                                    (3 * <sum_1030@98:0>) <= <<sum_1030@98:1>@101:0>) &&
                                                                    (
                                                                    (
                                                                    4 * <sum_1030@98:0>) <=
                                                                    (
                                                                    3 + <<sum_1030@98:1>@101:0>))))) ||
                                                                    (
                                                                    (
                                                                    (
                                                                    (
                                                                    2 * <sum_1030@98:0>) <=
                                                                    (
                                                                    1 + <<sum_1030@98:1>@101:0>)) &&
                                                                    (
                                                                    (
                                                                    (3 + <sum_1030@98:0>) <= <<sum_1030@98:1>@101:0>) &&
                                                                    (
                                                                    (
                                                                    (3 * <sum_1030@98:0>) <= <<sum_1030@98:1>@101:0>) &&
                                                                    (
                                                                    (
                                                                    4 * <sum_1030@98:0>) <=
                                                                    (
                                                                    5 + <<sum_1030@98:1>@101:0>))))) ||
                                                                    (
                                                                    (
                                                                    (
                                                                    (
                                                                    2 * <sum_1030@98:0>) <=
                                                                    (
                                                                    1 + <<sum_1030@98:1>@101:0>)) &&
                                                                    (
                                                                    (
                                                                    (3 + <sum_1030@98:0>) <= <<sum_1030@98:1>@101:0>) &&
                                                                    (
                                                                    (
                                                                    (
                                                                    3 * <sum_1030@98:0>) <=
                                                                    (
                                                                    2 + <<sum_1030@98:1>@101:0>)) &&
                                                                    (
                                                                    (4 * <sum_1030@98:0>) <= <<sum_1030@98:1>@101:0>)))) ||
                                                                    (
                                                                    (
                                                                    (
                                                                    (
                                                                    2 * <sum_1030@98:0>) <=
                                                                    (
                                                                    1 + <<sum_1030@98:1>@101:0>)) &&
                                                                    (
                                                                    (
                                                                    (3 + <sum_1030@98:0>) <= <<sum_1030@98:1>@101:0>) &&
                                                                    (
                                                                    (
                                                                    (
                                                                    3 * <sum_1030@98:0>) <=
                                                                    (
                                                                    2 + <<sum_1030@98:1>@101:0>)) &&
                                                                    (
                                                                    (
                                                                    4 * <sum_1030@98:0>) <=
                                                                    (
                                                                    6 + <<sum_1030@98:1>@101:0>))))) ||
                                                                    (
                                                                    (
                                                                    (
                                                                    (
                                                                    2 * <sum_1030@98:0>) <=
                                                                    (
                                                                    1 + <<sum_1030@98:1>@101:0>)) &&
                                                                    (
                                                                    (
                                                                    (3 + <sum_1030@98:0>) <= <<sum_1030@98:1>@101:0>) &&
                                                                    (
                                                                    (
                                                                    (
                                                                    3 * <sum_1030@98:0>) <=
                                                                    (
                                                                    2 + <<sum_1030@98:1>@101:0>)) &&
                                                                    (
                                                                    (
                                                                    4 * <sum_1030@98:0>) <=
                                                                    (
                                                                    3 + <<sum_1030@98:1>@101:0>))))) ||
                                                                    (
                                                                    (
                                                                    (
                                                                    (
                                                                    2 * <sum_1030@98:0>) <=
                                                                    (
                                                                    1 + <<sum_1030@98:1>@101:0>)) &&
                                                                    (
                                                                    (
                                                                    (3 + <sum_1030@98:0>) <= <<sum_1030@98:1>@101:0>) &&
                                                                    (
                                                                    (
                                                                    (
                                                                    3 * <sum_1030@98:0>) <=
                                                                    (
                                                                    2 + <<sum_1030@98:1>@101:0>)) &&
                                                                    (
                                                                    (
                                                                    4 * <sum_1030@98:0>) <=
                                                                    (
                                                                    5 + <<sum_1030@98:1>@101:0>))))) ||
                                                                    (
                                                                    (
                                                                    (
                                                                    (
                                                                    2 * <sum_1030@98:0>) <=
                                                                    (
                                                                    1 + <<sum_1030@98:1>@101:0>)) &&
                                                                    (
                                                                    (
                                                                    (1 + <sum_1030@98:0>) <= <<sum_1030@98:1>@101:0>) &&
                                                                    (
                                                                    (
                                                                    (
                                                                    3 * <sum_1030@98:0>) <=
                                                                    (
                                                                    3 + <<sum_1030@98:1>@101:0>)) &&
                                                                    (
                                                                    (4 * <sum_1030@98:0>) <= <<sum_1030@98:1>@101:0>)))) ||
                                                                    (
                                                                    (
                                                                    (
                                                                    (
                                                                    2 * <sum_1030@98:0>) <=
                                                                    (
                                                                    1 + <<sum_1030@98:1>@101:0>)) &&
                                                                    (
                                                                    (
                                                                    (1 + <sum_1030@98:0>) <= <<sum_1030@98:1>@101:0>) &&
                                                                    (
                                                                    (
                                                                    (
                                                                    3 * <sum_1030@98:0>) <=
                                                                    (
                                                                    3 + <<sum_1030@98:1>@101:0>)) &&
                                                                    (
                                                                    (
                                                                    4 * <sum_1030@98:0>) <=
                                                                    (
                                                                    6 + <<sum_1030@98:1>@101:0>))))) ||
                                                                    (
                                                                    (
                                                                    (
                                                                    (
                                                                    2 * <sum_1030@98:0>) <=
                                                                    (
                                                                    1 + <<sum_1030@98:1>@101:0>)) &&
                                                                    (
                                                                    (
                                                                    (1 + <sum_1030@98:0>) <= <<sum_1030@98:1>@101:0>) &&
                                                                    (
                                                                    (
                                                                    (
                                                                    3 * <sum_1030@98:0>) <=
                                                                    (
                                                                    3 + <<sum_1030@98:1>@101:0>)) &&
                                                                    (
                                                                    (
                                                                    4 * <sum_1030@98:0>) <=
                                                                    (
                                                                    3 + <<sum_1030@98:1>@101:0>))))) ||
                                                                    (
                                                                    (
                                                                    (
                                                                    (
                                                                    2 * <sum_1030@98:0>) <=
                                                                    (
                                                                    1 + <<sum_1030@98:1>@101:0>)) &&
                                                                    (
                                                                    (
                                                                    (1 + <sum_1030@98:0>) <= <<sum_1030@98:1>@101:0>) &&
                                                                    (
                                                                    (
                                                                    (
                                                                    3 * <sum_1030@98:0>) <=
                                                                    (
                                                                    3 + <<sum_1030@98:1>@101:0>)) &&
                                                                    (
                                                                    (
                                                                    4 * <sum_1030@98:0>) <=
                                                                    (
                                                                    5 + <<sum_1030@98:1>@101:0>))))) ||
                                                                    (
                                                                    (
                                                                    (
                                                                    (
                                                                    2 * <sum_1030@98:0>) <=
                                                                    (
                                                                    1 + <<sum_1030@98:1>@101:0>)) &&
                                                                    (
                                                                    (
                                                                    (1 + <sum_1030@98:0>) <= <<sum_1030@98:1>@101:0>) &&
                                                                    (
                                                                    (
                                                                    (3 * <sum_1030@98:0>) <= <<sum_1030@98:1>@101:0>) &&
                                                                    (
                                                                    (4 * <sum_1030@98:0>) <= <<sum_1030@98:1>@101:0>)))) ||
                                                                    (
                                                                    (
                                                                    (
                                                                    (
                                                                    2 * <sum_1030@98:0>) <=
                                                                    (
                                                                    1 + <<sum_1030@98:1>@101:0>)) &&
                                                                    (
                                                                    (
                                                                    (1 + <sum_1030@98:0>) <= <<sum_1030@98:1>@101:0>) &&
                                                                    (
                                                                    (
                                                                    (3 * <sum_1030@98:0>) <= <<sum_1030@98:1>@101:0>) &&
                                                                    (
                                                                    (
                                                                    4 * <sum_1030@98:0>) <=
                                                                    (
                                                                    6 + <<sum_1030@98:1>@101:0>))))) ||
                                                                    (
                                                                    (
                                                                    (
                                                                    (
                                                                    2 * <sum_1030@98:0>) <=
                                                                    (
                                                                    1 + <<sum_1030@98:1>@101:0>)) &&
                                                                    (
                                                                    (
                                                                    (1 + <sum_1030@98:0>) <= <<sum_1030@98:1>@101:0>) &&
                                                                    (
                                                                    (
                                                                    (3 * <sum_1030@98:0>) <= <<sum_1030@98:1>@101:0>) &&
                                                                    (
                                                                    (
                                                                    4 * <sum_1030@98:0>) <=
                                                                    (
                                                                    3 + <<sum_1030@98:1>@101:0>))))) ||
                                                                    (
                                                                    (
                                                                    (
                                                                    (
                                                                    2 * <sum_1030@98:0>) <=
                                                                    (
                                                                    1 + <<sum_1030@98:1>@101:0>)) &&
                                                                    (
                                                                    (
                                                                    (1 + <sum_1030@98:0>) <= <<sum_1030@98:1>@101:0>) &&
                                                                    (
                                                                    (
                                                                    (3 * <sum_1030@98:0>) <= <<sum_1030@98:1>@101:0>) &&
                                                                    (
                                                                    (
                                                                    4 * <sum_1030@98:0>) <=
                                                                    (
                                                                    5 + <<sum_1030@98:1>@101:0>))))) ||
                                                                    (
                                                                    (
                                                                    (
                                                                    (
                                                                    2 * <sum_1030@98:0>) <=
                                                                    (
                                                                    1 + <<sum_1030@98:1>@101:0>)) &&
                                                                    (
                                                                    (
                                                                    (1 + <sum_1030@98:0>) <= <<sum_1030@98:1>@101:0>) &&
                                                                    (
                                                                    (
                                                                    (
                                                                    3 * <sum_1030@98:0>) <=
                                                                    (
                                                                    2 + <<sum_1030@98:1>@101:0>)) &&
                                                                    (
                                                                    (4 * <sum_1030@98:0>) <= <<sum_1030@98:1>@101:0>)))) ||
                                                                    (
                                                                    (
                                                                    (
                                                                    (
                                                                    2 * <sum_1030@98:0>) <=
                                                                    (
                                                                    1 + <<sum_1030@98:1>@101:0>)) &&
                                                                    (
                                                                    (
                                                                    (1 + <sum_1030@98:0>) <= <<sum_1030@98:1>@101:0>) &&
                                                                    (
                                                                    (
                                                                    (
                                                                    3 * <sum_1030@98:0>) <=
                                                                    (
                                                                    2 + <<sum_1030@98:1>@101:0>)) &&
                                                                    (
                                                                    (
                                                                    4 * <sum_1030@98:0>) <=
                                                                    (
                                                                    6 + <<sum_1030@98:1>@101:0>))))) ||
                                                                    (
                                                                    (
                                                                    (
                                                                    (
                                                                    2 * <sum_1030@98:0>) <=
                                                                    (
                                                                    1 + <<sum_1030@98:1>@101:0>)) &&
                                                                    (
                                                                    (
                                                                    (1 + <sum_1030@98:0>) <= <<sum_1030@98:1>@101:0>) &&
                                                                    (
                                                                    (
                                                                    (
                                                                    3 * <sum_1030@98:0>) <=
                                                                    (
                                                                    2 + <<sum_1030@98:1>@101:0>)) &&
                                                                    (
                                                                    (
                                                                    4 * <sum_1030@98:0>) <=
                                                                    (
                                                                    3 + <<sum_1030@98:1>@101:0>))))) ||
                                                                    (
                                                                    (
                                                                    (
                                                                    (
                                                                    2 * <sum_1030@98:0>) <=
                                                                    (
                                                                    1 + <<sum_1030@98:1>@101:0>)) &&
                                                                    (
                                                                    (
                                                                    (1 + <sum_1030@98:0>) <= <<sum_1030@98:1>@101:0>) &&
                                                                    (
                                                                    (
                                                                    (
                                                                    3 * <sum_1030@98:0>) <=
                                                                    (
                                                                    2 + <<sum_1030@98:1>@101:0>)) &&
                                                                    (
                                                                    (
                                                                    4 * <sum_1030@98:0>) <=
                                                                    (
                                                                    5 + <<sum_1030@98:1>@101:0>))))) ||
                                                                    (
                                                                    (
                                                                    (
                                                                    (
                                                                    2 * <sum_1030@98:0>) <=
                                                                    (
                                                                    1 + <<sum_1030@98:1>@101:0>)) &&
                                                                    (
                                                                    (
                                                                    <sum_1030@98:0> <= <<sum_1030@98:1>@101:0>) &&
                                                                    (
                                                                    (
                                                                    (
                                                                    3 * <sum_1030@98:0>) <=
                                                                    (
                                                                    3 + <<sum_1030@98:1>@101:0>)) &&
                                                                    (
                                                                    (4 * <sum_1030@98:0>) <= <<sum_1030@98:1>@101:0>)))) ||
                                                                    (
                                                                    (
                                                                    (
                                                                    (
                                                                    2 * <sum_1030@98:0>) <=
                                                                    (
                                                                    1 + <<sum_1030@98:1>@101:0>)) &&
                                                                    (
                                                                    (
                                                                    <sum_1030@98:0> <= <<sum_1030@98:1>@101:0>) &&
                                                                    (
                                                                    (
                                                                    (
                                                                    3 * <sum_1030@98:0>) <=
                                                                    (
                                                                    3 + <<sum_1030@98:1>@101:0>)) &&
                                                                    (
                                                                    (
                                                                    4 * <sum_1030@98:0>) <=
                                                                    (
                                                                    6 + <<sum_1030@98:1>@101:0>))))) ||
                                                                    (
                                                                    (
                                                                    (
                                                                    (
                                                                    2 * <sum_1030@98:0>) <=
                                                                    (
                                                                    1 + <<sum_1030@98:1>@101:0>)) &&
                                                                    (
                                                                    (
                                                                    <sum_1030@98:0> <= <<sum_1030@98:1>@101:0>) &&
                                                                    (
                                                                    (
                                                                    (
                                                                    3 * <sum_1030@98:0>) <=
                                                                    (
                                                                    3 + <<sum_1030@98:1>@101:0>)) &&
                                                                    (
                                                                    (
                                                                    4 * <sum_1030@98:0>) <=
                                                                    (
                                                                    3 + <<sum_1030@98:1>@101:0>))))) ||
                                                                    (
                                                                    (
                                                                    (
                                                                    (
                                                                    2 * <sum_1030@98:0>) <=
                                                                    (
                                                                    1 + <<sum_1030@98:1>@101:0>)) &&
                                                                    (
                                                                    (
                                                                    <sum_1030@98:0> <= <<sum_1030@98:1>@101:0>) &&
                                                                    (
                                                                    (
                                                                    (
                                                                    3 * <sum_1030@98:0>) <=
                                                                    (
                                                                    3 + <<sum_1030@98:1>@101:0>)) &&
                                                                    (
                                                                    (
                                                                    4 * <sum_1030@98:0>) <=
                                                                    (
                                                                    5 + <<sum_1030@98:1>@101:0>))))) ||
                                                                    (
                                                                    (
                                                                    (
                                                                    (
                                                                    2 * <sum_1030@98:0>) <=
                                                                    (
                                                                    1 + <<sum_1030@98:1>@101:0>)) &&
                                                                    (
                                                                    (
                                                                    <sum_1030@98:0> <= <<sum_1030@98:1>@101:0>) &&
                                                                    (
                                                                    (
                                                                    (3 * <sum_1030@98:0>) <= <<sum_1030@98:1>@101:0>) &&
                                                                    (
                                                                    (4 * <sum_1030@98:0>) <= <<sum_1030@98:1>@101:0>)))) ||
                                                                    (
                                                                    (
                                                                    (
                                                                    (
                                                                    2 * <sum_1030@98:0>) <=
                                                                    (
                                                                    1 + <<sum_1030@98:1>@101:0>)) &&
                                                                    (
                                                                    (
                                                                    <sum_1030@98:0> <= <<sum_1030@98:1>@101:0>) &&
                                                                    (
                                                                    (
                                                                    (3 * <sum_1030@98:0>) <= <<sum_1030@98:1>@101:0>) &&
                                                                    (
                                                                    (
                                                                    4 * <sum_1030@98:0>) <=
                                                                    (
                                                                    6 + <<sum_1030@98:1>@101:0>))))) ||
                                                                    (
                                                                    (
                                                                    (
                                                                    (
                                                                    2 * <sum_1030@98:0>) <=
                                                                    (
                                                                    1 + <<sum_1030@98:1>@101:0>)) &&
                                                                    (
                                                                    (
                                                                    <sum_1030@98:0> <= <<sum_1030@98:1>@101:0>) &&
                                                                    (
                                                                    (
                                                                    (3 * <sum_1030@98:0>) <= <<sum_1030@98:1>@101:0>) &&
                                                                    (
                                                                    (
                                                                    4 * <sum_1030@98:0>) <=
                                                                    (
                                                                    3 + <<sum_1030@98:1>@101:0>))))) ||
                                                                    (
                                                                    (
                                                                    (
                                                                    (
                                                                    2 * <sum_1030@98:0>) <=
                                                                    (
                                                                    1 + <<sum_1030@98:1>@101:0>)) &&
                                                                    (
                                                                    (
                                                                    <sum_1030@98:0> <= <<sum_1030@98:1>@101:0>) &&
                                                                    (
                                                                    (
                                                                    (3 * <sum_1030@98:0>) <= <<sum_1030@98:1>@101:0>) &&
                                                                    (
                                                                    (
                                                                    4 * <sum_1030@98:0>) <=
                                                                    (
                                                                    5 + <<sum_1030@98:1>@101:0>))))) ||
                                                                    (
                                                                    (
                                                                    (
                                                                    (
                                                                    2 * <sum_1030@98:0>) <=
                                                                    (
                                                                    1 + <<sum_1030@98:1>@101:0>)) &&
                                                                    (
                                                                    (
                                                                    <sum_1030@98:0> <= <<sum_1030@98:1>@101:0>) &&
                                                                    (
                                                                    (
                                                                    (
                                                                    3 * <sum_1030@98:0>) <=
                                                                    (
                                                                    2 + <<sum_1030@98:1>@101:0>)) &&
                                                                    (
                                                                    (4 * <sum_1030@98:0>) <= <<sum_1030@98:1>@101:0>)))) ||
                                                                    (
                                                                    (
                                                                    (
                                                                    (
                                                                    2 * <sum_1030@98:0>) <=
                                                                    (
                                                                    1 + <<sum_1030@98:1>@101:0>)) &&
                                                                    (
                                                                    (
                                                                    <sum_1030@98:0> <= <<sum_1030@98:1>@101:0>) &&
                                                                    (
                                                                    (
                                                                    (
                                                                    3 * <sum_1030@98:0>) <=
                                                                    (
                                                                    2 + <<sum_1030@98:1>@101:0>)) &&
                                                                    (
                                                                    (
                                                                    4 * <sum_1030@98:0>) <=
                                                                    (
                                                                    6 + <<sum_1030@98:1>@101:0>))))) ||
                                                                    (
                                                                    (
                                                                    (
                                                                    (
                                                                    2 * <sum_1030@98:0>) <=
                                                                    (
                                                                    1 + <<sum_1030@98:1>@101:0>)) &&
                                                                    (
                                                                    (
                                                                    <sum_1030@98:0> <= <<sum_1030@98:1>@101:0>) &&
                                                                    (
                                                                    (
                                                                    (
                                                                    3 * <sum_1030@98:0>) <=
                                                                    (
                                                                    2 + <<sum_1030@98:1>@101:0>)) &&
                                                                    (
                                                                    (
                                                                    4 * <sum_1030@98:0>) <=
                                                                    (
                                                                    3 + <<sum_1030@98:1>@101:0>))))) ||
                                                                    (
                                                                    (
                                                                    (
                                                                    (
                                                                    2 * <sum_1030@98:0>) <=
                                                                    (
                                                                    1 + <<sum_1030@98:1>@101:0>)) &&
                                                                    (
                                                                    (
                                                                    <sum_1030@98:0> <= <<sum_1030@98:1>@101:0>) &&
                                                                    (
                                                                    (
                                                                    (
                                                                    3 * <sum_1030@98:0>) <=
                                                                    (
                                                                    2 + <<sum_1030@98:1>@101:0>)) &&
                                                                    (
                                                                    (
                                                                    4 * <sum_1030@98:0>) <=
                                                                    (
                                                                    5 + <<sum_1030@98:1>@101:0>))))) ||
                                                                    (
                                                                    (
                                                                    (
                                                                    (
                                                                    3 * <sum_1030@98:0>) <=
                                                                    (
                                                                    2 + <<sum_1030@98:1>@101:0>)) &&
                                                                    (
                                                                    (
                                                                    (3 + <sum_1030@98:0>) <= <<sum_1030@98:1>@101:0>) &&
                                                                    (
                                                                    (4 * <sum_1030@98:0>) <= <<sum_1030@98:1>@101:0>))) ||
                                                                    (
                                                                    (
                                                                    (
                                                                    (
                                                                    3 * <sum_1030@98:0>) <=
                                                                    (
                                                                    2 + <<sum_1030@98:1>@101:0>)) &&
                                                                    (
                                                                    (
                                                                    (3 + <sum_1030@98:0>) <= <<sum_1030@98:1>@101:0>) &&
                                                                    (
                                                                    (
                                                                    4 * <sum_1030@98:0>) <=
                                                                    (
                                                                    6 + <<sum_1030@98:1>@101:0>)))) ||
                                                                    (
                                                                    (
                                                                    (
                                                                    (
                                                                    3 * <sum_1030@98:0>) <=
                                                                    (
                                                                    2 + <<sum_1030@98:1>@101:0>)) &&
                                                                    (
                                                                    (
                                                                    (3 + <sum_1030@98:0>) <= <<sum_1030@98:1>@101:0>) &&
                                                                    (
                                                                    (
                                                                    4 * <sum_1030@98:0>) <=
                                                                    (
                                                                    3 + <<sum_1030@98:1>@101:0>)))) ||
                                                                    (
                                                                    (
                                                                    (
                                                                    (
                                                                    3 * <sum_1030@98:0>) <=
                                                                    (
                                                                    2 + <<sum_1030@98:1>@101:0>)) &&
                                                                    (
                                                                    (
                                                                    (3 + <sum_1030@98:0>) <= <<sum_1030@98:1>@101:0>) &&
                                                                    (
                                                                    (
                                                                    4 * <sum_1030@98:0>) <=
                                                                    (
                                                                    5 + <<sum_1030@98:1>@101:0>)))) ||
                                                                    (
                                                                    (
                                                                    (
                                                                    (3 * <sum_1030@98:0>) <= <<sum_1030@98:1>@101:0>) &&
                                                                    (
                                                                    (
                                                                    (3 + <sum_1030@98:0>) <= <<sum_1030@98:1>@101:0>) &&
                                                                    (
                                                                    (4 * <sum_1030@98:0>) <= <<sum_1030@98:1>@101:0>))) ||
                                                                    (
                                                                    (
                                                                    (
                                                                    (3 * <sum_1030@98:0>) <= <<sum_1030@98:1>@101:0>) &&
                                                                    (
                                                                    (
                                                                    (3 + <sum_1030@98:0>) <= <<sum_1030@98:1>@101:0>) &&
                                                                    (
                                                                    (
                                                                    4 * <sum_1030@98:0>) <=
                                                                    (
                                                                    6 + <<sum_1030@98:1>@101:0>)))) ||
                                                                    (
                                                                    (
                                                                    (
                                                                    (3 * <sum_1030@98:0>) <= <<sum_1030@98:1>@101:0>) &&
                                                                    (
                                                                    (
                                                                    (3 + <sum_1030@98:0>) <= <<sum_1030@98:1>@101:0>) &&
                                                                    (
                                                                    (
                                                                    4 * <sum_1030@98:0>) <=
                                                                    (
                                                                    3 + <<sum_1030@98:1>@101:0>)))) ||
                                                                    (
                                                                    (
                                                                    (
                                                                    (3 * <sum_1030@98:0>) <= <<sum_1030@98:1>@101:0>) &&
                                                                    (
                                                                    (
                                                                    (3 + <sum_1030@98:0>) <= <<sum_1030@98:1>@101:0>) &&
                                                                    (
                                                                    (
                                                                    4 * <sum_1030@98:0>) <=
                                                                    (
                                                                    5 + <<sum_1030@98:1>@101:0>)))) ||
                                                                    (
                                                                    (
                                                                    (
                                                                    (3 + <sum_1030@98:0>) <= <<sum_1030@98:1>@101:0>) &&
                                                                    (
                                                                    (
                                                                    (
                                                                    3 * <sum_1030@98:0>) <=
                                                                    (
                                                                    2 + <<sum_1030@98:1>@101:0>)) &&
                                                                    (
                                                                    (4 * <sum_1030@98:0>) <= <<sum_1030@98:1>@101:0>))) ||
                                                                    (
                                                                    (
                                                                    (
                                                                    (3 + <sum_1030@98:0>) <= <<sum_1030@98:1>@101:0>) &&
                                                                    (
                                                                    (
                                                                    (
                                                                    3 * <sum_1030@98:0>) <=
                                                                    (
                                                                    2 + <<sum_1030@98:1>@101:0>)) &&
                                                                    (
                                                                    (
                                                                    4 * <sum_1030@98:0>) <=
                                                                    (
                                                                    6 + <<sum_1030@98:1>@101:0>)))) ||
                                                                    (
                                                                    (
                                                                    (
                                                                    (3 + <sum_1030@98:0>) <= <<sum_1030@98:1>@101:0>) &&
                                                                    (
                                                                    (
                                                                    (
                                                                    3 * <sum_1030@98:0>) <=
                                                                    (
                                                                    2 + <<sum_1030@98:1>@101:0>)) &&
                                                                    (
                                                                    (
                                                                    4 * <sum_1030@98:0>) <=
                                                                    (
                                                                    3 + <<sum_1030@98:1>@101:0>)))) ||
                                                                    (
                                                                    (
                                                                    (
                                                                    (3 + <sum_1030@98:0>) <= <<sum_1030@98:1>@101:0>) &&
                                                                    (
                                                                    (
                                                                    (
                                                                    3 * <sum_1030@98:0>) <=
                                                                    (
                                                                    2 + <<sum_1030@98:1>@101:0>)) &&
                                                                    (
                                                                    (
                                                                    4 * <sum_1030@98:0>) <=
                                                                    (
                                                                    5 + <<sum_1030@98:1>@101:0>)))) ||
                                                                    (
                                                                    (
                                                                    (
                                                                    (
                                                                    3 * <sum_1030@98:0>) <=
                                                                    (
                                                                    2 + <<sum_1030@98:1>@101:0>)) &&
                                                                    (
                                                                    (
                                                                    (1 + <sum_1030@98:0>) <= <<sum_1030@98:1>@101:0>) &&
                                                                    (
                                                                    (4 * <sum_1030@98:0>) <= <<sum_1030@98:1>@101:0>))) ||
                                                                    (
                                                                    (
                                                                    (
                                                                    (
                                                                    3 * <sum_1030@98:0>) <=
                                                                    (
                                                                    2 + <<sum_1030@98:1>@101:0>)) &&
                                                                    (
                                                                    (
                                                                    (1 + <sum_1030@98:0>) <= <<sum_1030@98:1>@101:0>) &&
                                                                    (
                                                                    (
                                                                    4 * <sum_1030@98:0>) <=
                                                                    (
                                                                    6 + <<sum_1030@98:1>@101:0>)))) ||
                                                                    (
                                                                    (
                                                                    (
                                                                    (
                                                                    3 * <sum_1030@98:0>) <=
                                                                    (
                                                                    2 + <<sum_1030@98:1>@101:0>)) &&
                                                                    (
                                                                    (
                                                                    (1 + <sum_1030@98:0>) <= <<sum_1030@98:1>@101:0>) &&
                                                                    (
                                                                    (
                                                                    4 * <sum_1030@98:0>) <=
                                                                    (
                                                                    3 + <<sum_1030@98:1>@101:0>)))) ||
                                                                    (
                                                                    (
                                                                    (
                                                                    (
                                                                    3 * <sum_1030@98:0>) <=
                                                                    (
                                                                    2 + <<sum_1030@98:1>@101:0>)) &&
                                                                    (
                                                                    (
                                                                    (1 + <sum_1030@98:0>) <= <<sum_1030@98:1>@101:0>) &&
                                                                    (
                                                                    (
                                                                    4 * <sum_1030@98:0>) <=
                                                                    (
                                                                    5 + <<sum_1030@98:1>@101:0>)))) ||
                                                                    (
                                                                    (
                                                                    (
                                                                    (3 * <sum_1030@98:0>) <= <<sum_1030@98:1>@101:0>) &&
                                                                    (
                                                                    (
                                                                    (1 + <sum_1030@98:0>) <= <<sum_1030@98:1>@101:0>) &&
                                                                    (
                                                                    (4 * <sum_1030@98:0>) <= <<sum_1030@98:1>@101:0>))) ||
                                                                    (
                                                                    (
                                                                    (
                                                                    (3 * <sum_1030@98:0>) <= <<sum_1030@98:1>@101:0>) &&
                                                                    (
                                                                    (
                                                                    (1 + <sum_1030@98:0>) <= <<sum_1030@98:1>@101:0>) &&
                                                                    (
                                                                    (
                                                                    4 * <sum_1030@98:0>) <=
                                                                    (
                                                                    6 + <<sum_1030@98:1>@101:0>)))) ||
                                                                    (
                                                                    (
                                                                    (
                                                                    (3 * <sum_1030@98:0>) <= <<sum_1030@98:1>@101:0>) &&
                                                                    (
                                                                    (
                                                                    (1 + <sum_1030@98:0>) <= <<sum_1030@98:1>@101:0>) &&
                                                                    (
                                                                    (
                                                                    4 * <sum_1030@98:0>) <=
                                                                    (
                                                                    3 + <<sum_1030@98:1>@101:0>)))) ||
                                                                    (
                                                                    (
                                                                    (
                                                                    (3 * <sum_1030@98:0>) <= <<sum_1030@98:1>@101:0>) &&
                                                                    (
                                                                    (
                                                                    (1 + <sum_1030@98:0>) <= <<sum_1030@98:1>@101:0>) &&
                                                                    (
                                                                    (
                                                                    4 * <sum_1030@98:0>) <=
                                                                    (
                                                                    5 + <<sum_1030@98:1>@101:0>)))) ||
                                                                    (
                                                                    (
                                                                    (
                                                                    (1 + <sum_1030@98:0>) <= <<sum_1030@98:1>@101:0>) &&
                                                                    (
                                                                    (
                                                                    (
                                                                    3 * <sum_1030@98:0>) <=
                                                                    (
                                                                    2 + <<sum_1030@98:1>@101:0>)) &&
                                                                    (
                                                                    (4 * <sum_1030@98:0>) <= <<sum_1030@98:1>@101:0>))) ||
                                                                    (
                                                                    (
                                                                    (
                                                                    (1 + <sum_1030@98:0>) <= <<sum_1030@98:1>@101:0>) &&
                                                                    (
                                                                    (
                                                                    (
                                                                    3 * <sum_1030@98:0>) <=
                                                                    (
                                                                    2 + <<sum_1030@98:1>@101:0>)) &&
                                                                    (
                                                                    (
                                                                    4 * <sum_1030@98:0>) <=
                                                                    (
                                                                    6 + <<sum_1030@98:1>@101:0>)))) ||
                                                                    (
                                                                    (
                                                                    (
                                                                    (1 + <sum_1030@98:0>) <= <<sum_1030@98:1>@101:0>) &&
                                                                    (
                                                                    (
                                                                    (
                                                                    3 * <sum_1030@98:0>) <=
                                                                    (
                                                                    2 + <<sum_1030@98:1>@101:0>)) &&
                                                                    (
                                                                    (
                                                                    4 * <sum_1030@98:0>) <=
                                                                    (
                                                                    3 + <<sum_1030@98:1>@101:0>)))) ||
                                                                    (
                                                                    (
                                                                    (
                                                                    (1 + <sum_1030@98:0>) <= <<sum_1030@98:1>@101:0>) &&
                                                                    (
                                                                    (
                                                                    (
                                                                    3 * <sum_1030@98:0>) <=
                                                                    (
                                                                    2 + <<sum_1030@98:1>@101:0>)) &&
                                                                    (
                                                                    (
                                                                    4 * <sum_1030@98:0>) <=
                                                                    (
                                                                    5 + <<sum_1030@98:1>@101:0>)))) ||
                                                                    (
                                                                    (
                                                                    (
                                                                    (
                                                                    3 * <sum_1030@98:0>) <=
                                                                    (
                                                                    2 + <<sum_1030@98:1>@101:0>)) &&
                                                                    (
                                                                    (
                                                                    <sum_1030@98:0> <= <<sum_1030@98:1>@101:0>) &&
                                                                    (
                                                                    (4 * <sum_1030@98:0>) <= <<sum_1030@98:1>@101:0>))) ||
                                                                    (
                                                                    (
                                                                    (
                                                                    (
                                                                    3 * <sum_1030@98:0>) <=
                                                                    (
                                                                    2 + <<sum_1030@98:1>@101:0>)) &&
                                                                    (
                                                                    (
                                                                    <sum_1030@98:0> <= <<sum_1030@98:1>@101:0>) &&
                                                                    (
                                                                    (
                                                                    4 * <sum_1030@98:0>) <=
                                                                    (
                                                                    6 + <<sum_1030@98:1>@101:0>)))) ||
                                                                    (
                                                                    (
                                                                    (
                                                                    (
                                                                    3 * <sum_1030@98:0>) <=
                                                                    (
                                                                    2 + <<sum_1030@98:1>@101:0>)) &&
                                                                    (
                                                                    (
                                                                    <sum_1030@98:0> <= <<sum_1030@98:1>@101:0>) &&
                                                                    (
                                                                    (
                                                                    4 * <sum_1030@98:0>) <=
                                                                    (
                                                                    3 + <<sum_1030@98:1>@101:0>)))) ||
                                                                    (
                                                                    (
                                                                    (
                                                                    (
                                                                    3 * <sum_1030@98:0>) <=
                                                                    (
                                                                    2 + <<sum_1030@98:1>@101:0>)) &&
                                                                    (
                                                                    (
                                                                    <sum_1030@98:0> <= <<sum_1030@98:1>@101:0>) &&
                                                                    (
                                                                    (
                                                                    4 * <sum_1030@98:0>) <=
                                                                    (
                                                                    5 + <<sum_1030@98:1>@101:0>)))) ||
                                                                    (
                                                                    (
                                                                    (
                                                                    (3 * <sum_1030@98:0>) <= <<sum_1030@98:1>@101:0>) &&
                                                                    (
                                                                    (
                                                                    <sum_1030@98:0> <= <<sum_1030@98:1>@101:0>) &&
                                                                    (
                                                                    (4 * <sum_1030@98:0>) <= <<sum_1030@98:1>@101:0>))) ||
                                                                    (
                                                                    (
                                                                    (
                                                                    (3 * <sum_1030@98:0>) <= <<sum_1030@98:1>@101:0>) &&
                                                                    (
                                                                    (
                                                                    <sum_1030@98:0> <= <<sum_1030@98:1>@101:0>) &&
                                                                    (
                                                                    (
                                                                    4 * <sum_1030@98:0>) <=
                                                                    (
                                                                    6 + <<sum_1030@98:1>@101:0>)))) ||
                                                                    (
                                                                    (
                                                                    (
                                                                    (3 * <sum_1030@98:0>) <= <<sum_1030@98:1>@101:0>) &&
                                                                    (
                                                                    (
                                                                    <sum_1030@98:0> <= <<sum_1030@98:1>@101:0>) &&
                                                                    (
                                                                    (
                                                                    4 * <sum_1030@98:0>) <=
                                                                    (
                                                                    3 + <<sum_1030@98:1>@101:0>)))) ||
                                                                    (
                                                                    (
                                                                    (
                                                                    (3 * <sum_1030@98:0>) <= <<sum_1030@98:1>@101:0>) &&
                                                                    (
                                                                    (
                                                                    <sum_1030@98:0> <= <<sum_1030@98:1>@101:0>) &&
                                                                    (
                                                                    (
                                                                    4 * <sum_1030@98:0>) <=
                                                                    (
                                                                    5 + <<sum_1030@98:1>@101:0>)))) ||
                                                                    (
                                                                    (
                                                                    (
                                                                    <sum_1030@98:0> <= <<sum_1030@98:1>@101:0>) &&
                                                                    (
                                                                    (
                                                                    (
                                                                    3 * <sum_1030@98:0>) <=
                                                                    (
                                                                    2 + <<sum_1030@98:1>@101:0>)) &&
                                                                    (
                                                                    (4 * <sum_1030@98:0>) <= <<sum_1030@98:1>@101:0>))) ||
                                                                    (
                                                                    (
                                                                    (
                                                                    <sum_1030@98:0> <= <<sum_1030@98:1>@101:0>) &&
                                                                    (
                                                                    (
                                                                    (
                                                                    3 * <sum_1030@98:0>) <=
                                                                    (
                                                                    2 + <<sum_1030@98:1>@101:0>)) &&
                                                                    (
                                                                    (
                                                                    4 * <sum_1030@98:0>) <=
                                                                    (
                                                                    6 + <<sum_1030@98:1>@101:0>)))) ||
                                                                    (
                                                                    (
                                                                    (
                                                                    <sum_1030@98:0> <= <<sum_1030@98:1>@101:0>) &&
                                                                    (
                                                                    (
                                                                    (
                                                                    3 * <sum_1030@98:0>) <=
                                                                    (
                                                                    2 + <<sum_1030@98:1>@101:0>)) &&
                                                                    (
                                                                    (
                                                                    4 * <sum_1030@98:0>) <=
                                                                    (
                                                                    3 + <<sum_1030@98:1>@101:0>)))) ||
                                                                    (
                                                                    (
                                                                    (
                                                                    <sum_1030@98:0> <= <<sum_1030@98:1>@101:0>) &&
                                                                    (
                                                                    (
                                                                    (
                                                                    3 * <sum_1030@98:0>) <=
                                                                    (
                                                                    2 + <<sum_1030@98:1>@101:0>)) &&
                                                                    (
                                                                    (
                                                                    4 * <sum_1030@98:0>) <=
                                                                    (
                                                                    5 + <<sum_1030@98:1>@101:0>)))) ||
                                                                    (
                                                                    (
                                                                    (
                                                                    3 <= <sum_1030@98:0>) &&
                                                                    (
                                                                    (
                                                                    (3 + <sum_1030@98:0>) <= <<sum_1030@98:1>@101:0>) &&
                                                                    (
                                                                    (
                                                                    (
                                                                    3 * <sum_1030@98:0>) <=
                                                                    (
                                                                    3 + <<sum_1030@98:1>@101:0>)) &&
                                                                    (
                                                                    (4 * <sum_1030@98:0>) <= <<sum_1030@98:1>@101:0>)))) ||
                                                                    (
                                                                    (
                                                                    (
                                                                    3 <= <sum_1030@98:0>) &&
                                                                    (
                                                                    (
                                                                    (3 + <sum_1030@98:0>) <= <<sum_1030@98:1>@101:0>) &&
                                                                    (
                                                                    (
                                                                    (
                                                                    3 * <sum_1030@98:0>) <=
                                                                    (
                                                                    3 + <<sum_1030@98:1>@101:0>)) &&
                                                                    (
                                                                    (
                                                                    4 * <sum_1030@98:0>) <=
                                                                    (
                                                                    6 + <<sum_1030@98:1>@101:0>))))) ||
                                                                    (
                                                                    (
                                                                    (
                                                                    3 <= <sum_1030@98:0>) &&
                                                                    (
                                                                    (
                                                                    (3 + <sum_1030@98:0>) <= <<sum_1030@98:1>@101:0>) &&
                                                                    (
                                                                    (
                                                                    (
                                                                    3 * <sum_1030@98:0>) <=
                                                                    (
                                                                    3 + <<sum_1030@98:1>@101:0>)) &&
                                                                    (
                                                                    (
                                                                    4 * <sum_1030@98:0>) <=
                                                                    (
                                                                    3 + <<sum_1030@98:1>@101:0>))))) ||
                                                                    (
                                                                    (
                                                                    (
                                                                    3 <= <sum_1030@98:0>) &&
                                                                    (
                                                                    (
                                                                    (3 + <sum_1030@98:0>) <= <<sum_1030@98:1>@101:0>) &&
                                                                    (
                                                                    (
                                                                    (
                                                                    3 * <sum_1030@98:0>) <=
                                                                    (
                                                                    3 + <<sum_1030@98:1>@101:0>)) &&
                                                                    (
                                                                    (
                                                                    4 * <sum_1030@98:0>) <=
                                                                    (
                                                                    5 + <<sum_1030@98:1>@101:0>))))) ||
                                                                    (
                                                                    (
                                                                    (
                                                                    3 <= <sum_1030@98:0>) &&
                                                                    (
                                                                    (
                                                                    (3 + <sum_1030@98:0>) <= <<sum_1030@98:1>@101:0>) &&
                                                                    (
                                                                    (
                                                                    (3 * <sum_1030@98:0>) <= <<sum_1030@98:1>@101:0>) &&
                                                                    (
                                                                    (4 * <sum_1030@98:0>) <= <<sum_1030@98:1>@101:0>)))) ||
                                                                    (
                                                                    (
                                                                    (
                                                                    3 <= <sum_1030@98:0>) &&
                                                                    (
                                                                    (
                                                                    (3 + <sum_1030@98:0>) <= <<sum_1030@98:1>@101:0>) &&
                                                                    (
                                                                    (
                                                                    (3 * <sum_1030@98:0>) <= <<sum_1030@98:1>@101:0>) &&
                                                                    (
                                                                    (
                                                                    4 * <sum_1030@98:0>) <=
                                                                    (
                                                                    6 + <<sum_1030@98:1>@101:0>))))) ||
                                                                    (
                                                                    (
                                                                    (
                                                                    3 <= <sum_1030@98:0>) &&
                                                                    (
                                                                    (
                                                                    (3 + <sum_1030@98:0>) <= <<sum_1030@98:1>@101:0>) &&
                                                                    (
                                                                    (
                                                                    (3 * <sum_1030@98:0>) <= <<sum_1030@98:1>@101:0>) &&
                                                                    (
                                                                    (
                                                                    4 * <sum_1030@98:0>) <=
                                                                    (
                                                                    3 + <<sum_1030@98:1>@101:0>))))) ||
                                                                    (
                                                                    (
                                                                    (
                                                                    3 <= <sum_1030@98:0>) &&
                                                                    (
                                                                    (
                                                                    (3 + <sum_1030@98:0>) <= <<sum_1030@98:1>@101:0>) &&
                                                                    (
                                                                    (
                                                                    (3 * <sum_1030@98:0>) <= <<sum_1030@98:1>@101:0>) &&
                                                                    (
                                                                    (
                                                                    4 * <sum_1030@98:0>) <=
                                                                    (
                                                                    5 + <<sum_1030@98:1>@101:0>))))) ||
                                                                    (
                                                                    (
                                                                    (
                                                                    3 <= <sum_1030@98:0>) &&
                                                                    (
                                                                    (
                                                                    (3 + <sum_1030@98:0>) <= <<sum_1030@98:1>@101:0>) &&
                                                                    (
                                                                    (
                                                                    (
                                                                    3 * <sum_1030@98:0>) <=
                                                                    (
                                                                    2 + <<sum_1030@98:1>@101:0>)) &&
                                                                    (
                                                                    (4 * <sum_1030@98:0>) <= <<sum_1030@98:1>@101:0>)))) ||
                                                                    (
                                                                    (
                                                                    (
                                                                    3 <= <sum_1030@98:0>) &&
                                                                    (
                                                                    (
                                                                    (3 + <sum_1030@98:0>) <= <<sum_1030@98:1>@101:0>) &&
                                                                    (
                                                                    (
                                                                    (
                                                                    3 * <sum_1030@98:0>) <=
                                                                    (
                                                                    2 + <<sum_1030@98:1>@101:0>)) &&
                                                                    (
                                                                    (
                                                                    4 * <sum_1030@98:0>) <=
                                                                    (
                                                                    6 + <<sum_1030@98:1>@101:0>))))) ||
                                                                    (
                                                                    (
                                                                    (
                                                                    3 <= <sum_1030@98:0>) &&
                                                                    (
                                                                    (
                                                                    (3 + <sum_1030@98:0>) <= <<sum_1030@98:1>@101:0>) &&
                                                                    (
                                                                    (
                                                                    (
                                                                    3 * <sum_1030@98:0>) <=
                                                                    (
                                                                    2 + <<sum_1030@98:1>@101:0>)) &&
                                                                    (
                                                                    (
                                                                    4 * <sum_1030@98:0>) <=
                                                                    (
                                                                    3 + <<sum_1030@98:1>@101:0>))))) ||
                                                                    (
                                                                    (
                                                                    (
                                                                    3 <= <sum_1030@98:0>) &&
                                                                    (
                                                                    (
                                                                    (3 + <sum_1030@98:0>) <= <<sum_1030@98:1>@101:0>) &&
                                                                    (
                                                                    (
                                                                    (
                                                                    3 * <sum_1030@98:0>) <=
                                                                    (
                                                                    2 + <<sum_1030@98:1>@101:0>)) &&
                                                                    (
                                                                    (
                                                                    4 * <sum_1030@98:0>) <=
                                                                    (
                                                                    5 + <<sum_1030@98:1>@101:0>))))) ||
                                                                    (
                                                                    (
                                                                    (
                                                                    3 <= <sum_1030@98:0>) &&
                                                                    (
                                                                    (
                                                                    (1 + <sum_1030@98:0>) <= <<sum_1030@98:1>@101:0>) &&
                                                                    (
                                                                    (
                                                                    (
                                                                    3 * <sum_1030@98:0>) <=
                                                                    (
                                                                    3 + <<sum_1030@98:1>@101:0>)) &&
                                                                    (
                                                                    (4 * <sum_1030@98:0>) <= <<sum_1030@98:1>@101:0>)))) ||
                                                                    (
                                                                    (
                                                                    (
                                                                    3 <= <sum_1030@98:0>) &&
                                                                    (
                                                                    (
                                                                    (1 + <sum_1030@98:0>) <= <<sum_1030@98:1>@101:0>) &&
                                                                    (
                                                                    (
                                                                    (
                                                                    3 * <sum_1030@98:0>) <=
                                                                    (
                                                                    3 + <<sum_1030@98:1>@101:0>)) &&
                                                                    (
                                                                    (
                                                                    4 * <sum_1030@98:0>) <=
                                                                    (
                                                                    6 + <<sum_1030@98:1>@101:0>))))) ||
                                                                    (
                                                                    (
                                                                    (
                                                                    3 <= <sum_1030@98:0>) &&
                                                                    (
                                                                    (
                                                                    (1 + <sum_1030@98:0>) <= <<sum_1030@98:1>@101:0>) &&
                                                                    (
                                                                    (
                                                                    (
                                                                    3 * <sum_1030@98:0>) <=
                                                                    (
                                                                    3 + <<sum_1030@98:1>@101:0>)) &&
                                                                    (
                                                                    (
                                                                    4 * <sum_1030@98:0>) <=
                                                                    (
                                                                    3 + <<sum_1030@98:1>@101:0>))))) ||
                                                                    (
                                                                    (
                                                                    (
                                                                    3 <= <sum_1030@98:0>) &&
                                                                    (
                                                                    (
                                                                    (1 + <sum_1030@98:0>) <= <<sum_1030@98:1>@101:0>) &&
                                                                    (
                                                                    (
                                                                    (
                                                                    3 * <sum_1030@98:0>) <=
                                                                    (
                                                                    3 + <<sum_1030@98:1>@101:0>)) &&
                                                                    (
                                                                    (
                                                                    4 * <sum_1030@98:0>) <=
                                                                    (
                                                                    5 + <<sum_1030@98:1>@101:0>))))) ||
                                                                    (
                                                                    (
                                                                    (
                                                                    3 <= <sum_1030@98:0>) &&
                                                                    (
                                                                    (
                                                                    (1 + <sum_1030@98:0>) <= <<sum_1030@98:1>@101:0>) &&
                                                                    (
                                                                    (
                                                                    (3 * <sum_1030@98:0>) <= <<sum_1030@98:1>@101:0>) &&
                                                                    (
                                                                    (4 * <sum_1030@98:0>) <= <<sum_1030@98:1>@101:0>)))) ||
                                                                    (
                                                                    (
                                                                    (
                                                                    3 <= <sum_1030@98:0>) &&
                                                                    (
                                                                    (
                                                                    (1 + <sum_1030@98:0>) <= <<sum_1030@98:1>@101:0>) &&
                                                                    (
                                                                    (
                                                                    (3 * <sum_1030@98:0>) <= <<sum_1030@98:1>@101:0>) &&
                                                                    (
                                                                    (
                                                                    4 * <sum_1030@98:0>) <=
                                                                    (
                                                                    6 + <<sum_1030@98:1>@101:0>))))) ||
                                                                    (
                                                                    (
                                                                    (
                                                                    3 <= <sum_1030@98:0>) &&
                                                                    (
                                                                    (
                                                                    (1 + <sum_1030@98:0>) <= <<sum_1030@98:1>@101:0>) &&
                                                                    (
                                                                    (
                                                                    (3 * <sum_1030@98:0>) <= <<sum_1030@98:1>@101:0>) &&
                                                                    (
                                                                    (
                                                                    4 * <sum_1030@98:0>) <=
                                                                    (
                                                                    3 + <<sum_1030@98:1>@101:0>))))) ||
                                                                    (
                                                                    (
                                                                    (
                                                                    3 <= <sum_1030@98:0>) &&
                                                                    (
                                                                    (
                                                                    (1 + <sum_1030@98:0>) <= <<sum_1030@98:1>@101:0>) &&
                                                                    (
                                                                    (
                                                                    (3 * <sum_1030@98:0>) <= <<sum_1030@98:1>@101:0>) &&
                                                                    (
                                                                    (
                                                                    4 * <sum_1030@98:0>) <=
                                                                    (
                                                                    5 + <<sum_1030@98:1>@101:0>))))) ||
                                                                    (
                                                                    (
                                                                    (
                                                                    3 <= <sum_1030@98:0>) &&
                                                                    (
                                                                    (
                                                                    (1 + <sum_1030@98:0>) <= <<sum_1030@98:1>@101:0>) &&
                                                                    (
                                                                    (
                                                                    (
                                                                    3 * <sum_1030@98:0>) <=
                                                                    (
                                                                    2 + <<sum_1030@98:1>@101:0>)) &&
                                                                    (
                                                                    (4 * <sum_1030@98:0>) <= <<sum_1030@98:1>@101:0>)))) ||
                                                                    (
                                                                    (
                                                                    (
                                                                    3 <= <sum_1030@98:0>) &&
                                                                    (
                                                                    (
                                                                    (1 + <sum_1030@98:0>) <= <<sum_1030@98:1>@101:0>) &&
                                                                    (
                                                                    (
                                                                    (
                                                                    3 * <sum_1030@98:0>) <=
                                                                    (
                                                                    2 + <<sum_1030@98:1>@101:0>)) &&
                                                                    (
                                                                    (
                                                                    4 * <sum_1030@98:0>) <=
                                                                    (
                                                                    6 + <<sum_1030@98:1>@101:0>))))) ||
                                                                    (
                                                                    (
                                                                    (
                                                                    3 <= <sum_1030@98:0>) &&
                                                                    (
                                                                    (
                                                                    (1 + <sum_1030@98:0>) <= <<sum_1030@98:1>@101:0>) &&
                                                                    (
                                                                    (
                                                                    (
                                                                    3 * <sum_1030@98:0>) <=
                                                                    (
                                                                    2 + <<sum_1030@98:1>@101:0>)) &&
                                                                    (
                                                                    (
                                                                    4 * <sum_1030@98:0>) <=
                                                                    (
                                                                    3 + <<sum_1030@98:1>@101:0>))))) ||
                                                                    (
                                                                    (
                                                                    (
                                                                    3 <= <sum_1030@98:0>) &&
                                                                    (
                                                                    (
                                                                    (1 + <sum_1030@98:0>) <= <<sum_1030@98:1>@101:0>) &&
                                                                    (
                                                                    (
                                                                    (
                                                                    3 * <sum_1030@98:0>) <=
                                                                    (
                                                                    2 + <<sum_1030@98:1>@101:0>)) &&
                                                                    (
                                                                    (
                                                                    4 * <sum_1030@98:0>) <=
                                                                    (
                                                                    5 + <<sum_1030@98:1>@101:0>))))) ||
                                                                    (
                                                                    (
                                                                    (
                                                                    3 <= <sum_1030@98:0>) &&
                                                                    (
                                                                    (
                                                                    <sum_1030@98:0> <= <<sum_1030@98:1>@101:0>) &&
                                                                    (
                                                                    (
                                                                    (
                                                                    3 * <sum_1030@98:0>) <=
                                                                    (
                                                                    3 + <<sum_1030@98:1>@101:0>)) &&
                                                                    (
                                                                    (4 * <sum_1030@98:0>) <= <<sum_1030@98:1>@101:0>)))) ||
                                                                    (
                                                                    (
                                                                    (
                                                                    3 <= <sum_1030@98:0>) &&
                                                                    (
                                                                    (
                                                                    <sum_1030@98:0> <= <<sum_1030@98:1>@101:0>) &&
                                                                    (
                                                                    (
                                                                    (
                                                                    3 * <sum_1030@98:0>) <=
                                                                    (
                                                                    3 + <<sum_1030@98:1>@101:0>)) &&
                                                                    (
                                                                    (
                                                                    4 * <sum_1030@98:0>) <=
                                                                    (
                                                                    6 + <<sum_1030@98:1>@101:0>))))) ||
                                                                    (
                                                                    (
                                                                    (
                                                                    3 <= <sum_1030@98:0>) &&
                                                                    (
                                                                    (
                                                                    <sum_1030@98:0> <= <<sum_1030@98:1>@101:0>) &&
                                                                    (
                                                                    (
                                                                    (
                                                                    3 * <sum_1030@98:0>) <=
                                                                    (
                                                                    3 + <<sum_1030@98:1>@101:0>)) &&
                                                                    (
                                                                    (
                                                                    4 * <sum_1030@98:0>) <=
                                                                    (
                                                                    3 + <<sum_1030@98:1>@101:0>))))) ||
                                                                    (
                                                                    (
                                                                    (
                                                                    3 <= <sum_1030@98:0>) &&
                                                                    (
                                                                    (
                                                                    <sum_1030@98:0> <= <<sum_1030@98:1>@101:0>) &&
                                                                    (
                                                                    (
                                                                    (
                                                                    3 * <sum_1030@98:0>) <=
                                                                    (
                                                                    3 + <<sum_1030@98:1>@101:0>)) &&
                                                                    (
                                                                    (
                                                                    4 * <sum_1030@98:0>) <=
                                                                    (
                                                                    5 + <<sum_1030@98:1>@101:0>))))) ||
                                                                    (
                                                                    (
                                                                    (
                                                                    3 <= <sum_1030@98:0>) &&
                                                                    (
                                                                    (
                                                                    <sum_1030@98:0> <= <<sum_1030@98:1>@101:0>) &&
                                                                    (
                                                                    (
                                                                    (3 * <sum_1030@98:0>) <= <<sum_1030@98:1>@101:0>) &&
                                                                    (
                                                                    (4 * <sum_1030@98:0>) <= <<sum_1030@98:1>@101:0>)))) ||
                                                                    (
                                                                    (
                                                                    (
                                                                    3 <= <sum_1030@98:0>) &&
                                                                    (
                                                                    (
                                                                    <sum_1030@98:0> <= <<sum_1030@98:1>@101:0>) &&
                                                                    (
                                                                    (
                                                                    (3 * <sum_1030@98:0>) <= <<sum_1030@98:1>@101:0>) &&
                                                                    (
                                                                    (
                                                                    4 * <sum_1030@98:0>) <=
                                                                    (
                                                                    6 + <<sum_1030@98:1>@101:0>))))) ||
                                                                    (
                                                                    (
                                                                    (
                                                                    3 <= <sum_1030@98:0>) &&
                                                                    (
                                                                    (
                                                                    <sum_1030@98:0> <= <<sum_1030@98:1>@101:0>) &&
                                                                    (
                                                                    (
                                                                    (3 * <sum_1030@98:0>) <= <<sum_1030@98:1>@101:0>) &&
                                                                    (
                                                                    (
                                                                    4 * <sum_1030@98:0>) <=
                                                                    (
                                                                    3 + <<sum_1030@98:1>@101:0>))))) ||
                                                                    (
                                                                    (
                                                                    (
                                                                    3 <= <sum_1030@98:0>) &&
                                                                    (
                                                                    (
                                                                    <sum_1030@98:0> <= <<sum_1030@98:1>@101:0>) &&
                                                                    (
                                                                    (
                                                                    (3 * <sum_1030@98:0>) <= <<sum_1030@98:1>@101:0>) &&
                                                                    (
                                                                    (
                                                                    4 * <sum_1030@98:0>) <=
                                                                    (
                                                                    5 + <<sum_1030@98:1>@101:0>))))) ||
                                                                    (
                                                                    (
                                                                    3 <= <sum_1030@98:0>) &&
                                                                    (
                                                                    (
                                                                    <sum_1030@98:0> <= <<sum_1030@98:1>@101:0>) &&
                                                                    (
                                                                    (
                                                                    (
                                                                    3 * <sum_1030@98:0>) <=
                                                                    (
                                                                    2 + <<sum_1030@98:1>@101:0>)) &&
                                                                    (
                                                                    (
                                                                    4 * <sum_1030@98:0>) <=
                                                                    (
                                                                    6 + <<sum_1030@98:1>@101:0>)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
                    output: (((3 <= <sum_1030@98:0>) &&
                              ((<sum_1030@98:0> <= <<sum_1030@98:1>@101:0>) &&
                               (((3 * <sum_1030@98:0>) <= (3 + <<sum_1030@98:1>@101:0>)) &&
                                ((4 * <sum_1030@98:0>) <= (6 + <<sum_1030@98:1>@101:0>))))) ||
                             (((2 * <sum_1030@98:0>) <= (1 + <<sum_1030@98:1>@101:0>)) &&
                              ((<sum_1030@98:0> <= <<sum_1030@98:1>@101:0>) &&
                               (((3 * <sum_1030@98:0>) <= (3 + <<sum_1030@98:1>@101:0>)) &&
                                ((4 * <sum_1030@98:0>) <= (5 + <<sum_1030@98:1>@101:0>))))))
                  end minimizing # of disjunctions(133104)[10] (49.841423 sec.)
                  begin minimizing # of conjunctions(2397091)[10]
                    input: ((3 <= <sum_1030@98:0>) &&
                            ((<sum_1030@98:0> <= <<sum_1030@98:1>@101:0>) &&
                             (((3 * <sum_1030@98:0>) <= (3 + <<sum_1030@98:1>@101:0>)) &&
                              ((4 * <sum_1030@98:0>) <= (6 + <<sum_1030@98:1>@101:0>)))))
                    output: (((4 * <sum_1030@98:0>) <= (6 + <<sum_1030@98:1>@101:0>)) &&
                             (((3 * <sum_1030@98:0>) <= (3 + <<sum_1030@98:1>@101:0>)) &&
                              (<sum_1030@98:0> <= <<sum_1030@98:1>@101:0>)))
                  end minimizing # of conjunctions(2397091)[10] (0.002000 sec.)
                  begin minimizing # of conjunctions(2397632)[10]
                    input: (((2 * <sum_1030@98:0>) <= (1 + <<sum_1030@98:1>@101:0>)) &&
                            ((<sum_1030@98:0> <= <<sum_1030@98:1>@101:0>) &&
                             (((3 * <sum_1030@98:0>) <= (3 + <<sum_1030@98:1>@101:0>)) &&
                              ((4 * <sum_1030@98:0>) <= (5 + <<sum_1030@98:1>@101:0>)))))
                    output: (((4 * <sum_1030@98:0>) <= (5 + <<sum_1030@98:1>@101:0>)) &&
                             (<sum_1030@98:0> <= <<sum_1030@98:1>@101:0>))
                  end minimizing # of conjunctions(2397632)[10] (0.001999 sec.)
                  
                end InterpProver.interpolate_simplify(99690)[9] (51.246209 sec.)
                
              end InterpProver.interpolate_check(99689)[8] (51.247209 sec.)
              output: ((((4 * <sum_1030@98:0>) <= (6 + <<sum_1030@98:1>@101:0>)) &&
                        (((3 * <sum_1030@98:0>) <= (3 + <<sum_1030@98:1>@101:0>)) &&
                         (<sum_1030@98:0> <= <<sum_1030@98:1>@101:0>))) ||
                       (((4 * <sum_1030@98:0>) <= (5 + <<sum_1030@98:1>@101:0>)) &&
                        (<sum_1030@98:0> <= <<sum_1030@98:1>@101:0>)))
            end InterpProver.interpolate_log(99688)[7] (51.247209 sec.)
            
          end InterpProver.interpolate_fresh(99687)[6] (51.247209 sec.)
          
        end InterpProver.interpolate(99686)[5] (51.247209 sec.)
        output:
          P[<<sum_1030@98:1>@101:0>](<sum_1030@98:0>:int,<<sum_1030@98:1>@101:0>:int) =
          ((((4 * <sum_1030@98:0>) <= (6 + <<sum_1030@98:1>@101:0>)) &&
            (((3 * <sum_1030@98:0>) <= (3 + <<sum_1030@98:1>@101:0>)) && (<sum_1030@98:0> <= <<sum_1030@98:1>@101:0>))) ||
           (((4 * <sum_1030@98:0>) <= (5 + <<sum_1030@98:1>@101:0>)) && (<sum_1030@98:0> <= <<sum_1030@98:1>@101:0>)))
          P[<<sum_1030@95:1>@107:0>](<sum_1030@98:0>:int,<<sum_1030@98:1>@101:0>:int) =
          ((((4 * <sum_1030@98:0>) <= (6 + <<sum_1030@98:1>@101:0>)) &&
            (((3 * <sum_1030@98:0>) <= (3 + <<sum_1030@98:1>@101:0>)) && (<sum_1030@98:0> <= <<sum_1030@98:1>@101:0>))) ||
           (((4 * <sum_1030@98:0>) <= (5 + <<sum_1030@98:1>@101:0>)) && (<sum_1030@98:0> <= <<sum_1030@98:1>@101:0>)))
          P[<<sum_1030@92:1>@113:0>](<sum_1030@98:0>:int,<<sum_1030@98:1>@101:0>:int) =
          ((((4 * <sum_1030@98:0>) <= (6 + <<sum_1030@98:1>@101:0>)) &&
            (((3 * <sum_1030@98:0>) <= (3 + <<sum_1030@98:1>@101:0>)) && (<sum_1030@98:0> <= <<sum_1030@98:1>@101:0>))) ||
           (((4 * <sum_1030@98:0>) <= (5 + <<sum_1030@98:1>@101:0>)) && (<sum_1030@98:0> <= <<sum_1030@98:1>@101:0>)))
          P[<<sum_1030@89:1>@119:0>](<sum_1030@98:0>:int,<<sum_1030@98:1>@101:0>:int) =
          ((((4 * <sum_1030@98:0>) <= (6 + <<sum_1030@98:1>@101:0>)) &&
            (((3 * <sum_1030@98:0>) <= (3 + <<sum_1030@98:1>@101:0>)) && (<sum_1030@98:0> <= <<sum_1030@98:1>@101:0>))) ||
           (((4 * <sum_1030@98:0>) <= (5 + <<sum_1030@98:1>@101:0>)) && (<sum_1030@98:0> <= <<sum_1030@98:1>@101:0>)))
      end ApronInterface.convex_hull_interpolate(99685)[4] (51.248209 sec.)
      Horn clauses:
        P[<fail_1170@124:0>](<fail_1170@124:0>:bool)|- bot
        
        P[<sum_1030@89:0>](<sum_1030@89:0>:int),
        ((<sum_1030@89:0> > 0) &&
         (((2 * <sum_1030@89:0>) <= (1 + <<sum_1030@89:1>@119:0>)) &&
          (((<sum_1030@89:0> > <<sum_1030@89:1>@119:0>) ||
            (((4 * <sum_1030@89:0>) > (5 + <<sum_1030@89:1>@119:0>)) &&
             (((4 * <sum_1030@89:0>) > (6 + <<sum_1030@89:1>@119:0>)) ||
              ((3 * <sum_1030@89:0>) > (3 + <<sum_1030@89:1>@119:0>))))) &&
           (((5 * <sum_1030@89:0>) <= (9 + <<sum_1030@89:1>@119:0>)) ||
            (((5 * <sum_1030@89:0>) <= (10 + <<sum_1030@89:1>@119:0>)) &&
             ((4 * <sum_1030@89:0>) <= (6 + <<sum_1030@89:1>@119:0>))))))) |- bot
        
        P[<sum_1030@92:0>](<sum_1030@92:0>:int),
        ((<sum_1030@92:0> > 0) &&
         (((2 * <sum_1030@92:0>) <= (1 + <<sum_1030@92:1>@113:0>)) &&
          (((<sum_1030@92:0> > <<sum_1030@92:1>@113:0>) ||
            (((4 * <sum_1030@92:0>) > (5 + <<sum_1030@92:1>@113:0>)) &&
             (((4 * <sum_1030@92:0>) > (6 + <<sum_1030@92:1>@113:0>)) ||
              ((3 * <sum_1030@92:0>) > (3 + <<sum_1030@92:1>@113:0>))))) &&
           (((5 * <sum_1030@92:0>) <= (9 + <<sum_1030@92:1>@113:0>)) ||
            (((5 * <sum_1030@92:0>) <= (10 + <<sum_1030@92:1>@113:0>)) &&
             ((4 * <sum_1030@92:0>) <= (6 + <<sum_1030@92:1>@113:0>))))))) |- bot
        
        P[<sum_1030@95:0>](<sum_1030@95:0>:int),
        ((<sum_1030@95:0> > 0) &&
         (((2 * <sum_1030@95:0>) <= (1 + <<sum_1030@95:1>@107:0>)) &&
          (((<sum_1030@95:0> > <<sum_1030@95:1>@107:0>) ||
            (((4 * <sum_1030@95:0>) > (5 + <<sum_1030@95:1>@107:0>)) &&
             (((4 * <sum_1030@95:0>) > (6 + <<sum_1030@95:1>@107:0>)) ||
              ((3 * <sum_1030@95:0>) > (3 + <<sum_1030@95:1>@107:0>))))) &&
           (((5 * <sum_1030@95:0>) <= (9 + <<sum_1030@95:1>@107:0>)) ||
            (((5 * <sum_1030@95:0>) <= (10 + <<sum_1030@95:1>@107:0>)) &&
             ((4 * <sum_1030@95:0>) <= (6 + <<sum_1030@95:1>@107:0>))))))) |- bot
        
        P[<sum_1030@98:0>](<sum_1030@98:0>:int),
        ((<sum_1030@98:0> <= 0) &&
         ((<sum_1030@98:0> > 0) ||
          (((4 * <sum_1030@98:0>) > 5) && (((2 * <sum_1030@98:0>) > 3) || (<sum_1030@98:0> > 1))))) |- bot
        
        P[<sum_1030@95:0>]((1 + <sum_1030@98:0>):int), ((1 + <sum_1030@98:0>) > 0)
        |- P[<sum_1030@98:0>](<sum_1030@98:0>:int)
        
        P[<sum_1030@92:0>]((1 + <sum_1030@95:0>):int), ((1 + <sum_1030@95:0>) > 0)
        |- P[<sum_1030@95:0>](<sum_1030@95:0>:int)
        
        P[<sum_1030@89:0>]((1 + <sum_1030@92:0>):int), ((1 + <sum_1030@92:0>) > 0)
        |- P[<sum_1030@92:0>](<sum_1030@92:0>:int)
        
        |- P[<sum_1030@89:0>](<sum_1030@89:0>:int)
      lower bounds:
        P[<sum_1030@89:0>](<sum_1030@89:0>:int) = true
        P[<fail_1170@124:0>](var241:bool) = false
        P[<sum_1030@92:0>](<sum_1030@92:0>:int) = ((1 + <sum_1030@92:0>) > 0)
        P[<sum_1030@95:0>](<sum_1030@95:0>:int) = ((1 + <sum_1030@95:0>) > 0)
        P[<sum_1030@98:0>](<sum_1030@98:0>:int) = ((1 + <sum_1030@98:0>) > 0)
      upper bounds:
        P[<sum_1030@98:0>](var256:int) =
        ((var256 > 0) || ((var256 <= 0) && (((4 * var256) <= 5) || (((2 * var256) <= 3) && (var256 <= 1)))))
        P[<sum_1030@95:0>](var253:int) =
        ((var253 <= 0) ||
         (((2 * var253) > (1 + <<sum_1030@95:1>@107:0>)) ||
          (((var253 <= <<sum_1030@95:1>@107:0>) &&
            (((4 * var253) <= (5 + <<sum_1030@95:1>@107:0>)) ||
             (((4 * var253) <= (6 + <<sum_1030@95:1>@107:0>)) && ((3 * var253) <= (3 + <<sum_1030@95:1>@107:0>))))) ||
           (((5 * var253) > (9 + <<sum_1030@95:1>@107:0>)) &&
            (((5 * var253) > (10 + <<sum_1030@95:1>@107:0>)) || ((4 * var253) > (6 + <<sum_1030@95:1>@107:0>)))))))
        P[<sum_1030@92:0>](var249:int) =
        (((var249 <= 0) ||
          (((2 * var249) > (1 + <<sum_1030@92:1>@113:0>)) ||
           (((var249 <= <<sum_1030@92:1>@113:0>) &&
             (((4 * var249) <= (5 + <<sum_1030@92:1>@113:0>)) ||
              (((4 * var249) <= (6 + <<sum_1030@92:1>@113:0>)) && ((3 * var249) <= (3 + <<sum_1030@92:1>@113:0>))))) ||
            (((5 * var249) > (9 + <<sum_1030@92:1>@113:0>)) &&
             (((5 * var249) > (10 + <<sum_1030@92:1>@113:0>)) || ((4 * var249) > (6 + <<sum_1030@92:1>@113:0>))))))) &&
         ((var249 <= 1) ||
          (((2 * var249) > (3 + <<sum_1030@95:1>@107:0>)) ||
           ((((5 * var249) > (14 + <<sum_1030@95:1>@107:0>)) &&
             (((5 * var249) > (15 + <<sum_1030@95:1>@107:0>)) || ((4 * var249) > (10 + <<sum_1030@95:1>@107:0>)))) ||
            ((var249 <= (1 + <<sum_1030@95:1>@107:0>)) &&
             (((4 * var249) <= (9 + <<sum_1030@95:1>@107:0>)) ||
              (((4 * var249) <= (10 + <<sum_1030@95:1>@107:0>)) && ((3 * var249) <= (6 + <<sum_1030@95:1>@107:0>)))))))))
        P[<sum_1030@89:0>](var244:int) =
        (((var244 <= 0) ||
          (((2 * var244) > (1 + <<sum_1030@89:1>@119:0>)) ||
           (((var244 <= <<sum_1030@89:1>@119:0>) &&
             (((4 * var244) <= (5 + <<sum_1030@89:1>@119:0>)) ||
              (((4 * var244) <= (6 + <<sum_1030@89:1>@119:0>)) && ((3 * var244) <= (3 + <<sum_1030@89:1>@119:0>))))) ||
            (((5 * var244) > (9 + <<sum_1030@89:1>@119:0>)) &&
             (((5 * var244) > (10 + <<sum_1030@89:1>@119:0>)) || ((4 * var244) > (6 + <<sum_1030@89:1>@119:0>))))))) &&
         (((var244 <= 1) ||
           (((2 * var244) > (3 + <<sum_1030@92:1>@113:0>)) ||
            ((((5 * var244) > (14 + <<sum_1030@92:1>@113:0>)) &&
              (((5 * var244) > (15 + <<sum_1030@92:1>@113:0>)) || ((4 * var244) > (10 + <<sum_1030@92:1>@113:0>)))) ||
             ((var244 <= (1 + <<sum_1030@92:1>@113:0>)) &&
              (((4 * var244) <= (9 + <<sum_1030@92:1>@113:0>)) ||
               (((4 * var244) <= (10 + <<sum_1030@92:1>@113:0>)) && ((3 * var244) <= (6 + <<sum_1030@92:1>@113:0>)))))))) &&
          ((var244 <= 2) ||
           (((2 * var244) > (5 + <<sum_1030@95:1>@107:0>)) ||
            ((((5 * var244) > (19 + <<sum_1030@95:1>@107:0>)) &&
              (((5 * var244) > (20 + <<sum_1030@95:1>@107:0>)) || ((4 * var244) > (14 + <<sum_1030@95:1>@107:0>)))) ||
             ((var244 <= (2 + <<sum_1030@95:1>@107:0>)) &&
              (((4 * var244) <= (13 + <<sum_1030@95:1>@107:0>)) ||
               (((4 * var244) <= (14 + <<sum_1030@95:1>@107:0>)) && ((3 * var244) <= (9 + <<sum_1030@95:1>@107:0>))))))))))
      begin GenHcSolver.classify_pids(2493168)[4]
        output:
          [<sum_1030@89:0>;<sum_1030@92:0>;<sum_1030@95:0>;<sum_1030@98:0>]
      end GenHcSolver.classify_pids(2493168)[4] (0.013998 sec.)
      begin ApronInterface.convex_hull_interpolate(2497750)[4]
        lb:true
        nub:((not
                (((<sum_1030@89:0> <= 0) ||
                  (((2 * <sum_1030@89:0>) > (1 + var273)) ||
                   (((<sum_1030@89:0> <= var273) &&
                     (((4 * <sum_1030@89:0>) <= (5 + var273)) ||
                      (((4 * <sum_1030@89:0>) <= (6 + var273)) && ((3 * <sum_1030@89:0>) <= (3 + var273))))) ||
                    (((5 * <sum_1030@89:0>) > (9 + var273)) &&
                     (((5 * <sum_1030@89:0>) > (10 + var273)) || ((4 * <sum_1030@89:0>) > (6 + var273))))))) &&
                 (((<sum_1030@89:0> <= 1) ||
                   (((2 * <sum_1030@89:0>) > (3 + var274)) ||
                    ((((5 * <sum_1030@89:0>) > (14 + var274)) &&
                      (((5 * <sum_1030@89:0>) > (15 + var274)) || ((4 * <sum_1030@89:0>) > (10 + var274)))) ||
                     ((<sum_1030@89:0> <= (1 + var274)) &&
                      (((4 * <sum_1030@89:0>) <= (9 + var274)) ||
                       (((4 * <sum_1030@89:0>) <= (10 + var274)) && ((3 * <sum_1030@89:0>) <= (6 + var274)))))))) &&
                  ((<sum_1030@89:0> <= 2) ||
                   (((2 * <sum_1030@89:0>) > (5 + var275)) ||
                    ((((5 * <sum_1030@89:0>) > (19 + var275)) &&
                      (((5 * <sum_1030@89:0>) > (20 + var275)) || ((4 * <sum_1030@89:0>) > (14 + var275)))) ||
                     ((<sum_1030@89:0> <= (2 + var275)) &&
                      (((4 * <sum_1030@89:0>) <= (13 + var275)) ||
                       (((4 * <sum_1030@89:0>) <= (14 + var275)) && ((3 * <sum_1030@89:0>) <= (9 + var275))))))))))) ||
             ((not
                 (((<sum_1030@89:0> <= 0) ||
                   (((2 * <sum_1030@89:0>) > (1 + var276)) ||
                    (((<sum_1030@89:0> <= var276) &&
                      (((4 * <sum_1030@89:0>) <= (5 + var276)) ||
                       (((4 * <sum_1030@89:0>) <= (6 + var276)) && ((3 * <sum_1030@89:0>) <= (3 + var276))))) ||
                     (((5 * <sum_1030@89:0>) > (9 + var276)) &&
                      (((5 * <sum_1030@89:0>) > (10 + var276)) || ((4 * <sum_1030@89:0>) > (6 + var276))))))) &&
                  ((<sum_1030@89:0> <= 1) ||
                   (((2 * <sum_1030@89:0>) > (3 + var277)) ||
                    ((((5 * <sum_1030@89:0>) > (14 + var277)) &&
                      (((5 * <sum_1030@89:0>) > (15 + var277)) || ((4 * <sum_1030@89:0>) > (10 + var277)))) ||
                     ((<sum_1030@89:0> <= (1 + var277)) &&
                      (((4 * <sum_1030@89:0>) <= (9 + var277)) ||
                       (((4 * <sum_1030@89:0>) <= (10 + var277)) && ((3 * <sum_1030@89:0>) <= (6 + var277)))))))))) ||
              ((not
                  ((<sum_1030@89:0> <= 0) ||
                   (((2 * <sum_1030@89:0>) > (1 + var278)) ||
                    (((<sum_1030@89:0> <= var278) &&
                      (((4 * <sum_1030@89:0>) <= (5 + var278)) ||
                       (((4 * <sum_1030@89:0>) <= (6 + var278)) && ((3 * <sum_1030@89:0>) <= (3 + var278))))) ||
                     (((5 * <sum_1030@89:0>) > (9 + var278)) &&
                      (((5 * <sum_1030@89:0>) > (10 + var278)) || ((4 * <sum_1030@89:0>) > (6 + var278)))))))) ||
               (not
                  ((<sum_1030@89:0> > 0) ||
                   ((<sum_1030@89:0> <= 0) &&
                    (((4 * <sum_1030@89:0>) <= 5) || (((2 * <sum_1030@89:0>) <= 3) && (<sum_1030@89:0> <= 1)))))))))
        lb':true
        nub':((not
                 (((<sum_1030@89:0> <= 0) ||
                   (((2 * <sum_1030@89:0>) > (1 + var273)) ||
                    (((<sum_1030@89:0> <= var273) &&
                      (((4 * <sum_1030@89:0>) <= (5 + var273)) ||
                       (((4 * <sum_1030@89:0>) <= (6 + var273)) && ((3 * <sum_1030@89:0>) <= (3 + var273))))) ||
                     (((5 * <sum_1030@89:0>) > (9 + var273)) &&
                      (((5 * <sum_1030@89:0>) > (10 + var273)) || ((4 * <sum_1030@89:0>) > (6 + var273))))))) &&
                  (((<sum_1030@89:0> <= 1) ||
                    (((2 * <sum_1030@89:0>) > (3 + var274)) ||
                     ((((5 * <sum_1030@89:0>) > (14 + var274)) &&
                       (((5 * <sum_1030@89:0>) > (15 + var274)) || ((4 * <sum_1030@89:0>) > (10 + var274)))) ||
                      ((<sum_1030@89:0> <= (1 + var274)) &&
                       (((4 * <sum_1030@89:0>) <= (9 + var274)) ||
                        (((4 * <sum_1030@89:0>) <= (10 + var274)) && ((3 * <sum_1030@89:0>) <= (6 + var274)))))))) &&
                   ((<sum_1030@89:0> <= 2) ||
                    (((2 * <sum_1030@89:0>) > (5 + var275)) ||
                     ((((5 * <sum_1030@89:0>) > (19 + var275)) &&
                       (((5 * <sum_1030@89:0>) > (20 + var275)) || ((4 * <sum_1030@89:0>) > (14 + var275)))) ||
                      ((<sum_1030@89:0> <= (2 + var275)) &&
                       (((4 * <sum_1030@89:0>) <= (13 + var275)) ||
                        (((4 * <sum_1030@89:0>) <= (14 + var275)) && ((3 * <sum_1030@89:0>) <= (9 + var275))))))))))) ||
              ((not
                  (((<sum_1030@89:0> <= 0) ||
                    (((2 * <sum_1030@89:0>) > (1 + var276)) ||
                     (((<sum_1030@89:0> <= var276) &&
                       (((4 * <sum_1030@89:0>) <= (5 + var276)) ||
                        (((4 * <sum_1030@89:0>) <= (6 + var276)) && ((3 * <sum_1030@89:0>) <= (3 + var276))))) ||
                      (((5 * <sum_1030@89:0>) > (9 + var276)) &&
                       (((5 * <sum_1030@89:0>) > (10 + var276)) || ((4 * <sum_1030@89:0>) > (6 + var276))))))) &&
                   ((<sum_1030@89:0> <= 1) ||
                    (((2 * <sum_1030@89:0>) > (3 + var277)) ||
                     ((((5 * <sum_1030@89:0>) > (14 + var277)) &&
                       (((5 * <sum_1030@89:0>) > (15 + var277)) || ((4 * <sum_1030@89:0>) > (10 + var277)))) ||
                      ((<sum_1030@89:0> <= (1 + var277)) &&
                       (((4 * <sum_1030@89:0>) <= (9 + var277)) ||
                        (((4 * <sum_1030@89:0>) <= (10 + var277)) && ((3 * <sum_1030@89:0>) <= (6 + var277)))))))))) ||
               ((not
                   ((<sum_1030@89:0> <= 0) ||
                    (((2 * <sum_1030@89:0>) > (1 + var278)) ||
                     (((<sum_1030@89:0> <= var278) &&
                       (((4 * <sum_1030@89:0>) <= (5 + var278)) ||
                        (((4 * <sum_1030@89:0>) <= (6 + var278)) && ((3 * <sum_1030@89:0>) <= (3 + var278))))) ||
                      (((5 * <sum_1030@89:0>) > (9 + var278)) &&
                       (((5 * <sum_1030@89:0>) > (10 + var278)) || ((4 * <sum_1030@89:0>) > (6 + var278)))))))) ||
                (not
                   ((<sum_1030@89:0> > 0) ||
                    ((<sum_1030@89:0> <= 0) &&
                     (((4 * <sum_1030@89:0>) <= 5) || (((2 * <sum_1030@89:0>) <= 3) && (<sum_1030@89:0> <= 1)))))))))
        begin InterpProver.interpolate(2497751)[5]
          begin InterpProver.interpolate_fresh(2497752)[6]
            begin InterpProver.interpolate_log(2497753)[7]
              input1: true
              input2: ((not
                          (((<sum_1030@89:0> <= 0) ||
                            (((2 * <sum_1030@89:0>) > (1 + var279)) ||
                             (((<sum_1030@89:0> <= var279) &&
                               (((4 * <sum_1030@89:0>) <= (5 + var279)) ||
                                (((4 * <sum_1030@89:0>) <= (6 + var279)) && ((3 * <sum_1030@89:0>) <= (3 + var279))))) ||
                              (((5 * <sum_1030@89:0>) > (9 + var279)) &&
                               (((5 * <sum_1030@89:0>) > (10 + var279)) || ((4 * <sum_1030@89:0>) > (6 + var279))))))) &&
                           (((<sum_1030@89:0> <= 1) ||
                             (((2 * <sum_1030@89:0>) > (3 + var280)) ||
                              ((((5 * <sum_1030@89:0>) > (14 + var280)) &&
                                (((5 * <sum_1030@89:0>) > (15 + var280)) || ((4 * <sum_1030@89:0>) > (10 + var280)))) ||
                               ((<sum_1030@89:0> <= (1 + var280)) &&
                                (((4 * <sum_1030@89:0>) <= (9 + var280)) ||
                                 (((4 * <sum_1030@89:0>) <= (10 + var280)) && ((3 * <sum_1030@89:0>) <= (6 + var280)))))))) &&
                            ((<sum_1030@89:0> <= 2) ||
                             (((2 * <sum_1030@89:0>) > (5 + var281)) ||
                              ((((5 * <sum_1030@89:0>) > (19 + var281)) &&
                                (((5 * <sum_1030@89:0>) > (20 + var281)) || ((4 * <sum_1030@89:0>) > (14 + var281)))) ||
                               ((<sum_1030@89:0> <= (2 + var281)) &&
                                (((4 * <sum_1030@89:0>) <= (13 + var281)) ||
                                 (((4 * <sum_1030@89:0>) <= (14 + var281)) && ((3 * <sum_1030@89:0>) <= (9 + var281))))))))))) ||
                       ((not
                           (((<sum_1030@89:0> <= 0) ||
                             (((2 * <sum_1030@89:0>) > (1 + var282)) ||
                              (((<sum_1030@89:0> <= var282) &&
                                (((4 * <sum_1030@89:0>) <= (5 + var282)) ||
                                 (((4 * <sum_1030@89:0>) <= (6 + var282)) && ((3 * <sum_1030@89:0>) <= (3 + var282))))) ||
                               (((5 * <sum_1030@89:0>) > (9 + var282)) &&
                                (((5 * <sum_1030@89:0>) > (10 + var282)) || ((4 * <sum_1030@89:0>) > (6 + var282))))))) &&
                            ((<sum_1030@89:0> <= 1) ||
                             (((2 * <sum_1030@89:0>) > (3 + var283)) ||
                              ((((5 * <sum_1030@89:0>) > (14 + var283)) &&
                                (((5 * <sum_1030@89:0>) > (15 + var283)) || ((4 * <sum_1030@89:0>) > (10 + var283)))) ||
                               ((<sum_1030@89:0> <= (1 + var283)) &&
                                (((4 * <sum_1030@89:0>) <= (9 + var283)) ||
                                 (((4 * <sum_1030@89:0>) <= (10 + var283)) && ((3 * <sum_1030@89:0>) <= (6 + var283)))))))))) ||
                        ((not
                            ((<sum_1030@89:0> <= 0) ||
                             (((2 * <sum_1030@89:0>) > (1 + var284)) ||
                              (((<sum_1030@89:0> <= var284) &&
                                (((4 * <sum_1030@89:0>) <= (5 + var284)) ||
                                 (((4 * <sum_1030@89:0>) <= (6 + var284)) && ((3 * <sum_1030@89:0>) <= (3 + var284))))) ||
                               (((5 * <sum_1030@89:0>) > (9 + var284)) &&
                                (((5 * <sum_1030@89:0>) > (10 + var284)) || ((4 * <sum_1030@89:0>) > (6 + var284)))))))) ||
                         (not
                            ((<sum_1030@89:0> > 0) ||
                             ((<sum_1030@89:0> <= 0) &&
                              (((4 * <sum_1030@89:0>) <= 5) || (((2 * <sum_1030@89:0>) <= 3) && (<sum_1030@89:0> <= 1)))))))))
              begin InterpProver.interpolate_check(2497754)[8]
                begin InterpProver.interpolate_simplify(2497755)[9]
                  begin InterpProver.interpolate_quick(2501746)[10]
                    
                  end InterpProver.interpolate_quick(2501746)[10] (0.001000 sec.)
                  
                end InterpProver.interpolate_simplify(2497755)[9] (0.008999 sec.)
                
              end InterpProver.interpolate_check(2497754)[8] (0.014998 sec.)
              output: true
            end InterpProver.interpolate_log(2497753)[7] (0.016997 sec.)
            
          end InterpProver.interpolate_fresh(2497752)[6] (0.016997 sec.)
          
        end InterpProver.interpolate(2497751)[5] (0.016997 sec.)
        output:
          P[<sum_1030@89:0>](<sum_1030@89:0>:int) = true
          P[<sum_1030@92:0>](<sum_1030@89:0>:int) = true
          P[<sum_1030@95:0>](<sum_1030@89:0>:int) = true
          P[<sum_1030@98:0>](<sum_1030@89:0>:int) = true
      end ApronInterface.convex_hull_interpolate(2497750)[4] (0.019997 sec.)
      Horn clauses:
        P[<fail_1170@124:0>](<fail_1170@124:0>:bool)|- bot
      lower bounds:
        P[<fail_1170@124:0>](var290:bool) = false
      upper bounds:
        P[<fail_1170@124:0>](var293:bool) = true
      begin GenHcSolver.classify_pids(2521881)[4]
        output:
          [<fail_1170@124:0>]
      end GenHcSolver.classify_pids(2521881)[4] (0.000000 sec.)
      lb:false
      nub:false
      begin ApronInterface.convex_hull_interpolate(2521884)[4]
        lb:false
        nub:false
        lb':false
        nub':false
        begin InterpProver.interpolate(2521885)[5]
          begin InterpProver.interpolate_fresh(2521886)[6]
            begin InterpProver.interpolate_log(2521887)[7]
              input1: false
              input2: false
              begin InterpProver.interpolate_check(2521888)[8]
                begin InterpProver.interpolate_simplify(2521889)[9]
                  begin InterpProver.interpolate_quick(2521902)[10]
                    
                  end InterpProver.interpolate_quick(2521902)[10] (0.000000 sec.)
                  begin minimizing # of disjunctions(2521906)[10]
                    input: false
                    output: false
                  end minimizing # of disjunctions(2521906)[10] (0.000000 sec.)
                  
                end InterpProver.interpolate_simplify(2521889)[9] (0.000000 sec.)
                
              end InterpProver.interpolate_check(2521888)[8] (0.000000 sec.)
              output: false
            end InterpProver.interpolate_log(2521887)[7] (0.000000 sec.)
            
          end InterpProver.interpolate_fresh(2521886)[6] (0.000000 sec.)
          
        end InterpProver.interpolate(2521885)[5] (0.000000 sec.)
        output:
          P[<fail_1170@124:0>](var290:bool) = false
      end ApronInterface.convex_hull_interpolate(2521884)[4] (0.000000 sec.)
      begin HcSolver.check_validity(2521939)[4]
        input:
          P[<fail_1170@124:0>](<fail_1170@124:0>:bool)|- bot
          
          P[<<sum_1030@89:1>@119:0>](<f_main_1167@121:0>:int,<f_main_1167@121:2>:int),
          (((4 * <f_main_1167@121:0>) > (6 + <f_main_1167@121:2>)) && <fail_1170@124:0>)
          |- P[<fail_1170@124:0>](<fail_1170@124:0>:bool)
          
          P[<sum_1030@89:0>](<sum_1030@89:0>:int),
          P[<<sum_1030@92:1>@113:0>]((-1 + <sum_1030@89:0>):int,(<<sum_1030@89:1>@119:0> + (-1 * <sum_1030@89:0>)):int),
          (<sum_1030@89:0> > 0) |- P[<<sum_1030@89:1>@119:0>](<sum_1030@89:0>:int,
                                                              <<sum_1030@89:1>@119:0>:int)
          
          P[<sum_1030@92:0>](<sum_1030@92:0>:int),
          P[<<sum_1030@95:1>@107:0>]((-1 + <sum_1030@92:0>):int,(<<sum_1030@92:1>@113:0> + (-1 * <sum_1030@92:0>)):int),
          (<sum_1030@92:0> > 0) |- P[<<sum_1030@92:1>@113:0>](<sum_1030@92:0>:int,
                                                              <<sum_1030@92:1>@113:0>:int)
          
          P[<sum_1030@95:0>](<sum_1030@95:0>:int),
          P[<<sum_1030@98:1>@101:0>]((-1 + <sum_1030@95:0>):int,(<<sum_1030@95:1>@107:0> + (-1 * <sum_1030@95:0>)):int),
          (<sum_1030@95:0> > 0) |- P[<<sum_1030@95:1>@107:0>](<sum_1030@95:0>:int,
                                                              <<sum_1030@95:1>@107:0>:int)
          
          P[<sum_1030@98:0>](<sum_1030@98:0>:int), ((<<sum_1030@98:1>@101:0> = 0) && (<sum_1030@98:0> <= 0))
          |- P[<<sum_1030@98:1>@101:0>](<sum_1030@98:0>:int,<<sum_1030@98:1>@101:0>:int)
          
          P[<sum_1030@95:0>]((1 + <sum_1030@98:0>):int), ((1 + <sum_1030@98:0>) > 0)
          |- P[<sum_1030@98:0>](<sum_1030@98:0>:int)
          
          P[<sum_1030@92:0>]((1 + <sum_1030@95:0>):int), ((1 + <sum_1030@95:0>) > 0)
          |- P[<sum_1030@95:0>](<sum_1030@95:0>:int)
          
          P[<sum_1030@89:0>]((1 + <sum_1030@92:0>):int), ((1 + <sum_1030@92:0>) > 0)
          |- P[<sum_1030@92:0>](<sum_1030@92:0>:int)
          
          |- P[<sum_1030@89:0>](<sum_1030@89:0>:int)
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        
      end HcSolver.check_validity(2521939)[4] (0.008999 sec.)
      solution:
        P[<fail_1170@124:0>](var290:bool) = false
        P[<<sum_1030@89:1>@119:0>](<sum_1030@98:0>:int,<<sum_1030@98:1>@101:0>:int) =
        ((((4 * <sum_1030@98:0>) <= (6 + <<sum_1030@98:1>@101:0>)) &&
          (((3 * <sum_1030@98:0>) <= (3 + <<sum_1030@98:1>@101:0>)) && (<sum_1030@98:0> <= <<sum_1030@98:1>@101:0>))) ||
         (((4 * <sum_1030@98:0>) <= (5 + <<sum_1030@98:1>@101:0>)) && (<sum_1030@98:0> <= <<sum_1030@98:1>@101:0>)))
        P[<<sum_1030@92:1>@113:0>](<sum_1030@98:0>:int,<<sum_1030@98:1>@101:0>:int) =
        ((((4 * <sum_1030@98:0>) <= (6 + <<sum_1030@98:1>@101:0>)) &&
          (((3 * <sum_1030@98:0>) <= (3 + <<sum_1030@98:1>@101:0>)) && (<sum_1030@98:0> <= <<sum_1030@98:1>@101:0>))) ||
         (((4 * <sum_1030@98:0>) <= (5 + <<sum_1030@98:1>@101:0>)) && (<sum_1030@98:0> <= <<sum_1030@98:1>@101:0>)))
        P[<<sum_1030@95:1>@107:0>](<sum_1030@98:0>:int,<<sum_1030@98:1>@101:0>:int) =
        ((((4 * <sum_1030@98:0>) <= (6 + <<sum_1030@98:1>@101:0>)) &&
          (((3 * <sum_1030@98:0>) <= (3 + <<sum_1030@98:1>@101:0>)) && (<sum_1030@98:0> <= <<sum_1030@98:1>@101:0>))) ||
         (((4 * <sum_1030@98:0>) <= (5 + <<sum_1030@98:1>@101:0>)) && (<sum_1030@98:0> <= <<sum_1030@98:1>@101:0>)))
        P[<<sum_1030@98:1>@101:0>](<sum_1030@98:0>:int,<<sum_1030@98:1>@101:0>:int) =
        ((((4 * <sum_1030@98:0>) <= (6 + <<sum_1030@98:1>@101:0>)) &&
          (((3 * <sum_1030@98:0>) <= (3 + <<sum_1030@98:1>@101:0>)) && (<sum_1030@98:0> <= <<sum_1030@98:1>@101:0>))) ||
         (((4 * <sum_1030@98:0>) <= (5 + <<sum_1030@98:1>@101:0>)) && (<sum_1030@98:0> <= <<sum_1030@98:1>@101:0>)))
        P[<sum_1030@98:0>](<sum_1030@89:0>:int) = true
        P[<sum_1030@95:0>](<sum_1030@89:0>:int) = true
        P[<sum_1030@92:0>](<sum_1030@89:0>:int) = true
        P[<sum_1030@89:0>](<sum_1030@89:0>:int) = true
    end GenHcSolver.solve(89975)[3] (51.728137 sec.)
    begin GenHcSolver.solve(2526599)[3]
      Horn clauses:
        P[<fail_1170@124:0>](<fail_1170@124:0>:bool)|- bot
        
        P[<<sum_1030@89:1>@119:0>](<f_main_1167@121:0>:int,<f_main_1167@121:2>:int),
        (((4 * <f_main_1167@121:0>) > (6 + <f_main_1167@121:2>)) && <fail_1170@124:0>)
        |- P[<fail_1170@124:0>](<fail_1170@124:0>:bool)
        
        P[<sum_1030@89:0>](<sum_1030@89:0>:int),
        P[<<sum_1030@92:1>@113:0>]((-1 + <sum_1030@89:0>):int,(<<sum_1030@89:1>@119:0> + (-1 * <sum_1030@89:0>)):int),
        (<sum_1030@89:0> > 0) |- P[<<sum_1030@89:1>@119:0>](<sum_1030@89:0>:int,
                                                            <<sum_1030@89:1>@119:0>:int)
        
        P[<sum_1030@92:0>](<sum_1030@92:0>:int),
        P[<<sum_1030@95:1>@107:0>]((-1 + <sum_1030@92:0>):int,(<<sum_1030@92:1>@113:0> + (-1 * <sum_1030@92:0>)):int),
        (<sum_1030@92:0> > 0) |- P[<<sum_1030@92:1>@113:0>](<sum_1030@92:0>:int,
                                                            <<sum_1030@92:1>@113:0>:int)
        
        P[<sum_1030@95:0>](<sum_1030@95:0>:int),
        P[<<sum_1030@98:1>@101:0>]((-1 + <sum_1030@95:0>):int,(<<sum_1030@95:1>@107:0> + (-1 * <sum_1030@95:0>)):int),
        (<sum_1030@95:0> > 0) |- P[<<sum_1030@95:1>@107:0>](<sum_1030@95:0>:int,
                                                            <<sum_1030@95:1>@107:0>:int)
        
        P[<sum_1030@98:0>](<sum_1030@98:0>:int), ((<<sum_1030@98:1>@101:0> = 0) && (<sum_1030@98:0> <= 0))
        |- P[<<sum_1030@98:1>@101:0>](<sum_1030@98:0>:int,<<sum_1030@98:1>@101:0>:int)
        
        P[<sum_1030@95:0>]((1 + <sum_1030@98:0>):int), ((1 + <sum_1030@98:0>) > 0)
        |- P[<sum_1030@98:0>](<sum_1030@98:0>:int)
        
        P[<sum_1030@92:0>]((1 + <sum_1030@95:0>):int), ((1 + <sum_1030@95:0>) > 0)
        |- P[<sum_1030@95:0>](<sum_1030@95:0>:int)
        
        P[<sum_1030@89:0>]((1 + <sum_1030@92:0>):int), ((1 + <sum_1030@92:0>) > 0)
        |- P[<sum_1030@92:0>](<sum_1030@92:0>:int)
        
        |- P[<sum_1030@89:0>](<sum_1030@89:0>:int)
      lower bounds:
        P[<sum_1030@89:0>](<sum_1030@89:0>:int) = true
        P[<sum_1030@92:0>](<sum_1030@92:0>:int) = ((1 + <sum_1030@92:0>) > 0)
        P[<sum_1030@95:0>](<sum_1030@95:0>:int) = ((1 + <sum_1030@95:0>) > 0)
        P[<sum_1030@98:0>](<sum_1030@98:0>:int) = ((1 + <sum_1030@98:0>) > 0)
        P[<<sum_1030@98:1>@101:0>](<sum_1030@98:0>:int,<<sum_1030@98:1>@101:0>:int) =
        ((<<sum_1030@98:1>@101:0> = 0) && (<sum_1030@98:0> = 0))
        P[<<sum_1030@95:1>@107:0>](<sum_1030@95:0>:int,<<sum_1030@95:1>@107:0>:int) =
        ((<sum_1030@95:0> = 1) && (<<sum_1030@95:1>@107:0> = <sum_1030@95:0>))
        P[<<sum_1030@92:1>@113:0>](<sum_1030@92:0>:int,<<sum_1030@92:1>@113:0>:int) =
        ((<sum_1030@92:0> = 2) && ((1 + <<sum_1030@92:1>@113:0>) = (2 * <sum_1030@92:0>)))
        P[<<sum_1030@89:1>@119:0>](<sum_1030@89:0>:int,<<sum_1030@89:1>@119:0>:int) =
        ((<sum_1030@89:0> = 3) && ((3 + <<sum_1030@89:1>@119:0>) = (3 * <sum_1030@89:0>)))
        P[<fail_1170@124:0>](<fail_1170@124:0>:bool) = false
      upper bounds:
        P[<<sum_1030@89:1>@119:0>](var308:int,var309:int) = ((4 * var308) <= (6 + var309))
        P[<<sum_1030@92:1>@113:0>](var304:int,var305:int) = (((1 + var304) <= 0) || ((3 * var304) <= (3 + var305)))
        P[<<sum_1030@95:1>@107:0>](var300:int,var301:int) = (((1 + var300) <= 0) || ((2 * var300) <= (1 + var301)))
        P[<<sum_1030@98:1>@101:0>](var296:int,var297:int) = (((1 + var296) <= 0) || (var296 <= var297))
      begin GenHcSolver.classify_pids(2536022)[4]
        output:
          [<<sum_1030@98:1>@101:0>;<<sum_1030@95:1>@107:0>;<<sum_1030@92:1>@113:0>;<<sum_1030@89:1>@119:0>]
      end GenHcSolver.classify_pids(2536022)[4] (0.001000 sec.)
      begin ApronInterface.convex_hull_interpolate(2536309)[4]
        lb:(((<<sum_1030@98:1>@101:0> = 0) && (<sum_1030@98:0> = 0)) ||
            (((<sum_1030@98:0> = 1) && (<<sum_1030@98:1>@101:0> = <sum_1030@98:0>)) ||
             (((<sum_1030@98:0> = 2) && ((1 + <<sum_1030@98:1>@101:0>) = (2 * <sum_1030@98:0>))) ||
              ((<sum_1030@98:0> = 3) && ((3 + <<sum_1030@98:1>@101:0>) = (3 * <sum_1030@98:0>))))))
        nub:((not (((1 + <sum_1030@98:0>) <= 0) || (<sum_1030@98:0> <= <<sum_1030@98:1>@101:0>))) ||
             ((not (((1 + <sum_1030@98:0>) <= 0) || ((2 * <sum_1030@98:0>) <= (1 + <<sum_1030@98:1>@101:0>)))) ||
              ((not (((1 + <sum_1030@98:0>) <= 0) || ((3 * <sum_1030@98:0>) <= (3 + <<sum_1030@98:1>@101:0>)))) ||
               (not ((4 * <sum_1030@98:0>) <= (6 + <<sum_1030@98:1>@101:0>))))))
        begin ExtFormula.Formula.case_analysis_boolean(2536360)[5]
          ts: (((<<sum_1030@98:1>@101:0> = 0) && (<sum_1030@98:0> = 0)) ||
               (((<sum_1030@98:0> = 1) && (<<sum_1030@98:1>@101:0> = <sum_1030@98:0>)) ||
                (((<sum_1030@98:0> = 2) && ((1 + <<sum_1030@98:1>@101:0>) = (2 * <sum_1030@98:0>))) ||
                 ((<sum_1030@98:0> = 3) && ((3 + <<sum_1030@98:1>@101:0>) = (3 * <sum_1030@98:0>))))))
          
        end ExtFormula.Formula.case_analysis_boolean(2536360)[5] (0.001000 sec.)
        begin ExtFormula.Formula.case_analysis_boolean(2536447)[5]
          ts: (((4 * <sum_1030@98:0>) > (6 + <<sum_1030@98:1>@101:0>)) ||
               ((((1 + <sum_1030@98:0>) > 0) && (<sum_1030@98:0> > <<sum_1030@98:1>@101:0>)) ||
                ((((1 + <sum_1030@98:0>) > 0) && ((2 * <sum_1030@98:0>) > (1 + <<sum_1030@98:1>@101:0>))) ||
                 (((1 + <sum_1030@98:0>) > 0) && ((3 * <sum_1030@98:0>) > (3 + <<sum_1030@98:1>@101:0>))))))
          
        end ExtFormula.Formula.case_analysis_boolean(2536447)[5] (0.000000 sec.)
        lb':((((3 + <<sum_1030@98:1>@101:0>) + (-3 * <sum_1030@98:0>)) >= 0) &&
             ((((1 + <<sum_1030@98:1>@101:0>) + (-2 * <sum_1030@98:0>)) >= 0) &&
              (((<<sum_1030@98:1>@101:0> + (-1 * <sum_1030@98:0>)) >= 0) &&
               (((-1 * <<sum_1030@98:1>@101:0>) + (2 * <sum_1030@98:0>)) >= 0))))
        nub':(((-1 + (-1 * <<sum_1030@98:1>@101:0>)) + (4 * <sum_1030@98:0>)) >= 0)
        begin InterpProver.interpolate(2536467)[5]
          begin InterpProver.interpolate_fresh(2536468)[6]
            begin InterpProver.interpolate_log(2536469)[7]
              input1: ((((3 + <<sum_1030@98:1>@101:0>) + (-3 * <sum_1030@98:0>)) >= 0) &&
                       ((((1 + <<sum_1030@98:1>@101:0>) + (-2 * <sum_1030@98:0>)) >= 0) &&
                        (((<<sum_1030@98:1>@101:0> + (-1 * <sum_1030@98:0>)) >= 0) &&
                         (((-1 * <<sum_1030@98:1>@101:0>) + (2 * <sum_1030@98:0>)) >= 0))))
              input2: (((-1 + (-1 * <<sum_1030@98:1>@101:0>)) + (4 * <sum_1030@98:0>)) >= 0)
              begin InterpProver.interpolate_check(2536470)[8]
                begin InterpProver.interpolate_simplify(2536471)[9]
                  begin InterpProver.interpolate_quick(2536620)[10]
                    begin CsisatInterface.interpolate_csisat_wrap(2536629)[11]
                      begin CsisatInterface.interpolate_csisat_post_process(2536630)[12]
                        begin CsisatInterface.interpolate_csisat_log(2536631)[13]
                          input1: (v_sep_sum_1030_sep_98_sep_0 <= v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 & v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 <= 2*v_sep_sum_1030_sep_98_sep_0 & 2*v_sep_sum_1030_sep_98_sep_0 <= (1 + v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0) & 3*v_sep_sum_1030_sep_98_sep_0 <= (3 + v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0))
                          input2: (1 + v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0) <= 4*v_sep_sum_1030_sep_98_sep_0
                          begin CsisatInterface.interpolate_csisat_raw(2536632)[14]
                            
                          end CsisatInterface.interpolate_csisat_raw(2536632)[14] (0.000999 sec.)
                          
                        end CsisatInterface.interpolate_csisat_log(2536631)[13] (0.000999 sec.)
                        
                      end CsisatInterface.interpolate_csisat_post_process(2536630)[12] (0.000999 sec.)
                      
                    end CsisatInterface.interpolate_csisat_wrap(2536629)[11] (0.000999 sec.)
                    
                  end InterpProver.interpolate_quick(2536620)[10] (0.000999 sec.)
                  
                end InterpProver.interpolate_simplify(2536471)[9] (0.000999 sec.)
                
              end InterpProver.interpolate_check(2536470)[8] (0.000999 sec.)
              there is no interpolant
            end InterpProver.interpolate_log(2536469)[7] (0.000999 sec.)
            
          end InterpProver.interpolate_fresh(2536468)[6] (0.000999 sec.)
          
        end InterpProver.interpolate(2536467)[5] (0.000999 sec.)
        begin InterpProver.interpolate(2536643)[5]
          begin InterpProver.interpolate_fresh(2536644)[6]
            begin InterpProver.interpolate_log(2536645)[7]
              input1: ((((3 + <<sum_1030@98:1>@101:0>) + (-3 * <sum_1030@98:0>)) >= 0) &&
                       ((((1 + <<sum_1030@98:1>@101:0>) + (-2 * <sum_1030@98:0>)) >= 0) &&
                        (((<<sum_1030@98:1>@101:0> + (-1 * <sum_1030@98:0>)) >= 0) &&
                         (((-1 * <<sum_1030@98:1>@101:0>) + (2 * <sum_1030@98:0>)) >= 0))))
              input2: (not ((4 * <sum_1030@98:0>) <= (6 + <<sum_1030@98:1>@101:0>)))
              begin InterpProver.interpolate_check(2536646)[8]
                begin InterpProver.interpolate_simplify(2536647)[9]
                  begin InterpProver.interpolate_quick(2536796)[10]
                    begin CsisatInterface.interpolate_csisat_wrap(2536805)[11]
                      begin CsisatInterface.interpolate_csisat_post_process(2536806)[12]
                        begin CsisatInterface.interpolate_csisat_log(2536807)[13]
                          input1: (v_sep_sum_1030_sep_98_sep_0 <= v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 & v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 <= 2*v_sep_sum_1030_sep_98_sep_0 & 2*v_sep_sum_1030_sep_98_sep_0 <= (1 + v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0) & 3*v_sep_sum_1030_sep_98_sep_0 <= (3 + v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0))
                          input2: (7 + v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0) <= 4*v_sep_sum_1030_sep_98_sep_0
                          begin CsisatInterface.interpolate_csisat_raw(2536808)[14]
                            
                          end CsisatInterface.interpolate_csisat_raw(2536808)[14] (0.001000 sec.)
                          output: (-2*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 8*v_sep_sum_1030_sep_98_sep_0) <= 12
                          
                        end CsisatInterface.interpolate_csisat_log(2536807)[13] (0.001000 sec.)
                        after simplification: (-2*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 8*v_sep_sum_1030_sep_98_sep_0) <= 12
                        after dnf conversion: (((-2*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 8*v_sep_sum_1030_sep_98_sep_0) <= 12))
                        
                      end CsisatInterface.interpolate_csisat_post_process(2536806)[12] (0.001000 sec.)
                      
                    end CsisatInterface.interpolate_csisat_wrap(2536805)[11] (0.001000 sec.)
                    
                  end InterpProver.interpolate_quick(2536796)[10] (0.002000 sec.)
                  
                end InterpProver.interpolate_simplify(2536647)[9] (0.002000 sec.)
                
              end InterpProver.interpolate_check(2536646)[8] (0.002000 sec.)
              output: ((4 * <sum_1030@98:0>) <= (6 + <<sum_1030@98:1>@101:0>))
            end InterpProver.interpolate_log(2536645)[7] (0.002000 sec.)
            
          end InterpProver.interpolate_fresh(2536644)[6] (0.002000 sec.)
          
        end InterpProver.interpolate(2536643)[5] (0.002000 sec.)
        begin InterpProver.interpolate(2536829)[5]
          begin InterpProver.interpolate_fresh(2536830)[6]
            begin InterpProver.interpolate_log(2536831)[7]
              input1: ((((3 + <<sum_1030@98:1>@101:0>) + (-3 * <sum_1030@98:0>)) >= 0) &&
                       ((((1 + <<sum_1030@98:1>@101:0>) + (-2 * <sum_1030@98:0>)) >= 0) &&
                        (((<<sum_1030@98:1>@101:0> + (-1 * <sum_1030@98:0>)) >= 0) &&
                         (((-1 * <<sum_1030@98:1>@101:0>) + (2 * <sum_1030@98:0>)) >= 0))))
              input2: (not (((1 + <sum_1030@98:0>) <= 0) || ((3 * <sum_1030@98:0>) <= (3 + <<sum_1030@98:1>@101:0>))))
              begin InterpProver.interpolate_check(2536832)[8]
                begin InterpProver.interpolate_simplify(2536833)[9]
                  begin InterpProver.interpolate_quick(2537012)[10]
                    begin CsisatInterface.interpolate_csisat_wrap(2537021)[11]
                      begin CsisatInterface.interpolate_csisat_post_process(2537022)[12]
                        begin CsisatInterface.interpolate_csisat_log(2537023)[13]
                          input1: (v_sep_sum_1030_sep_98_sep_0 <= v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 & v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 <= 2*v_sep_sum_1030_sep_98_sep_0 & 2*v_sep_sum_1030_sep_98_sep_0 <= (1 + v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0) & 3*v_sep_sum_1030_sep_98_sep_0 <= (3 + v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0))
                          input2: (1 <= (1 + v_sep_sum_1030_sep_98_sep_0) & (4 + v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0) <= 3*v_sep_sum_1030_sep_98_sep_0)
                          begin CsisatInterface.interpolate_csisat_raw(2537024)[14]
                            
                          end CsisatInterface.interpolate_csisat_raw(2537024)[14] (0.000000 sec.)
                          output: (-2*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 6*v_sep_sum_1030_sep_98_sep_0) <= 6
                          
                        end CsisatInterface.interpolate_csisat_log(2537023)[13] (0.000000 sec.)
                        after simplification: (-2*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 6*v_sep_sum_1030_sep_98_sep_0) <= 6
                        after dnf conversion: (((-2*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 6*v_sep_sum_1030_sep_98_sep_0) <= 6))
                        
                      end CsisatInterface.interpolate_csisat_post_process(2537022)[12] (0.001000 sec.)
                      
                    end CsisatInterface.interpolate_csisat_wrap(2537021)[11] (0.001000 sec.)
                    
                  end InterpProver.interpolate_quick(2537012)[10] (0.002000 sec.)
                  
                end InterpProver.interpolate_simplify(2536833)[9] (0.002000 sec.)
                
              end InterpProver.interpolate_check(2536832)[8] (0.002000 sec.)
              output: ((3 * <sum_1030@98:0>) <= (3 + <<sum_1030@98:1>@101:0>))
            end InterpProver.interpolate_log(2536831)[7] (0.002000 sec.)
            
          end InterpProver.interpolate_fresh(2536830)[6] (0.002000 sec.)
          
        end InterpProver.interpolate(2536829)[5] (0.002000 sec.)
        begin InterpProver.interpolate(2537061)[5]
          begin InterpProver.interpolate_fresh(2537062)[6]
            begin InterpProver.interpolate_log(2537063)[7]
              input1: ((((3 + <<sum_1030@98:1>@101:0>) + (-3 * <sum_1030@98:0>)) >= 0) &&
                       ((((1 + <<sum_1030@98:1>@101:0>) + (-2 * <sum_1030@98:0>)) >= 0) &&
                        (((<<sum_1030@98:1>@101:0> + (-1 * <sum_1030@98:0>)) >= 0) &&
                         (((-1 * <<sum_1030@98:1>@101:0>) + (2 * <sum_1030@98:0>)) >= 0))))
              input2: (not (((1 + <sum_1030@98:0>) <= 0) || ((2 * <sum_1030@98:0>) <= (1 + <<sum_1030@98:1>@101:0>))))
              begin InterpProver.interpolate_check(2537064)[8]
                begin InterpProver.interpolate_simplify(2537065)[9]
                  begin InterpProver.interpolate_quick(2537244)[10]
                    begin CsisatInterface.interpolate_csisat_wrap(2537253)[11]
                      begin CsisatInterface.interpolate_csisat_post_process(2537254)[12]
                        begin CsisatInterface.interpolate_csisat_log(2537255)[13]
                          input1: (v_sep_sum_1030_sep_98_sep_0 <= v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 & v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 <= 2*v_sep_sum_1030_sep_98_sep_0 & 2*v_sep_sum_1030_sep_98_sep_0 <= (1 + v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0) & 3*v_sep_sum_1030_sep_98_sep_0 <= (3 + v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0))
                          input2: (1 <= (1 + v_sep_sum_1030_sep_98_sep_0) & (2 + v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0) <= 2*v_sep_sum_1030_sep_98_sep_0)
                          begin CsisatInterface.interpolate_csisat_raw(2537256)[14]
                            
                          end CsisatInterface.interpolate_csisat_raw(2537256)[14] (0.000999 sec.)
                          output: (-2*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 4*v_sep_sum_1030_sep_98_sep_0) <= 2
                          
                        end CsisatInterface.interpolate_csisat_log(2537255)[13] (0.000999 sec.)
                        after simplification: (-2*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 4*v_sep_sum_1030_sep_98_sep_0) <= 2
                        after dnf conversion: (((-2*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 4*v_sep_sum_1030_sep_98_sep_0) <= 2))
                        
                      end CsisatInterface.interpolate_csisat_post_process(2537254)[12] (0.000999 sec.)
                      
                    end CsisatInterface.interpolate_csisat_wrap(2537253)[11] (0.000999 sec.)
                    
                  end InterpProver.interpolate_quick(2537244)[10] (0.001999 sec.)
                  
                end InterpProver.interpolate_simplify(2537065)[9] (0.001999 sec.)
                
              end InterpProver.interpolate_check(2537064)[8] (0.001999 sec.)
              output: ((2 * <sum_1030@98:0>) <= (1 + <<sum_1030@98:1>@101:0>))
            end InterpProver.interpolate_log(2537063)[7] (0.001999 sec.)
            
          end InterpProver.interpolate_fresh(2537062)[6] (0.001999 sec.)
          
        end InterpProver.interpolate(2537061)[5] (0.001999 sec.)
        begin InterpProver.interpolate(2537293)[5]
          begin InterpProver.interpolate_fresh(2537294)[6]
            begin InterpProver.interpolate_log(2537295)[7]
              input1: ((((3 + <<sum_1030@98:1>@101:0>) + (-3 * <sum_1030@98:0>)) >= 0) &&
                       ((((1 + <<sum_1030@98:1>@101:0>) + (-2 * <sum_1030@98:0>)) >= 0) &&
                        (((<<sum_1030@98:1>@101:0> + (-1 * <sum_1030@98:0>)) >= 0) &&
                         (((-1 * <<sum_1030@98:1>@101:0>) + (2 * <sum_1030@98:0>)) >= 0))))
              input2: (not (((1 + <sum_1030@98:0>) <= 0) || (<sum_1030@98:0> <= <<sum_1030@98:1>@101:0>)))
              begin InterpProver.interpolate_check(2537296)[8]
                begin InterpProver.interpolate_simplify(2537297)[9]
                  begin InterpProver.interpolate_quick(2537470)[10]
                    begin CsisatInterface.interpolate_csisat_wrap(2537479)[11]
                      begin CsisatInterface.interpolate_csisat_post_process(2537480)[12]
                        begin CsisatInterface.interpolate_csisat_log(2537481)[13]
                          input1: (v_sep_sum_1030_sep_98_sep_0 <= v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 & v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 <= 2*v_sep_sum_1030_sep_98_sep_0 & 2*v_sep_sum_1030_sep_98_sep_0 <= (1 + v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0) & 3*v_sep_sum_1030_sep_98_sep_0 <= (3 + v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0))
                          input2: (1 <= (1 + v_sep_sum_1030_sep_98_sep_0) & (1 + v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0) <= v_sep_sum_1030_sep_98_sep_0)
                          begin CsisatInterface.interpolate_csisat_raw(2537482)[14]
                            
                          end CsisatInterface.interpolate_csisat_raw(2537482)[14] (0.000000 sec.)
                          output: (-2*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 2*v_sep_sum_1030_sep_98_sep_0) <= 0
                          
                        end CsisatInterface.interpolate_csisat_log(2537481)[13] (0.000000 sec.)
                        after simplification: (-2*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 2*v_sep_sum_1030_sep_98_sep_0) <= 0
                        after dnf conversion: (((-2*v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0 + 2*v_sep_sum_1030_sep_98_sep_0) <= 0))
                        
                      end CsisatInterface.interpolate_csisat_post_process(2537480)[12] (0.001000 sec.)
                      
                    end CsisatInterface.interpolate_csisat_wrap(2537479)[11] (0.001000 sec.)
                    
                  end InterpProver.interpolate_quick(2537470)[10] (0.002000 sec.)
                  
                end InterpProver.interpolate_simplify(2537297)[9] (0.002000 sec.)
                
              end InterpProver.interpolate_check(2537296)[8] (0.002000 sec.)
              output: (<sum_1030@98:0> <= <<sum_1030@98:1>@101:0>)
            end InterpProver.interpolate_log(2537295)[7] (0.002000 sec.)
            
          end InterpProver.interpolate_fresh(2537294)[6] (0.002000 sec.)
          
        end InterpProver.interpolate(2537293)[5] (0.002000 sec.)
        output:
          P[<<sum_1030@98:1>@101:0>](<sum_1030@98:0>:int,<<sum_1030@98:1>@101:0>:int) =
          (<sum_1030@98:0> <= <<sum_1030@98:1>@101:0>)
          P[<<sum_1030@95:1>@107:0>](<sum_1030@98:0>:int,<<sum_1030@98:1>@101:0>:int) =
          ((2 * <sum_1030@98:0>) <= (1 + <<sum_1030@98:1>@101:0>))
          P[<<sum_1030@92:1>@113:0>](<sum_1030@98:0>:int,<<sum_1030@98:1>@101:0>:int) =
          ((3 * <sum_1030@98:0>) <= (3 + <<sum_1030@98:1>@101:0>))
          P[<<sum_1030@89:1>@119:0>](<sum_1030@98:0>:int,<<sum_1030@98:1>@101:0>:int) =
          ((4 * <sum_1030@98:0>) <= (6 + <<sum_1030@98:1>@101:0>))
      end ApronInterface.convex_hull_interpolate(2536309)[4] (0.010998 sec.)
      Horn clauses:
        P[<fail_1170@124:0>](<fail_1170@124:0>:bool)|- bot
        
        P[<sum_1030@95:0>]((1 + <sum_1030@98:0>):int), ((1 + <sum_1030@98:0>) > 0)
        |- P[<sum_1030@98:0>](<sum_1030@98:0>:int)
        
        P[<sum_1030@92:0>]((1 + <sum_1030@95:0>):int), ((1 + <sum_1030@95:0>) > 0)
        |- P[<sum_1030@95:0>](<sum_1030@95:0>:int)
        
        P[<sum_1030@89:0>]((1 + <sum_1030@92:0>):int), ((1 + <sum_1030@92:0>) > 0)
        |- P[<sum_1030@92:0>](<sum_1030@92:0>:int)
        
        |- P[<sum_1030@89:0>](<sum_1030@89:0>:int)
      lower bounds:
        P[<sum_1030@89:0>](<sum_1030@89:0>:int) = true
        P[<fail_1170@124:0>](var315:bool) = false
        P[<sum_1030@92:0>](<sum_1030@92:0>:int) = ((1 + <sum_1030@92:0>) > 0)
        P[<sum_1030@95:0>](<sum_1030@95:0>:int) = ((1 + <sum_1030@95:0>) > 0)
        P[<sum_1030@98:0>](<sum_1030@98:0>:int) = ((1 + <sum_1030@98:0>) > 0)
      upper bounds:
        P[<sum_1030@98:0>](var327:int) = true
        P[<sum_1030@95:0>](var324:int) = true
        P[<sum_1030@92:0>](var321:int) = true
        P[<sum_1030@89:0>](var318:int) = true
      begin GenHcSolver.classify_pids(2542611)[4]
        output:
          [<sum_1030@89:0>;<sum_1030@92:0>;<sum_1030@95:0>;<sum_1030@98:0>]
      end GenHcSolver.classify_pids(2542611)[4] (0.000000 sec.)
      begin ApronInterface.convex_hull_interpolate(2542644)[4]
        lb:true
        nub:false
        begin ExtFormula.Formula.case_analysis_boolean(2542647)[5]
          ts: true
          
        end ExtFormula.Formula.case_analysis_boolean(2542647)[5] (0.000999 sec.)
        begin ExtFormula.Formula.case_analysis_boolean(2542652)[5]
          ts: false
          
        end ExtFormula.Formula.case_analysis_boolean(2542652)[5] (0.000000 sec.)
        lb':true
        nub':(-1 >= 0)
        begin InterpProver.interpolate(2542655)[5]
          begin InterpProver.interpolate_fresh(2542656)[6]
            begin InterpProver.interpolate_log(2542657)[7]
              input1: true
              input2: (-1 >= 0)
              begin InterpProver.interpolate_check(2542658)[8]
                begin InterpProver.interpolate_simplify(2542659)[9]
                  begin InterpProver.interpolate_quick(2542673)[10]
                    
                  end InterpProver.interpolate_quick(2542673)[10] (0.000000 sec.)
                  
                end InterpProver.interpolate_simplify(2542659)[9] (0.000000 sec.)
                
              end InterpProver.interpolate_check(2542658)[8] (0.000000 sec.)
              output: true
            end InterpProver.interpolate_log(2542657)[7] (0.000000 sec.)
            
          end InterpProver.interpolate_fresh(2542656)[6] (0.000000 sec.)
          
        end InterpProver.interpolate(2542655)[5] (0.000000 sec.)
        output:
          P[<sum_1030@89:0>](<sum_1030@89:0>:int) = true
          P[<sum_1030@92:0>](<sum_1030@89:0>:int) = true
          P[<sum_1030@95:0>](<sum_1030@89:0>:int) = true
          P[<sum_1030@98:0>](<sum_1030@89:0>:int) = true
      end ApronInterface.convex_hull_interpolate(2542644)[4] (0.000999 sec.)
      Horn clauses:
        P[<fail_1170@124:0>](<fail_1170@124:0>:bool)|- bot
      lower bounds:
        P[<fail_1170@124:0>](var333:bool) = false
      upper bounds:
        P[<fail_1170@124:0>](var336:bool) = true
      begin GenHcSolver.classify_pids(2543608)[4]
        output:
          [<fail_1170@124:0>]
      end GenHcSolver.classify_pids(2543608)[4] (0.000000 sec.)
      lb:false
      nub:false
      begin ApronInterface.convex_hull_interpolate(2543611)[4]
        lb:false
        nub:false
        begin ExtFormula.Formula.case_analysis_boolean(2543614)[5]
          ts: false
          
        end ExtFormula.Formula.case_analysis_boolean(2543614)[5] (0.000000 sec.)
        begin ExtFormula.Formula.case_analysis_boolean(2543619)[5]
          ts: false
          
        end ExtFormula.Formula.case_analysis_boolean(2543619)[5] (0.000000 sec.)
        lb':(-1 >= 0)
        nub':(-1 >= 0)
        begin InterpProver.interpolate(2543622)[5]
          begin InterpProver.interpolate_fresh(2543623)[6]
            begin InterpProver.interpolate_log(2543624)[7]
              input1: (-1 >= 0)
              input2: (-1 >= 0)
              begin InterpProver.interpolate_check(2543625)[8]
                begin InterpProver.interpolate_simplify(2543626)[9]
                  begin InterpProver.interpolate_quick(2543641)[10]
                    
                  end InterpProver.interpolate_quick(2543641)[10] (0.000000 sec.)
                  begin minimizing # of disjunctions(2543645)[10]
                    input: false
                    output: false
                  end minimizing # of disjunctions(2543645)[10] (0.000000 sec.)
                  
                end InterpProver.interpolate_simplify(2543626)[9] (0.000000 sec.)
                
              end InterpProver.interpolate_check(2543625)[8] (0.001000 sec.)
              output: false
            end InterpProver.interpolate_log(2543624)[7] (0.001000 sec.)
            
          end InterpProver.interpolate_fresh(2543623)[6] (0.001000 sec.)
          
        end InterpProver.interpolate(2543622)[5] (0.001000 sec.)
        output:
          P[<fail_1170@124:0>](var333:bool) = false
      end ApronInterface.convex_hull_interpolate(2543611)[4] (0.001000 sec.)
      begin HcSolver.check_validity(2543685)[4]
        input:
          P[<fail_1170@124:0>](<fail_1170@124:0>:bool)|- bot
          
          P[<<sum_1030@89:1>@119:0>](<f_main_1167@121:0>:int,<f_main_1167@121:2>:int),
          (((4 * <f_main_1167@121:0>) > (6 + <f_main_1167@121:2>)) && <fail_1170@124:0>)
          |- P[<fail_1170@124:0>](<fail_1170@124:0>:bool)
          
          P[<sum_1030@89:0>](<sum_1030@89:0>:int),
          P[<<sum_1030@92:1>@113:0>]((-1 + <sum_1030@89:0>):int,(<<sum_1030@89:1>@119:0> + (-1 * <sum_1030@89:0>)):int),
          (<sum_1030@89:0> > 0) |- P[<<sum_1030@89:1>@119:0>](<sum_1030@89:0>:int,
                                                              <<sum_1030@89:1>@119:0>:int)
          
          P[<sum_1030@92:0>](<sum_1030@92:0>:int),
          P[<<sum_1030@95:1>@107:0>]((-1 + <sum_1030@92:0>):int,(<<sum_1030@92:1>@113:0> + (-1 * <sum_1030@92:0>)):int),
          (<sum_1030@92:0> > 0) |- P[<<sum_1030@92:1>@113:0>](<sum_1030@92:0>:int,
                                                              <<sum_1030@92:1>@113:0>:int)
          
          P[<sum_1030@95:0>](<sum_1030@95:0>:int),
          P[<<sum_1030@98:1>@101:0>]((-1 + <sum_1030@95:0>):int,(<<sum_1030@95:1>@107:0> + (-1 * <sum_1030@95:0>)):int),
          (<sum_1030@95:0> > 0) |- P[<<sum_1030@95:1>@107:0>](<sum_1030@95:0>:int,
                                                              <<sum_1030@95:1>@107:0>:int)
          
          P[<sum_1030@98:0>](<sum_1030@98:0>:int), ((<<sum_1030@98:1>@101:0> = 0) && (<sum_1030@98:0> <= 0))
          |- P[<<sum_1030@98:1>@101:0>](<sum_1030@98:0>:int,<<sum_1030@98:1>@101:0>:int)
          
          P[<sum_1030@95:0>]((1 + <sum_1030@98:0>):int), ((1 + <sum_1030@98:0>) > 0)
          |- P[<sum_1030@98:0>](<sum_1030@98:0>:int)
          
          P[<sum_1030@92:0>]((1 + <sum_1030@95:0>):int), ((1 + <sum_1030@95:0>) > 0)
          |- P[<sum_1030@95:0>](<sum_1030@95:0>:int)
          
          P[<sum_1030@89:0>]((1 + <sum_1030@92:0>):int), ((1 + <sum_1030@92:0>) > 0)
          |- P[<sum_1030@92:0>](<sum_1030@92:0>:int)
          
          |- P[<sum_1030@89:0>](<sum_1030@89:0>:int)
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        
      end HcSolver.check_validity(2543685)[4] (0.002000 sec.)
      solution:
        P[<fail_1170@124:0>](var333:bool) = false
        P[<<sum_1030@89:1>@119:0>](<sum_1030@98:0>:int,<<sum_1030@98:1>@101:0>:int) =
        ((4 * <sum_1030@98:0>) <= (6 + <<sum_1030@98:1>@101:0>))
        P[<<sum_1030@92:1>@113:0>](<sum_1030@98:0>:int,<<sum_1030@98:1>@101:0>:int) =
        ((3 * <sum_1030@98:0>) <= (3 + <<sum_1030@98:1>@101:0>))
        P[<<sum_1030@95:1>@107:0>](<sum_1030@98:0>:int,<<sum_1030@98:1>@101:0>:int) =
        ((2 * <sum_1030@98:0>) <= (1 + <<sum_1030@98:1>@101:0>))
        P[<<sum_1030@98:1>@101:0>](<sum_1030@98:0>:int,<<sum_1030@98:1>@101:0>:int) =
        (<sum_1030@98:0> <= <<sum_1030@98:1>@101:0>)
        P[<sum_1030@98:0>](<sum_1030@89:0>:int) = true
        P[<sum_1030@95:0>](<sum_1030@89:0>:int) = true
        P[<sum_1030@92:0>](<sum_1030@89:0>:int) = true
        P[<sum_1030@89:0>](<sum_1030@89:0>:int) = true
    end GenHcSolver.solve(2526599)[3] (0.050992 sec.)
    begin YhornInterface.solve(2544476)[3]
      begin HcSolver.solve_ub(2544477)[4]
        encoded:
          P[<fail_1170@124:0>](<fail_1170@124:0>:int)|- bot
          
          P[<<sum_1030@89:1>@119:0>](<f_main_1167@121:0>:int,<f_main_1167@121:2>:int),
          (((4 * <f_main_1167@121:0>) > (6 + <f_main_1167@121:2>)) && (<fail_1170@124:0> = 1))
          |- P[<fail_1170@124:0>](<fail_1170@124:0>:int)
          
          P[<sum_1030@89:0>](<sum_1030@89:0>:int),
          P[<<sum_1030@92:1>@113:0>]((-1 + <sum_1030@89:0>):int,(<<sum_1030@89:1>@119:0> + (-1 * <sum_1030@89:0>)):int),
          (<sum_1030@89:0> > 0) |- P[<<sum_1030@89:1>@119:0>](<sum_1030@89:0>:int,
                                                              <<sum_1030@89:1>@119:0>:int)
          
          P[<sum_1030@92:0>](<sum_1030@92:0>:int),
          P[<<sum_1030@95:1>@107:0>]((-1 + <sum_1030@92:0>):int,(<<sum_1030@92:1>@113:0> + (-1 * <sum_1030@92:0>)):int),
          (<sum_1030@92:0> > 0) |- P[<<sum_1030@92:1>@113:0>](<sum_1030@92:0>:int,
                                                              <<sum_1030@92:1>@113:0>:int)
          
          P[<sum_1030@95:0>](<sum_1030@95:0>:int),
          P[<<sum_1030@98:1>@101:0>]((-1 + <sum_1030@95:0>):int,(<<sum_1030@95:1>@107:0> + (-1 * <sum_1030@95:0>)):int),
          (<sum_1030@95:0> > 0) |- P[<<sum_1030@95:1>@107:0>](<sum_1030@95:0>:int,
                                                              <<sum_1030@95:1>@107:0>:int)
          
          P[<sum_1030@98:0>](<sum_1030@98:0>:int), ((<<sum_1030@98:1>@101:0> = 0) && (<sum_1030@98:0> <= 0))
          |- P[<<sum_1030@98:1>@101:0>](<sum_1030@98:0>:int,<<sum_1030@98:1>@101:0>:int)
          
          P[<sum_1030@95:0>]((1 + <sum_1030@98:0>):int), ((1 + <sum_1030@98:0>) > 0)
          |- P[<sum_1030@98:0>](<sum_1030@98:0>:int)
          
          P[<sum_1030@92:0>]((1 + <sum_1030@95:0>):int), ((1 + <sum_1030@95:0>) > 0)
          |- P[<sum_1030@95:0>](<sum_1030@95:0>:int)
          
          P[<sum_1030@89:0>]((1 + <sum_1030@92:0>):int), ((1 + <sum_1030@92:0>) > 0)
          |- P[<sum_1030@92:0>](<sum_1030@92:0>:int)
          
          |- P[<sum_1030@89:0>](<sum_1030@89:0>:int)
        input to Yhorn:
          P[<fail_1170@124:0>](<fail_1170@124:0>:int)|- bot
          
          P[<<sum_1030@89:1>@119:0>](<f_main_1167@121:0>:int,<f_main_1167@121:2>:int),
          (((4 * <f_main_1167@121:0>) > (6 + <f_main_1167@121:2>)) && (<fail_1170@124:0> = 1))
          |- P[<fail_1170@124:0>](<fail_1170@124:0>:int)
          
          P[<sum_1030@89:0>](<sum_1030@89:0>:int),
          P[<<sum_1030@92:1>@113:0>](var337:int,var338:int),
          (((var338 + <sum_1030@89:0>) = <<sum_1030@89:1>@119:0>) &&
           (((1 + var337) = <sum_1030@89:0>) && (<sum_1030@89:0> > 0)))
          |- P[<<sum_1030@89:1>@119:0>](<sum_1030@89:0>:int,<<sum_1030@89:1>@119:0>:int)
          
          P[<sum_1030@92:0>](<sum_1030@92:0>:int),
          P[<<sum_1030@95:1>@107:0>](var339:int,var340:int),
          (((var340 + <sum_1030@92:0>) = <<sum_1030@92:1>@113:0>) &&
           (((1 + var339) = <sum_1030@92:0>) && (<sum_1030@92:0> > 0)))
          |- P[<<sum_1030@92:1>@113:0>](<sum_1030@92:0>:int,<<sum_1030@92:1>@113:0>:int)
          
          P[<sum_1030@95:0>](<sum_1030@95:0>:int),
          P[<<sum_1030@98:1>@101:0>](var341:int,var342:int),
          (((var342 + <sum_1030@95:0>) = <<sum_1030@95:1>@107:0>) &&
           (((1 + var341) = <sum_1030@95:0>) && (<sum_1030@95:0> > 0)))
          |- P[<<sum_1030@95:1>@107:0>](<sum_1030@95:0>:int,<<sum_1030@95:1>@107:0>:int)
          
          P[<sum_1030@98:0>](<sum_1030@98:0>:int), ((<sum_1030@98:0> <= 0) && (<<sum_1030@98:1>@101:0> = 0))
          |- P[<<sum_1030@98:1>@101:0>](<sum_1030@98:0>:int,<<sum_1030@98:1>@101:0>:int)
          
          P[<sum_1030@95:0>](var343:int), ((var343 = (1 + <sum_1030@98:0>)) && ((1 + <sum_1030@98:0>) > 0))
          |- P[<sum_1030@98:0>](<sum_1030@98:0>:int)
          
          P[<sum_1030@92:0>](var344:int), ((var344 = (1 + <sum_1030@95:0>)) && ((1 + <sum_1030@95:0>) > 0))
          |- P[<sum_1030@95:0>](<sum_1030@95:0>:int)
          
          P[<sum_1030@89:0>](var345:int), ((var345 = (1 + <sum_1030@92:0>)) && ((1 + <sum_1030@92:0>) > 0))
          |- P[<sum_1030@92:0>](<sum_1030@92:0>:int)
          Yhorn (Wed Sep 25 10:52:05 JST 2013)


(0=0) & (v_sep_fail_1170_sep_124_sep_0($359)) -> 1=0.
(($359-1=0) & (4$360-$361-6>0)) & (v_sep_sum_1030_sep_89_sep_1_sep_119_sep_0($360,$361)) -> v_sep_fail_1170_sep_124_sep_0($359).
(($362>0) & (-$362+$363+1=0) & ($362+$364-$365=0)) & (v_sep_sum_1030_sep_92_sep_1_sep_113_sep_0($363,$364)) & (v_sep_sum_1030_sep_89_sep_0($362)) -> v_sep_sum_1030_sep_89_sep_1_sep_119_sep_0($362,$365).
(($366>0) & (-$366+$367+1=0) & ($366+$368-$369=0)) & (v_sep_sum_1030_sep_95_sep_1_sep_107_sep_0($367,$368)) & (v_sep_sum_1030_sep_92_sep_0($366)) -> v_sep_sum_1030_sep_92_sep_1_sep_113_sep_0($366,$369).
(($370>0) & (-$370+$371+1=0) & ($370+$372-$373=0)) & (v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0($371,$372)) & (v_sep_sum_1030_sep_95_sep_0($370)) -> v_sep_sum_1030_sep_95_sep_1_sep_107_sep_0($370,$373).
(($374=0) & ($375<=0)) & (v_sep_sum_1030_sep_98_sep_0($375)) -> v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0($375,$374).
(($375+1>0) & (-$375+$376-1=0)) & (v_sep_sum_1030_sep_95_sep_0($376)) -> v_sep_sum_1030_sep_98_sep_0($375).
(($370+1>0) & (-$370+$377-1=0)) & (v_sep_sum_1030_sep_92_sep_0($377)) -> v_sep_sum_1030_sep_95_sep_0($370).
(($366+1>0) & (-$366+$378-1=0)) & (v_sep_sum_1030_sep_89_sep_0($378)) -> v_sep_sum_1030_sep_92_sep_0($366).
0=0 -> v_sep_sum_1030_sep_89_sep_0($362).


v_sep_fail_1170_sep_124_sep_0: X
v_sep_sum_1030_sep_89_sep_0: X
v_sep_sum_1030_sep_89_sep_1_sep_119_sep_0: X
v_sep_sum_1030_sep_92_sep_0: X
v_sep_sum_1030_sep_92_sep_1_sep_113_sep_0: X
v_sep_sum_1030_sep_95_sep_0: X
v_sep_sum_1030_sep_95_sep_1_sep_107_sep_0: X
v_sep_sum_1030_sep_98_sep_0: X
v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0: X
.............
v_sep_fail_1170_sep_124_sep_0: X
v_sep_sum_1030_sep_89_sep_0: X
v_sep_sum_1030_sep_89_sep_1_sep_119_sep_0: X
v_sep_sum_1030_sep_92_sep_0: X
v_sep_sum_1030_sep_92_sep_1_sep_113_sep_0: X
v_sep_sum_1030_sep_95_sep_0: X
v_sep_sum_1030_sep_95_sep_1_sep_107_sep_0: X
v_sep_sum_1030_sep_98_sep_0: X
v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0: X
...
v_sep_fail_1170_sep_124_sep_0: X
v_sep_sum_1030_sep_89_sep_0: X
v_sep_sum_1030_sep_89_sep_1_sep_119_sep_0: X
v_sep_sum_1030_sep_92_sep_0: X
v_sep_sum_1030_sep_92_sep_1_sep_113_sep_0: X
v_sep_sum_1030_sep_95_sep_0: X
v_sep_sum_1030_sep_95_sep_1_sep_107_sep_0: X
v_sep_sum_1030_sep_98_sep_0: X
v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0: X
.....
v_sep_fail_1170_sep_124_sep_0: X
v_sep_sum_1030_sep_89_sep_0: X
v_sep_sum_1030_sep_89_sep_1_sep_119_sep_0: X
v_sep_sum_1030_sep_92_sep_0: X
v_sep_sum_1030_sep_92_sep_1_sep_113_sep_0: X
v_sep_sum_1030_sep_95_sep_0: X
v_sep_sum_1030_sep_95_sep_1_sep_107_sep_0: X
v_sep_sum_1030_sep_98_sep_0: X
v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0: X
.......
v_sep_fail_1170_sep_124_sep_0: X
v_sep_sum_1030_sep_89_sep_0: X
v_sep_sum_1030_sep_89_sep_1_sep_119_sep_0: X
v_sep_sum_1030_sep_92_sep_0: X
v_sep_sum_1030_sep_92_sep_1_sep_113_sep_0: X
v_sep_sum_1030_sep_95_sep_0: X
v_sep_sum_1030_sep_95_sep_1_sep_107_sep_0: X
v_sep_sum_1030_sep_98_sep_0: X
v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0: X
..........
v_sep_fail_1170_sep_124_sep_0: X
v_sep_sum_1030_sep_89_sep_0: X
v_sep_sum_1030_sep_89_sep_1_sep_119_sep_0: X
v_sep_sum_1030_sep_92_sep_0: X
v_sep_sum_1030_sep_92_sep_1_sep_113_sep_0: X
v_sep_sum_1030_sep_95_sep_0: X
v_sep_sum_1030_sep_95_sep_1_sep_107_sep_0: X
v_sep_sum_1030_sep_98_sep_0: X
v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0: X
............
v_sep_fail_1170_sep_124_sep_0: X
v_sep_sum_1030_sep_89_sep_0: X
v_sep_sum_1030_sep_89_sep_1_sep_119_sep_0: X
v_sep_sum_1030_sep_92_sep_0: X
v_sep_sum_1030_sep_92_sep_1_sep_113_sep_0: X
v_sep_sum_1030_sep_95_sep_0: X
v_sep_sum_1030_sep_95_sep_1_sep_107_sep_0: X
v_sep_sum_1030_sep_98_sep_0: X
v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0: X
.............(0=0) & (v_sep_fail_1170_sep_124_sep_0($359)) -> 1=0.
(($359-1=0) & (4$360-$361-6>0)) & (v_sep_sum_1030_sep_89_sep_1_sep_119_sep_0($360,$361)) -> v_sep_fail_1170_sep_124_sep_0($359).
(($362>0) & (-$362+$363+1=0) & ($362+$364-$365=0)) & (v_sep_sum_1030_sep_92_sep_1_sep_113_sep_0($363,$364)) & (v_sep_sum_1030_sep_89_sep_0($362)) -> v_sep_sum_1030_sep_89_sep_1_sep_119_sep_0($362,$365).
(($366>0) & (-$366+$367+1=0) & ($366+$368-$369=0)) & (v_sep_sum_1030_sep_95_sep_1_sep_107_sep_0($367,$368)) & (v_sep_sum_1030_sep_92_sep_0($366)) -> v_sep_sum_1030_sep_92_sep_1_sep_113_sep_0($366,$369).
(($370>0) & (-$370+$371+1=0) & ($370+$372-$373=0)) & (v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0($371,$372)) & (v_sep_sum_1030_sep_95_sep_0($370)) -> v_sep_sum_1030_sep_95_sep_1_sep_107_sep_0($370,$373).
(($374=0) & ($375<=0)) & (v_sep_sum_1030_sep_98_sep_0($375)) -> v_sep_sum_1030_sep_98_sep_1_sep_101_sep_0($375,$374).
(($375+1>0) & (-$375+$376-1=0)) & (v_sep_sum_1030_sep_95_sep_0($376)) -> v_sep_sum_1030_sep_98_sep_0($375).
(($370+1>0) & (-$370+$377-1=0)) & (v_sep_sum_1030_sep_92_sep_0($377)) -> v_sep_sum_1030_sep_95_sep_0($370).
(($366+1>0) & (-$366+$378-1=0)) & (v_sep_sum_1030_sep_89_sep_0($378)) -> v_sep_sum_1030_sep_92_sep_0($366).
0=0 -> v_sep_sum_1030_sep_89_sep_0($362).

          |- P[<sum_1030@89:0>](<sum_1030@89:0>:int)
        solution:
          P[<fail_1170@124:0>]($379:bool) = false
          P[<sum_1030@89:0>]($392:int) = true
          P[<<sum_1030@89:1>@119:0>]($382:int,$384:int) = ((4 * $382) <= (6 + $384))
          P[<sum_1030@92:0>]($400:int) = true
          P[<<sum_1030@92:1>@113:0>]($387:int,$389:int) = ((3 * $387) <= (3 + $389))
          P[<sum_1030@95:0>]($408:int) = true
          P[<<sum_1030@95:1>@107:0>]($395:int,$397:int) = ((2 * $395) <= (1 + $397))
          P[<sum_1030@98:0>]($411:int) = true
          P[<<sum_1030@98:1>@101:0>]($403:int,$405:int) = ($403 <= $405)
        
      end HcSolver.solve_ub(2544477)[4] (0.030995 sec.)
      begin HcSolver.check_validity(2545055)[4]
        input:
          P[<fail_1170@124:0>](<fail_1170@124:0>:bool)|- bot
          
          P[<<sum_1030@89:1>@119:0>](<f_main_1167@121:0>:int,<f_main_1167@121:2>:int),
          (((4 * <f_main_1167@121:0>) > (6 + <f_main_1167@121:2>)) && <fail_1170@124:0>)
          |- P[<fail_1170@124:0>](<fail_1170@124:0>:bool)
          
          P[<sum_1030@89:0>](<sum_1030@89:0>:int),
          P[<<sum_1030@92:1>@113:0>]((-1 + <sum_1030@89:0>):int,(<<sum_1030@89:1>@119:0> + (-1 * <sum_1030@89:0>)):int),
          (<sum_1030@89:0> > 0) |- P[<<sum_1030@89:1>@119:0>](<sum_1030@89:0>:int,
                                                              <<sum_1030@89:1>@119:0>:int)
          
          P[<sum_1030@92:0>](<sum_1030@92:0>:int),
          P[<<sum_1030@95:1>@107:0>]((-1 + <sum_1030@92:0>):int,(<<sum_1030@92:1>@113:0> + (-1 * <sum_1030@92:0>)):int),
          (<sum_1030@92:0> > 0) |- P[<<sum_1030@92:1>@113:0>](<sum_1030@92:0>:int,
                                                              <<sum_1030@92:1>@113:0>:int)
          
          P[<sum_1030@95:0>](<sum_1030@95:0>:int),
          P[<<sum_1030@98:1>@101:0>]((-1 + <sum_1030@95:0>):int,(<<sum_1030@95:1>@107:0> + (-1 * <sum_1030@95:0>)):int),
          (<sum_1030@95:0> > 0) |- P[<<sum_1030@95:1>@107:0>](<sum_1030@95:0>:int,
                                                              <<sum_1030@95:1>@107:0>:int)
          
          P[<sum_1030@98:0>](<sum_1030@98:0>:int), ((<<sum_1030@98:1>@101:0> = 0) && (<sum_1030@98:0> <= 0))
          |- P[<<sum_1030@98:1>@101:0>](<sum_1030@98:0>:int,<<sum_1030@98:1>@101:0>:int)
          
          P[<sum_1030@95:0>]((1 + <sum_1030@98:0>):int), ((1 + <sum_1030@98:0>) > 0)
          |- P[<sum_1030@98:0>](<sum_1030@98:0>:int)
          
          P[<sum_1030@92:0>]((1 + <sum_1030@95:0>):int), ((1 + <sum_1030@95:0>) > 0)
          |- P[<sum_1030@95:0>](<sum_1030@95:0>:int)
          
          P[<sum_1030@89:0>]((1 + <sum_1030@92:0>):int), ((1 + <sum_1030@92:0>) > 0)
          |- P[<sum_1030@92:0>](<sum_1030@92:0>:int)
          
          |- P[<sum_1030@89:0>](<sum_1030@89:0>:int)
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        
      end HcSolver.check_validity(2545055)[4] (0.013998 sec.)
      solution:
        P[<fail_1170@124:0>]($379:bool) = false
        P[<sum_1030@89:0>]($392:int) = true
        P[<<sum_1030@89:1>@119:0>]($382:int,$384:int) = ((4 * $382) <= (6 + $384))
        P[<sum_1030@92:0>]($400:int) = true
        P[<<sum_1030@92:1>@113:0>]($387:int,$389:int) = ((3 * $387) <= (3 + $389))
        P[<sum_1030@95:0>]($408:int) = true
        P[<<sum_1030@95:1>@107:0>]($395:int,$397:int) = ((2 * $395) <= (1 + $397))
        P[<sum_1030@98:0>]($411:int) = true
        P[<<sum_1030@98:1>@101:0>]($403:int,$405:int) = ($403 <= $405)
    end YhornInterface.solve(2544476)[3] (0.045993 sec.)
    
  end RefTypeInfer.infer_etrs(87248)[2] (53.489868 sec.)
  refinement types:
    main_1165: X
    f_1168: v1:int -> X
    main_1032: v1:int -> (v2:unit -> X) -> X
    sum_1030: v1:int -> (v2:{v2:int | ((4 * v1) <= (6 + v2))} -> X) -> X
    sum_1030: v1:int -> (v2:{v2:int | ((3 * v1) <= (3 + v2))} -> X) -> X
    sum_1030: v1:int -> (v2:{v2:int | ((2 * v1) <= (1 + v2))} -> X) -> X
    sum_1030: v1:int -> (v2:{v2:int | (v1 <= v2)} -> X) -> X
    f_sum_1166: v1:int -> (v2:int -> X) -> v4:int -> X
    f_sum_1166: v1:int -> (v2:int -> X) -> v4:int -> X
    f_sum_1166: v1:int -> (v2:int -> X) -> v4:int -> X
    f_main_1167: v1:int -> (v2:unit -> X) -> v4:int -> X
    fail_1170: v1:{v1:bool | false} -> (v2:unit -> X) -> X
    f_1169: var354:int -> var353:unit -> X
  abstraction types:
    main_1165: X
    f_1168: v1:int -> X
    main_1032: v1:int -> (v2:unit -> X) -> X
    sum_1030: var363:int ->
              (var364:int[var364 -> ((4 * var363) <= (6 + var364)),
                          var364 -> ((3 * var363) <= (3 + var364)),
                          var364 -> ((2 * var363) <= (1 + var364)),
                          var364 -> (var363 <= var364)] -> X) -> X
    f_sum_1166: var372:int -> (var373:int -> X) -> var375:int -> X
    f_main_1167: v1:int -> (v2:unit -> X) -> v4:int -> X
    fail_1170: v1:bool -> (v2:unit -> X) -> X
    f_1169: var354:int -> var353:unit -> X
  
end AbsTypeInfer.refine(87247)[1] (53.491868 sec.)
DONE!

Prefix of spurious counter-example::
0; 0; 0; 1; 1; 1; 0; 0; 0; 0; 1

Program with abstraction types (CEGAR-cycle 4)::
Main: main_1165
  main_1165 -> (rand_int f_1168)
  f_1168 x_1140 -> (main_1032 x_1140 (f_1169 x_1140))
  f_1169 x_1140 x_1137 -> end
  f_main_1167 n_1033 k_main_1109 x_1113 when (((4 * n_1033) - 6) <= x_1113) -> (k_main_1109 ())
  f_main_1167 n_1033 k_main_1109 x_1113 when (not (((4 * n_1033) - 6) <= x_1113)) -> (fail_1170 true k_main_1109)
  f_sum_1166 n_1031 k_sum_1077 x_1081 -> (k_sum_1077 (n_1031 + x_1081))
  fail_1170 b k -> {fail} => (k ())
  main_1032 n_1033 k_main_1109 -> (sum_1030 n_1033 (f_main_1167 n_1033 k_main_1109))
  sum_1030 n_1031 k_sum_1077 when (n_1031 <= 0) -> (k_sum_1077 0)
  sum_1030 n_1031 k_sum_1077 when (not (n_1031 <= 0)) -> (sum_1030 (n_1031 - 1) (f_sum_1166 n_1031 k_sum_1077))
Types:
  main_1165 : X
  fail_1170 : (x_1:bool[x_1] -> (unit -> X) -> X)
  sum_1030 : (x_1:int ->
              (x_3:int[x_1 <= x_3; 2*x_1 <= x_3 + 1; 3*x_1 <= x_3 + 3; 
                       4*x_1 <= x_3 + 6; 2*x_1 <= x_3; 3*x_1 <= x_3 + 2; 
                       4*x_1 <= x_3 + 5; 3*x_1 <= x_3; 4*x_1 <= x_3 + 3; 
                       4*x_1 <= x_3] -> X) -> X)
  
(4-1) Abstracting ... DONE!

(4-2) Checking HORS ... Restart TRecS (param: 1000 -> 2000)
Restart TRecS (param: 2000 -> 4000)
Restart TRecS (param: 4000 -> 8000)
DONE!

Safe!

Refinement Types:
  sum: ((x_1:int -> {x_2:int | 4 * x_1 <= x_2 + 6}) /\ 
        (x_3:int ->
             ({x_4:int | ((((2 * x_3 <= x_4 + 1 && 2 * x_3 <= x_4) && 3 * x_3 <= x_4) && 3 * x_3 <= x_4 + 2) &&
                          3 * x_3 <= x_4 + 3)
                         && x_3 <= x_4} \/
              {x_5:int | (((((2 * x_3 <= x_5 + 1 && 2 * x_3 <= x_5) && 3 * x_3 > x_5) && 4 * x_3 <= x_5) &&
                           3 * x_3 <= x_5 + 2)
                          && 3 * x_3 <= x_5 + 3)
                         && x_3 <= x_5} \/
              {x_6:int | (((((2 * x_3 <= x_6 + 1 && 2 * x_3 <= x_6) && 3 * x_3 > x_6) && 4 * x_3 > x_6) &&
                           3 * x_3 <= x_6 + 2)
                          && 3 * x_3 <= x_6 + 3)
                         && x_3 <= x_6} \/
              {x_7:int | (((((2 * x_3 <= x_7 + 1 && 2 * x_3 <= x_7) && 4 * x_3 <= x_7 + 5) && 3 * x_3 <= x_7) &&
                           3 * x_3 > x_7 + 2)
                          && 3 * x_3 <= x_7 + 3)
                         && x_3 <= x_7} \/
              {x_8:int | ((((((2 * x_3 <= x_8 + 1 && 2 * x_3 <= x_8) && 4 * x_3 <= x_8 + 5) && 4 * x_3 <= x_8) &&
                            3 * x_3 > x_8)
                           && 3 * x_3 > x_8 + 2)
                          && 3 * x_3 <= x_8 + 3)
                         && x_3 <= x_8} \/
              {x_9:int | ((((((2 * x_3 <= x_9 + 1 && 2 * x_3 <= x_9) && 4 * x_3 <= x_9 + 5) && 4 * x_3 > x_9) &&
                            3 * x_3 > x_9)
                           && 3 * x_3 > x_9 + 2)
                          && 3 * x_3 <= x_9 + 3)
                         && x_3 <= x_9} \/
              {x_10:int | (((((2 * x_3 <= x_10 + 1 && 2 * x_3 <= x_10) && 4 * x_3 > x_10 + 5) && 3 * x_3 <= x_10) &&
                            3 * x_3 > x_10 + 2)
                           && 3 * x_3 <= x_10 + 3)
                          && x_3 <= x_10} \/
              {x_11:int | (((((((2 * x_3 <= x_11 + 1 && 2 * x_3 <= x_11) && 4 * x_3 > x_11 + 5) && 4 * x_3 <= x_11 + 3)
                              && 4 * x_3 <= x_11)
                             && 3 * x_3 > x_11)
                            && 3 * x_3 > x_11 + 2)
                           && 3 * x_3 <= x_11 + 3)
                          && x_3 <= x_11} \/
              {x_12:int | (((((((2 * x_3 <= x_12 + 1 && 2 * x_3 <= x_12) && 4 * x_3 > x_12 + 5) && 4 * x_3 <= x_12 + 3)
                              && 4 * x_3 > x_12)
                             && 3 * x_3 > x_12)
                            && 3 * x_3 > x_12 + 2)
                           && 3 * x_3 <= x_12 + 3)
                          && x_3 <= x_12} \/
              {x_13:int | (((((((2 * x_3 <= x_13 + 1 && 2 * x_3 <= x_13) && 4 * x_3 > x_13 + 5) && 4 * x_3 > x_13 + 3)
                              && 4 * x_3 <= x_13)
                             && 3 * x_3 > x_13)
                            && 3 * x_3 > x_13 + 2)
                           && 3 * x_3 <= x_13 + 3)
                          && x_3 <= x_13} \/
              {x_14:int | (((((((2 * x_3 <= x_14 + 1 && 2 * x_3 <= x_14) && 4 * x_3 > x_14 + 5) && 4 * x_3 > x_14 + 3)
                              && 4 * x_3 > x_14)
                             && 3 * x_3 > x_14)
                            && 3 * x_3 > x_14 + 2)
                           && 3 * x_3 <= x_14 + 3)
                          && x_3 <= x_14} \/
              {x_15:int | ((((2 * x_3 <= x_15 + 1 && 2 * x_3 > x_15) && 3 * x_3 <= x_15) && 3 * x_3 <= x_15 + 2) &&
                           3 * x_3 <= x_15 + 3)
                          && x_3 <= x_15} \/
              {x_16:int | (((((2 * x_3 <= x_16 + 1 && 2 * x_3 > x_16) && 3 * x_3 > x_16) && 4 * x_3 <= x_16) &&
                            3 * x_3 <= x_16 + 2)
                           && 3 * x_3 <= x_16 + 3)
                          && x_3 <= x_16} \/
              {x_17:int | (((((2 * x_3 <= x_17 + 1 && 2 * x_3 > x_17) && 3 * x_3 > x_17) && 4 * x_3 > x_17) &&
                            3 * x_3 <= x_17 + 2)
                           && 3 * x_3 <= x_17 + 3)
                          && x_3 <= x_17} \/
              {x_18:int | (((((2 * x_3 <= x_18 + 1 && 2 * x_3 > x_18) && 4 * x_3 <= x_18 + 5) && 3 * x_3 <= x_18) &&
                            3 * x_3 > x_18 + 2)
                           && 3 * x_3 <= x_18 + 3)
                          && x_3 <= x_18} \/
              {x_19:int | (((((((2 * x_3 <= x_19 + 1 && 2 * x_3 > x_19) && 4 * x_3 <= x_19 + 5) && 4 * x_3 <= x_19 + 3)
                              && 4 * x_3 <= x_19)
                             && 3 * x_3 > x_19)
                            && 3 * x_3 > x_19 + 2)
                           && 3 * x_3 <= x_19 + 3)
                          && x_3 <= x_19} \/
              {x_20:int | (((((((2 * x_3 <= x_20 + 1 && 2 * x_3 > x_20) && 4 * x_3 <= x_20 + 5) && 4 * x_3 <= x_20 + 3)
                              && 4 * x_3 > x_20)
                             && 3 * x_3 > x_20)
                            && 3 * x_3 > x_20 + 2)
                           && 3 * x_3 <= x_20 + 3)
                          && x_3 <= x_20} \/
              {x_21:int | (((((((2 * x_3 <= x_21 + 1 && 2 * x_3 > x_21) && 4 * x_3 <= x_21 + 5) && 4 * x_3 > x_21 + 3)
                              && 4 * x_3 <= x_21)
                             && 3 * x_3 > x_21)
                            && 3 * x_3 > x_21 + 2)
                           && 3 * x_3 <= x_21 + 3)
                          && x_3 <= x_21} \/
              {x_22:int | (((((((2 * x_3 <= x_22 + 1 && 2 * x_3 > x_22) && 4 * x_3 <= x_22 + 5) && 4 * x_3 > x_22 + 3)
                              && 4 * x_3 > x_22)
                             && 3 * x_3 > x_22)
                            && 3 * x_3 > x_22 + 2)
                           && 3 * x_3 <= x_22 + 3)
                          && x_3 <= x_22} \/
              {x_23:int | (((((2 * x_3 <= x_23 + 1 && 2 * x_3 > x_23) && 4 * x_3 > x_23 + 5) && 3 * x_3 <= x_23) &&
                            3 * x_3 > x_23 + 2)
                           && 3 * x_3 <= x_23 + 3)
                          && x_3 <= x_23} \/
              {x_24:int | (((((((2 * x_3 <= x_24 + 1 && 2 * x_3 > x_24) && 4 * x_3 > x_24 + 5) && 4 * x_3 <= x_24 + 3)
                              && 4 * x_3 <= x_24)
                             && 3 * x_3 > x_24)
                            && 3 * x_3 > x_24 + 2)
                           && 3 * x_3 <= x_24 + 3)
                          && x_3 <= x_24} \/
              {x_25:int | (((((((2 * x_3 <= x_25 + 1 && 2 * x_3 > x_25) && 4 * x_3 > x_25 + 5) && 4 * x_3 <= x_25 + 3)
                              && 4 * x_3 > x_25)
                             && 3 * x_3 > x_25)
                            && 3 * x_3 > x_25 + 2)
                           && 3 * x_3 <= x_25 + 3)
                          && x_3 <= x_25} \/
              {x_26:int | (((((((2 * x_3 <= x_26 + 1 && 2 * x_3 > x_26) && 4 * x_3 > x_26 + 5) && 4 * x_3 > x_26 + 3)
                              && 4 * x_3 <= x_26)
                             && 3 * x_3 > x_26)
                            && 3 * x_3 > x_26 + 2)
                           && 3 * x_3 <= x_26 + 3)
                          && x_3 <= x_26} \/
              {x_27:int | (((((((2 * x_3 <= x_27 + 1 && 2 * x_3 > x_27) && 4 * x_3 > x_27 + 5) && 4 * x_3 > x_27 + 3)
                              && 4 * x_3 > x_27)
                             && 3 * x_3 > x_27)
                            && 3 * x_3 > x_27 + 2)
                           && 3 * x_3 <= x_27 + 3)
                          && x_3 <= x_27})))

cycles: 4
total: 690.320 sec
  abst: 0.941 sec
  mc: 619.838 sec
  refine: 60.674 sec
    exparam: 1.906 sec
