MoCHi: Model Checker for Higher-Order Programs
  TRecS version: 1.30
  OCaml version: 4.00.1
  Command: ../mochi.opt -gchi queen.ml

parsed::
 let make_array_1030 n_1031 s_1032 i_1033 =
   let u_1052 = if 0 <= i_1033 && i_1033 < n_1031 then
                  ()
                else
                  {fail} () 
   in
     s_1032 
 in
 let update_1034 i_1035 n_1036 a_1037 x_1038 =
   let u_1104 = a_1037 i_1035 
   in
   let a_1039 j_1040 = if i_1035 = j_1040 then
                         x_1038
                       else
                         a_1037 j_1040 
   in
     a_1039 
 in
 let print_string_1041 s_1042 = () 
 in
 let abs_1043 x_1044 = if x_1044 < 0 then
                         0 - x_1044
                       else
                         x_1044 
 in
 let queen_1045 size_1046 =
   let queenArray_1047 = make_array_1030 size_1046 0 
   in
   let assign_1048 i_1049 j_1050 a_1051 = update_1034 i_1049 size_1046 a_1051 j_1050 
   in
   let rec dotsPrint_1052 n_1053 =
     if n_1053 = 0 then
       ()
     else
       let u_1175 = print_string_1041 () 
       in
         dotsPrint_1052 (n_1053 - 1) 
   in
   let queenPrint_1054 a_1055 =
     let rec aux_1056 row_1057 a_1058 =
       if row_1057 >= size_1046 then
         ()
       else
         let n_1059 = a_1058 row_1057 
         in
         let u_1220 = dotsPrint_1052 (n_1059 - 1) 
         in
         let u_1219 = print_string_1041 () 
         in
         let u_1218 = dotsPrint_1052 (size_1046 - n_1059) 
         in
         let u_1217 = print_string_1041 () 
         in
           aux_1056 (row_1057 + 1) a_1058 
     in
     let u_1226 = aux_1056 0 a_1055 
     in
       print_string_1041 () 
   in
   let test_1060 j_1061 a_1062 =
     let qj_1063 = a_1062 j_1061 
     in
     let rec aux_1064 i_1065 =
       if i_1065 < j_1061 then
         let qi_1066 = a_1062 i_1065 
         in
           if qi_1066 = qj_1063 then
             false
           else
             if abs_1043 (qj_1063 - qi_1066) = j_1061 - i_1065 then
               false
             else
               aux_1064 (i_1065 + 1)
       else
         true 
     in
       aux_1064 0 
   in
   let rec loop_1067 row_1068 a_1069 =
     let next_1070 = a_1069 row_1068 + 1 
     in
       if next_1070 > size_1046 then
         let a_1071 = assign_1048 row_1068 0 a_1069 
         in
           if row_1068 = 0 then
             ()
           else
             loop_1067 (row_1068 - 1) a_1071
       else
         let a_1072 = assign_1048 row_1068 next_1070 a_1069 
         in
           if test_1060 row_1068 a_1072 then
             if row_1068 > size_1046 then
               let u_1324 = queenPrint_1054 a_1072 
               in
                 loop_1067 row_1068 a_1072
             else
               loop_1067 (row_1068 + 1) a_1072
           else
             loop_1067 row_1068 a_1072 
   in
     loop_1067 0 queenArray_1047 
 in
 let main_1073 n_1074 = if n_1074 > 0 then
                          let u_1345 = queen_1045 n_1074 
                          in
                            ()
                        else
                          () 
 in
   ()

set_target::
 let make_array_1030 n_1031 s_1032 i_1033 =
   let u_1052 = if 0 <= i_1033 && i_1033 < n_1031 then
                  ()
                else
                  {fail} () 
   in
     s_1032 
 in
 let update_1034 i_1035 n_1036 a_1037 x_1038 =
   let u_1104 = a_1037 i_1035 
   in
   let a_1039 j_1040 = if i_1035 = j_1040 then
                         x_1038
                       else
                         a_1037 j_1040 
   in
     a_1039 
 in
 let print_string_1041 s_1042 = () 
 in
 let abs_1043 x_1044 = if x_1044 < 0 then
                         0 - x_1044
                       else
                         x_1044 
 in
 let queen_1045 size_1046 =
   let queenArray_1047 = make_array_1030 size_1046 0 
   in
   let assign_1048 i_1049 j_1050 a_1051 = update_1034 i_1049 size_1046 a_1051 j_1050 
   in
   let rec dotsPrint_1052 n_1053 =
     if n_1053 = 0 then
       ()
     else
       let u_1175 = print_string_1041 () 
       in
         dotsPrint_1052 (n_1053 - 1) 
   in
   let queenPrint_1054 a_1055 =
     let rec aux_1056 row_1057 a_1058 =
       if row_1057 >= size_1046 then
         ()
       else
         let n_1059 = a_1058 row_1057 
         in
         let u_1220 = dotsPrint_1052 (n_1059 - 1) 
         in
         let u_1219 = print_string_1041 () 
         in
         let u_1218 = dotsPrint_1052 (size_1046 - n_1059) 
         in
         let u_1217 = print_string_1041 () 
         in
           aux_1056 (row_1057 + 1) a_1058 
     in
     let u_1226 = aux_1056 0 a_1055 
     in
       print_string_1041 () 
   in
   let test_1060 j_1061 a_1062 =
     let qj_1063 = a_1062 j_1061 
     in
     let rec aux_1064 i_1065 =
       if i_1065 < j_1061 then
         let qi_1066 = a_1062 i_1065 
         in
           if qi_1066 = qj_1063 then
             false
           else
             if abs_1043 (qj_1063 - qi_1066) = j_1061 - i_1065 then
               false
             else
               aux_1064 (i_1065 + 1)
       else
         true 
     in
       aux_1064 0 
   in
   let rec loop_1067 row_1068 a_1069 =
     let next_1070 = a_1069 row_1068 + 1 
     in
       if next_1070 > size_1046 then
         let a_1071 = assign_1048 row_1068 0 a_1069 
         in
           if row_1068 = 0 then
             ()
           else
             loop_1067 (row_1068 - 1) a_1071
       else
         let a_1072 = assign_1048 row_1068 next_1070 a_1069 
         in
           if test_1060 row_1068 a_1072 then
             if row_1068 > size_1046 then
               let u_1324 = queenPrint_1054 a_1072 
               in
                 loop_1067 row_1068 a_1072
             else
               loop_1067 (row_1068 + 1) a_1072
           else
             loop_1067 row_1068 a_1072 
   in
     loop_1067 0 queenArray_1047 
 in
 let main_1073 n_1074 = if n_1074 > 0 then
                          let u_1345 = queen_1045 n_1074 
                          in
                            ()
                        else
                          () 
 in
 let main_1347 = let arg1_1346 = rand_int () 
                 in
                   main_1073 arg1_1346 
 in
   ()

copy_poly::
 let make_array_1355 (n_1031:int) (s_1032:int) (i_1033:int) =
   let u_1052 = if 0 <= i_1033 && i_1033 < n_1031 then
                  ()
                else
                  {fail} () 
   in
     s_1032 
 in
 let update_1354 (i_1035:int) (n_1036:int) (a_1037:(int -> int)) (x_1038:int) =
   let u_1104 = a_1037 i_1035 
   in
   let a_1039 (j_1040:int) = if i_1035 = j_1040 then
                               x_1038
                             else
                               a_1037 j_1040 
   in
     a_1039 
 in
 let print_string_1350 (s_1042:unit) = () 
 in
 let abs_1043 (x_1044:int) = if x_1044 < 0 then
                               0 - x_1044
                             else
                               x_1044 
 in
 let queen_1045 (size_1046:int) =
   let queenArray_1047 = make_array_1355 size_1046 0 
   in
   let assign_1348 (i_1049:int) (j_1050:int) (a_1051:(int -> int)) = update_1354 i_1049 size_1046 a_1051 j_1050 
   in
   let rec dotsPrint_1052 (n_1053:int) =
     if n_1053 = 0 then
       ()
     else
       let u_1175 = print_string_1350 () 
       in
         dotsPrint_1052 (n_1053 - 1) 
   in
   let queenPrint_1054 (a_1055:(int -> int)) =
     let rec aux_1056 (row_1057:int) (a_1058:(int -> int)) =
       if row_1057 >= size_1046 then
         ()
       else
         let n_1059 = a_1058 row_1057 
         in
         let u_1220 = dotsPrint_1052 (n_1059 - 1) 
         in
         let u_1219 = print_string_1350 () 
         in
         let u_1218 = dotsPrint_1052 (size_1046 - n_1059) 
         in
         let u_1217 = print_string_1350 () 
         in
           aux_1056 (row_1057 + 1) a_1058 
     in
     let u_1226 = aux_1056 0 a_1055 
     in
       print_string_1350 () 
   in
   let test_1060 (j_1061:int) (a_1062:(int -> int)) =
     let qj_1063 = a_1062 j_1061 
     in
     let rec aux_1064 (i_1065:int) =
       if i_1065 < j_1061 then
         let qi_1066 = a_1062 i_1065 
         in
           if qi_1066 = qj_1063 then
             false
           else
             if abs_1043 (qj_1063 - qi_1066) = j_1061 - i_1065 then
               false
             else
               aux_1064 (i_1065 + 1)
       else
         true 
     in
       aux_1064 0 
   in
   let rec loop_1067 (row_1068:int) (a_1069:(int -> int)) =
     let next_1070 = a_1069 row_1068 + 1 
     in
       if next_1070 > size_1046 then
         let a_1071 = assign_1348 row_1068 0 a_1069 
         in
           if row_1068 = 0 then
             ()
           else
             loop_1067 (row_1068 - 1) a_1071
       else
         let a_1072 = assign_1348 row_1068 next_1070 a_1069 
         in
           if test_1060 row_1068 a_1072 then
             if row_1068 > size_1046 then
               let u_1324 = queenPrint_1054 a_1072 
               in
                 loop_1067 row_1068 a_1072
             else
               loop_1067 (row_1068 + 1) a_1072
           else
             loop_1067 row_1068 a_1072 
   in
     loop_1067 0 queenArray_1047 
 in
 let main_1073 (n_1074:int) = if n_1074 > 0 then
                                let u_1345 = queen_1045 n_1074 
                                in
                                  ()
                              else
                                () 
 in
 let main_1347 = let arg1_1346 = rand_int () 
                 in
                   main_1073 arg1_1346 
 in
   ()

CPS::
 let make_array_1355 (n_1031:int) (s_1032:int) (i_1033:int) (k_make_array_1386:(
   int -> X)) =
   let k_make_array_u_1403 (x_1389:unit) = k_make_array_1386 s_1032 
   in
   let k_make_array_u_1392 (b_1404:bool) =
     if b_1404 then
       k_make_array_u_1403 ()
     else
       {|fail|} () k_make_array_u_1403 
   in
     if 0 <= i_1033 then
       k_make_array_u_1392 (i_1033 < n_1031)
     else
       k_make_array_u_1392 false 
 in
 let update_1354
   (i_1035:int) (n_1036:int) (a_1037:(int -> ((int -> X) -> X))) (x_1038:int) (k_update_1451:(
   (int -> ((int -> X) -> X)) -> X)) =
   a_1037 i_1035
     (fun x_1457 ->
        k_update_1451
          (let a_1039 (j_1040:int) (k_update_a_1472:(int -> X)) =
             if i_1035 = j_1040 then
               k_update_a_1472 x_1038
             else
               a_1037 j_1040 k_update_a_1472 
           in
             a_1039)) 
 in
 let print_string_1350 (s_1042:unit) (k_print_string_1503:(unit -> X)) = k_print_string_1503 () 
 in
 let abs_1043 (x_1044:int) (k_abs_1517:(int -> X)) =
   if x_1044 < 0 then
     k_abs_1517 (0 - x_1044)
   else
     k_abs_1517 x_1044 
 in
 let queen_1045 (size_1046:int) (k_queen_1535:(unit -> X)) =
   let assign_1348
     (i_1049:int) (j_1050:int) (a_1051:(int -> ((int -> X) -> X))) (k_queen_assign_1596:(
     (int -> ((int -> X) -> X)) -> X)) = update_1354 i_1049 size_1046 a_1051 j_1050 k_queen_assign_1596 
   in
   let rec dotsPrint_1052 (n_1053:int) (k_queen_dotsPrint_1638:(unit -> X)) =
     if n_1053 = 0 then
       k_queen_dotsPrint_1638 ()
     else
       print_string_1350 () (fun x_1641 -> dotsPrint_1052 (n_1053 - 1) k_queen_dotsPrint_1638) 
   in
   let queenPrint_1054 (a_1055:(int -> ((int -> X) -> X))) (k_queen_queenPrint_1691:(
     unit -> X)) =
     let rec aux_1056 (row_1057:int) (a_1058:(int -> ((int -> X) -> X))) (k_queen_queenPrint_aux_1720:(
       unit -> X)) =
       if row_1057 >= size_1046 then
         k_queen_queenPrint_aux_1720 ()
       else
         a_1058 row_1057
           (fun x_1723 ->
              dotsPrint_1052 (x_1723 - 1)
                (fun x_1736 ->
                   print_string_1350 ()
                     (fun x_1749 ->
                        dotsPrint_1052 (size_1046 - x_1723)
                          (fun x_1762 ->
                             print_string_1350 ()
                               (fun x_1775 -> aux_1056 (row_1057 + 1) a_1058 k_queen_queenPrint_aux_1720))))) 
     in
       aux_1056 0 a_1055 (fun x_1815 -> print_string_1350 () k_queen_queenPrint_1691) 
   in
   let test_1060 (j_1061:int) (a_1062:(int -> ((int -> X) -> X))) (k_queen_test_1877:(
     bool -> X)) =
     a_1062 j_1061
       (fun x_1880 ->
          (let rec aux_1064 (i_1065:int) (k_queen_test_aux_1904:(bool -> X)) =
             if i_1065 < j_1061 then
               a_1062 i_1065
                 (fun x_1907 ->
                    (if x_1907 = x_1880 then
                       k_queen_test_aux_1904 false
                     else
                       abs_1043 (x_1880 - x_1907)
                         (fun x_1920 ->
                            (if x_1920 = j_1061 - i_1065 then
                               k_queen_test_aux_1904 false
                             else
                               aux_1064 (i_1065 + 1) k_queen_test_aux_1904))))
             else
               k_queen_test_aux_1904 true 
           in
             aux_1064 0 k_queen_test_1877)) 
   in
   let rec loop_1067 (row_1068:int) (a_1069:(int -> ((int -> X) -> X))) (k_queen_loop_1992:(
     unit -> X)) =
     a_1069 row_1068
       (fun x_1998 ->
          (if x_1998 + 1 > size_1046 then
             assign_1348 row_1068 0 a_1069
               (fun x_2015 ->
                  (if row_1068 = 0 then
                     k_queen_loop_1992 ()
                   else
                     loop_1067 (row_1068 - 1) x_2015 k_queen_loop_1992))
           else
             assign_1348 row_1068 (x_1998 + 1) a_1069
               (fun x_2087 ->
                  test_1060 row_1068 x_2087
                    (fun b_2251 ->
                       (if b_2251 then
                          if row_1068 > size_1046 then
                            queenPrint_1054 x_2087 (fun x_2152 -> loop_1067 row_1068 x_2087 k_queen_loop_1992)
                          else
                            loop_1067 (row_1068 + 1) x_2087 k_queen_loop_1992
                        else
                          loop_1067 row_1068 x_2087 k_queen_loop_1992))))) 
   in
     loop_1067 0 (make_array_1355 size_1046 0) k_queen_1535 
 in
 let main_1073 (n_1074:int) (k_main_2292:(unit -> X)) =
   if n_1074 > 0 then
     queen_1045 n_1074 (fun x_2295 -> k_main_2292 ())
   else
     k_main_2292 () 
 in
   rand_int_cps () (fun x_2315 -> main_1073 x_2315 (fun x_2312 -> end))

Program with abstraction types (CEGAR-cycle 0)::
Main: main_2340
  main_2340 -> (rand_int f_2358)
  a_1039 i_1035 n_1036 x_1038 x_1457 a_1037 j_1040 k_update_a_1472 when (i_1035 = j_1040) -> (k_update_a_1472 x_1038)
  a_1039 i_1035 n_1036 x_1038 x_1457 a_1037 j_1040 k_update_a_1472 when (
      not (i_1035 = j_1040)) -> (a_1037 j_1040 k_update_a_1472)
  abs_1043 x_1044 k_abs_1517 when (x_1044 < 0) -> (k_abs_1517 (0 - x_1044))
  abs_1043 x_1044 k_abs_1517 when (not (x_1044 < 0)) -> (k_abs_1517 x_1044)
  assign_1348 size_1046 i_1049 j_1050 a_1051 k_queen_assign_1596 ->
      (update_1354 i_1049 size_1046 a_1051 j_1050 k_queen_assign_1596)
  aux_1056 size_1046 row_1057 a_1058 k_queen_queenPrint_aux_1720 when (
      row_1057 >= size_1046) -> (k_queen_queenPrint_aux_1720 ())
  aux_1056 size_1046 row_1057 a_1058 k_queen_queenPrint_aux_1720 when (
      not (row_1057 >= size_1046)) ->
      (a_1058 row_1057 (f_aux_2343 row_1057 size_1046 a_1058 k_queen_queenPrint_aux_1720))
  aux_1064 j_1061 size_1046 x_1880 a_1062 i_1065 k_queen_test_aux_1904 when (
      i_1065 < j_1061) -> (a_1062 i_1065 (f_aux_2350 i_1065 j_1061 size_1046 x_1880 a_1062 k_queen_test_aux_1904))
  aux_1064 j_1061 size_1046 x_1880 a_1062 i_1065 k_queen_test_aux_1904 when (
      not (i_1065 < j_1061)) -> (k_queen_test_aux_1904 true)
  br_f_loop_2360 b_2361 row_1068 size_1046 x_1998 k_queen_loop_1992 x_2087 b_2251 when b_2361 ->
      (queenPrint_1054 size_1046 x_2087 (f_loop_2356 b_2251 row_1068 size_1046 x_1998 k_queen_loop_1992 x_2087))
  br_f_loop_2360 b_2361 row_1068 size_1046 x_1998 k_queen_loop_1992 x_2087 b_2251 when (
      not b_2361) -> (loop_1067 size_1046 (row_1068 + 1) x_2087 k_queen_loop_1992)
  dotsPrint_1052 size_1046 n_1053 k_queen_dotsPrint_1638 when (n_1053 = 0) -> (k_queen_dotsPrint_1638 ())
  dotsPrint_1052 size_1046 n_1053 k_queen_dotsPrint_1638 when (not (n_1053 = 0)) ->
      (print_string_1350 () (f_dotsPrint_2342 n_1053 size_1046 k_queen_dotsPrint_1638))
  f_2358 x_2315 -> (main_1073 x_2315 (f_2359 x_2315))
  f_2359 x_2315 x_2312 -> end
  f_aux_2343 row_1057 size_1046 a_1058 k_queen_queenPrint_aux_1720 x_1723 ->
      (dotsPrint_1052 size_1046 (x_1723 - 1) (f_aux_2344 row_1057 size_1046 x_1723 a_1058 k_queen_queenPrint_aux_1720))
  f_aux_2344 row_1057 size_1046 x_1723 a_1058 k_queen_queenPrint_aux_1720 x_1736 ->
      (print_string_1350 () (f_aux_2345 row_1057 size_1046 x_1723 x_1736 a_1058 k_queen_queenPrint_aux_1720))
  f_aux_2345 row_1057 size_1046 x_1723 x_1736 a_1058 k_queen_queenPrint_aux_1720 x_1749 ->
      (dotsPrint_1052 size_1046 (size_1046 - x_1723)
        (f_aux_2346 row_1057 size_1046 x_1723 x_1736 x_1749 a_1058 k_queen_queenPrint_aux_1720))
  f_aux_2346 row_1057 size_1046 x_1723 x_1736 x_1749 a_1058 k_queen_queenPrint_aux_1720 x_1762 ->
      (print_string_1350 ()
        (f_aux_2347 row_1057 size_1046 x_1723 x_1736 x_1749 x_1762 a_1058 k_queen_queenPrint_aux_1720))
  f_aux_2347 row_1057 size_1046 x_1723 x_1736 x_1749 x_1762 a_1058 k_queen_queenPrint_aux_1720 x_1775 ->
      (aux_1056 size_1046 (row_1057 + 1) a_1058 k_queen_queenPrint_aux_1720)
  f_aux_2350 i_1065 j_1061 size_1046 x_1880 a_1062 k_queen_test_aux_1904 x_1907 when (
      x_1907 = x_1880) -> (k_queen_test_aux_1904 false)
  f_aux_2350 i_1065 j_1061 size_1046 x_1880 a_1062 k_queen_test_aux_1904 x_1907 when (
      not (x_1907 = x_1880)) ->
      (abs_1043 (x_1880 - x_1907) (f_aux_2351 i_1065 j_1061 size_1046 x_1880 x_1907 a_1062 k_queen_test_aux_1904))
  f_aux_2351 i_1065 j_1061 size_1046 x_1880 x_1907 a_1062 k_queen_test_aux_1904 x_1920 when (
      x_1920 = (j_1061 - i_1065)) -> (k_queen_test_aux_1904 false)
  f_aux_2351 i_1065 j_1061 size_1046 x_1880 x_1907 a_1062 k_queen_test_aux_1904 x_1920 when (
      not (x_1920 = (j_1061 - i_1065))) -> (aux_1064 j_1061 size_1046 x_1880 a_1062 (i_1065 + 1) k_queen_test_aux_1904)
  f_dotsPrint_2342 n_1053 size_1046 k_queen_dotsPrint_1638 x_1641 ->
      (dotsPrint_1052 size_1046 (n_1053 - 1) k_queen_dotsPrint_1638)
  f_loop_2352 row_1068 size_1046 a_1069 k_queen_loop_1992 x_1998 when (
      (x_1998 + 1) > size_1046) ->
      (assign_1348 size_1046 row_1068 0 a_1069 (f_loop_2353 row_1068 size_1046 x_1998 k_queen_loop_1992))
  f_loop_2352 row_1068 size_1046 a_1069 k_queen_loop_1992 x_1998 when (
      not ((x_1998 + 1) > size_1046)) ->
      (assign_1348 size_1046 row_1068 (x_1998 + 1) a_1069 (f_loop_2354 row_1068 size_1046 x_1998 k_queen_loop_1992))
  f_loop_2353 row_1068 size_1046 x_1998 k_queen_loop_1992 x_2015 when (row_1068 = 0) -> (k_queen_loop_1992 ())
  f_loop_2353 row_1068 size_1046 x_1998 k_queen_loop_1992 x_2015 when (
      not (row_1068 = 0)) -> (loop_1067 size_1046 (row_1068 - 1) x_2015 k_queen_loop_1992)
  f_loop_2354 row_1068 size_1046 x_1998 k_queen_loop_1992 x_2087 ->
      (test_1060 size_1046 row_1068 x_2087 (f_loop_2355 row_1068 size_1046 x_1998 k_queen_loop_1992 x_2087))
  f_loop_2355 row_1068 size_1046 x_1998 k_queen_loop_1992 x_2087 b_2251 when b_2251 ->
      (br_f_loop_2360 (row_1068 > size_1046) row_1068 size_1046 x_1998 k_queen_loop_1992 x_2087 b_2251)
  f_loop_2355 row_1068 size_1046 x_1998 k_queen_loop_1992 x_2087 b_2251 when (
      not b_2251) -> (loop_1067 size_1046 row_1068 x_2087 k_queen_loop_1992)
  f_loop_2356 b_2251 row_1068 size_1046 x_1998 k_queen_loop_1992 x_2087 x_2152 ->
      (loop_1067 size_1046 row_1068 x_2087 k_queen_loop_1992)
  f_main_2357 n_1074 k_main_2292 x_2295 -> (k_main_2292 ())
  f_queenPrint_2348 size_1046 k_queen_queenPrint_1691 x_1815 -> (print_string_1350 () k_queen_queenPrint_1691)
  f_test_2349 j_1061 size_1046 a_1062 k_queen_test_1877 x_1880 ->
      (aux_1064 j_1061 size_1046 x_1880 a_1062 0 k_queen_test_1877)
  f_update_2341 i_1035 n_1036 x_1038 a_1037 k_update_1451 x_1457 ->
      (k_update_1451 (a_1039 i_1035 n_1036 x_1038 x_1457 a_1037))
  fail_2362 b k -> {fail} => (k ())
  k_make_array_u_1392 i_1033 n_1031 s_1032 k_make_array_1386 b_1404 when b_1404 ->
      (k_make_array_u_1403 i_1033 n_1031 s_1032 k_make_array_1386 ())
  k_make_array_u_1392 i_1033 n_1031 s_1032 k_make_array_1386 b_1404 when (
      not b_1404) -> (fail_2362 true (k_make_array_u_1403 i_1033 n_1031 s_1032 k_make_array_1386))
  k_make_array_u_1403 i_1033 n_1031 s_1032 k_make_array_1386 x_1389 -> (k_make_array_1386 s_1032)
  loop_1067 size_1046 row_1068 a_1069 k_queen_loop_1992 ->
      (a_1069 row_1068 (f_loop_2352 row_1068 size_1046 a_1069 k_queen_loop_1992))
  main_1073 n_1074 k_main_2292 when (n_1074 > 0) -> (queen_1045 n_1074 (f_main_2357 n_1074 k_main_2292))
  main_1073 n_1074 k_main_2292 when (not (n_1074 > 0)) -> (k_main_2292 ())
  make_array_1355 n_1031 s_1032 i_1033 k_make_array_1386 when (0 <= i_1033) ->
      (k_make_array_u_1392 i_1033 n_1031 s_1032 k_make_array_1386 (i_1033 < n_1031))
  make_array_1355 n_1031 s_1032 i_1033 k_make_array_1386 when (not (0 <= i_1033)) ->
      (k_make_array_u_1392 i_1033 n_1031 s_1032 k_make_array_1386 false)
  print_string_1350 s_1042 k_print_string_1503 -> (k_print_string_1503 ())
  queenPrint_1054 size_1046 a_1055 k_queen_queenPrint_1691 ->
      (aux_1056 size_1046 0 a_1055 (f_queenPrint_2348 size_1046 k_queen_queenPrint_1691))
  queen_1045 size_1046 k_queen_1535 -> (loop_1067 size_1046 0 (make_array_1355 size_1046 0) k_queen_1535)
  test_1060 size_1046 j_1061 a_1062 k_queen_test_1877 ->
      (a_1062 j_1061 (f_test_2349 j_1061 size_1046 a_1062 k_queen_test_1877))
  update_1354 i_1035 n_1036 a_1037 x_1038 k_update_1451 ->
      (a_1037 i_1035 (f_update_2341 i_1035 n_1036 x_1038 a_1037 k_update_1451))
Types:
  main_2340 : X
  aux_1056 : (int -> int -> (int -> (int -> X) -> X) -> (unit -> X) -> X)
  aux_1064 : (int -> int -> int -> (int -> (int -> X) -> X) -> int -> (x_12:bool[x_12] -> X) -> X)
  dotsPrint_1052 : (int -> int -> (unit -> X) -> X)
  fail_2362 : (x_1:bool[x_1] -> (unit -> X) -> X)
  loop_1067 : (int -> int -> (int -> (int -> X) -> X) -> (unit -> X) -> X)
  
(0-1) Abstracting ... DONE!

(0-2) Checking HORS ... DONE!

Error trace::
  main_2340 ... --> 
  f_2358 ... --> 
  main_1073 [1/2] ... --> 
  queen_1045 ... --> 
  loop_1067 ... --> 
  make_array_1355 [2/2] ... --> 
  k_make_array_u_1392 [2/2] ... --> 
  fail_2362 ... --> fail -->
  ERROR!

Spurious counter-example::
  0; 0; 0; 0; 0; 1; 1; 0

(0-3) Checking counter-example ... DONE!

(0-4) Discovering predicates ... 
begin AbsTypeInfer.refine(680)[1]
  program:
    main_2340  | true = ((Random.int 0) f_2358)
    a_1039 i_1035 n_1036 x_1038 x_1457 a_1037 j_1040 k_update_a_1472 | (
    i_1035 = j_1040) = (k_update_a_1472 x_1038)
    a_1039 i_1035 n_1036 x_1038 x_1457 a_1037 j_1040 k_update_a_1472 | (
    not (i_1035 = j_1040)) = (a_1037 j_1040
                                     k_update_a_1472)
    abs_1043 x_1044 k_abs_1517 | (x_1044 < 0) = (k_abs_1517 (0 - x_1044))
    abs_1043 x_1044 k_abs_1517 | (not (x_1044 < 0)) = (k_abs_1517 x_1044)
    assign_1348 size_1046 i_1049 j_1050 a_1051 k_queen_assign_1596 | true = (
    update_1354 i_1049
                size_1046
                a_1051
                j_1050
                k_queen_assign_1596)
    aux_1056 size_1046 row_1057 a_1058 k_queen_queenPrint_aux_1720 | (
    row_1057 >= size_1046) = (k_queen_queenPrint_aux_1720 ())
    aux_1056 size_1046 row_1057 a_1058 k_queen_queenPrint_aux_1720 | (
    not (row_1057 >= size_1046)) = (a_1058 row_1057
                                           (f_aux_2343 row_1057
                                                       size_1046
                                                       a_1058
                                                       k_queen_queenPrint_aux_1720))
    aux_1064 j_1061 size_1046 x_1880 a_1062 i_1065 k_queen_test_aux_1904 | (
    i_1065 < j_1061) = (a_1062 i_1065
                               (f_aux_2350 i_1065
                                           j_1061
                                           size_1046
                                           x_1880
                                           a_1062
                                           k_queen_test_aux_1904))
    aux_1064 j_1061 size_1046 x_1880 a_1062 i_1065 k_queen_test_aux_1904 | (
    not (i_1065 < j_1061)) = (k_queen_test_aux_1904 true)
    br_f_loop_2360 b_2361 row_1068 size_1046 x_1998 k_queen_loop_1992 x_2087 b_2251 | b_2361 = (
    queenPrint_1054 size_1046
                    x_2087
                    (f_loop_2356 b_2251
                                 row_1068
                                 size_1046
                                 x_1998
                                 k_queen_loop_1992
                                 x_2087))
    br_f_loop_2360 b_2361 row_1068 size_1046 x_1998 k_queen_loop_1992 x_2087 b_2251 | (
    not b_2361) = (loop_1067 size_1046
                             (row_1068 + 1)
                             x_2087
                             k_queen_loop_1992)
    dotsPrint_1052 size_1046 n_1053 k_queen_dotsPrint_1638 | (n_1053 = 0) = (
    k_queen_dotsPrint_1638 ())
    dotsPrint_1052 size_1046 n_1053 k_queen_dotsPrint_1638 | (not (n_1053 = 0)) = (
    print_string_1350 ()
                      (f_dotsPrint_2342 n_1053
                                        size_1046
                                        k_queen_dotsPrint_1638))
    f_2358 x_2315 | true = (main_1073 x_2315
                                      (f_2359 x_2315))
    f_2359 x_2315 x_2312 | true = end
    f_aux_2343 row_1057 size_1046 a_1058 k_queen_queenPrint_aux_1720 x_1723 | true = (
    dotsPrint_1052 size_1046
                   (x_1723 - 1)
                   (f_aux_2344 row_1057
                               size_1046
                               x_1723
                               a_1058
                               k_queen_queenPrint_aux_1720))
    f_aux_2344 row_1057 size_1046 x_1723 a_1058 k_queen_queenPrint_aux_1720 x_1736 | true = (
    print_string_1350 ()
                      (f_aux_2345 row_1057
                                  size_1046
                                  x_1723
                                  x_1736
                                  a_1058
                                  k_queen_queenPrint_aux_1720))
    f_aux_2345 row_1057 size_1046 x_1723 x_1736 a_1058 k_queen_queenPrint_aux_1720 x_1749 | true = (
    dotsPrint_1052
      size_1046
      (size_1046 - x_1723)
      (f_aux_2346 row_1057
                  size_1046
                  x_1723
                  x_1736
                  x_1749
                  a_1058
                  k_queen_queenPrint_aux_1720))
    f_aux_2346 row_1057 size_1046 x_1723 x_1736 x_1749 a_1058 k_queen_queenPrint_aux_1720 x_1762 | true = (
    print_string_1350 ()
                      (f_aux_2347 row_1057
                                  size_1046
                                  x_1723
                                  x_1736
                                  x_1749
                                  x_1762
                                  a_1058
                                  k_queen_queenPrint_aux_1720))
    f_aux_2347 row_1057 size_1046 x_1723 x_1736 x_1749 x_1762 a_1058 k_queen_queenPrint_aux_1720 x_1775 | true = (
    aux_1056 size_1046
             (row_1057 + 1)
             a_1058
             k_queen_queenPrint_aux_1720)
    f_aux_2350 i_1065 j_1061 size_1046 x_1880 a_1062 k_queen_test_aux_1904 x_1907 | (
    x_1907 = x_1880) = (k_queen_test_aux_1904 false)
    f_aux_2350 i_1065 j_1061 size_1046 x_1880 a_1062 k_queen_test_aux_1904 x_1907 | (
    not (x_1907 = x_1880)) = (abs_1043
                                (x_1880 - x_1907)
                                (f_aux_2351 i_1065
                                            j_1061
                                            size_1046
                                            x_1880
                                            x_1907
                                            a_1062
                                            k_queen_test_aux_1904))
    f_aux_2351 i_1065 j_1061 size_1046 x_1880 x_1907 a_1062 k_queen_test_aux_1904 x_1920 | (
    x_1920 = (j_1061 - i_1065)) = (k_queen_test_aux_1904 false)
    f_aux_2351 i_1065 j_1061 size_1046 x_1880 x_1907 a_1062 k_queen_test_aux_1904 x_1920 | (
    not (x_1920 = (j_1061 - i_1065))) = (aux_1064 j_1061
                                                  size_1046
                                                  x_1880
                                                  a_1062
                                                  (i_1065 + 1)
                                                  k_queen_test_aux_1904)
    f_dotsPrint_2342 n_1053 size_1046 k_queen_dotsPrint_1638 x_1641 | true = (
    dotsPrint_1052 size_1046
                   (n_1053 - 1)
                   k_queen_dotsPrint_1638)
    f_loop_2352 row_1068 size_1046 a_1069 k_queen_loop_1992 x_1998 | (
    (x_1998 + 1) > size_1046) = (assign_1348
                                   size_1046
                                   row_1068
                                   0
                                   a_1069
                                   (f_loop_2353 row_1068
                                                size_1046
                                                x_1998
                                                k_queen_loop_1992))
    f_loop_2352 row_1068 size_1046 a_1069 k_queen_loop_1992 x_1998 | (
    not ((x_1998 + 1) > size_1046)) = (assign_1348
                                         size_1046
                                         row_1068
                                         (x_1998 + 1)
                                         a_1069
                                         (f_loop_2354 row_1068
                                                      size_1046
                                                      x_1998
                                                      k_queen_loop_1992))
    f_loop_2353 row_1068 size_1046 x_1998 k_queen_loop_1992 x_2015 | (
    row_1068 = 0) = (k_queen_loop_1992 ())
    f_loop_2353 row_1068 size_1046 x_1998 k_queen_loop_1992 x_2015 | (
    not (row_1068 = 0)) = (loop_1067 size_1046
                                     (row_1068 - 1)
                                     x_2015
                                     k_queen_loop_1992)
    f_loop_2354 row_1068 size_1046 x_1998 k_queen_loop_1992 x_2087 | true = (
    test_1060 size_1046
              row_1068
              x_2087
              (f_loop_2355 row_1068
                           size_1046
                           x_1998
                           k_queen_loop_1992
                           x_2087))
    f_loop_2355 row_1068 size_1046 x_1998 k_queen_loop_1992 x_2087 b_2251 | b_2251 = (
    br_f_loop_2360 (row_1068 > size_1046)
                   row_1068
                   size_1046
                   x_1998
                   k_queen_loop_1992
                   x_2087
                   b_2251)
    f_loop_2355 row_1068 size_1046 x_1998 k_queen_loop_1992 x_2087 b_2251 | (
    not b_2251) = (loop_1067 size_1046
                             row_1068
                             x_2087
                             k_queen_loop_1992)
    f_loop_2356 b_2251 row_1068 size_1046 x_1998 k_queen_loop_1992 x_2087 x_2152 | true = (
    loop_1067 size_1046
              row_1068
              x_2087
              k_queen_loop_1992)
    f_main_2357 n_1074 k_main_2292 x_2295 | true = (k_main_2292 ())
    f_queenPrint_2348 size_1046 k_queen_queenPrint_1691 x_1815 | true = (
    print_string_1350 ()
                      k_queen_queenPrint_1691)
    f_test_2349 j_1061 size_1046 a_1062 k_queen_test_1877 x_1880 | true = (
    aux_1064 j_1061
             size_1046
             x_1880
             a_1062
             0
             k_queen_test_1877)
    f_update_2341 i_1035 n_1036 x_1038 a_1037 k_update_1451 x_1457 | true = (
    k_update_1451 (a_1039 i_1035
                          n_1036
                          x_1038
                          x_1457
                          a_1037))
    fail_2362 b k | true = (fail ())
    k_make_array_u_1392 i_1033 n_1031 s_1032 k_make_array_1386 b_1404 | b_1404 = (
    k_make_array_u_1403 i_1033
                        n_1031
                        s_1032
                        k_make_array_1386
                        ())
    k_make_array_u_1392 i_1033 n_1031 s_1032 k_make_array_1386 b_1404 | (
    not b_1404) = (fail_2362 true
                             (k_make_array_u_1403 i_1033
                                                  n_1031
                                                  s_1032
                                                  k_make_array_1386))
    k_make_array_u_1403 i_1033 n_1031 s_1032 k_make_array_1386 x_1389 | true = (
    k_make_array_1386 s_1032)
    loop_1067 size_1046 row_1068 a_1069 k_queen_loop_1992 | true = (a_1069
                                                                    row_1068
                                                                    (
                                                                    f_loop_2352
                                                                    row_1068
                                                                    size_1046
                                                                    a_1069
                                                                    k_queen_loop_1992))
    main_1073 n_1074 k_main_2292 | (n_1074 > 0) = (queen_1045 n_1074
                                                              (f_main_2357 n_1074
                                                                    k_main_2292))
    main_1073 n_1074 k_main_2292 | (not (n_1074 > 0)) = (k_main_2292 ())
    make_array_1355 n_1031 s_1032 i_1033 k_make_array_1386 | (0 <= i_1033) = (
    k_make_array_u_1392 i_1033
                        n_1031
                        s_1032
                        k_make_array_1386
                        (i_1033 < n_1031))
    make_array_1355 n_1031 s_1032 i_1033 k_make_array_1386 | (not (0 <= i_1033)) = (
    k_make_array_u_1392 i_1033
                        n_1031
                        s_1032
                        k_make_array_1386
                        false)
    print_string_1350 s_1042 k_print_string_1503 | true = (k_print_string_1503 ())
    queenPrint_1054 size_1046 a_1055 k_queen_queenPrint_1691 | true = (
    aux_1056 size_1046
             0
             a_1055
             (f_queenPrint_2348 size_1046
                                k_queen_queenPrint_1691))
    queen_1045 size_1046 k_queen_1535 | true = (loop_1067 size_1046
                                                          0
                                                          (make_array_1355 size_1046
                                                                    0)
                                                          k_queen_1535)
    test_1060 size_1046 j_1061 a_1062 k_queen_test_1877 | true = (a_1062
                                                                    j_1061
                                                                    (
                                                                    f_test_2349
                                                                    j_1061
                                                                    size_1046
                                                                    a_1062
                                                                    k_queen_test_1877))
    update_1354 i_1035 n_1036 a_1037 x_1038 k_update_1451 | true = (a_1037
                                                                    i_1035
                                                                    (
                                                                    f_update_2341
                                                                    i_1035
                                                                    n_1036
                                                                    x_1038
                                                                    a_1037
                                                                    k_update_1451))
    main_2340:X
    a_1039:int -> int -> int -> int -> (int -> (int -> X) -> X) -> int -> (int -> X) -> X
    abs_1043:int -> (int -> X) -> X
    assign_1348:int -> int -> int -> (int -> (int -> X) -> X) -> ((int -> (int -> X) -> X) -> X) -> X
    aux_1056:int -> int -> (int -> (int -> X) -> X) -> (unit -> X) -> X
    aux_1064:int -> int -> int -> (int -> (int -> X) -> X) -> int -> (bool -> X) -> X
    br_f_loop_2360:bool -> int -> int -> int -> (unit -> X) -> (int -> (int -> X) -> X) -> bool -> X
    dotsPrint_1052:int -> int -> (unit -> X) -> X
    f_2358:int -> X
    f_2359:int -> unit -> X
    f_aux_2343:int -> int -> (int -> (int -> X) -> X) -> (unit -> X) -> int -> X
    f_aux_2344:int -> int -> int -> (int -> (int -> X) -> X) -> (unit -> X) -> unit -> X
    f_aux_2345:int -> int -> int -> unit -> (int -> (int -> X) -> X) -> (unit -> X) -> unit -> X
    f_aux_2346:int -> int -> int -> unit -> unit -> (int -> (int -> X) -> X) -> (unit -> X) -> unit -> X
    f_aux_2347:int -> int -> int -> unit -> unit -> unit -> (int -> (int -> X) -> X) -> (unit -> X) -> unit -> X
    f_aux_2350:int -> int -> int -> int -> (int -> (int -> X) -> X) -> (bool -> X) -> int -> X
    f_aux_2351:int -> int -> int -> int -> int -> (int -> (int -> X) -> X) -> (bool -> X) -> int -> X
    f_dotsPrint_2342:int -> int -> (unit -> X) -> unit -> X
    f_loop_2352:int -> int -> (int -> (int -> X) -> X) -> (unit -> X) -> int -> X
    f_loop_2353:int -> int -> int -> (unit -> X) -> (int -> (int -> X) -> X) -> X
    f_loop_2354:int -> int -> int -> (unit -> X) -> (int -> (int -> X) -> X) -> X
    f_loop_2355:int -> int -> int -> (unit -> X) -> (int -> (int -> X) -> X) -> bool -> X
    f_loop_2356:bool -> int -> int -> int -> (unit -> X) -> (int -> (int -> X) -> X) -> unit -> X
    f_main_2357:int -> (unit -> X) -> unit -> X
    f_queenPrint_2348:int -> (unit -> X) -> unit -> X
    f_test_2349:int -> int -> (int -> (int -> X) -> X) -> (bool -> X) -> int -> X
    f_update_2341:int -> int -> int -> (int -> (int -> X) -> X) -> ((int -> (int -> X) -> X) -> X) -> int -> X
    fail_2362:bool -> (unit -> X) -> X
    k_make_array_u_1392:int -> int -> int -> (int -> X) -> bool -> X
    k_make_array_u_1403:int -> int -> int -> (int -> X) -> unit -> X
    loop_1067:int -> int -> (int -> (int -> X) -> X) -> (unit -> X) -> X
    main_1073:int -> (unit -> X) -> X
    make_array_1355:int -> int -> int -> (int -> X) -> X
    print_string_1350:unit -> (unit -> X) -> X
    queenPrint_1054:int -> (int -> (int -> X) -> X) -> (unit -> X) -> X
    queen_1045:int -> (unit -> X) -> X
    test_1060:int -> int -> (int -> (int -> X) -> X) -> (bool -> X) -> X
    update_1354:int -> int -> (int -> (int -> X) -> X) -> int -> ((int -> (int -> X) -> X) -> X) -> X
  inlined functions: a_1039,abs_1043,assign_1348,br_f_loop_2360,f_2358,f_2359,f_aux_2343,f_aux_2344,f_aux_2345,f_aux_2346,f_aux_2347,f_aux_2350,f_aux_2351,f_dotsPrint_2342,f_loop_2352,f_loop_2353,f_loop_2354,f_loop_2355,f_loop_2356,f_main_2357,f_queenPrint_2348,f_test_2349,f_update_2341,k_make_array_u_1392,k_make_array_u_1403,main_1073,make_array_1355,print_string_1350,queenPrint_1054,queen_1045,test_1060,update_1354
  counterexample: 0:0:0:0:0:1:1:0
  error traces:
    [true.nop(<f_2358@4:0> = var2)
     [true.(<main_1073@6:0> = <f_2358@4:0>)
      [(<main_1073@6:0> > 0).(<queen_1045@9:0> = <main_1073@6:0>)
       [true.((<loop_1067@11:0> = <queen_1045@9:0>) && (<loop_1067@11:1> = 0))
        [true.(<<loop_1067@11:2>@13:0> = <loop_1067@11:1>)
         [true.
          ((<make_array_1355@15:0> = <queen_1045@9:0>) &&
           ((<make_array_1355@15:1> = 0) && (<make_array_1355@15:2> = <<loop_1067@11:2>@13:0>)))
          [(not (0 <= <make_array_1355@15:2>)).
           ((<k_make_array_u_1392@18:0> = <make_array_1355@15:2>) &&
            ((<k_make_array_u_1392@18:1> = <make_array_1355@15:0>) &&
             ((<k_make_array_u_1392@18:2> = <make_array_1355@15:1>) && (<k_make_array_u_1392@18:4> = false))))
           [(not <k_make_array_u_1392@18:4>).(<fail_2362@21:0> = true)[true.error
  begin RefTypeInfer.infer_etrs(681)[2]
    horn clauses:
      P[<fail_2362@21:0>](<fail_2362@21:0>:bool)|- bot
      
      P[<k_make_array_u_1392@18:4>](<k_make_array_u_1392@18:0>:int,<k_make_array_u_1392@18:1>:int,<k_make_array_u_1392@18:2>:int,false:bool),
      <fail_2362@21:0> |- P[<fail_2362@21:0>](<fail_2362@21:0>:bool)
      
      P[<make_array_1355@15:2>](<k_make_array_u_1392@18:1>:int,<k_make_array_u_1392@18:2>:int,<k_make_array_u_1392@18:0>:int),
      ((0 > <k_make_array_u_1392@18:0>) && (not <k_make_array_u_1392@18:4>))
      |- P[<k_make_array_u_1392@18:4>](<k_make_array_u_1392@18:0>:int,
                                       <k_make_array_u_1392@18:1>:int,
                                       <k_make_array_u_1392@18:2>:int,
                                       <k_make_array_u_1392@18:4>:bool)
      
      P[<queen_1045@9:0>](<make_array_1355@15:0>:int),
      P[<<loop_1067@11:2>@13:0>](<make_array_1355@15:0>:int,0:int,<make_array_1355@15:2>:int),
      (<make_array_1355@15:1> = 0)
      |- P[<make_array_1355@15:2>](<make_array_1355@15:0>:int,<make_array_1355@15:1>:int,
                                   <make_array_1355@15:2>:int)
      
      P[<loop_1067@11:1>](<loop_1067@11:0>:int,<loop_1067@11:1>:int), (
      <<loop_1067@11:2>@13:0> = <loop_1067@11:1>)
      |- P[<<loop_1067@11:2>@13:0>](<loop_1067@11:0>:int,<loop_1067@11:1>:int,
                                    <<loop_1067@11:2>@13:0>:int)
      
      P[<queen_1045@9:0>](<loop_1067@11:0>:int), (<loop_1067@11:1> = 0)
      |- P[<loop_1067@11:1>](<loop_1067@11:0>:int,<loop_1067@11:1>:int)
      
      P[<main_1073@6:0>](<queen_1045@9:0>:int), (<queen_1045@9:0> > 0) |- P[<queen_1045@9:0>](<queen_1045@9:0>:int)
      
      P[<f_2358@4:0>](<main_1073@6:0>:int)|- P[<main_1073@6:0>](<main_1073@6:0>:int)
      
      |- P[<f_2358@4:0>](<f_2358@4:0>:int)
    call trees:
      <main_2340@1>
        <f_2358@4>
          <main_1073@6>
            <queen_1045@9>
              <loop_1067@11>
              </<loop_1067@11:2>@13>
              <make_array_1355@15>
                <k_make_array_u_1392@18>
                  <fail_2362@21>
    inlined horn clauses:
      P[<fail_2362@21:0>](<fail_2362@21:0>:bool)|- bot
      
      P[<<loop_1067@11:2>@13:0>](<k_make_array_u_1392@18:1>:int,0:int,<k_make_array_u_1392@18:0>:int),
      ((<k_make_array_u_1392@18:1> > 0) && ((0 > <k_make_array_u_1392@18:0>) && <fail_2362@21:0>))
      |- P[<fail_2362@21:0>](<fail_2362@21:0>:bool)
      
      P[<loop_1067@11:1>](<loop_1067@11:0>:int,<loop_1067@11:1>:int), (
      <<loop_1067@11:2>@13:0> = <loop_1067@11:1>)
      |- P[<<loop_1067@11:2>@13:0>](<loop_1067@11:0>:int,<loop_1067@11:1>:int,
                                    <<loop_1067@11:2>@13:0>:int)
      
       ((<loop_1067@11:1> = 0) && (<loop_1067@11:0> > 0))
      |- P[<loop_1067@11:1>](<loop_1067@11:0>:int,<loop_1067@11:1>:int)
    begin ParamSubstInfer.infer(1907)[3]
      
    end ParamSubstInfer.infer(1907)[3] (0.095985 sec.)
    inferred extra parameters:
      
    begin RefTypeInfer.elim_coeffs(1909)[3]
      
    end RefTypeInfer.elim_coeffs(1909)[3] (0.000000 sec.)
    begin GenHcSolver.solve(2105)[3]
      Horn clauses:
        P[<fail_2362@21:0>](<fail_2362@21:0>:bool)|- bot
        
        P[<<loop_1067@11:2>@13:0>](<k_make_array_u_1392@18:1>:int,0:int,<k_make_array_u_1392@18:0>:int),
        ((<k_make_array_u_1392@18:1> > 0) && ((0 > <k_make_array_u_1392@18:0>) && <fail_2362@21:0>))
        |- P[<fail_2362@21:0>](<fail_2362@21:0>:bool)
        
        P[<loop_1067@11:1>](<loop_1067@11:0>:int,<loop_1067@11:1>:int), (
        <<loop_1067@11:2>@13:0> = <loop_1067@11:1>)
        |- P[<<loop_1067@11:2>@13:0>](<loop_1067@11:0>:int,<loop_1067@11:1>:int,
                                      <<loop_1067@11:2>@13:0>:int)
        
         ((<loop_1067@11:1> = 0) && (<loop_1067@11:0> > 0))
        |- P[<loop_1067@11:1>](<loop_1067@11:0>:int,<loop_1067@11:1>:int)
      lower bounds:
        P[<loop_1067@11:1>](<loop_1067@11:0>:int,<loop_1067@11:1>:int) =
        ((<loop_1067@11:1> = 0) && (<loop_1067@11:0> > 0))
        P[<<loop_1067@11:2>@13:0>](<loop_1067@11:0>:int,<loop_1067@11:1>:int,<<loop_1067@11:2>@13:0>:int) =
        ((<loop_1067@11:1> = 0) && ((<loop_1067@11:0> > 0) && (<<loop_1067@11:2>@13:0> = <loop_1067@11:1>)))
        P[<fail_2362@21:0>](<fail_2362@21:0>:bool) = false
      upper bounds:
        P[<fail_2362@21:0>](var4:bool) = true
      begin GenHcSolver.classify_pids(3230)[4]
        output:
          [<fail_2362@21:0>]
      end GenHcSolver.classify_pids(3230)[4] (0.000000 sec.)
      lb:false
      nub:false
      begin ApronInterface.convex_hull_interpolate(3233)[4]
        lb:false
        nub:false
        lb':false
        nub':false
        begin InterpProver.interpolate(3234)[5]
          begin InterpProver.interpolate_fresh(3235)[6]
            begin InterpProver.interpolate_log(3236)[7]
              input1: false
              input2: false
              begin InterpProver.interpolate_check(3237)[8]
                begin InterpProver.interpolate_simplify(3238)[9]
                  begin InterpProver.interpolate_quick(3251)[10]
                    
                  end InterpProver.interpolate_quick(3251)[10] (0.000000 sec.)
                  begin minimizing # of disjunctions(3255)[10]
                    input: false
                    output: false
                  end minimizing # of disjunctions(3255)[10] (0.000000 sec.)
                  
                end InterpProver.interpolate_simplify(3238)[9] (0.000000 sec.)
                
              end InterpProver.interpolate_check(3237)[8] (0.000000 sec.)
              output: false
            end InterpProver.interpolate_log(3236)[7] (0.000000 sec.)
            
          end InterpProver.interpolate_fresh(3235)[6] (0.000000 sec.)
          
        end InterpProver.interpolate(3234)[5] (0.000000 sec.)
        output:
          P[<fail_2362@21:0>](<fail_2362@21:0>:bool) = false
      end ApronInterface.convex_hull_interpolate(3233)[4] (0.000000 sec.)
      Horn clauses:
        P[<<loop_1067@11:2>@13:0>](<k_make_array_u_1392@18:1>:int,0:int,<k_make_array_u_1392@18:0>:int),
        ((0 > <k_make_array_u_1392@18:0>) && (<k_make_array_u_1392@18:1> > 0)) |- bot
        
        P[<loop_1067@11:1>](<loop_1067@11:0>:int,<loop_1067@11:1>:int), (
        <<loop_1067@11:2>@13:0> = <loop_1067@11:1>)
        |- P[<<loop_1067@11:2>@13:0>](<loop_1067@11:0>:int,<loop_1067@11:1>:int,
                                      <<loop_1067@11:2>@13:0>:int)
        
         ((<loop_1067@11:1> = 0) && (<loop_1067@11:0> > 0))
        |- P[<loop_1067@11:1>](<loop_1067@11:0>:int,<loop_1067@11:1>:int)
      lower bounds:
        P[<loop_1067@11:1>](<loop_1067@11:0>:int,<loop_1067@11:1>:int) =
        ((<loop_1067@11:1> = 0) && (<loop_1067@11:0> > 0))
        P[<<loop_1067@11:2>@13:0>](<loop_1067@11:0>:int,<loop_1067@11:1>:int,<<loop_1067@11:2>@13:0>:int) =
        ((<loop_1067@11:1> = 0) && ((<loop_1067@11:0> > 0) && (<<loop_1067@11:2>@13:0> = <loop_1067@11:1>)))
      upper bounds:
        P[<<loop_1067@11:2>@13:0>](var5:int,var6:int,var7:int) = ((var6 <> 0) || ((0 <= var7) || (var5 <= 0)))
      begin GenHcSolver.classify_pids(4784)[4]
        output:
          [<<loop_1067@11:2>@13:0>]
      end GenHcSolver.classify_pids(4784)[4] (0.000000 sec.)
      lb:((<loop_1067@11:1> = 0) && ((<loop_1067@11:0> > 0) && (<<loop_1067@11:2>@13:0> = <loop_1067@11:1>)))
      nub:(not ((<loop_1067@11:1> <> 0) || ((0 <= <<loop_1067@11:2>@13:0>) || (<loop_1067@11:0> <= 0))))
      begin ApronInterface.convex_hull_interpolate(4787)[4]
        lb:((<loop_1067@11:1> = 0) && ((<loop_1067@11:0> > 0) && (<<loop_1067@11:2>@13:0> = <loop_1067@11:1>)))
        nub:(not ((<loop_1067@11:1> <> 0) || ((0 <= <<loop_1067@11:2>@13:0>) || (<loop_1067@11:0> <= 0))))
        lb':((<loop_1067@11:1> = 0) && ((<loop_1067@11:0> > 0) && (<<loop_1067@11:2>@13:0> = <loop_1067@11:1>)))
        nub':(not ((<loop_1067@11:1> <> 0) || ((0 <= <<loop_1067@11:2>@13:0>) || (<loop_1067@11:0> <= 0))))
        begin InterpProver.interpolate(4788)[5]
          begin InterpProver.interpolate_fresh(4789)[6]
            begin InterpProver.interpolate_log(4790)[7]
              input1: ((<loop_1067@11:1> = 0) &&
                       ((<loop_1067@11:0> > 0) && (<<loop_1067@11:2>@13:0> = <loop_1067@11:1>)))
              input2: (not ((<loop_1067@11:1> <> 0) || ((0 <= <<loop_1067@11:2>@13:0>) || (<loop_1067@11:0> <= 0))))
              begin InterpProver.interpolate_check(4791)[8]
                begin InterpProver.interpolate_simplify(4792)[9]
                  begin InterpProver.interpolate_quick(4885)[10]
                    begin CsisatInterface.interpolate_csisat_wrap(4894)[11]
                      begin CsisatInterface.interpolate_csisat_post_process(4895)[12]
                        begin CsisatInterface.interpolate_csisat_log(4896)[13]
                          input1: (0 = v_sep_loop_1067_sep_11_sep_1 & v_sep_loop_1067_sep_11_sep_1 = v_sep_loop_1067_sep_11_sep_2_sep_13_sep_0 & 1 <= v_sep_loop_1067_sep_11_sep_0)
                          input2: (0 = v_sep_loop_1067_sep_11_sep_1 & 1 <= v_sep_loop_1067_sep_11_sep_0 & (1 + v_sep_loop_1067_sep_11_sep_2_sep_13_sep_0) <= 0)
                          begin CsisatInterface.interpolate_csisat_raw(4897)[14]
                            
                          end CsisatInterface.interpolate_csisat_raw(4897)[14] (0.000000 sec.)
                          output: -2*v_sep_loop_1067_sep_11_sep_2_sep_13_sep_0 <= 0
                          
                        end CsisatInterface.interpolate_csisat_log(4896)[13] (0.000000 sec.)
                        after simplification: -2*v_sep_loop_1067_sep_11_sep_2_sep_13_sep_0 <= 0
                        after dnf conversion: ((-2*v_sep_loop_1067_sep_11_sep_2_sep_13_sep_0 <= 0))
                        
                      end CsisatInterface.interpolate_csisat_post_process(4895)[12] (0.000000 sec.)
                      
                    end CsisatInterface.interpolate_csisat_wrap(4894)[11] (0.000000 sec.)
                    
                  end InterpProver.interpolate_quick(4885)[10] (0.000000 sec.)
                  
                end InterpProver.interpolate_simplify(4792)[9] (0.000000 sec.)
                
              end InterpProver.interpolate_check(4791)[8] (0.000000 sec.)
              output: (0 <= <<loop_1067@11:2>@13:0>)
            end InterpProver.interpolate_log(4790)[7] (0.000000 sec.)
            
          end InterpProver.interpolate_fresh(4789)[6] (0.000000 sec.)
          
        end InterpProver.interpolate(4788)[5] (0.000000 sec.)
        output:
          P[<<loop_1067@11:2>@13:0>](<loop_1067@11:0>:int,<loop_1067@11:1>:int,<<loop_1067@11:2>@13:0>:int) =
          (0 <= <<loop_1067@11:2>@13:0>)
      end ApronInterface.convex_hull_interpolate(4787)[4] (0.000000 sec.)
      Horn clauses:
        P[<loop_1067@11:1>](<loop_1067@11:0>:int,<<loop_1067@11:2>@13:0>:int), (0 > <<loop_1067@11:2>@13:0>) |- bot
        
         ((<loop_1067@11:1> = 0) && (<loop_1067@11:0> > 0))
        |- P[<loop_1067@11:1>](<loop_1067@11:0>:int,<loop_1067@11:1>:int)
      lower bounds:
        P[<loop_1067@11:1>](<loop_1067@11:0>:int,<loop_1067@11:1>:int) =
        ((<loop_1067@11:1> = 0) && (<loop_1067@11:0> > 0))
      upper bounds:
        P[<loop_1067@11:1>](var8:int,var9:int) = (0 <= var9)
      begin GenHcSolver.classify_pids(5588)[4]
        output:
          [<loop_1067@11:1>]
      end GenHcSolver.classify_pids(5588)[4] (0.000000 sec.)
      lb:((<loop_1067@11:1> = 0) && (<loop_1067@11:0> > 0))
      nub:(not (0 <= <loop_1067@11:1>))
      begin ApronInterface.convex_hull_interpolate(5591)[4]
        lb:((<loop_1067@11:1> = 0) && (<loop_1067@11:0> > 0))
        nub:(not (0 <= <loop_1067@11:1>))
        lb':((<loop_1067@11:1> = 0) && (<loop_1067@11:0> > 0))
        nub':(not (0 <= <loop_1067@11:1>))
        begin InterpProver.interpolate(5592)[5]
          begin InterpProver.interpolate_fresh(5593)[6]
            begin InterpProver.interpolate_log(5594)[7]
              input1: ((<loop_1067@11:1> = 0) && (<loop_1067@11:0> > 0))
              input2: (not (0 <= <loop_1067@11:1>))
              begin InterpProver.interpolate_check(5595)[8]
                begin InterpProver.interpolate_simplify(5596)[9]
                  begin InterpProver.interpolate_quick(5625)[10]
                    begin CsisatInterface.interpolate_csisat_wrap(5634)[11]
                      begin CsisatInterface.interpolate_csisat_post_process(5635)[12]
                        begin CsisatInterface.interpolate_csisat_log(5636)[13]
                          input1: (0 = v_sep_loop_1067_sep_11_sep_1 & 1 <= v_sep_loop_1067_sep_11_sep_0)
                          input2: (1 + v_sep_loop_1067_sep_11_sep_1) <= 0
                          begin CsisatInterface.interpolate_csisat_raw(5637)[14]
                            
                          end CsisatInterface.interpolate_csisat_raw(5637)[14] (0.001000 sec.)
                          output: -2*v_sep_loop_1067_sep_11_sep_1 <= 0
                          
                        end CsisatInterface.interpolate_csisat_log(5636)[13] (0.001000 sec.)
                        after simplification: -2*v_sep_loop_1067_sep_11_sep_1 <= 0
                        after dnf conversion: ((-2*v_sep_loop_1067_sep_11_sep_1 <= 0))
                        
                      end CsisatInterface.interpolate_csisat_post_process(5635)[12] (0.001000 sec.)
                      
                    end CsisatInterface.interpolate_csisat_wrap(5634)[11] (0.001000 sec.)
                    
                  end InterpProver.interpolate_quick(5625)[10] (0.001000 sec.)
                  
                end InterpProver.interpolate_simplify(5596)[9] (0.001000 sec.)
                
              end InterpProver.interpolate_check(5595)[8] (0.001000 sec.)
              output: (0 <= <loop_1067@11:1>)
            end InterpProver.interpolate_log(5594)[7] (0.001000 sec.)
            
          end InterpProver.interpolate_fresh(5593)[6] (0.001000 sec.)
          
        end InterpProver.interpolate(5592)[5] (0.001000 sec.)
        output:
          P[<loop_1067@11:1>](<loop_1067@11:0>:int,<loop_1067@11:1>:int) = (0 <= <loop_1067@11:1>)
      end ApronInterface.convex_hull_interpolate(5591)[4] (0.001000 sec.)
      begin HcSolver.check_validity(5774)[4]
        input:
          P[<fail_2362@21:0>](<fail_2362@21:0>:bool)|- bot
          
          P[<<loop_1067@11:2>@13:0>](<k_make_array_u_1392@18:1>:int,0:int,<k_make_array_u_1392@18:0>:int),
          ((<k_make_array_u_1392@18:1> > 0) && ((0 > <k_make_array_u_1392@18:0>) && <fail_2362@21:0>))
          |- P[<fail_2362@21:0>](<fail_2362@21:0>:bool)
          
          P[<loop_1067@11:1>](<loop_1067@11:0>:int,<loop_1067@11:1>:int), (
          <<loop_1067@11:2>@13:0> = <loop_1067@11:1>)
          |- P[<<loop_1067@11:2>@13:0>](<loop_1067@11:0>:int,<loop_1067@11:1>:int,
                                        <<loop_1067@11:2>@13:0>:int)
          
           ((<loop_1067@11:1> = 0) && (<loop_1067@11:0> > 0))
          |- P[<loop_1067@11:1>](<loop_1067@11:0>:int,<loop_1067@11:1>:int)
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        
      end HcSolver.check_validity(5774)[4] (0.000999 sec.)
      solution:
        P[<fail_2362@21:0>](<fail_2362@21:0>:bool) = false
        P[<<loop_1067@11:2>@13:0>](<loop_1067@11:0>:int,<loop_1067@11:1>:int,<<loop_1067@11:2>@13:0>:int) =
        (0 <= <<loop_1067@11:2>@13:0>)
        P[<loop_1067@11:1>](<loop_1067@11:0>:int,<loop_1067@11:1>:int) = (0 <= <loop_1067@11:1>)
    end GenHcSolver.solve(2105)[3] (0.021996 sec.)
    begin GenHcSolver.solve(6050)[3]
      Horn clauses:
        P[<fail_2362@21:0>](<fail_2362@21:0>:bool)|- bot
        
        P[<<loop_1067@11:2>@13:0>](<k_make_array_u_1392@18:1>:int,0:int,<k_make_array_u_1392@18:0>:int),
        ((<k_make_array_u_1392@18:1> > 0) && ((0 > <k_make_array_u_1392@18:0>) && <fail_2362@21:0>))
        |- P[<fail_2362@21:0>](<fail_2362@21:0>:bool)
        
        P[<loop_1067@11:1>](<loop_1067@11:0>:int,<loop_1067@11:1>:int), (
        <<loop_1067@11:2>@13:0> = <loop_1067@11:1>)
        |- P[<<loop_1067@11:2>@13:0>](<loop_1067@11:0>:int,<loop_1067@11:1>:int,
                                      <<loop_1067@11:2>@13:0>:int)
        
         ((<loop_1067@11:1> = 0) && (<loop_1067@11:0> > 0))
        |- P[<loop_1067@11:1>](<loop_1067@11:0>:int,<loop_1067@11:1>:int)
      lower bounds:
        P[<loop_1067@11:1>](<loop_1067@11:0>:int,<loop_1067@11:1>:int) =
        ((<loop_1067@11:1> = 0) && (<loop_1067@11:0> > 0))
        P[<<loop_1067@11:2>@13:0>](<loop_1067@11:0>:int,<loop_1067@11:1>:int,<<loop_1067@11:2>@13:0>:int) =
        ((<loop_1067@11:1> = 0) && ((<loop_1067@11:0> > 0) && (<<loop_1067@11:2>@13:0> = <loop_1067@11:1>)))
        P[<fail_2362@21:0>](<fail_2362@21:0>:bool) = false
      upper bounds:
        P[<fail_2362@21:0>](var11:bool) = true
      begin GenHcSolver.classify_pids(7175)[4]
        output:
          [<fail_2362@21:0>]
      end GenHcSolver.classify_pids(7175)[4] (0.000000 sec.)
      lb:false
      nub:false
      begin ApronInterface.convex_hull_interpolate(7178)[4]
        lb:false
        nub:false
        begin ExtFormula.Formula.case_analysis_boolean(7181)[5]
          ts: false
          
        end ExtFormula.Formula.case_analysis_boolean(7181)[5] (0.000000 sec.)
        begin ExtFormula.Formula.case_analysis_boolean(7186)[5]
          ts: false
          
        end ExtFormula.Formula.case_analysis_boolean(7186)[5] (0.000000 sec.)
        lb':(-1 >= 0)
        nub':(-1 >= 0)
        begin InterpProver.interpolate(7189)[5]
          begin InterpProver.interpolate_fresh(7190)[6]
            begin InterpProver.interpolate_log(7191)[7]
              input1: (-1 >= 0)
              input2: (-1 >= 0)
              begin InterpProver.interpolate_check(7192)[8]
                begin InterpProver.interpolate_simplify(7193)[9]
                  begin InterpProver.interpolate_quick(7208)[10]
                    
                  end InterpProver.interpolate_quick(7208)[10] (0.000000 sec.)
                  begin minimizing # of disjunctions(7212)[10]
                    input: false
                    output: false
                  end minimizing # of disjunctions(7212)[10] (0.000000 sec.)
                  
                end InterpProver.interpolate_simplify(7193)[9] (0.000000 sec.)
                
              end InterpProver.interpolate_check(7192)[8] (0.001000 sec.)
              output: false
            end InterpProver.interpolate_log(7191)[7] (0.001000 sec.)
            
          end InterpProver.interpolate_fresh(7190)[6] (0.001000 sec.)
          
        end InterpProver.interpolate(7189)[5] (0.001000 sec.)
        output:
          P[<fail_2362@21:0>](<fail_2362@21:0>:bool) = false
      end ApronInterface.convex_hull_interpolate(7178)[4] (0.001000 sec.)
      Horn clauses:
        P[<<loop_1067@11:2>@13:0>](<k_make_array_u_1392@18:1>:int,0:int,<k_make_array_u_1392@18:0>:int),
        ((0 > <k_make_array_u_1392@18:0>) && (<k_make_array_u_1392@18:1> > 0)) |- bot
        
        P[<loop_1067@11:1>](<loop_1067@11:0>:int,<loop_1067@11:1>:int), (
        <<loop_1067@11:2>@13:0> = <loop_1067@11:1>)
        |- P[<<loop_1067@11:2>@13:0>](<loop_1067@11:0>:int,<loop_1067@11:1>:int,
                                      <<loop_1067@11:2>@13:0>:int)
        
         ((<loop_1067@11:1> = 0) && (<loop_1067@11:0> > 0))
        |- P[<loop_1067@11:1>](<loop_1067@11:0>:int,<loop_1067@11:1>:int)
      lower bounds:
        P[<loop_1067@11:1>](<loop_1067@11:0>:int,<loop_1067@11:1>:int) =
        ((<loop_1067@11:1> = 0) && (<loop_1067@11:0> > 0))
        P[<<loop_1067@11:2>@13:0>](<loop_1067@11:0>:int,<loop_1067@11:1>:int,<<loop_1067@11:2>@13:0>:int) =
        ((<loop_1067@11:1> = 0) && ((<loop_1067@11:0> > 0) && (<<loop_1067@11:2>@13:0> = <loop_1067@11:1>)))
      upper bounds:
        P[<<loop_1067@11:2>@13:0>](var12:int,var13:int,var14:int) = ((var13 <> 0) || ((0 <= var14) || (var12 <= 0)))
      begin GenHcSolver.classify_pids(8748)[4]
        output:
          [<<loop_1067@11:2>@13:0>]
      end GenHcSolver.classify_pids(8748)[4] (0.000000 sec.)
      lb:((<loop_1067@11:1> = 0) && ((<loop_1067@11:0> > 0) && (<<loop_1067@11:2>@13:0> = <loop_1067@11:1>)))
      nub:(not ((<loop_1067@11:1> <> 0) || ((0 <= <<loop_1067@11:2>@13:0>) || (<loop_1067@11:0> <= 0))))
      begin ApronInterface.convex_hull_interpolate(8751)[4]
        lb:((<loop_1067@11:1> = 0) && ((<loop_1067@11:0> > 0) && (<<loop_1067@11:2>@13:0> = <loop_1067@11:1>)))
        nub:(not ((<loop_1067@11:1> <> 0) || ((0 <= <<loop_1067@11:2>@13:0>) || (<loop_1067@11:0> <= 0))))
        begin ExtFormula.Formula.case_analysis_boolean(8776)[5]
          ts: ((<loop_1067@11:1> = 0) && ((<loop_1067@11:0> > 0) && (<<loop_1067@11:2>@13:0> = <loop_1067@11:1>)))
          
        end ExtFormula.Formula.case_analysis_boolean(8776)[5] (0.000000 sec.)
        begin ExtFormula.Formula.case_analysis_boolean(8803)[5]
          ts: ((<loop_1067@11:1> = 0) && ((0 > <<loop_1067@11:2>@13:0>) && (<loop_1067@11:0> > 0)))
          
        end ExtFormula.Formula.case_analysis_boolean(8803)[5] (0.000000 sec.)
        lb':((<<loop_1067@11:2>@13:0> = 0) && ((<loop_1067@11:1> = 0) && ((-1 + <loop_1067@11:0>) >= 0)))
        nub':((<loop_1067@11:1> = 0) &&
              (((-1 + (-1 * <<loop_1067@11:2>@13:0>)) >= 0) && ((-1 + <loop_1067@11:0>) >= 0)))
        begin InterpProver.interpolate(8809)[5]
          begin InterpProver.interpolate_fresh(8810)[6]
            begin InterpProver.interpolate_log(8811)[7]
              input1: ((<<loop_1067@11:2>@13:0> = 0) && ((<loop_1067@11:1> = 0) && ((-1 + <loop_1067@11:0>) >= 0)))
              input2: ((<loop_1067@11:1> = 0) &&
                       (((-1 + (-1 * <<loop_1067@11:2>@13:0>)) >= 0) && ((-1 + <loop_1067@11:0>) >= 0)))
              begin InterpProver.interpolate_check(8812)[8]
                begin InterpProver.interpolate_simplify(8813)[9]
                  begin InterpProver.interpolate_quick(8920)[10]
                    begin CsisatInterface.interpolate_csisat_wrap(8929)[11]
                      begin CsisatInterface.interpolate_csisat_post_process(8930)[12]
                        begin CsisatInterface.interpolate_csisat_log(8931)[13]
                          input1: (0 = v_sep_loop_1067_sep_11_sep_1 & 0 = v_sep_loop_1067_sep_11_sep_2_sep_13_sep_0 & 1 <= v_sep_loop_1067_sep_11_sep_0)
                          input2: (0 = v_sep_loop_1067_sep_11_sep_1 & 1 <= v_sep_loop_1067_sep_11_sep_0 & (1 + v_sep_loop_1067_sep_11_sep_2_sep_13_sep_0) <= 0)
                          begin CsisatInterface.interpolate_csisat_raw(8932)[14]
                            
                          end CsisatInterface.interpolate_csisat_raw(8932)[14] (0.000000 sec.)
                          output: -2*v_sep_loop_1067_sep_11_sep_2_sep_13_sep_0 <= 0
                          
                        end CsisatInterface.interpolate_csisat_log(8931)[13] (0.000000 sec.)
                        after simplification: -2*v_sep_loop_1067_sep_11_sep_2_sep_13_sep_0 <= 0
                        after dnf conversion: ((-2*v_sep_loop_1067_sep_11_sep_2_sep_13_sep_0 <= 0))
                        
                      end CsisatInterface.interpolate_csisat_post_process(8930)[12] (0.000000 sec.)
                      
                    end CsisatInterface.interpolate_csisat_wrap(8929)[11] (0.001000 sec.)
                    
                  end InterpProver.interpolate_quick(8920)[10] (0.002000 sec.)
                  
                end InterpProver.interpolate_simplify(8813)[9] (0.002000 sec.)
                
              end InterpProver.interpolate_check(8812)[8] (0.002000 sec.)
              output: (0 <= <<loop_1067@11:2>@13:0>)
            end InterpProver.interpolate_log(8811)[7] (0.004000 sec.)
            
          end InterpProver.interpolate_fresh(8810)[6] (0.004000 sec.)
          
        end InterpProver.interpolate(8809)[5] (0.004000 sec.)
        output:
          P[<<loop_1067@11:2>@13:0>](<loop_1067@11:0>:int,<loop_1067@11:1>:int,<<loop_1067@11:2>@13:0>:int) =
          (0 <= <<loop_1067@11:2>@13:0>)
      end ApronInterface.convex_hull_interpolate(8751)[4] (0.004000 sec.)
      Horn clauses:
        P[<loop_1067@11:1>](<loop_1067@11:0>:int,<<loop_1067@11:2>@13:0>:int), (0 > <<loop_1067@11:2>@13:0>) |- bot
        
         ((<loop_1067@11:1> = 0) && (<loop_1067@11:0> > 0))
        |- P[<loop_1067@11:1>](<loop_1067@11:0>:int,<loop_1067@11:1>:int)
      lower bounds:
        P[<loop_1067@11:1>](<loop_1067@11:0>:int,<loop_1067@11:1>:int) =
        ((<loop_1067@11:1> = 0) && (<loop_1067@11:0> > 0))
      upper bounds:
        P[<loop_1067@11:1>](var15:int,var16:int) = (0 <= var16)
      begin GenHcSolver.classify_pids(9629)[4]
        output:
          [<loop_1067@11:1>]
      end GenHcSolver.classify_pids(9629)[4] (0.000000 sec.)
      lb:((<loop_1067@11:1> = 0) && (<loop_1067@11:0> > 0))
      nub:(not (0 <= <loop_1067@11:1>))
      begin ApronInterface.convex_hull_interpolate(9632)[4]
        lb:((<loop_1067@11:1> = 0) && (<loop_1067@11:0> > 0))
        nub:(not (0 <= <loop_1067@11:1>))
        begin ExtFormula.Formula.case_analysis_boolean(9642)[5]
          ts: ((<loop_1067@11:1> = 0) && (<loop_1067@11:0> > 0))
          
        end ExtFormula.Formula.case_analysis_boolean(9642)[5] (0.000000 sec.)
        begin ExtFormula.Formula.case_analysis_boolean(9650)[5]
          ts: (0 > <loop_1067@11:1>)
          
        end ExtFormula.Formula.case_analysis_boolean(9650)[5] (0.000000 sec.)
        lb':((<loop_1067@11:1> = 0) && ((-1 + <loop_1067@11:0>) >= 0))
        nub':((-1 + (-1 * <loop_1067@11:1>)) >= 0)
        begin InterpProver.interpolate(9654)[5]
          begin InterpProver.interpolate_fresh(9655)[6]
            begin InterpProver.interpolate_log(9656)[7]
              input1: ((<loop_1067@11:1> = 0) && ((-1 + <loop_1067@11:0>) >= 0))
              input2: ((-1 + (-1 * <loop_1067@11:1>)) >= 0)
              begin InterpProver.interpolate_check(9657)[8]
                begin InterpProver.interpolate_simplify(9658)[9]
                  begin InterpProver.interpolate_quick(9695)[10]
                    begin CsisatInterface.interpolate_csisat_wrap(9704)[11]
                      begin CsisatInterface.interpolate_csisat_post_process(9705)[12]
                        begin CsisatInterface.interpolate_csisat_log(9706)[13]
                          input1: (0 = v_sep_loop_1067_sep_11_sep_1 & 1 <= v_sep_loop_1067_sep_11_sep_0)
                          input2: (1 + v_sep_loop_1067_sep_11_sep_1) <= 0
                          begin CsisatInterface.interpolate_csisat_raw(9707)[14]
                            
                          end CsisatInterface.interpolate_csisat_raw(9707)[14] (0.000000 sec.)
                          output: -2*v_sep_loop_1067_sep_11_sep_1 <= 0
                          
                        end CsisatInterface.interpolate_csisat_log(9706)[13] (0.000000 sec.)
                        after simplification: -2*v_sep_loop_1067_sep_11_sep_1 <= 0
                        after dnf conversion: ((-2*v_sep_loop_1067_sep_11_sep_1 <= 0))
                        
                      end CsisatInterface.interpolate_csisat_post_process(9705)[12] (0.000000 sec.)
                      
                    end CsisatInterface.interpolate_csisat_wrap(9704)[11] (0.000000 sec.)
                    
                  end InterpProver.interpolate_quick(9695)[10] (0.000999 sec.)
                  
                end InterpProver.interpolate_simplify(9658)[9] (0.000999 sec.)
                
              end InterpProver.interpolate_check(9657)[8] (0.001999 sec.)
              output: (0 <= <loop_1067@11:1>)
            end InterpProver.interpolate_log(9656)[7] (0.001999 sec.)
            
          end InterpProver.interpolate_fresh(9655)[6] (0.001999 sec.)
          
        end InterpProver.interpolate(9654)[5] (0.001999 sec.)
        output:
          P[<loop_1067@11:1>](<loop_1067@11:0>:int,<loop_1067@11:1>:int) = (0 <= <loop_1067@11:1>)
      end ApronInterface.convex_hull_interpolate(9632)[4] (0.001999 sec.)
      begin HcSolver.check_validity(9851)[4]
        input:
          P[<fail_2362@21:0>](<fail_2362@21:0>:bool)|- bot
          
          P[<<loop_1067@11:2>@13:0>](<k_make_array_u_1392@18:1>:int,0:int,<k_make_array_u_1392@18:0>:int),
          ((<k_make_array_u_1392@18:1> > 0) && ((0 > <k_make_array_u_1392@18:0>) && <fail_2362@21:0>))
          |- P[<fail_2362@21:0>](<fail_2362@21:0>:bool)
          
          P[<loop_1067@11:1>](<loop_1067@11:0>:int,<loop_1067@11:1>:int), (
          <<loop_1067@11:2>@13:0> = <loop_1067@11:1>)
          |- P[<<loop_1067@11:2>@13:0>](<loop_1067@11:0>:int,<loop_1067@11:1>:int,
                                        <<loop_1067@11:2>@13:0>:int)
          
           ((<loop_1067@11:1> = 0) && (<loop_1067@11:0> > 0))
          |- P[<loop_1067@11:1>](<loop_1067@11:0>:int,<loop_1067@11:1>:int)
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        
      end HcSolver.check_validity(9851)[4] (0.003000 sec.)
      solution:
        P[<fail_2362@21:0>](<fail_2362@21:0>:bool) = false
        P[<<loop_1067@11:2>@13:0>](<loop_1067@11:0>:int,<loop_1067@11:1>:int,<<loop_1067@11:2>@13:0>:int) =
        (0 <= <<loop_1067@11:2>@13:0>)
        P[<loop_1067@11:1>](<loop_1067@11:0>:int,<loop_1067@11:1>:int) = (0 <= <loop_1067@11:1>)
    end GenHcSolver.solve(6050)[3] (0.023997 sec.)
    begin YhornInterface.solve(10127)[3]
      begin HcSolver.solve_ub(10128)[4]
        encoded:
          P[<fail_2362@21:0>](<fail_2362@21:0>:int)|- bot
          
          P[<<loop_1067@11:2>@13:0>](<k_make_array_u_1392@18:1>:int,0:int,<k_make_array_u_1392@18:0>:int),
          ((<k_make_array_u_1392@18:1> > 0) && ((0 > <k_make_array_u_1392@18:0>) && (<fail_2362@21:0> = 1)))
          |- P[<fail_2362@21:0>](<fail_2362@21:0>:int)
          
          P[<loop_1067@11:1>](<loop_1067@11:0>:int,<loop_1067@11:1>:int), (
          <<loop_1067@11:2>@13:0> = <loop_1067@11:1>)
          |- P[<<loop_1067@11:2>@13:0>](<loop_1067@11:0>:int,<loop_1067@11:1>:int,
                                        <<loop_1067@11:2>@13:0>:int)
          
           ((<loop_1067@11:1> = 0) && (<loop_1067@11:0> > 0))
          |- P[<loop_1067@11:1>](<loop_1067@11:0>:int,<loop_1067@11:1>:int)
        input to Yhorn:
          P[<fail_2362@21:0>](<fail_2362@21:0>:int)|- bot
          
          P[<<loop_1067@11:2>@13:0>](<k_make_array_u_1392@18:1>:int,var17:int,<k_make_array_u_1392@18:0>:int),
          ((0 > <k_make_array_u_1392@18:0>) &&
           ((<k_make_array_u_1392@18:1> > 0) && ((var17 = 0) && (<fail_2362@21:0> = 1))))
          |- P[<fail_2362@21:0>](<fail_2362@21:0>:int)
          
          P[<loop_1067@11:1>](<loop_1067@11:0>:int,<loop_1067@11:1>:int), (
          <<loop_1067@11:2>@13:0> = <loop_1067@11:1>)
          |- P[<<loop_1067@11:2>@13:0>](<loop_1067@11:0>:int,<loop_1067@11:1>:int,
                                        <<loop_1067@11:2>@13:0>:int)
          
           ((<loop_1067@11:0> > 0) && (<loop_1067@11:1> = 0))
          |- P[<loop_1067@11:1>](<loop_1067@11:0>:int,<loop_1067@11:1>:int)Yhorn (Wed Sep 25 10:52:05 JST 2013)


(0=0) & (v_sep_fail_2362_sep_21_sep_0($8)) -> 1=0.
(($8-1=0) & ($9=0) & ($10>0) & (-$11>0)) & (v_sep_loop_1067_sep_11_sep_2_sep_13_sep_0($10,$9,$11)) -> v_sep_fail_2362_sep_21_sep_0($8).
($12-$13=0) & (v_sep_loop_1067_sep_11_sep_1($14,$13)) -> v_sep_loop_1067_sep_11_sep_2_sep_13_sep_0($14,$13,$12).
($13=0) & ($14>0) -> v_sep_loop_1067_sep_11_sep_1($14,$13).


v_sep_fail_2362_sep_21_sep_0: X
v_sep_loop_1067_sep_11_sep_1: X
v_sep_loop_1067_sep_11_sep_2_sep_13_sep_0: X
....
v_sep_fail_2362_sep_21_sep_0: X
v_sep_loop_1067_sep_11_sep_1: X
v_sep_loop_1067_sep_11_sep_2_sep_13_sep_0: X
...
v_sep_fail_2362_sep_21_sep_0: X
v_sep_loop_1067_sep_11_sep_1: X
v_sep_loop_1067_sep_11_sep_2_sep_13_sep_0: X
....
v_sep_fail_2362_sep_21_sep_0: X
v_sep_loop_1067_sep_11_sep_1: X
v_sep_loop_1067_sep_11_sep_2_sep_13_sep_0: X
....(0=0) & (v_sep_fail_2362_sep_21_sep_0($8)) -> 1=0.
(($8-1=0) & ($9=0) & ($10>0) & (-$11>0)) & (v_sep_loop_1067_sep_11_sep_2_sep_13_sep_0($10,$9,$11)) -> v_sep_fail_2362_sep_21_sep_0($8).
($12-$13=0) & (v_sep_loop_1067_sep_11_sep_1($14,$13)) -> v_sep_loop_1067_sep_11_sep_2_sep_13_sep_0($14,$13,$12).
($13=0) & ($14>0) -> v_sep_loop_1067_sep_11_sep_1($14,$13).

        solution:
          P[<fail_2362@21:0>]($15:bool) = false
          P[<loop_1067@11:1>]($25:int,$27:int) = (0 <= $27)
          P[<<loop_1067@11:2>@13:0>]($18:int,$20:int,$22:int) = (0 <= $22)
        
      end HcSolver.solve_ub(10128)[4] (0.012998 sec.)
      begin HcSolver.check_validity(10284)[4]
        input:
          P[<fail_2362@21:0>](<fail_2362@21:0>:bool)|- bot
          
          P[<<loop_1067@11:2>@13:0>](<k_make_array_u_1392@18:1>:int,0:int,<k_make_array_u_1392@18:0>:int),
          ((<k_make_array_u_1392@18:1> > 0) && ((0 > <k_make_array_u_1392@18:0>) && <fail_2362@21:0>))
          |- P[<fail_2362@21:0>](<fail_2362@21:0>:bool)
          
          P[<loop_1067@11:1>](<loop_1067@11:0>:int,<loop_1067@11:1>:int), (
          <<loop_1067@11:2>@13:0> = <loop_1067@11:1>)
          |- P[<<loop_1067@11:2>@13:0>](<loop_1067@11:0>:int,<loop_1067@11:1>:int,
                                        <<loop_1067@11:2>@13:0>:int)
          
           ((<loop_1067@11:1> = 0) && (<loop_1067@11:0> > 0))
          |- P[<loop_1067@11:1>](<loop_1067@11:0>:int,<loop_1067@11:1>:int)
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        
      end HcSolver.check_validity(10284)[4] (0.002999 sec.)
      solution:
        P[<fail_2362@21:0>]($15:bool) = false
        P[<loop_1067@11:1>]($25:int,$27:int) = (0 <= $27)
        P[<<loop_1067@11:2>@13:0>]($18:int,$20:int,$22:int) = (0 <= $22)
    end YhornInterface.solve(10127)[3] (0.015997 sec.)
    
  end RefTypeInfer.infer_etrs(681)[2] (0.164974 sec.)
  refinement types:
    main_2340: X
    f_2358: v1:int -> X
    main_1073: v1:int -> (v2:unit -> X) -> X
    queen_1045: v1:int -> (v2:unit -> X) -> X
    loop_1067: v1:int ->
               v2:{v2:int | (0 <= v2)} -> (v3:{v3:int | (0 <= v3)} -> (v4:int -> X) -> X) -> (v7:unit -> X) -> X
    make_array_1355: v1:int -> v2:int -> v3:int -> (v4:int -> X) -> X
    k_make_array_u_1392: v1:int -> v2:int -> v3:int -> (v4:int -> X) -> v6:bool -> X
    fail_2362: v1:{v1:bool | false} -> (v2:unit -> X) -> X
    a_1039: var43:int ->
            var42:int ->
            var41:int -> var40:int -> (var39:int -> (var38:int -> X) -> X) -> var35:int -> (var34:int -> X) -> X
    abs_1043: var47:int -> (var46:int -> X) -> X
    assign_1348: var60:int ->
                 var59:int ->
                 var58:int -> (var57:int -> (var56:int -> X) -> X) -> ((var53:int -> (var52:int -> X) -> X) -> X) -> X
    aux_1056: var69:int -> var68:int -> (var67:int -> (var66:int -> X) -> X) -> (var63:unit -> X) -> X
    aux_1064: var80:int ->
              var79:int -> var78:int -> (var77:int -> (var76:int -> X) -> X) -> var73:int -> (var72:bool -> X) -> X
    br_f_loop_2360: var92:bool ->
                    var91:int ->
                    var90:int ->
                    var89:int -> (var88:unit -> X) -> (var86:int -> (var85:int -> X) -> X) -> var82:bool -> X
    dotsPrint_1052: var97:int -> var96:int -> (var95:unit -> X) -> X
    f_2359: var100:int -> var99:unit -> X
    f_aux_2343: var110:int ->
                var109:int -> (var108:int -> (var107:int -> X) -> X) -> (var104:unit -> X) -> var102:int -> X
    f_aux_2344: var121:int ->
                var120:int ->
                var119:int -> (var118:int -> (var117:int -> X) -> X) -> (var114:unit -> X) -> var112:unit -> X
    f_aux_2345: var133:int ->
                var132:int ->
                var131:int ->
                var130:unit -> (var129:int -> (var128:int -> X) -> X) -> (var125:unit -> X) -> var123:unit -> X
    f_aux_2346: var146:int ->
                var145:int ->
                var144:int ->
                var143:unit ->
                var142:unit -> (var141:int -> (var140:int -> X) -> X) -> (var137:unit -> X) -> var135:unit -> X
    f_aux_2347: var160:int ->
                var159:int ->
                var158:int ->
                var157:unit ->
                var156:unit ->
                var155:unit -> (var154:int -> (var153:int -> X) -> X) -> (var150:unit -> X) -> var148:unit -> X
    f_aux_2350: var172:int ->
                var171:int ->
                var170:int ->
                var169:int -> (var168:int -> (var167:int -> X) -> X) -> (var164:bool -> X) -> var162:int -> X
    f_aux_2351: var185:int ->
                var184:int ->
                var183:int ->
                var182:int ->
                var181:int -> (var180:int -> (var179:int -> X) -> X) -> (var176:bool -> X) -> var174:int -> X
    f_dotsPrint_2342: var191:int -> var190:int -> (var189:unit -> X) -> var187:unit -> X
    f_loop_2352: var201:int ->
                 var200:int -> (var199:int -> (var198:int -> X) -> X) -> (var195:unit -> X) -> var193:int -> X
    f_loop_2353: var211:int ->
                 var210:int -> var209:int -> (var208:unit -> X) -> (var206:int -> (var205:int -> X) -> X) -> X
    f_loop_2354: var221:int ->
                 var220:int -> var219:int -> (var218:unit -> X) -> (var216:int -> (var215:int -> X) -> X) -> X
    f_loop_2355: var232:int ->
                 var231:int ->
                 var230:int -> (var229:unit -> X) -> (var227:int -> (var226:int -> X) -> X) -> var223:bool -> X
    f_loop_2356: var244:bool ->
                 var243:int ->
                 var242:int ->
                 var241:int -> (var240:unit -> X) -> (var238:int -> (var237:int -> X) -> X) -> var234:unit -> X
    f_main_2357: var249:int -> (var248:unit -> X) -> var246:unit -> X
    f_queenPrint_2348: var254:int -> (var253:unit -> X) -> var251:unit -> X
    f_test_2349: var264:int ->
                 var263:int -> (var262:int -> (var261:int -> X) -> X) -> (var258:bool -> X) -> var256:int -> X
    f_update_2341: var278:int ->
                   var277:int ->
                   var276:int ->
                   (var275:int -> (var274:int -> X) -> X) ->
                   ((var271:int -> (var270:int -> X) -> X) -> X) -> var266:int -> X
    k_make_array_u_1403: var285:int -> var284:int -> var283:int -> (var282:int -> X) -> var280:unit -> X
    print_string_1350: var289:unit -> (var288:unit -> X) -> X
    queenPrint_1054: var297:int -> (var296:int -> (var295:int -> X) -> X) -> (var292:unit -> X) -> X
    test_1060: var306:int -> var305:int -> (var304:int -> (var303:int -> X) -> X) -> (var300:bool -> X) -> X
    update_1354: var319:int ->
                 var318:int ->
                 (var317:int -> (var316:int -> X) -> X) ->
                 var313:int -> ((var312:int -> (var311:int -> X) -> X) -> X) -> X
  abstraction types:
    main_2340: X
    f_2358: v1:int -> X
    main_1073: v1:int -> (v2:unit -> X) -> X
    queen_1045: v1:int -> (v2:unit -> X) -> X
    loop_1067: v1:int ->
               v2:int[v2 -> (0 <= v2)] -> (v3:int[v3 -> (0 <= v3)] -> (v4:int -> X) -> X) -> (v7:unit -> X) -> X
    make_array_1355: v1:int -> v2:int -> v3:int -> (v4:int -> X) -> X
    k_make_array_u_1392: v1:int -> v2:int -> v3:int -> (v4:int -> X) -> v6:bool -> X
    fail_2362: v1:bool -> (v2:unit -> X) -> X
    a_1039: var43:int ->
            var42:int ->
            var41:int -> var40:int -> (var39:int -> (var38:int -> X) -> X) -> var35:int -> (var34:int -> X) -> X
    abs_1043: var47:int -> (var46:int -> X) -> X
    assign_1348: var60:int ->
                 var59:int ->
                 var58:int -> (var57:int -> (var56:int -> X) -> X) -> ((var53:int -> (var52:int -> X) -> X) -> X) -> X
    aux_1056: var69:int -> var68:int -> (var67:int -> (var66:int -> X) -> X) -> (var63:unit -> X) -> X
    aux_1064: var80:int ->
              var79:int -> var78:int -> (var77:int -> (var76:int -> X) -> X) -> var73:int -> (var72:bool -> X) -> X
    br_f_loop_2360: var92:bool ->
                    var91:int ->
                    var90:int ->
                    var89:int -> (var88:unit -> X) -> (var86:int -> (var85:int -> X) -> X) -> var82:bool -> X
    dotsPrint_1052: var97:int -> var96:int -> (var95:unit -> X) -> X
    f_2359: var100:int -> var99:unit -> X
    f_aux_2343: var110:int ->
                var109:int -> (var108:int -> (var107:int -> X) -> X) -> (var104:unit -> X) -> var102:int -> X
    f_aux_2344: var121:int ->
                var120:int ->
                var119:int -> (var118:int -> (var117:int -> X) -> X) -> (var114:unit -> X) -> var112:unit -> X
    f_aux_2345: var133:int ->
                var132:int ->
                var131:int ->
                var130:unit -> (var129:int -> (var128:int -> X) -> X) -> (var125:unit -> X) -> var123:unit -> X
    f_aux_2346: var146:int ->
                var145:int ->
                var144:int ->
                var143:unit ->
                var142:unit -> (var141:int -> (var140:int -> X) -> X) -> (var137:unit -> X) -> var135:unit -> X
    f_aux_2347: var160:int ->
                var159:int ->
                var158:int ->
                var157:unit ->
                var156:unit ->
                var155:unit -> (var154:int -> (var153:int -> X) -> X) -> (var150:unit -> X) -> var148:unit -> X
    f_aux_2350: var172:int ->
                var171:int ->
                var170:int ->
                var169:int -> (var168:int -> (var167:int -> X) -> X) -> (var164:bool -> X) -> var162:int -> X
    f_aux_2351: var185:int ->
                var184:int ->
                var183:int ->
                var182:int ->
                var181:int -> (var180:int -> (var179:int -> X) -> X) -> (var176:bool -> X) -> var174:int -> X
    f_dotsPrint_2342: var191:int -> var190:int -> (var189:unit -> X) -> var187:unit -> X
    f_loop_2352: var201:int ->
                 var200:int -> (var199:int -> (var198:int -> X) -> X) -> (var195:unit -> X) -> var193:int -> X
    f_loop_2353: var211:int ->
                 var210:int -> var209:int -> (var208:unit -> X) -> (var206:int -> (var205:int -> X) -> X) -> X
    f_loop_2354: var221:int ->
                 var220:int -> var219:int -> (var218:unit -> X) -> (var216:int -> (var215:int -> X) -> X) -> X
    f_loop_2355: var232:int ->
                 var231:int ->
                 var230:int -> (var229:unit -> X) -> (var227:int -> (var226:int -> X) -> X) -> var223:bool -> X
    f_loop_2356: var244:bool ->
                 var243:int ->
                 var242:int ->
                 var241:int -> (var240:unit -> X) -> (var238:int -> (var237:int -> X) -> X) -> var234:unit -> X
    f_main_2357: var249:int -> (var248:unit -> X) -> var246:unit -> X
    f_queenPrint_2348: var254:int -> (var253:unit -> X) -> var251:unit -> X
    f_test_2349: var264:int ->
                 var263:int -> (var262:int -> (var261:int -> X) -> X) -> (var258:bool -> X) -> var256:int -> X
    f_update_2341: var278:int ->
                   var277:int ->
                   var276:int ->
                   (var275:int -> (var274:int -> X) -> X) ->
                   ((var271:int -> (var270:int -> X) -> X) -> X) -> var266:int -> X
    k_make_array_u_1403: var285:int -> var284:int -> var283:int -> (var282:int -> X) -> var280:unit -> X
    print_string_1350: var289:unit -> (var288:unit -> X) -> X
    queenPrint_1054: var297:int -> (var296:int -> (var295:int -> X) -> X) -> (var292:unit -> X) -> X
    test_1060: var306:int -> var305:int -> (var304:int -> (var303:int -> X) -> X) -> (var300:bool -> X) -> X
    update_1354: var319:int ->
                 var318:int ->
                 (var317:int -> (var316:int -> X) -> X) ->
                 var313:int -> ((var312:int -> (var311:int -> X) -> X) -> X) -> X
  
end AbsTypeInfer.refine(680)[1] (0.177972 sec.)
DONE!

Prefix of spurious counter-example::
0; 0; 0; 0; 0; 1

Program with abstraction types (CEGAR-cycle 1)::
Main: main_2340
  main_2340 -> (rand_int f_2358)
  a_1039 i_1035 n_1036 x_1038 x_1457 a_1037 j_1040 k_update_a_1472 when (i_1035 = j_1040) -> (k_update_a_1472 x_1038)
  a_1039 i_1035 n_1036 x_1038 x_1457 a_1037 j_1040 k_update_a_1472 when (
      not (i_1035 = j_1040)) -> (a_1037 j_1040 k_update_a_1472)
  abs_1043 x_1044 k_abs_1517 when (x_1044 < 0) -> (k_abs_1517 (0 - x_1044))
  abs_1043 x_1044 k_abs_1517 when (not (x_1044 < 0)) -> (k_abs_1517 x_1044)
  assign_1348 size_1046 i_1049 j_1050 a_1051 k_queen_assign_1596 ->
      (update_1354 i_1049 size_1046 a_1051 j_1050 k_queen_assign_1596)
  aux_1056 size_1046 row_1057 a_1058 k_queen_queenPrint_aux_1720 when (
      row_1057 >= size_1046) -> (k_queen_queenPrint_aux_1720 ())
  aux_1056 size_1046 row_1057 a_1058 k_queen_queenPrint_aux_1720 when (
      not (row_1057 >= size_1046)) ->
      (a_1058 row_1057 (f_aux_2343 row_1057 size_1046 a_1058 k_queen_queenPrint_aux_1720))
  aux_1064 j_1061 size_1046 x_1880 a_1062 i_1065 k_queen_test_aux_1904 when (
      i_1065 < j_1061) -> (a_1062 i_1065 (f_aux_2350 i_1065 j_1061 size_1046 x_1880 a_1062 k_queen_test_aux_1904))
  aux_1064 j_1061 size_1046 x_1880 a_1062 i_1065 k_queen_test_aux_1904 when (
      not (i_1065 < j_1061)) -> (k_queen_test_aux_1904 true)
  br_f_loop_2360 b_2361 row_1068 size_1046 x_1998 k_queen_loop_1992 x_2087 b_2251 when b_2361 ->
      (queenPrint_1054 size_1046 x_2087 (f_loop_2356 b_2251 row_1068 size_1046 x_1998 k_queen_loop_1992 x_2087))
  br_f_loop_2360 b_2361 row_1068 size_1046 x_1998 k_queen_loop_1992 x_2087 b_2251 when (
      not b_2361) -> (loop_1067 size_1046 (row_1068 + 1) x_2087 k_queen_loop_1992)
  dotsPrint_1052 size_1046 n_1053 k_queen_dotsPrint_1638 when (n_1053 = 0) -> (k_queen_dotsPrint_1638 ())
  dotsPrint_1052 size_1046 n_1053 k_queen_dotsPrint_1638 when (not (n_1053 = 0)) ->
      (print_string_1350 () (f_dotsPrint_2342 n_1053 size_1046 k_queen_dotsPrint_1638))
  f_2358 x_2315 -> (main_1073 x_2315 (f_2359 x_2315))
  f_2359 x_2315 x_2312 -> end
  f_aux_2343 row_1057 size_1046 a_1058 k_queen_queenPrint_aux_1720 x_1723 ->
      (dotsPrint_1052 size_1046 (x_1723 - 1) (f_aux_2344 row_1057 size_1046 x_1723 a_1058 k_queen_queenPrint_aux_1720))
  f_aux_2344 row_1057 size_1046 x_1723 a_1058 k_queen_queenPrint_aux_1720 x_1736 ->
      (print_string_1350 () (f_aux_2345 row_1057 size_1046 x_1723 x_1736 a_1058 k_queen_queenPrint_aux_1720))
  f_aux_2345 row_1057 size_1046 x_1723 x_1736 a_1058 k_queen_queenPrint_aux_1720 x_1749 ->
      (dotsPrint_1052 size_1046 (size_1046 - x_1723)
        (f_aux_2346 row_1057 size_1046 x_1723 x_1736 x_1749 a_1058 k_queen_queenPrint_aux_1720))
  f_aux_2346 row_1057 size_1046 x_1723 x_1736 x_1749 a_1058 k_queen_queenPrint_aux_1720 x_1762 ->
      (print_string_1350 ()
        (f_aux_2347 row_1057 size_1046 x_1723 x_1736 x_1749 x_1762 a_1058 k_queen_queenPrint_aux_1720))
  f_aux_2347 row_1057 size_1046 x_1723 x_1736 x_1749 x_1762 a_1058 k_queen_queenPrint_aux_1720 x_1775 ->
      (aux_1056 size_1046 (row_1057 + 1) a_1058 k_queen_queenPrint_aux_1720)
  f_aux_2350 i_1065 j_1061 size_1046 x_1880 a_1062 k_queen_test_aux_1904 x_1907 when (
      x_1907 = x_1880) -> (k_queen_test_aux_1904 false)
  f_aux_2350 i_1065 j_1061 size_1046 x_1880 a_1062 k_queen_test_aux_1904 x_1907 when (
      not (x_1907 = x_1880)) ->
      (abs_1043 (x_1880 - x_1907) (f_aux_2351 i_1065 j_1061 size_1046 x_1880 x_1907 a_1062 k_queen_test_aux_1904))
  f_aux_2351 i_1065 j_1061 size_1046 x_1880 x_1907 a_1062 k_queen_test_aux_1904 x_1920 when (
      x_1920 = (j_1061 - i_1065)) -> (k_queen_test_aux_1904 false)
  f_aux_2351 i_1065 j_1061 size_1046 x_1880 x_1907 a_1062 k_queen_test_aux_1904 x_1920 when (
      not (x_1920 = (j_1061 - i_1065))) -> (aux_1064 j_1061 size_1046 x_1880 a_1062 (i_1065 + 1) k_queen_test_aux_1904)
  f_dotsPrint_2342 n_1053 size_1046 k_queen_dotsPrint_1638 x_1641 ->
      (dotsPrint_1052 size_1046 (n_1053 - 1) k_queen_dotsPrint_1638)
  f_loop_2352 row_1068 size_1046 a_1069 k_queen_loop_1992 x_1998 when (
      (x_1998 + 1) > size_1046) ->
      (assign_1348 size_1046 row_1068 0 a_1069 (f_loop_2353 row_1068 size_1046 x_1998 k_queen_loop_1992))
  f_loop_2352 row_1068 size_1046 a_1069 k_queen_loop_1992 x_1998 when (
      not ((x_1998 + 1) > size_1046)) ->
      (assign_1348 size_1046 row_1068 (x_1998 + 1) a_1069 (f_loop_2354 row_1068 size_1046 x_1998 k_queen_loop_1992))
  f_loop_2353 row_1068 size_1046 x_1998 k_queen_loop_1992 x_2015 when (row_1068 = 0) -> (k_queen_loop_1992 ())
  f_loop_2353 row_1068 size_1046 x_1998 k_queen_loop_1992 x_2015 when (
      not (row_1068 = 0)) -> (loop_1067 size_1046 (row_1068 - 1) x_2015 k_queen_loop_1992)
  f_loop_2354 row_1068 size_1046 x_1998 k_queen_loop_1992 x_2087 ->
      (test_1060 size_1046 row_1068 x_2087 (f_loop_2355 row_1068 size_1046 x_1998 k_queen_loop_1992 x_2087))
  f_loop_2355 row_1068 size_1046 x_1998 k_queen_loop_1992 x_2087 b_2251 when b_2251 ->
      (br_f_loop_2360 (row_1068 > size_1046) row_1068 size_1046 x_1998 k_queen_loop_1992 x_2087 b_2251)
  f_loop_2355 row_1068 size_1046 x_1998 k_queen_loop_1992 x_2087 b_2251 when (
      not b_2251) -> (loop_1067 size_1046 row_1068 x_2087 k_queen_loop_1992)
  f_loop_2356 b_2251 row_1068 size_1046 x_1998 k_queen_loop_1992 x_2087 x_2152 ->
      (loop_1067 size_1046 row_1068 x_2087 k_queen_loop_1992)
  f_main_2357 n_1074 k_main_2292 x_2295 -> (k_main_2292 ())
  f_queenPrint_2348 size_1046 k_queen_queenPrint_1691 x_1815 -> (print_string_1350 () k_queen_queenPrint_1691)
  f_test_2349 j_1061 size_1046 a_1062 k_queen_test_1877 x_1880 ->
      (aux_1064 j_1061 size_1046 x_1880 a_1062 0 k_queen_test_1877)
  f_update_2341 i_1035 n_1036 x_1038 a_1037 k_update_1451 x_1457 ->
      (k_update_1451 (a_1039 i_1035 n_1036 x_1038 x_1457 a_1037))
  fail_2362 b k -> {fail} => (k ())
  k_make_array_u_1392 i_1033 n_1031 s_1032 k_make_array_1386 b_1404 when b_1404 ->
      (k_make_array_u_1403 i_1033 n_1031 s_1032 k_make_array_1386 ())
  k_make_array_u_1392 i_1033 n_1031 s_1032 k_make_array_1386 b_1404 when (
      not b_1404) -> (fail_2362 true (k_make_array_u_1403 i_1033 n_1031 s_1032 k_make_array_1386))
  k_make_array_u_1403 i_1033 n_1031 s_1032 k_make_array_1386 x_1389 -> (k_make_array_1386 s_1032)
  loop_1067 size_1046 row_1068 a_1069 k_queen_loop_1992 ->
      (a_1069 row_1068 (f_loop_2352 row_1068 size_1046 a_1069 k_queen_loop_1992))
  main_1073 n_1074 k_main_2292 when (n_1074 > 0) -> (queen_1045 n_1074 (f_main_2357 n_1074 k_main_2292))
  main_1073 n_1074 k_main_2292 when (not (n_1074 > 0)) -> (k_main_2292 ())
  make_array_1355 n_1031 s_1032 i_1033 k_make_array_1386 when (0 <= i_1033) ->
      (k_make_array_u_1392 i_1033 n_1031 s_1032 k_make_array_1386 (i_1033 < n_1031))
  make_array_1355 n_1031 s_1032 i_1033 k_make_array_1386 when (not (0 <= i_1033)) ->
      (k_make_array_u_1392 i_1033 n_1031 s_1032 k_make_array_1386 false)
  print_string_1350 s_1042 k_print_string_1503 -> (k_print_string_1503 ())
  queenPrint_1054 size_1046 a_1055 k_queen_queenPrint_1691 ->
      (aux_1056 size_1046 0 a_1055 (f_queenPrint_2348 size_1046 k_queen_queenPrint_1691))
  queen_1045 size_1046 k_queen_1535 -> (loop_1067 size_1046 0 (make_array_1355 size_1046 0) k_queen_1535)
  test_1060 size_1046 j_1061 a_1062 k_queen_test_1877 ->
      (a_1062 j_1061 (f_test_2349 j_1061 size_1046 a_1062 k_queen_test_1877))
  update_1354 i_1035 n_1036 a_1037 x_1038 k_update_1451 ->
      (a_1037 i_1035 (f_update_2341 i_1035 n_1036 x_1038 a_1037 k_update_1451))
Types:
  main_2340 : X
  aux_1056 : (int -> int -> (int -> (int -> X) -> X) -> (unit -> X) -> X)
  aux_1064 : (int -> int -> int -> (int -> (int -> X) -> X) -> int -> (x_12:bool[x_12] -> X) -> X)
  dotsPrint_1052 : (int -> int -> (unit -> X) -> X)
  fail_2362 : (x_1:bool[x_1] -> (unit -> X) -> X)
  loop_1067 : (int -> x_2:int[x_2 >= 0] -> (x_4:int[x_4 >= 0] -> (int -> X) -> X) -> (unit -> X) -> X)
  
(1-1) Abstracting ... DONE!

(1-2) Checking HORS ... DONE!

Error trace::
  main_2340 ... --> 
  f_2358 ... --> 
  main_1073 [1/2] ... --> 
  queen_1045 ... --> 
  loop_1067 ... --> 
  make_array_1355 [1/2] ... --> 
  k_make_array_u_1392 [2/2] ... --> 
  fail_2362 ... --> fail -->
  ERROR!

Spurious counter-example::
  0; 0; 0; 0; 0; 0; 1; 0

(1-3) Checking counter-example ... DONE!

(1-4) Discovering predicates ... 
begin AbsTypeInfer.refine(12229)[1]
  program:
    main_2340  | true = ((Random.int 0) f_2358)
    a_1039 i_1035 n_1036 x_1038 x_1457 a_1037 j_1040 k_update_a_1472 | (
    i_1035 = j_1040) = (k_update_a_1472 x_1038)
    a_1039 i_1035 n_1036 x_1038 x_1457 a_1037 j_1040 k_update_a_1472 | (
    not (i_1035 = j_1040)) = (a_1037 j_1040
                                     k_update_a_1472)
    abs_1043 x_1044 k_abs_1517 | (x_1044 < 0) = (k_abs_1517 (0 - x_1044))
    abs_1043 x_1044 k_abs_1517 | (not (x_1044 < 0)) = (k_abs_1517 x_1044)
    assign_1348 size_1046 i_1049 j_1050 a_1051 k_queen_assign_1596 | true = (
    update_1354 i_1049
                size_1046
                a_1051
                j_1050
                k_queen_assign_1596)
    aux_1056 size_1046 row_1057 a_1058 k_queen_queenPrint_aux_1720 | (
    row_1057 >= size_1046) = (k_queen_queenPrint_aux_1720 ())
    aux_1056 size_1046 row_1057 a_1058 k_queen_queenPrint_aux_1720 | (
    not (row_1057 >= size_1046)) = (a_1058 row_1057
                                           (f_aux_2343 row_1057
                                                       size_1046
                                                       a_1058
                                                       k_queen_queenPrint_aux_1720))
    aux_1064 j_1061 size_1046 x_1880 a_1062 i_1065 k_queen_test_aux_1904 | (
    i_1065 < j_1061) = (a_1062 i_1065
                               (f_aux_2350 i_1065
                                           j_1061
                                           size_1046
                                           x_1880
                                           a_1062
                                           k_queen_test_aux_1904))
    aux_1064 j_1061 size_1046 x_1880 a_1062 i_1065 k_queen_test_aux_1904 | (
    not (i_1065 < j_1061)) = (k_queen_test_aux_1904 true)
    br_f_loop_2360 b_2361 row_1068 size_1046 x_1998 k_queen_loop_1992 x_2087 b_2251 | b_2361 = (
    queenPrint_1054 size_1046
                    x_2087
                    (f_loop_2356 b_2251
                                 row_1068
                                 size_1046
                                 x_1998
                                 k_queen_loop_1992
                                 x_2087))
    br_f_loop_2360 b_2361 row_1068 size_1046 x_1998 k_queen_loop_1992 x_2087 b_2251 | (
    not b_2361) = (loop_1067 size_1046
                             (row_1068 + 1)
                             x_2087
                             k_queen_loop_1992)
    dotsPrint_1052 size_1046 n_1053 k_queen_dotsPrint_1638 | (n_1053 = 0) = (
    k_queen_dotsPrint_1638 ())
    dotsPrint_1052 size_1046 n_1053 k_queen_dotsPrint_1638 | (not (n_1053 = 0)) = (
    print_string_1350 ()
                      (f_dotsPrint_2342 n_1053
                                        size_1046
                                        k_queen_dotsPrint_1638))
    f_2358 x_2315 | true = (main_1073 x_2315
                                      (f_2359 x_2315))
    f_2359 x_2315 x_2312 | true = end
    f_aux_2343 row_1057 size_1046 a_1058 k_queen_queenPrint_aux_1720 x_1723 | true = (
    dotsPrint_1052 size_1046
                   (x_1723 - 1)
                   (f_aux_2344 row_1057
                               size_1046
                               x_1723
                               a_1058
                               k_queen_queenPrint_aux_1720))
    f_aux_2344 row_1057 size_1046 x_1723 a_1058 k_queen_queenPrint_aux_1720 x_1736 | true = (
    print_string_1350 ()
                      (f_aux_2345 row_1057
                                  size_1046
                                  x_1723
                                  x_1736
                                  a_1058
                                  k_queen_queenPrint_aux_1720))
    f_aux_2345 row_1057 size_1046 x_1723 x_1736 a_1058 k_queen_queenPrint_aux_1720 x_1749 | true = (
    dotsPrint_1052
      size_1046
      (size_1046 - x_1723)
      (f_aux_2346 row_1057
                  size_1046
                  x_1723
                  x_1736
                  x_1749
                  a_1058
                  k_queen_queenPrint_aux_1720))
    f_aux_2346 row_1057 size_1046 x_1723 x_1736 x_1749 a_1058 k_queen_queenPrint_aux_1720 x_1762 | true = (
    print_string_1350 ()
                      (f_aux_2347 row_1057
                                  size_1046
                                  x_1723
                                  x_1736
                                  x_1749
                                  x_1762
                                  a_1058
                                  k_queen_queenPrint_aux_1720))
    f_aux_2347 row_1057 size_1046 x_1723 x_1736 x_1749 x_1762 a_1058 k_queen_queenPrint_aux_1720 x_1775 | true = (
    aux_1056 size_1046
             (row_1057 + 1)
             a_1058
             k_queen_queenPrint_aux_1720)
    f_aux_2350 i_1065 j_1061 size_1046 x_1880 a_1062 k_queen_test_aux_1904 x_1907 | (
    x_1907 = x_1880) = (k_queen_test_aux_1904 false)
    f_aux_2350 i_1065 j_1061 size_1046 x_1880 a_1062 k_queen_test_aux_1904 x_1907 | (
    not (x_1907 = x_1880)) = (abs_1043
                                (x_1880 - x_1907)
                                (f_aux_2351 i_1065
                                            j_1061
                                            size_1046
                                            x_1880
                                            x_1907
                                            a_1062
                                            k_queen_test_aux_1904))
    f_aux_2351 i_1065 j_1061 size_1046 x_1880 x_1907 a_1062 k_queen_test_aux_1904 x_1920 | (
    x_1920 = (j_1061 - i_1065)) = (k_queen_test_aux_1904 false)
    f_aux_2351 i_1065 j_1061 size_1046 x_1880 x_1907 a_1062 k_queen_test_aux_1904 x_1920 | (
    not (x_1920 = (j_1061 - i_1065))) = (aux_1064 j_1061
                                                  size_1046
                                                  x_1880
                                                  a_1062
                                                  (i_1065 + 1)
                                                  k_queen_test_aux_1904)
    f_dotsPrint_2342 n_1053 size_1046 k_queen_dotsPrint_1638 x_1641 | true = (
    dotsPrint_1052 size_1046
                   (n_1053 - 1)
                   k_queen_dotsPrint_1638)
    f_loop_2352 row_1068 size_1046 a_1069 k_queen_loop_1992 x_1998 | (
    (x_1998 + 1) > size_1046) = (assign_1348
                                   size_1046
                                   row_1068
                                   0
                                   a_1069
                                   (f_loop_2353 row_1068
                                                size_1046
                                                x_1998
                                                k_queen_loop_1992))
    f_loop_2352 row_1068 size_1046 a_1069 k_queen_loop_1992 x_1998 | (
    not ((x_1998 + 1) > size_1046)) = (assign_1348
                                         size_1046
                                         row_1068
                                         (x_1998 + 1)
                                         a_1069
                                         (f_loop_2354 row_1068
                                                      size_1046
                                                      x_1998
                                                      k_queen_loop_1992))
    f_loop_2353 row_1068 size_1046 x_1998 k_queen_loop_1992 x_2015 | (
    row_1068 = 0) = (k_queen_loop_1992 ())
    f_loop_2353 row_1068 size_1046 x_1998 k_queen_loop_1992 x_2015 | (
    not (row_1068 = 0)) = (loop_1067 size_1046
                                     (row_1068 - 1)
                                     x_2015
                                     k_queen_loop_1992)
    f_loop_2354 row_1068 size_1046 x_1998 k_queen_loop_1992 x_2087 | true = (
    test_1060 size_1046
              row_1068
              x_2087
              (f_loop_2355 row_1068
                           size_1046
                           x_1998
                           k_queen_loop_1992
                           x_2087))
    f_loop_2355 row_1068 size_1046 x_1998 k_queen_loop_1992 x_2087 b_2251 | b_2251 = (
    br_f_loop_2360 (row_1068 > size_1046)
                   row_1068
                   size_1046
                   x_1998
                   k_queen_loop_1992
                   x_2087
                   b_2251)
    f_loop_2355 row_1068 size_1046 x_1998 k_queen_loop_1992 x_2087 b_2251 | (
    not b_2251) = (loop_1067 size_1046
                             row_1068
                             x_2087
                             k_queen_loop_1992)
    f_loop_2356 b_2251 row_1068 size_1046 x_1998 k_queen_loop_1992 x_2087 x_2152 | true = (
    loop_1067 size_1046
              row_1068
              x_2087
              k_queen_loop_1992)
    f_main_2357 n_1074 k_main_2292 x_2295 | true = (k_main_2292 ())
    f_queenPrint_2348 size_1046 k_queen_queenPrint_1691 x_1815 | true = (
    print_string_1350 ()
                      k_queen_queenPrint_1691)
    f_test_2349 j_1061 size_1046 a_1062 k_queen_test_1877 x_1880 | true = (
    aux_1064 j_1061
             size_1046
             x_1880
             a_1062
             0
             k_queen_test_1877)
    f_update_2341 i_1035 n_1036 x_1038 a_1037 k_update_1451 x_1457 | true = (
    k_update_1451 (a_1039 i_1035
                          n_1036
                          x_1038
                          x_1457
                          a_1037))
    fail_2362 b k | true = (fail ())
    k_make_array_u_1392 i_1033 n_1031 s_1032 k_make_array_1386 b_1404 | b_1404 = (
    k_make_array_u_1403 i_1033
                        n_1031
                        s_1032
                        k_make_array_1386
                        ())
    k_make_array_u_1392 i_1033 n_1031 s_1032 k_make_array_1386 b_1404 | (
    not b_1404) = (fail_2362 true
                             (k_make_array_u_1403 i_1033
                                                  n_1031
                                                  s_1032
                                                  k_make_array_1386))
    k_make_array_u_1403 i_1033 n_1031 s_1032 k_make_array_1386 x_1389 | true = (
    k_make_array_1386 s_1032)
    loop_1067 size_1046 row_1068 a_1069 k_queen_loop_1992 | true = (a_1069
                                                                    row_1068
                                                                    (
                                                                    f_loop_2352
                                                                    row_1068
                                                                    size_1046
                                                                    a_1069
                                                                    k_queen_loop_1992))
    main_1073 n_1074 k_main_2292 | (n_1074 > 0) = (queen_1045 n_1074
                                                              (f_main_2357 n_1074
                                                                    k_main_2292))
    main_1073 n_1074 k_main_2292 | (not (n_1074 > 0)) = (k_main_2292 ())
    make_array_1355 n_1031 s_1032 i_1033 k_make_array_1386 | (0 <= i_1033) = (
    k_make_array_u_1392 i_1033
                        n_1031
                        s_1032
                        k_make_array_1386
                        (i_1033 < n_1031))
    make_array_1355 n_1031 s_1032 i_1033 k_make_array_1386 | (not (0 <= i_1033)) = (
    k_make_array_u_1392 i_1033
                        n_1031
                        s_1032
                        k_make_array_1386
                        false)
    print_string_1350 s_1042 k_print_string_1503 | true = (k_print_string_1503 ())
    queenPrint_1054 size_1046 a_1055 k_queen_queenPrint_1691 | true = (
    aux_1056 size_1046
             0
             a_1055
             (f_queenPrint_2348 size_1046
                                k_queen_queenPrint_1691))
    queen_1045 size_1046 k_queen_1535 | true = (loop_1067 size_1046
                                                          0
                                                          (make_array_1355 size_1046
                                                                    0)
                                                          k_queen_1535)
    test_1060 size_1046 j_1061 a_1062 k_queen_test_1877 | true = (a_1062
                                                                    j_1061
                                                                    (
                                                                    f_test_2349
                                                                    j_1061
                                                                    size_1046
                                                                    a_1062
                                                                    k_queen_test_1877))
    update_1354 i_1035 n_1036 a_1037 x_1038 k_update_1451 | true = (a_1037
                                                                    i_1035
                                                                    (
                                                                    f_update_2341
                                                                    i_1035
                                                                    n_1036
                                                                    x_1038
                                                                    a_1037
                                                                    k_update_1451))
    main_2340:X
    a_1039:int -> int -> int -> int -> (int -> (int -> X) -> X) -> int -> (int -> X) -> X
    abs_1043:int -> (int -> X) -> X
    assign_1348:int -> int -> int -> (int -> (int -> X) -> X) -> ((int -> (int -> X) -> X) -> X) -> X
    aux_1056:int -> int -> (int -> (int -> X) -> X) -> (unit -> X) -> X
    aux_1064:int -> int -> int -> (int -> (int -> X) -> X) -> int -> (bool -> X) -> X
    br_f_loop_2360:bool -> int -> int -> int -> (unit -> X) -> (int -> (int -> X) -> X) -> bool -> X
    dotsPrint_1052:int -> int -> (unit -> X) -> X
    f_2358:int -> X
    f_2359:int -> unit -> X
    f_aux_2343:int -> int -> (int -> (int -> X) -> X) -> (unit -> X) -> int -> X
    f_aux_2344:int -> int -> int -> (int -> (int -> X) -> X) -> (unit -> X) -> unit -> X
    f_aux_2345:int -> int -> int -> unit -> (int -> (int -> X) -> X) -> (unit -> X) -> unit -> X
    f_aux_2346:int -> int -> int -> unit -> unit -> (int -> (int -> X) -> X) -> (unit -> X) -> unit -> X
    f_aux_2347:int -> int -> int -> unit -> unit -> unit -> (int -> (int -> X) -> X) -> (unit -> X) -> unit -> X
    f_aux_2350:int -> int -> int -> int -> (int -> (int -> X) -> X) -> (bool -> X) -> int -> X
    f_aux_2351:int -> int -> int -> int -> int -> (int -> (int -> X) -> X) -> (bool -> X) -> int -> X
    f_dotsPrint_2342:int -> int -> (unit -> X) -> unit -> X
    f_loop_2352:int -> int -> (int -> (int -> X) -> X) -> (unit -> X) -> int -> X
    f_loop_2353:int -> int -> int -> (unit -> X) -> (int -> (int -> X) -> X) -> X
    f_loop_2354:int -> int -> int -> (unit -> X) -> (int -> (int -> X) -> X) -> X
    f_loop_2355:int -> int -> int -> (unit -> X) -> (int -> (int -> X) -> X) -> bool -> X
    f_loop_2356:bool -> int -> int -> int -> (unit -> X) -> (int -> (int -> X) -> X) -> unit -> X
    f_main_2357:int -> (unit -> X) -> unit -> X
    f_queenPrint_2348:int -> (unit -> X) -> unit -> X
    f_test_2349:int -> int -> (int -> (int -> X) -> X) -> (bool -> X) -> int -> X
    f_update_2341:int -> int -> int -> (int -> (int -> X) -> X) -> ((int -> (int -> X) -> X) -> X) -> int -> X
    fail_2362:bool -> (unit -> X) -> X
    k_make_array_u_1392:int -> int -> int -> (int -> X) -> bool -> X
    k_make_array_u_1403:int -> int -> int -> (int -> X) -> unit -> X
    loop_1067:int -> int -> (int -> (int -> X) -> X) -> (unit -> X) -> X
    main_1073:int -> (unit -> X) -> X
    make_array_1355:int -> int -> int -> (int -> X) -> X
    print_string_1350:unit -> (unit -> X) -> X
    queenPrint_1054:int -> (int -> (int -> X) -> X) -> (unit -> X) -> X
    queen_1045:int -> (unit -> X) -> X
    test_1060:int -> int -> (int -> (int -> X) -> X) -> (bool -> X) -> X
    update_1354:int -> int -> (int -> (int -> X) -> X) -> int -> ((int -> (int -> X) -> X) -> X) -> X
  inlined functions: a_1039,abs_1043,assign_1348,br_f_loop_2360,f_2358,f_2359,f_aux_2343,f_aux_2344,f_aux_2345,f_aux_2346,f_aux_2347,f_aux_2350,f_aux_2351,f_dotsPrint_2342,f_loop_2352,f_loop_2353,f_loop_2354,f_loop_2355,f_loop_2356,f_main_2357,f_queenPrint_2348,f_test_2349,f_update_2341,k_make_array_u_1392,k_make_array_u_1403,main_1073,make_array_1355,print_string_1350,queenPrint_1054,queen_1045,test_1060,update_1354
  counterexample: 0:0:0:0:0:0:1:0
  error traces:
    [true.nop(<f_2358@27:0> = var320)
     [true.(<main_1073@29:0> = <f_2358@27:0>)
      [(<main_1073@29:0> > 0).(<queen_1045@32:0> = <main_1073@29:0>)
       [true.((<loop_1067@34:0> = <queen_1045@32:0>) && (<loop_1067@34:1> = 0))
        [true.(<<loop_1067@34:2>@36:0> = <loop_1067@34:1>)
         [true.
          ((<make_array_1355@38:0> = <queen_1045@32:0>) &&
           ((<make_array_1355@38:1> = 0) && (<make_array_1355@38:2> = <<loop_1067@34:2>@36:0>)))
          [(0 <= <make_array_1355@38:2>).
           ((<k_make_array_u_1392@41:0> = <make_array_1355@38:2>) &&
            ((<k_make_array_u_1392@41:1> = <make_array_1355@38:0>) &&
             ((<k_make_array_u_1392@41:2> = <make_array_1355@38:1>) &&
              (<k_make_array_u_1392@41:4> = (<make_array_1355@38:2> < <make_array_1355@38:0>)))))
           [(not <k_make_array_u_1392@41:4>).(<fail_2362@44:0> = true)[true.error
  begin RefTypeInfer.infer_etrs(12230)[2]
    horn clauses:
      P[<fail_2362@44:0>](<fail_2362@44:0>:bool)|- bot
      
      P[<k_make_array_u_1392@41:4>](<k_make_array_u_1392@41:0>:int,<k_make_array_u_1392@41:1>:int,<k_make_array_u_1392@41:2>:int,false:bool),
      <fail_2362@44:0> |- P[<fail_2362@44:0>](<fail_2362@44:0>:bool)
      
      P[<make_array_1355@38:2>](<k_make_array_u_1392@41:1>:int,<k_make_array_u_1392@41:2>:int,<k_make_array_u_1392@41:0>:int),
      ((0 <= <k_make_array_u_1392@41:0>) &&
       (<k_make_array_u_1392@41:4> = (<k_make_array_u_1392@41:0> < <k_make_array_u_1392@41:1>)))
      |- P[<k_make_array_u_1392@41:4>](<k_make_array_u_1392@41:0>:int,
                                       <k_make_array_u_1392@41:1>:int,
                                       <k_make_array_u_1392@41:2>:int,
                                       <k_make_array_u_1392@41:4>:bool)
      
      P[<queen_1045@32:0>](<make_array_1355@38:0>:int),
      P[<<loop_1067@34:2>@36:0>](<make_array_1355@38:0>:int,0:int,<make_array_1355@38:2>:int),
      (<make_array_1355@38:1> = 0)
      |- P[<make_array_1355@38:2>](<make_array_1355@38:0>:int,<make_array_1355@38:1>:int,
                                   <make_array_1355@38:2>:int)
      
      P[<loop_1067@34:1>](<loop_1067@34:0>:int,<loop_1067@34:1>:int), (
      <<loop_1067@34:2>@36:0> = <loop_1067@34:1>)
      |- P[<<loop_1067@34:2>@36:0>](<loop_1067@34:0>:int,<loop_1067@34:1>:int,
                                    <<loop_1067@34:2>@36:0>:int)
      
      P[<queen_1045@32:0>](<loop_1067@34:0>:int), (<loop_1067@34:1> = 0)
      |- P[<loop_1067@34:1>](<loop_1067@34:0>:int,<loop_1067@34:1>:int)
      
      P[<main_1073@29:0>](<queen_1045@32:0>:int), (<queen_1045@32:0> > 0)
      |- P[<queen_1045@32:0>](<queen_1045@32:0>:int)
      
      P[<f_2358@27:0>](<main_1073@29:0>:int)|- P[<main_1073@29:0>](<main_1073@29:0>:int)
      
      |- P[<f_2358@27:0>](<f_2358@27:0>:int)
    call trees:
      <main_2340@24>
        <f_2358@27>
          <main_1073@29>
            <queen_1045@32>
              <loop_1067@34>
              </<loop_1067@34:2>@36>
              <make_array_1355@38>
                <k_make_array_u_1392@41>
                  <fail_2362@44>
    inlined horn clauses:
      P[<fail_2362@44:0>](<fail_2362@44:0>:bool)|- bot
      
      P[<<loop_1067@34:2>@36:0>](<k_make_array_u_1392@41:1>:int,0:int,<k_make_array_u_1392@41:0>:int),
      ((<k_make_array_u_1392@41:0> >= <k_make_array_u_1392@41:1>) &&
       ((<k_make_array_u_1392@41:1> > 0) && ((0 <= <k_make_array_u_1392@41:0>) && <fail_2362@44:0>)))
      |- P[<fail_2362@44:0>](<fail_2362@44:0>:bool)
      
      P[<loop_1067@34:1>](<loop_1067@34:0>:int,<loop_1067@34:1>:int), (
      <<loop_1067@34:2>@36:0> = <loop_1067@34:1>)
      |- P[<<loop_1067@34:2>@36:0>](<loop_1067@34:0>:int,<loop_1067@34:1>:int,
                                    <<loop_1067@34:2>@36:0>:int)
      
       ((<loop_1067@34:1> = 0) && (<loop_1067@34:0> > 0))
      |- P[<loop_1067@34:1>](<loop_1067@34:0>:int,<loop_1067@34:1>:int)
    begin ParamSubstInfer.infer(13754)[3]
      
    end ParamSubstInfer.infer(13754)[3] (0.289956 sec.)
    inferred extra parameters:
      
    begin RefTypeInfer.elim_coeffs(13756)[3]
      
    end RefTypeInfer.elim_coeffs(13756)[3] (0.000999 sec.)
    begin GenHcSolver.solve(14029)[3]
      Horn clauses:
        P[<fail_2362@44:0>](<fail_2362@44:0>:bool)|- bot
        
        P[<<loop_1067@34:2>@36:0>](<k_make_array_u_1392@41:1>:int,0:int,<k_make_array_u_1392@41:0>:int),
        ((<k_make_array_u_1392@41:0> >= <k_make_array_u_1392@41:1>) &&
         ((<k_make_array_u_1392@41:1> > 0) && ((0 <= <k_make_array_u_1392@41:0>) && <fail_2362@44:0>)))
        |- P[<fail_2362@44:0>](<fail_2362@44:0>:bool)
        
        P[<loop_1067@34:1>](<loop_1067@34:0>:int,<loop_1067@34:1>:int), (
        <<loop_1067@34:2>@36:0> = <loop_1067@34:1>)
        |- P[<<loop_1067@34:2>@36:0>](<loop_1067@34:0>:int,<loop_1067@34:1>:int,
                                      <<loop_1067@34:2>@36:0>:int)
        
         ((<loop_1067@34:1> = 0) && (<loop_1067@34:0> > 0))
        |- P[<loop_1067@34:1>](<loop_1067@34:0>:int,<loop_1067@34:1>:int)
      lower bounds:
        P[<loop_1067@34:1>](<loop_1067@34:0>:int,<loop_1067@34:1>:int) =
        ((<loop_1067@34:1> = 0) && (<loop_1067@34:0> > 0))
        P[<<loop_1067@34:2>@36:0>](<loop_1067@34:0>:int,<loop_1067@34:1>:int,<<loop_1067@34:2>@36:0>:int) =
        ((<loop_1067@34:1> = 0) && ((<loop_1067@34:0> > 0) && (<<loop_1067@34:2>@36:0> = <loop_1067@34:1>)))
        P[<fail_2362@44:0>](<fail_2362@44:0>:bool) = false
      upper bounds:
        P[<fail_2362@44:0>](var322:bool) = true
      begin GenHcSolver.classify_pids(15447)[4]
        output:
          [<fail_2362@44:0>]
      end GenHcSolver.classify_pids(15447)[4] (0.000000 sec.)
      lb:false
      nub:false
      begin ApronInterface.convex_hull_interpolate(15450)[4]
        lb:false
        nub:false
        lb':false
        nub':false
        begin InterpProver.interpolate(15451)[5]
          begin InterpProver.interpolate_fresh(15452)[6]
            begin InterpProver.interpolate_log(15453)[7]
              input1: false
              input2: false
              begin InterpProver.interpolate_check(15454)[8]
                begin InterpProver.interpolate_simplify(15455)[9]
                  begin InterpProver.interpolate_quick(15468)[10]
                    
                  end InterpProver.interpolate_quick(15468)[10] (0.000000 sec.)
                  begin minimizing # of disjunctions(15472)[10]
                    input: false
                    output: false
                  end minimizing # of disjunctions(15472)[10] (0.000000 sec.)
                  
                end InterpProver.interpolate_simplify(15455)[9] (0.001000 sec.)
                
              end InterpProver.interpolate_check(15454)[8] (0.001000 sec.)
              output: false
            end InterpProver.interpolate_log(15453)[7] (0.001000 sec.)
            
          end InterpProver.interpolate_fresh(15452)[6] (0.001000 sec.)
          
        end InterpProver.interpolate(15451)[5] (0.001000 sec.)
        output:
          P[<fail_2362@44:0>](<fail_2362@44:0>:bool) = false
      end ApronInterface.convex_hull_interpolate(15450)[4] (0.001000 sec.)
      Horn clauses:
        P[<<loop_1067@34:2>@36:0>](<k_make_array_u_1392@41:1>:int,0:int,<k_make_array_u_1392@41:0>:int),
        ((0 <= <k_make_array_u_1392@41:0>) &&
         ((<k_make_array_u_1392@41:1> > 0) && (<k_make_array_u_1392@41:0> >= <k_make_array_u_1392@41:1>))) |- bot
        
        P[<loop_1067@34:1>](<loop_1067@34:0>:int,<loop_1067@34:1>:int), (
        <<loop_1067@34:2>@36:0> = <loop_1067@34:1>)
        |- P[<<loop_1067@34:2>@36:0>](<loop_1067@34:0>:int,<loop_1067@34:1>:int,
                                      <<loop_1067@34:2>@36:0>:int)
        
         ((<loop_1067@34:1> = 0) && (<loop_1067@34:0> > 0))
        |- P[<loop_1067@34:1>](<loop_1067@34:0>:int,<loop_1067@34:1>:int)
      lower bounds:
        P[<loop_1067@34:1>](<loop_1067@34:0>:int,<loop_1067@34:1>:int) =
        ((<loop_1067@34:1> = 0) && (<loop_1067@34:0> > 0))
        P[<<loop_1067@34:2>@36:0>](<loop_1067@34:0>:int,<loop_1067@34:1>:int,<<loop_1067@34:2>@36:0>:int) =
        ((<loop_1067@34:1> = 0) && ((<loop_1067@34:0> > 0) && (<<loop_1067@34:2>@36:0> = <loop_1067@34:1>)))
      upper bounds:
        P[<<loop_1067@34:2>@36:0>](var323:int,var324:int,var325:int) =
        ((var324 <> 0) || ((0 > var325) || ((var323 <= 0) || (var325 < var323))))
      begin GenHcSolver.classify_pids(17545)[4]
        output:
          [<<loop_1067@34:2>@36:0>]
      end GenHcSolver.classify_pids(17545)[4] (0.001000 sec.)
      lb:((<loop_1067@34:1> = 0) && ((<loop_1067@34:0> > 0) && (<<loop_1067@34:2>@36:0> = <loop_1067@34:1>)))
      nub:(not
             ((<loop_1067@34:1> <> 0) ||
              ((0 > <<loop_1067@34:2>@36:0>) ||
               ((<loop_1067@34:0> <= 0) || (<<loop_1067@34:2>@36:0> < <loop_1067@34:0>)))))
      begin ApronInterface.convex_hull_interpolate(17548)[4]
        lb:((<loop_1067@34:1> = 0) && ((<loop_1067@34:0> > 0) && (<<loop_1067@34:2>@36:0> = <loop_1067@34:1>)))
        nub:(not
               ((<loop_1067@34:1> <> 0) ||
                ((0 > <<loop_1067@34:2>@36:0>) ||
                 ((<loop_1067@34:0> <= 0) || (<<loop_1067@34:2>@36:0> < <loop_1067@34:0>)))))
        lb':((<loop_1067@34:1> = 0) && ((<loop_1067@34:0> > 0) && (<<loop_1067@34:2>@36:0> = <loop_1067@34:1>)))
        nub':(not
                ((<loop_1067@34:1> <> 0) ||
                 ((0 > <<loop_1067@34:2>@36:0>) ||
                  ((<loop_1067@34:0> <= 0) || (<<loop_1067@34:2>@36:0> < <loop_1067@34:0>)))))
        begin InterpProver.interpolate(17549)[5]
          begin InterpProver.interpolate_fresh(17550)[6]
            begin InterpProver.interpolate_log(17551)[7]
              input1: ((<loop_1067@34:1> = 0) &&
                       ((<loop_1067@34:0> > 0) && (<<loop_1067@34:2>@36:0> = <loop_1067@34:1>)))
              input2: (not
                         ((<loop_1067@34:1> <> 0) ||
                          ((0 > <<loop_1067@34:2>@36:0>) ||
                           ((<loop_1067@34:0> <= 0) || (<<loop_1067@34:2>@36:0> < <loop_1067@34:0>)))))
              begin InterpProver.interpolate_check(17552)[8]
                begin InterpProver.interpolate_simplify(17553)[9]
                  begin InterpProver.interpolate_quick(17688)[10]
                    begin CsisatInterface.interpolate_csisat_wrap(17697)[11]
                      begin CsisatInterface.interpolate_csisat_post_process(17698)[12]
                        begin CsisatInterface.interpolate_csisat_log(17699)[13]
                          input1: (0 = v_sep_loop_1067_sep_34_sep_1 & v_sep_loop_1067_sep_34_sep_1 = v_sep_loop_1067_sep_34_sep_2_sep_36_sep_0 & 1 <= v_sep_loop_1067_sep_34_sep_0)
                          input2: (0 = v_sep_loop_1067_sep_34_sep_1 & 0 <= v_sep_loop_1067_sep_34_sep_2_sep_36_sep_0 & 1 <= v_sep_loop_1067_sep_34_sep_0 & v_sep_loop_1067_sep_34_sep_0 <= v_sep_loop_1067_sep_34_sep_2_sep_36_sep_0)
                          begin CsisatInterface.interpolate_csisat_raw(17700)[14]
                            
                          end CsisatInterface.interpolate_csisat_raw(17700)[14] (0.000000 sec.)
                          output: (-2*v_sep_loop_1067_sep_34_sep_0 + 2*v_sep_loop_1067_sep_34_sep_2_sep_36_sep_0) <= -2
                          
                        end CsisatInterface.interpolate_csisat_log(17699)[13] (0.000000 sec.)
                        after simplification: (-2*v_sep_loop_1067_sep_34_sep_0 + 2*v_sep_loop_1067_sep_34_sep_2_sep_36_sep_0) <= -2
                        after dnf conversion: (((-2*v_sep_loop_1067_sep_34_sep_0 + 2*v_sep_loop_1067_sep_34_sep_2_sep_36_sep_0) <= -2))
                        
                      end CsisatInterface.interpolate_csisat_post_process(17698)[12] (0.000000 sec.)
                      
                    end CsisatInterface.interpolate_csisat_wrap(17697)[11] (0.000000 sec.)
                    
                  end InterpProver.interpolate_quick(17688)[10] (0.000000 sec.)
                  
                end InterpProver.interpolate_simplify(17553)[9] (0.000999 sec.)
                
              end InterpProver.interpolate_check(17552)[8] (0.001999 sec.)
              output: ((1 + <<loop_1067@34:2>@36:0>) <= <loop_1067@34:0>)
            end InterpProver.interpolate_log(17551)[7] (0.001999 sec.)
            
          end InterpProver.interpolate_fresh(17550)[6] (0.001999 sec.)
          
        end InterpProver.interpolate(17549)[5] (0.001999 sec.)
        output:
          P[<<loop_1067@34:2>@36:0>](<loop_1067@34:0>:int,<loop_1067@34:1>:int,<<loop_1067@34:2>@36:0>:int) =
          ((1 + <<loop_1067@34:2>@36:0>) <= <loop_1067@34:0>)
      end ApronInterface.convex_hull_interpolate(17548)[4] (0.001999 sec.)
      Horn clauses:
        P[<loop_1067@34:1>](<loop_1067@34:0>:int,<<loop_1067@34:2>@36:0>:int),
        ((1 + <<loop_1067@34:2>@36:0>) > <loop_1067@34:0>) |- bot
        
         ((<loop_1067@34:1> = 0) && (<loop_1067@34:0> > 0))
        |- P[<loop_1067@34:1>](<loop_1067@34:0>:int,<loop_1067@34:1>:int)
      lower bounds:
        P[<loop_1067@34:1>](<loop_1067@34:0>:int,<loop_1067@34:1>:int) =
        ((<loop_1067@34:1> = 0) && (<loop_1067@34:0> > 0))
      upper bounds:
        P[<loop_1067@34:1>](var326:int,var327:int) = ((1 + var327) <= var326)
      begin GenHcSolver.classify_pids(18548)[4]
        output:
          [<loop_1067@34:1>]
      end GenHcSolver.classify_pids(18548)[4] (0.000000 sec.)
      lb:((<loop_1067@34:1> = 0) && (<loop_1067@34:0> > 0))
      nub:(not ((1 + <loop_1067@34:1>) <= <loop_1067@34:0>))
      begin ApronInterface.convex_hull_interpolate(18551)[4]
        lb:((<loop_1067@34:1> = 0) && (<loop_1067@34:0> > 0))
        nub:(not ((1 + <loop_1067@34:1>) <= <loop_1067@34:0>))
        lb':((<loop_1067@34:1> = 0) && (<loop_1067@34:0> > 0))
        nub':(not ((1 + <loop_1067@34:1>) <= <loop_1067@34:0>))
        begin InterpProver.interpolate(18552)[5]
          begin InterpProver.interpolate_fresh(18553)[6]
            begin InterpProver.interpolate_log(18554)[7]
              input1: ((<loop_1067@34:1> = 0) && (<loop_1067@34:0> > 0))
              input2: (not ((1 + <loop_1067@34:1>) <= <loop_1067@34:0>))
              begin InterpProver.interpolate_check(18555)[8]
                begin InterpProver.interpolate_simplify(18556)[9]
                  begin InterpProver.interpolate_quick(18589)[10]
                    begin CsisatInterface.interpolate_csisat_wrap(18598)[11]
                      begin CsisatInterface.interpolate_csisat_post_process(18599)[12]
                        begin CsisatInterface.interpolate_csisat_log(18600)[13]
                          input1: (0 = v_sep_loop_1067_sep_34_sep_1 & 1 <= v_sep_loop_1067_sep_34_sep_0)
                          input2: (1 + v_sep_loop_1067_sep_34_sep_0) <= (1 + v_sep_loop_1067_sep_34_sep_1)
                          begin CsisatInterface.interpolate_csisat_raw(18601)[14]
                            
                          end CsisatInterface.interpolate_csisat_raw(18601)[14] (0.000000 sec.)
                          output: (-2*v_sep_loop_1067_sep_34_sep_0 + 2*v_sep_loop_1067_sep_34_sep_1) <= -2
                          
                        end CsisatInterface.interpolate_csisat_log(18600)[13] (0.000000 sec.)
                        after simplification: (-2*v_sep_loop_1067_sep_34_sep_0 + 2*v_sep_loop_1067_sep_34_sep_1) <= -2
                        after dnf conversion: (((-2*v_sep_loop_1067_sep_34_sep_0 + 2*v_sep_loop_1067_sep_34_sep_1) <= -2))
                        
                      end CsisatInterface.interpolate_csisat_post_process(18599)[12] (0.000000 sec.)
                      
                    end CsisatInterface.interpolate_csisat_wrap(18598)[11] (0.000000 sec.)
                    
                  end InterpProver.interpolate_quick(18589)[10] (0.001000 sec.)
                  
                end InterpProver.interpolate_simplify(18556)[9] (0.001000 sec.)
                
              end InterpProver.interpolate_check(18555)[8] (0.001000 sec.)
              output: ((1 + <loop_1067@34:1>) <= <loop_1067@34:0>)
            end InterpProver.interpolate_log(18554)[7] (0.001000 sec.)
            
          end InterpProver.interpolate_fresh(18553)[6] (0.001000 sec.)
          
        end InterpProver.interpolate(18552)[5] (0.001000 sec.)
        output:
          P[<loop_1067@34:1>](<loop_1067@34:0>:int,<loop_1067@34:1>:int) = ((1 + <loop_1067@34:1>) <= <loop_1067@34:0>)
      end ApronInterface.convex_hull_interpolate(18551)[4] (0.001000 sec.)
      begin HcSolver.check_validity(18803)[4]
        input:
          P[<fail_2362@44:0>](<fail_2362@44:0>:bool)|- bot
          
          P[<<loop_1067@34:2>@36:0>](<k_make_array_u_1392@41:1>:int,0:int,<k_make_array_u_1392@41:0>:int),
          ((<k_make_array_u_1392@41:0> >= <k_make_array_u_1392@41:1>) &&
           ((<k_make_array_u_1392@41:1> > 0) && ((0 <= <k_make_array_u_1392@41:0>) && <fail_2362@44:0>)))
          |- P[<fail_2362@44:0>](<fail_2362@44:0>:bool)
          
          P[<loop_1067@34:1>](<loop_1067@34:0>:int,<loop_1067@34:1>:int), (
          <<loop_1067@34:2>@36:0> = <loop_1067@34:1>)
          |- P[<<loop_1067@34:2>@36:0>](<loop_1067@34:0>:int,<loop_1067@34:1>:int,
                                        <<loop_1067@34:2>@36:0>:int)
          
           ((<loop_1067@34:1> = 0) && (<loop_1067@34:0> > 0))
          |- P[<loop_1067@34:1>](<loop_1067@34:0>:int,<loop_1067@34:1>:int)
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        
      end HcSolver.check_validity(18803)[4] (0.002000 sec.)
      solution:
        P[<fail_2362@44:0>](<fail_2362@44:0>:bool) = false
        P[<<loop_1067@34:2>@36:0>](<loop_1067@34:0>:int,<loop_1067@34:1>:int,<<loop_1067@34:2>@36:0>:int) =
        ((1 + <<loop_1067@34:2>@36:0>) <= <loop_1067@34:0>)
        P[<loop_1067@34:1>](<loop_1067@34:0>:int,<loop_1067@34:1>:int) = ((1 + <loop_1067@34:1>) <= <loop_1067@34:0>)
    end GenHcSolver.solve(14029)[3] (0.029996 sec.)
    begin GenHcSolver.solve(19216)[3]
      Horn clauses:
        P[<fail_2362@44:0>](<fail_2362@44:0>:bool)|- bot
        
        P[<<loop_1067@34:2>@36:0>](<k_make_array_u_1392@41:1>:int,0:int,<k_make_array_u_1392@41:0>:int),
        ((<k_make_array_u_1392@41:0> >= <k_make_array_u_1392@41:1>) &&
         ((<k_make_array_u_1392@41:1> > 0) && ((0 <= <k_make_array_u_1392@41:0>) && <fail_2362@44:0>)))
        |- P[<fail_2362@44:0>](<fail_2362@44:0>:bool)
        
        P[<loop_1067@34:1>](<loop_1067@34:0>:int,<loop_1067@34:1>:int), (
        <<loop_1067@34:2>@36:0> = <loop_1067@34:1>)
        |- P[<<loop_1067@34:2>@36:0>](<loop_1067@34:0>:int,<loop_1067@34:1>:int,
                                      <<loop_1067@34:2>@36:0>:int)
        
         ((<loop_1067@34:1> = 0) && (<loop_1067@34:0> > 0))
        |- P[<loop_1067@34:1>](<loop_1067@34:0>:int,<loop_1067@34:1>:int)
      lower bounds:
        P[<loop_1067@34:1>](<loop_1067@34:0>:int,<loop_1067@34:1>:int) =
        ((<loop_1067@34:1> = 0) && (<loop_1067@34:0> > 0))
        P[<<loop_1067@34:2>@36:0>](<loop_1067@34:0>:int,<loop_1067@34:1>:int,<<loop_1067@34:2>@36:0>:int) =
        ((<loop_1067@34:1> = 0) && ((<loop_1067@34:0> > 0) && (<<loop_1067@34:2>@36:0> = <loop_1067@34:1>)))
        P[<fail_2362@44:0>](<fail_2362@44:0>:bool) = false
      upper bounds:
        P[<fail_2362@44:0>](var329:bool) = true
      begin GenHcSolver.classify_pids(20634)[4]
        output:
          [<fail_2362@44:0>]
      end GenHcSolver.classify_pids(20634)[4] (0.000000 sec.)
      lb:false
      nub:false
      begin ApronInterface.convex_hull_interpolate(20637)[4]
        lb:false
        nub:false
        begin ExtFormula.Formula.case_analysis_boolean(20640)[5]
          ts: false
          
        end ExtFormula.Formula.case_analysis_boolean(20640)[5] (0.000000 sec.)
        begin ExtFormula.Formula.case_analysis_boolean(20645)[5]
          ts: false
          
        end ExtFormula.Formula.case_analysis_boolean(20645)[5] (0.000000 sec.)
        lb':(-1 >= 0)
        nub':(-1 >= 0)
        begin InterpProver.interpolate(20648)[5]
          begin InterpProver.interpolate_fresh(20649)[6]
            begin InterpProver.interpolate_log(20650)[7]
              input1: (-1 >= 0)
              input2: (-1 >= 0)
              begin InterpProver.interpolate_check(20651)[8]
                begin InterpProver.interpolate_simplify(20652)[9]
                  begin InterpProver.interpolate_quick(20667)[10]
                    
                  end InterpProver.interpolate_quick(20667)[10] (0.000000 sec.)
                  begin minimizing # of disjunctions(20671)[10]
                    input: false
                    output: false
                  end minimizing # of disjunctions(20671)[10] (0.000000 sec.)
                  
                end InterpProver.interpolate_simplify(20652)[9] (0.000000 sec.)
                
              end InterpProver.interpolate_check(20651)[8] (0.001000 sec.)
              output: false
            end InterpProver.interpolate_log(20650)[7] (0.001000 sec.)
            
          end InterpProver.interpolate_fresh(20649)[6] (0.001000 sec.)
          
        end InterpProver.interpolate(20648)[5] (0.001000 sec.)
        output:
          P[<fail_2362@44:0>](<fail_2362@44:0>:bool) = false
      end ApronInterface.convex_hull_interpolate(20637)[4] (0.001000 sec.)
      Horn clauses:
        P[<<loop_1067@34:2>@36:0>](<k_make_array_u_1392@41:1>:int,0:int,<k_make_array_u_1392@41:0>:int),
        ((0 <= <k_make_array_u_1392@41:0>) &&
         ((<k_make_array_u_1392@41:1> > 0) && (<k_make_array_u_1392@41:0> >= <k_make_array_u_1392@41:1>))) |- bot
        
        P[<loop_1067@34:1>](<loop_1067@34:0>:int,<loop_1067@34:1>:int), (
        <<loop_1067@34:2>@36:0> = <loop_1067@34:1>)
        |- P[<<loop_1067@34:2>@36:0>](<loop_1067@34:0>:int,<loop_1067@34:1>:int,
                                      <<loop_1067@34:2>@36:0>:int)
        
         ((<loop_1067@34:1> = 0) && (<loop_1067@34:0> > 0))
        |- P[<loop_1067@34:1>](<loop_1067@34:0>:int,<loop_1067@34:1>:int)
      lower bounds:
        P[<loop_1067@34:1>](<loop_1067@34:0>:int,<loop_1067@34:1>:int) =
        ((<loop_1067@34:1> = 0) && (<loop_1067@34:0> > 0))
        P[<<loop_1067@34:2>@36:0>](<loop_1067@34:0>:int,<loop_1067@34:1>:int,<<loop_1067@34:2>@36:0>:int) =
        ((<loop_1067@34:1> = 0) && ((<loop_1067@34:0> > 0) && (<<loop_1067@34:2>@36:0> = <loop_1067@34:1>)))
      upper bounds:
        P[<<loop_1067@34:2>@36:0>](var330:int,var331:int,var332:int) =
        ((var331 <> 0) || ((0 > var332) || ((var330 <= 0) || (var332 < var330))))
      begin GenHcSolver.classify_pids(22751)[4]
        output:
          [<<loop_1067@34:2>@36:0>]
      end GenHcSolver.classify_pids(22751)[4] (0.000000 sec.)
      lb:((<loop_1067@34:1> = 0) && ((<loop_1067@34:0> > 0) && (<<loop_1067@34:2>@36:0> = <loop_1067@34:1>)))
      nub:(not
             ((<loop_1067@34:1> <> 0) ||
              ((0 > <<loop_1067@34:2>@36:0>) ||
               ((<loop_1067@34:0> <= 0) || (<<loop_1067@34:2>@36:0> < <loop_1067@34:0>)))))
      begin ApronInterface.convex_hull_interpolate(22754)[4]
        lb:((<loop_1067@34:1> = 0) && ((<loop_1067@34:0> > 0) && (<<loop_1067@34:2>@36:0> = <loop_1067@34:1>)))
        nub:(not
               ((<loop_1067@34:1> <> 0) ||
                ((0 > <<loop_1067@34:2>@36:0>) ||
                 ((<loop_1067@34:0> <= 0) || (<<loop_1067@34:2>@36:0> < <loop_1067@34:0>)))))
        begin ExtFormula.Formula.case_analysis_boolean(22779)[5]
          ts: ((<loop_1067@34:1> = 0) && ((<loop_1067@34:0> > 0) && (<<loop_1067@34:2>@36:0> = <loop_1067@34:1>)))
          
        end ExtFormula.Formula.case_analysis_boolean(22779)[5] (0.000000 sec.)
        begin ExtFormula.Formula.case_analysis_boolean(22827)[5]
          ts: ((<loop_1067@34:1> = 0) &&
               ((0 <= <<loop_1067@34:2>@36:0>) &&
                ((<loop_1067@34:0> > 0) && (<<loop_1067@34:2>@36:0> >= <loop_1067@34:0>))))
          
        end ExtFormula.Formula.case_analysis_boolean(22827)[5] (0.001000 sec.)
        lb':((<<loop_1067@34:2>@36:0> = 0) && ((<loop_1067@34:1> = 0) && ((-1 + <loop_1067@34:0>) >= 0)))
        nub':((<loop_1067@34:1> = 0) &&
              (((<<loop_1067@34:2>@36:0> + (-1 * <loop_1067@34:0>)) >= 0) && ((-1 + <loop_1067@34:0>) >= 0)))
        begin InterpProver.interpolate(22835)[5]
          begin InterpProver.interpolate_fresh(22836)[6]
            begin InterpProver.interpolate_log(22837)[7]
              input1: ((<<loop_1067@34:2>@36:0> = 0) && ((<loop_1067@34:1> = 0) && ((-1 + <loop_1067@34:0>) >= 0)))
              input2: ((<loop_1067@34:1> = 0) &&
                       (((<<loop_1067@34:2>@36:0> + (-1 * <loop_1067@34:0>)) >= 0) && ((-1 + <loop_1067@34:0>) >= 0)))
              begin InterpProver.interpolate_check(22838)[8]
                begin InterpProver.interpolate_simplify(22839)[9]
                  begin InterpProver.interpolate_quick(22946)[10]
                    begin CsisatInterface.interpolate_csisat_wrap(22955)[11]
                      begin CsisatInterface.interpolate_csisat_post_process(22956)[12]
                        begin CsisatInterface.interpolate_csisat_log(22957)[13]
                          input1: (0 = v_sep_loop_1067_sep_34_sep_1 & 0 = v_sep_loop_1067_sep_34_sep_2_sep_36_sep_0 & 1 <= v_sep_loop_1067_sep_34_sep_0)
                          input2: (0 = v_sep_loop_1067_sep_34_sep_1 & 1 <= v_sep_loop_1067_sep_34_sep_0 & v_sep_loop_1067_sep_34_sep_0 <= v_sep_loop_1067_sep_34_sep_2_sep_36_sep_0)
                          begin CsisatInterface.interpolate_csisat_raw(22958)[14]
                            
                          end CsisatInterface.interpolate_csisat_raw(22958)[14] (0.000000 sec.)
                          output: (-2*v_sep_loop_1067_sep_34_sep_0 + 2*v_sep_loop_1067_sep_34_sep_2_sep_36_sep_0) <= -2
                          
                        end CsisatInterface.interpolate_csisat_log(22957)[13] (0.001000 sec.)
                        after simplification: (-2*v_sep_loop_1067_sep_34_sep_0 + 2*v_sep_loop_1067_sep_34_sep_2_sep_36_sep_0) <= -2
                        after dnf conversion: (((-2*v_sep_loop_1067_sep_34_sep_0 + 2*v_sep_loop_1067_sep_34_sep_2_sep_36_sep_0) <= -2))
                        
                      end CsisatInterface.interpolate_csisat_post_process(22956)[12] (0.001000 sec.)
                      
                    end CsisatInterface.interpolate_csisat_wrap(22955)[11] (0.001000 sec.)
                    
                  end InterpProver.interpolate_quick(22946)[10] (0.002000 sec.)
                  
                end InterpProver.interpolate_simplify(22839)[9] (0.002999 sec.)
                
              end InterpProver.interpolate_check(22838)[8] (0.002999 sec.)
              output: ((1 + <<loop_1067@34:2>@36:0>) <= <loop_1067@34:0>)
            end InterpProver.interpolate_log(22837)[7] (0.002999 sec.)
            
          end InterpProver.interpolate_fresh(22836)[6] (0.002999 sec.)
          
        end InterpProver.interpolate(22835)[5] (0.002999 sec.)
        output:
          P[<<loop_1067@34:2>@36:0>](<loop_1067@34:0>:int,<loop_1067@34:1>:int,<<loop_1067@34:2>@36:0>:int) =
          ((1 + <<loop_1067@34:2>@36:0>) <= <loop_1067@34:0>)
      end ApronInterface.convex_hull_interpolate(22754)[4] (0.003999 sec.)
      Horn clauses:
        P[<loop_1067@34:1>](<loop_1067@34:0>:int,<<loop_1067@34:2>@36:0>:int),
        ((1 + <<loop_1067@34:2>@36:0>) > <loop_1067@34:0>) |- bot
        
         ((<loop_1067@34:1> = 0) && (<loop_1067@34:0> > 0))
        |- P[<loop_1067@34:1>](<loop_1067@34:0>:int,<loop_1067@34:1>:int)
      lower bounds:
        P[<loop_1067@34:1>](<loop_1067@34:0>:int,<loop_1067@34:1>:int) =
        ((<loop_1067@34:1> = 0) && (<loop_1067@34:0> > 0))
      upper bounds:
        P[<loop_1067@34:1>](var333:int,var334:int) = ((1 + var334) <= var333)
      begin GenHcSolver.classify_pids(23802)[4]
        output:
          [<loop_1067@34:1>]
      end GenHcSolver.classify_pids(23802)[4] (0.000000 sec.)
      lb:((<loop_1067@34:1> = 0) && (<loop_1067@34:0> > 0))
      nub:(not ((1 + <loop_1067@34:1>) <= <loop_1067@34:0>))
      begin ApronInterface.convex_hull_interpolate(23805)[4]
        lb:((<loop_1067@34:1> = 0) && (<loop_1067@34:0> > 0))
        nub:(not ((1 + <loop_1067@34:1>) <= <loop_1067@34:0>))
        begin ExtFormula.Formula.case_analysis_boolean(23815)[5]
          ts: ((<loop_1067@34:1> = 0) && (<loop_1067@34:0> > 0))
          
        end ExtFormula.Formula.case_analysis_boolean(23815)[5] (0.000000 sec.)
        begin ExtFormula.Formula.case_analysis_boolean(23825)[5]
          ts: ((1 + <loop_1067@34:1>) > <loop_1067@34:0>)
          
        end ExtFormula.Formula.case_analysis_boolean(23825)[5] (0.000000 sec.)
        lb':((<loop_1067@34:1> = 0) && ((-1 + <loop_1067@34:0>) >= 0))
        nub':((<loop_1067@34:1> + (-1 * <loop_1067@34:0>)) >= 0)
        begin InterpProver.interpolate(23831)[5]
          begin InterpProver.interpolate_fresh(23832)[6]
            begin InterpProver.interpolate_log(23833)[7]
              input1: ((<loop_1067@34:1> = 0) && ((-1 + <loop_1067@34:0>) >= 0))
              input2: ((<loop_1067@34:1> + (-1 * <loop_1067@34:0>)) >= 0)
              begin InterpProver.interpolate_check(23834)[8]
                begin InterpProver.interpolate_simplify(23835)[9]
                  begin InterpProver.interpolate_quick(23872)[10]
                    begin CsisatInterface.interpolate_csisat_wrap(23881)[11]
                      begin CsisatInterface.interpolate_csisat_post_process(23882)[12]
                        begin CsisatInterface.interpolate_csisat_log(23883)[13]
                          input1: (0 = v_sep_loop_1067_sep_34_sep_1 & 1 <= v_sep_loop_1067_sep_34_sep_0)
                          input2: v_sep_loop_1067_sep_34_sep_0 <= v_sep_loop_1067_sep_34_sep_1
                          begin CsisatInterface.interpolate_csisat_raw(23884)[14]
                            
                          end CsisatInterface.interpolate_csisat_raw(23884)[14] (0.000000 sec.)
                          output: (-2*v_sep_loop_1067_sep_34_sep_0 + 2*v_sep_loop_1067_sep_34_sep_1) <= -2
                          
                        end CsisatInterface.interpolate_csisat_log(23883)[13] (0.001000 sec.)
                        after simplification: (-2*v_sep_loop_1067_sep_34_sep_0 + 2*v_sep_loop_1067_sep_34_sep_1) <= -2
                        after dnf conversion: (((-2*v_sep_loop_1067_sep_34_sep_0 + 2*v_sep_loop_1067_sep_34_sep_1) <= -2))
                        
                      end CsisatInterface.interpolate_csisat_post_process(23882)[12] (0.001000 sec.)
                      
                    end CsisatInterface.interpolate_csisat_wrap(23881)[11] (0.001000 sec.)
                    
                  end InterpProver.interpolate_quick(23872)[10] (0.002000 sec.)
                  
                end InterpProver.interpolate_simplify(23835)[9] (0.002000 sec.)
                
              end InterpProver.interpolate_check(23834)[8] (0.002000 sec.)
              output: ((1 + <loop_1067@34:1>) <= <loop_1067@34:0>)
            end InterpProver.interpolate_log(23833)[7] (0.002000 sec.)
            
          end InterpProver.interpolate_fresh(23832)[6] (0.002000 sec.)
          
        end InterpProver.interpolate(23831)[5] (0.002000 sec.)
        output:
          P[<loop_1067@34:1>](<loop_1067@34:0>:int,<loop_1067@34:1>:int) = ((1 + <loop_1067@34:1>) <= <loop_1067@34:0>)
      end ApronInterface.convex_hull_interpolate(23805)[4] (0.002000 sec.)
      begin HcSolver.check_validity(24093)[4]
        input:
          P[<fail_2362@44:0>](<fail_2362@44:0>:bool)|- bot
          
          P[<<loop_1067@34:2>@36:0>](<k_make_array_u_1392@41:1>:int,0:int,<k_make_array_u_1392@41:0>:int),
          ((<k_make_array_u_1392@41:0> >= <k_make_array_u_1392@41:1>) &&
           ((<k_make_array_u_1392@41:1> > 0) && ((0 <= <k_make_array_u_1392@41:0>) && <fail_2362@44:0>)))
          |- P[<fail_2362@44:0>](<fail_2362@44:0>:bool)
          
          P[<loop_1067@34:1>](<loop_1067@34:0>:int,<loop_1067@34:1>:int), (
          <<loop_1067@34:2>@36:0> = <loop_1067@34:1>)
          |- P[<<loop_1067@34:2>@36:0>](<loop_1067@34:0>:int,<loop_1067@34:1>:int,
                                        <<loop_1067@34:2>@36:0>:int)
          
           ((<loop_1067@34:1> = 0) && (<loop_1067@34:0> > 0))
          |- P[<loop_1067@34:1>](<loop_1067@34:0>:int,<loop_1067@34:1>:int)
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        
      end HcSolver.check_validity(24093)[4] (0.002000 sec.)
      solution:
        P[<fail_2362@44:0>](<fail_2362@44:0>:bool) = false
        P[<<loop_1067@34:2>@36:0>](<loop_1067@34:0>:int,<loop_1067@34:1>:int,<<loop_1067@34:2>@36:0>:int) =
        ((1 + <<loop_1067@34:2>@36:0>) <= <loop_1067@34:0>)
        P[<loop_1067@34:1>](<loop_1067@34:0>:int,<loop_1067@34:1>:int) = ((1 + <loop_1067@34:1>) <= <loop_1067@34:0>)
    end GenHcSolver.solve(19216)[3] (0.039994 sec.)
    begin YhornInterface.solve(24506)[3]
      begin HcSolver.solve_ub(24507)[4]
        encoded:
          P[<fail_2362@44:0>](<fail_2362@44:0>:int)|- bot
          
          P[<<loop_1067@34:2>@36:0>](<k_make_array_u_1392@41:1>:int,0:int,<k_make_array_u_1392@41:0>:int),
          ((<k_make_array_u_1392@41:0> >= <k_make_array_u_1392@41:1>) &&
           ((<k_make_array_u_1392@41:1> > 0) && ((0 <= <k_make_array_u_1392@41:0>) && (<fail_2362@44:0> = 1))))
          |- P[<fail_2362@44:0>](<fail_2362@44:0>:int)
          
          P[<loop_1067@34:1>](<loop_1067@34:0>:int,<loop_1067@34:1>:int), (
          <<loop_1067@34:2>@36:0> = <loop_1067@34:1>)
          |- P[<<loop_1067@34:2>@36:0>](<loop_1067@34:0>:int,<loop_1067@34:1>:int,
                                        <<loop_1067@34:2>@36:0>:int)
          
           ((<loop_1067@34:1> = 0) && (<loop_1067@34:0> > 0))
          |- P[<loop_1067@34:1>](<loop_1067@34:0>:int,<loop_1067@34:1>:int)
        input to Yhorn:
          P[<fail_2362@44:0>](<fail_2362@44:0>:int)|- bot
          
          P[<<loop_1067@34:2>@36:0>](<k_make_array_u_1392@41:1>:int,var335:int,<k_make_array_u_1392@41:0>:int),
          ((0 <= <k_make_array_u_1392@41:0>) &&
           ((<k_make_array_u_1392@41:1> > 0) &&
            ((<k_make_array_u_1392@41:0> >= <k_make_array_u_1392@41:1>) && ((var335 = 0) && (<fail_2362@44:0> = 1)))))
          |- P[<fail_2362@44:0>](<fail_2362@44:0>:int)
          
          P[<loop_1067@34:1>](<loop_1067@34:0>:int,<loop_1067@34:1>:int), (
          <<loop_1067@34:2>@36:0> = <loop_1067@34:1>)
          |- P[<<loop_1067@34:2>@36:0>](<loop_1067@34:0>:int,<loop_1067@34:1>:int,
                                        <<loop_1067@34:2>@36:0>:int)
          
           ((<loop_1067@34:0> > 0) && (<loop_1067@34:1> = 0))
          |- P[<loop_1067@34:1>](<loop_1067@34:0>:int,<loop_1067@34:1>:int)Yhorn (Wed Sep 25 10:52:05 JST 2013)


(0=0) & (v_sep_fail_2362_sep_44_sep_0($84)) -> 1=0.
(($84-1=0) & ($85=0) & ($86-$87>=0) & ($87>0) & (-$86<=0)) & (v_sep_loop_1067_sep_34_sep_2_sep_36_sep_0($87,$85,$86)) -> v_sep_fail_2362_sep_44_sep_0($84).
($88-$89=0) & (v_sep_loop_1067_sep_34_sep_1($90,$89)) -> v_sep_loop_1067_sep_34_sep_2_sep_36_sep_0($90,$89,$88).
($89=0) & ($90>0) -> v_sep_loop_1067_sep_34_sep_1($90,$89).


v_sep_fail_2362_sep_44_sep_0: X
v_sep_loop_1067_sep_34_sep_1: X
v_sep_loop_1067_sep_34_sep_2_sep_36_sep_0: X
....
v_sep_fail_2362_sep_44_sep_0: X
v_sep_loop_1067_sep_34_sep_1: X
v_sep_loop_1067_sep_34_sep_2_sep_36_sep_0: X
...
v_sep_fail_2362_sep_44_sep_0: X
v_sep_loop_1067_sep_34_sep_1: X
v_sep_loop_1067_sep_34_sep_2_sep_36_sep_0: X
....
v_sep_fail_2362_sep_44_sep_0: X
v_sep_loop_1067_sep_34_sep_1: X
v_sep_loop_1067_sep_34_sep_2_sep_36_sep_0: X
....(0=0) & (v_sep_fail_2362_sep_44_sep_0($84)) -> 1=0.
(($84-1=0) & ($85=0) & ($86-$87>=0) & ($87>0) & (-$86<=0)) & (v_sep_loop_1067_sep_34_sep_2_sep_36_sep_0($87,$85,$86)) -> v_sep_fail_2362_sep_44_sep_0($84).
($88-$89=0) & (v_sep_loop_1067_sep_34_sep_1($90,$89)) -> v_sep_loop_1067_sep_34_sep_2_sep_36_sep_0($90,$89,$88).
($89=0) & ($90>0) -> v_sep_loop_1067_sep_34_sep_1($90,$89).

        solution:
          P[<fail_2362@44:0>]($91:bool) = false
          P[<loop_1067@34:1>]($101:int,$103:int) = ((1 + $103) <= $101)
          P[<<loop_1067@34:2>@36:0>]($94:int,$96:int,$98:int) = ((1 + $98) <= $94)
        
      end HcSolver.solve_ub(24507)[4] (0.011998 sec.)
      begin HcSolver.check_validity(24729)[4]
        input:
          P[<fail_2362@44:0>](<fail_2362@44:0>:bool)|- bot
          
          P[<<loop_1067@34:2>@36:0>](<k_make_array_u_1392@41:1>:int,0:int,<k_make_array_u_1392@41:0>:int),
          ((<k_make_array_u_1392@41:0> >= <k_make_array_u_1392@41:1>) &&
           ((<k_make_array_u_1392@41:1> > 0) && ((0 <= <k_make_array_u_1392@41:0>) && <fail_2362@44:0>)))
          |- P[<fail_2362@44:0>](<fail_2362@44:0>:bool)
          
          P[<loop_1067@34:1>](<loop_1067@34:0>:int,<loop_1067@34:1>:int), (
          <<loop_1067@34:2>@36:0> = <loop_1067@34:1>)
          |- P[<<loop_1067@34:2>@36:0>](<loop_1067@34:0>:int,<loop_1067@34:1>:int,
                                        <<loop_1067@34:2>@36:0>:int)
          
           ((<loop_1067@34:1> = 0) && (<loop_1067@34:0> > 0))
          |- P[<loop_1067@34:1>](<loop_1067@34:0>:int,<loop_1067@34:1>:int)
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        
      end HcSolver.check_validity(24729)[4] (0.003000 sec.)
      solution:
        P[<fail_2362@44:0>]($91:bool) = false
        P[<loop_1067@34:1>]($101:int,$103:int) = ((1 + $103) <= $101)
        P[<<loop_1067@34:2>@36:0>]($94:int,$96:int,$98:int) = ((1 + $98) <= $94)
    end YhornInterface.solve(24506)[3] (0.014998 sec.)
    
  end RefTypeInfer.infer_etrs(12230)[2] (0.383942 sec.)
  refinement types:
    main_2340: X
    f_2358: v1:int -> X
    main_1073: v1:int -> (v2:unit -> X) -> X
    queen_1045: v1:int -> (v2:unit -> X) -> X
    loop_1067: v1:int ->
               v2:{v2:int | ((1 + v2) <= v1)} ->
               (v3:{v3:int | ((1 + v3) <= v1)} -> (v4:int -> X) -> X) -> (v7:unit -> X) -> X
    make_array_1355: v1:int -> v2:int -> v3:int -> (v4:int -> X) -> X
    k_make_array_u_1392: v1:int -> v2:int -> v3:int -> (v4:int -> X) -> v6:bool -> X
    fail_2362: v1:{v1:bool | false} -> (v2:unit -> X) -> X
    a_1039: var361:int ->
            var360:int ->
            var359:int -> var358:int -> (var357:int -> (var356:int -> X) -> X) -> var353:int -> (var352:int -> X) -> X
    abs_1043: var365:int -> (var364:int -> X) -> X
    assign_1348: var378:int ->
                 var377:int ->
                 var376:int ->
                 (var375:int -> (var374:int -> X) -> X) -> ((var371:int -> (var370:int -> X) -> X) -> X) -> X
    aux_1056: var387:int -> var386:int -> (var385:int -> (var384:int -> X) -> X) -> (var381:unit -> X) -> X
    aux_1064: var398:int ->
              var397:int ->
              var396:int -> (var395:int -> (var394:int -> X) -> X) -> var391:int -> (var390:bool -> X) -> X
    br_f_loop_2360: var410:bool ->
                    var409:int ->
                    var408:int ->
                    var407:int -> (var406:unit -> X) -> (var404:int -> (var403:int -> X) -> X) -> var400:bool -> X
    dotsPrint_1052: var415:int -> var414:int -> (var413:unit -> X) -> X
    f_2359: var418:int -> var417:unit -> X
    f_aux_2343: var428:int ->
                var427:int -> (var426:int -> (var425:int -> X) -> X) -> (var422:unit -> X) -> var420:int -> X
    f_aux_2344: var439:int ->
                var438:int ->
                var437:int -> (var436:int -> (var435:int -> X) -> X) -> (var432:unit -> X) -> var430:unit -> X
    f_aux_2345: var451:int ->
                var450:int ->
                var449:int ->
                var448:unit -> (var447:int -> (var446:int -> X) -> X) -> (var443:unit -> X) -> var441:unit -> X
    f_aux_2346: var464:int ->
                var463:int ->
                var462:int ->
                var461:unit ->
                var460:unit -> (var459:int -> (var458:int -> X) -> X) -> (var455:unit -> X) -> var453:unit -> X
    f_aux_2347: var478:int ->
                var477:int ->
                var476:int ->
                var475:unit ->
                var474:unit ->
                var473:unit -> (var472:int -> (var471:int -> X) -> X) -> (var468:unit -> X) -> var466:unit -> X
    f_aux_2350: var490:int ->
                var489:int ->
                var488:int ->
                var487:int -> (var486:int -> (var485:int -> X) -> X) -> (var482:bool -> X) -> var480:int -> X
    f_aux_2351: var503:int ->
                var502:int ->
                var501:int ->
                var500:int ->
                var499:int -> (var498:int -> (var497:int -> X) -> X) -> (var494:bool -> X) -> var492:int -> X
    f_dotsPrint_2342: var509:int -> var508:int -> (var507:unit -> X) -> var505:unit -> X
    f_loop_2352: var519:int ->
                 var518:int -> (var517:int -> (var516:int -> X) -> X) -> (var513:unit -> X) -> var511:int -> X
    f_loop_2353: var529:int ->
                 var528:int -> var527:int -> (var526:unit -> X) -> (var524:int -> (var523:int -> X) -> X) -> X
    f_loop_2354: var539:int ->
                 var538:int -> var537:int -> (var536:unit -> X) -> (var534:int -> (var533:int -> X) -> X) -> X
    f_loop_2355: var550:int ->
                 var549:int ->
                 var548:int -> (var547:unit -> X) -> (var545:int -> (var544:int -> X) -> X) -> var541:bool -> X
    f_loop_2356: var562:bool ->
                 var561:int ->
                 var560:int ->
                 var559:int -> (var558:unit -> X) -> (var556:int -> (var555:int -> X) -> X) -> var552:unit -> X
    f_main_2357: var567:int -> (var566:unit -> X) -> var564:unit -> X
    f_queenPrint_2348: var572:int -> (var571:unit -> X) -> var569:unit -> X
    f_test_2349: var582:int ->
                 var581:int -> (var580:int -> (var579:int -> X) -> X) -> (var576:bool -> X) -> var574:int -> X
    f_update_2341: var596:int ->
                   var595:int ->
                   var594:int ->
                   (var593:int -> (var592:int -> X) -> X) ->
                   ((var589:int -> (var588:int -> X) -> X) -> X) -> var584:int -> X
    k_make_array_u_1403: var603:int -> var602:int -> var601:int -> (var600:int -> X) -> var598:unit -> X
    print_string_1350: var607:unit -> (var606:unit -> X) -> X
    queenPrint_1054: var615:int -> (var614:int -> (var613:int -> X) -> X) -> (var610:unit -> X) -> X
    test_1060: var624:int -> var623:int -> (var622:int -> (var621:int -> X) -> X) -> (var618:bool -> X) -> X
    update_1354: var637:int ->
                 var636:int ->
                 (var635:int -> (var634:int -> X) -> X) ->
                 var631:int -> ((var630:int -> (var629:int -> X) -> X) -> X) -> X
  abstraction types:
    main_2340: X
    f_2358: v1:int -> X
    main_1073: v1:int -> (v2:unit -> X) -> X
    queen_1045: v1:int -> (v2:unit -> X) -> X
    loop_1067: v1:int ->
               v2:int[v2 -> ((1 + v2) <= v1)] ->
               (v3:int[v3 -> ((1 + v3) <= v1)] -> (v4:int -> X) -> X) -> (v7:unit -> X) -> X
    make_array_1355: v1:int -> v2:int -> v3:int -> (v4:int -> X) -> X
    k_make_array_u_1392: v1:int -> v2:int -> v3:int -> (v4:int -> X) -> v6:bool -> X
    fail_2362: v1:bool -> (v2:unit -> X) -> X
    a_1039: var361:int ->
            var360:int ->
            var359:int -> var358:int -> (var357:int -> (var356:int -> X) -> X) -> var353:int -> (var352:int -> X) -> X
    abs_1043: var365:int -> (var364:int -> X) -> X
    assign_1348: var378:int ->
                 var377:int ->
                 var376:int ->
                 (var375:int -> (var374:int -> X) -> X) -> ((var371:int -> (var370:int -> X) -> X) -> X) -> X
    aux_1056: var387:int -> var386:int -> (var385:int -> (var384:int -> X) -> X) -> (var381:unit -> X) -> X
    aux_1064: var398:int ->
              var397:int ->
              var396:int -> (var395:int -> (var394:int -> X) -> X) -> var391:int -> (var390:bool -> X) -> X
    br_f_loop_2360: var410:bool ->
                    var409:int ->
                    var408:int ->
                    var407:int -> (var406:unit -> X) -> (var404:int -> (var403:int -> X) -> X) -> var400:bool -> X
    dotsPrint_1052: var415:int -> var414:int -> (var413:unit -> X) -> X
    f_2359: var418:int -> var417:unit -> X
    f_aux_2343: var428:int ->
                var427:int -> (var426:int -> (var425:int -> X) -> X) -> (var422:unit -> X) -> var420:int -> X
    f_aux_2344: var439:int ->
                var438:int ->
                var437:int -> (var436:int -> (var435:int -> X) -> X) -> (var432:unit -> X) -> var430:unit -> X
    f_aux_2345: var451:int ->
                var450:int ->
                var449:int ->
                var448:unit -> (var447:int -> (var446:int -> X) -> X) -> (var443:unit -> X) -> var441:unit -> X
    f_aux_2346: var464:int ->
                var463:int ->
                var462:int ->
                var461:unit ->
                var460:unit -> (var459:int -> (var458:int -> X) -> X) -> (var455:unit -> X) -> var453:unit -> X
    f_aux_2347: var478:int ->
                var477:int ->
                var476:int ->
                var475:unit ->
                var474:unit ->
                var473:unit -> (var472:int -> (var471:int -> X) -> X) -> (var468:unit -> X) -> var466:unit -> X
    f_aux_2350: var490:int ->
                var489:int ->
                var488:int ->
                var487:int -> (var486:int -> (var485:int -> X) -> X) -> (var482:bool -> X) -> var480:int -> X
    f_aux_2351: var503:int ->
                var502:int ->
                var501:int ->
                var500:int ->
                var499:int -> (var498:int -> (var497:int -> X) -> X) -> (var494:bool -> X) -> var492:int -> X
    f_dotsPrint_2342: var509:int -> var508:int -> (var507:unit -> X) -> var505:unit -> X
    f_loop_2352: var519:int ->
                 var518:int -> (var517:int -> (var516:int -> X) -> X) -> (var513:unit -> X) -> var511:int -> X
    f_loop_2353: var529:int ->
                 var528:int -> var527:int -> (var526:unit -> X) -> (var524:int -> (var523:int -> X) -> X) -> X
    f_loop_2354: var539:int ->
                 var538:int -> var537:int -> (var536:unit -> X) -> (var534:int -> (var533:int -> X) -> X) -> X
    f_loop_2355: var550:int ->
                 var549:int ->
                 var548:int -> (var547:unit -> X) -> (var545:int -> (var544:int -> X) -> X) -> var541:bool -> X
    f_loop_2356: var562:bool ->
                 var561:int ->
                 var560:int ->
                 var559:int -> (var558:unit -> X) -> (var556:int -> (var555:int -> X) -> X) -> var552:unit -> X
    f_main_2357: var567:int -> (var566:unit -> X) -> var564:unit -> X
    f_queenPrint_2348: var572:int -> (var571:unit -> X) -> var569:unit -> X
    f_test_2349: var582:int ->
                 var581:int -> (var580:int -> (var579:int -> X) -> X) -> (var576:bool -> X) -> var574:int -> X
    f_update_2341: var596:int ->
                   var595:int ->
                   var594:int ->
                   (var593:int -> (var592:int -> X) -> X) ->
                   ((var589:int -> (var588:int -> X) -> X) -> X) -> var584:int -> X
    k_make_array_u_1403: var603:int -> var602:int -> var601:int -> (var600:int -> X) -> var598:unit -> X
    print_string_1350: var607:unit -> (var606:unit -> X) -> X
    queenPrint_1054: var615:int -> (var614:int -> (var613:int -> X) -> X) -> (var610:unit -> X) -> X
    test_1060: var624:int -> var623:int -> (var622:int -> (var621:int -> X) -> X) -> (var618:bool -> X) -> X
    update_1354: var637:int ->
                 var636:int ->
                 (var635:int -> (var634:int -> X) -> X) ->
                 var631:int -> ((var630:int -> (var629:int -> X) -> X) -> X) -> X
  
end AbsTypeInfer.refine(12229)[1] (0.393941 sec.)
DONE!

Prefix of spurious counter-example::
0; 0; 0; 0; 0; 0; 1

Program with abstraction types (CEGAR-cycle 2)::
Main: main_2340
  main_2340 -> (rand_int f_2358)
  a_1039 i_1035 n_1036 x_1038 x_1457 a_1037 j_1040 k_update_a_1472 when (i_1035 = j_1040) -> (k_update_a_1472 x_1038)
  a_1039 i_1035 n_1036 x_1038 x_1457 a_1037 j_1040 k_update_a_1472 when (
      not (i_1035 = j_1040)) -> (a_1037 j_1040 k_update_a_1472)
  abs_1043 x_1044 k_abs_1517 when (x_1044 < 0) -> (k_abs_1517 (0 - x_1044))
  abs_1043 x_1044 k_abs_1517 when (not (x_1044 < 0)) -> (k_abs_1517 x_1044)
  assign_1348 size_1046 i_1049 j_1050 a_1051 k_queen_assign_1596 ->
      (update_1354 i_1049 size_1046 a_1051 j_1050 k_queen_assign_1596)
  aux_1056 size_1046 row_1057 a_1058 k_queen_queenPrint_aux_1720 when (
      row_1057 >= size_1046) -> (k_queen_queenPrint_aux_1720 ())
  aux_1056 size_1046 row_1057 a_1058 k_queen_queenPrint_aux_1720 when (
      not (row_1057 >= size_1046)) ->
      (a_1058 row_1057 (f_aux_2343 row_1057 size_1046 a_1058 k_queen_queenPrint_aux_1720))
  aux_1064 j_1061 size_1046 x_1880 a_1062 i_1065 k_queen_test_aux_1904 when (
      i_1065 < j_1061) -> (a_1062 i_1065 (f_aux_2350 i_1065 j_1061 size_1046 x_1880 a_1062 k_queen_test_aux_1904))
  aux_1064 j_1061 size_1046 x_1880 a_1062 i_1065 k_queen_test_aux_1904 when (
      not (i_1065 < j_1061)) -> (k_queen_test_aux_1904 true)
  br_f_loop_2360 b_2361 row_1068 size_1046 x_1998 k_queen_loop_1992 x_2087 b_2251 when b_2361 ->
      (queenPrint_1054 size_1046 x_2087 (f_loop_2356 b_2251 row_1068 size_1046 x_1998 k_queen_loop_1992 x_2087))
  br_f_loop_2360 b_2361 row_1068 size_1046 x_1998 k_queen_loop_1992 x_2087 b_2251 when (
      not b_2361) -> (loop_1067 size_1046 (row_1068 + 1) x_2087 k_queen_loop_1992)
  dotsPrint_1052 size_1046 n_1053 k_queen_dotsPrint_1638 when (n_1053 = 0) -> (k_queen_dotsPrint_1638 ())
  dotsPrint_1052 size_1046 n_1053 k_queen_dotsPrint_1638 when (not (n_1053 = 0)) ->
      (print_string_1350 () (f_dotsPrint_2342 n_1053 size_1046 k_queen_dotsPrint_1638))
  f_2358 x_2315 -> (main_1073 x_2315 (f_2359 x_2315))
  f_2359 x_2315 x_2312 -> end
  f_aux_2343 row_1057 size_1046 a_1058 k_queen_queenPrint_aux_1720 x_1723 ->
      (dotsPrint_1052 size_1046 (x_1723 - 1) (f_aux_2344 row_1057 size_1046 x_1723 a_1058 k_queen_queenPrint_aux_1720))
  f_aux_2344 row_1057 size_1046 x_1723 a_1058 k_queen_queenPrint_aux_1720 x_1736 ->
      (print_string_1350 () (f_aux_2345 row_1057 size_1046 x_1723 x_1736 a_1058 k_queen_queenPrint_aux_1720))
  f_aux_2345 row_1057 size_1046 x_1723 x_1736 a_1058 k_queen_queenPrint_aux_1720 x_1749 ->
      (dotsPrint_1052 size_1046 (size_1046 - x_1723)
        (f_aux_2346 row_1057 size_1046 x_1723 x_1736 x_1749 a_1058 k_queen_queenPrint_aux_1720))
  f_aux_2346 row_1057 size_1046 x_1723 x_1736 x_1749 a_1058 k_queen_queenPrint_aux_1720 x_1762 ->
      (print_string_1350 ()
        (f_aux_2347 row_1057 size_1046 x_1723 x_1736 x_1749 x_1762 a_1058 k_queen_queenPrint_aux_1720))
  f_aux_2347 row_1057 size_1046 x_1723 x_1736 x_1749 x_1762 a_1058 k_queen_queenPrint_aux_1720 x_1775 ->
      (aux_1056 size_1046 (row_1057 + 1) a_1058 k_queen_queenPrint_aux_1720)
  f_aux_2350 i_1065 j_1061 size_1046 x_1880 a_1062 k_queen_test_aux_1904 x_1907 when (
      x_1907 = x_1880) -> (k_queen_test_aux_1904 false)
  f_aux_2350 i_1065 j_1061 size_1046 x_1880 a_1062 k_queen_test_aux_1904 x_1907 when (
      not (x_1907 = x_1880)) ->
      (abs_1043 (x_1880 - x_1907) (f_aux_2351 i_1065 j_1061 size_1046 x_1880 x_1907 a_1062 k_queen_test_aux_1904))
  f_aux_2351 i_1065 j_1061 size_1046 x_1880 x_1907 a_1062 k_queen_test_aux_1904 x_1920 when (
      x_1920 = (j_1061 - i_1065)) -> (k_queen_test_aux_1904 false)
  f_aux_2351 i_1065 j_1061 size_1046 x_1880 x_1907 a_1062 k_queen_test_aux_1904 x_1920 when (
      not (x_1920 = (j_1061 - i_1065))) -> (aux_1064 j_1061 size_1046 x_1880 a_1062 (i_1065 + 1) k_queen_test_aux_1904)
  f_dotsPrint_2342 n_1053 size_1046 k_queen_dotsPrint_1638 x_1641 ->
      (dotsPrint_1052 size_1046 (n_1053 - 1) k_queen_dotsPrint_1638)
  f_loop_2352 row_1068 size_1046 a_1069 k_queen_loop_1992 x_1998 when (
      (x_1998 + 1) > size_1046) ->
      (assign_1348 size_1046 row_1068 0 a_1069 (f_loop_2353 row_1068 size_1046 x_1998 k_queen_loop_1992))
  f_loop_2352 row_1068 size_1046 a_1069 k_queen_loop_1992 x_1998 when (
      not ((x_1998 + 1) > size_1046)) ->
      (assign_1348 size_1046 row_1068 (x_1998 + 1) a_1069 (f_loop_2354 row_1068 size_1046 x_1998 k_queen_loop_1992))
  f_loop_2353 row_1068 size_1046 x_1998 k_queen_loop_1992 x_2015 when (row_1068 = 0) -> (k_queen_loop_1992 ())
  f_loop_2353 row_1068 size_1046 x_1998 k_queen_loop_1992 x_2015 when (
      not (row_1068 = 0)) -> (loop_1067 size_1046 (row_1068 - 1) x_2015 k_queen_loop_1992)
  f_loop_2354 row_1068 size_1046 x_1998 k_queen_loop_1992 x_2087 ->
      (test_1060 size_1046 row_1068 x_2087 (f_loop_2355 row_1068 size_1046 x_1998 k_queen_loop_1992 x_2087))
  f_loop_2355 row_1068 size_1046 x_1998 k_queen_loop_1992 x_2087 b_2251 when b_2251 ->
      (br_f_loop_2360 (row_1068 > size_1046) row_1068 size_1046 x_1998 k_queen_loop_1992 x_2087 b_2251)
  f_loop_2355 row_1068 size_1046 x_1998 k_queen_loop_1992 x_2087 b_2251 when (
      not b_2251) -> (loop_1067 size_1046 row_1068 x_2087 k_queen_loop_1992)
  f_loop_2356 b_2251 row_1068 size_1046 x_1998 k_queen_loop_1992 x_2087 x_2152 ->
      (loop_1067 size_1046 row_1068 x_2087 k_queen_loop_1992)
  f_main_2357 n_1074 k_main_2292 x_2295 -> (k_main_2292 ())
  f_queenPrint_2348 size_1046 k_queen_queenPrint_1691 x_1815 -> (print_string_1350 () k_queen_queenPrint_1691)
  f_test_2349 j_1061 size_1046 a_1062 k_queen_test_1877 x_1880 ->
      (aux_1064 j_1061 size_1046 x_1880 a_1062 0 k_queen_test_1877)
  f_update_2341 i_1035 n_1036 x_1038 a_1037 k_update_1451 x_1457 ->
      (k_update_1451 (a_1039 i_1035 n_1036 x_1038 x_1457 a_1037))
  fail_2362 b k -> {fail} => (k ())
  k_make_array_u_1392 i_1033 n_1031 s_1032 k_make_array_1386 b_1404 when b_1404 ->
      (k_make_array_u_1403 i_1033 n_1031 s_1032 k_make_array_1386 ())
  k_make_array_u_1392 i_1033 n_1031 s_1032 k_make_array_1386 b_1404 when (
      not b_1404) -> (fail_2362 true (k_make_array_u_1403 i_1033 n_1031 s_1032 k_make_array_1386))
  k_make_array_u_1403 i_1033 n_1031 s_1032 k_make_array_1386 x_1389 -> (k_make_array_1386 s_1032)
  loop_1067 size_1046 row_1068 a_1069 k_queen_loop_1992 ->
      (a_1069 row_1068 (f_loop_2352 row_1068 size_1046 a_1069 k_queen_loop_1992))
  main_1073 n_1074 k_main_2292 when (n_1074 > 0) -> (queen_1045 n_1074 (f_main_2357 n_1074 k_main_2292))
  main_1073 n_1074 k_main_2292 when (not (n_1074 > 0)) -> (k_main_2292 ())
  make_array_1355 n_1031 s_1032 i_1033 k_make_array_1386 when (0 <= i_1033) ->
      (k_make_array_u_1392 i_1033 n_1031 s_1032 k_make_array_1386 (i_1033 < n_1031))
  make_array_1355 n_1031 s_1032 i_1033 k_make_array_1386 when (not (0 <= i_1033)) ->
      (k_make_array_u_1392 i_1033 n_1031 s_1032 k_make_array_1386 false)
  print_string_1350 s_1042 k_print_string_1503 -> (k_print_string_1503 ())
  queenPrint_1054 size_1046 a_1055 k_queen_queenPrint_1691 ->
      (aux_1056 size_1046 0 a_1055 (f_queenPrint_2348 size_1046 k_queen_queenPrint_1691))
  queen_1045 size_1046 k_queen_1535 -> (loop_1067 size_1046 0 (make_array_1355 size_1046 0) k_queen_1535)
  test_1060 size_1046 j_1061 a_1062 k_queen_test_1877 ->
      (a_1062 j_1061 (f_test_2349 j_1061 size_1046 a_1062 k_queen_test_1877))
  update_1354 i_1035 n_1036 a_1037 x_1038 k_update_1451 ->
      (a_1037 i_1035 (f_update_2341 i_1035 n_1036 x_1038 a_1037 k_update_1451))
Types:
  main_2340 : X
  aux_1056 : (int -> int -> (int -> (int -> X) -> X) -> (unit -> X) -> X)
  aux_1064 : (int -> int -> int -> (int -> (int -> X) -> X) -> int -> (x_12:bool[x_12] -> X) -> X)
  dotsPrint_1052 : (int -> int -> (unit -> X) -> X)
  fail_2362 : (x_1:bool[x_1] -> (unit -> X) -> X)
  loop_1067 : (x_1:int ->
               x_2:int[x_1 >= x_2 + 1; x_2 >= 0] ->
               (x_4:int[x_1 >= x_4 + 1; x_4 >= 0] -> (int -> X) -> X) -> (unit -> X) -> X)
  
(2-1) Abstracting ... DONE!

(2-2) Checking HORS ... DONE!

Error trace::
  main_2340 ... --> 
  f_2358 ... --> 
  main_1073 [1/2] ... --> 
  queen_1045 ... --> 
  loop_1067 ... --> 
  make_array_1355 [1/2] ... --> 
  k_make_array_u_1392 [1/2] ... --> 
  k_make_array_u_1403 ... --> 
  f_loop_2352 [2/2] ... --> 
  assign_1348 ... --> 
  update_1354 ... --> 
  make_array_1355 [1/2] ... --> 
  k_make_array_u_1392 [1/2] ... --> 
  k_make_array_u_1403 ... --> 
  f_update_2341 ... --> 
  f_loop_2354 ... --> 
  test_1060 ... --> 
  a_1039 [1/2] ... --> 
  f_test_2349 ... --> 
  aux_1064 [1/2] ... --> 
  a_1039 [2/2] ... --> 
  make_array_1355 [2/2] ... --> 
  k_make_array_u_1392 [2/2] ... --> 
  fail_2362 ... --> fail -->
  ERROR!

Spurious counter-example::
  0; 0; 0; 0; 0; 0; 0; 0; 1; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 1; 1; 1; 0

(2-3) Checking counter-example ... DONE!

(2-4) Discovering predicates ... 
begin AbsTypeInfer.refine(29952)[1]
  program:
    main_2340  | true = ((Random.int 0) f_2358)
    a_1039 i_1035 n_1036 x_1038 x_1457 a_1037 j_1040 k_update_a_1472 | (
    i_1035 = j_1040) = (k_update_a_1472 x_1038)
    a_1039 i_1035 n_1036 x_1038 x_1457 a_1037 j_1040 k_update_a_1472 | (
    not (i_1035 = j_1040)) = (a_1037 j_1040
                                     k_update_a_1472)
    abs_1043 x_1044 k_abs_1517 | (x_1044 < 0) = (k_abs_1517 (0 - x_1044))
    abs_1043 x_1044 k_abs_1517 | (not (x_1044 < 0)) = (k_abs_1517 x_1044)
    assign_1348 size_1046 i_1049 j_1050 a_1051 k_queen_assign_1596 | true = (
    update_1354 i_1049
                size_1046
                a_1051
                j_1050
                k_queen_assign_1596)
    aux_1056 size_1046 row_1057 a_1058 k_queen_queenPrint_aux_1720 | (
    row_1057 >= size_1046) = (k_queen_queenPrint_aux_1720 ())
    aux_1056 size_1046 row_1057 a_1058 k_queen_queenPrint_aux_1720 | (
    not (row_1057 >= size_1046)) = (a_1058 row_1057
                                           (f_aux_2343 row_1057
                                                       size_1046
                                                       a_1058
                                                       k_queen_queenPrint_aux_1720))
    aux_1064 j_1061 size_1046 x_1880 a_1062 i_1065 k_queen_test_aux_1904 | (
    i_1065 < j_1061) = (a_1062 i_1065
                               (f_aux_2350 i_1065
                                           j_1061
                                           size_1046
                                           x_1880
                                           a_1062
                                           k_queen_test_aux_1904))
    aux_1064 j_1061 size_1046 x_1880 a_1062 i_1065 k_queen_test_aux_1904 | (
    not (i_1065 < j_1061)) = (k_queen_test_aux_1904 true)
    br_f_loop_2360 b_2361 row_1068 size_1046 x_1998 k_queen_loop_1992 x_2087 b_2251 | b_2361 = (
    queenPrint_1054 size_1046
                    x_2087
                    (f_loop_2356 b_2251
                                 row_1068
                                 size_1046
                                 x_1998
                                 k_queen_loop_1992
                                 x_2087))
    br_f_loop_2360 b_2361 row_1068 size_1046 x_1998 k_queen_loop_1992 x_2087 b_2251 | (
    not b_2361) = (loop_1067 size_1046
                             (row_1068 + 1)
                             x_2087
                             k_queen_loop_1992)
    dotsPrint_1052 size_1046 n_1053 k_queen_dotsPrint_1638 | (n_1053 = 0) = (
    k_queen_dotsPrint_1638 ())
    dotsPrint_1052 size_1046 n_1053 k_queen_dotsPrint_1638 | (not (n_1053 = 0)) = (
    print_string_1350 ()
                      (f_dotsPrint_2342 n_1053
                                        size_1046
                                        k_queen_dotsPrint_1638))
    f_2358 x_2315 | true = (main_1073 x_2315
                                      (f_2359 x_2315))
    f_2359 x_2315 x_2312 | true = end
    f_aux_2343 row_1057 size_1046 a_1058 k_queen_queenPrint_aux_1720 x_1723 | true = (
    dotsPrint_1052 size_1046
                   (x_1723 - 1)
                   (f_aux_2344 row_1057
                               size_1046
                               x_1723
                               a_1058
                               k_queen_queenPrint_aux_1720))
    f_aux_2344 row_1057 size_1046 x_1723 a_1058 k_queen_queenPrint_aux_1720 x_1736 | true = (
    print_string_1350 ()
                      (f_aux_2345 row_1057
                                  size_1046
                                  x_1723
                                  x_1736
                                  a_1058
                                  k_queen_queenPrint_aux_1720))
    f_aux_2345 row_1057 size_1046 x_1723 x_1736 a_1058 k_queen_queenPrint_aux_1720 x_1749 | true = (
    dotsPrint_1052
      size_1046
      (size_1046 - x_1723)
      (f_aux_2346 row_1057
                  size_1046
                  x_1723
                  x_1736
                  x_1749
                  a_1058
                  k_queen_queenPrint_aux_1720))
    f_aux_2346 row_1057 size_1046 x_1723 x_1736 x_1749 a_1058 k_queen_queenPrint_aux_1720 x_1762 | true = (
    print_string_1350 ()
                      (f_aux_2347 row_1057
                                  size_1046
                                  x_1723
                                  x_1736
                                  x_1749
                                  x_1762
                                  a_1058
                                  k_queen_queenPrint_aux_1720))
    f_aux_2347 row_1057 size_1046 x_1723 x_1736 x_1749 x_1762 a_1058 k_queen_queenPrint_aux_1720 x_1775 | true = (
    aux_1056 size_1046
             (row_1057 + 1)
             a_1058
             k_queen_queenPrint_aux_1720)
    f_aux_2350 i_1065 j_1061 size_1046 x_1880 a_1062 k_queen_test_aux_1904 x_1907 | (
    x_1907 = x_1880) = (k_queen_test_aux_1904 false)
    f_aux_2350 i_1065 j_1061 size_1046 x_1880 a_1062 k_queen_test_aux_1904 x_1907 | (
    not (x_1907 = x_1880)) = (abs_1043
                                (x_1880 - x_1907)
                                (f_aux_2351 i_1065
                                            j_1061
                                            size_1046
                                            x_1880
                                            x_1907
                                            a_1062
                                            k_queen_test_aux_1904))
    f_aux_2351 i_1065 j_1061 size_1046 x_1880 x_1907 a_1062 k_queen_test_aux_1904 x_1920 | (
    x_1920 = (j_1061 - i_1065)) = (k_queen_test_aux_1904 false)
    f_aux_2351 i_1065 j_1061 size_1046 x_1880 x_1907 a_1062 k_queen_test_aux_1904 x_1920 | (
    not (x_1920 = (j_1061 - i_1065))) = (aux_1064 j_1061
                                                  size_1046
                                                  x_1880
                                                  a_1062
                                                  (i_1065 + 1)
                                                  k_queen_test_aux_1904)
    f_dotsPrint_2342 n_1053 size_1046 k_queen_dotsPrint_1638 x_1641 | true = (
    dotsPrint_1052 size_1046
                   (n_1053 - 1)
                   k_queen_dotsPrint_1638)
    f_loop_2352 row_1068 size_1046 a_1069 k_queen_loop_1992 x_1998 | (
    (x_1998 + 1) > size_1046) = (assign_1348
                                   size_1046
                                   row_1068
                                   0
                                   a_1069
                                   (f_loop_2353 row_1068
                                                size_1046
                                                x_1998
                                                k_queen_loop_1992))
    f_loop_2352 row_1068 size_1046 a_1069 k_queen_loop_1992 x_1998 | (
    not ((x_1998 + 1) > size_1046)) = (assign_1348
                                         size_1046
                                         row_1068
                                         (x_1998 + 1)
                                         a_1069
                                         (f_loop_2354 row_1068
                                                      size_1046
                                                      x_1998
                                                      k_queen_loop_1992))
    f_loop_2353 row_1068 size_1046 x_1998 k_queen_loop_1992 x_2015 | (
    row_1068 = 0) = (k_queen_loop_1992 ())
    f_loop_2353 row_1068 size_1046 x_1998 k_queen_loop_1992 x_2015 | (
    not (row_1068 = 0)) = (loop_1067 size_1046
                                     (row_1068 - 1)
                                     x_2015
                                     k_queen_loop_1992)
    f_loop_2354 row_1068 size_1046 x_1998 k_queen_loop_1992 x_2087 | true = (
    test_1060 size_1046
              row_1068
              x_2087
              (f_loop_2355 row_1068
                           size_1046
                           x_1998
                           k_queen_loop_1992
                           x_2087))
    f_loop_2355 row_1068 size_1046 x_1998 k_queen_loop_1992 x_2087 b_2251 | b_2251 = (
    br_f_loop_2360 (row_1068 > size_1046)
                   row_1068
                   size_1046
                   x_1998
                   k_queen_loop_1992
                   x_2087
                   b_2251)
    f_loop_2355 row_1068 size_1046 x_1998 k_queen_loop_1992 x_2087 b_2251 | (
    not b_2251) = (loop_1067 size_1046
                             row_1068
                             x_2087
                             k_queen_loop_1992)
    f_loop_2356 b_2251 row_1068 size_1046 x_1998 k_queen_loop_1992 x_2087 x_2152 | true = (
    loop_1067 size_1046
              row_1068
              x_2087
              k_queen_loop_1992)
    f_main_2357 n_1074 k_main_2292 x_2295 | true = (k_main_2292 ())
    f_queenPrint_2348 size_1046 k_queen_queenPrint_1691 x_1815 | true = (
    print_string_1350 ()
                      k_queen_queenPrint_1691)
    f_test_2349 j_1061 size_1046 a_1062 k_queen_test_1877 x_1880 | true = (
    aux_1064 j_1061
             size_1046
             x_1880
             a_1062
             0
             k_queen_test_1877)
    f_update_2341 i_1035 n_1036 x_1038 a_1037 k_update_1451 x_1457 | true = (
    k_update_1451 (a_1039 i_1035
                          n_1036
                          x_1038
                          x_1457
                          a_1037))
    fail_2362 b k | true = (fail ())
    k_make_array_u_1392 i_1033 n_1031 s_1032 k_make_array_1386 b_1404 | b_1404 = (
    k_make_array_u_1403 i_1033
                        n_1031
                        s_1032
                        k_make_array_1386
                        ())
    k_make_array_u_1392 i_1033 n_1031 s_1032 k_make_array_1386 b_1404 | (
    not b_1404) = (fail_2362 true
                             (k_make_array_u_1403 i_1033
                                                  n_1031
                                                  s_1032
                                                  k_make_array_1386))
    k_make_array_u_1403 i_1033 n_1031 s_1032 k_make_array_1386 x_1389 | true = (
    k_make_array_1386 s_1032)
    loop_1067 size_1046 row_1068 a_1069 k_queen_loop_1992 | true = (a_1069
                                                                    row_1068
                                                                    (
                                                                    f_loop_2352
                                                                    row_1068
                                                                    size_1046
                                                                    a_1069
                                                                    k_queen_loop_1992))
    main_1073 n_1074 k_main_2292 | (n_1074 > 0) = (queen_1045 n_1074
                                                              (f_main_2357 n_1074
                                                                    k_main_2292))
    main_1073 n_1074 k_main_2292 | (not (n_1074 > 0)) = (k_main_2292 ())
    make_array_1355 n_1031 s_1032 i_1033 k_make_array_1386 | (0 <= i_1033) = (
    k_make_array_u_1392 i_1033
                        n_1031
                        s_1032
                        k_make_array_1386
                        (i_1033 < n_1031))
    make_array_1355 n_1031 s_1032 i_1033 k_make_array_1386 | (not (0 <= i_1033)) = (
    k_make_array_u_1392 i_1033
                        n_1031
                        s_1032
                        k_make_array_1386
                        false)
    print_string_1350 s_1042 k_print_string_1503 | true = (k_print_string_1503 ())
    queenPrint_1054 size_1046 a_1055 k_queen_queenPrint_1691 | true = (
    aux_1056 size_1046
             0
             a_1055
             (f_queenPrint_2348 size_1046
                                k_queen_queenPrint_1691))
    queen_1045 size_1046 k_queen_1535 | true = (loop_1067 size_1046
                                                          0
                                                          (make_array_1355 size_1046
                                                                    0)
                                                          k_queen_1535)
    test_1060 size_1046 j_1061 a_1062 k_queen_test_1877 | true = (a_1062
                                                                    j_1061
                                                                    (
                                                                    f_test_2349
                                                                    j_1061
                                                                    size_1046
                                                                    a_1062
                                                                    k_queen_test_1877))
    update_1354 i_1035 n_1036 a_1037 x_1038 k_update_1451 | true = (a_1037
                                                                    i_1035
                                                                    (
                                                                    f_update_2341
                                                                    i_1035
                                                                    n_1036
                                                                    x_1038
                                                                    a_1037
                                                                    k_update_1451))
    main_2340:X
    a_1039:int -> int -> int -> int -> (int -> (int -> X) -> X) -> int -> (int -> X) -> X
    abs_1043:int -> (int -> X) -> X
    assign_1348:int -> int -> int -> (int -> (int -> X) -> X) -> ((int -> (int -> X) -> X) -> X) -> X
    aux_1056:int -> int -> (int -> (int -> X) -> X) -> (unit -> X) -> X
    aux_1064:int -> int -> int -> (int -> (int -> X) -> X) -> int -> (bool -> X) -> X
    br_f_loop_2360:bool -> int -> int -> int -> (unit -> X) -> (int -> (int -> X) -> X) -> bool -> X
    dotsPrint_1052:int -> int -> (unit -> X) -> X
    f_2358:int -> X
    f_2359:int -> unit -> X
    f_aux_2343:int -> int -> (int -> (int -> X) -> X) -> (unit -> X) -> int -> X
    f_aux_2344:int -> int -> int -> (int -> (int -> X) -> X) -> (unit -> X) -> unit -> X
    f_aux_2345:int -> int -> int -> unit -> (int -> (int -> X) -> X) -> (unit -> X) -> unit -> X
    f_aux_2346:int -> int -> int -> unit -> unit -> (int -> (int -> X) -> X) -> (unit -> X) -> unit -> X
    f_aux_2347:int -> int -> int -> unit -> unit -> unit -> (int -> (int -> X) -> X) -> (unit -> X) -> unit -> X
    f_aux_2350:int -> int -> int -> int -> (int -> (int -> X) -> X) -> (bool -> X) -> int -> X
    f_aux_2351:int -> int -> int -> int -> int -> (int -> (int -> X) -> X) -> (bool -> X) -> int -> X
    f_dotsPrint_2342:int -> int -> (unit -> X) -> unit -> X
    f_loop_2352:int -> int -> (int -> (int -> X) -> X) -> (unit -> X) -> int -> X
    f_loop_2353:int -> int -> int -> (unit -> X) -> (int -> (int -> X) -> X) -> X
    f_loop_2354:int -> int -> int -> (unit -> X) -> (int -> (int -> X) -> X) -> X
    f_loop_2355:int -> int -> int -> (unit -> X) -> (int -> (int -> X) -> X) -> bool -> X
    f_loop_2356:bool -> int -> int -> int -> (unit -> X) -> (int -> (int -> X) -> X) -> unit -> X
    f_main_2357:int -> (unit -> X) -> unit -> X
    f_queenPrint_2348:int -> (unit -> X) -> unit -> X
    f_test_2349:int -> int -> (int -> (int -> X) -> X) -> (bool -> X) -> int -> X
    f_update_2341:int -> int -> int -> (int -> (int -> X) -> X) -> ((int -> (int -> X) -> X) -> X) -> int -> X
    fail_2362:bool -> (unit -> X) -> X
    k_make_array_u_1392:int -> int -> int -> (int -> X) -> bool -> X
    k_make_array_u_1403:int -> int -> int -> (int -> X) -> unit -> X
    loop_1067:int -> int -> (int -> (int -> X) -> X) -> (unit -> X) -> X
    main_1073:int -> (unit -> X) -> X
    make_array_1355:int -> int -> int -> (int -> X) -> X
    print_string_1350:unit -> (unit -> X) -> X
    queenPrint_1054:int -> (int -> (int -> X) -> X) -> (unit -> X) -> X
    queen_1045:int -> (unit -> X) -> X
    test_1060:int -> int -> (int -> (int -> X) -> X) -> (bool -> X) -> X
    update_1354:int -> int -> (int -> (int -> X) -> X) -> int -> ((int -> (int -> X) -> X) -> X) -> X
  inlined functions: a_1039,abs_1043,assign_1348,br_f_loop_2360,f_2358,f_2359,f_aux_2343,f_aux_2344,f_aux_2345,f_aux_2346,f_aux_2347,f_aux_2350,f_aux_2351,f_dotsPrint_2342,f_loop_2352,f_loop_2353,f_loop_2354,f_loop_2355,f_loop_2356,f_main_2357,f_queenPrint_2348,f_test_2349,f_update_2341,k_make_array_u_1392,k_make_array_u_1403,main_1073,make_array_1355,print_string_1350,queenPrint_1054,queen_1045,test_1060,update_1354
  counterexample: 0:0:0:0:0:0:0:0:1:0:0:0:0:0:0:0:0:0:0:0:1:1:1:0
  error traces:
    [true.nop(<f_2358@50:0> = var638)
     [true.(<main_1073@52:0> = <f_2358@50:0>)
      [(<main_1073@52:0> > 0).(<queen_1045@55:0> = <main_1073@52:0>)
       [true.((<loop_1067@57:0> = <queen_1045@55:0>) && (<loop_1067@57:1> = 0))
        [true.(<<loop_1067@57:2>@59:0> = <loop_1067@57:1>)
         [true.
          ((<make_array_1355@61:0> = <queen_1045@55:0>) &&
           ((<make_array_1355@61:1> = 0) && (<make_array_1355@61:2> = <<loop_1067@57:2>@59:0>)))
          [(0 <= <make_array_1355@61:2>).
           ((<k_make_array_u_1392@64:0> = <make_array_1355@61:2>) &&
            ((<k_make_array_u_1392@64:1> = <make_array_1355@61:0>) &&
             ((<k_make_array_u_1392@64:2> = <make_array_1355@61:1>) &&
              (<k_make_array_u_1392@64:4> = (<make_array_1355@61:2> < <make_array_1355@61:0>)))))
           [<k_make_array_u_1392@64:4>.
            ((<k_make_array_u_1403@67:0> = <k_make_array_u_1392@64:0>) &&
             ((<k_make_array_u_1403@67:1> = <k_make_array_u_1392@64:1>) &&
              ((<k_make_array_u_1403@67:2> = <k_make_array_u_1392@64:2>) && (<k_make_array_u_1403@67:4> = ()))))
            [true.(<<k_make_array_u_1403@67:3>@69:0> = <k_make_array_u_1403@67:2>)
             [true.(<<k_make_array_u_1392@64:3>@71:0> = <<k_make_array_u_1403@67:3>@69:0>)
              [true.(<<make_array_1355@61:3>@73:0> = <<k_make_array_u_1392@64:3>@71:0>)
               [true.(<<<loop_1067@57:2>@59:1>@75:0> = <<make_array_1355@61:3>@73:0>)
                [true.
                 ((<f_loop_2352@77:0> = <loop_1067@57:1>) &&
                  ((<f_loop_2352@77:1> = <loop_1067@57:0>) && (<f_loop_2352@77:4> = <<<loop_1067@57:2>@59:1>@75:0>)))
                 [(not ((<f_loop_2352@77:4> + 1) > <f_loop_2352@77:1>)).
                  ((<assign_1348@80:0> = <f_loop_2352@77:1>) &&
                   ((<assign_1348@80:1> = <f_loop_2352@77:0>) && (<assign_1348@80:2> = (<f_loop_2352@77:4> + 1))))
                  [true.
                   ((<update_1354@82:0> = <assign_1348@80:1>) &&
                    ((<update_1354@82:1> = <assign_1348@80:0>) && (<update_1354@82:3> = <assign_1348@80:2>)))
                   [true.(<<update_1354@82:2>@84:0> = <update_1354@82:0>)
                    [true.(<<assign_1348@80:3>@86:0> = <<update_1354@82:2>@84:0>)
                     [true.(<<f_loop_2352@77:2>@88:0> = <<assign_1348@80:3>@86:0>)
                      [true.(<<loop_1067@57:2>@90:0> = <<f_loop_2352@77:2>@88:0>)
                       [true.
                        ((<make_array_1355@92:0> = <queen_1045@55:0>) &&
                         ((<make_array_1355@92:1> = 0) && (<make_array_1355@92:2> = <<loop_1067@57:2>@90:0>)))
                        [(0 <= <make_array_1355@92:2>).
                         ((<k_make_array_u_1392@95:0> = <make_array_1355@92:2>) &&
                          ((<k_make_array_u_1392@95:1> = <make_array_1355@92:0>) &&
                           ((<k_make_array_u_1392@95:2> = <make_array_1355@92:1>) &&
                            (<k_make_array_u_1392@95:4> = (<make_array_1355@92:2> < <make_array_1355@92:0>)))))
                         [<k_make_array_u_1392@95:4>.
                          ((<k_make_array_u_1403@98:0> = <k_make_array_u_1392@95:0>) &&
                           ((<k_make_array_u_1403@98:1> = <k_make_array_u_1392@95:1>) &&
                            ((<k_make_array_u_1403@98:2> = <k_make_array_u_1392@95:2>) &&
                             (<k_make_array_u_1403@98:4> = ()))))
                          [true.(<<k_make_array_u_1403@98:3>@100:0> = <k_make_array_u_1403@98:2>)
                           [true.(<<k_make_array_u_1392@95:3>@102:0> = <<k_make_array_u_1403@98:3>@100:0>)
                            [true.(<<make_array_1355@92:3>@104:0> = <<k_make_array_u_1392@95:3>@102:0>)
                             [true.(<<<loop_1067@57:2>@90:1>@106:0> = <<make_array_1355@92:3>@104:0>)
                              [true.(<<<f_loop_2352@77:2>@88:1>@108:0> = <<<loop_1067@57:2>@90:1>@106:0>)
                               [true.(<<<assign_1348@80:3>@86:1>@110:0> = <<<f_loop_2352@77:2>@88:1>@108:0>)
                                [true.(<<<update_1354@82:2>@84:1>@112:0> = <<<assign_1348@80:3>@86:1>@110:0>)
                                 [true.
                                  ((<f_update_2341@114:0> = <update_1354@82:0>) &&
                                   ((<f_update_2341@114:1> = <update_1354@82:1>) &&
                                    ((<f_update_2341@114:2> = <update_1354@82:3>) &&
                                     (<f_update_2341@114:5> = <<<update_1354@82:2>@84:1>@112:0>))))
                                  [true.true
                                   [true.true
                                    [true.true
                                     [true.
                                      ((<f_loop_2354@122:0> = <f_loop_2352@77:0>) &&
                                       ((<f_loop_2354@122:1> = <f_loop_2352@77:1>) &&
                                        (<f_loop_2354@122:2> = <f_loop_2352@77:4>)))
                                      [true.
                                       ((<test_1060@124:0> = <f_loop_2354@122:1>) &&
                                        (<test_1060@124:1> = <f_loop_2354@122:0>))
                                       [true.(<<test_1060@124:2>@126:0> = <test_1060@124:1>)
                                        [true.(<<f_loop_2354@122:4>@128:0> = <<test_1060@124:2>@126:0>)
                                         [true.(<<<assign_1348@80:4>@120:0>@130:0> = <<f_loop_2354@122:4>@128:0>)
                                          [true.
                                           (<<<update_1354@82:4>@118:0>@132:0> = <<<assign_1348@80:4>@120:0>@130:0>)
                                           [true.
                                            (<<<f_update_2341@114:4>@116:0>@134:0> = <<<update_1354@82:4>@118:0>@132:0>)
                                            [true.
                                             ((<a_1039@136:0> = <f_update_2341@114:0>) &&
                                              ((<a_1039@136:1> = <f_update_2341@114:1>) &&
                                               ((<a_1039@136:2> = <f_update_2341@114:2>) &&
                                                ((<a_1039@136:3> = <f_update_2341@114:5>) &&
                                                 (<a_1039@136:5> = <<<f_update_2341@114:4>@116:0>@134:0>)))))
                                             [(<a_1039@136:0> = <a_1039@136:5>).
                                              (<<a_1039@136:6>@139:0> = <a_1039@136:2>)
                                              [true.
                                               (<<<<f_update_2341@114:4>@116:0>@134:1>@141:0> = <<a_1039@136:6>@139:0>)
                                               [true.
                                                (<<<<update_1354@82:4>@118:0>@132:1>@143:0> =
                                                 <<<<f_update_2341@114:4>@116:0>@134:1>@141:0>)
                                                [true.
                                                 (<<<<assign_1348@80:4>@120:0>@130:1>@145:0> =
                                                  <<<<update_1354@82:4>@118:0>@132:1>@143:0>)
                                                 [true.
                                                  (<<<f_loop_2354@122:4>@128:1>@147:0> =
                                                   <<<<assign_1348@80:4>@120:0>@130:1>@145:0>)
                                                  [true.
                                                   (<<<test_1060@124:2>@126:1>@149:0> =
                                                    <<<f_loop_2354@122:4>@128:1>@147:0>)
                                                   [true.
                                                    ((<f_test_2349@151:0> = <test_1060@124:1>) &&
                                                     ((<f_test_2349@151:1> = <test_1060@124:0>) &&
                                                      (<f_test_2349@151:4> = <<<test_1060@124:2>@126:1>@149:0>)))
                                                    [true.
                                                     ((<aux_1064@153:0> = <f_test_2349@151:0>) &&
                                                      ((<aux_1064@153:1> = <f_test_2349@151:1>) &&
                                                       ((<aux_1064@153:2> = <f_test_2349@151:4>) &&
                                                        (<aux_1064@153:4> = 0))))
                                                     [(<aux_1064@153:4> < <aux_1064@153:0>).
                                                      (<<aux_1064@153:3>@156:0> = <aux_1064@153:4>)
                                                      [true.(<<f_test_2349@151:2>@158:0> = <<aux_1064@153:3>@156:0>)
                                                       [true.(<<test_1060@124:2>@160:0> = <<f_test_2349@151:2>@158:0>)
                                                        [true.(<<f_loop_2354@122:4>@162:0> = <<test_1060@124:2>@160:0>)
                                                         [true.
                                                          (<<<assign_1348@80:4>@120:0>@164:0> =
                                                           <<f_loop_2354@122:4>@162:0>)
                                                          [true.
                                                           (<<<update_1354@82:4>@118:0>@166:0> =
                                                            <<<assign_1348@80:4>@120:0>@164:0>)
                                                           [true.
                                                            (<<<f_update_2341@114:4>@116:0>@168:0> =
                                                             <<<update_1354@82:4>@118:0>@166:0>)
                                                            [true.
                                                             ((<a_1039@170:0> = <f_update_2341@114:0>) &&
                                                              ((<a_1039@170:1> = <f_update_2341@114:1>) &&
                                                               ((<a_1039@170:2> = <f_update_2341@114:2>) &&
                                                                ((<a_1039@170:3> = <f_update_2341@114:5>) &&
                                                                 (<a_1039@170:5> =
                                                                  <<<f_update_2341@114:4>@116:0>@168:0>)))))
                                                             [(not (<a_1039@170:0> = <a_1039@170:5>)).
                                                              (<<a_1039@170:4>@173:0> = <a_1039@170:5>)
                                                              [true.
                                                               (<<f_update_2341@114:3>@175:0> = <<a_1039@170:4>@173:0>)
                                                               [true.
                                                                (<<update_1354@82:2>@177:0> =
                                                                 <<f_update_2341@114:3>@175:0>)
                                                                [true.
                                                                 (<<assign_1348@80:3>@179:0> =
                                                                  <<update_1354@82:2>@177:0>)
                                                                 [true.
                                                                  (<<f_loop_2352@77:2>@181:0> =
                                                                   <<assign_1348@80:3>@179:0>)
                                                                  [true.
                                                                   (<<loop_1067@57:2>@183:0> =
                                                                    <<f_loop_2352@77:2>@181:0>)
                                                                   [true.
                                                                    (
                                                                    (
                                                                    <make_array_1355@185:0> = <queen_1045@55:0>) &&
                                                                    (
                                                                    (
                                                                    <make_array_1355@185:1> = 0) &&
                                                                    (
                                                                    <make_array_1355@185:2> = <<loop_1067@57:2>@183:0>)))
                                                                    [
                                                                    (
                                                                    not (
                                                                    0 <= <make_array_1355@185:2>)).
                                                                    (
                                                                    (
                                                                    <k_make_array_u_1392@188:0> =
                                                                    <make_array_1355@185:2>) &&
                                                                    (
                                                                    (
                                                                    <k_make_array_u_1392@188:1> =
                                                                    <make_array_1355@185:0>) &&
                                                                    (
                                                                    (
                                                                    <k_make_array_u_1392@188:2> =
                                                                    <make_array_1355@185:1>) &&
                                                                    (
                                                                    <k_make_array_u_1392@188:4> = false))))
                                                                    [
                                                                    (
                                                                    not <k_make_array_u_1392@188:4>).
                                                                    (
                                                                    <fail_2362@191:0> = true)[
                                                                    true.error
  begin RefTypeInfer.infer_etrs(29953)[2]
    horn clauses:
      P[<fail_2362@191:0>](<fail_2362@191:0>:bool)|- bot
      
      P[<k_make_array_u_1392@188:4>](<k_make_array_u_1392@188:0>:int,<k_make_array_u_1392@188:1>:int,<k_make_array_u_1392@188:2>:int,false:bool),
      <fail_2362@191:0> |- P[<fail_2362@191:0>](<fail_2362@191:0>:bool)
      
      P[<make_array_1355@185:2>](<k_make_array_u_1392@188:1>:int,<k_make_array_u_1392@188:2>:int,<k_make_array_u_1392@188:0>:int),
      ((0 > <k_make_array_u_1392@188:0>) && (not <k_make_array_u_1392@188:4>))
      |- P[<k_make_array_u_1392@188:4>](<k_make_array_u_1392@188:0>:int,
                                        <k_make_array_u_1392@188:1>:int,
                                        <k_make_array_u_1392@188:2>:int,
                                        <k_make_array_u_1392@188:4>:bool)
      
      P[<queen_1045@55:0>](<make_array_1355@185:0>:int),
      P[<<loop_1067@57:2>@183:0>](<make_array_1355@185:0>:int,0:int,<make_array_1355@185:2>:int),
      (<make_array_1355@185:1> = 0)
      |- P[<make_array_1355@185:2>](<make_array_1355@185:0>:int,<make_array_1355@185:1>:int,
                                    <make_array_1355@185:2>:int)
      
      P[<loop_1067@57:1>](<loop_1067@57:0>:int,<loop_1067@57:1>:int),
      P[<<f_loop_2352@77:2>@181:0>](<loop_1067@57:1>:int,<loop_1067@57:0>:int,<<loop_1067@57:2>@183:0>:int)|- P[<<loop_1067@57:2>@183:0>](
      <loop_1067@57:0>:int,<loop_1067@57:1>:int,<<loop_1067@57:2>@183:0>:int)
      
      P[<f_loop_2352@77:4>](<f_loop_2352@77:0>:int,<f_loop_2352@77:1>:int,<f_loop_2354@122:2>:int),
      P[<<assign_1348@80:3>@179:0>](<f_loop_2352@77:1>:int,<f_loop_2352@77:0>:int,(
                                    1 + <f_loop_2354@122:2>):int,<<f_loop_2352@77:2>@181:0>:int),
      ((1 + <f_loop_2354@122:2>) <= <f_loop_2352@77:1>)
      |- P[<<f_loop_2352@77:2>@181:0>](<f_loop_2352@77:0>:int,<f_loop_2352@77:1>:int,
                                       <<f_loop_2352@77:2>@181:0>:int)
      
      P[<assign_1348@80:2>](<assign_1348@80:0>:int,<assign_1348@80:1>:int,<assign_1348@80:2>:int),
      P[<<update_1354@82:2>@177:0>](<assign_1348@80:1>:int,<assign_1348@80:0>:int,<<assign_1348@80:3>@179:0>:int)|- P[<<assign_1348@80:3>@179:0>](
      <assign_1348@80:0>:int,<assign_1348@80:1>:int,<assign_1348@80:2>:int,
      <<assign_1348@80:3>@179:0>:int)
      
      P[<update_1354@82:3>](<update_1354@82:0>:int,<update_1354@82:1>:int,<f_update_2341@114:2>:int),
      P[<<f_update_2341@114:3>@175:0>](<update_1354@82:0>:int,<update_1354@82:1>:int,<f_update_2341@114:2>:int,<<update_1354@82:2>@177:0>:int)|- P[<<update_1354@82:2>@177:0>](
      <update_1354@82:0>:int,<update_1354@82:1>:int,<<update_1354@82:2>@177:0>:int)
      
      P[<f_update_2341@114:5>](<f_update_2341@114:0>:int,<f_update_2341@114:1>:int,<f_update_2341@114:2>:int,<a_1039@136:3>:int),
      P[<<a_1039@170:4>@173:0>](<f_update_2341@114:0>:int,<f_update_2341@114:1>:int,<f_update_2341@114:2>:int,<a_1039@136:3>:int,<<f_update_2341@114:3>@175:0>:int)|- P[<<f_update_2341@114:3>@175:0>](
      <f_update_2341@114:0>:int,<f_update_2341@114:1>:int,<f_update_2341@114:2>:int,
      <<f_update_2341@114:3>@175:0>:int)
      
      P[<a_1039@170:5>](<a_1039@170:0>:int,<a_1039@170:1>:int,<a_1039@170:2>:int,<a_1039@170:3>:int,<<a_1039@170:4>@173:0>:int),
      (<a_1039@170:0> <> <<a_1039@170:4>@173:0>)
      |- P[<<a_1039@170:4>@173:0>](<a_1039@170:0>:int,<a_1039@170:1>:int,
                                   <a_1039@170:2>:int,<a_1039@170:3>:int,
                                   <<a_1039@170:4>@173:0>:int)
      
      P[<f_update_2341@114:5>](<a_1039@170:0>:int,<a_1039@170:1>:int,<a_1039@170:2>:int,<a_1039@170:3>:int),
      P[<<<f_update_2341@114:4>@116:0>@168:0>](<a_1039@170:0>:int,<a_1039@170:1>:int,<a_1039@170:2>:int,<a_1039@170:5>:int)|- P[<a_1039@170:5>](
      <a_1039@170:0>:int,<a_1039@170:1>:int,<a_1039@170:2>:int,<a_1039@170:3>:int,
      <a_1039@170:5>:int)
      
      P[<update_1354@82:3>](<f_update_2341@114:0>:int,<f_update_2341@114:1>:int,<f_update_2341@114:2>:int),
      P[<<<update_1354@82:4>@118:0>@166:0>](<f_update_2341@114:0>:int,<f_update_2341@114:1>:int,<f_update_2341@114:2>:int,<<<f_update_2341@114:4>@116:0>@168:0>:int)|- P[<<<f_update_2341@114:4>@116:0>@168:0>](
      <f_update_2341@114:0>:int,<f_update_2341@114:1>:int,<f_update_2341@114:2>:int,
      <<<f_update_2341@114:4>@116:0>@168:0>:int)
      
      P[<assign_1348@80:2>](<update_1354@82:1>:int,<update_1354@82:0>:int,<update_1354@82:3>:int),
      P[<<<assign_1348@80:4>@120:0>@164:0>](<update_1354@82:1>:int,<update_1354@82:0>:int,<update_1354@82:3>:int,<<<update_1354@82:4>@118:0>@166:0>:int),
      P[<update_1354@82:3>](<update_1354@82:0>:int,<update_1354@82:1>:int,<update_1354@82:3>:int)|- P[<<<update_1354@82:4>@118:0>@166:0>](
      <update_1354@82:0>:int,<update_1354@82:1>:int,<update_1354@82:3>:int,
      <<<update_1354@82:4>@118:0>@166:0>:int)
      
      P[<f_loop_2352@77:4>](<assign_1348@80:1>:int,<assign_1348@80:0>:int,(
                            -1 + <assign_1348@80:2>):int),
      P[<<f_loop_2354@122:4>@162:0>](<assign_1348@80:1>:int,<assign_1348@80:0>:int,(
                                     -1 + <assign_1348@80:2>):int,<<<assign_1348@80:4>@120:0>@164:0>:int),
      P[<assign_1348@80:2>](<assign_1348@80:0>:int,<assign_1348@80:1>:int,<assign_1348@80:2>:int),
      (<assign_1348@80:2> <= <assign_1348@80:0>)
      |- P[<<<assign_1348@80:4>@120:0>@164:0>](<assign_1348@80:0>:int,
                                               <assign_1348@80:1>:int,
                                               <assign_1348@80:2>:int,
                                               <<<assign_1348@80:4>@120:0>@164:0>:int)
      
      P[<f_loop_2354@122:2>](<f_loop_2354@122:0>:int,<f_loop_2354@122:1>:int,<f_loop_2354@122:2>:int),
      P[<<test_1060@124:2>@160:0>](<f_loop_2354@122:1>:int,<f_loop_2354@122:0>:int,<<f_loop_2354@122:4>@162:0>:int)|- P[<<f_loop_2354@122:4>@162:0>](
      <f_loop_2354@122:0>:int,<f_loop_2354@122:1>:int,<f_loop_2354@122:2>:int,
      <<f_loop_2354@122:4>@162:0>:int)
      
      P[<test_1060@124:1>](<test_1060@124:0>:int,<test_1060@124:1>:int),
      P[<<f_test_2349@151:2>@158:0>](<test_1060@124:1>:int,<test_1060@124:0>:int,<<test_1060@124:2>@160:0>:int)|- P[<<test_1060@124:2>@160:0>](
      <test_1060@124:0>:int,<test_1060@124:1>:int,<<test_1060@124:2>@160:0>:int)
      
      P[<f_test_2349@151:4>](<f_test_2349@151:0>:int,<f_test_2349@151:1>:int,<aux_1064@153:2>:int),
      P[<<aux_1064@153:3>@156:0>](<f_test_2349@151:0>:int,<f_test_2349@151:1>:int,<aux_1064@153:2>:int,<<f_test_2349@151:2>@158:0>:int)|- P[<<f_test_2349@151:2>@158:0>](
      <f_test_2349@151:0>:int,<f_test_2349@151:1>:int,<<f_test_2349@151:2>@158:0>:int)
      
      P[<aux_1064@153:4>](<aux_1064@153:0>:int,<aux_1064@153:1>:int,<aux_1064@153:2>:int,<<aux_1064@153:3>@156:0>:int),
      (<<aux_1064@153:3>@156:0> < <aux_1064@153:0>)
      |- P[<<aux_1064@153:3>@156:0>](<aux_1064@153:0>:int,<aux_1064@153:1>:int,
                                     <aux_1064@153:2>:int,<<aux_1064@153:3>@156:0>:int)
      
      P[<f_test_2349@151:4>](<aux_1064@153:0>:int,<aux_1064@153:1>:int,<aux_1064@153:2>:int), (
      <aux_1064@153:4> = 0)
      |- P[<aux_1064@153:4>](<aux_1064@153:0>:int,<aux_1064@153:1>:int,
                             <aux_1064@153:2>:int,<aux_1064@153:4>:int)
      
      P[<test_1060@124:1>](<f_test_2349@151:1>:int,<f_test_2349@151:0>:int),
      P[<<<test_1060@124:2>@126:1>@149:0>](<f_test_2349@151:1>:int,<f_test_2349@151:0>:int,<f_test_2349@151:0>:int,<f_test_2349@151:4>:int)|- P[<f_test_2349@151:4>](
      <f_test_2349@151:0>:int,<f_test_2349@151:1>:int,<f_test_2349@151:4>:int)
      
      P[<f_loop_2354@122:2>](<test_1060@124:1>:int,<test_1060@124:0>:int,<f_loop_2354@122:2>:int),
      P[<<<f_loop_2354@122:4>@128:1>@147:0>](<test_1060@124:1>:int,<test_1060@124:0>:int,<f_loop_2354@122:2>:int,<<test_1060@124:2>@126:0>:int,<<<test_1060@124:2>@126:1>@149:0>:int),
      P[<test_1060@124:1>](<test_1060@124:0>:int,<test_1060@124:1>:int)|- P[<<<test_1060@124:2>@126:1>@149:0>](
      <test_1060@124:0>:int,<test_1060@124:1>:int,<<test_1060@124:2>@126:0>:int,
      <<<test_1060@124:2>@126:1>@149:0>:int)
      
      P[<f_loop_2352@77:4>](<f_loop_2354@122:0>:int,<f_loop_2354@122:1>:int,<f_loop_2354@122:2>:int),
      P[<<<<assign_1348@80:4>@120:0>@130:1>@145:0>](<f_loop_2354@122:1>:int,<f_loop_2354@122:0>:int,(
                                                    1 + <f_loop_2354@122:2>):int,<<f_loop_2354@122:4>@128:0>:int,<<<f_loop_2354@122:4>@128:1>@147:0>:int),
      P[<f_loop_2354@122:2>](<f_loop_2354@122:0>:int,<f_loop_2354@122:1>:int,<f_loop_2354@122:2>:int),
      ((1 + <f_loop_2354@122:2>) <= <f_loop_2354@122:1>)
      |- P[<<<f_loop_2354@122:4>@128:1>@147:0>](<f_loop_2354@122:0>:int,
                                                <f_loop_2354@122:1>:int,
                                                <f_loop_2354@122:2>:int,
                                                <<f_loop_2354@122:4>@128:0>:int,
                                                <<<f_loop_2354@122:4>@128:1>@147:0>:int)
      
      P[<assign_1348@80:2>](<assign_1348@80:0>:int,<assign_1348@80:1>:int,<assign_1348@80:2>:int),
      P[<<<<update_1354@82:4>@118:0>@132:1>@143:0>](<assign_1348@80:1>:int,<assign_1348@80:0>:int,<assign_1348@80:2>:int,<<<assign_1348@80:4>@120:0>@130:0>:int,<<<<assign_1348@80:4>@120:0>@130:1>@145:0>:int)|- P[<<<<assign_1348@80:4>@120:0>@130:1>@145:0>](
      <assign_1348@80:0>:int,<assign_1348@80:1>:int,<assign_1348@80:2>:int,
      <<<assign_1348@80:4>@120:0>@130:0>:int,<<<<assign_1348@80:4>@120:0>@130:1>@145:0>:int)
      
      P[<update_1354@82:3>](<update_1354@82:0>:int,<update_1354@82:1>:int,<update_1354@82:3>:int),
      P[<<<<f_update_2341@114:4>@116:0>@134:1>@141:0>](<update_1354@82:0>:int,<update_1354@82:1>:int,<update_1354@82:3>:int,<<<update_1354@82:4>@118:0>@132:0>:int,<<<<update_1354@82:4>@118:0>@132:1>@143:0>:int)|- P[<<<<update_1354@82:4>@118:0>@132:1>@143:0>](
      <update_1354@82:0>:int,<update_1354@82:1>:int,<update_1354@82:3>:int,
      <<<update_1354@82:4>@118:0>@132:0>:int,<<<<update_1354@82:4>@118:0>@132:1>@143:0>:int)
      
      P[<f_update_2341@114:5>](<f_update_2341@114:0>:int,<f_update_2341@114:1>:int,<f_update_2341@114:2>:int,<a_1039@136:3>:int),
      P[<<a_1039@136:6>@139:0>](<f_update_2341@114:0>:int,<f_update_2341@114:1>:int,<f_update_2341@114:2>:int,<a_1039@136:3>:int,<<<f_update_2341@114:4>@116:0>@134:0>:int,<<<<f_update_2341@114:4>@116:0>@134:1>@141:0>:int)|- P[<<<<f_update_2341@114:4>@116:0>@134:1>@141:0>](
      <f_update_2341@114:0>:int,<f_update_2341@114:1>:int,<f_update_2341@114:2>:int,
      <<<f_update_2341@114:4>@116:0>@134:0>:int,<<<<f_update_2341@114:4>@116:0>@134:1>@141:0>:int)
      
      P[<a_1039@136:5>](<a_1039@136:0>:int,<a_1039@136:1>:int,<a_1039@136:2>:int,<a_1039@136:3>:int,<a_1039@136:5>:int),
      ((<a_1039@136:0> = <a_1039@136:5>) && (<<a_1039@136:6>@139:0> = <a_1039@136:2>))
      |- P[<<a_1039@136:6>@139:0>](<a_1039@136:0>:int,<a_1039@136:1>:int,
                                   <a_1039@136:2>:int,<a_1039@136:3>:int,
                                   <a_1039@136:5>:int,<<a_1039@136:6>@139:0>:int)
      
      P[<f_update_2341@114:5>](<a_1039@136:0>:int,<a_1039@136:1>:int,<a_1039@136:2>:int,<a_1039@136:3>:int),
      P[<<<f_update_2341@114:4>@116:0>@134:0>](<a_1039@136:0>:int,<a_1039@136:1>:int,<a_1039@136:2>:int,<a_1039@136:5>:int)|- P[<a_1039@136:5>](
      <a_1039@136:0>:int,<a_1039@136:1>:int,<a_1039@136:2>:int,<a_1039@136:3>:int,
      <a_1039@136:5>:int)
      
      P[<update_1354@82:3>](<f_update_2341@114:0>:int,<f_update_2341@114:1>:int,<f_update_2341@114:2>:int),
      P[<<<update_1354@82:4>@118:0>@132:0>](<f_update_2341@114:0>:int,<f_update_2341@114:1>:int,<f_update_2341@114:2>:int,<<<f_update_2341@114:4>@116:0>@134:0>:int)|- P[<<<f_update_2341@114:4>@116:0>@134:0>](
      <f_update_2341@114:0>:int,<f_update_2341@114:1>:int,<f_update_2341@114:2>:int,
      <<<f_update_2341@114:4>@116:0>@134:0>:int)
      
      P[<assign_1348@80:2>](<update_1354@82:1>:int,<update_1354@82:0>:int,<update_1354@82:3>:int),
      P[<<<assign_1348@80:4>@120:0>@130:0>](<update_1354@82:1>:int,<update_1354@82:0>:int,<update_1354@82:3>:int,<<<update_1354@82:4>@118:0>@132:0>:int),
      P[<update_1354@82:3>](<update_1354@82:0>:int,<update_1354@82:1>:int,<update_1354@82:3>:int)|- P[<<<update_1354@82:4>@118:0>@132:0>](
      <update_1354@82:0>:int,<update_1354@82:1>:int,<update_1354@82:3>:int,
      <<<update_1354@82:4>@118:0>@132:0>:int)
      
      P[<f_loop_2352@77:4>](<assign_1348@80:1>:int,<assign_1348@80:0>:int,(
                            -1 + <assign_1348@80:2>):int),
      P[<<f_loop_2354@122:4>@128:0>](<assign_1348@80:1>:int,<assign_1348@80:0>:int,(
                                     -1 + <assign_1348@80:2>):int,<<<assign_1348@80:4>@120:0>@130:0>:int),
      P[<assign_1348@80:2>](<assign_1348@80:0>:int,<assign_1348@80:1>:int,<assign_1348@80:2>:int),
      (<assign_1348@80:2> <= <assign_1348@80:0>)
      |- P[<<<assign_1348@80:4>@120:0>@130:0>](<assign_1348@80:0>:int,
                                               <assign_1348@80:1>:int,
                                               <assign_1348@80:2>:int,
                                               <<<assign_1348@80:4>@120:0>@130:0>:int)
      
      P[<f_loop_2354@122:2>](<f_loop_2354@122:0>:int,<f_loop_2354@122:1>:int,<f_loop_2354@122:2>:int),
      P[<<test_1060@124:2>@126:0>](<f_loop_2354@122:1>:int,<f_loop_2354@122:0>:int,<<f_loop_2354@122:4>@128:0>:int)|- P[<<f_loop_2354@122:4>@128:0>](
      <f_loop_2354@122:0>:int,<f_loop_2354@122:1>:int,<f_loop_2354@122:2>:int,
      <<f_loop_2354@122:4>@128:0>:int)
      
      P[<test_1060@124:1>](<test_1060@124:0>:int,<test_1060@124:1>:int),
      (<<test_1060@124:2>@126:0> = <test_1060@124:1>)
      |- P[<<test_1060@124:2>@126:0>](<test_1060@124:0>:int,<test_1060@124:1>:int,
                                      <<test_1060@124:2>@126:0>:int)
      
      P[<f_loop_2354@122:2>](<test_1060@124:1>:int,<test_1060@124:0>:int,<f_loop_2354@122:2>:int)|- P[<test_1060@124:1>](
      <test_1060@124:0>:int,<test_1060@124:1>:int)
      
      P[<f_loop_2352@77:4>](<f_loop_2354@122:0>:int,<f_loop_2354@122:1>:int,<f_loop_2354@122:2>:int),
      ((1 + <f_loop_2354@122:2>) <= <f_loop_2354@122:1>)
      |- P[<f_loop_2354@122:2>](<f_loop_2354@122:0>:int,<f_loop_2354@122:1>:int,
                                <f_loop_2354@122:2>:int)
      
      P[<update_1354@82:3>](<f_update_2341@114:0>:int,<f_update_2341@114:1>:int,<f_update_2341@114:2>:int),
      P[<<<update_1354@82:2>@84:1>@112:0>](<f_update_2341@114:0>:int,<f_update_2341@114:1>:int,<f_update_2341@114:0>:int,<f_update_2341@114:5>:int)|- P[<f_update_2341@114:5>](
      <f_update_2341@114:0>:int,<f_update_2341@114:1>:int,<f_update_2341@114:2>:int,
      <f_update_2341@114:5>:int)
      
      P[<assign_1348@80:2>](<update_1354@82:1>:int,<update_1354@82:0>:int,<update_1354@82:3>:int),
      P[<<<assign_1348@80:3>@86:1>@110:0>](<update_1354@82:1>:int,<update_1354@82:0>:int,<update_1354@82:3>:int,<<update_1354@82:2>@84:0>:int,<<<update_1354@82:2>@84:1>@112:0>:int)|- P[<<<update_1354@82:2>@84:1>@112:0>](
      <update_1354@82:0>:int,<update_1354@82:1>:int,<<update_1354@82:2>@84:0>:int,
      <<<update_1354@82:2>@84:1>@112:0>:int)
      
      P[<f_loop_2352@77:4>](<assign_1348@80:1>:int,<assign_1348@80:0>:int,(
                            -1 + <assign_1348@80:2>):int),
      P[<<<f_loop_2352@77:2>@88:1>@108:0>](<assign_1348@80:1>:int,<assign_1348@80:0>:int,<<assign_1348@80:3>@86:0>:int,<<<assign_1348@80:3>@86:1>@110:0>:int),
      P[<assign_1348@80:2>](<assign_1348@80:0>:int,<assign_1348@80:1>:int,<assign_1348@80:2>:int),
      (<assign_1348@80:2> <= <assign_1348@80:0>)
      |- P[<<<assign_1348@80:3>@86:1>@110:0>](<assign_1348@80:0>:int,
                                              <assign_1348@80:1>:int,
                                              <assign_1348@80:2>:int,
                                              <<assign_1348@80:3>@86:0>:int,
                                              <<<assign_1348@80:3>@86:1>@110:0>:int)
      
      P[<loop_1067@57:1>](<f_loop_2352@77:1>:int,<f_loop_2352@77:0>:int),
      P[<<<loop_1067@57:2>@90:1>@106:0>](<f_loop_2352@77:1>:int,<f_loop_2352@77:0>:int,<<f_loop_2352@77:2>@88:0>:int,<<<f_loop_2352@77:2>@88:1>@108:0>:int)|- P[<<<f_loop_2352@77:2>@88:1>@108:0>](
      <f_loop_2352@77:0>:int,<f_loop_2352@77:1>:int,<<f_loop_2352@77:2>@88:0>:int,
      <<<f_loop_2352@77:2>@88:1>@108:0>:int)
      
      P[<queen_1045@55:0>](<loop_1067@57:0>:int),
      P[<<make_array_1355@92:3>@104:0>](<loop_1067@57:0>:int,0:int,<<loop_1067@57:2>@90:0>:int,<<<loop_1067@57:2>@90:1>@106:0>:int),
      P[<loop_1067@57:1>](<loop_1067@57:0>:int,<loop_1067@57:1>:int), (
      <loop_1067@57:1> = 0)
      |- P[<<<loop_1067@57:2>@90:1>@106:0>](<loop_1067@57:0>:int,<loop_1067@57:1>:int,
                                            <<loop_1067@57:2>@90:0>:int,
                                            <<<loop_1067@57:2>@90:1>@106:0>:int)
      
      P[<make_array_1355@92:2>](<make_array_1355@92:0>:int,<make_array_1355@92:1>:int,<make_array_1355@92:2>:int),
      P[<<k_make_array_u_1392@95:3>@102:0>](<make_array_1355@92:2>:int,<make_array_1355@92:0>:int,<make_array_1355@92:1>:int,<<make_array_1355@92:3>@104:0>:int),
      (0 <= <make_array_1355@92:2>)
      |- P[<<make_array_1355@92:3>@104:0>](<make_array_1355@92:0>:int,
                                           <make_array_1355@92:1>:int,
                                           <make_array_1355@92:2>:int,
                                           <<make_array_1355@92:3>@104:0>:int)
      
      P[<k_make_array_u_1392@95:4>](<k_make_array_u_1392@95:0>:int,<k_make_array_u_1392@95:1>:int,<k_make_array_u_1392@95:2>:int,true:bool),
      P[<<k_make_array_u_1403@98:3>@100:0>](<k_make_array_u_1392@95:0>:int,<k_make_array_u_1392@95:1>:int,<k_make_array_u_1392@95:2>:int,<<k_make_array_u_1392@95:3>@102:0>:int)|- P[<<k_make_array_u_1392@95:3>@102:0>](
      <k_make_array_u_1392@95:0>:int,<k_make_array_u_1392@95:1>:int,<k_make_array_u_1392@95:2>:int,
      <<k_make_array_u_1392@95:3>@102:0>:int)
      
      P[<k_make_array_u_1403@98:4>](<k_make_array_u_1403@98:0>:int,<k_make_array_u_1403@98:1>:int,<k_make_array_u_1403@98:2>:int,<k_make_array_u_1403@98:4>:unit),
      (<<k_make_array_u_1403@98:3>@100:0> = <k_make_array_u_1403@98:2>)
      |- P[<<k_make_array_u_1403@98:3>@100:0>](<k_make_array_u_1403@98:0>:int,
                                               <k_make_array_u_1403@98:1>:int,
                                               <k_make_array_u_1403@98:2>:int,
                                               <<k_make_array_u_1403@98:3>@100:0>:int)
      
      P[<k_make_array_u_1392@95:4>](<k_make_array_u_1403@98:0>:int,<k_make_array_u_1403@98:1>:int,<k_make_array_u_1403@98:2>:int,true:bool)|- P[<k_make_array_u_1403@98:4>](
      <k_make_array_u_1403@98:0>:int,<k_make_array_u_1403@98:1>:int,<k_make_array_u_1403@98:2>:int,
      <k_make_array_u_1403@98:4>:unit)
      
      P[<make_array_1355@92:2>](<k_make_array_u_1392@95:1>:int,<k_make_array_u_1392@95:2>:int,<k_make_array_u_1392@95:0>:int),
      ((0 <= <k_make_array_u_1392@95:0>) &&
       (<k_make_array_u_1392@95:4> = (<k_make_array_u_1392@95:0> < <k_make_array_u_1392@95:1>)))
      |- P[<k_make_array_u_1392@95:4>](<k_make_array_u_1392@95:0>:int,
                                       <k_make_array_u_1392@95:1>:int,
                                       <k_make_array_u_1392@95:2>:int,
                                       <k_make_array_u_1392@95:4>:bool)
      
      P[<queen_1045@55:0>](<make_array_1355@92:0>:int),
      P[<<loop_1067@57:2>@90:0>](<make_array_1355@92:0>:int,0:int,<make_array_1355@92:2>:int),
      (<make_array_1355@92:1> = 0)
      |- P[<make_array_1355@92:2>](<make_array_1355@92:0>:int,<make_array_1355@92:1>:int,
                                   <make_array_1355@92:2>:int)
      
      P[<loop_1067@57:1>](<loop_1067@57:0>:int,<loop_1067@57:1>:int),
      P[<<f_loop_2352@77:2>@88:0>](<loop_1067@57:1>:int,<loop_1067@57:0>:int,<<loop_1067@57:2>@90:0>:int)|- P[<<loop_1067@57:2>@90:0>](
      <loop_1067@57:0>:int,<loop_1067@57:1>:int,<<loop_1067@57:2>@90:0>:int)
      
      P[<f_loop_2352@77:4>](<f_loop_2352@77:0>:int,<f_loop_2352@77:1>:int,<f_loop_2352@77:4>:int),
      P[<<assign_1348@80:3>@86:0>](<f_loop_2352@77:1>:int,<f_loop_2352@77:0>:int,(
                                   1 + <f_loop_2352@77:4>):int,<<f_loop_2352@77:2>@88:0>:int),
      ((1 + <f_loop_2352@77:4>) <= <f_loop_2352@77:1>)
      |- P[<<f_loop_2352@77:2>@88:0>](<f_loop_2352@77:0>:int,<f_loop_2352@77:1>:int,
                                      <<f_loop_2352@77:2>@88:0>:int)
      
      P[<assign_1348@80:2>](<assign_1348@80:0>:int,<assign_1348@80:1>:int,<assign_1348@80:2>:int),
      P[<<update_1354@82:2>@84:0>](<assign_1348@80:1>:int,<assign_1348@80:0>:int,<<assign_1348@80:3>@86:0>:int)|- P[<<assign_1348@80:3>@86:0>](
      <assign_1348@80:0>:int,<assign_1348@80:1>:int,<assign_1348@80:2>:int,
      <<assign_1348@80:3>@86:0>:int)
      
      P[<update_1354@82:3>](<update_1354@82:0>:int,<update_1354@82:1>:int,<update_1354@82:3>:int),
      (<<update_1354@82:2>@84:0> = <update_1354@82:0>)
      |- P[<<update_1354@82:2>@84:0>](<update_1354@82:0>:int,<update_1354@82:1>:int,
                                      <<update_1354@82:2>@84:0>:int)
      
      P[<assign_1348@80:2>](<update_1354@82:1>:int,<update_1354@82:0>:int,<update_1354@82:3>:int)|- P[<update_1354@82:3>](
      <update_1354@82:0>:int,<update_1354@82:1>:int,<update_1354@82:3>:int)
      
      P[<f_loop_2352@77:4>](<assign_1348@80:1>:int,<assign_1348@80:0>:int,(
                            -1 + <assign_1348@80:2>):int), (<assign_1348@80:2> <= <assign_1348@80:0>)
      |- P[<assign_1348@80:2>](<assign_1348@80:0>:int,<assign_1348@80:1>:int,
                               <assign_1348@80:2>:int)
      
      P[<loop_1067@57:1>](<f_loop_2352@77:1>:int,<f_loop_2352@77:0>:int),
      P[<<<loop_1067@57:2>@59:1>@75:0>](<f_loop_2352@77:1>:int,<f_loop_2352@77:0>:int,<f_loop_2352@77:0>:int,<f_loop_2352@77:4>:int)|- P[<f_loop_2352@77:4>](
      <f_loop_2352@77:0>:int,<f_loop_2352@77:1>:int,<f_loop_2352@77:4>:int)
      
      P[<queen_1045@55:0>](<loop_1067@57:0>:int),
      P[<<make_array_1355@61:3>@73:0>](<loop_1067@57:0>:int,0:int,<<loop_1067@57:2>@59:0>:int,<<<loop_1067@57:2>@59:1>@75:0>:int),
      P[<loop_1067@57:1>](<loop_1067@57:0>:int,<loop_1067@57:1>:int), (
      <loop_1067@57:1> = 0)
      |- P[<<<loop_1067@57:2>@59:1>@75:0>](<loop_1067@57:0>:int,<loop_1067@57:1>:int,
                                           <<loop_1067@57:2>@59:0>:int,
                                           <<<loop_1067@57:2>@59:1>@75:0>:int)
      
      P[<make_array_1355@61:2>](<make_array_1355@61:0>:int,<make_array_1355@61:1>:int,<make_array_1355@61:2>:int),
      P[<<k_make_array_u_1392@64:3>@71:0>](<make_array_1355@61:2>:int,<make_array_1355@61:0>:int,<make_array_1355@61:1>:int,<<make_array_1355@61:3>@73:0>:int),
      (0 <= <make_array_1355@61:2>)
      |- P[<<make_array_1355@61:3>@73:0>](<make_array_1355@61:0>:int,
                                          <make_array_1355@61:1>:int,
                                          <make_array_1355@61:2>:int,
                                          <<make_array_1355@61:3>@73:0>:int)
      
      P[<k_make_array_u_1392@64:4>](<k_make_array_u_1392@64:0>:int,<k_make_array_u_1392@64:1>:int,<k_make_array_u_1392@64:2>:int,true:bool),
      P[<<k_make_array_u_1403@67:3>@69:0>](<k_make_array_u_1392@64:0>:int,<k_make_array_u_1392@64:1>:int,<k_make_array_u_1392@64:2>:int,<<k_make_array_u_1392@64:3>@71:0>:int)|- P[<<k_make_array_u_1392@64:3>@71:0>](
      <k_make_array_u_1392@64:0>:int,<k_make_array_u_1392@64:1>:int,<k_make_array_u_1392@64:2>:int,
      <<k_make_array_u_1392@64:3>@71:0>:int)
      
      P[<k_make_array_u_1403@67:4>](<k_make_array_u_1403@67:0>:int,<k_make_array_u_1403@67:1>:int,<k_make_array_u_1403@67:2>:int,<k_make_array_u_1403@67:4>:unit),
      (<<k_make_array_u_1403@67:3>@69:0> = <k_make_array_u_1403@67:2>)
      |- P[<<k_make_array_u_1403@67:3>@69:0>](<k_make_array_u_1403@67:0>:int,
                                              <k_make_array_u_1403@67:1>:int,
                                              <k_make_array_u_1403@67:2>:int,
                                              <<k_make_array_u_1403@67:3>@69:0>:int)
      
      P[<k_make_array_u_1392@64:4>](<k_make_array_u_1403@67:0>:int,<k_make_array_u_1403@67:1>:int,<k_make_array_u_1403@67:2>:int,true:bool)|- P[<k_make_array_u_1403@67:4>](
      <k_make_array_u_1403@67:0>:int,<k_make_array_u_1403@67:1>:int,<k_make_array_u_1403@67:2>:int,
      <k_make_array_u_1403@67:4>:unit)
      
      P[<make_array_1355@61:2>](<k_make_array_u_1392@64:1>:int,<k_make_array_u_1392@64:2>:int,<k_make_array_u_1392@64:0>:int),
      ((0 <= <k_make_array_u_1392@64:0>) &&
       (<k_make_array_u_1392@64:4> = (<k_make_array_u_1392@64:0> < <k_make_array_u_1392@64:1>)))
      |- P[<k_make_array_u_1392@64:4>](<k_make_array_u_1392@64:0>:int,
                                       <k_make_array_u_1392@64:1>:int,
                                       <k_make_array_u_1392@64:2>:int,
                                       <k_make_array_u_1392@64:4>:bool)
      
      P[<queen_1045@55:0>](<make_array_1355@61:0>:int),
      P[<<loop_1067@57:2>@59:0>](<make_array_1355@61:0>:int,0:int,<make_array_1355@61:2>:int),
      (<make_array_1355@61:1> = 0)
      |- P[<make_array_1355@61:2>](<make_array_1355@61:0>:int,<make_array_1355@61:1>:int,
                                   <make_array_1355@61:2>:int)
      
      P[<loop_1067@57:1>](<loop_1067@57:0>:int,<loop_1067@57:1>:int), (
      <<loop_1067@57:2>@59:0> = <loop_1067@57:1>)
      |- P[<<loop_1067@57:2>@59:0>](<loop_1067@57:0>:int,<loop_1067@57:1>:int,
                                    <<loop_1067@57:2>@59:0>:int)
      
      P[<queen_1045@55:0>](<loop_1067@57:0>:int), (<loop_1067@57:1> = 0)
      |- P[<loop_1067@57:1>](<loop_1067@57:0>:int,<loop_1067@57:1>:int)
      
      P[<main_1073@52:0>](<queen_1045@55:0>:int), (<queen_1045@55:0> > 0)
      |- P[<queen_1045@55:0>](<queen_1045@55:0>:int)
      
      P[<f_2358@50:0>](<main_1073@52:0>:int)|- P[<main_1073@52:0>](<main_1073@52:0>:int)
      
      |- P[<f_2358@50:0>](<f_2358@50:0>:int)
    call trees:
      <main_2340@47>
        <f_2358@50>
          <main_1073@52>
            <queen_1045@55>
              <loop_1067@57>
              </<loop_1067@57:2>@59>
              <make_array_1355@61>
                <k_make_array_u_1392@64>
                  <k_make_array_u_1403@67>
                  </<k_make_array_u_1403@67:3>@69>
                </<k_make_array_u_1392@64:3>@71>
              </<make_array_1355@61:3>@73>
              <<<loop_1067@57:2>@59:1>@75>
                <f_loop_2352@77>
                  <assign_1348@80>
                    <update_1354@82>
                    </<update_1354@82:2>@84>
                  </<assign_1348@80:3>@86>
                </<f_loop_2352@77:2>@88>
              </<loop_1067@57:2>@90>
              <make_array_1355@92>
                <k_make_array_u_1392@95>
                  <k_make_array_u_1403@98>
                  </<k_make_array_u_1403@98:3>@100>
                </<k_make_array_u_1392@95:3>@102>
              </<make_array_1355@92:3>@104>
              <<<loop_1067@57:2>@90:1>@106>
                <<<f_loop_2352@77:2>@88:1>@108>
                  <<<assign_1348@80:3>@86:1>@110>
                    <<<update_1354@82:2>@84:1>@112>
                      <f_update_2341@114>
                      </<f_update_2341@114:4>@116>
                    </<update_1354@82:4>@118>
                  </<assign_1348@80:4>@120>
                  <f_loop_2354@122>
                    <test_1060@124>
                    </<test_1060@124:2>@126>
                  </<f_loop_2354@122:4>@128>
                  <<<assign_1348@80:4>@120:0>@130>
                    <<<update_1354@82:4>@118:0>@132>
                      <<<f_update_2341@114:4>@116:0>@134>
                        <a_1039@136>
                        </<a_1039@136:6>@139>
                      </<<<f_update_2341@114:4>@116:0>@134:1>@141>
                    </<<<update_1354@82:4>@118:0>@132:1>@143>
                  </<<<assign_1348@80:4>@120:0>@130:1>@145>
                  <<<f_loop_2354@122:4>@128:1>@147>
                    <<<test_1060@124:2>@126:1>@149>
                      <f_test_2349@151>
                        <aux_1064@153>
                        </<aux_1064@153:3>@156>
                      </<f_test_2349@151:2>@158>
                    </<test_1060@124:2>@160>
                  </<f_loop_2354@122:4>@162>
                  <<<assign_1348@80:4>@120:0>@164>
                    <<<update_1354@82:4>@118:0>@166>
                      <<<f_update_2341@114:4>@116:0>@168>
                        <a_1039@170>
                        </<a_1039@170:4>@173>
                      </<f_update_2341@114:3>@175>
                    </<update_1354@82:2>@177>
                  </<assign_1348@80:3>@179>
                </<f_loop_2352@77:2>@181>
              </<loop_1067@57:2>@183>
              <make_array_1355@185>
                <k_make_array_u_1392@188>
                  <fail_2362@191>
    inlined horn clauses:
      P[<fail_2362@191:0>](<fail_2362@191:0>:bool)|- bot
      
      P[<<loop_1067@57:2>@183:0>](<k_make_array_u_1392@188:1>:int,0:int,<k_make_array_u_1392@188:0>:int),
      ((<k_make_array_u_1392@188:1> > 0) && ((0 > <k_make_array_u_1392@188:0>) && <fail_2362@191:0>))
      |- P[<fail_2362@191:0>](<fail_2362@191:0>:bool)
      
      P[<<<loop_1067@57:2>@90:1>@106:0>](<loop_1067@57:0>:int,<loop_1067@57:1>:int,<loop_1067@57:1>:int,var672:int),
      P[<<<loop_1067@57:2>@59:1>@75:0>](<loop_1067@57:0>:int,<loop_1067@57:1>:int,<loop_1067@57:1>:int,(
                                        -1 + var673):int),
      P[<<aux_1064@153:3>@156:0>](<loop_1067@57:1>:int,<loop_1067@57:0>:int,var673:int,<<loop_1067@57:2>@183:0>:int),
      P[<loop_1067@57:1>](<loop_1067@57:0>:int,<loop_1067@57:1>:int),
      ((var673 <= <loop_1067@57:0>) && (<loop_1067@57:1> <> <<loop_1067@57:2>@183:0>))
      |- P[<<loop_1067@57:2>@183:0>](<loop_1067@57:0>:int,<loop_1067@57:1>:int,
                                     <<loop_1067@57:2>@183:0>:int)
      
      P[<aux_1064@153:4>](<aux_1064@153:0>:int,<aux_1064@153:1>:int,<aux_1064@153:2>:int,<<aux_1064@153:3>@156:0>:int),
      (<<aux_1064@153:3>@156:0> < <aux_1064@153:0>)
      |- P[<<aux_1064@153:3>@156:0>](<aux_1064@153:0>:int,<aux_1064@153:1>:int,
                                     <aux_1064@153:2>:int,<<aux_1064@153:3>@156:0>:int)
      
      P[<<<loop_1067@57:2>@90:1>@106:0>](<aux_1064@153:1>:int,<aux_1064@153:0>:int,<aux_1064@153:0>:int,var674:int),
      P[<<<loop_1067@57:2>@59:1>@75:0>](<aux_1064@153:1>:int,<aux_1064@153:0>:int,<aux_1064@153:0>:int,(
                                        -1 + <aux_1064@153:2>):int),
      P[<loop_1067@57:1>](<aux_1064@153:1>:int,<aux_1064@153:0>:int),
      ((<aux_1064@153:4> = 0) && (<aux_1064@153:2> <= <aux_1064@153:1>))
      |- P[<aux_1064@153:4>](<aux_1064@153:0>:int,<aux_1064@153:1>:int,
                             <aux_1064@153:2>:int,<aux_1064@153:4>:int)
      
      P[<<loop_1067@57:2>@90:0>](<loop_1067@57:0>:int,0:int,<<loop_1067@57:2>@90:0>:int),
      P[<loop_1067@57:1>](<loop_1067@57:0>:int,<loop_1067@57:1>:int),
      ((<loop_1067@57:1> = 0) &&
       ((<<<loop_1067@57:2>@90:1>@106:0> = 0) &&
        ((0 <= <<loop_1067@57:2>@90:0>) && ((<loop_1067@57:0> > 0) && (<<loop_1067@57:2>@90:0> < <loop_1067@57:0>)))))
      |- P[<<<loop_1067@57:2>@90:1>@106:0>](<loop_1067@57:0>:int,<loop_1067@57:1>:int,
                                            <<loop_1067@57:2>@90:0>:int,
                                            <<<loop_1067@57:2>@90:1>@106:0>:int)
      
      P[<<<loop_1067@57:2>@59:1>@75:0>](<loop_1067@57:0>:int,<loop_1067@57:1>:int,<loop_1067@57:1>:int,var675:int),
      P[<loop_1067@57:1>](<loop_1067@57:0>:int,<loop_1067@57:1>:int),
      (((1 + var675) <= <loop_1067@57:0>) && (<<loop_1067@57:2>@90:0> = <loop_1067@57:1>))
      |- P[<<loop_1067@57:2>@90:0>](<loop_1067@57:0>:int,<loop_1067@57:1>:int,
                                    <<loop_1067@57:2>@90:0>:int)
      
      P[<<loop_1067@57:2>@59:0>](<loop_1067@57:0>:int,0:int,<<loop_1067@57:2>@59:0>:int),
      P[<loop_1067@57:1>](<loop_1067@57:0>:int,<loop_1067@57:1>:int),
      ((<loop_1067@57:1> = 0) &&
       ((<<<loop_1067@57:2>@59:1>@75:0> = 0) &&
        ((0 <= <<loop_1067@57:2>@59:0>) && ((<loop_1067@57:0> > 0) && (<<loop_1067@57:2>@59:0> < <loop_1067@57:0>)))))
      |- P[<<<loop_1067@57:2>@59:1>@75:0>](<loop_1067@57:0>:int,<loop_1067@57:1>:int,
                                           <<loop_1067@57:2>@59:0>:int,
                                           <<<loop_1067@57:2>@59:1>@75:0>:int)
      
      P[<loop_1067@57:1>](<loop_1067@57:0>:int,<loop_1067@57:1>:int), (
      <<loop_1067@57:2>@59:0> = <loop_1067@57:1>)
      |- P[<<loop_1067@57:2>@59:0>](<loop_1067@57:0>:int,<loop_1067@57:1>:int,
                                    <<loop_1067@57:2>@59:0>:int)
      
       ((<loop_1067@57:1> = 0) && (<loop_1067@57:0> > 0))
      |- P[<loop_1067@57:1>](<loop_1067@57:0>:int,<loop_1067@57:1>:int)
    begin ParamSubstInfer.infer(43095)[3]
      
    end ParamSubstInfer.infer(43095)[3] (1.132828 sec.)
    inferred extra parameters:
      
    begin RefTypeInfer.elim_coeffs(43097)[3]
      
    end RefTypeInfer.elim_coeffs(43097)[3] (0.004000 sec.)
    begin GenHcSolver.solve(43997)[3]
      Horn clauses:
        P[<fail_2362@191:0>](<fail_2362@191:0>:bool)|- bot
        
        P[<<loop_1067@57:2>@183:0>](<k_make_array_u_1392@188:1>:int,0:int,<k_make_array_u_1392@188:0>:int),
        ((<k_make_array_u_1392@188:1> > 0) && ((0 > <k_make_array_u_1392@188:0>) && <fail_2362@191:0>))
        |- P[<fail_2362@191:0>](<fail_2362@191:0>:bool)
        
        P[<<<loop_1067@57:2>@90:1>@106:0>](<loop_1067@57:0>:int,<loop_1067@57:1>:int,<loop_1067@57:1>:int,var672:int),
        P[<<<loop_1067@57:2>@59:1>@75:0>](<loop_1067@57:0>:int,<loop_1067@57:1>:int,<loop_1067@57:1>:int,(
                                          -1 + var673):int),
        P[<<aux_1064@153:3>@156:0>](<loop_1067@57:1>:int,<loop_1067@57:0>:int,var673:int,<<loop_1067@57:2>@183:0>:int),
        P[<loop_1067@57:1>](<loop_1067@57:0>:int,<loop_1067@57:1>:int),
        ((var673 <= <loop_1067@57:0>) && (<loop_1067@57:1> <> <<loop_1067@57:2>@183:0>))
        |- P[<<loop_1067@57:2>@183:0>](<loop_1067@57:0>:int,<loop_1067@57:1>:int,
                                       <<loop_1067@57:2>@183:0>:int)
        
        P[<aux_1064@153:4>](<aux_1064@153:0>:int,<aux_1064@153:1>:int,<aux_1064@153:2>:int,<<aux_1064@153:3>@156:0>:int),
        (<<aux_1064@153:3>@156:0> < <aux_1064@153:0>)
        |- P[<<aux_1064@153:3>@156:0>](<aux_1064@153:0>:int,<aux_1064@153:1>:int,
                                       <aux_1064@153:2>:int,<<aux_1064@153:3>@156:0>:int)
        
        P[<<<loop_1067@57:2>@90:1>@106:0>](<aux_1064@153:1>:int,<aux_1064@153:0>:int,<aux_1064@153:0>:int,var674:int),
        P[<<<loop_1067@57:2>@59:1>@75:0>](<aux_1064@153:1>:int,<aux_1064@153:0>:int,<aux_1064@153:0>:int,(
                                          -1 + <aux_1064@153:2>):int),
        P[<loop_1067@57:1>](<aux_1064@153:1>:int,<aux_1064@153:0>:int),
        ((<aux_1064@153:4> = 0) && (<aux_1064@153:2> <= <aux_1064@153:1>))
        |- P[<aux_1064@153:4>](<aux_1064@153:0>:int,<aux_1064@153:1>:int,
                               <aux_1064@153:2>:int,<aux_1064@153:4>:int)
        
        P[<<loop_1067@57:2>@90:0>](<loop_1067@57:0>:int,0:int,<<loop_1067@57:2>@90:0>:int),
        P[<loop_1067@57:1>](<loop_1067@57:0>:int,<loop_1067@57:1>:int),
        ((<loop_1067@57:1> = 0) &&
         ((<<<loop_1067@57:2>@90:1>@106:0> = 0) &&
          ((0 <= <<loop_1067@57:2>@90:0>) && ((<loop_1067@57:0> > 0) && (<<loop_1067@57:2>@90:0> < <loop_1067@57:0>)))))
        |- P[<<<loop_1067@57:2>@90:1>@106:0>](<loop_1067@57:0>:int,<loop_1067@57:1>:int,
                                              <<loop_1067@57:2>@90:0>:int,
                                              <<<loop_1067@57:2>@90:1>@106:0>:int)
        
        P[<<<loop_1067@57:2>@59:1>@75:0>](<loop_1067@57:0>:int,<loop_1067@57:1>:int,<loop_1067@57:1>:int,var675:int),
        P[<loop_1067@57:1>](<loop_1067@57:0>:int,<loop_1067@57:1>:int),
        (((1 + var675) <= <loop_1067@57:0>) && (<<loop_1067@57:2>@90:0> = <loop_1067@57:1>))
        |- P[<<loop_1067@57:2>@90:0>](<loop_1067@57:0>:int,<loop_1067@57:1>:int,
                                      <<loop_1067@57:2>@90:0>:int)
        
        P[<<loop_1067@57:2>@59:0>](<loop_1067@57:0>:int,0:int,<<loop_1067@57:2>@59:0>:int),
        P[<loop_1067@57:1>](<loop_1067@57:0>:int,<loop_1067@57:1>:int),
        ((<loop_1067@57:1> = 0) &&
         ((<<<loop_1067@57:2>@59:1>@75:0> = 0) &&
          ((0 <= <<loop_1067@57:2>@59:0>) && ((<loop_1067@57:0> > 0) && (<<loop_1067@57:2>@59:0> < <loop_1067@57:0>)))))
        |- P[<<<loop_1067@57:2>@59:1>@75:0>](<loop_1067@57:0>:int,<loop_1067@57:1>:int,
                                             <<loop_1067@57:2>@59:0>:int,
                                             <<<loop_1067@57:2>@59:1>@75:0>:int)
        
        P[<loop_1067@57:1>](<loop_1067@57:0>:int,<loop_1067@57:1>:int), (
        <<loop_1067@57:2>@59:0> = <loop_1067@57:1>)
        |- P[<<loop_1067@57:2>@59:0>](<loop_1067@57:0>:int,<loop_1067@57:1>:int,
                                      <<loop_1067@57:2>@59:0>:int)
        
         ((<loop_1067@57:1> = 0) && (<loop_1067@57:0> > 0))
        |- P[<loop_1067@57:1>](<loop_1067@57:0>:int,<loop_1067@57:1>:int)
      lower bounds:
        P[<loop_1067@57:1>](<loop_1067@57:0>:int,<loop_1067@57:1>:int) =
        ((<loop_1067@57:1> = 0) && (<loop_1067@57:0> > 0))
        P[<<loop_1067@57:2>@59:0>](<loop_1067@57:0>:int,<loop_1067@57:1>:int,<<loop_1067@57:2>@59:0>:int) =
        ((<loop_1067@57:1> = 0) && ((<loop_1067@57:0> > 0) && (<<loop_1067@57:2>@59:0> = <loop_1067@57:1>)))
        P[<<<loop_1067@57:2>@59:1>@75:0>](<loop_1067@57:0>:int,<loop_1067@57:1>:int,<<loop_1067@57:2>@59:0>:int,<<<loop_1067@57:2>@59:1>@75:0>:int) =
        ((<<<loop_1067@57:2>@59:1>@75:0> = 0) &&
         ((<<loop_1067@57:2>@59:0> = 0) &&
          ((<loop_1067@57:1> = 0) && ((<<loop_1067@57:2>@59:0> < <loop_1067@57:0>) && (<loop_1067@57:0> > 0)))))
        P[<<loop_1067@57:2>@90:0>](<loop_1067@57:0>:int,<loop_1067@57:1>:int,<<loop_1067@57:2>@90:0>:int) =
        ((<loop_1067@57:1> = 0) &&
         ((<<loop_1067@57:2>@90:0> = <loop_1067@57:1>) &&
          ((<loop_1067@57:0> >= 1) && (<loop_1067@57:1> < <loop_1067@57:0>))))
        P[<<<loop_1067@57:2>@90:1>@106:0>](<loop_1067@57:0>:int,<loop_1067@57:1>:int,<<loop_1067@57:2>@90:0>:int,<<<loop_1067@57:2>@90:1>@106:0>:int) =
        ((<<<loop_1067@57:2>@90:1>@106:0> = 0) &&
         ((<<loop_1067@57:2>@90:0> = 0) &&
          ((<loop_1067@57:1> = 0) && ((<<loop_1067@57:2>@90:0> < <loop_1067@57:0>) && (<loop_1067@57:0> >= 1)))))
        P[<aux_1064@153:4>](<aux_1064@153:0>:int,<aux_1064@153:1>:int,<aux_1064@153:2>:int,<aux_1064@153:4>:int) =
        ((<aux_1064@153:0> = 0) &&
         ((<aux_1064@153:2> = 1) &&
          ((<aux_1064@153:4> = 0) &&
           ((<aux_1064@153:0> < <aux_1064@153:1>) &&
            ((<aux_1064@153:1> >= 1) && (<aux_1064@153:2> <= <aux_1064@153:1>))))))
        P[<<aux_1064@153:3>@156:0>](<aux_1064@153:0>:int,<aux_1064@153:1>:int,<aux_1064@153:2>:int,<<aux_1064@153:3>@156:0>:int) =
        false
        P[<<loop_1067@57:2>@183:0>](<loop_1067@57:0>:int,<loop_1067@57:1>:int,<<loop_1067@57:2>@183:0>:int) = false
        P[<fail_2362@191:0>](<fail_2362@191:0>:bool) = false
      upper bounds:
        P[<<loop_1067@57:2>@183:0>](var689:int,var690:int,var691:int) = true
        P[<<loop_1067@57:2>@90:0>](var681:int,var682:int,var683:int) = true
        P[<<loop_1067@57:2>@59:0>](var677:int,var678:int,var679:int) = true
      begin GenHcSolver.classify_pids(60983)[4]
        output:
          [<<loop_1067@57:2>@59:0>;<<loop_1067@57:2>@90:0>;<<loop_1067@57:2>@183:0>]
      end GenHcSolver.classify_pids(60983)[4] (0.000000 sec.)
      begin ApronInterface.convex_hull_interpolate(61004)[4]
        lb:(((<loop_1067@57:1> = 0) && ((<loop_1067@57:0> > 0) && (<<loop_1067@57:2>@59:0> = <loop_1067@57:1>))) ||
            ((<loop_1067@57:1> = 0) &&
             ((<<loop_1067@57:2>@59:0> = <loop_1067@57:1>) &&
              ((<loop_1067@57:0> >= 1) && (<loop_1067@57:1> < <loop_1067@57:0>)))))
        nub:false
        lb':(((<loop_1067@57:1> = 0) && ((<loop_1067@57:0> > 0) && (<<loop_1067@57:2>@59:0> = <loop_1067@57:1>))) ||
             ((<loop_1067@57:1> = 0) &&
              ((<<loop_1067@57:2>@59:0> = <loop_1067@57:1>) &&
               ((<loop_1067@57:0> >= 1) && (<loop_1067@57:1> < <loop_1067@57:0>)))))
        nub':false
        begin InterpProver.interpolate(61005)[5]
          begin InterpProver.interpolate_fresh(61006)[6]
            begin InterpProver.interpolate_log(61007)[7]
              input1: (((<loop_1067@57:1> = 0) &&
                        ((<loop_1067@57:0> > 0) && (<<loop_1067@57:2>@59:0> = <loop_1067@57:1>))) ||
                       ((<loop_1067@57:1> = 0) &&
                        ((<<loop_1067@57:2>@59:0> = <loop_1067@57:1>) &&
                         ((<loop_1067@57:0> >= 1) && (<loop_1067@57:1> < <loop_1067@57:0>)))))
              input2: false
              begin InterpProver.interpolate_check(61008)[8]
                begin InterpProver.interpolate_simplify(61009)[9]
                  begin InterpProver.interpolate_quick(61183)[10]
                    
                  end InterpProver.interpolate_quick(61183)[10] (0.000000 sec.)
                  
                end InterpProver.interpolate_simplify(61009)[9] (0.000000 sec.)
                
              end InterpProver.interpolate_check(61008)[8] (0.000000 sec.)
              output: true
            end InterpProver.interpolate_log(61007)[7] (0.001000 sec.)
            
          end InterpProver.interpolate_fresh(61006)[6] (0.001000 sec.)
          
        end InterpProver.interpolate(61005)[5] (0.001000 sec.)
        output:
          P[<<loop_1067@57:2>@59:0>](<loop_1067@57:0>:int,<loop_1067@57:1>:int,<<loop_1067@57:2>@59:0>:int) = true
          P[<<loop_1067@57:2>@90:0>](<loop_1067@57:0>:int,<loop_1067@57:1>:int,<<loop_1067@57:2>@59:0>:int) = true
          P[<<loop_1067@57:2>@183:0>](<loop_1067@57:0>:int,<loop_1067@57:1>:int,<<loop_1067@57:2>@59:0>:int) = true
      end ApronInterface.convex_hull_interpolate(61004)[4] (0.001000 sec.)
      Horn clauses:
        P[<fail_2362@191:0>](<fail_2362@191:0>:bool)|- bot
        
        P[<<loop_1067@57:2>@183:0>](<k_make_array_u_1392@188:1>:int,0:int,<k_make_array_u_1392@188:0>:int),
        ((<k_make_array_u_1392@188:1> > 0) && ((0 > <k_make_array_u_1392@188:0>) && <fail_2362@191:0>))
        |- P[<fail_2362@191:0>](<fail_2362@191:0>:bool)
        
        P[<<<loop_1067@57:2>@90:1>@106:0>](<loop_1067@57:0>:int,<loop_1067@57:1>:int,<loop_1067@57:1>:int,var672:int),
        P[<<<loop_1067@57:2>@59:1>@75:0>](<loop_1067@57:0>:int,<loop_1067@57:1>:int,<loop_1067@57:1>:int,(
                                          -1 + var673):int),
        P[<<aux_1064@153:3>@156:0>](<loop_1067@57:1>:int,<loop_1067@57:0>:int,var673:int,<<loop_1067@57:2>@183:0>:int),
        P[<loop_1067@57:1>](<loop_1067@57:0>:int,<loop_1067@57:1>:int),
        ((var673 <= <loop_1067@57:0>) && (<loop_1067@57:1> <> <<loop_1067@57:2>@183:0>))
        |- P[<<loop_1067@57:2>@183:0>](<loop_1067@57:0>:int,<loop_1067@57:1>:int,
                                       <<loop_1067@57:2>@183:0>:int)
        
        P[<aux_1064@153:4>](<aux_1064@153:0>:int,<aux_1064@153:1>:int,<aux_1064@153:2>:int,<<aux_1064@153:3>@156:0>:int),
        (<<aux_1064@153:3>@156:0> < <aux_1064@153:0>)
        |- P[<<aux_1064@153:3>@156:0>](<aux_1064@153:0>:int,<aux_1064@153:1>:int,
                                       <aux_1064@153:2>:int,<<aux_1064@153:3>@156:0>:int)
        
        P[<<<loop_1067@57:2>@90:1>@106:0>](<aux_1064@153:1>:int,<aux_1064@153:0>:int,<aux_1064@153:0>:int,var674:int),
        P[<<<loop_1067@57:2>@59:1>@75:0>](<aux_1064@153:1>:int,<aux_1064@153:0>:int,<aux_1064@153:0>:int,(
                                          -1 + <aux_1064@153:2>):int),
        P[<loop_1067@57:1>](<aux_1064@153:1>:int,<aux_1064@153:0>:int),
        ((<aux_1064@153:4> = 0) && (<aux_1064@153:2> <= <aux_1064@153:1>))
        |- P[<aux_1064@153:4>](<aux_1064@153:0>:int,<aux_1064@153:1>:int,
                               <aux_1064@153:2>:int,<aux_1064@153:4>:int)
        
        P[<loop_1067@57:1>](<loop_1067@57:0>:int,<loop_1067@57:1>:int),
        ((<loop_1067@57:1> = 0) &&
         ((<<<loop_1067@57:2>@90:1>@106:0> = 0) &&
          ((0 <= <<loop_1067@57:2>@90:0>) && ((<loop_1067@57:0> > 0) && (<<loop_1067@57:2>@90:0> < <loop_1067@57:0>)))))
        |- P[<<<loop_1067@57:2>@90:1>@106:0>](<loop_1067@57:0>:int,<loop_1067@57:1>:int,
                                              <<loop_1067@57:2>@90:0>:int,
                                              <<<loop_1067@57:2>@90:1>@106:0>:int)
        
        P[<loop_1067@57:1>](<loop_1067@57:0>:int,<loop_1067@57:1>:int),
        ((<loop_1067@57:1> = 0) &&
         ((<<<loop_1067@57:2>@59:1>@75:0> = 0) &&
          ((0 <= <<loop_1067@57:2>@59:0>) && ((<loop_1067@57:0> > 0) && (<<loop_1067@57:2>@59:0> < <loop_1067@57:0>)))))
        |- P[<<<loop_1067@57:2>@59:1>@75:0>](<loop_1067@57:0>:int,<loop_1067@57:1>:int,
                                             <<loop_1067@57:2>@59:0>:int,
                                             <<<loop_1067@57:2>@59:1>@75:0>:int)
        
         ((<loop_1067@57:1> = 0) && (<loop_1067@57:0> > 0))
        |- P[<loop_1067@57:1>](<loop_1067@57:0>:int,<loop_1067@57:1>:int)
      lower bounds:
        P[<loop_1067@57:1>](<loop_1067@57:0>:int,<loop_1067@57:1>:int) =
        ((<loop_1067@57:1> = 0) && (<loop_1067@57:0> > 0))
        P[<<<loop_1067@57:2>@90:1>@106:0>](<loop_1067@57:0>:int,<loop_1067@57:1>:int,<<loop_1067@57:2>@90:0>:int,<<<loop_1067@57:2>@90:1>@106:0>:int) =
        ((<<<loop_1067@57:2>@90:1>@106:0> = 0) &&
         ((<loop_1067@57:1> = 0) &&
          ((0 <= <<loop_1067@57:2>@90:0>) && ((<<loop_1067@57:2>@90:0> < <loop_1067@57:0>) && (<loop_1067@57:0> > 0)))))
        P[<<<loop_1067@57:2>@59:1>@75:0>](<loop_1067@57:0>:int,<loop_1067@57:1>:int,<<loop_1067@57:2>@59:0>:int,<<<loop_1067@57:2>@59:1>@75:0>:int) =
        ((<<<loop_1067@57:2>@59:1>@75:0> = 0) &&
         ((<loop_1067@57:1> = 0) &&
          ((0 <= <<loop_1067@57:2>@59:0>) && ((<<loop_1067@57:2>@59:0> < <loop_1067@57:0>) && (<loop_1067@57:0> > 0)))))
        P[<aux_1064@153:4>](<aux_1064@153:0>:int,<aux_1064@153:1>:int,<aux_1064@153:2>:int,<aux_1064@153:4>:int) =
        ((<aux_1064@153:0> = 0) &&
         ((<aux_1064@153:2> = 1) &&
          ((<aux_1064@153:4> = 0) &&
           ((<aux_1064@153:1> > 0) && ((<aux_1064@153:0> < <aux_1064@153:1>) && (<aux_1064@153:2> <= <aux_1064@153:1>))))))
        P[<<aux_1064@153:3>@156:0>](<aux_1064@153:0>:int,<aux_1064@153:1>:int,<aux_1064@153:2>:int,<<aux_1064@153:3>@156:0>:int) =
        false
        P[<<loop_1067@57:2>@183:0>](<loop_1067@57:0>:int,<loop_1067@57:1>:int,<<loop_1067@57:2>@183:0>:int) = false
        P[<fail_2362@191:0>](<fail_2362@191:0>:bool) = false
      upper bounds:
        P[<<<loop_1067@57:2>@90:1>@106:0>](var704:int,var705:int,var706:int,var707:int) = true
        P[<<<loop_1067@57:2>@59:1>@75:0>](var695:int,var696:int,var697:int,var698:int) = true
      begin GenHcSolver.classify_pids(76721)[4]
        output:
          [<<<loop_1067@57:2>@59:1>@75:0>;<<<loop_1067@57:2>@90:1>@106:0>]
      end GenHcSolver.classify_pids(76721)[4] (0.000000 sec.)
      begin ApronInterface.convex_hull_interpolate(76732)[4]
        lb:((<<<loop_1067@57:2>@59:1>@75:0> = 0) &&
            ((<loop_1067@57:1> = 0) &&
             ((0 <= <<loop_1067@57:2>@59:0>) &&
              ((<<loop_1067@57:2>@59:0> < <loop_1067@57:0>) && (<loop_1067@57:0> > 0)))))
        nub:false
        lb':((<<<loop_1067@57:2>@59:1>@75:0> = 0) &&
             ((<loop_1067@57:1> = 0) &&
              ((0 <= <<loop_1067@57:2>@59:0>) &&
               ((<<loop_1067@57:2>@59:0> < <loop_1067@57:0>) && (<loop_1067@57:0> > 0)))))
        nub':false
        begin InterpProver.interpolate(76733)[5]
          begin InterpProver.interpolate_fresh(76734)[6]
            begin InterpProver.interpolate_log(76735)[7]
              input1: ((<<<loop_1067@57:2>@59:1>@75:0> = 0) &&
                       ((<loop_1067@57:1> = 0) &&
                        ((0 <= <<loop_1067@57:2>@59:0>) &&
                         ((<<loop_1067@57:2>@59:0> < <loop_1067@57:0>) && (<loop_1067@57:0> > 0)))))
              input2: false
              begin InterpProver.interpolate_check(76736)[8]
                begin InterpProver.interpolate_simplify(76737)[9]
                  begin InterpProver.interpolate_quick(76887)[10]
                    
                  end InterpProver.interpolate_quick(76887)[10] (0.002000 sec.)
                  
                end InterpProver.interpolate_simplify(76737)[9] (0.002000 sec.)
                
              end InterpProver.interpolate_check(76736)[8] (0.002000 sec.)
              output: true
            end InterpProver.interpolate_log(76735)[7] (0.003000 sec.)
            
          end InterpProver.interpolate_fresh(76734)[6] (0.003000 sec.)
          
        end InterpProver.interpolate(76733)[5] (0.003000 sec.)
        output:
          P[<<<loop_1067@57:2>@59:1>@75:0>](<loop_1067@57:0>:int,<loop_1067@57:1>:int,<<loop_1067@57:2>@59:0>:int,<<<loop_1067@57:2>@59:1>@75:0>:int) =
          true
          P[<<<loop_1067@57:2>@90:1>@106:0>](<loop_1067@57:0>:int,<loop_1067@57:1>:int,<<loop_1067@57:2>@59:0>:int,<<<loop_1067@57:2>@59:1>@75:0>:int) =
          true
      end ApronInterface.convex_hull_interpolate(76732)[4] (0.003000 sec.)
      Horn clauses:
        P[<fail_2362@191:0>](<fail_2362@191:0>:bool)|- bot
        
        P[<<loop_1067@57:2>@183:0>](<k_make_array_u_1392@188:1>:int,0:int,<k_make_array_u_1392@188:0>:int),
        ((<k_make_array_u_1392@188:1> > 0) && ((0 > <k_make_array_u_1392@188:0>) && <fail_2362@191:0>))
        |- P[<fail_2362@191:0>](<fail_2362@191:0>:bool)
        
        P[<<aux_1064@153:3>@156:0>](<loop_1067@57:1>:int,<loop_1067@57:0>:int,var673:int,<<loop_1067@57:2>@183:0>:int),
        P[<loop_1067@57:1>](<loop_1067@57:0>:int,<loop_1067@57:1>:int),
        ((var673 <= <loop_1067@57:0>) && (<loop_1067@57:1> <> <<loop_1067@57:2>@183:0>))
        |- P[<<loop_1067@57:2>@183:0>](<loop_1067@57:0>:int,<loop_1067@57:1>:int,
                                       <<loop_1067@57:2>@183:0>:int)
        
        P[<aux_1064@153:4>](<aux_1064@153:0>:int,<aux_1064@153:1>:int,<aux_1064@153:2>:int,<<aux_1064@153:3>@156:0>:int),
        (<<aux_1064@153:3>@156:0> < <aux_1064@153:0>)
        |- P[<<aux_1064@153:3>@156:0>](<aux_1064@153:0>:int,<aux_1064@153:1>:int,
                                       <aux_1064@153:2>:int,<<aux_1064@153:3>@156:0>:int)
        
        P[<loop_1067@57:1>](<aux_1064@153:1>:int,<aux_1064@153:0>:int),
        ((<aux_1064@153:4> = 0) && (<aux_1064@153:2> <= <aux_1064@153:1>))
        |- P[<aux_1064@153:4>](<aux_1064@153:0>:int,<aux_1064@153:1>:int,
                               <aux_1064@153:2>:int,<aux_1064@153:4>:int)
        
         ((<loop_1067@57:1> = 0) && (<loop_1067@57:0> > 0))
        |- P[<loop_1067@57:1>](<loop_1067@57:0>:int,<loop_1067@57:1>:int)
      lower bounds:
        P[<loop_1067@57:1>](<loop_1067@57:0>:int,<loop_1067@57:1>:int) =
        ((<loop_1067@57:1> = 0) && (<loop_1067@57:0> > 0))
        P[<aux_1064@153:4>](<aux_1064@153:0>:int,<aux_1064@153:1>:int,<aux_1064@153:2>:int,<aux_1064@153:4>:int) =
        ((<aux_1064@153:4> = 0) &&
         ((<aux_1064@153:0> = 0) && ((<aux_1064@153:2> <= <aux_1064@153:1>) && (<aux_1064@153:1> > 0))))
        P[<<aux_1064@153:3>@156:0>](<aux_1064@153:0>:int,<aux_1064@153:1>:int,<aux_1064@153:2>:int,<<aux_1064@153:3>@156:0>:int) =
        false
        P[<<loop_1067@57:2>@183:0>](<loop_1067@57:0>:int,<loop_1067@57:1>:int,<<loop_1067@57:2>@183:0>:int) = false
        P[<fail_2362@191:0>](<fail_2362@191:0>:bool) = false
      upper bounds:
        P[<fail_2362@191:0>](var709:bool) = true
      begin GenHcSolver.classify_pids(81177)[4]
        output:
          [<fail_2362@191:0>]
      end GenHcSolver.classify_pids(81177)[4] (0.000000 sec.)
      lb:false
      nub:false
      begin ApronInterface.convex_hull_interpolate(81180)[4]
        lb:false
        nub:false
        lb':false
        nub':false
        begin InterpProver.interpolate(81181)[5]
          begin InterpProver.interpolate_fresh(81182)[6]
            begin InterpProver.interpolate_log(81183)[7]
              input1: false
              input2: false
              begin InterpProver.interpolate_check(81184)[8]
                begin InterpProver.interpolate_simplify(81185)[9]
                  begin InterpProver.interpolate_quick(81198)[10]
                    
                  end InterpProver.interpolate_quick(81198)[10] (0.000000 sec.)
                  begin minimizing # of disjunctions(81202)[10]
                    input: false
                    output: false
                  end minimizing # of disjunctions(81202)[10] (0.000000 sec.)
                  
                end InterpProver.interpolate_simplify(81185)[9] (0.000000 sec.)
                
              end InterpProver.interpolate_check(81184)[8] (0.000000 sec.)
              output: false
            end InterpProver.interpolate_log(81183)[7] (0.000000 sec.)
            
          end InterpProver.interpolate_fresh(81182)[6] (0.000000 sec.)
          
        end InterpProver.interpolate(81181)[5] (0.000000 sec.)
        output:
          P[<fail_2362@191:0>](<fail_2362@191:0>:bool) = false
      end ApronInterface.convex_hull_interpolate(81180)[4] (0.000000 sec.)
      Horn clauses:
        P[<<loop_1067@57:2>@183:0>](<k_make_array_u_1392@188:1>:int,0:int,<k_make_array_u_1392@188:0>:int),
        ((0 > <k_make_array_u_1392@188:0>) && (<k_make_array_u_1392@188:1> > 0)) |- bot
        
        P[<<aux_1064@153:3>@156:0>](<loop_1067@57:1>:int,<loop_1067@57:0>:int,var673:int,<<loop_1067@57:2>@183:0>:int),
        P[<loop_1067@57:1>](<loop_1067@57:0>:int,<loop_1067@57:1>:int),
        ((var673 <= <loop_1067@57:0>) && (<loop_1067@57:1> <> <<loop_1067@57:2>@183:0>))
        |- P[<<loop_1067@57:2>@183:0>](<loop_1067@57:0>:int,<loop_1067@57:1>:int,
                                       <<loop_1067@57:2>@183:0>:int)
        
        P[<aux_1064@153:4>](<aux_1064@153:0>:int,<aux_1064@153:1>:int,<aux_1064@153:2>:int,<<aux_1064@153:3>@156:0>:int),
        (<<aux_1064@153:3>@156:0> < <aux_1064@153:0>)
        |- P[<<aux_1064@153:3>@156:0>](<aux_1064@153:0>:int,<aux_1064@153:1>:int,
                                       <aux_1064@153:2>:int,<<aux_1064@153:3>@156:0>:int)
        
        P[<loop_1067@57:1>](<aux_1064@153:1>:int,<aux_1064@153:0>:int),
        ((<aux_1064@153:4> = 0) && (<aux_1064@153:2> <= <aux_1064@153:1>))
        |- P[<aux_1064@153:4>](<aux_1064@153:0>:int,<aux_1064@153:1>:int,
                               <aux_1064@153:2>:int,<aux_1064@153:4>:int)
        
         ((<loop_1067@57:1> = 0) && (<loop_1067@57:0> > 0))
        |- P[<loop_1067@57:1>](<loop_1067@57:0>:int,<loop_1067@57:1>:int)
      lower bounds:
        P[<loop_1067@57:1>](<loop_1067@57:0>:int,<loop_1067@57:1>:int) =
        ((<loop_1067@57:1> = 0) && (<loop_1067@57:0> > 0))
        P[<aux_1064@153:4>](<aux_1064@153:0>:int,<aux_1064@153:1>:int,<aux_1064@153:2>:int,<aux_1064@153:4>:int) =
        ((<aux_1064@153:4> = 0) &&
         ((<aux_1064@153:0> = 0) && ((<aux_1064@153:2> <= <aux_1064@153:1>) && (<aux_1064@153:1> > 0))))
        P[<<aux_1064@153:3>@156:0>](<aux_1064@153:0>:int,<aux_1064@153:1>:int,<aux_1064@153:2>:int,<<aux_1064@153:3>@156:0>:int) =
        false
        P[<<loop_1067@57:2>@183:0>](<loop_1067@57:0>:int,<loop_1067@57:1>:int,<<loop_1067@57:2>@183:0>:int) = false
      upper bounds:
        P[<<loop_1067@57:2>@183:0>](var713:int,var714:int,var715:int) = true
      begin GenHcSolver.classify_pids(83270)[4]
        output:
          [<<loop_1067@57:2>@183:0>]
      end GenHcSolver.classify_pids(83270)[4] (0.000000 sec.)
      lb:false
      nub:false
      begin ApronInterface.convex_hull_interpolate(83273)[4]
        lb:false
        nub:false
        lb':false
        nub':false
        begin InterpProver.interpolate(83274)[5]
          begin InterpProver.interpolate_fresh(83275)[6]
            begin InterpProver.interpolate_log(83276)[7]
              input1: false
              input2: false
              begin InterpProver.interpolate_check(83277)[8]
                begin InterpProver.interpolate_simplify(83278)[9]
                  begin InterpProver.interpolate_quick(83291)[10]
                    
                  end InterpProver.interpolate_quick(83291)[10] (0.000000 sec.)
                  begin minimizing # of disjunctions(83295)[10]
                    input: false
                    output: false
                  end minimizing # of disjunctions(83295)[10] (0.000000 sec.)
                  
                end InterpProver.interpolate_simplify(83278)[9] (0.000000 sec.)
                
              end InterpProver.interpolate_check(83277)[8] (0.000000 sec.)
              output: false
            end InterpProver.interpolate_log(83276)[7] (0.000000 sec.)
            
          end InterpProver.interpolate_fresh(83275)[6] (0.000000 sec.)
          
        end InterpProver.interpolate(83274)[5] (0.000000 sec.)
        output:
          P[<<loop_1067@57:2>@183:0>](<loop_1067@57:0>:int,<loop_1067@57:1>:int,<<loop_1067@57:2>@183:0>:int) = false
      end ApronInterface.convex_hull_interpolate(83273)[4] (0.000000 sec.)
      Horn clauses:
        P[<<aux_1064@153:3>@156:0>](<loop_1067@57:1>:int,<loop_1067@57:0>:int,var673:int,<<loop_1067@57:2>@183:0>:int),
        P[<loop_1067@57:1>](<loop_1067@57:0>:int,<loop_1067@57:1>:int),
        ((var673 <= <loop_1067@57:0>) && (<loop_1067@57:1> <> <<loop_1067@57:2>@183:0>)) |- bot
        
        P[<aux_1064@153:4>](<aux_1064@153:0>:int,<aux_1064@153:1>:int,<aux_1064@153:2>:int,<<aux_1064@153:3>@156:0>:int),
        (<<aux_1064@153:3>@156:0> < <aux_1064@153:0>)
        |- P[<<aux_1064@153:3>@156:0>](<aux_1064@153:0>:int,<aux_1064@153:1>:int,
                                       <aux_1064@153:2>:int,<<aux_1064@153:3>@156:0>:int)
        
        P[<loop_1067@57:1>](<aux_1064@153:1>:int,<aux_1064@153:0>:int),
        ((<aux_1064@153:4> = 0) && (<aux_1064@153:2> <= <aux_1064@153:1>))
        |- P[<aux_1064@153:4>](<aux_1064@153:0>:int,<aux_1064@153:1>:int,
                               <aux_1064@153:2>:int,<aux_1064@153:4>:int)
        
         ((<loop_1067@57:1> = 0) && (<loop_1067@57:0> > 0))
        |- P[<loop_1067@57:1>](<loop_1067@57:0>:int,<loop_1067@57:1>:int)
      lower bounds:
        P[<loop_1067@57:1>](<loop_1067@57:0>:int,<loop_1067@57:1>:int) =
        ((<loop_1067@57:1> = 0) && (<loop_1067@57:0> > 0))
        P[<aux_1064@153:4>](<aux_1064@153:0>:int,<aux_1064@153:1>:int,<aux_1064@153:2>:int,<aux_1064@153:4>:int) =
        ((<aux_1064@153:4> = 0) &&
         ((<aux_1064@153:0> = 0) && ((<aux_1064@153:2> <= <aux_1064@153:1>) && (<aux_1064@153:1> > 0))))
        P[<<aux_1064@153:3>@156:0>](<aux_1064@153:0>:int,<aux_1064@153:1>:int,<aux_1064@153:2>:int,<<aux_1064@153:3>@156:0>:int) =
        false
      upper bounds:
        P[<<aux_1064@153:3>@156:0>](var720:int,var721:int,var722:int,var723:int) = true
      begin GenHcSolver.classify_pids(85272)[4]
        output:
          [<<aux_1064@153:3>@156:0>]
      end GenHcSolver.classify_pids(85272)[4] (0.000000 sec.)
      lb:false
      nub:false
      begin ApronInterface.convex_hull_interpolate(85275)[4]
        lb:false
        nub:false
        lb':false
        nub':false
        begin InterpProver.interpolate(85276)[5]
          begin InterpProver.interpolate_fresh(85277)[6]
            begin InterpProver.interpolate_log(85278)[7]
              input1: false
              input2: false
              begin InterpProver.interpolate_check(85279)[8]
                begin InterpProver.interpolate_simplify(85280)[9]
                  begin InterpProver.interpolate_quick(85293)[10]
                    
                  end InterpProver.interpolate_quick(85293)[10] (0.000000 sec.)
                  begin minimizing # of disjunctions(85297)[10]
                    input: false
                    output: false
                  end minimizing # of disjunctions(85297)[10] (0.000000 sec.)
                  
                end InterpProver.interpolate_simplify(85280)[9] (0.000000 sec.)
                
              end InterpProver.interpolate_check(85279)[8] (0.000000 sec.)
              output: false
            end InterpProver.interpolate_log(85278)[7] (0.000000 sec.)
            
          end InterpProver.interpolate_fresh(85277)[6] (0.000000 sec.)
          
        end InterpProver.interpolate(85276)[5] (0.000000 sec.)
        output:
          P[<<aux_1064@153:3>@156:0>](<aux_1064@153:0>:int,<aux_1064@153:1>:int,<aux_1064@153:2>:int,<<aux_1064@153:3>@156:0>:int) =
          false
      end ApronInterface.convex_hull_interpolate(85275)[4] (0.000000 sec.)
      Horn clauses:
        P[<aux_1064@153:4>](<aux_1064@153:0>:int,<aux_1064@153:1>:int,<aux_1064@153:2>:int,<<aux_1064@153:3>@156:0>:int),
        (<<aux_1064@153:3>@156:0> < <aux_1064@153:0>) |- bot
        
        P[<loop_1067@57:1>](<aux_1064@153:1>:int,<aux_1064@153:0>:int),
        ((<aux_1064@153:4> = 0) && (<aux_1064@153:2> <= <aux_1064@153:1>))
        |- P[<aux_1064@153:4>](<aux_1064@153:0>:int,<aux_1064@153:1>:int,
                               <aux_1064@153:2>:int,<aux_1064@153:4>:int)
        
         ((<loop_1067@57:1> = 0) && (<loop_1067@57:0> > 0))
        |- P[<loop_1067@57:1>](<loop_1067@57:0>:int,<loop_1067@57:1>:int)
      lower bounds:
        P[<loop_1067@57:1>](<loop_1067@57:0>:int,<loop_1067@57:1>:int) =
        ((<loop_1067@57:1> = 0) && (<loop_1067@57:0> > 0))
        P[<aux_1064@153:4>](<aux_1064@153:0>:int,<aux_1064@153:1>:int,<aux_1064@153:2>:int,<aux_1064@153:4>:int) =
        ((<aux_1064@153:4> = 0) &&
         ((<aux_1064@153:0> = 0) && ((<aux_1064@153:2> <= <aux_1064@153:1>) && (<aux_1064@153:1> > 0))))
      upper bounds:
        P[<aux_1064@153:4>](var724:int,var725:int,var726:int,var727:int) = (var727 >= var724)
      begin GenHcSolver.classify_pids(86863)[4]
        output:
          [<aux_1064@153:4>]
      end GenHcSolver.classify_pids(86863)[4] (0.000000 sec.)
      lb:((<aux_1064@153:4> = 0) &&
          ((<aux_1064@153:0> = 0) && ((<aux_1064@153:2> <= <aux_1064@153:1>) && (<aux_1064@153:1> > 0))))
      nub:(not (<aux_1064@153:4> >= <aux_1064@153:0>))
      begin ApronInterface.convex_hull_interpolate(86866)[4]
        lb:((<aux_1064@153:4> = 0) &&
            ((<aux_1064@153:0> = 0) && ((<aux_1064@153:2> <= <aux_1064@153:1>) && (<aux_1064@153:1> > 0))))
        nub:(not (<aux_1064@153:4> >= <aux_1064@153:0>))
        lb':((<aux_1064@153:4> = 0) &&
             ((<aux_1064@153:0> = 0) && ((<aux_1064@153:2> <= <aux_1064@153:1>) && (<aux_1064@153:1> > 0))))
        nub':(not (<aux_1064@153:4> >= <aux_1064@153:0>))
        begin InterpProver.interpolate(86867)[5]
          begin InterpProver.interpolate_fresh(86868)[6]
            begin InterpProver.interpolate_log(86869)[7]
              input1: ((<aux_1064@153:4> = 0) &&
                       ((<aux_1064@153:0> = 0) && ((<aux_1064@153:2> <= <aux_1064@153:1>) && (<aux_1064@153:1> > 0))))
              input2: (not (<aux_1064@153:4> >= <aux_1064@153:0>))
              begin InterpProver.interpolate_check(86870)[8]
                begin InterpProver.interpolate_simplify(86871)[9]
                  begin InterpProver.interpolate_quick(86958)[10]
                    begin CsisatInterface.interpolate_csisat_wrap(86967)[11]
                      begin CsisatInterface.interpolate_csisat_post_process(86968)[12]
                        begin CsisatInterface.interpolate_csisat_log(86969)[13]
                          input1: (0 = v_sep_aux_1064_sep_153_sep_0 & 0 = v_sep_aux_1064_sep_153_sep_4 & 1 <= v_sep_aux_1064_sep_153_sep_1 & v_sep_aux_1064_sep_153_sep_2 <= v_sep_aux_1064_sep_153_sep_1)
                          input2: (1 + v_sep_aux_1064_sep_153_sep_4) <= v_sep_aux_1064_sep_153_sep_0
                          begin CsisatInterface.interpolate_csisat_raw(86970)[14]
                            
                          end CsisatInterface.interpolate_csisat_raw(86970)[14] (0.000000 sec.)
                          output: (-2*v_sep_aux_1064_sep_153_sep_4 + 2*v_sep_aux_1064_sep_153_sep_0) <= 0
                          
                        end CsisatInterface.interpolate_csisat_log(86969)[13] (0.000000 sec.)
                        after simplification: (-2*v_sep_aux_1064_sep_153_sep_4 + 2*v_sep_aux_1064_sep_153_sep_0) <= 0
                        after dnf conversion: (((-2*v_sep_aux_1064_sep_153_sep_4 + 2*v_sep_aux_1064_sep_153_sep_0) <= 0))
                        
                      end CsisatInterface.interpolate_csisat_post_process(86968)[12] (0.000000 sec.)
                      
                    end CsisatInterface.interpolate_csisat_wrap(86967)[11] (0.000000 sec.)
                    
                  end InterpProver.interpolate_quick(86958)[10] (0.001000 sec.)
                  
                end InterpProver.interpolate_simplify(86871)[9] (0.001000 sec.)
                
              end InterpProver.interpolate_check(86870)[8] (0.002000 sec.)
              output: (<aux_1064@153:0> <= <aux_1064@153:4>)
            end InterpProver.interpolate_log(86869)[7] (0.002999 sec.)
            
          end InterpProver.interpolate_fresh(86868)[6] (0.002999 sec.)
          
        end InterpProver.interpolate(86867)[5] (0.002999 sec.)
        output:
          P[<aux_1064@153:4>](<aux_1064@153:0>:int,<aux_1064@153:1>:int,<aux_1064@153:2>:int,<aux_1064@153:4>:int) =
          (<aux_1064@153:0> <= <aux_1064@153:4>)
      end ApronInterface.convex_hull_interpolate(86866)[4] (0.002999 sec.)
      Horn clauses:
        P[<loop_1067@57:1>](<aux_1064@153:1>:int,<aux_1064@153:0>:int), (<aux_1064@153:0> > 0) |- bot
        
         ((<loop_1067@57:1> = 0) && (<loop_1067@57:0> > 0))
        |- P[<loop_1067@57:1>](<loop_1067@57:0>:int,<loop_1067@57:1>:int)
      lower bounds:
        P[<loop_1067@57:1>](<loop_1067@57:0>:int,<loop_1067@57:1>:int) =
        ((<loop_1067@57:1> = 0) && (<loop_1067@57:0> > 0))
      upper bounds:
        P[<loop_1067@57:1>](var728:int,var729:int) = (var729 <= 0)
      begin GenHcSolver.classify_pids(87779)[4]
        output:
          [<loop_1067@57:1>]
      end GenHcSolver.classify_pids(87779)[4] (0.000000 sec.)
      lb:((<loop_1067@57:1> = 0) && (<loop_1067@57:0> > 0))
      nub:(not (<loop_1067@57:1> <= 0))
      begin ApronInterface.convex_hull_interpolate(87782)[4]
        lb:((<loop_1067@57:1> = 0) && (<loop_1067@57:0> > 0))
        nub:(not (<loop_1067@57:1> <= 0))
        lb':((<loop_1067@57:1> = 0) && (<loop_1067@57:0> > 0))
        nub':(not (<loop_1067@57:1> <= 0))
        begin InterpProver.interpolate(87783)[5]
          begin InterpProver.interpolate_fresh(87784)[6]
            begin InterpProver.interpolate_log(87785)[7]
              input1: ((<loop_1067@57:1> = 0) && (<loop_1067@57:0> > 0))
              input2: (not (<loop_1067@57:1> <= 0))
              begin InterpProver.interpolate_check(87786)[8]
                begin InterpProver.interpolate_simplify(87787)[9]
                  begin InterpProver.interpolate_quick(87816)[10]
                    begin CsisatInterface.interpolate_csisat_wrap(87825)[11]
                      begin CsisatInterface.interpolate_csisat_post_process(87826)[12]
                        begin CsisatInterface.interpolate_csisat_log(87827)[13]
                          input1: (0 = v_sep_loop_1067_sep_57_sep_1 & 1 <= v_sep_loop_1067_sep_57_sep_0)
                          input2: 1 <= v_sep_loop_1067_sep_57_sep_1
                          begin CsisatInterface.interpolate_csisat_raw(87828)[14]
                            
                          end CsisatInterface.interpolate_csisat_raw(87828)[14] (0.000000 sec.)
                          output: 2*v_sep_loop_1067_sep_57_sep_1 <= 0
                          
                        end CsisatInterface.interpolate_csisat_log(87827)[13] (0.000000 sec.)
                        after simplification: 2*v_sep_loop_1067_sep_57_sep_1 <= 0
                        after dnf conversion: ((2*v_sep_loop_1067_sep_57_sep_1 <= 0))
                        
                      end CsisatInterface.interpolate_csisat_post_process(87826)[12] (0.000000 sec.)
                      
                    end CsisatInterface.interpolate_csisat_wrap(87825)[11] (0.000000 sec.)
                    
                  end InterpProver.interpolate_quick(87816)[10] (0.000000 sec.)
                  
                end InterpProver.interpolate_simplify(87787)[9] (0.000000 sec.)
                
              end InterpProver.interpolate_check(87786)[8] (0.001000 sec.)
              output: (<loop_1067@57:1> <= 0)
            end InterpProver.interpolate_log(87785)[7] (0.001000 sec.)
            
          end InterpProver.interpolate_fresh(87784)[6] (0.001000 sec.)
          
        end InterpProver.interpolate(87783)[5] (0.001000 sec.)
        output:
          P[<loop_1067@57:1>](<loop_1067@57:0>:int,<loop_1067@57:1>:int) = (<loop_1067@57:1> <= 0)
      end ApronInterface.convex_hull_interpolate(87782)[4] (0.001000 sec.)
      begin HcSolver.check_validity(87965)[4]
        input:
          P[<fail_2362@191:0>](<fail_2362@191:0>:bool)|- bot
          
          P[<<loop_1067@57:2>@183:0>](<k_make_array_u_1392@188:1>:int,0:int,<k_make_array_u_1392@188:0>:int),
          ((<k_make_array_u_1392@188:1> > 0) && ((0 > <k_make_array_u_1392@188:0>) && <fail_2362@191:0>))
          |- P[<fail_2362@191:0>](<fail_2362@191:0>:bool)
          
          P[<<<loop_1067@57:2>@90:1>@106:0>](<loop_1067@57:0>:int,<loop_1067@57:1>:int,<loop_1067@57:1>:int,var672:int),
          P[<<<loop_1067@57:2>@59:1>@75:0>](<loop_1067@57:0>:int,<loop_1067@57:1>:int,<loop_1067@57:1>:int,(
                                            -1 + var673):int),
          P[<<aux_1064@153:3>@156:0>](<loop_1067@57:1>:int,<loop_1067@57:0>:int,var673:int,<<loop_1067@57:2>@183:0>:int),
          P[<loop_1067@57:1>](<loop_1067@57:0>:int,<loop_1067@57:1>:int),
          ((var673 <= <loop_1067@57:0>) && (<loop_1067@57:1> <> <<loop_1067@57:2>@183:0>))
          |- P[<<loop_1067@57:2>@183:0>](<loop_1067@57:0>:int,<loop_1067@57:1>:int,
                                         <<loop_1067@57:2>@183:0>:int)
          
          P[<aux_1064@153:4>](<aux_1064@153:0>:int,<aux_1064@153:1>:int,<aux_1064@153:2>:int,<<aux_1064@153:3>@156:0>:int),
          (<<aux_1064@153:3>@156:0> < <aux_1064@153:0>)
          |- P[<<aux_1064@153:3>@156:0>](<aux_1064@153:0>:int,<aux_1064@153:1>:int,
                                         <aux_1064@153:2>:int,<<aux_1064@153:3>@156:0>:int)
          
          P[<<<loop_1067@57:2>@90:1>@106:0>](<aux_1064@153:1>:int,<aux_1064@153:0>:int,<aux_1064@153:0>:int,var674:int),
          P[<<<loop_1067@57:2>@59:1>@75:0>](<aux_1064@153:1>:int,<aux_1064@153:0>:int,<aux_1064@153:0>:int,(
                                            -1 + <aux_1064@153:2>):int),
          P[<loop_1067@57:1>](<aux_1064@153:1>:int,<aux_1064@153:0>:int),
          ((<aux_1064@153:4> = 0) && (<aux_1064@153:2> <= <aux_1064@153:1>))
          |- P[<aux_1064@153:4>](<aux_1064@153:0>:int,<aux_1064@153:1>:int,
                                 <aux_1064@153:2>:int,<aux_1064@153:4>:int)
          
          P[<<loop_1067@57:2>@90:0>](<loop_1067@57:0>:int,0:int,<<loop_1067@57:2>@90:0>:int),
          P[<loop_1067@57:1>](<loop_1067@57:0>:int,<loop_1067@57:1>:int),
          ((<loop_1067@57:1> = 0) &&
           ((<<<loop_1067@57:2>@90:1>@106:0> = 0) &&
            ((0 <= <<loop_1067@57:2>@90:0>) && ((<loop_1067@57:0> > 0) && (<<loop_1067@57:2>@90:0> < <loop_1067@57:0>)))))
          |- P[<<<loop_1067@57:2>@90:1>@106:0>](<loop_1067@57:0>:int,
                                                <loop_1067@57:1>:int,
                                                <<loop_1067@57:2>@90:0>:int,
                                                <<<loop_1067@57:2>@90:1>@106:0>:int)
          
          P[<<<loop_1067@57:2>@59:1>@75:0>](<loop_1067@57:0>:int,<loop_1067@57:1>:int,<loop_1067@57:1>:int,var675:int),
          P[<loop_1067@57:1>](<loop_1067@57:0>:int,<loop_1067@57:1>:int),
          (((1 + var675) <= <loop_1067@57:0>) && (<<loop_1067@57:2>@90:0> = <loop_1067@57:1>))
          |- P[<<loop_1067@57:2>@90:0>](<loop_1067@57:0>:int,<loop_1067@57:1>:int,
                                        <<loop_1067@57:2>@90:0>:int)
          
          P[<<loop_1067@57:2>@59:0>](<loop_1067@57:0>:int,0:int,<<loop_1067@57:2>@59:0>:int),
          P[<loop_1067@57:1>](<loop_1067@57:0>:int,<loop_1067@57:1>:int),
          ((<loop_1067@57:1> = 0) &&
           ((<<<loop_1067@57:2>@59:1>@75:0> = 0) &&
            ((0 <= <<loop_1067@57:2>@59:0>) && ((<loop_1067@57:0> > 0) && (<<loop_1067@57:2>@59:0> < <loop_1067@57:0>)))))
          |- P[<<<loop_1067@57:2>@59:1>@75:0>](<loop_1067@57:0>:int,<loop_1067@57:1>:int,
                                               <<loop_1067@57:2>@59:0>:int,
                                               <<<loop_1067@57:2>@59:1>@75:0>:int)
          
          P[<loop_1067@57:1>](<loop_1067@57:0>:int,<loop_1067@57:1>:int), (
          <<loop_1067@57:2>@59:0> = <loop_1067@57:1>)
          |- P[<<loop_1067@57:2>@59:0>](<loop_1067@57:0>:int,<loop_1067@57:1>:int,
                                        <<loop_1067@57:2>@59:0>:int)
          
           ((<loop_1067@57:1> = 0) && (<loop_1067@57:0> > 0))
          |- P[<loop_1067@57:1>](<loop_1067@57:0>:int,<loop_1067@57:1>:int)
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        
      end HcSolver.check_validity(87965)[4] (0.006998 sec.)
      solution:
        P[<fail_2362@191:0>](<fail_2362@191:0>:bool) = false
        P[<<loop_1067@57:2>@183:0>](<loop_1067@57:0>:int,<loop_1067@57:1>:int,<<loop_1067@57:2>@183:0>:int) = false
        P[<<aux_1064@153:3>@156:0>](<aux_1064@153:0>:int,<aux_1064@153:1>:int,<aux_1064@153:2>:int,<<aux_1064@153:3>@156:0>:int) =
        false
        P[<aux_1064@153:4>](<aux_1064@153:0>:int,<aux_1064@153:1>:int,<aux_1064@153:2>:int,<aux_1064@153:4>:int) =
        (<aux_1064@153:0> <= <aux_1064@153:4>)
        P[<<<loop_1067@57:2>@90:1>@106:0>](<loop_1067@57:0>:int,<loop_1067@57:1>:int,<<loop_1067@57:2>@59:0>:int,<<<loop_1067@57:2>@59:1>@75:0>:int) =
        true
        P[<<loop_1067@57:2>@90:0>](<loop_1067@57:0>:int,<loop_1067@57:1>:int,<<loop_1067@57:2>@59:0>:int) = true
        P[<<<loop_1067@57:2>@59:1>@75:0>](<loop_1067@57:0>:int,<loop_1067@57:1>:int,<<loop_1067@57:2>@59:0>:int,<<<loop_1067@57:2>@59:1>@75:0>:int) =
        true
        P[<<loop_1067@57:2>@59:0>](<loop_1067@57:0>:int,<loop_1067@57:1>:int,<<loop_1067@57:2>@59:0>:int) = true
        P[<loop_1067@57:1>](<loop_1067@57:0>:int,<loop_1067@57:1>:int) = (<loop_1067@57:1> <= 0)
    end GenHcSolver.solve(43997)[3] (0.245962 sec.)
    begin GenHcSolver.solve(89266)[3]
      Horn clauses:
        P[<fail_2362@191:0>](<fail_2362@191:0>:bool)|- bot
        
        P[<<loop_1067@57:2>@183:0>](<k_make_array_u_1392@188:1>:int,0:int,<k_make_array_u_1392@188:0>:int),
        ((<k_make_array_u_1392@188:1> > 0) && ((0 > <k_make_array_u_1392@188:0>) && <fail_2362@191:0>))
        |- P[<fail_2362@191:0>](<fail_2362@191:0>:bool)
        
        P[<<<loop_1067@57:2>@90:1>@106:0>](<loop_1067@57:0>:int,<loop_1067@57:1>:int,<loop_1067@57:1>:int,var672:int),
        P[<<<loop_1067@57:2>@59:1>@75:0>](<loop_1067@57:0>:int,<loop_1067@57:1>:int,<loop_1067@57:1>:int,(
                                          -1 + var673):int),
        P[<<aux_1064@153:3>@156:0>](<loop_1067@57:1>:int,<loop_1067@57:0>:int,var673:int,<<loop_1067@57:2>@183:0>:int),
        P[<loop_1067@57:1>](<loop_1067@57:0>:int,<loop_1067@57:1>:int),
        ((var673 <= <loop_1067@57:0>) && (<loop_1067@57:1> <> <<loop_1067@57:2>@183:0>))
        |- P[<<loop_1067@57:2>@183:0>](<loop_1067@57:0>:int,<loop_1067@57:1>:int,
                                       <<loop_1067@57:2>@183:0>:int)
        
        P[<aux_1064@153:4>](<aux_1064@153:0>:int,<aux_1064@153:1>:int,<aux_1064@153:2>:int,<<aux_1064@153:3>@156:0>:int),
        (<<aux_1064@153:3>@156:0> < <aux_1064@153:0>)
        |- P[<<aux_1064@153:3>@156:0>](<aux_1064@153:0>:int,<aux_1064@153:1>:int,
                                       <aux_1064@153:2>:int,<<aux_1064@153:3>@156:0>:int)
        
        P[<<<loop_1067@57:2>@90:1>@106:0>](<aux_1064@153:1>:int,<aux_1064@153:0>:int,<aux_1064@153:0>:int,var674:int),
        P[<<<loop_1067@57:2>@59:1>@75:0>](<aux_1064@153:1>:int,<aux_1064@153:0>:int,<aux_1064@153:0>:int,(
                                          -1 + <aux_1064@153:2>):int),
        P[<loop_1067@57:1>](<aux_1064@153:1>:int,<aux_1064@153:0>:int),
        ((<aux_1064@153:4> = 0) && (<aux_1064@153:2> <= <aux_1064@153:1>))
        |- P[<aux_1064@153:4>](<aux_1064@153:0>:int,<aux_1064@153:1>:int,
                               <aux_1064@153:2>:int,<aux_1064@153:4>:int)
        
        P[<<loop_1067@57:2>@90:0>](<loop_1067@57:0>:int,0:int,<<loop_1067@57:2>@90:0>:int),
        P[<loop_1067@57:1>](<loop_1067@57:0>:int,<loop_1067@57:1>:int),
        ((<loop_1067@57:1> = 0) &&
         ((<<<loop_1067@57:2>@90:1>@106:0> = 0) &&
          ((0 <= <<loop_1067@57:2>@90:0>) && ((<loop_1067@57:0> > 0) && (<<loop_1067@57:2>@90:0> < <loop_1067@57:0>)))))
        |- P[<<<loop_1067@57:2>@90:1>@106:0>](<loop_1067@57:0>:int,<loop_1067@57:1>:int,
                                              <<loop_1067@57:2>@90:0>:int,
                                              <<<loop_1067@57:2>@90:1>@106:0>:int)
        
        P[<<<loop_1067@57:2>@59:1>@75:0>](<loop_1067@57:0>:int,<loop_1067@57:1>:int,<loop_1067@57:1>:int,var675:int),
        P[<loop_1067@57:1>](<loop_1067@57:0>:int,<loop_1067@57:1>:int),
        (((1 + var675) <= <loop_1067@57:0>) && (<<loop_1067@57:2>@90:0> = <loop_1067@57:1>))
        |- P[<<loop_1067@57:2>@90:0>](<loop_1067@57:0>:int,<loop_1067@57:1>:int,
                                      <<loop_1067@57:2>@90:0>:int)
        
        P[<<loop_1067@57:2>@59:0>](<loop_1067@57:0>:int,0:int,<<loop_1067@57:2>@59:0>:int),
        P[<loop_1067@57:1>](<loop_1067@57:0>:int,<loop_1067@57:1>:int),
        ((<loop_1067@57:1> = 0) &&
         ((<<<loop_1067@57:2>@59:1>@75:0> = 0) &&
          ((0 <= <<loop_1067@57:2>@59:0>) && ((<loop_1067@57:0> > 0) && (<<loop_1067@57:2>@59:0> < <loop_1067@57:0>)))))
        |- P[<<<loop_1067@57:2>@59:1>@75:0>](<loop_1067@57:0>:int,<loop_1067@57:1>:int,
                                             <<loop_1067@57:2>@59:0>:int,
                                             <<<loop_1067@57:2>@59:1>@75:0>:int)
        
        P[<loop_1067@57:1>](<loop_1067@57:0>:int,<loop_1067@57:1>:int), (
        <<loop_1067@57:2>@59:0> = <loop_1067@57:1>)
        |- P[<<loop_1067@57:2>@59:0>](<loop_1067@57:0>:int,<loop_1067@57:1>:int,
                                      <<loop_1067@57:2>@59:0>:int)
        
         ((<loop_1067@57:1> = 0) && (<loop_1067@57:0> > 0))
        |- P[<loop_1067@57:1>](<loop_1067@57:0>:int,<loop_1067@57:1>:int)
      lower bounds:
        P[<loop_1067@57:1>](<loop_1067@57:0>:int,<loop_1067@57:1>:int) =
        ((<loop_1067@57:1> = 0) && (<loop_1067@57:0> > 0))
        P[<<loop_1067@57:2>@59:0>](<loop_1067@57:0>:int,<loop_1067@57:1>:int,<<loop_1067@57:2>@59:0>:int) =
        ((<loop_1067@57:1> = 0) && ((<loop_1067@57:0> > 0) && (<<loop_1067@57:2>@59:0> = <loop_1067@57:1>)))
        P[<<<loop_1067@57:2>@59:1>@75:0>](<loop_1067@57:0>:int,<loop_1067@57:1>:int,<<loop_1067@57:2>@59:0>:int,<<<loop_1067@57:2>@59:1>@75:0>:int) =
        ((<<<loop_1067@57:2>@59:1>@75:0> = 0) &&
         ((<<loop_1067@57:2>@59:0> = 0) &&
          ((<loop_1067@57:1> = 0) && ((<<loop_1067@57:2>@59:0> < <loop_1067@57:0>) && (<loop_1067@57:0> > 0)))))
        P[<<loop_1067@57:2>@90:0>](<loop_1067@57:0>:int,<loop_1067@57:1>:int,<<loop_1067@57:2>@90:0>:int) =
        ((<loop_1067@57:1> = 0) &&
         ((<<loop_1067@57:2>@90:0> = <loop_1067@57:1>) &&
          ((<loop_1067@57:0> >= 1) && (<loop_1067@57:1> < <loop_1067@57:0>))))
        P[<<<loop_1067@57:2>@90:1>@106:0>](<loop_1067@57:0>:int,<loop_1067@57:1>:int,<<loop_1067@57:2>@90:0>:int,<<<loop_1067@57:2>@90:1>@106:0>:int) =
        ((<<<loop_1067@57:2>@90:1>@106:0> = 0) &&
         ((<<loop_1067@57:2>@90:0> = 0) &&
          ((<loop_1067@57:1> = 0) && ((<<loop_1067@57:2>@90:0> < <loop_1067@57:0>) && (<loop_1067@57:0> >= 1)))))
        P[<aux_1064@153:4>](<aux_1064@153:0>:int,<aux_1064@153:1>:int,<aux_1064@153:2>:int,<aux_1064@153:4>:int) =
        ((<aux_1064@153:0> = 0) &&
         ((<aux_1064@153:2> = 1) &&
          ((<aux_1064@153:4> = 0) &&
           ((<aux_1064@153:0> < <aux_1064@153:1>) &&
            ((<aux_1064@153:1> >= 1) && (<aux_1064@153:2> <= <aux_1064@153:1>))))))
        P[<<aux_1064@153:3>@156:0>](<aux_1064@153:0>:int,<aux_1064@153:1>:int,<aux_1064@153:2>:int,<<aux_1064@153:3>@156:0>:int) =
        false
        P[<<loop_1067@57:2>@183:0>](<loop_1067@57:0>:int,<loop_1067@57:1>:int,<<loop_1067@57:2>@183:0>:int) = false
        P[<fail_2362@191:0>](<fail_2362@191:0>:bool) = false
      upper bounds:
        P[<<loop_1067@57:2>@183:0>](var743:int,var744:int,var745:int) = true
        P[<<loop_1067@57:2>@90:0>](var735:int,var736:int,var737:int) = true
        P[<<loop_1067@57:2>@59:0>](var731:int,var732:int,var733:int) = true
      begin GenHcSolver.classify_pids(106252)[4]
        output:
          [<<loop_1067@57:2>@59:0>;<<loop_1067@57:2>@90:0>;<<loop_1067@57:2>@183:0>]
      end GenHcSolver.classify_pids(106252)[4] (0.000000 sec.)
      begin ApronInterface.convex_hull_interpolate(106273)[4]
        lb:(((<loop_1067@57:1> = 0) && ((<loop_1067@57:0> > 0) && (<<loop_1067@57:2>@59:0> = <loop_1067@57:1>))) ||
            ((<loop_1067@57:1> = 0) &&
             ((<<loop_1067@57:2>@59:0> = <loop_1067@57:1>) &&
              ((<loop_1067@57:0> >= 1) && (<loop_1067@57:1> < <loop_1067@57:0>)))))
        nub:false
        begin ExtFormula.Formula.case_analysis_boolean(106378)[5]
          ts: (((<loop_1067@57:1> = 0) && (<<loop_1067@57:2>@59:0> = <loop_1067@57:1>)) &&
               ((<loop_1067@57:0> > 0) || ((<loop_1067@57:0> >= 1) && (<loop_1067@57:1> < <loop_1067@57:0>))))
          
        end ExtFormula.Formula.case_analysis_boolean(106378)[5] (0.001000 sec.)
        begin ExtFormula.Formula.case_analysis_boolean(106394)[5]
          ts: false
          
        end ExtFormula.Formula.case_analysis_boolean(106394)[5] (0.000000 sec.)
        lb':((<<loop_1067@57:2>@59:0> = 0) && ((<loop_1067@57:1> = 0) && ((-1 + <loop_1067@57:0>) >= 0)))
        nub':(-1 >= 0)
        begin InterpProver.interpolate(106397)[5]
          begin InterpProver.interpolate_fresh(106398)[6]
            begin InterpProver.interpolate_log(106399)[7]
              input1: ((<<loop_1067@57:2>@59:0> = 0) && ((<loop_1067@57:1> = 0) && ((-1 + <loop_1067@57:0>) >= 0)))
              input2: (-1 >= 0)
              begin InterpProver.interpolate_check(106400)[8]
                begin InterpProver.interpolate_simplify(106401)[9]
                  begin InterpProver.interpolate_quick(106459)[10]
                    
                  end InterpProver.interpolate_quick(106459)[10] (0.000000 sec.)
                  
                end InterpProver.interpolate_simplify(106401)[9] (0.000000 sec.)
                
              end InterpProver.interpolate_check(106400)[8] (0.000000 sec.)
              output: true
            end InterpProver.interpolate_log(106399)[7] (0.000000 sec.)
            
          end InterpProver.interpolate_fresh(106398)[6] (0.000000 sec.)
          
        end InterpProver.interpolate(106397)[5] (0.000000 sec.)
        output:
          P[<<loop_1067@57:2>@59:0>](<loop_1067@57:0>:int,<loop_1067@57:1>:int,<<loop_1067@57:2>@59:0>:int) = true
          P[<<loop_1067@57:2>@90:0>](<loop_1067@57:0>:int,<loop_1067@57:1>:int,<<loop_1067@57:2>@59:0>:int) = true
          P[<<loop_1067@57:2>@183:0>](<loop_1067@57:0>:int,<loop_1067@57:1>:int,<<loop_1067@57:2>@59:0>:int) = true
      end ApronInterface.convex_hull_interpolate(106273)[4] (0.001000 sec.)
      Horn clauses:
        P[<fail_2362@191:0>](<fail_2362@191:0>:bool)|- bot
        
        P[<<loop_1067@57:2>@183:0>](<k_make_array_u_1392@188:1>:int,0:int,<k_make_array_u_1392@188:0>:int),
        ((<k_make_array_u_1392@188:1> > 0) && ((0 > <k_make_array_u_1392@188:0>) && <fail_2362@191:0>))
        |- P[<fail_2362@191:0>](<fail_2362@191:0>:bool)
        
        P[<<<loop_1067@57:2>@90:1>@106:0>](<loop_1067@57:0>:int,<loop_1067@57:1>:int,<loop_1067@57:1>:int,var672:int),
        P[<<<loop_1067@57:2>@59:1>@75:0>](<loop_1067@57:0>:int,<loop_1067@57:1>:int,<loop_1067@57:1>:int,(
                                          -1 + var673):int),
        P[<<aux_1064@153:3>@156:0>](<loop_1067@57:1>:int,<loop_1067@57:0>:int,var673:int,<<loop_1067@57:2>@183:0>:int),
        P[<loop_1067@57:1>](<loop_1067@57:0>:int,<loop_1067@57:1>:int),
        ((var673 <= <loop_1067@57:0>) && (<loop_1067@57:1> <> <<loop_1067@57:2>@183:0>))
        |- P[<<loop_1067@57:2>@183:0>](<loop_1067@57:0>:int,<loop_1067@57:1>:int,
                                       <<loop_1067@57:2>@183:0>:int)
        
        P[<aux_1064@153:4>](<aux_1064@153:0>:int,<aux_1064@153:1>:int,<aux_1064@153:2>:int,<<aux_1064@153:3>@156:0>:int),
        (<<aux_1064@153:3>@156:0> < <aux_1064@153:0>)
        |- P[<<aux_1064@153:3>@156:0>](<aux_1064@153:0>:int,<aux_1064@153:1>:int,
                                       <aux_1064@153:2>:int,<<aux_1064@153:3>@156:0>:int)
        
        P[<<<loop_1067@57:2>@90:1>@106:0>](<aux_1064@153:1>:int,<aux_1064@153:0>:int,<aux_1064@153:0>:int,var674:int),
        P[<<<loop_1067@57:2>@59:1>@75:0>](<aux_1064@153:1>:int,<aux_1064@153:0>:int,<aux_1064@153:0>:int,(
                                          -1 + <aux_1064@153:2>):int),
        P[<loop_1067@57:1>](<aux_1064@153:1>:int,<aux_1064@153:0>:int),
        ((<aux_1064@153:4> = 0) && (<aux_1064@153:2> <= <aux_1064@153:1>))
        |- P[<aux_1064@153:4>](<aux_1064@153:0>:int,<aux_1064@153:1>:int,
                               <aux_1064@153:2>:int,<aux_1064@153:4>:int)
        
        P[<loop_1067@57:1>](<loop_1067@57:0>:int,<loop_1067@57:1>:int),
        ((<loop_1067@57:1> = 0) &&
         ((<<<loop_1067@57:2>@90:1>@106:0> = 0) &&
          ((0 <= <<loop_1067@57:2>@90:0>) && ((<loop_1067@57:0> > 0) && (<<loop_1067@57:2>@90:0> < <loop_1067@57:0>)))))
        |- P[<<<loop_1067@57:2>@90:1>@106:0>](<loop_1067@57:0>:int,<loop_1067@57:1>:int,
                                              <<loop_1067@57:2>@90:0>:int,
                                              <<<loop_1067@57:2>@90:1>@106:0>:int)
        
        P[<loop_1067@57:1>](<loop_1067@57:0>:int,<loop_1067@57:1>:int),
        ((<loop_1067@57:1> = 0) &&
         ((<<<loop_1067@57:2>@59:1>@75:0> = 0) &&
          ((0 <= <<loop_1067@57:2>@59:0>) && ((<loop_1067@57:0> > 0) && (<<loop_1067@57:2>@59:0> < <loop_1067@57:0>)))))
        |- P[<<<loop_1067@57:2>@59:1>@75:0>](<loop_1067@57:0>:int,<loop_1067@57:1>:int,
                                             <<loop_1067@57:2>@59:0>:int,
                                             <<<loop_1067@57:2>@59:1>@75:0>:int)
        
         ((<loop_1067@57:1> = 0) && (<loop_1067@57:0> > 0))
        |- P[<loop_1067@57:1>](<loop_1067@57:0>:int,<loop_1067@57:1>:int)
      lower bounds:
        P[<loop_1067@57:1>](<loop_1067@57:0>:int,<loop_1067@57:1>:int) =
        ((<loop_1067@57:1> = 0) && (<loop_1067@57:0> > 0))
        P[<<<loop_1067@57:2>@90:1>@106:0>](<loop_1067@57:0>:int,<loop_1067@57:1>:int,<<loop_1067@57:2>@90:0>:int,<<<loop_1067@57:2>@90:1>@106:0>:int) =
        ((<<<loop_1067@57:2>@90:1>@106:0> = 0) &&
         ((<loop_1067@57:1> = 0) &&
          ((0 <= <<loop_1067@57:2>@90:0>) && ((<<loop_1067@57:2>@90:0> < <loop_1067@57:0>) && (<loop_1067@57:0> > 0)))))
        P[<<<loop_1067@57:2>@59:1>@75:0>](<loop_1067@57:0>:int,<loop_1067@57:1>:int,<<loop_1067@57:2>@59:0>:int,<<<loop_1067@57:2>@59:1>@75:0>:int) =
        ((<<<loop_1067@57:2>@59:1>@75:0> = 0) &&
         ((<loop_1067@57:1> = 0) &&
          ((0 <= <<loop_1067@57:2>@59:0>) && ((<<loop_1067@57:2>@59:0> < <loop_1067@57:0>) && (<loop_1067@57:0> > 0)))))
        P[<aux_1064@153:4>](<aux_1064@153:0>:int,<aux_1064@153:1>:int,<aux_1064@153:2>:int,<aux_1064@153:4>:int) =
        ((<aux_1064@153:0> = 0) &&
         ((<aux_1064@153:2> = 1) &&
          ((<aux_1064@153:4> = 0) &&
           ((<aux_1064@153:1> > 0) && ((<aux_1064@153:0> < <aux_1064@153:1>) && (<aux_1064@153:2> <= <aux_1064@153:1>))))))
        P[<<aux_1064@153:3>@156:0>](<aux_1064@153:0>:int,<aux_1064@153:1>:int,<aux_1064@153:2>:int,<<aux_1064@153:3>@156:0>:int) =
        false
        P[<<loop_1067@57:2>@183:0>](<loop_1067@57:0>:int,<loop_1067@57:1>:int,<<loop_1067@57:2>@183:0>:int) = false
        P[<fail_2362@191:0>](<fail_2362@191:0>:bool) = false
      upper bounds:
        P[<<<loop_1067@57:2>@90:1>@106:0>](var758:int,var759:int,var760:int,var761:int) = true
        P[<<<loop_1067@57:2>@59:1>@75:0>](var749:int,var750:int,var751:int,var752:int) = true
      begin GenHcSolver.classify_pids(121999)[4]
        output:
          [<<<loop_1067@57:2>@59:1>@75:0>;<<<loop_1067@57:2>@90:1>@106:0>]
      end GenHcSolver.classify_pids(121999)[4] (0.000000 sec.)
      begin ApronInterface.convex_hull_interpolate(122010)[4]
        lb:((<<<loop_1067@57:2>@59:1>@75:0> = 0) &&
            ((<loop_1067@57:1> = 0) &&
             ((0 <= <<loop_1067@57:2>@59:0>) &&
              ((<<loop_1067@57:2>@59:0> < <loop_1067@57:0>) && (<loop_1067@57:0> > 0)))))
        nub:false
        begin ExtFormula.Formula.case_analysis_boolean(122067)[5]
          ts: ((<<<loop_1067@57:2>@59:1>@75:0> = 0) &&
               ((<loop_1067@57:1> = 0) &&
                ((0 <= <<loop_1067@57:2>@59:0>) &&
                 ((<<loop_1067@57:2>@59:0> < <loop_1067@57:0>) && (<loop_1067@57:0> > 0)))))
          
        end ExtFormula.Formula.case_analysis_boolean(122067)[5] (0.001000 sec.)
        begin ExtFormula.Formula.case_analysis_boolean(122078)[5]
          ts: false
          
        end ExtFormula.Formula.case_analysis_boolean(122078)[5] (0.000000 sec.)
        lb':((<<<loop_1067@57:2>@59:1>@75:0> = 0) &&
             ((<loop_1067@57:1> = 0) &&
              ((<<loop_1067@57:2>@59:0> >= 0) && (((-1 + (-1 * <<loop_1067@57:2>@59:0>)) + <loop_1067@57:0>) >= 0))))
        nub':(-1 >= 0)
        begin InterpProver.interpolate(122081)[5]
          begin InterpProver.interpolate_fresh(122082)[6]
            begin InterpProver.interpolate_log(122083)[7]
              input1: ((<<<loop_1067@57:2>@59:1>@75:0> = 0) &&
                       ((<loop_1067@57:1> = 0) &&
                        ((<<loop_1067@57:2>@59:0> >= 0) &&
                         (((-1 + (-1 * <<loop_1067@57:2>@59:0>)) + <loop_1067@57:0>) >= 0))))
              input2: (-1 >= 0)
              begin InterpProver.interpolate_check(122084)[8]
                begin InterpProver.interpolate_simplify(122085)[9]
                  begin InterpProver.interpolate_quick(122202)[10]
                    
                  end InterpProver.interpolate_quick(122202)[10] (0.000000 sec.)
                  
                end InterpProver.interpolate_simplify(122085)[9] (0.001000 sec.)
                
              end InterpProver.interpolate_check(122084)[8] (0.001000 sec.)
              output: true
            end InterpProver.interpolate_log(122083)[7] (0.001000 sec.)
            
          end InterpProver.interpolate_fresh(122082)[6] (0.001000 sec.)
          
        end InterpProver.interpolate(122081)[5] (0.001000 sec.)
        output:
          P[<<<loop_1067@57:2>@59:1>@75:0>](<loop_1067@57:0>:int,<loop_1067@57:1>:int,<<loop_1067@57:2>@59:0>:int,<<<loop_1067@57:2>@59:1>@75:0>:int) =
          true
          P[<<<loop_1067@57:2>@90:1>@106:0>](<loop_1067@57:0>:int,<loop_1067@57:1>:int,<<loop_1067@57:2>@59:0>:int,<<<loop_1067@57:2>@59:1>@75:0>:int) =
          true
      end ApronInterface.convex_hull_interpolate(122010)[4] (0.002000 sec.)
      Horn clauses:
        P[<fail_2362@191:0>](<fail_2362@191:0>:bool)|- bot
        
        P[<<loop_1067@57:2>@183:0>](<k_make_array_u_1392@188:1>:int,0:int,<k_make_array_u_1392@188:0>:int),
        ((<k_make_array_u_1392@188:1> > 0) && ((0 > <k_make_array_u_1392@188:0>) && <fail_2362@191:0>))
        |- P[<fail_2362@191:0>](<fail_2362@191:0>:bool)
        
        P[<<aux_1064@153:3>@156:0>](<loop_1067@57:1>:int,<loop_1067@57:0>:int,var673:int,<<loop_1067@57:2>@183:0>:int),
        P[<loop_1067@57:1>](<loop_1067@57:0>:int,<loop_1067@57:1>:int),
        ((var673 <= <loop_1067@57:0>) && (<loop_1067@57:1> <> <<loop_1067@57:2>@183:0>))
        |- P[<<loop_1067@57:2>@183:0>](<loop_1067@57:0>:int,<loop_1067@57:1>:int,
                                       <<loop_1067@57:2>@183:0>:int)
        
        P[<aux_1064@153:4>](<aux_1064@153:0>:int,<aux_1064@153:1>:int,<aux_1064@153:2>:int,<<aux_1064@153:3>@156:0>:int),
        (<<aux_1064@153:3>@156:0> < <aux_1064@153:0>)
        |- P[<<aux_1064@153:3>@156:0>](<aux_1064@153:0>:int,<aux_1064@153:1>:int,
                                       <aux_1064@153:2>:int,<<aux_1064@153:3>@156:0>:int)
        
        P[<loop_1067@57:1>](<aux_1064@153:1>:int,<aux_1064@153:0>:int),
        ((<aux_1064@153:4> = 0) && (<aux_1064@153:2> <= <aux_1064@153:1>))
        |- P[<aux_1064@153:4>](<aux_1064@153:0>:int,<aux_1064@153:1>:int,
                               <aux_1064@153:2>:int,<aux_1064@153:4>:int)
        
         ((<loop_1067@57:1> = 0) && (<loop_1067@57:0> > 0))
        |- P[<loop_1067@57:1>](<loop_1067@57:0>:int,<loop_1067@57:1>:int)
      lower bounds:
        P[<loop_1067@57:1>](<loop_1067@57:0>:int,<loop_1067@57:1>:int) =
        ((<loop_1067@57:1> = 0) && (<loop_1067@57:0> > 0))
        P[<aux_1064@153:4>](<aux_1064@153:0>:int,<aux_1064@153:1>:int,<aux_1064@153:2>:int,<aux_1064@153:4>:int) =
        ((<aux_1064@153:4> = 0) &&
         ((<aux_1064@153:0> = 0) && ((<aux_1064@153:2> <= <aux_1064@153:1>) && (<aux_1064@153:1> > 0))))
        P[<<aux_1064@153:3>@156:0>](<aux_1064@153:0>:int,<aux_1064@153:1>:int,<aux_1064@153:2>:int,<<aux_1064@153:3>@156:0>:int) =
        false
        P[<<loop_1067@57:2>@183:0>](<loop_1067@57:0>:int,<loop_1067@57:1>:int,<<loop_1067@57:2>@183:0>:int) = false
        P[<fail_2362@191:0>](<fail_2362@191:0>:bool) = false
      upper bounds:
        P[<fail_2362@191:0>](var763:bool) = true
      begin GenHcSolver.classify_pids(126494)[4]
        output:
          [<fail_2362@191:0>]
      end GenHcSolver.classify_pids(126494)[4] (0.000000 sec.)
      lb:false
      nub:false
      begin ApronInterface.convex_hull_interpolate(126497)[4]
        lb:false
        nub:false
        begin ExtFormula.Formula.case_analysis_boolean(126500)[5]
          ts: false
          
        end ExtFormula.Formula.case_analysis_boolean(126500)[5] (0.001000 sec.)
        begin ExtFormula.Formula.case_analysis_boolean(126505)[5]
          ts: false
          
        end ExtFormula.Formula.case_analysis_boolean(126505)[5] (0.000000 sec.)
        lb':(-1 >= 0)
        nub':(-1 >= 0)
        begin InterpProver.interpolate(126508)[5]
          begin InterpProver.interpolate_fresh(126509)[6]
            begin InterpProver.interpolate_log(126510)[7]
              input1: (-1 >= 0)
              input2: (-1 >= 0)
              begin InterpProver.interpolate_check(126511)[8]
                begin InterpProver.interpolate_simplify(126512)[9]
                  begin InterpProver.interpolate_quick(126527)[10]
                    
                  end InterpProver.interpolate_quick(126527)[10] (0.000000 sec.)
                  begin minimizing # of disjunctions(126531)[10]
                    input: false
                    output: false
                  end minimizing # of disjunctions(126531)[10] (0.000000 sec.)
                  
                end InterpProver.interpolate_simplify(126512)[9] (0.000000 sec.)
                
              end InterpProver.interpolate_check(126511)[8] (0.001000 sec.)
              output: false
            end InterpProver.interpolate_log(126510)[7] (0.001000 sec.)
            
          end InterpProver.interpolate_fresh(126509)[6] (0.001000 sec.)
          
        end InterpProver.interpolate(126508)[5] (0.001000 sec.)
        output:
          P[<fail_2362@191:0>](<fail_2362@191:0>:bool) = false
      end ApronInterface.convex_hull_interpolate(126497)[4] (0.002000 sec.)
      Horn clauses:
        P[<<loop_1067@57:2>@183:0>](<k_make_array_u_1392@188:1>:int,0:int,<k_make_array_u_1392@188:0>:int),
        ((0 > <k_make_array_u_1392@188:0>) && (<k_make_array_u_1392@188:1> > 0)) |- bot
        
        P[<<aux_1064@153:3>@156:0>](<loop_1067@57:1>:int,<loop_1067@57:0>:int,var673:int,<<loop_1067@57:2>@183:0>:int),
        P[<loop_1067@57:1>](<loop_1067@57:0>:int,<loop_1067@57:1>:int),
        ((var673 <= <loop_1067@57:0>) && (<loop_1067@57:1> <> <<loop_1067@57:2>@183:0>))
        |- P[<<loop_1067@57:2>@183:0>](<loop_1067@57:0>:int,<loop_1067@57:1>:int,
                                       <<loop_1067@57:2>@183:0>:int)
        
        P[<aux_1064@153:4>](<aux_1064@153:0>:int,<aux_1064@153:1>:int,<aux_1064@153:2>:int,<<aux_1064@153:3>@156:0>:int),
        (<<aux_1064@153:3>@156:0> < <aux_1064@153:0>)
        |- P[<<aux_1064@153:3>@156:0>](<aux_1064@153:0>:int,<aux_1064@153:1>:int,
                                       <aux_1064@153:2>:int,<<aux_1064@153:3>@156:0>:int)
        
        P[<loop_1067@57:1>](<aux_1064@153:1>:int,<aux_1064@153:0>:int),
        ((<aux_1064@153:4> = 0) && (<aux_1064@153:2> <= <aux_1064@153:1>))
        |- P[<aux_1064@153:4>](<aux_1064@153:0>:int,<aux_1064@153:1>:int,
                               <aux_1064@153:2>:int,<aux_1064@153:4>:int)
        
         ((<loop_1067@57:1> = 0) && (<loop_1067@57:0> > 0))
        |- P[<loop_1067@57:1>](<loop_1067@57:0>:int,<loop_1067@57:1>:int)
      lower bounds:
        P[<loop_1067@57:1>](<loop_1067@57:0>:int,<loop_1067@57:1>:int) =
        ((<loop_1067@57:1> = 0) && (<loop_1067@57:0> > 0))
        P[<aux_1064@153:4>](<aux_1064@153:0>:int,<aux_1064@153:1>:int,<aux_1064@153:2>:int,<aux_1064@153:4>:int) =
        ((<aux_1064@153:4> = 0) &&
         ((<aux_1064@153:0> = 0) && ((<aux_1064@153:2> <= <aux_1064@153:1>) && (<aux_1064@153:1> > 0))))
        P[<<aux_1064@153:3>@156:0>](<aux_1064@153:0>:int,<aux_1064@153:1>:int,<aux_1064@153:2>:int,<<aux_1064@153:3>@156:0>:int) =
        false
        P[<<loop_1067@57:2>@183:0>](<loop_1067@57:0>:int,<loop_1067@57:1>:int,<<loop_1067@57:2>@183:0>:int) = false
      upper bounds:
        P[<<loop_1067@57:2>@183:0>](var767:int,var768:int,var769:int) = true
      begin GenHcSolver.classify_pids(128606)[4]
        output:
          [<<loop_1067@57:2>@183:0>]
      end GenHcSolver.classify_pids(128606)[4] (0.000000 sec.)
      lb:false
      nub:false
      begin ApronInterface.convex_hull_interpolate(128609)[4]
        lb:false
        nub:false
        begin ExtFormula.Formula.case_analysis_boolean(128612)[5]
          ts: false
          
        end ExtFormula.Formula.case_analysis_boolean(128612)[5] (0.000000 sec.)
        begin ExtFormula.Formula.case_analysis_boolean(128617)[5]
          ts: false
          
        end ExtFormula.Formula.case_analysis_boolean(128617)[5] (0.000000 sec.)
        lb':(-1 >= 0)
        nub':(-1 >= 0)
        begin InterpProver.interpolate(128620)[5]
          begin InterpProver.interpolate_fresh(128621)[6]
            begin InterpProver.interpolate_log(128622)[7]
              input1: (-1 >= 0)
              input2: (-1 >= 0)
              begin InterpProver.interpolate_check(128623)[8]
                begin InterpProver.interpolate_simplify(128624)[9]
                  begin InterpProver.interpolate_quick(128639)[10]
                    
                  end InterpProver.interpolate_quick(128639)[10] (0.000000 sec.)
                  begin minimizing # of disjunctions(128643)[10]
                    input: false
                    output: false
                  end minimizing # of disjunctions(128643)[10] (0.000000 sec.)
                  
                end InterpProver.interpolate_simplify(128624)[9] (0.000000 sec.)
                
              end InterpProver.interpolate_check(128623)[8] (0.001000 sec.)
              output: false
            end InterpProver.interpolate_log(128622)[7] (0.001000 sec.)
            
          end InterpProver.interpolate_fresh(128621)[6] (0.001000 sec.)
          
        end InterpProver.interpolate(128620)[5] (0.001000 sec.)
        output:
          P[<<loop_1067@57:2>@183:0>](<loop_1067@57:0>:int,<loop_1067@57:1>:int,<<loop_1067@57:2>@183:0>:int) = false
      end ApronInterface.convex_hull_interpolate(128609)[4] (0.001000 sec.)
      Horn clauses:
        P[<<aux_1064@153:3>@156:0>](<loop_1067@57:1>:int,<loop_1067@57:0>:int,var673:int,<<loop_1067@57:2>@183:0>:int),
        P[<loop_1067@57:1>](<loop_1067@57:0>:int,<loop_1067@57:1>:int),
        ((var673 <= <loop_1067@57:0>) && (<loop_1067@57:1> <> <<loop_1067@57:2>@183:0>)) |- bot
        
        P[<aux_1064@153:4>](<aux_1064@153:0>:int,<aux_1064@153:1>:int,<aux_1064@153:2>:int,<<aux_1064@153:3>@156:0>:int),
        (<<aux_1064@153:3>@156:0> < <aux_1064@153:0>)
        |- P[<<aux_1064@153:3>@156:0>](<aux_1064@153:0>:int,<aux_1064@153:1>:int,
                                       <aux_1064@153:2>:int,<<aux_1064@153:3>@156:0>:int)
        
        P[<loop_1067@57:1>](<aux_1064@153:1>:int,<aux_1064@153:0>:int),
        ((<aux_1064@153:4> = 0) && (<aux_1064@153:2> <= <aux_1064@153:1>))
        |- P[<aux_1064@153:4>](<aux_1064@153:0>:int,<aux_1064@153:1>:int,
                               <aux_1064@153:2>:int,<aux_1064@153:4>:int)
        
         ((<loop_1067@57:1> = 0) && (<loop_1067@57:0> > 0))
        |- P[<loop_1067@57:1>](<loop_1067@57:0>:int,<loop_1067@57:1>:int)
      lower bounds:
        P[<loop_1067@57:1>](<loop_1067@57:0>:int,<loop_1067@57:1>:int) =
        ((<loop_1067@57:1> = 0) && (<loop_1067@57:0> > 0))
        P[<aux_1064@153:4>](<aux_1064@153:0>:int,<aux_1064@153:1>:int,<aux_1064@153:2>:int,<aux_1064@153:4>:int) =
        ((<aux_1064@153:4> = 0) &&
         ((<aux_1064@153:0> = 0) && ((<aux_1064@153:2> <= <aux_1064@153:1>) && (<aux_1064@153:1> > 0))))
        P[<<aux_1064@153:3>@156:0>](<aux_1064@153:0>:int,<aux_1064@153:1>:int,<aux_1064@153:2>:int,<<aux_1064@153:3>@156:0>:int) =
        false
      upper bounds:
        P[<<aux_1064@153:3>@156:0>](var774:int,var775:int,var776:int,var777:int) = true
      begin GenHcSolver.classify_pids(130627)[4]
        output:
          [<<aux_1064@153:3>@156:0>]
      end GenHcSolver.classify_pids(130627)[4] (0.001000 sec.)
      lb:false
      nub:false
      begin ApronInterface.convex_hull_interpolate(130630)[4]
        lb:false
        nub:false
        begin ExtFormula.Formula.case_analysis_boolean(130633)[5]
          ts: false
          
        end ExtFormula.Formula.case_analysis_boolean(130633)[5] (0.000000 sec.)
        begin ExtFormula.Formula.case_analysis_boolean(130638)[5]
          ts: false
          
        end ExtFormula.Formula.case_analysis_boolean(130638)[5] (0.000000 sec.)
        lb':(-1 >= 0)
        nub':(-1 >= 0)
        begin InterpProver.interpolate(130641)[5]
          begin InterpProver.interpolate_fresh(130642)[6]
            begin InterpProver.interpolate_log(130643)[7]
              input1: (-1 >= 0)
              input2: (-1 >= 0)
              begin InterpProver.interpolate_check(130644)[8]
                begin InterpProver.interpolate_simplify(130645)[9]
                  begin InterpProver.interpolate_quick(130660)[10]
                    
                  end InterpProver.interpolate_quick(130660)[10] (0.000000 sec.)
                  begin minimizing # of disjunctions(130664)[10]
                    input: false
                    output: false
                  end minimizing # of disjunctions(130664)[10] (0.000000 sec.)
                  
                end InterpProver.interpolate_simplify(130645)[9] (0.000000 sec.)
                
              end InterpProver.interpolate_check(130644)[8] (0.000000 sec.)
              output: false
            end InterpProver.interpolate_log(130643)[7] (0.000000 sec.)
            
          end InterpProver.interpolate_fresh(130642)[6] (0.000000 sec.)
          
        end InterpProver.interpolate(130641)[5] (0.000000 sec.)
        output:
          P[<<aux_1064@153:3>@156:0>](<aux_1064@153:0>:int,<aux_1064@153:1>:int,<aux_1064@153:2>:int,<<aux_1064@153:3>@156:0>:int) =
          false
      end ApronInterface.convex_hull_interpolate(130630)[4] (0.000000 sec.)
      Horn clauses:
        P[<aux_1064@153:4>](<aux_1064@153:0>:int,<aux_1064@153:1>:int,<aux_1064@153:2>:int,<<aux_1064@153:3>@156:0>:int),
        (<<aux_1064@153:3>@156:0> < <aux_1064@153:0>) |- bot
        
        P[<loop_1067@57:1>](<aux_1064@153:1>:int,<aux_1064@153:0>:int),
        ((<aux_1064@153:4> = 0) && (<aux_1064@153:2> <= <aux_1064@153:1>))
        |- P[<aux_1064@153:4>](<aux_1064@153:0>:int,<aux_1064@153:1>:int,
                               <aux_1064@153:2>:int,<aux_1064@153:4>:int)
        
         ((<loop_1067@57:1> = 0) && (<loop_1067@57:0> > 0))
        |- P[<loop_1067@57:1>](<loop_1067@57:0>:int,<loop_1067@57:1>:int)
      lower bounds:
        P[<loop_1067@57:1>](<loop_1067@57:0>:int,<loop_1067@57:1>:int) =
        ((<loop_1067@57:1> = 0) && (<loop_1067@57:0> > 0))
        P[<aux_1064@153:4>](<aux_1064@153:0>:int,<aux_1064@153:1>:int,<aux_1064@153:2>:int,<aux_1064@153:4>:int) =
        ((<aux_1064@153:4> = 0) &&
         ((<aux_1064@153:0> = 0) && ((<aux_1064@153:2> <= <aux_1064@153:1>) && (<aux_1064@153:1> > 0))))
      upper bounds:
        P[<aux_1064@153:4>](var778:int,var779:int,var780:int,var781:int) = (var781 >= var778)
      begin GenHcSolver.classify_pids(132237)[4]
        output:
          [<aux_1064@153:4>]
      end GenHcSolver.classify_pids(132237)[4] (0.000000 sec.)
      lb:((<aux_1064@153:4> = 0) &&
          ((<aux_1064@153:0> = 0) && ((<aux_1064@153:2> <= <aux_1064@153:1>) && (<aux_1064@153:1> > 0))))
      nub:(not (<aux_1064@153:4> >= <aux_1064@153:0>))
      begin ApronInterface.convex_hull_interpolate(132240)[4]
        lb:((<aux_1064@153:4> = 0) &&
            ((<aux_1064@153:0> = 0) && ((<aux_1064@153:2> <= <aux_1064@153:1>) && (<aux_1064@153:1> > 0))))
        nub:(not (<aux_1064@153:4> >= <aux_1064@153:0>))
        begin ExtFormula.Formula.case_analysis_boolean(132278)[5]
          ts: ((<aux_1064@153:4> = 0) &&
               ((<aux_1064@153:0> = 0) && ((<aux_1064@153:2> <= <aux_1064@153:1>) && (<aux_1064@153:1> > 0))))
          
        end ExtFormula.Formula.case_analysis_boolean(132278)[5] (0.000000 sec.)
        begin ExtFormula.Formula.case_analysis_boolean(132290)[5]
          ts: (<aux_1064@153:4> < <aux_1064@153:0>)
          
        end ExtFormula.Formula.case_analysis_boolean(132290)[5] (0.000000 sec.)
        lb':((<aux_1064@153:4> = 0) &&
             ((<aux_1064@153:0> = 0) &&
              ((((-1 * <aux_1064@153:2>) + <aux_1064@153:1>) >= 0) && ((-1 + <aux_1064@153:1>) >= 0))))
        nub':(((-1 + (-1 * <aux_1064@153:4>)) + <aux_1064@153:0>) >= 0)
        begin InterpProver.interpolate(132295)[5]
          begin InterpProver.interpolate_fresh(132296)[6]
            begin InterpProver.interpolate_log(132297)[7]
              input1: ((<aux_1064@153:4> = 0) &&
                       ((<aux_1064@153:0> = 0) &&
                        ((((-1 * <aux_1064@153:2>) + <aux_1064@153:1>) >= 0) && ((-1 + <aux_1064@153:1>) >= 0))))
              input2: (((-1 + (-1 * <aux_1064@153:4>)) + <aux_1064@153:0>) >= 0)
              begin InterpProver.interpolate_check(132298)[8]
                begin InterpProver.interpolate_simplify(132299)[9]
                  begin InterpProver.interpolate_quick(132402)[10]
                    begin CsisatInterface.interpolate_csisat_wrap(132411)[11]
                      begin CsisatInterface.interpolate_csisat_post_process(132412)[12]
                        begin CsisatInterface.interpolate_csisat_log(132413)[13]
                          input1: (0 = v_sep_aux_1064_sep_153_sep_0 & 0 = v_sep_aux_1064_sep_153_sep_4 & 1 <= v_sep_aux_1064_sep_153_sep_1 & v_sep_aux_1064_sep_153_sep_2 <= v_sep_aux_1064_sep_153_sep_1)
                          input2: (1 + v_sep_aux_1064_sep_153_sep_4) <= v_sep_aux_1064_sep_153_sep_0
                          begin CsisatInterface.interpolate_csisat_raw(132414)[14]
                            
                          end CsisatInterface.interpolate_csisat_raw(132414)[14] (0.000000 sec.)
                          output: (-2*v_sep_aux_1064_sep_153_sep_4 + 2*v_sep_aux_1064_sep_153_sep_0) <= 0
                          
                        end CsisatInterface.interpolate_csisat_log(132413)[13] (0.000000 sec.)
                        after simplification: (-2*v_sep_aux_1064_sep_153_sep_4 + 2*v_sep_aux_1064_sep_153_sep_0) <= 0
                        after dnf conversion: (((-2*v_sep_aux_1064_sep_153_sep_4 + 2*v_sep_aux_1064_sep_153_sep_0) <= 0))
                        
                      end CsisatInterface.interpolate_csisat_post_process(132412)[12] (0.000000 sec.)
                      
                    end CsisatInterface.interpolate_csisat_wrap(132411)[11] (0.000000 sec.)
                    
                  end InterpProver.interpolate_quick(132402)[10] (0.001000 sec.)
                  
                end InterpProver.interpolate_simplify(132299)[9] (0.002000 sec.)
                
              end InterpProver.interpolate_check(132298)[8] (0.003000 sec.)
              output: (<aux_1064@153:0> <= <aux_1064@153:4>)
            end InterpProver.interpolate_log(132297)[7] (0.003000 sec.)
            
          end InterpProver.interpolate_fresh(132296)[6] (0.003000 sec.)
          
        end InterpProver.interpolate(132295)[5] (0.003000 sec.)
        output:
          P[<aux_1064@153:4>](<aux_1064@153:0>:int,<aux_1064@153:1>:int,<aux_1064@153:2>:int,<aux_1064@153:4>:int) =
          (<aux_1064@153:0> <= <aux_1064@153:4>)
      end ApronInterface.convex_hull_interpolate(132240)[4] (0.004000 sec.)
      Horn clauses:
        P[<loop_1067@57:1>](<aux_1064@153:1>:int,<aux_1064@153:0>:int), (<aux_1064@153:0> > 0) |- bot
        
         ((<loop_1067@57:1> = 0) && (<loop_1067@57:0> > 0))
        |- P[<loop_1067@57:1>](<loop_1067@57:0>:int,<loop_1067@57:1>:int)
      lower bounds:
        P[<loop_1067@57:1>](<loop_1067@57:0>:int,<loop_1067@57:1>:int) =
        ((<loop_1067@57:1> = 0) && (<loop_1067@57:0> > 0))
      upper bounds:
        P[<loop_1067@57:1>](var782:int,var783:int) = (var783 <= 0)
      begin GenHcSolver.classify_pids(133222)[4]
        output:
          [<loop_1067@57:1>]
      end GenHcSolver.classify_pids(133222)[4] (0.000000 sec.)
      lb:((<loop_1067@57:1> = 0) && (<loop_1067@57:0> > 0))
      nub:(not (<loop_1067@57:1> <= 0))
      begin ApronInterface.convex_hull_interpolate(133225)[4]
        lb:((<loop_1067@57:1> = 0) && (<loop_1067@57:0> > 0))
        nub:(not (<loop_1067@57:1> <= 0))
        begin ExtFormula.Formula.case_analysis_boolean(133235)[5]
          ts: ((<loop_1067@57:1> = 0) && (<loop_1067@57:0> > 0))
          
        end ExtFormula.Formula.case_analysis_boolean(133235)[5] (0.000000 sec.)
        begin ExtFormula.Formula.case_analysis_boolean(133243)[5]
          ts: (<loop_1067@57:1> > 0)
          
        end ExtFormula.Formula.case_analysis_boolean(133243)[5] (0.000000 sec.)
        lb':((<loop_1067@57:1> = 0) && ((-1 + <loop_1067@57:0>) >= 0))
        nub':((-1 + <loop_1067@57:1>) >= 0)
        begin InterpProver.interpolate(133247)[5]
          begin InterpProver.interpolate_fresh(133248)[6]
            begin InterpProver.interpolate_log(133249)[7]
              input1: ((<loop_1067@57:1> = 0) && ((-1 + <loop_1067@57:0>) >= 0))
              input2: ((-1 + <loop_1067@57:1>) >= 0)
              begin InterpProver.interpolate_check(133250)[8]
                begin InterpProver.interpolate_simplify(133251)[9]
                  begin InterpProver.interpolate_quick(133288)[10]
                    begin CsisatInterface.interpolate_csisat_wrap(133297)[11]
                      begin CsisatInterface.interpolate_csisat_post_process(133298)[12]
                        begin CsisatInterface.interpolate_csisat_log(133299)[13]
                          input1: (0 = v_sep_loop_1067_sep_57_sep_1 & 1 <= v_sep_loop_1067_sep_57_sep_0)
                          input2: 1 <= v_sep_loop_1067_sep_57_sep_1
                          begin CsisatInterface.interpolate_csisat_raw(133300)[14]
                            
                          end CsisatInterface.interpolate_csisat_raw(133300)[14] (0.000000 sec.)
                          output: 2*v_sep_loop_1067_sep_57_sep_1 <= 0
                          
                        end CsisatInterface.interpolate_csisat_log(133299)[13] (0.000000 sec.)
                        after simplification: 2*v_sep_loop_1067_sep_57_sep_1 <= 0
                        after dnf conversion: ((2*v_sep_loop_1067_sep_57_sep_1 <= 0))
                        
                      end CsisatInterface.interpolate_csisat_post_process(133298)[12] (0.000000 sec.)
                      
                    end CsisatInterface.interpolate_csisat_wrap(133297)[11] (0.000000 sec.)
                    
                  end InterpProver.interpolate_quick(133288)[10] (0.001000 sec.)
                  
                end InterpProver.interpolate_simplify(133251)[9] (0.001000 sec.)
                
              end InterpProver.interpolate_check(133250)[8] (0.002000 sec.)
              output: (<loop_1067@57:1> <= 0)
            end InterpProver.interpolate_log(133249)[7] (0.002000 sec.)
            
          end InterpProver.interpolate_fresh(133248)[6] (0.002000 sec.)
          
        end InterpProver.interpolate(133247)[5] (0.002000 sec.)
        output:
          P[<loop_1067@57:1>](<loop_1067@57:0>:int,<loop_1067@57:1>:int) = (<loop_1067@57:1> <= 0)
      end ApronInterface.convex_hull_interpolate(133225)[4] (0.002000 sec.)
      begin HcSolver.check_validity(133444)[4]
        input:
          P[<fail_2362@191:0>](<fail_2362@191:0>:bool)|- bot
          
          P[<<loop_1067@57:2>@183:0>](<k_make_array_u_1392@188:1>:int,0:int,<k_make_array_u_1392@188:0>:int),
          ((<k_make_array_u_1392@188:1> > 0) && ((0 > <k_make_array_u_1392@188:0>) && <fail_2362@191:0>))
          |- P[<fail_2362@191:0>](<fail_2362@191:0>:bool)
          
          P[<<<loop_1067@57:2>@90:1>@106:0>](<loop_1067@57:0>:int,<loop_1067@57:1>:int,<loop_1067@57:1>:int,var672:int),
          P[<<<loop_1067@57:2>@59:1>@75:0>](<loop_1067@57:0>:int,<loop_1067@57:1>:int,<loop_1067@57:1>:int,(
                                            -1 + var673):int),
          P[<<aux_1064@153:3>@156:0>](<loop_1067@57:1>:int,<loop_1067@57:0>:int,var673:int,<<loop_1067@57:2>@183:0>:int),
          P[<loop_1067@57:1>](<loop_1067@57:0>:int,<loop_1067@57:1>:int),
          ((var673 <= <loop_1067@57:0>) && (<loop_1067@57:1> <> <<loop_1067@57:2>@183:0>))
          |- P[<<loop_1067@57:2>@183:0>](<loop_1067@57:0>:int,<loop_1067@57:1>:int,
                                         <<loop_1067@57:2>@183:0>:int)
          
          P[<aux_1064@153:4>](<aux_1064@153:0>:int,<aux_1064@153:1>:int,<aux_1064@153:2>:int,<<aux_1064@153:3>@156:0>:int),
          (<<aux_1064@153:3>@156:0> < <aux_1064@153:0>)
          |- P[<<aux_1064@153:3>@156:0>](<aux_1064@153:0>:int,<aux_1064@153:1>:int,
                                         <aux_1064@153:2>:int,<<aux_1064@153:3>@156:0>:int)
          
          P[<<<loop_1067@57:2>@90:1>@106:0>](<aux_1064@153:1>:int,<aux_1064@153:0>:int,<aux_1064@153:0>:int,var674:int),
          P[<<<loop_1067@57:2>@59:1>@75:0>](<aux_1064@153:1>:int,<aux_1064@153:0>:int,<aux_1064@153:0>:int,(
                                            -1 + <aux_1064@153:2>):int),
          P[<loop_1067@57:1>](<aux_1064@153:1>:int,<aux_1064@153:0>:int),
          ((<aux_1064@153:4> = 0) && (<aux_1064@153:2> <= <aux_1064@153:1>))
          |- P[<aux_1064@153:4>](<aux_1064@153:0>:int,<aux_1064@153:1>:int,
                                 <aux_1064@153:2>:int,<aux_1064@153:4>:int)
          
          P[<<loop_1067@57:2>@90:0>](<loop_1067@57:0>:int,0:int,<<loop_1067@57:2>@90:0>:int),
          P[<loop_1067@57:1>](<loop_1067@57:0>:int,<loop_1067@57:1>:int),
          ((<loop_1067@57:1> = 0) &&
           ((<<<loop_1067@57:2>@90:1>@106:0> = 0) &&
            ((0 <= <<loop_1067@57:2>@90:0>) && ((<loop_1067@57:0> > 0) && (<<loop_1067@57:2>@90:0> < <loop_1067@57:0>)))))
          |- P[<<<loop_1067@57:2>@90:1>@106:0>](<loop_1067@57:0>:int,
                                                <loop_1067@57:1>:int,
                                                <<loop_1067@57:2>@90:0>:int,
                                                <<<loop_1067@57:2>@90:1>@106:0>:int)
          
          P[<<<loop_1067@57:2>@59:1>@75:0>](<loop_1067@57:0>:int,<loop_1067@57:1>:int,<loop_1067@57:1>:int,var675:int),
          P[<loop_1067@57:1>](<loop_1067@57:0>:int,<loop_1067@57:1>:int),
          (((1 + var675) <= <loop_1067@57:0>) && (<<loop_1067@57:2>@90:0> = <loop_1067@57:1>))
          |- P[<<loop_1067@57:2>@90:0>](<loop_1067@57:0>:int,<loop_1067@57:1>:int,
                                        <<loop_1067@57:2>@90:0>:int)
          
          P[<<loop_1067@57:2>@59:0>](<loop_1067@57:0>:int,0:int,<<loop_1067@57:2>@59:0>:int),
          P[<loop_1067@57:1>](<loop_1067@57:0>:int,<loop_1067@57:1>:int),
          ((<loop_1067@57:1> = 0) &&
           ((<<<loop_1067@57:2>@59:1>@75:0> = 0) &&
            ((0 <= <<loop_1067@57:2>@59:0>) && ((<loop_1067@57:0> > 0) && (<<loop_1067@57:2>@59:0> < <loop_1067@57:0>)))))
          |- P[<<<loop_1067@57:2>@59:1>@75:0>](<loop_1067@57:0>:int,<loop_1067@57:1>:int,
                                               <<loop_1067@57:2>@59:0>:int,
                                               <<<loop_1067@57:2>@59:1>@75:0>:int)
          
          P[<loop_1067@57:1>](<loop_1067@57:0>:int,<loop_1067@57:1>:int), (
          <<loop_1067@57:2>@59:0> = <loop_1067@57:1>)
          |- P[<<loop_1067@57:2>@59:0>](<loop_1067@57:0>:int,<loop_1067@57:1>:int,
                                        <<loop_1067@57:2>@59:0>:int)
          
           ((<loop_1067@57:1> = 0) && (<loop_1067@57:0> > 0))
          |- P[<loop_1067@57:1>](<loop_1067@57:0>:int,<loop_1067@57:1>:int)
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        
      end HcSolver.check_validity(133444)[4] (0.006999 sec.)
      solution:
        P[<fail_2362@191:0>](<fail_2362@191:0>:bool) = false
        P[<<loop_1067@57:2>@183:0>](<loop_1067@57:0>:int,<loop_1067@57:1>:int,<<loop_1067@57:2>@183:0>:int) = false
        P[<<aux_1064@153:3>@156:0>](<aux_1064@153:0>:int,<aux_1064@153:1>:int,<aux_1064@153:2>:int,<<aux_1064@153:3>@156:0>:int) =
        false
        P[<aux_1064@153:4>](<aux_1064@153:0>:int,<aux_1064@153:1>:int,<aux_1064@153:2>:int,<aux_1064@153:4>:int) =
        (<aux_1064@153:0> <= <aux_1064@153:4>)
        P[<<<loop_1067@57:2>@90:1>@106:0>](<loop_1067@57:0>:int,<loop_1067@57:1>:int,<<loop_1067@57:2>@59:0>:int,<<<loop_1067@57:2>@59:1>@75:0>:int) =
        true
        P[<<loop_1067@57:2>@90:0>](<loop_1067@57:0>:int,<loop_1067@57:1>:int,<<loop_1067@57:2>@59:0>:int) = true
        P[<<<loop_1067@57:2>@59:1>@75:0>](<loop_1067@57:0>:int,<loop_1067@57:1>:int,<<loop_1067@57:2>@59:0>:int,<<<loop_1067@57:2>@59:1>@75:0>:int) =
        true
        P[<<loop_1067@57:2>@59:0>](<loop_1067@57:0>:int,<loop_1067@57:1>:int,<<loop_1067@57:2>@59:0>:int) = true
        P[<loop_1067@57:1>](<loop_1067@57:0>:int,<loop_1067@57:1>:int) = (<loop_1067@57:1> <= 0)
    end GenHcSolver.solve(89266)[3] (0.255961 sec.)
    begin YhornInterface.solve(134745)[3]
      begin HcSolver.solve_ub(134746)[4]
        encoded:
          P[<fail_2362@191:0>](<fail_2362@191:0>:int)|- bot
          
          P[<<loop_1067@57:2>@183:0>](<k_make_array_u_1392@188:1>:int,0:int,<k_make_array_u_1392@188:0>:int),
          ((<k_make_array_u_1392@188:1> > 0) && ((0 > <k_make_array_u_1392@188:0>) && (<fail_2362@191:0> = 1)))
          |- P[<fail_2362@191:0>](<fail_2362@191:0>:int)
          
          P[<<<loop_1067@57:2>@90:1>@106:0>](<loop_1067@57:0>:int,<loop_1067@57:1>:int,<loop_1067@57:1>:int,var672:int),
          P[<<<loop_1067@57:2>@59:1>@75:0>](<loop_1067@57:0>:int,<loop_1067@57:1>:int,<loop_1067@57:1>:int,(
                                            -1 + var673):int),
          P[<<aux_1064@153:3>@156:0>](<loop_1067@57:1>:int,<loop_1067@57:0>:int,var673:int,<<loop_1067@57:2>@183:0>:int),
          P[<loop_1067@57:1>](<loop_1067@57:0>:int,<loop_1067@57:1>:int),
          ((var673 <= <loop_1067@57:0>) && (<loop_1067@57:1> <> <<loop_1067@57:2>@183:0>))
          |- P[<<loop_1067@57:2>@183:0>](<loop_1067@57:0>:int,<loop_1067@57:1>:int,
                                         <<loop_1067@57:2>@183:0>:int)
          
          P[<aux_1064@153:4>](<aux_1064@153:0>:int,<aux_1064@153:1>:int,<aux_1064@153:2>:int,<<aux_1064@153:3>@156:0>:int),
          (<<aux_1064@153:3>@156:0> < <aux_1064@153:0>)
          |- P[<<aux_1064@153:3>@156:0>](<aux_1064@153:0>:int,<aux_1064@153:1>:int,
                                         <aux_1064@153:2>:int,<<aux_1064@153:3>@156:0>:int)
          
          P[<<<loop_1067@57:2>@90:1>@106:0>](<aux_1064@153:1>:int,<aux_1064@153:0>:int,<aux_1064@153:0>:int,var674:int),
          P[<<<loop_1067@57:2>@59:1>@75:0>](<aux_1064@153:1>:int,<aux_1064@153:0>:int,<aux_1064@153:0>:int,(
                                            -1 + <aux_1064@153:2>):int),
          P[<loop_1067@57:1>](<aux_1064@153:1>:int,<aux_1064@153:0>:int),
          ((<aux_1064@153:4> = 0) && (<aux_1064@153:2> <= <aux_1064@153:1>))
          |- P[<aux_1064@153:4>](<aux_1064@153:0>:int,<aux_1064@153:1>:int,
                                 <aux_1064@153:2>:int,<aux_1064@153:4>:int)
          
          P[<<loop_1067@57:2>@90:0>](<loop_1067@57:0>:int,0:int,<<loop_1067@57:2>@90:0>:int),
          P[<loop_1067@57:1>](<loop_1067@57:0>:int,<loop_1067@57:1>:int),
          ((<loop_1067@57:1> = 0) &&
           ((<<<loop_1067@57:2>@90:1>@106:0> = 0) &&
            ((0 <= <<loop_1067@57:2>@90:0>) && ((<loop_1067@57:0> > 0) && (<<loop_1067@57:2>@90:0> < <loop_1067@57:0>)))))
          |- P[<<<loop_1067@57:2>@90:1>@106:0>](<loop_1067@57:0>:int,
                                                <loop_1067@57:1>:int,
                                                <<loop_1067@57:2>@90:0>:int,
                                                <<<loop_1067@57:2>@90:1>@106:0>:int)
          
          P[<<<loop_1067@57:2>@59:1>@75:0>](<loop_1067@57:0>:int,<loop_1067@57:1>:int,<loop_1067@57:1>:int,var675:int),
          P[<loop_1067@57:1>](<loop_1067@57:0>:int,<loop_1067@57:1>:int),
          (((1 + var675) <= <loop_1067@57:0>) && (<<loop_1067@57:2>@90:0> = <loop_1067@57:1>))
          |- P[<<loop_1067@57:2>@90:0>](<loop_1067@57:0>:int,<loop_1067@57:1>:int,
                                        <<loop_1067@57:2>@90:0>:int)
          
          P[<<loop_1067@57:2>@59:0>](<loop_1067@57:0>:int,0:int,<<loop_1067@57:2>@59:0>:int),
          P[<loop_1067@57:1>](<loop_1067@57:0>:int,<loop_1067@57:1>:int),
          ((<loop_1067@57:1> = 0) &&
           ((<<<loop_1067@57:2>@59:1>@75:0> = 0) &&
            ((0 <= <<loop_1067@57:2>@59:0>) && ((<loop_1067@57:0> > 0) && (<<loop_1067@57:2>@59:0> < <loop_1067@57:0>)))))
          |- P[<<<loop_1067@57:2>@59:1>@75:0>](<loop_1067@57:0>:int,<loop_1067@57:1>:int,
                                               <<loop_1067@57:2>@59:0>:int,
                                               <<<loop_1067@57:2>@59:1>@75:0>:int)
          
          P[<loop_1067@57:1>](<loop_1067@57:0>:int,<loop_1067@57:1>:int), (
          <<loop_1067@57:2>@59:0> = <loop_1067@57:1>)
          |- P[<<loop_1067@57:2>@59:0>](<loop_1067@57:0>:int,<loop_1067@57:1>:int,
                                        <<loop_1067@57:2>@59:0>:int)
          
           ((<loop_1067@57:1> = 0) && (<loop_1067@57:0> > 0))
          |- P[<loop_1067@57:1>](<loop_1067@57:0>:int,<loop_1067@57:1>:int)
        input to Yhorn:
          P[<fail_2362@191:0>](<fail_2362@191:0>:int)|- bot
          
          P[<<loop_1067@57:2>@183:0>](<k_make_array_u_1392@188:1>:int,var784:int,<k_make_array_u_1392@188:0>:int),
          ((0 > <k_make_array_u_1392@188:0>) &&
           ((<k_make_array_u_1392@188:1> > 0) && ((var784 = 0) && (<fail_2362@191:0> = 1))))
          |- P[<fail_2362@191:0>](<fail_2362@191:0>:int)
          
          P[<<<loop_1067@57:2>@90:1>@106:0>](<loop_1067@57:0>:int,<loop_1067@57:1>:int,<loop_1067@57:1>:int,var672:int),
          P[<<<loop_1067@57:2>@59:1>@75:0>](<loop_1067@57:0>:int,<loop_1067@57:1>:int,<loop_1067@57:1>:int,var785:int),
          P[<<aux_1064@153:3>@156:0>](<loop_1067@57:1>:int,<loop_1067@57:0>:int,var673:int,<<loop_1067@57:2>@183:0>:int),
          P[<loop_1067@57:1>](<loop_1067@57:0>:int,<loop_1067@57:1>:int),
          (((1 + var785) = var673) && ((<loop_1067@57:1> <> <<loop_1067@57:2>@183:0>) && (var673 <= <loop_1067@57:0>)))
          |- P[<<loop_1067@57:2>@183:0>](<loop_1067@57:0>:int,<loop_1067@57:1>:int,
                                         <<loop_1067@57:2>@183:0>:int)
          
          P[<aux_1064@153:4>](<aux_1064@153:0>:int,<aux_1064@153:1>:int,<aux_1064@153:2>:int,<<aux_1064@153:3>@156:0>:int),
          (<<aux_1064@153:3>@156:0> < <aux_1064@153:0>)
          |- P[<<aux_1064@153:3>@156:0>](<aux_1064@153:0>:int,<aux_1064@153:1>:int,
                                         <aux_1064@153:2>:int,<<aux_1064@153:3>@156:0>:int)
          
          P[<<<loop_1067@57:2>@90:1>@106:0>](<aux_1064@153:1>:int,<aux_1064@153:0>:int,<aux_1064@153:0>:int,var674:int),
          P[<<<loop_1067@57:2>@59:1>@75:0>](<aux_1064@153:1>:int,<aux_1064@153:0>:int,<aux_1064@153:0>:int,var786:int),
          P[<loop_1067@57:1>](<aux_1064@153:1>:int,<aux_1064@153:0>:int),
          (((1 + var786) = <aux_1064@153:2>) && ((<aux_1064@153:2> <= <aux_1064@153:1>) && (<aux_1064@153:4> = 0)))
          |- P[<aux_1064@153:4>](<aux_1064@153:0>:int,<aux_1064@153:1>:int,
                                 <aux_1064@153:2>:int,<aux_1064@153:4>:int)
          
          P[<<loop_1067@57:2>@90:0>](<loop_1067@57:0>:int,var787:int,<<loop_1067@57:2>@90:0>:int),
          P[<loop_1067@57:1>](<loop_1067@57:0>:int,<loop_1067@57:1>:int),
          ((<<loop_1067@57:2>@90:0> < <loop_1067@57:0>) &&
           ((<loop_1067@57:0> > 0) &&
            ((0 <= <<loop_1067@57:2>@90:0>) &&
             ((var787 = 0) && ((<<<loop_1067@57:2>@90:1>@106:0> = 0) && (<loop_1067@57:1> = 0))))))
          |- P[<<<loop_1067@57:2>@90:1>@106:0>](<loop_1067@57:0>:int,
                                                <loop_1067@57:1>:int,
                                                <<loop_1067@57:2>@90:0>:int,
                                                <<<loop_1067@57:2>@90:1>@106:0>:int)
          
          P[<<<loop_1067@57:2>@59:1>@75:0>](<loop_1067@57:0>:int,<loop_1067@57:1>:int,<loop_1067@57:1>:int,var675:int),
          P[<loop_1067@57:1>](<loop_1067@57:0>:int,<loop_1067@57:1>:int),
          ((<<loop_1067@57:2>@90:0> = <loop_1067@57:1>) && ((1 + var675) <= <loop_1067@57:0>))
          |- P[<<loop_1067@57:2>@90:0>](<loop_1067@57:0>:int,<loop_1067@57:1>:int,
                                        <<loop_1067@57:2>@90:0>:int)
          
          P[<<loop_1067@57:2>@59:0>](<loop_1067@57:0>:int,var788:int,<<loop_1067@57:2>@59:0>:int),
          P[<loop_1067@57:1>](<loop_1067@57:0>:int,<loop_1067@57:1>:int),
          ((<<loop_1067@57:2>@59:0> < <loop_1067@57:0>) &&
           ((<loop_1067@57:0> > 0) &&
            ((0 <= <<loop_1067@57:2>@59:0>) &&
             ((var788 = 0) && ((<<<loop_1067@57:2>@59:1>@75:0> = 0) && (<loop_1067@57:1> = 0))))))
          |- P[<<<loop_1067@57:2>@59:1>@75:0>](<loop_1067@57:0>:int,<loop_1067@57:1>:int,
                                               <<loop_1067@57:2>@59:0>:int,
                                               <<<loop_1067@57:2>@59:1>@75:0>:int)
          
          P[<loop_1067@57:1>](<loop_1067@57:0>:int,<loop_1067@57:1>:int), (
          <<loop_1067@57:2>@59:0> = <loop_1067@57:1>)
          |- P[<<loop_1067@57:2>@59:0>](<loop_1067@57:0>:int,<loop_1067@57:1>:int,
                                        <<loop_1067@57:2>@59:0>:int)
          
           ((<loop_1067@57:0> > 0) && (<loop_1067@57:1> = 0))
          |- P[<loop_1067@57:1>](<loop_1067@57:0>:int,<loop_1067@57:1>:int)Yhorn (Wed Sep 25 10:52:05 JST 2013)


(0=0) & (v_sep_fail_2362_sep_191_sep_0($181)) -> 1=0.
(($181-1=0) & ($182=0) & ($183>0) & (-$184>0)) & (v_sep_loop_1067_sep_57_sep_2_sep_183_sep_0($183,$182,$184)) -> v_sep_fail_2362_sep_191_sep_0($181).
(($185-$186<=0) & ($187-$188<>0) & (-$185+$189+1=0)) & (v_sep_loop_1067_sep_57_sep_1($186,$187)) & (v_sep_aux_1064_sep_153_sep_3_sep_156_sep_0($187,$186,$185,$188)) & (v_sep_loop_1067_sep_57_sep_2_sep_59_sep_1_sep_75_sep_0($186,$187,$187,$189)) & (v_sep_loop_1067_sep_57_sep_2_sep_90_sep_1_sep_106_sep_0($186,$187,$187,$190)) -> v_sep_loop_1067_sep_57_sep_2_sep_183_sep_0($186,$187,$188).
($191-$192<0) & (v_sep_aux_1064_sep_153_sep_4($192,$193,$194,$191)) -> v_sep_aux_1064_sep_153_sep_3_sep_156_sep_0($192,$193,$194,$191).
(($195=0) & (-$193+$194<=0) & (-$194+$196+1=0)) & (v_sep_loop_1067_sep_57_sep_1($193,$192)) & (v_sep_loop_1067_sep_57_sep_2_sep_59_sep_1_sep_75_sep_0($193,$192,$192,$196)) & (v_sep_loop_1067_sep_57_sep_2_sep_90_sep_1_sep_106_sep_0($193,$192,$192,$197)) -> v_sep_aux_1064_sep_153_sep_4($192,$193,$194,$195).
(($187=0) & ($198=0) & ($199=0) & (-$200<=0) & ($186>0) & (-$186+$200<0)) & (v_sep_loop_1067_sep_57_sep_1($186,$187)) & (v_sep_loop_1067_sep_57_sep_2_sep_90_sep_0($186,$199,$200)) -> v_sep_loop_1067_sep_57_sep_2_sep_90_sep_1_sep_106_sep_0($186,$187,$200,$198).
((-$186+$201+1<=0) & (-$187+$200=0)) & (v_sep_loop_1067_sep_57_sep_1($186,$187)) & (v_sep_loop_1067_sep_57_sep_2_sep_59_sep_1_sep_75_sep_0($186,$187,$187,$201)) -> v_sep_loop_1067_sep_57_sep_2_sep_90_sep_0($186,$187,$200).
(($187=0) & ($202=0) & ($203=0) & (-$204<=0) & ($186>0) & (-$186+$204<0)) & (v_sep_loop_1067_sep_57_sep_1($186,$187)) & (v_sep_loop_1067_sep_57_sep_2_sep_59_sep_0($186,$203,$204)) -> v_sep_loop_1067_sep_57_sep_2_sep_59_sep_1_sep_75_sep_0($186,$187,$204,$202).
(-$187+$204=0) & (v_sep_loop_1067_sep_57_sep_1($186,$187)) -> v_sep_loop_1067_sep_57_sep_2_sep_59_sep_0($186,$187,$204).
($187=0) & ($186>0) -> v_sep_loop_1067_sep_57_sep_1($186,$187).


v_sep_aux_1064_sep_153_sep_3_sep_156_sep_0: X
v_sep_aux_1064_sep_153_sep_4: X
v_sep_fail_2362_sep_191_sep_0: X
v_sep_loop_1067_sep_57_sep_1: X
v_sep_loop_1067_sep_57_sep_2_sep_183_sep_0: X
v_sep_loop_1067_sep_57_sep_2_sep_59_sep_0: X
v_sep_loop_1067_sep_57_sep_2_sep_59_sep_1_sep_75_sep_0: X
v_sep_loop_1067_sep_57_sep_2_sep_90_sep_0: X
v_sep_loop_1067_sep_57_sep_2_sep_90_sep_1_sep_106_sep_0: X
......................
v_sep_aux_1064_sep_153_sep_3_sep_156_sep_0: X
v_sep_aux_1064_sep_153_sep_4: X
v_sep_fail_2362_sep_191_sep_0: X
v_sep_loop_1067_sep_57_sep_1: X
v_sep_loop_1067_sep_57_sep_2_sep_183_sep_0: X
v_sep_loop_1067_sep_57_sep_2_sep_59_sep_0: X
v_sep_loop_1067_sep_57_sep_2_sep_59_sep_1_sep_75_sep_0: X
v_sep_loop_1067_sep_57_sep_2_sep_90_sep_0: X
v_sep_loop_1067_sep_57_sep_2_sep_90_sep_1_sep_106_sep_0: X
...
v_sep_aux_1064_sep_153_sep_3_sep_156_sep_0: X
v_sep_aux_1064_sep_153_sep_4: X
v_sep_fail_2362_sep_191_sep_0: X
v_sep_loop_1067_sep_57_sep_1: X
v_sep_loop_1067_sep_57_sep_2_sep_183_sep_0: X
v_sep_loop_1067_sep_57_sep_2_sep_59_sep_0: X
v_sep_loop_1067_sep_57_sep_2_sep_59_sep_1_sep_75_sep_0: X
v_sep_loop_1067_sep_57_sep_2_sep_90_sep_0: X
v_sep_loop_1067_sep_57_sep_2_sep_90_sep_1_sep_106_sep_0: X
...........
v_sep_aux_1064_sep_153_sep_3_sep_156_sep_0: X
v_sep_aux_1064_sep_153_sep_4: X
v_sep_fail_2362_sep_191_sep_0: X
v_sep_loop_1067_sep_57_sep_1: X
v_sep_loop_1067_sep_57_sep_2_sep_183_sep_0: X
v_sep_loop_1067_sep_57_sep_2_sep_59_sep_0: X
v_sep_loop_1067_sep_57_sep_2_sep_59_sep_1_sep_75_sep_0: X
v_sep_loop_1067_sep_57_sep_2_sep_90_sep_0: X
v_sep_loop_1067_sep_57_sep_2_sep_90_sep_1_sep_106_sep_0: X
................
v_sep_aux_1064_sep_153_sep_3_sep_156_sep_0: X
v_sep_aux_1064_sep_153_sep_4: X
v_sep_fail_2362_sep_191_sep_0: X
v_sep_loop_1067_sep_57_sep_1: X
v_sep_loop_1067_sep_57_sep_2_sep_183_sep_0: X
v_sep_loop_1067_sep_57_sep_2_sep_59_sep_0: X
v_sep_loop_1067_sep_57_sep_2_sep_59_sep_1_sep_75_sep_0: X
v_sep_loop_1067_sep_57_sep_2_sep_90_sep_0: X
v_sep_loop_1067_sep_57_sep_2_sep_90_sep_1_sep_106_sep_0: X
......................(0=0) & (v_sep_fail_2362_sep_191_sep_0($181)) -> 1=0.
(($181-1=0) & ($182=0) & ($183>0) & (-$184>0)) & (v_sep_loop_1067_sep_57_sep_2_sep_183_sep_0($183,$182,$184)) -> v_sep_fail_2362_sep_191_sep_0($181).
(($185-$186<=0) & ($187-$188<>0) & (-$185+$189+1=0)) & (v_sep_loop_1067_sep_57_sep_1($186,$187)) & (v_sep_aux_1064_sep_153_sep_3_sep_156_sep_0($187,$186,$185,$188)) & (v_sep_loop_1067_sep_57_sep_2_sep_59_sep_1_sep_75_sep_0($186,$187,$187,$189)) & (v_sep_loop_1067_sep_57_sep_2_sep_90_sep_1_sep_106_sep_0($186,$187,$187,$190)) -> v_sep_loop_1067_sep_57_sep_2_sep_183_sep_0($186,$187,$188).
($191-$192<0) & (v_sep_aux_1064_sep_153_sep_4($192,$193,$194,$191)) -> v_sep_aux_1064_sep_153_sep_3_sep_156_sep_0($192,$193,$194,$191).
(($195=0) & (-$193+$194<=0) & (-$194+$196+1=0)) & (v_sep_loop_1067_sep_57_sep_1($193,$192)) & (v_sep_loop_1067_sep_57_sep_2_sep_59_sep_1_sep_75_sep_0($193,$192,$192,$196)) & (v_sep_loop_1067_sep_57_sep_2_sep_90_sep_1_sep_106_sep_0($193,$192,$192,$197)) -> v_sep_aux_1064_sep_153_sep_4($192,$193,$194,$195).
(($187=0) & ($198=0) & ($199=0) & (-$200<=0) & ($186>0) & (-$186+$200<0)) & (v_sep_loop_1067_sep_57_sep_1($186,$187)) & (v_sep_loop_1067_sep_57_sep_2_sep_90_sep_0($186,$199,$200)) -> v_sep_loop_1067_sep_57_sep_2_sep_90_sep_1_sep_106_sep_0($186,$187,$200,$198).
((-$186+$201+1<=0) & (-$187+$200=0)) & (v_sep_loop_1067_sep_57_sep_1($186,$187)) & (v_sep_loop_1067_sep_57_sep_2_sep_59_sep_1_sep_75_sep_0($186,$187,$187,$201)) -> v_sep_loop_1067_sep_57_sep_2_sep_90_sep_0($186,$187,$200).
(($187=0) & ($202=0) & ($203=0) & (-$204<=0) & ($186>0) & (-$186+$204<0)) & (v_sep_loop_1067_sep_57_sep_1($186,$187)) & (v_sep_loop_1067_sep_57_sep_2_sep_59_sep_0($186,$203,$204)) -> v_sep_loop_1067_sep_57_sep_2_sep_59_sep_1_sep_75_sep_0($186,$187,$204,$202).
(-$187+$204=0) & (v_sep_loop_1067_sep_57_sep_1($186,$187)) -> v_sep_loop_1067_sep_57_sep_2_sep_59_sep_0($186,$187,$204).
($187=0) & ($186>0) -> v_sep_loop_1067_sep_57_sep_1($186,$187).

        solution:
          P[<<aux_1064@153:3>@156:0>]($220:int,$222:int,$224:int,$226:int) = (0 <= $226)
          P[<aux_1064@153:4>]($247:int,$249:int,$251:int,$253:int) = (0 <= $253)
          P[<fail_2362@191:0>]($205:bool) = false
          P[<loop_1067@57:1>]($215:int,$217:int) = true
          P[<<loop_1067@57:2>@183:0>]($208:int,$210:int,$212:int) = (0 <= $212)
          P[<<loop_1067@57:2>@59:0>]($263:int,$265:int,$267:int) = true
          P[<<<loop_1067@57:2>@59:1>@75:0>]($229:int,$231:int,$233:int,$235:int) = true
          P[<<loop_1067@57:2>@90:0>]($256:int,$258:int,$260:int) = true
          P[<<<loop_1067@57:2>@90:1>@106:0>]($238:int,$240:int,$242:int,$244:int) = true
        
      end HcSolver.solve_ub(134746)[4] (0.066990 sec.)
      begin HcSolver.check_validity(135604)[4]
        input:
          P[<fail_2362@191:0>](<fail_2362@191:0>:bool)|- bot
          
          P[<<loop_1067@57:2>@183:0>](<k_make_array_u_1392@188:1>:int,0:int,<k_make_array_u_1392@188:0>:int),
          ((<k_make_array_u_1392@188:1> > 0) && ((0 > <k_make_array_u_1392@188:0>) && <fail_2362@191:0>))
          |- P[<fail_2362@191:0>](<fail_2362@191:0>:bool)
          
          P[<<<loop_1067@57:2>@90:1>@106:0>](<loop_1067@57:0>:int,<loop_1067@57:1>:int,<loop_1067@57:1>:int,var672:int),
          P[<<<loop_1067@57:2>@59:1>@75:0>](<loop_1067@57:0>:int,<loop_1067@57:1>:int,<loop_1067@57:1>:int,(
                                            -1 + var673):int),
          P[<<aux_1064@153:3>@156:0>](<loop_1067@57:1>:int,<loop_1067@57:0>:int,var673:int,<<loop_1067@57:2>@183:0>:int),
          P[<loop_1067@57:1>](<loop_1067@57:0>:int,<loop_1067@57:1>:int),
          ((var673 <= <loop_1067@57:0>) && (<loop_1067@57:1> <> <<loop_1067@57:2>@183:0>))
          |- P[<<loop_1067@57:2>@183:0>](<loop_1067@57:0>:int,<loop_1067@57:1>:int,
                                         <<loop_1067@57:2>@183:0>:int)
          
          P[<aux_1064@153:4>](<aux_1064@153:0>:int,<aux_1064@153:1>:int,<aux_1064@153:2>:int,<<aux_1064@153:3>@156:0>:int),
          (<<aux_1064@153:3>@156:0> < <aux_1064@153:0>)
          |- P[<<aux_1064@153:3>@156:0>](<aux_1064@153:0>:int,<aux_1064@153:1>:int,
                                         <aux_1064@153:2>:int,<<aux_1064@153:3>@156:0>:int)
          
          P[<<<loop_1067@57:2>@90:1>@106:0>](<aux_1064@153:1>:int,<aux_1064@153:0>:int,<aux_1064@153:0>:int,var674:int),
          P[<<<loop_1067@57:2>@59:1>@75:0>](<aux_1064@153:1>:int,<aux_1064@153:0>:int,<aux_1064@153:0>:int,(
                                            -1 + <aux_1064@153:2>):int),
          P[<loop_1067@57:1>](<aux_1064@153:1>:int,<aux_1064@153:0>:int),
          ((<aux_1064@153:4> = 0) && (<aux_1064@153:2> <= <aux_1064@153:1>))
          |- P[<aux_1064@153:4>](<aux_1064@153:0>:int,<aux_1064@153:1>:int,
                                 <aux_1064@153:2>:int,<aux_1064@153:4>:int)
          
          P[<<loop_1067@57:2>@90:0>](<loop_1067@57:0>:int,0:int,<<loop_1067@57:2>@90:0>:int),
          P[<loop_1067@57:1>](<loop_1067@57:0>:int,<loop_1067@57:1>:int),
          ((<loop_1067@57:1> = 0) &&
           ((<<<loop_1067@57:2>@90:1>@106:0> = 0) &&
            ((0 <= <<loop_1067@57:2>@90:0>) && ((<loop_1067@57:0> > 0) && (<<loop_1067@57:2>@90:0> < <loop_1067@57:0>)))))
          |- P[<<<loop_1067@57:2>@90:1>@106:0>](<loop_1067@57:0>:int,
                                                <loop_1067@57:1>:int,
                                                <<loop_1067@57:2>@90:0>:int,
                                                <<<loop_1067@57:2>@90:1>@106:0>:int)
          
          P[<<<loop_1067@57:2>@59:1>@75:0>](<loop_1067@57:0>:int,<loop_1067@57:1>:int,<loop_1067@57:1>:int,var675:int),
          P[<loop_1067@57:1>](<loop_1067@57:0>:int,<loop_1067@57:1>:int),
          (((1 + var675) <= <loop_1067@57:0>) && (<<loop_1067@57:2>@90:0> = <loop_1067@57:1>))
          |- P[<<loop_1067@57:2>@90:0>](<loop_1067@57:0>:int,<loop_1067@57:1>:int,
                                        <<loop_1067@57:2>@90:0>:int)
          
          P[<<loop_1067@57:2>@59:0>](<loop_1067@57:0>:int,0:int,<<loop_1067@57:2>@59:0>:int),
          P[<loop_1067@57:1>](<loop_1067@57:0>:int,<loop_1067@57:1>:int),
          ((<loop_1067@57:1> = 0) &&
           ((<<<loop_1067@57:2>@59:1>@75:0> = 0) &&
            ((0 <= <<loop_1067@57:2>@59:0>) && ((<loop_1067@57:0> > 0) && (<<loop_1067@57:2>@59:0> < <loop_1067@57:0>)))))
          |- P[<<<loop_1067@57:2>@59:1>@75:0>](<loop_1067@57:0>:int,<loop_1067@57:1>:int,
                                               <<loop_1067@57:2>@59:0>:int,
                                               <<<loop_1067@57:2>@59:1>@75:0>:int)
          
          P[<loop_1067@57:1>](<loop_1067@57:0>:int,<loop_1067@57:1>:int), (
          <<loop_1067@57:2>@59:0> = <loop_1067@57:1>)
          |- P[<<loop_1067@57:2>@59:0>](<loop_1067@57:0>:int,<loop_1067@57:1>:int,
                                        <<loop_1067@57:2>@59:0>:int)
          
           ((<loop_1067@57:1> = 0) && (<loop_1067@57:0> > 0))
          |- P[<loop_1067@57:1>](<loop_1067@57:0>:int,<loop_1067@57:1>:int)
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        
      end HcSolver.check_validity(135604)[4] (0.007999 sec.)
      solution:
        P[<<aux_1064@153:3>@156:0>]($220:int,$222:int,$224:int,$226:int) = (0 <= $226)
        P[<aux_1064@153:4>]($247:int,$249:int,$251:int,$253:int) = (0 <= $253)
        P[<fail_2362@191:0>]($205:bool) = false
        P[<loop_1067@57:1>]($215:int,$217:int) = true
        P[<<loop_1067@57:2>@183:0>]($208:int,$210:int,$212:int) = (0 <= $212)
        P[<<loop_1067@57:2>@59:0>]($263:int,$265:int,$267:int) = true
        P[<<<loop_1067@57:2>@59:1>@75:0>]($229:int,$231:int,$233:int,$235:int) = true
        P[<<loop_1067@57:2>@90:0>]($256:int,$258:int,$260:int) = true
        P[<<<loop_1067@57:2>@90:1>@106:0>]($238:int,$240:int,$242:int,$244:int) = true
    end YhornInterface.solve(134745)[3] (0.075989 sec.)
    
  end RefTypeInfer.infer_etrs(29953)[2] (1.816724 sec.)
  refinement types:
    main_2340: X
    f_2358: v1:int -> X
    main_1073: v1:int -> (v2:unit -> X) -> X
    queen_1045: v1:int -> (v2:unit -> X) -> X
    loop_1067: v1:int ->
               v2:{v2:int | (v2 <= 0)} ->
               (v3:int -> (v4:int -> X) -> X /\
                v7:int -> (v8:int -> X) -> X /\
                v11:{v11:int | false} -> (v12:int -> X) -> X) -> (v15:unit -> X) -> X
    make_array_1355: v1:int -> v2:int -> v3:int -> (v4:int -> X) -> X
    k_make_array_u_1392: v1:int -> v2:int -> v3:int -> (v4:int -> X) -> v6:bool -> X
    k_make_array_u_1403: v1:int -> v2:int -> v3:int -> (v4:int -> X) -> v6:unit -> X
    f_loop_2352: v1:int ->
                 v2:int ->
                 (v3:int -> (v4:int -> X) -> X /\
                  v7:int -> (v8:int -> X) -> X) -> (v11:unit -> X) -> v13:int -> X
    assign_1348: v1:int ->
                 v2:int ->
                 v3:int ->
                 (v4:int -> (v5:int -> X) -> X /\
                  v8:int -> (v9:int -> X) -> X) ->
                 ((v12:int -> (v13:int -> X) -> X /\
                   v16:int -> (v17:int -> X) -> X) -> X) -> X
    update_1354: v1:int ->
                 v2:int ->
                 (v3:int -> (v4:int -> X) -> X /\
                  v7:int -> (v8:int -> X) -> X) ->
                 v11:int -> ((v12:int -> (v13:int -> X) -> X /\
                              v16:int -> (v17:int -> X) -> X) -> X) -> X
    make_array_1355: v1:int -> v2:int -> v3:int -> (v4:int -> X) -> X
    k_make_array_u_1392: v1:int -> v2:int -> v3:int -> (v4:int -> X) -> v6:bool -> X
    k_make_array_u_1403: v1:int -> v2:int -> v3:int -> (v4:int -> X) -> v6:unit -> X
    f_update_2341: v1:int ->
                   v2:int ->
                   v3:int ->
                   (v4:int -> (v5:int -> X) -> X) ->
                   ((v8:int -> (v9:int -> X) -> X /\
                     v12:int -> (v13:int -> X) -> X) -> X) -> v17:int -> X
    f_loop_2354: v1:int ->
                 v2:int ->
                 v3:int -> (v4:unit -> X) -> (v6:int -> (v7:int -> X) -> X /\
                                              v10:int -> (v11:int -> X) -> X) -> X
    test_1060: v1:int ->
               v2:int -> (v3:int -> (v4:int -> X) -> X /\
                          v7:int -> (v8:int -> X) -> X) -> (v11:bool -> X) -> X
    a_1039: v1:int -> v2:int -> v3:int -> v4:int -> (v5:int -> (v6:int -> X) -> X) -> v9:int -> (v10:int -> X) -> X
    f_test_2349: v1:int -> v2:int -> (v3:int -> (v4:int -> X) -> X) -> (v7:bool -> X) -> v9:int -> X
    aux_1064: v1:int ->
              v2:int ->
              v3:int -> (v4:{v4:int | false} -> (v5:int -> X) -> X) -> v8:{v8:int | (v1 <= v8)} -> (v9:bool -> X) -> X
    a_1039: v1:int -> v2:int -> v3:int -> v4:int -> (v5:int -> (v6:int -> X) -> X) -> v9:int -> (v10:int -> X) -> X
    make_array_1355: v1:int -> v2:int -> v3:int -> (v4:int -> X) -> X
    k_make_array_u_1392: v1:int -> v2:int -> v3:int -> (v4:int -> X) -> v6:bool -> X
    fail_2362: v1:{v1:bool | false} -> (v2:unit -> X) -> X
    abs_1043: var846:int -> (var845:int -> X) -> X
    aux_1056: var855:int -> var854:int -> (var853:int -> (var852:int -> X) -> X) -> (var849:unit -> X) -> X
    br_f_loop_2360: var867:bool ->
                    var866:int ->
                    var865:int ->
                    var864:int -> (var863:unit -> X) -> (var861:int -> (var860:int -> X) -> X) -> var857:bool -> X
    dotsPrint_1052: var872:int -> var871:int -> (var870:unit -> X) -> X
    f_2359: var875:int -> var874:unit -> X
    f_aux_2343: var885:int ->
                var884:int -> (var883:int -> (var882:int -> X) -> X) -> (var879:unit -> X) -> var877:int -> X
    f_aux_2344: var896:int ->
                var895:int ->
                var894:int -> (var893:int -> (var892:int -> X) -> X) -> (var889:unit -> X) -> var887:unit -> X
    f_aux_2345: var908:int ->
                var907:int ->
                var906:int ->
                var905:unit -> (var904:int -> (var903:int -> X) -> X) -> (var900:unit -> X) -> var898:unit -> X
    f_aux_2346: var921:int ->
                var920:int ->
                var919:int ->
                var918:unit ->
                var917:unit -> (var916:int -> (var915:int -> X) -> X) -> (var912:unit -> X) -> var910:unit -> X
    f_aux_2347: var935:int ->
                var934:int ->
                var933:int ->
                var932:unit ->
                var931:unit ->
                var930:unit -> (var929:int -> (var928:int -> X) -> X) -> (var925:unit -> X) -> var923:unit -> X
    f_aux_2350: var947:int ->
                var946:int ->
                var945:int ->
                var944:int -> (var943:int -> (var942:int -> X) -> X) -> (var939:bool -> X) -> var937:int -> X
    f_aux_2351: var960:int ->
                var959:int ->
                var958:int ->
                var957:int ->
                var956:int -> (var955:int -> (var954:int -> X) -> X) -> (var951:bool -> X) -> var949:int -> X
    f_dotsPrint_2342: var966:int -> var965:int -> (var964:unit -> X) -> var962:unit -> X
    f_loop_2353: var976:int ->
                 var975:int -> var974:int -> (var973:unit -> X) -> (var971:int -> (var970:int -> X) -> X) -> X
    f_loop_2355: var987:int ->
                 var986:int ->
                 var985:int -> (var984:unit -> X) -> (var982:int -> (var981:int -> X) -> X) -> var978:bool -> X
    f_loop_2356: var999:bool ->
                 var998:int ->
                 var997:int ->
                 var996:int -> (var995:unit -> X) -> (var993:int -> (var992:int -> X) -> X) -> var989:unit -> X
    f_main_2357: var1004:int -> (var1003:unit -> X) -> var1001:unit -> X
    f_queenPrint_2348: var1009:int -> (var1008:unit -> X) -> var1006:unit -> X
    print_string_1350: var1013:unit -> (var1012:unit -> X) -> X
    queenPrint_1054: var1021:int -> (var1020:int -> (var1019:int -> X) -> X) -> (var1016:unit -> X) -> X
  abstraction types:
    main_2340: X
    f_2358: v1:int -> X
    main_1073: v1:int -> (v2:unit -> X) -> X
    queen_1045: v1:int -> (v2:unit -> X) -> X
    loop_1067: v1:int -> v2:int[v2 -> (v2 <= 0)] -> (var1026:int -> (var1027:int -> X) -> X) -> (v15:unit -> X) -> X
    make_array_1355: var1068:int -> var1069:int -> var1070:int -> (var1071:int -> X) -> X
    k_make_array_u_1392: var1081:int -> var1082:int -> var1083:int -> (var1084:int -> X) -> var1086:bool -> X
    k_make_array_u_1403: var1088:int -> var1089:int -> var1090:int -> (var1091:int -> X) -> var1093:unit -> X
    f_loop_2352: v1:int -> v2:int -> (var1030:int -> (var1031:int -> X) -> X) -> (v11:unit -> X) -> v13:int -> X
    assign_1348: v1:int ->
                 v2:int ->
                 v3:int ->
                 (var1038:int -> (var1039:int -> X) -> X) -> ((var1034:int -> (var1035:int -> X) -> X) -> X) -> X
    update_1354: v1:int ->
                 v2:int ->
                 (var1046:int -> (var1047:int -> X) -> X) ->
                 v11:int -> ((var1042:int -> (var1043:int -> X) -> X) -> X) -> X
    f_update_2341: v1:int ->
                   v2:int ->
                   v3:int ->
                   (v4:int -> (v5:int -> X) -> X) -> ((var1050:int -> (var1051:int -> X) -> X) -> X) -> v17:int -> X
    f_loop_2354: v1:int -> v2:int -> v3:int -> (v4:unit -> X) -> (var1054:int -> (var1055:int -> X) -> X) -> X
    test_1060: v1:int -> v2:int -> (var1058:int -> (var1059:int -> X) -> X) -> (v11:bool -> X) -> X
    a_1039: var1095:int ->
            var1096:int ->
            var1097:int ->
            var1098:int -> (var1099:int -> (var1100:int -> X) -> X) -> var1103:int -> (var1104:int -> X) -> X
    f_test_2349: v1:int -> v2:int -> (v3:int -> (v4:int -> X) -> X) -> (v7:bool -> X) -> v9:int -> X
    aux_1064: v1:int ->
              v2:int -> v3:int -> (v4:int -> (v5:int -> X) -> X) -> v8:int[v8 -> (
                                                                    v1 <= v8)] -> (v9:bool -> X) -> X
    fail_2362: v1:bool -> (v2:unit -> X) -> X
    abs_1043: var846:int -> (var845:int -> X) -> X
    aux_1056: var855:int -> var854:int -> (var853:int -> (var852:int -> X) -> X) -> (var849:unit -> X) -> X
    br_f_loop_2360: var867:bool ->
                    var866:int ->
                    var865:int ->
                    var864:int -> (var863:unit -> X) -> (var861:int -> (var860:int -> X) -> X) -> var857:bool -> X
    dotsPrint_1052: var872:int -> var871:int -> (var870:unit -> X) -> X
    f_2359: var875:int -> var874:unit -> X
    f_aux_2343: var885:int ->
                var884:int -> (var883:int -> (var882:int -> X) -> X) -> (var879:unit -> X) -> var877:int -> X
    f_aux_2344: var896:int ->
                var895:int ->
                var894:int -> (var893:int -> (var892:int -> X) -> X) -> (var889:unit -> X) -> var887:unit -> X
    f_aux_2345: var908:int ->
                var907:int ->
                var906:int ->
                var905:unit -> (var904:int -> (var903:int -> X) -> X) -> (var900:unit -> X) -> var898:unit -> X
    f_aux_2346: var921:int ->
                var920:int ->
                var919:int ->
                var918:unit ->
                var917:unit -> (var916:int -> (var915:int -> X) -> X) -> (var912:unit -> X) -> var910:unit -> X
    f_aux_2347: var935:int ->
                var934:int ->
                var933:int ->
                var932:unit ->
                var931:unit ->
                var930:unit -> (var929:int -> (var928:int -> X) -> X) -> (var925:unit -> X) -> var923:unit -> X
    f_aux_2350: var947:int ->
                var946:int ->
                var945:int ->
                var944:int -> (var943:int -> (var942:int -> X) -> X) -> (var939:bool -> X) -> var937:int -> X
    f_aux_2351: var960:int ->
                var959:int ->
                var958:int ->
                var957:int ->
                var956:int -> (var955:int -> (var954:int -> X) -> X) -> (var951:bool -> X) -> var949:int -> X
    f_dotsPrint_2342: var966:int -> var965:int -> (var964:unit -> X) -> var962:unit -> X
    f_loop_2353: var976:int ->
                 var975:int -> var974:int -> (var973:unit -> X) -> (var971:int -> (var970:int -> X) -> X) -> X
    f_loop_2355: var987:int ->
                 var986:int ->
                 var985:int -> (var984:unit -> X) -> (var982:int -> (var981:int -> X) -> X) -> var978:bool -> X
    f_loop_2356: var999:bool ->
                 var998:int ->
                 var997:int ->
                 var996:int -> (var995:unit -> X) -> (var993:int -> (var992:int -> X) -> X) -> var989:unit -> X
    f_main_2357: var1004:int -> (var1003:unit -> X) -> var1001:unit -> X
    f_queenPrint_2348: var1009:int -> (var1008:unit -> X) -> var1006:unit -> X
    print_string_1350: var1013:unit -> (var1012:unit -> X) -> X
    queenPrint_1054: var1021:int -> (var1020:int -> (var1019:int -> X) -> X) -> (var1016:unit -> X) -> X
  
end AbsTypeInfer.refine(29952)[1] (1.836721 sec.)
DONE!

Prefix of spurious counter-example::
0; 0; 0; 0; 0; 0; 0; 0; 1; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0

Program with abstraction types (CEGAR-cycle 3)::
Main: main_2340
  main_2340 -> (rand_int f_2358)
  a_1039 i_1035 n_1036 x_1038 x_1457 a_1037 j_1040 k_update_a_1472 when (i_1035 = j_1040) -> (k_update_a_1472 x_1038)
  a_1039 i_1035 n_1036 x_1038 x_1457 a_1037 j_1040 k_update_a_1472 when (
      not (i_1035 = j_1040)) -> (a_1037 j_1040 k_update_a_1472)
  abs_1043 x_1044 k_abs_1517 when (x_1044 < 0) -> (k_abs_1517 (0 - x_1044))
  abs_1043 x_1044 k_abs_1517 when (not (x_1044 < 0)) -> (k_abs_1517 x_1044)
  assign_1348 size_1046 i_1049 j_1050 a_1051 k_queen_assign_1596 ->
      (update_1354 i_1049 size_1046 a_1051 j_1050 k_queen_assign_1596)
  aux_1056 size_1046 row_1057 a_1058 k_queen_queenPrint_aux_1720 when (
      row_1057 >= size_1046) -> (k_queen_queenPrint_aux_1720 ())
  aux_1056 size_1046 row_1057 a_1058 k_queen_queenPrint_aux_1720 when (
      not (row_1057 >= size_1046)) ->
      (a_1058 row_1057 (f_aux_2343 row_1057 size_1046 a_1058 k_queen_queenPrint_aux_1720))
  aux_1064 j_1061 size_1046 x_1880 a_1062 i_1065 k_queen_test_aux_1904 when (
      i_1065 < j_1061) -> (a_1062 i_1065 (f_aux_2350 i_1065 j_1061 size_1046 x_1880 a_1062 k_queen_test_aux_1904))
  aux_1064 j_1061 size_1046 x_1880 a_1062 i_1065 k_queen_test_aux_1904 when (
      not (i_1065 < j_1061)) -> (k_queen_test_aux_1904 true)
  br_f_loop_2360 b_2361 row_1068 size_1046 x_1998 k_queen_loop_1992 x_2087 b_2251 when b_2361 ->
      (queenPrint_1054 size_1046 x_2087 (f_loop_2356 b_2251 row_1068 size_1046 x_1998 k_queen_loop_1992 x_2087))
  br_f_loop_2360 b_2361 row_1068 size_1046 x_1998 k_queen_loop_1992 x_2087 b_2251 when (
      not b_2361) -> (loop_1067 size_1046 (row_1068 + 1) x_2087 k_queen_loop_1992)
  dotsPrint_1052 size_1046 n_1053 k_queen_dotsPrint_1638 when (n_1053 = 0) -> (k_queen_dotsPrint_1638 ())
  dotsPrint_1052 size_1046 n_1053 k_queen_dotsPrint_1638 when (not (n_1053 = 0)) ->
      (print_string_1350 () (f_dotsPrint_2342 n_1053 size_1046 k_queen_dotsPrint_1638))
  f_2358 x_2315 -> (main_1073 x_2315 (f_2359 x_2315))
  f_2359 x_2315 x_2312 -> end
  f_aux_2343 row_1057 size_1046 a_1058 k_queen_queenPrint_aux_1720 x_1723 ->
      (dotsPrint_1052 size_1046 (x_1723 - 1) (f_aux_2344 row_1057 size_1046 x_1723 a_1058 k_queen_queenPrint_aux_1720))
  f_aux_2344 row_1057 size_1046 x_1723 a_1058 k_queen_queenPrint_aux_1720 x_1736 ->
      (print_string_1350 () (f_aux_2345 row_1057 size_1046 x_1723 x_1736 a_1058 k_queen_queenPrint_aux_1720))
  f_aux_2345 row_1057 size_1046 x_1723 x_1736 a_1058 k_queen_queenPrint_aux_1720 x_1749 ->
      (dotsPrint_1052 size_1046 (size_1046 - x_1723)
        (f_aux_2346 row_1057 size_1046 x_1723 x_1736 x_1749 a_1058 k_queen_queenPrint_aux_1720))
  f_aux_2346 row_1057 size_1046 x_1723 x_1736 x_1749 a_1058 k_queen_queenPrint_aux_1720 x_1762 ->
      (print_string_1350 ()
        (f_aux_2347 row_1057 size_1046 x_1723 x_1736 x_1749 x_1762 a_1058 k_queen_queenPrint_aux_1720))
  f_aux_2347 row_1057 size_1046 x_1723 x_1736 x_1749 x_1762 a_1058 k_queen_queenPrint_aux_1720 x_1775 ->
      (aux_1056 size_1046 (row_1057 + 1) a_1058 k_queen_queenPrint_aux_1720)
  f_aux_2350 i_1065 j_1061 size_1046 x_1880 a_1062 k_queen_test_aux_1904 x_1907 when (
      x_1907 = x_1880) -> (k_queen_test_aux_1904 false)
  f_aux_2350 i_1065 j_1061 size_1046 x_1880 a_1062 k_queen_test_aux_1904 x_1907 when (
      not (x_1907 = x_1880)) ->
      (abs_1043 (x_1880 - x_1907) (f_aux_2351 i_1065 j_1061 size_1046 x_1880 x_1907 a_1062 k_queen_test_aux_1904))
  f_aux_2351 i_1065 j_1061 size_1046 x_1880 x_1907 a_1062 k_queen_test_aux_1904 x_1920 when (
      x_1920 = (j_1061 - i_1065)) -> (k_queen_test_aux_1904 false)
  f_aux_2351 i_1065 j_1061 size_1046 x_1880 x_1907 a_1062 k_queen_test_aux_1904 x_1920 when (
      not (x_1920 = (j_1061 - i_1065))) -> (aux_1064 j_1061 size_1046 x_1880 a_1062 (i_1065 + 1) k_queen_test_aux_1904)
  f_dotsPrint_2342 n_1053 size_1046 k_queen_dotsPrint_1638 x_1641 ->
      (dotsPrint_1052 size_1046 (n_1053 - 1) k_queen_dotsPrint_1638)
  f_loop_2352 row_1068 size_1046 a_1069 k_queen_loop_1992 x_1998 when (
      (x_1998 + 1) > size_1046) ->
      (assign_1348 size_1046 row_1068 0 a_1069 (f_loop_2353 row_1068 size_1046 x_1998 k_queen_loop_1992))
  f_loop_2352 row_1068 size_1046 a_1069 k_queen_loop_1992 x_1998 when (
      not ((x_1998 + 1) > size_1046)) ->
      (assign_1348 size_1046 row_1068 (x_1998 + 1) a_1069 (f_loop_2354 row_1068 size_1046 x_1998 k_queen_loop_1992))
  f_loop_2353 row_1068 size_1046 x_1998 k_queen_loop_1992 x_2015 when (row_1068 = 0) -> (k_queen_loop_1992 ())
  f_loop_2353 row_1068 size_1046 x_1998 k_queen_loop_1992 x_2015 when (
      not (row_1068 = 0)) -> (loop_1067 size_1046 (row_1068 - 1) x_2015 k_queen_loop_1992)
  f_loop_2354 row_1068 size_1046 x_1998 k_queen_loop_1992 x_2087 ->
      (test_1060 size_1046 row_1068 x_2087 (f_loop_2355 row_1068 size_1046 x_1998 k_queen_loop_1992 x_2087))
  f_loop_2355 row_1068 size_1046 x_1998 k_queen_loop_1992 x_2087 b_2251 when b_2251 ->
      (br_f_loop_2360 (row_1068 > size_1046) row_1068 size_1046 x_1998 k_queen_loop_1992 x_2087 b_2251)
  f_loop_2355 row_1068 size_1046 x_1998 k_queen_loop_1992 x_2087 b_2251 when (
      not b_2251) -> (loop_1067 size_1046 row_1068 x_2087 k_queen_loop_1992)
  f_loop_2356 b_2251 row_1068 size_1046 x_1998 k_queen_loop_1992 x_2087 x_2152 ->
      (loop_1067 size_1046 row_1068 x_2087 k_queen_loop_1992)
  f_main_2357 n_1074 k_main_2292 x_2295 -> (k_main_2292 ())
  f_queenPrint_2348 size_1046 k_queen_queenPrint_1691 x_1815 -> (print_string_1350 () k_queen_queenPrint_1691)
  f_test_2349 j_1061 size_1046 a_1062 k_queen_test_1877 x_1880 ->
      (aux_1064 j_1061 size_1046 x_1880 a_1062 0 k_queen_test_1877)
  f_update_2341 i_1035 n_1036 x_1038 a_1037 k_update_1451 x_1457 ->
      (k_update_1451 (a_1039 i_1035 n_1036 x_1038 x_1457 a_1037))
  fail_2362 b k -> {fail} => (k ())
  k_make_array_u_1392 i_1033 n_1031 s_1032 k_make_array_1386 b_1404 when b_1404 ->
      (k_make_array_u_1403 i_1033 n_1031 s_1032 k_make_array_1386 ())
  k_make_array_u_1392 i_1033 n_1031 s_1032 k_make_array_1386 b_1404 when (
      not b_1404) -> (fail_2362 true (k_make_array_u_1403 i_1033 n_1031 s_1032 k_make_array_1386))
  k_make_array_u_1403 i_1033 n_1031 s_1032 k_make_array_1386 x_1389 -> (k_make_array_1386 s_1032)
  loop_1067 size_1046 row_1068 a_1069 k_queen_loop_1992 ->
      (a_1069 row_1068 (f_loop_2352 row_1068 size_1046 a_1069 k_queen_loop_1992))
  main_1073 n_1074 k_main_2292 when (n_1074 > 0) -> (queen_1045 n_1074 (f_main_2357 n_1074 k_main_2292))
  main_1073 n_1074 k_main_2292 when (not (n_1074 > 0)) -> (k_main_2292 ())
  make_array_1355 n_1031 s_1032 i_1033 k_make_array_1386 when (0 <= i_1033) ->
      (k_make_array_u_1392 i_1033 n_1031 s_1032 k_make_array_1386 (i_1033 < n_1031))
  make_array_1355 n_1031 s_1032 i_1033 k_make_array_1386 when (not (0 <= i_1033)) ->
      (k_make_array_u_1392 i_1033 n_1031 s_1032 k_make_array_1386 false)
  print_string_1350 s_1042 k_print_string_1503 -> (k_print_string_1503 ())
  queenPrint_1054 size_1046 a_1055 k_queen_queenPrint_1691 ->
      (aux_1056 size_1046 0 a_1055 (f_queenPrint_2348 size_1046 k_queen_queenPrint_1691))
  queen_1045 size_1046 k_queen_1535 -> (loop_1067 size_1046 0 (make_array_1355 size_1046 0) k_queen_1535)
  test_1060 size_1046 j_1061 a_1062 k_queen_test_1877 ->
      (a_1062 j_1061 (f_test_2349 j_1061 size_1046 a_1062 k_queen_test_1877))
  update_1354 i_1035 n_1036 a_1037 x_1038 k_update_1451 ->
      (a_1037 i_1035 (f_update_2341 i_1035 n_1036 x_1038 a_1037 k_update_1451))
Types:
  main_2340 : X
  aux_1056 : (int -> int -> (int -> (int -> X) -> X) -> (unit -> X) -> X)
  aux_1064 : (x_1:int -> int -> int -> (int -> (int -> X) -> X) -> x_10:int[x_1 <= x_10] -> (x_12:bool[x_12] -> X) -> X)
  dotsPrint_1052 : (int -> int -> (unit -> X) -> X)
  fail_2362 : (x_1:bool[x_1] -> (unit -> X) -> X)
  loop_1067 : (x_1:int ->
               x_2:int[x_2 <= 0; x_1 >= x_2 + 1; x_2 >= 0] ->
               (x_4:int[x_1 >= x_4 + 1; x_4 >= 0] -> (int -> X) -> X) -> (unit -> X) -> X)
  
(3-1) Abstracting ... DONE!

(3-2) Checking HORS ... DONE!

Error trace::
  main_2340 ... --> 
  f_2358 ... --> 
  main_1073 [1/2] ... --> 
  queen_1045 ... --> 
  loop_1067 ... --> 
  make_array_1355 [1/2] ... --> 
  k_make_array_u_1392 [1/2] ... --> 
  k_make_array_u_1403 ... --> 
  f_loop_2352 [2/2] ... --> 
  assign_1348 ... --> 
  update_1354 ... --> 
  make_array_1355 [1/2] ... --> 
  k_make_array_u_1392 [1/2] ... --> 
  k_make_array_u_1403 ... --> 
  f_update_2341 ... --> 
  f_loop_2354 ... --> 
  test_1060 ... --> 
  a_1039 [1/2] ... --> 
  f_test_2349 ... --> 
  aux_1064 [2/2] ... --> 
  f_loop_2355 [1/2] ... --> 
  br_f_loop_2360 [2/2] ... --> 
  loop_1067 ... --> 
  a_1039 [2/2] ... --> 
  make_array_1355 [1/2] ... --> 
  k_make_array_u_1392 [2/2] ... --> 
  fail_2362 ... --> fail -->
  ERROR!

Spurious counter-example::
  0; 0; 0; 0; 0; 0; 0; 0; 1; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 1; 0; 1; 0; 1; 0; 1; 0

(3-3) Checking counter-example ... begin Cvc3Interface.solve(145044)[1]
  CVC3 input: PUSH;cnt877_v_sep_r_8325:INT;CHECKSAT (TRUE AND ((NOT ((0 + 1) < cnt877_v_sep_r_8325)) AND ((0 <= (0 + 1)) AND ((NOT (0 = (0 + 1))) AND (TRUE AND ((NOT (0 > cnt877_v_sep_r_8325)) AND (TRUE AND ((NOT (0 < 0)) AND (TRUE AND ((0 = 0) AND (TRUE AND (TRUE AND (TRUE AND (TRUE AND ((0 < cnt877_v_sep_r_8325) AND ((0 <= 0) AND (TRUE AND (TRUE AND ((NOT ((0 + 1) > cnt877_v_sep_r_8325)) AND (TRUE AND ((0 < cnt877_v_sep_r_8325) AND ((0 <= 0) AND (TRUE AND (TRUE AND ((cnt877_v_sep_r_8325 > 0) AND (TRUE AND TRUE))))))))))))))))))))))))));COUNTERMODEL;POP;
  CVC3 output: CVC> Satisfiable.
  CVC3 output: Current scope level is 9.
  CVC3 output: %Satisfiable  Variable Assignment: % 
  CVC3 output: ASSERT (cnt877_v_sep_r_8325 = 1);
  CVC3 output: CVC> 
  v_sep_r_8325 = 1
  end Cvc3Interface.solve(145044)[1] (0.007000 sec.)
DONE!

Unsafe!

Input for main:
  1
Error trace:
  main 1 ->
    if true then ... ->
    queen 1 ->
      loop 0 <fun> ->
        queenArray 0 ->
          make_array 1 0 ->
            if true then ... ->
        if false then ... ->
        assign 0 1 <fun> ->
          update 0 1 <fun> 1 ->
            queenArray 0 ->
              make_array 1 0 ->
                if true then ... ->
        test 0 <fun> ->
          a 0 ->
            a  ->
              if true then ... ->
          aux 0 ->
            if false then ... ->
        if true then ... ->
        if false then ... ->
        loop 1 <fun> ->
          a 1 ->
            a  ->
              if false then ... ->
              queenArray 1 ->
                make_array 1 0 ->
                  if false then ... ->
                  FAIL!

cycles: 3
total: 5.356 sec
  abst: 0.270 sec
  mc: 0.125 sec
  refine: 2.531 sec
    exparam: 1.519 sec
