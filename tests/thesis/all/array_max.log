MoCHi: Model Checker for Higher-Order Programs
  TRecS version: 1.30
  OCaml version: 4.00.1
  Command: ../mochi.opt -gchi array_max.ml

parsed::
 let make_array_1030 n_1031 i_1032 =
   let u_1045 = if 0 <= i_1032 && i_1032 < n_1031 then
                  ()
                else
                  {fail} () 
   in
     i_1032 
 in
 let rec array_max_1033 n_1034 i_1035 a_1036 =
   if i_1035 >= n_1034 then
     0
   else
     let x_1037 = a_1036 i_1035 
     in
     let y_1038 = array_max_1033 n_1034 (i_1035 + 1) a_1036 
     in
       if x_1037 > y_1038 then
         x_1037
       else
         y_1038 
 in
 let rec check_1039 n_1040 i_1041 max_1042 a_1043 =
   if i_1041 >= n_1040 then
     ()
   else
     let u_1126 = if a_1043 i_1041 <= max_1042 then
                    ()
                  else
                    {fail} () 
     in
       check_1039 n_1040 (i_1041 + 1) max_1042 a_1043 
 in
 let main_1044 n_1045 =
   let array_1046 = make_array_1030 n_1045 
   in
   let max_1047 = array_max_1033 n_1045 0 array_1046 
   in
     check_1039 n_1045 0 max_1047 array_1046 
 in
   ()

set_target::
 let make_array_1030 n_1031 i_1032 =
   let u_1045 = if 0 <= i_1032 && i_1032 < n_1031 then
                  ()
                else
                  {fail} () 
   in
     i_1032 
 in
 let rec array_max_1033 n_1034 i_1035 a_1036 =
   if i_1035 >= n_1034 then
     0
   else
     let x_1037 = a_1036 i_1035 
     in
     let y_1038 = array_max_1033 n_1034 (i_1035 + 1) a_1036 
     in
       if x_1037 > y_1038 then
         x_1037
       else
         y_1038 
 in
 let rec check_1039 n_1040 i_1041 max_1042 a_1043 =
   if i_1041 >= n_1040 then
     ()
   else
     let u_1126 = if a_1043 i_1041 <= max_1042 then
                    ()
                  else
                    {fail} () 
     in
       check_1039 n_1040 (i_1041 + 1) max_1042 a_1043 
 in
 let main_1044 n_1045 =
   let array_1046 = make_array_1030 n_1045 
   in
   let max_1047 = array_max_1033 n_1045 0 array_1046 
   in
     check_1039 n_1045 0 max_1047 array_1046 
 in
 let main_1147 = let arg1_1146 = rand_int () 
                 in
                   main_1044 arg1_1146 
 in
   ()

copy_poly::
 let make_array_1030 (n_1031:int) (i_1032:int) =
   let u_1045 = if 0 <= i_1032 && i_1032 < n_1031 then
                  ()
                else
                  {fail} () 
   in
     i_1032 
 in
 let rec array_max_1033 (n_1034:int) (i_1035:int) (a_1036:(int -> int)) =
   if i_1035 >= n_1034 then
     0
   else
     let x_1037 = a_1036 i_1035 
     in
     let y_1038 = array_max_1033 n_1034 (i_1035 + 1) a_1036 
     in
       if x_1037 > y_1038 then
         x_1037
       else
         y_1038 
 in
 let rec check_1148 (n_1040:int) (i_1041:int) (max_1042:int) (a_1043:(
   int -> int)) =
   if i_1041 >= n_1040 then
     ()
   else
     let u_1126 = if a_1043 i_1041 <= max_1042 then
                    ()
                  else
                    {fail} () 
     in
       check_1148 n_1040 (i_1041 + 1) max_1042 a_1043 
 in
 let main_1044 (n_1045:int) =
   let array_1046 = make_array_1030 n_1045 
   in
   let max_1047 = array_max_1033 n_1045 0 array_1046 
   in
     check_1148 n_1045 0 max_1047 array_1046 
 in
 let main_1147 = let arg1_1146 = rand_int () 
                 in
                   main_1044 arg1_1146 
 in
   ()

CPS::
 let make_array_1030 (n_1031:int) (i_1032:int) (k_make_array_1176:(int -> X)) =
   let k_make_array_u_1193 (x_1179:unit) = k_make_array_1176 i_1032 
   in
   let k_make_array_u_1182 (b_1194:bool) =
     if b_1194 then
       k_make_array_u_1193 ()
     else
       {|fail|} () k_make_array_u_1193 
   in
     if 0 <= i_1032 then
       k_make_array_u_1182 (i_1032 < n_1031)
     else
       k_make_array_u_1182 false 
 in
 let rec array_max_1033 (n_1034:int) (i_1035:int) (a_1036:(int -> ((int -> X) -> X))) (k_array_max_1226:(
   int -> X)) =
   if i_1035 >= n_1034 then
     k_array_max_1226 0
   else
     a_1036 i_1035
       (fun x_1229 ->
          array_max_1033 n_1034 (i_1035 + 1) a_1036
            (fun x_1242 -> (if x_1229 > x_1242 then
                              k_array_max_1226 x_1229
                            else
                              k_array_max_1226 x_1242))) 
 in
 let rec check_1148
   (n_1040:int) (i_1041:int) (max_1042:int) (a_1043:(int -> ((int -> X) -> X))) (k_check_1309:(
   unit -> X)) =
   if i_1041 >= n_1040 then
     k_check_1309 ()
   else
     let k_check_u_1336 (x_1312:unit) = check_1148 n_1040 (i_1041 + 1) max_1042 a_1043 k_check_1309 
     in
       a_1043 i_1041 (fun x_1315 -> (if x_1315 <= max_1042 then
                                       k_check_u_1336 ()
                                     else
                                       {|fail|} () k_check_u_1336)) 
 in
 let main_1044 (n_1045:int) (k_main_1380:(unit -> X)) =
   array_max_1033 n_1045 0 (make_array_1030 n_1045)
     (fun x_1399 -> check_1148 n_1045 0 x_1399 (make_array_1030 n_1045) k_main_1380) 
 in
   rand_int_cps () (fun x_1454 -> main_1044 x_1454 (fun x_1451 -> end))

Program with abstraction types (CEGAR-cycle 0)::
Main: main_1479
  main_1479 -> (rand_int f_1484)
  array_max_1033 n_1034 i_1035 a_1036 k_array_max_1226 when (i_1035 >= n_1034) -> (k_array_max_1226 0)
  array_max_1033 n_1034 i_1035 a_1036 k_array_max_1226 when (not (i_1035 >= n_1034)) ->
      (a_1036 i_1035 (f_array_max_1480 i_1035 n_1034 a_1036 k_array_max_1226))
  check_1148 n_1040 i_1041 max_1042 a_1043 k_check_1309 when (i_1041 >= n_1040) -> (k_check_1309 ())
  check_1148 n_1040 i_1041 max_1042 a_1043 k_check_1309 when (not (i_1041 >= n_1040)) ->
      (a_1043 i_1041 (f_check_1482 i_1041 max_1042 n_1040 a_1043 k_check_1309))
  f_1484 x_1454 -> (main_1044 x_1454 (f_1485 x_1454))
  f_1485 x_1454 x_1451 -> end
  f_array_max_1480 i_1035 n_1034 a_1036 k_array_max_1226 x_1229 ->
      (array_max_1033 n_1034 (i_1035 + 1) a_1036 (f_array_max_1481 i_1035 n_1034 x_1229 k_array_max_1226))
  f_array_max_1481 i_1035 n_1034 x_1229 k_array_max_1226 x_1242 when (x_1229 > x_1242) -> (k_array_max_1226 x_1229)
  f_array_max_1481 i_1035 n_1034 x_1229 k_array_max_1226 x_1242 when (
      not (x_1229 > x_1242)) -> (k_array_max_1226 x_1242)
  f_check_1482 i_1041 max_1042 n_1040 a_1043 k_check_1309 x_1315 when (
      x_1315 <= max_1042) -> (k_check_u_1336 i_1041 max_1042 n_1040 a_1043 k_check_1309 ())
  f_check_1482 i_1041 max_1042 n_1040 a_1043 k_check_1309 x_1315 when (
      not (x_1315 <= max_1042)) -> (fail_1487 true (k_check_u_1336 i_1041 max_1042 n_1040 a_1043 k_check_1309))
  f_main_1483 n_1045 k_main_1380 x_1399 -> (check_1148 n_1045 0 x_1399 (make_array_1030 n_1045) k_main_1380)
  fail_1486 b k -> {fail} => (k ())
  fail_1487 b k -> {fail} => (k ())
  k_check_u_1336 i_1041 max_1042 n_1040 a_1043 k_check_1309 x_1312 ->
      (check_1148 n_1040 (i_1041 + 1) max_1042 a_1043 k_check_1309)
  k_make_array_u_1182 i_1032 n_1031 k_make_array_1176 b_1194 when b_1194 ->
      (k_make_array_u_1193 i_1032 n_1031 k_make_array_1176 ())
  k_make_array_u_1182 i_1032 n_1031 k_make_array_1176 b_1194 when (not b_1194) ->
      (fail_1486 true (k_make_array_u_1193 i_1032 n_1031 k_make_array_1176))
  k_make_array_u_1193 i_1032 n_1031 k_make_array_1176 x_1179 -> (k_make_array_1176 i_1032)
  main_1044 n_1045 k_main_1380 -> (array_max_1033 n_1045 0 (make_array_1030 n_1045) (f_main_1483 n_1045 k_main_1380))
  make_array_1030 n_1031 i_1032 k_make_array_1176 when (0 <= i_1032) ->
      (k_make_array_u_1182 i_1032 n_1031 k_make_array_1176 (i_1032 < n_1031))
  make_array_1030 n_1031 i_1032 k_make_array_1176 when (not (0 <= i_1032)) ->
      (k_make_array_u_1182 i_1032 n_1031 k_make_array_1176 false)
Types:
  main_1479 : X
  array_max_1033 : (int -> int -> (int -> (int -> X) -> X) -> (int -> X) -> X)
  check_1148 : (int -> int -> int -> (int -> (int -> X) -> X) -> (unit -> X) -> X)
  fail_1486 : (x_1:bool[x_1] -> (unit -> X) -> X)
  fail_1487 : (x_1:bool[x_1] -> (unit -> X) -> X)
  make_array_1030 : (int -> int -> (int -> X) -> X)
  
(0-1) Abstracting ... DONE!

(0-2) Checking HORS ... DONE!

Error trace::
  main_1479 ... --> 
  f_1484 ... --> 
  main_1044 ... --> 
  array_max_1033 [2/2] ... --> 
  make_array_1030 [2/2] ... --> 
  k_make_array_u_1182 [2/2] ... --> 
  fail_1486 ... --> fail -->
  ERROR!

Spurious counter-example::
  0; 0; 0; 1; 1; 1; 0

(0-3) Checking counter-example ... DONE!

(0-4) Discovering predicates ... 
begin AbsTypeInfer.refine(213)[1]
  program:
    main_1479  | true = ((Random.int 0) f_1484)
    array_max_1033 n_1034 i_1035 a_1036 k_array_max_1226 | (i_1035 >= n_1034) = (
    k_array_max_1226 0)
    array_max_1033 n_1034 i_1035 a_1036 k_array_max_1226 | (not (i_1035 >= n_1034)) = (
    a_1036 i_1035
           (f_array_max_1480 i_1035
                             n_1034
                             a_1036
                             k_array_max_1226))
    check_1148 n_1040 i_1041 max_1042 a_1043 k_check_1309 | (i_1041 >= n_1040) = (
    k_check_1309 ())
    check_1148 n_1040 i_1041 max_1042 a_1043 k_check_1309 | (not (i_1041 >= n_1040)) = (
    a_1043 i_1041
           (f_check_1482 i_1041
                         max_1042
                         n_1040
                         a_1043
                         k_check_1309))
    f_1484 x_1454 | true = (main_1044 x_1454
                                      (f_1485 x_1454))
    f_1485 x_1454 x_1451 | true = end
    f_array_max_1480 i_1035 n_1034 a_1036 k_array_max_1226 x_1229 | true = (
    array_max_1033 n_1034
                   (i_1035 + 1)
                   a_1036
                   (f_array_max_1481 i_1035
                                     n_1034
                                     x_1229
                                     k_array_max_1226))
    f_array_max_1481 i_1035 n_1034 x_1229 k_array_max_1226 x_1242 | (
    x_1229 > x_1242) = (k_array_max_1226 x_1229)
    f_array_max_1481 i_1035 n_1034 x_1229 k_array_max_1226 x_1242 | (
    not (x_1229 > x_1242)) = (k_array_max_1226 x_1242)
    f_check_1482 i_1041 max_1042 n_1040 a_1043 k_check_1309 x_1315 | (
    x_1315 <= max_1042) = (k_check_u_1336 i_1041
                                          max_1042
                                          n_1040
                                          a_1043
                                          k_check_1309
                                          ())
    f_check_1482 i_1041 max_1042 n_1040 a_1043 k_check_1309 x_1315 | (
    not (x_1315 <= max_1042)) = (fail_1487 true
                                           (k_check_u_1336 i_1041
                                                           max_1042
                                                           n_1040
                                                           a_1043
                                                           k_check_1309))
    f_main_1483 n_1045 k_main_1380 x_1399 | true = (check_1148 n_1045
                                                               0
                                                               x_1399
                                                               (make_array_1030 n_1045)
                                                               k_main_1380)
    fail_1486 b k | true = (fail ())
    fail_1487 b k | true = (fail ())
    k_check_u_1336 i_1041 max_1042 n_1040 a_1043 k_check_1309 x_1312 | true = (
    check_1148 n_1040
               (i_1041 + 1)
               max_1042
               a_1043
               k_check_1309)
    k_make_array_u_1182 i_1032 n_1031 k_make_array_1176 b_1194 | b_1194 = (
    k_make_array_u_1193 i_1032
                        n_1031
                        k_make_array_1176
                        ())
    k_make_array_u_1182 i_1032 n_1031 k_make_array_1176 b_1194 | (not b_1194) = (
    fail_1486 true
              (k_make_array_u_1193 i_1032
                                   n_1031
                                   k_make_array_1176))
    k_make_array_u_1193 i_1032 n_1031 k_make_array_1176 x_1179 | true = (
    k_make_array_1176 i_1032)
    main_1044 n_1045 k_main_1380 | true = (array_max_1033
                                             n_1045
                                             0
                                             (make_array_1030 n_1045)
                                             (f_main_1483 n_1045
                                                          k_main_1380))
    make_array_1030 n_1031 i_1032 k_make_array_1176 | (0 <= i_1032) = (
    k_make_array_u_1182 i_1032
                        n_1031
                        k_make_array_1176
                        (i_1032 < n_1031))
    make_array_1030 n_1031 i_1032 k_make_array_1176 | (not (0 <= i_1032)) = (
    k_make_array_u_1182 i_1032
                        n_1031
                        k_make_array_1176
                        false)
    main_1479:X
    array_max_1033:int -> int -> (int -> (int -> X) -> X) -> (int -> X) -> X
    check_1148:int -> int -> int -> (int -> (int -> X) -> X) -> (unit -> X) -> X
    f_1484:int -> X
    f_1485:int -> unit -> X
    f_array_max_1480:int -> int -> (int -> (int -> X) -> X) -> (int -> X) -> int -> X
    f_array_max_1481:int -> int -> int -> (int -> X) -> int -> X
    f_check_1482:int -> int -> int -> (int -> (int -> X) -> X) -> (unit -> X) -> int -> X
    f_main_1483:int -> (unit -> X) -> int -> X
    fail_1486:bool -> (unit -> X) -> X
    fail_1487:bool -> (unit -> X) -> X
    k_check_u_1336:int -> int -> int -> (int -> (int -> X) -> X) -> (unit -> X) -> unit -> X
    k_make_array_u_1182:int -> int -> (int -> X) -> bool -> X
    k_make_array_u_1193:int -> int -> (int -> X) -> unit -> X
    main_1044:int -> (unit -> X) -> X
    make_array_1030:int -> int -> (int -> X) -> X
  inlined functions: f_1484,f_1485,f_array_max_1480,f_array_max_1481,f_check_1482,f_main_1483,k_check_u_1336,k_make_array_u_1182,k_make_array_u_1193,main_1044
  counterexample: 0:0:0:1:1:1:0
  error traces:
    [true.nop(<f_1484@4:0> = var2)
     [true.(<main_1044@6:0> = <f_1484@4:0>)
      [true.((<array_max_1033@8:0> = <main_1044@6:0>) && (<array_max_1033@8:1> = 0))
       [(not (<array_max_1033@8:1> >= <array_max_1033@8:0>)).(<<array_max_1033@8:2>@11:0> = <array_max_1033@8:1>)
        [true.((<make_array_1030@13:0> = <main_1044@6:0>) && (<make_array_1030@13:1> = <<array_max_1033@8:2>@11:0>))
         [(not (0 <= <make_array_1030@13:1>)).
          ((<k_make_array_u_1182@16:0> = <make_array_1030@13:1>) &&
           ((<k_make_array_u_1182@16:1> = <make_array_1030@13:0>) && (<k_make_array_u_1182@16:3> = false)))
          [(not <k_make_array_u_1182@16:3>).(<fail_1486@19:0> = true)[true.error
  begin RefTypeInfer.infer_etrs(214)[2]
    horn clauses:
      P[<fail_1486@19:0>](<fail_1486@19:0>:bool)|- bot
      
      P[<k_make_array_u_1182@16:3>](<k_make_array_u_1182@16:0>:int,<k_make_array_u_1182@16:1>:int,false:bool),
      <fail_1486@19:0> |- P[<fail_1486@19:0>](<fail_1486@19:0>:bool)
      
      P[<make_array_1030@13:1>](<k_make_array_u_1182@16:1>:int,<k_make_array_u_1182@16:0>:int),
      ((0 > <k_make_array_u_1182@16:0>) && (not <k_make_array_u_1182@16:3>))
      |- P[<k_make_array_u_1182@16:3>](<k_make_array_u_1182@16:0>:int,
                                       <k_make_array_u_1182@16:1>:int,
                                       <k_make_array_u_1182@16:3>:bool)
      
      P[<main_1044@6:0>](<make_array_1030@13:0>:int),
      P[<<array_max_1033@8:2>@11:0>](<make_array_1030@13:0>:int,0:int,<make_array_1030@13:1>:int)|- P[<make_array_1030@13:1>](
      <make_array_1030@13:0>:int,<make_array_1030@13:1>:int)
      
      P[<array_max_1033@8:1>](<array_max_1033@8:0>:int,<array_max_1033@8:1>:int),
      ((<array_max_1033@8:1> < <array_max_1033@8:0>) && (<<array_max_1033@8:2>@11:0> = <array_max_1033@8:1>))
      |- P[<<array_max_1033@8:2>@11:0>](<array_max_1033@8:0>:int,<array_max_1033@8:1>:int,
                                        <<array_max_1033@8:2>@11:0>:int)
      
      P[<main_1044@6:0>](<array_max_1033@8:0>:int), (<array_max_1033@8:1> = 0)
      |- P[<array_max_1033@8:1>](<array_max_1033@8:0>:int,<array_max_1033@8:1>:int)
      
      P[<f_1484@4:0>](<main_1044@6:0>:int)|- P[<main_1044@6:0>](<main_1044@6:0>:int)
      
      |- P[<f_1484@4:0>](<f_1484@4:0>:int)
    call trees:
      <main_1479@1>
        <f_1484@4>
          <main_1044@6>
            <array_max_1033@8>
            </<array_max_1033@8:2>@11>
            <make_array_1030@13>
              <k_make_array_u_1182@16>
                <fail_1486@19>
    inlined horn clauses:
      P[<fail_1486@19:0>](<fail_1486@19:0>:bool)|- bot
      
      P[<make_array_1030@13:1>](<k_make_array_u_1182@16:1>:int,<k_make_array_u_1182@16:0>:int),
      ((0 > <k_make_array_u_1182@16:0>) && <fail_1486@19:0>) |- P[<fail_1486@19:0>](
      <fail_1486@19:0>:bool)
      
      P[<<array_max_1033@8:2>@11:0>](<make_array_1030@13:0>:int,0:int,<make_array_1030@13:1>:int)|- P[<make_array_1030@13:1>](
      <make_array_1030@13:0>:int,<make_array_1030@13:1>:int)
      
      P[<array_max_1033@8:1>](<array_max_1033@8:0>:int,<array_max_1033@8:1>:int),
      ((<array_max_1033@8:1> < <array_max_1033@8:0>) && (<<array_max_1033@8:2>@11:0> = <array_max_1033@8:1>))
      |- P[<<array_max_1033@8:2>@11:0>](<array_max_1033@8:0>:int,<array_max_1033@8:1>:int,
                                        <<array_max_1033@8:2>@11:0>:int)
      
       (<array_max_1033@8:1> = 0) |- P[<array_max_1033@8:1>](<array_max_1033@8:0>:int,
                                                             <array_max_1033@8:1>:int)
    begin ParamSubstInfer.infer(1262)[3]
      
    end ParamSubstInfer.infer(1262)[3] (0.024997 sec.)
    inferred extra parameters:
      
    begin RefTypeInfer.elim_coeffs(1264)[3]
      
    end RefTypeInfer.elim_coeffs(1264)[3] (0.000000 sec.)
    begin GenHcSolver.solve(1462)[3]
      Horn clauses:
        P[<fail_1486@19:0>](<fail_1486@19:0>:bool)|- bot
        
        P[<make_array_1030@13:1>](<k_make_array_u_1182@16:1>:int,<k_make_array_u_1182@16:0>:int),
        ((0 > <k_make_array_u_1182@16:0>) && <fail_1486@19:0>) |- P[<fail_1486@19:0>](
        <fail_1486@19:0>:bool)
        
        P[<<array_max_1033@8:2>@11:0>](<make_array_1030@13:0>:int,0:int,<make_array_1030@13:1>:int)|- P[<make_array_1030@13:1>](
        <make_array_1030@13:0>:int,<make_array_1030@13:1>:int)
        
        P[<array_max_1033@8:1>](<array_max_1033@8:0>:int,<array_max_1033@8:1>:int),
        ((<array_max_1033@8:1> < <array_max_1033@8:0>) && (<<array_max_1033@8:2>@11:0> = <array_max_1033@8:1>))
        |- P[<<array_max_1033@8:2>@11:0>](<array_max_1033@8:0>:int,<array_max_1033@8:1>:int,
                                          <<array_max_1033@8:2>@11:0>:int)
        
         (<array_max_1033@8:1> = 0) |- P[<array_max_1033@8:1>](<array_max_1033@8:0>:int,
                                                               <array_max_1033@8:1>:int)
      lower bounds:
        P[<array_max_1033@8:1>](<array_max_1033@8:0>:int,<array_max_1033@8:1>:int) = (<array_max_1033@8:1> = 0)
        P[<<array_max_1033@8:2>@11:0>](<array_max_1033@8:0>:int,<array_max_1033@8:1>:int,<<array_max_1033@8:2>@11:0>:int) =
        ((<array_max_1033@8:1> = 0) &&
         ((<array_max_1033@8:1> < <array_max_1033@8:0>) && (<<array_max_1033@8:2>@11:0> = <array_max_1033@8:1>)))
        P[<make_array_1030@13:1>](<make_array_1030@13:0>:int,<make_array_1030@13:1>:int) =
        ((<make_array_1030@13:1> = 0) && (0 < <make_array_1030@13:0>))
        P[<fail_1486@19:0>](<fail_1486@19:0>:bool) = false
      upper bounds:
        P[<fail_1486@19:0>](var4:bool) = true
      begin GenHcSolver.classify_pids(2725)[4]
        output:
          [<fail_1486@19:0>]
      end GenHcSolver.classify_pids(2725)[4] (0.000000 sec.)
      lb:false
      nub:false
      begin ApronInterface.convex_hull_interpolate(2728)[4]
        lb:false
        nub:false
        lb':false
        nub':false
        begin InterpProver.interpolate(2729)[5]
          begin InterpProver.interpolate_fresh(2730)[6]
            begin InterpProver.interpolate_log(2731)[7]
              input1: false
              input2: false
              begin InterpProver.interpolate_check(2732)[8]
                begin InterpProver.interpolate_simplify(2733)[9]
                  begin InterpProver.interpolate_quick(2746)[10]
                    
                  end InterpProver.interpolate_quick(2746)[10] (0.000000 sec.)
                  begin minimizing # of disjunctions(2750)[10]
                    input: false
                    output: false
                  end minimizing # of disjunctions(2750)[10] (0.000000 sec.)
                  
                end InterpProver.interpolate_simplify(2733)[9] (0.000000 sec.)
                
              end InterpProver.interpolate_check(2732)[8] (0.000000 sec.)
              output: false
            end InterpProver.interpolate_log(2731)[7] (0.000000 sec.)
            
          end InterpProver.interpolate_fresh(2730)[6] (0.000000 sec.)
          
        end InterpProver.interpolate(2729)[5] (0.000000 sec.)
        output:
          P[<fail_1486@19:0>](<fail_1486@19:0>:bool) = false
      end ApronInterface.convex_hull_interpolate(2728)[4] (0.000000 sec.)
      Horn clauses:
        P[<make_array_1030@13:1>](<k_make_array_u_1182@16:1>:int,<k_make_array_u_1182@16:0>:int),
        (0 > <k_make_array_u_1182@16:0>) |- bot
        
        P[<<array_max_1033@8:2>@11:0>](<make_array_1030@13:0>:int,0:int,<make_array_1030@13:1>:int)|- P[<make_array_1030@13:1>](
        <make_array_1030@13:0>:int,<make_array_1030@13:1>:int)
        
        P[<array_max_1033@8:1>](<array_max_1033@8:0>:int,<array_max_1033@8:1>:int),
        ((<array_max_1033@8:1> < <array_max_1033@8:0>) && (<<array_max_1033@8:2>@11:0> = <array_max_1033@8:1>))
        |- P[<<array_max_1033@8:2>@11:0>](<array_max_1033@8:0>:int,<array_max_1033@8:1>:int,
                                          <<array_max_1033@8:2>@11:0>:int)
        
         (<array_max_1033@8:1> = 0) |- P[<array_max_1033@8:1>](<array_max_1033@8:0>:int,
                                                               <array_max_1033@8:1>:int)
      lower bounds:
        P[<array_max_1033@8:1>](<array_max_1033@8:0>:int,<array_max_1033@8:1>:int) = (<array_max_1033@8:1> = 0)
        P[<<array_max_1033@8:2>@11:0>](<array_max_1033@8:0>:int,<array_max_1033@8:1>:int,<<array_max_1033@8:2>@11:0>:int) =
        ((<array_max_1033@8:1> = 0) &&
         ((<array_max_1033@8:1> < <array_max_1033@8:0>) && (<<array_max_1033@8:2>@11:0> = <array_max_1033@8:1>)))
        P[<make_array_1030@13:1>](<make_array_1030@13:0>:int,<make_array_1030@13:1>:int) =
        ((<make_array_1030@13:1> = 0) && (0 < <make_array_1030@13:0>))
      upper bounds:
        P[<make_array_1030@13:1>](var5:int,var6:int) = (0 <= var6)
      begin GenHcSolver.classify_pids(4191)[4]
        output:
          [<make_array_1030@13:1>]
      end GenHcSolver.classify_pids(4191)[4] (0.000000 sec.)
      lb:((<make_array_1030@13:1> = 0) && (0 < <make_array_1030@13:0>))
      nub:(not (0 <= <make_array_1030@13:1>))
      begin ApronInterface.convex_hull_interpolate(4194)[4]
        lb:((<make_array_1030@13:1> = 0) && (0 < <make_array_1030@13:0>))
        nub:(not (0 <= <make_array_1030@13:1>))
        lb':((<make_array_1030@13:1> = 0) && (0 < <make_array_1030@13:0>))
        nub':(not (0 <= <make_array_1030@13:1>))
        begin InterpProver.interpolate(4195)[5]
          begin InterpProver.interpolate_fresh(4196)[6]
            begin InterpProver.interpolate_log(4197)[7]
              input1: ((<make_array_1030@13:1> = 0) && (0 < <make_array_1030@13:0>))
              input2: (not (0 <= <make_array_1030@13:1>))
              begin InterpProver.interpolate_check(4198)[8]
                begin InterpProver.interpolate_simplify(4199)[9]
                  begin InterpProver.interpolate_quick(4228)[10]
                    begin CsisatInterface.interpolate_csisat_wrap(4237)[11]
                      begin CsisatInterface.interpolate_csisat_post_process(4238)[12]
                        begin CsisatInterface.interpolate_csisat_log(4239)[13]
                          input1: (0 = v_sep_make_array_1030_sep_13_sep_1 & 1 <= v_sep_make_array_1030_sep_13_sep_0)
                          input2: (1 + v_sep_make_array_1030_sep_13_sep_1) <= 0
                          begin CsisatInterface.interpolate_csisat_raw(4240)[14]
                            
                          end CsisatInterface.interpolate_csisat_raw(4240)[14] (0.001000 sec.)
                          output: -2*v_sep_make_array_1030_sep_13_sep_1 <= 0
                          
                        end CsisatInterface.interpolate_csisat_log(4239)[13] (0.001000 sec.)
                        after simplification: -2*v_sep_make_array_1030_sep_13_sep_1 <= 0
                        after dnf conversion: ((-2*v_sep_make_array_1030_sep_13_sep_1 <= 0))
                        
                      end CsisatInterface.interpolate_csisat_post_process(4238)[12] (0.001000 sec.)
                      
                    end CsisatInterface.interpolate_csisat_wrap(4237)[11] (0.001000 sec.)
                    
                  end InterpProver.interpolate_quick(4228)[10] (0.001000 sec.)
                  
                end InterpProver.interpolate_simplify(4199)[9] (0.001000 sec.)
                
              end InterpProver.interpolate_check(4198)[8] (0.001000 sec.)
              output: (0 <= <make_array_1030@13:1>)
            end InterpProver.interpolate_log(4197)[7] (0.001000 sec.)
            
          end InterpProver.interpolate_fresh(4196)[6] (0.001000 sec.)
          
        end InterpProver.interpolate(4195)[5] (0.001000 sec.)
        output:
          P[<make_array_1030@13:1>](<make_array_1030@13:0>:int,<make_array_1030@13:1>:int) =
          (0 <= <make_array_1030@13:1>)
      end ApronInterface.convex_hull_interpolate(4194)[4] (0.001000 sec.)
      Horn clauses:
        P[<<array_max_1033@8:2>@11:0>](<make_array_1030@13:0>:int,0:int,<make_array_1030@13:1>:int),
        (0 > <make_array_1030@13:1>) |- bot
        
        P[<array_max_1033@8:1>](<array_max_1033@8:0>:int,<array_max_1033@8:1>:int),
        ((<array_max_1033@8:1> < <array_max_1033@8:0>) && (<<array_max_1033@8:2>@11:0> = <array_max_1033@8:1>))
        |- P[<<array_max_1033@8:2>@11:0>](<array_max_1033@8:0>:int,<array_max_1033@8:1>:int,
                                          <<array_max_1033@8:2>@11:0>:int)
        
         (<array_max_1033@8:1> = 0) |- P[<array_max_1033@8:1>](<array_max_1033@8:0>:int,
                                                               <array_max_1033@8:1>:int)
      lower bounds:
        P[<array_max_1033@8:1>](<array_max_1033@8:0>:int,<array_max_1033@8:1>:int) = (<array_max_1033@8:1> = 0)
        P[<<array_max_1033@8:2>@11:0>](<array_max_1033@8:0>:int,<array_max_1033@8:1>:int,<<array_max_1033@8:2>@11:0>:int) =
        ((<array_max_1033@8:1> = 0) &&
         ((<array_max_1033@8:1> < <array_max_1033@8:0>) && (<<array_max_1033@8:2>@11:0> = <array_max_1033@8:1>)))
      upper bounds:
        P[<<array_max_1033@8:2>@11:0>](var7:int,var8:int,var9:int) = ((var8 <> 0) || (0 <= var9))
      begin GenHcSolver.classify_pids(5481)[4]
        output:
          [<<array_max_1033@8:2>@11:0>]
      end GenHcSolver.classify_pids(5481)[4] (0.000000 sec.)
      lb:((<array_max_1033@8:1> = 0) &&
          ((<array_max_1033@8:1> < <array_max_1033@8:0>) && (<<array_max_1033@8:2>@11:0> = <array_max_1033@8:1>)))
      nub:(not ((<array_max_1033@8:1> <> 0) || (0 <= <<array_max_1033@8:2>@11:0>)))
      begin ApronInterface.convex_hull_interpolate(5484)[4]
        lb:((<array_max_1033@8:1> = 0) &&
            ((<array_max_1033@8:1> < <array_max_1033@8:0>) && (<<array_max_1033@8:2>@11:0> = <array_max_1033@8:1>)))
        nub:(not ((<array_max_1033@8:1> <> 0) || (0 <= <<array_max_1033@8:2>@11:0>)))
        lb':((<array_max_1033@8:1> = 0) &&
             ((<array_max_1033@8:1> < <array_max_1033@8:0>) && (<<array_max_1033@8:2>@11:0> = <array_max_1033@8:1>)))
        nub':(not ((<array_max_1033@8:1> <> 0) || (0 <= <<array_max_1033@8:2>@11:0>)))
        begin InterpProver.interpolate(5485)[5]
          begin InterpProver.interpolate_fresh(5486)[6]
            begin InterpProver.interpolate_log(5487)[7]
              input1: ((<array_max_1033@8:1> = 0) &&
                       ((<array_max_1033@8:1> < <array_max_1033@8:0>) &&
                        (<<array_max_1033@8:2>@11:0> = <array_max_1033@8:1>)))
              input2: (not ((<array_max_1033@8:1> <> 0) || (0 <= <<array_max_1033@8:2>@11:0>)))
              begin InterpProver.interpolate_check(5488)[8]
                begin InterpProver.interpolate_simplify(5489)[9]
                  begin InterpProver.interpolate_quick(5568)[10]
                    begin CsisatInterface.interpolate_csisat_wrap(5577)[11]
                      begin CsisatInterface.interpolate_csisat_post_process(5578)[12]
                        begin CsisatInterface.interpolate_csisat_log(5579)[13]
                          input1: (0 = v_sep_array_max_1033_sep_8_sep_1 & v_sep_array_max_1033_sep_8_sep_1 = v_sep_array_max_1033_sep_8_sep_2_sep_11_sep_0 & (1 + v_sep_array_max_1033_sep_8_sep_1) <= v_sep_array_max_1033_sep_8_sep_0)
                          input2: (0 = v_sep_array_max_1033_sep_8_sep_1 & (1 + v_sep_array_max_1033_sep_8_sep_2_sep_11_sep_0) <= 0)
                          begin CsisatInterface.interpolate_csisat_raw(5580)[14]
                            
                          end CsisatInterface.interpolate_csisat_raw(5580)[14] (0.000000 sec.)
                          output: -2*v_sep_array_max_1033_sep_8_sep_2_sep_11_sep_0 <= 0
                          
                        end CsisatInterface.interpolate_csisat_log(5579)[13] (0.000000 sec.)
                        after simplification: -2*v_sep_array_max_1033_sep_8_sep_2_sep_11_sep_0 <= 0
                        after dnf conversion: ((-2*v_sep_array_max_1033_sep_8_sep_2_sep_11_sep_0 <= 0))
                        
                      end CsisatInterface.interpolate_csisat_post_process(5578)[12] (0.000000 sec.)
                      
                    end CsisatInterface.interpolate_csisat_wrap(5577)[11] (0.000000 sec.)
                    
                  end InterpProver.interpolate_quick(5568)[10] (0.000000 sec.)
                  
                end InterpProver.interpolate_simplify(5489)[9] (0.001000 sec.)
                
              end InterpProver.interpolate_check(5488)[8] (0.001000 sec.)
              output: (0 <= <<array_max_1033@8:2>@11:0>)
            end InterpProver.interpolate_log(5487)[7] (0.001000 sec.)
            
          end InterpProver.interpolate_fresh(5486)[6] (0.001000 sec.)
          
        end InterpProver.interpolate(5485)[5] (0.001000 sec.)
        output:
          P[<<array_max_1033@8:2>@11:0>](<array_max_1033@8:0>:int,<array_max_1033@8:1>:int,<<array_max_1033@8:2>@11:0>:int) =
          (0 <= <<array_max_1033@8:2>@11:0>)
      end ApronInterface.convex_hull_interpolate(5484)[4] (0.002000 sec.)
      Horn clauses:
        P[<array_max_1033@8:1>](<array_max_1033@8:0>:int,<<array_max_1033@8:2>@11:0>:int),
        ((<<array_max_1033@8:2>@11:0> < <array_max_1033@8:0>) && (0 > <<array_max_1033@8:2>@11:0>)) |- bot
        
         (<array_max_1033@8:1> = 0) |- P[<array_max_1033@8:1>](<array_max_1033@8:0>:int,
                                                               <array_max_1033@8:1>:int)
      lower bounds:
        P[<array_max_1033@8:1>](<array_max_1033@8:0>:int,<array_max_1033@8:1>:int) = (<array_max_1033@8:1> = 0)
      upper bounds:
        P[<array_max_1033@8:1>](var10:int,var11:int) = ((var11 >= var10) || (0 <= var11))
      begin GenHcSolver.classify_pids(6358)[4]
        output:
          [<array_max_1033@8:1>]
      end GenHcSolver.classify_pids(6358)[4] (0.000000 sec.)
      lb:(<array_max_1033@8:1> = 0)
      nub:(not ((<array_max_1033@8:1> >= <array_max_1033@8:0>) || (0 <= <array_max_1033@8:1>)))
      begin ApronInterface.convex_hull_interpolate(6361)[4]
        lb:(<array_max_1033@8:1> = 0)
        nub:(not ((<array_max_1033@8:1> >= <array_max_1033@8:0>) || (0 <= <array_max_1033@8:1>)))
        lb':(<array_max_1033@8:1> = 0)
        nub':(not ((<array_max_1033@8:1> >= <array_max_1033@8:0>) || (0 <= <array_max_1033@8:1>)))
        begin InterpProver.interpolate(6362)[5]
          begin InterpProver.interpolate_fresh(6363)[6]
            begin InterpProver.interpolate_log(6364)[7]
              input1: (<array_max_1033@8:1> = 0)
              input2: (not ((<array_max_1033@8:1> >= <array_max_1033@8:0>) || (0 <= <array_max_1033@8:1>)))
              begin InterpProver.interpolate_check(6365)[8]
                begin InterpProver.interpolate_simplify(6366)[9]
                  begin InterpProver.interpolate_quick(6405)[10]
                    begin CsisatInterface.interpolate_csisat_wrap(6414)[11]
                      begin CsisatInterface.interpolate_csisat_post_process(6415)[12]
                        begin CsisatInterface.interpolate_csisat_log(6416)[13]
                          input1: 0 = v_sep_array_max_1033_sep_8_sep_1
                          input2: ((1 + v_sep_array_max_1033_sep_8_sep_1) <= 0 & (1 + v_sep_array_max_1033_sep_8_sep_1) <= v_sep_array_max_1033_sep_8_sep_0)
                          begin CsisatInterface.interpolate_csisat_raw(6417)[14]
                            
                          end CsisatInterface.interpolate_csisat_raw(6417)[14] (0.000000 sec.)
                          output: -2*v_sep_array_max_1033_sep_8_sep_1 <= 0
                          
                        end CsisatInterface.interpolate_csisat_log(6416)[13] (0.000000 sec.)
                        after simplification: -2*v_sep_array_max_1033_sep_8_sep_1 <= 0
                        after dnf conversion: ((-2*v_sep_array_max_1033_sep_8_sep_1 <= 0))
                        
                      end CsisatInterface.interpolate_csisat_post_process(6415)[12] (0.000000 sec.)
                      
                    end CsisatInterface.interpolate_csisat_wrap(6414)[11] (0.000000 sec.)
                    
                  end InterpProver.interpolate_quick(6405)[10] (0.000000 sec.)
                  
                end InterpProver.interpolate_simplify(6366)[9] (0.000000 sec.)
                
              end InterpProver.interpolate_check(6365)[8] (0.000000 sec.)
              output: (0 <= <array_max_1033@8:1>)
            end InterpProver.interpolate_log(6364)[7] (0.000000 sec.)
            
          end InterpProver.interpolate_fresh(6363)[6] (0.000000 sec.)
          
        end InterpProver.interpolate(6362)[5] (0.000000 sec.)
        output:
          P[<array_max_1033@8:1>](<array_max_1033@8:0>:int,<array_max_1033@8:1>:int) = (0 <= <array_max_1033@8:1>)
      end ApronInterface.convex_hull_interpolate(6361)[4] (0.000000 sec.)
      begin HcSolver.check_validity(6533)[4]
        input:
          P[<fail_1486@19:0>](<fail_1486@19:0>:bool)|- bot
          
          P[<make_array_1030@13:1>](<k_make_array_u_1182@16:1>:int,<k_make_array_u_1182@16:0>:int),
          ((0 > <k_make_array_u_1182@16:0>) && <fail_1486@19:0>) |- P[<fail_1486@19:0>](
          <fail_1486@19:0>:bool)
          
          P[<<array_max_1033@8:2>@11:0>](<make_array_1030@13:0>:int,0:int,<make_array_1030@13:1>:int)|- P[<make_array_1030@13:1>](
          <make_array_1030@13:0>:int,<make_array_1030@13:1>:int)
          
          P[<array_max_1033@8:1>](<array_max_1033@8:0>:int,<array_max_1033@8:1>:int),
          ((<array_max_1033@8:1> < <array_max_1033@8:0>) && (<<array_max_1033@8:2>@11:0> = <array_max_1033@8:1>))
          |- P[<<array_max_1033@8:2>@11:0>](<array_max_1033@8:0>:int,
                                            <array_max_1033@8:1>:int,
                                            <<array_max_1033@8:2>@11:0>:int)
          
           (<array_max_1033@8:1> = 0) |- P[<array_max_1033@8:1>](<array_max_1033@8:0>:int,
                                                                 <array_max_1033@8:1>:int)
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        
      end HcSolver.check_validity(6533)[4] (0.001000 sec.)
      solution:
        P[<fail_1486@19:0>](<fail_1486@19:0>:bool) = false
        P[<make_array_1030@13:1>](<make_array_1030@13:0>:int,<make_array_1030@13:1>:int) =
        (0 <= <make_array_1030@13:1>)
        P[<<array_max_1033@8:2>@11:0>](<array_max_1033@8:0>:int,<array_max_1033@8:1>:int,<<array_max_1033@8:2>@11:0>:int) =
        (0 <= <<array_max_1033@8:2>@11:0>)
        P[<array_max_1033@8:1>](<array_max_1033@8:0>:int,<array_max_1033@8:1>:int) = (0 <= <array_max_1033@8:1>)
    end GenHcSolver.solve(1462)[3] (0.030995 sec.)
    begin GenHcSolver.solve(6906)[3]
      Horn clauses:
        P[<fail_1486@19:0>](<fail_1486@19:0>:bool)|- bot
        
        P[<make_array_1030@13:1>](<k_make_array_u_1182@16:1>:int,<k_make_array_u_1182@16:0>:int),
        ((0 > <k_make_array_u_1182@16:0>) && <fail_1486@19:0>) |- P[<fail_1486@19:0>](
        <fail_1486@19:0>:bool)
        
        P[<<array_max_1033@8:2>@11:0>](<make_array_1030@13:0>:int,0:int,<make_array_1030@13:1>:int)|- P[<make_array_1030@13:1>](
        <make_array_1030@13:0>:int,<make_array_1030@13:1>:int)
        
        P[<array_max_1033@8:1>](<array_max_1033@8:0>:int,<array_max_1033@8:1>:int),
        ((<array_max_1033@8:1> < <array_max_1033@8:0>) && (<<array_max_1033@8:2>@11:0> = <array_max_1033@8:1>))
        |- P[<<array_max_1033@8:2>@11:0>](<array_max_1033@8:0>:int,<array_max_1033@8:1>:int,
                                          <<array_max_1033@8:2>@11:0>:int)
        
         (<array_max_1033@8:1> = 0) |- P[<array_max_1033@8:1>](<array_max_1033@8:0>:int,
                                                               <array_max_1033@8:1>:int)
      lower bounds:
        P[<array_max_1033@8:1>](<array_max_1033@8:0>:int,<array_max_1033@8:1>:int) = (<array_max_1033@8:1> = 0)
        P[<<array_max_1033@8:2>@11:0>](<array_max_1033@8:0>:int,<array_max_1033@8:1>:int,<<array_max_1033@8:2>@11:0>:int) =
        ((<array_max_1033@8:1> = 0) &&
         ((<array_max_1033@8:1> < <array_max_1033@8:0>) && (<<array_max_1033@8:2>@11:0> = <array_max_1033@8:1>)))
        P[<make_array_1030@13:1>](<make_array_1030@13:0>:int,<make_array_1030@13:1>:int) =
        ((<make_array_1030@13:1> = 0) && (0 < <make_array_1030@13:0>))
        P[<fail_1486@19:0>](<fail_1486@19:0>:bool) = false
      upper bounds:
        P[<fail_1486@19:0>](var13:bool) = true
      begin GenHcSolver.classify_pids(8169)[4]
        output:
          [<fail_1486@19:0>]
      end GenHcSolver.classify_pids(8169)[4] (0.000000 sec.)
      lb:false
      nub:false
      begin ApronInterface.convex_hull_interpolate(8172)[4]
        lb:false
        nub:false
        begin ExtFormula.Formula.case_analysis_boolean(8175)[5]
          ts: false
          
        end ExtFormula.Formula.case_analysis_boolean(8175)[5] (0.000000 sec.)
        begin ExtFormula.Formula.case_analysis_boolean(8180)[5]
          ts: false
          
        end ExtFormula.Formula.case_analysis_boolean(8180)[5] (0.000000 sec.)
        lb':(-1 >= 0)
        nub':(-1 >= 0)
        begin InterpProver.interpolate(8183)[5]
          begin InterpProver.interpolate_fresh(8184)[6]
            begin InterpProver.interpolate_log(8185)[7]
              input1: (-1 >= 0)
              input2: (-1 >= 0)
              begin InterpProver.interpolate_check(8186)[8]
                begin InterpProver.interpolate_simplify(8187)[9]
                  begin InterpProver.interpolate_quick(8202)[10]
                    
                  end InterpProver.interpolate_quick(8202)[10] (0.000000 sec.)
                  begin minimizing # of disjunctions(8206)[10]
                    input: false
                    output: false
                  end minimizing # of disjunctions(8206)[10] (0.000000 sec.)
                  
                end InterpProver.interpolate_simplify(8187)[9] (0.000000 sec.)
                
              end InterpProver.interpolate_check(8186)[8] (0.001000 sec.)
              output: false
            end InterpProver.interpolate_log(8185)[7] (0.001000 sec.)
            
          end InterpProver.interpolate_fresh(8184)[6] (0.001000 sec.)
          
        end InterpProver.interpolate(8183)[5] (0.001000 sec.)
        output:
          P[<fail_1486@19:0>](<fail_1486@19:0>:bool) = false
      end ApronInterface.convex_hull_interpolate(8172)[4] (0.001000 sec.)
      Horn clauses:
        P[<make_array_1030@13:1>](<k_make_array_u_1182@16:1>:int,<k_make_array_u_1182@16:0>:int),
        (0 > <k_make_array_u_1182@16:0>) |- bot
        
        P[<<array_max_1033@8:2>@11:0>](<make_array_1030@13:0>:int,0:int,<make_array_1030@13:1>:int)|- P[<make_array_1030@13:1>](
        <make_array_1030@13:0>:int,<make_array_1030@13:1>:int)
        
        P[<array_max_1033@8:1>](<array_max_1033@8:0>:int,<array_max_1033@8:1>:int),
        ((<array_max_1033@8:1> < <array_max_1033@8:0>) && (<<array_max_1033@8:2>@11:0> = <array_max_1033@8:1>))
        |- P[<<array_max_1033@8:2>@11:0>](<array_max_1033@8:0>:int,<array_max_1033@8:1>:int,
                                          <<array_max_1033@8:2>@11:0>:int)
        
         (<array_max_1033@8:1> = 0) |- P[<array_max_1033@8:1>](<array_max_1033@8:0>:int,
                                                               <array_max_1033@8:1>:int)
      lower bounds:
        P[<array_max_1033@8:1>](<array_max_1033@8:0>:int,<array_max_1033@8:1>:int) = (<array_max_1033@8:1> = 0)
        P[<<array_max_1033@8:2>@11:0>](<array_max_1033@8:0>:int,<array_max_1033@8:1>:int,<<array_max_1033@8:2>@11:0>:int) =
        ((<array_max_1033@8:1> = 0) &&
         ((<array_max_1033@8:1> < <array_max_1033@8:0>) && (<<array_max_1033@8:2>@11:0> = <array_max_1033@8:1>)))
        P[<make_array_1030@13:1>](<make_array_1030@13:0>:int,<make_array_1030@13:1>:int) =
        ((<make_array_1030@13:1> = 0) && (0 < <make_array_1030@13:0>))
      upper bounds:
        P[<make_array_1030@13:1>](var14:int,var15:int) = (0 <= var15)
      begin GenHcSolver.classify_pids(9654)[4]
        output:
          [<make_array_1030@13:1>]
      end GenHcSolver.classify_pids(9654)[4] (0.000000 sec.)
      lb:((<make_array_1030@13:1> = 0) && (0 < <make_array_1030@13:0>))
      nub:(not (0 <= <make_array_1030@13:1>))
      begin ApronInterface.convex_hull_interpolate(9657)[4]
        lb:((<make_array_1030@13:1> = 0) && (0 < <make_array_1030@13:0>))
        nub:(not (0 <= <make_array_1030@13:1>))
        begin ExtFormula.Formula.case_analysis_boolean(9667)[5]
          ts: ((<make_array_1030@13:1> = 0) && (0 < <make_array_1030@13:0>))
          
        end ExtFormula.Formula.case_analysis_boolean(9667)[5] (0.001000 sec.)
        begin ExtFormula.Formula.case_analysis_boolean(9675)[5]
          ts: (0 > <make_array_1030@13:1>)
          
        end ExtFormula.Formula.case_analysis_boolean(9675)[5] (0.000000 sec.)
        lb':((<make_array_1030@13:1> = 0) && ((-1 + <make_array_1030@13:0>) >= 0))
        nub':((-1 + (-1 * <make_array_1030@13:1>)) >= 0)
        begin InterpProver.interpolate(9679)[5]
          begin InterpProver.interpolate_fresh(9680)[6]
            begin InterpProver.interpolate_log(9681)[7]
              input1: ((<make_array_1030@13:1> = 0) && ((-1 + <make_array_1030@13:0>) >= 0))
              input2: ((-1 + (-1 * <make_array_1030@13:1>)) >= 0)
              begin InterpProver.interpolate_check(9682)[8]
                begin InterpProver.interpolate_simplify(9683)[9]
                  begin InterpProver.interpolate_quick(9720)[10]
                    begin CsisatInterface.interpolate_csisat_wrap(9729)[11]
                      begin CsisatInterface.interpolate_csisat_post_process(9730)[12]
                        begin CsisatInterface.interpolate_csisat_log(9731)[13]
                          input1: (0 = v_sep_make_array_1030_sep_13_sep_1 & 1 <= v_sep_make_array_1030_sep_13_sep_0)
                          input2: (1 + v_sep_make_array_1030_sep_13_sep_1) <= 0
                          begin CsisatInterface.interpolate_csisat_raw(9732)[14]
                            
                          end CsisatInterface.interpolate_csisat_raw(9732)[14] (0.000000 sec.)
                          output: -2*v_sep_make_array_1030_sep_13_sep_1 <= 0
                          
                        end CsisatInterface.interpolate_csisat_log(9731)[13] (0.000000 sec.)
                        after simplification: -2*v_sep_make_array_1030_sep_13_sep_1 <= 0
                        after dnf conversion: ((-2*v_sep_make_array_1030_sep_13_sep_1 <= 0))
                        
                      end CsisatInterface.interpolate_csisat_post_process(9730)[12] (0.000000 sec.)
                      
                    end CsisatInterface.interpolate_csisat_wrap(9729)[11] (0.000000 sec.)
                    
                  end InterpProver.interpolate_quick(9720)[10] (0.001000 sec.)
                  
                end InterpProver.interpolate_simplify(9683)[9] (0.001000 sec.)
                
              end InterpProver.interpolate_check(9682)[8] (0.001999 sec.)
              output: (0 <= <make_array_1030@13:1>)
            end InterpProver.interpolate_log(9681)[7] (0.001999 sec.)
            
          end InterpProver.interpolate_fresh(9680)[6] (0.001999 sec.)
          
        end InterpProver.interpolate(9679)[5] (0.001999 sec.)
        output:
          P[<make_array_1030@13:1>](<make_array_1030@13:0>:int,<make_array_1030@13:1>:int) =
          (0 <= <make_array_1030@13:1>)
      end ApronInterface.convex_hull_interpolate(9657)[4] (0.002999 sec.)
      Horn clauses:
        P[<<array_max_1033@8:2>@11:0>](<make_array_1030@13:0>:int,0:int,<make_array_1030@13:1>:int),
        (0 > <make_array_1030@13:1>) |- bot
        
        P[<array_max_1033@8:1>](<array_max_1033@8:0>:int,<array_max_1033@8:1>:int),
        ((<array_max_1033@8:1> < <array_max_1033@8:0>) && (<<array_max_1033@8:2>@11:0> = <array_max_1033@8:1>))
        |- P[<<array_max_1033@8:2>@11:0>](<array_max_1033@8:0>:int,<array_max_1033@8:1>:int,
                                          <<array_max_1033@8:2>@11:0>:int)
        
         (<array_max_1033@8:1> = 0) |- P[<array_max_1033@8:1>](<array_max_1033@8:0>:int,
                                                               <array_max_1033@8:1>:int)
      lower bounds:
        P[<array_max_1033@8:1>](<array_max_1033@8:0>:int,<array_max_1033@8:1>:int) = (<array_max_1033@8:1> = 0)
        P[<<array_max_1033@8:2>@11:0>](<array_max_1033@8:0>:int,<array_max_1033@8:1>:int,<<array_max_1033@8:2>@11:0>:int) =
        ((<array_max_1033@8:1> = 0) &&
         ((<array_max_1033@8:1> < <array_max_1033@8:0>) && (<<array_max_1033@8:2>@11:0> = <array_max_1033@8:1>)))
      upper bounds:
        P[<<array_max_1033@8:2>@11:0>](var16:int,var17:int,var18:int) = ((var17 <> 0) || (0 <= var18))
      begin GenHcSolver.classify_pids(10980)[4]
        output:
          [<<array_max_1033@8:2>@11:0>]
      end GenHcSolver.classify_pids(10980)[4] (0.000000 sec.)
      lb:((<array_max_1033@8:1> = 0) &&
          ((<array_max_1033@8:1> < <array_max_1033@8:0>) && (<<array_max_1033@8:2>@11:0> = <array_max_1033@8:1>)))
      nub:(not ((<array_max_1033@8:1> <> 0) || (0 <= <<array_max_1033@8:2>@11:0>)))
      begin ApronInterface.convex_hull_interpolate(10983)[4]
        lb:((<array_max_1033@8:1> = 0) &&
            ((<array_max_1033@8:1> < <array_max_1033@8:0>) && (<<array_max_1033@8:2>@11:0> = <array_max_1033@8:1>)))
        nub:(not ((<array_max_1033@8:1> <> 0) || (0 <= <<array_max_1033@8:2>@11:0>)))
        begin ExtFormula.Formula.case_analysis_boolean(11012)[5]
          ts: ((<array_max_1033@8:1> = 0) &&
               ((<array_max_1033@8:1> < <array_max_1033@8:0>) && (<<array_max_1033@8:2>@11:0> = <array_max_1033@8:1>)))
          
        end ExtFormula.Formula.case_analysis_boolean(11012)[5] (0.000000 sec.)
        begin ExtFormula.Formula.case_analysis_boolean(11029)[5]
          ts: ((<array_max_1033@8:1> = 0) && (0 > <<array_max_1033@8:2>@11:0>))
          
        end ExtFormula.Formula.case_analysis_boolean(11029)[5] (0.000000 sec.)
        lb':((<<array_max_1033@8:2>@11:0> = 0) && ((<array_max_1033@8:1> = 0) && ((-1 + <array_max_1033@8:0>) >= 0)))
        nub':((<array_max_1033@8:1> = 0) && ((-1 + (-1 * <<array_max_1033@8:2>@11:0>)) >= 0))
        begin InterpProver.interpolate(11034)[5]
          begin InterpProver.interpolate_fresh(11035)[6]
            begin InterpProver.interpolate_log(11036)[7]
              input1: ((<<array_max_1033@8:2>@11:0> = 0) &&
                       ((<array_max_1033@8:1> = 0) && ((-1 + <array_max_1033@8:0>) >= 0)))
              input2: ((<array_max_1033@8:1> = 0) && ((-1 + (-1 * <<array_max_1033@8:2>@11:0>)) >= 0))
              begin InterpProver.interpolate_check(11037)[8]
                begin InterpProver.interpolate_simplify(11038)[9]
                  begin InterpProver.interpolate_quick(11109)[10]
                    begin CsisatInterface.interpolate_csisat_wrap(11118)[11]
                      begin CsisatInterface.interpolate_csisat_post_process(11119)[12]
                        begin CsisatInterface.interpolate_csisat_log(11120)[13]
                          input1: (0 = v_sep_array_max_1033_sep_8_sep_1 & 0 = v_sep_array_max_1033_sep_8_sep_2_sep_11_sep_0 & 1 <= v_sep_array_max_1033_sep_8_sep_0)
                          input2: (0 = v_sep_array_max_1033_sep_8_sep_1 & (1 + v_sep_array_max_1033_sep_8_sep_2_sep_11_sep_0) <= 0)
                          begin CsisatInterface.interpolate_csisat_raw(11121)[14]
                            
                          end CsisatInterface.interpolate_csisat_raw(11121)[14] (0.000000 sec.)
                          output: -2*v_sep_array_max_1033_sep_8_sep_2_sep_11_sep_0 <= 0
                          
                        end CsisatInterface.interpolate_csisat_log(11120)[13] (0.000000 sec.)
                        after simplification: -2*v_sep_array_max_1033_sep_8_sep_2_sep_11_sep_0 <= 0
                        after dnf conversion: ((-2*v_sep_array_max_1033_sep_8_sep_2_sep_11_sep_0 <= 0))
                        
                      end CsisatInterface.interpolate_csisat_post_process(11119)[12] (0.000000 sec.)
                      
                    end CsisatInterface.interpolate_csisat_wrap(11118)[11] (0.000000 sec.)
                    
                  end InterpProver.interpolate_quick(11109)[10] (0.001000 sec.)
                  
                end InterpProver.interpolate_simplify(11038)[9] (0.002000 sec.)
                
              end InterpProver.interpolate_check(11037)[8] (0.002000 sec.)
              output: (0 <= <<array_max_1033@8:2>@11:0>)
            end InterpProver.interpolate_log(11036)[7] (0.002000 sec.)
            
          end InterpProver.interpolate_fresh(11035)[6] (0.002000 sec.)
          
        end InterpProver.interpolate(11034)[5] (0.002000 sec.)
        output:
          P[<<array_max_1033@8:2>@11:0>](<array_max_1033@8:0>:int,<array_max_1033@8:1>:int,<<array_max_1033@8:2>@11:0>:int) =
          (0 <= <<array_max_1033@8:2>@11:0>)
      end ApronInterface.convex_hull_interpolate(10983)[4] (0.002999 sec.)
      Horn clauses:
        P[<array_max_1033@8:1>](<array_max_1033@8:0>:int,<<array_max_1033@8:2>@11:0>:int),
        ((<<array_max_1033@8:2>@11:0> < <array_max_1033@8:0>) && (0 > <<array_max_1033@8:2>@11:0>)) |- bot
        
         (<array_max_1033@8:1> = 0) |- P[<array_max_1033@8:1>](<array_max_1033@8:0>:int,
                                                               <array_max_1033@8:1>:int)
      lower bounds:
        P[<array_max_1033@8:1>](<array_max_1033@8:0>:int,<array_max_1033@8:1>:int) = (<array_max_1033@8:1> = 0)
      upper bounds:
        P[<array_max_1033@8:1>](var19:int,var20:int) = ((var20 >= var19) || (0 <= var20))
      begin GenHcSolver.classify_pids(11901)[4]
        output:
          [<array_max_1033@8:1>]
      end GenHcSolver.classify_pids(11901)[4] (0.000000 sec.)
      lb:(<array_max_1033@8:1> = 0)
      nub:(not ((<array_max_1033@8:1> >= <array_max_1033@8:0>) || (0 <= <array_max_1033@8:1>)))
      begin ApronInterface.convex_hull_interpolate(11904)[4]
        lb:(<array_max_1033@8:1> = 0)
        nub:(not ((<array_max_1033@8:1> >= <array_max_1033@8:0>) || (0 <= <array_max_1033@8:1>)))
        begin ExtFormula.Formula.case_analysis_boolean(11908)[5]
          ts: (<array_max_1033@8:1> = 0)
          
        end ExtFormula.Formula.case_analysis_boolean(11908)[5] (0.000000 sec.)
        begin ExtFormula.Formula.case_analysis_boolean(11926)[5]
          ts: ((<array_max_1033@8:1> < <array_max_1033@8:0>) && (0 > <array_max_1033@8:1>))
          
        end ExtFormula.Formula.case_analysis_boolean(11926)[5] (0.000000 sec.)
        lb':(<array_max_1033@8:1> = 0)
        nub':(((-1 + (-1 * <array_max_1033@8:1>)) >= 0) &&
              (((-1 + (-1 * <array_max_1033@8:1>)) + <array_max_1033@8:0>) >= 0))
        begin InterpProver.interpolate(11932)[5]
          begin InterpProver.interpolate_fresh(11933)[6]
            begin InterpProver.interpolate_log(11934)[7]
              input1: (<array_max_1033@8:1> = 0)
              input2: (((-1 + (-1 * <array_max_1033@8:1>)) >= 0) &&
                       (((-1 + (-1 * <array_max_1033@8:1>)) + <array_max_1033@8:0>) >= 0))
              begin InterpProver.interpolate_check(11935)[8]
                begin InterpProver.interpolate_simplify(11936)[9]
                  begin InterpProver.interpolate_quick(11987)[10]
                    begin CsisatInterface.interpolate_csisat_wrap(11996)[11]
                      begin CsisatInterface.interpolate_csisat_post_process(11997)[12]
                        begin CsisatInterface.interpolate_csisat_log(11998)[13]
                          input1: 0 = v_sep_array_max_1033_sep_8_sep_1
                          input2: ((1 + v_sep_array_max_1033_sep_8_sep_1) <= 0 & (1 + v_sep_array_max_1033_sep_8_sep_1) <= v_sep_array_max_1033_sep_8_sep_0)
                          begin CsisatInterface.interpolate_csisat_raw(11999)[14]
                            
                          end CsisatInterface.interpolate_csisat_raw(11999)[14] (0.000000 sec.)
                          output: -2*v_sep_array_max_1033_sep_8_sep_1 <= 0
                          
                        end CsisatInterface.interpolate_csisat_log(11998)[13] (0.000000 sec.)
                        after simplification: -2*v_sep_array_max_1033_sep_8_sep_1 <= 0
                        after dnf conversion: ((-2*v_sep_array_max_1033_sep_8_sep_1 <= 0))
                        
                      end CsisatInterface.interpolate_csisat_post_process(11997)[12] (0.000000 sec.)
                      
                    end CsisatInterface.interpolate_csisat_wrap(11996)[11] (0.000000 sec.)
                    
                  end InterpProver.interpolate_quick(11987)[10] (0.001000 sec.)
                  
                end InterpProver.interpolate_simplify(11936)[9] (0.001000 sec.)
                
              end InterpProver.interpolate_check(11935)[8] (0.002000 sec.)
              output: (0 <= <array_max_1033@8:1>)
            end InterpProver.interpolate_log(11934)[7] (0.002000 sec.)
            
          end InterpProver.interpolate_fresh(11933)[6] (0.002000 sec.)
          
        end InterpProver.interpolate(11932)[5] (0.002000 sec.)
        output:
          P[<array_max_1033@8:1>](<array_max_1033@8:0>:int,<array_max_1033@8:1>:int) = (0 <= <array_max_1033@8:1>)
      end ApronInterface.convex_hull_interpolate(11904)[4] (0.003000 sec.)
      begin HcSolver.check_validity(12119)[4]
        input:
          P[<fail_1486@19:0>](<fail_1486@19:0>:bool)|- bot
          
          P[<make_array_1030@13:1>](<k_make_array_u_1182@16:1>:int,<k_make_array_u_1182@16:0>:int),
          ((0 > <k_make_array_u_1182@16:0>) && <fail_1486@19:0>) |- P[<fail_1486@19:0>](
          <fail_1486@19:0>:bool)
          
          P[<<array_max_1033@8:2>@11:0>](<make_array_1030@13:0>:int,0:int,<make_array_1030@13:1>:int)|- P[<make_array_1030@13:1>](
          <make_array_1030@13:0>:int,<make_array_1030@13:1>:int)
          
          P[<array_max_1033@8:1>](<array_max_1033@8:0>:int,<array_max_1033@8:1>:int),
          ((<array_max_1033@8:1> < <array_max_1033@8:0>) && (<<array_max_1033@8:2>@11:0> = <array_max_1033@8:1>))
          |- P[<<array_max_1033@8:2>@11:0>](<array_max_1033@8:0>:int,
                                            <array_max_1033@8:1>:int,
                                            <<array_max_1033@8:2>@11:0>:int)
          
           (<array_max_1033@8:1> = 0) |- P[<array_max_1033@8:1>](<array_max_1033@8:0>:int,
                                                                 <array_max_1033@8:1>:int)
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        
      end HcSolver.check_validity(12119)[4] (0.003000 sec.)
      solution:
        P[<fail_1486@19:0>](<fail_1486@19:0>:bool) = false
        P[<make_array_1030@13:1>](<make_array_1030@13:0>:int,<make_array_1030@13:1>:int) =
        (0 <= <make_array_1030@13:1>)
        P[<<array_max_1033@8:2>@11:0>](<array_max_1033@8:0>:int,<array_max_1033@8:1>:int,<<array_max_1033@8:2>@11:0>:int) =
        (0 <= <<array_max_1033@8:2>@11:0>)
        P[<array_max_1033@8:1>](<array_max_1033@8:0>:int,<array_max_1033@8:1>:int) = (0 <= <array_max_1033@8:1>)
    end GenHcSolver.solve(6906)[3] (0.034995 sec.)
    begin YhornInterface.solve(12492)[3]
      begin HcSolver.solve_ub(12493)[4]
        encoded:
          P[<fail_1486@19:0>](<fail_1486@19:0>:int)|- bot
          
          P[<make_array_1030@13:1>](<k_make_array_u_1182@16:1>:int,<k_make_array_u_1182@16:0>:int),
          ((0 > <k_make_array_u_1182@16:0>) && (<fail_1486@19:0> = 1)) |- P[<fail_1486@19:0>](
          <fail_1486@19:0>:int)
          
          P[<<array_max_1033@8:2>@11:0>](<make_array_1030@13:0>:int,0:int,<make_array_1030@13:1>:int)|- P[<make_array_1030@13:1>](
          <make_array_1030@13:0>:int,<make_array_1030@13:1>:int)
          
          P[<array_max_1033@8:1>](<array_max_1033@8:0>:int,<array_max_1033@8:1>:int),
          ((<array_max_1033@8:1> < <array_max_1033@8:0>) && (<<array_max_1033@8:2>@11:0> = <array_max_1033@8:1>))
          |- P[<<array_max_1033@8:2>@11:0>](<array_max_1033@8:0>:int,
                                            <array_max_1033@8:1>:int,
                                            <<array_max_1033@8:2>@11:0>:int)
          
           (<array_max_1033@8:1> = 0) |- P[<array_max_1033@8:1>](<array_max_1033@8:0>:int,
                                                                 <array_max_1033@8:1>:int)
        input to Yhorn:
          P[<fail_1486@19:0>](<fail_1486@19:0>:int)|- bot
          
          P[<make_array_1030@13:1>](<k_make_array_u_1182@16:1>:int,<k_make_array_u_1182@16:0>:int),
          ((0 > <k_make_array_u_1182@16:0>) && (<fail_1486@19:0> = 1)) |- P[<fail_1486@19:0>](
          <fail_1486@19:0>:int)
          
          P[<<array_max_1033@8:2>@11:0>](<make_array_1030@13:0>:int,var21:int,<make_array_1030@13:1>:int), (
          var21 = 0) |- P[<make_array_1030@13:1>](<make_array_1030@13:0>:int,
                                                  <make_array_1030@13:1>:int)
          
          P[<array_max_1033@8:1>](<array_max_1033@8:0>:int,<array_max_1033@8:1>:int),
          ((<<array_max_1033@8:2>@11:0> = <array_max_1033@8:1>) && (<array_max_1033@8:1> < <array_max_1033@8:0>))
          |- P[<<array_max_1033@8:2>@11:0>](<array_max_1033@8:0>:int,
                                            <array_max_1033@8:1>:int,
                                            <<array_max_1033@8:2>@11:0>:int)
          Yhorn (Wed Sep 25 10:52:05 JST 2013)


(0=0) & (v_sep_fail_1486_sep_19_sep_0($10)) -> 1=0.
(($10-1=0) & (-$11>0)) & (v_sep_make_array_1030_sep_13_sep_1($12,$11)) -> v_sep_fail_1486_sep_19_sep_0($10).
($13=0) & (v_sep_array_max_1033_sep_8_sep_2_sep_11_sep_0($14,$13,$15)) -> v_sep_make_array_1030_sep_13_sep_1($14,$15).
(($16-$17<0) & (-$16+$18=0)) & (v_sep_array_max_1033_sep_8_sep_1($17,$16)) -> v_sep_array_max_1033_sep_8_sep_2_sep_11_sep_0($17,$16,$18).
$16=0 -> v_sep_array_max_1033_sep_8_sep_1($17,$16).


v_sep_array_max_1033_sep_8_sep_1: X
v_sep_array_max_1033_sep_8_sep_2_sep_11_sep_0: X
v_sep_fail_1486_sep_19_sep_0: X
v_sep_make_array_1030_sep_13_sep_1: X
.....
v_sep_array_max_1033_sep_8_sep_1: X
v_sep_array_max_1033_sep_8_sep_2_sep_11_sep_0: X
v_sep_fail_1486_sep_19_sep_0: X
v_sep_make_array_1030_sep_13_sep_1: X
...
v_sep_array_max_1033_sep_8_sep_1: X
v_sep_array_max_1033_sep_8_sep_2_sep_11_sep_0: X
v_sep_fail_1486_sep_19_sep_0: X
v_sep_make_array_1030_sep_13_sep_1: X
....
v_sep_array_max_1033_sep_8_sep_1: X
v_sep_array_max_1033_sep_8_sep_2_sep_11_sep_0: X
v_sep_fail_1486_sep_19_sep_0: X
v_sep_make_array_1030_sep_13_sep_1: X
.....
v_sep_array_max_1033_sep_8_sep_1: X
v_sep_array_max_1033_sep_8_sep_2_sep_11_sep_0: X
v_sep_fail_1486_sep_19_sep_0: X
v_sep_make_array_1030_sep_13_sep_1: X
.....(0=0) & (v_sep_fail_1486_sep_19_sep_0($10)) -> 1=0.
(($10-1=0) & (-$11>0)) & (v_sep_make_array_1030_sep_13_sep_1($12,$11)) -> v_sep_fail_1486_sep_19_sep_0($10).
($13=0) & (v_sep_array_max_1033_sep_8_sep_2_sep_11_sep_0($14,$13,$15)) -> v_sep_make_array_1030_sep_13_sep_1($14,$15).
(($16-$17<0) & (-$16+$18=0)) & (v_sep_array_max_1033_sep_8_sep_1($17,$16)) -> v_sep_array_max_1033_sep_8_sep_2_sep_11_sep_0($17,$16,$18).
$16=0 -> v_sep_array_max_1033_sep_8_sep_1($17,$16).

           (<array_max_1033@8:1> = 0) |- P[<array_max_1033@8:1>](<array_max_1033@8:0>:int,
                                                                 <array_max_1033@8:1>:int)
        solution:
          P[<array_max_1033@8:1>]($34:int,$36:int) = true
          P[<<array_max_1033@8:2>@11:0>]($27:int,$29:int,$31:int) = ($29 <= $31)
          P[<fail_1486@19:0>]($19:bool) = false
          P[<make_array_1030@13:1>]($22:int,$24:int) = (0 <= $24)
        
      end HcSolver.solve_ub(12493)[4] (0.013997 sec.)
      begin HcSolver.check_validity(12632)[4]
        input:
          P[<fail_1486@19:0>](<fail_1486@19:0>:bool)|- bot
          
          P[<make_array_1030@13:1>](<k_make_array_u_1182@16:1>:int,<k_make_array_u_1182@16:0>:int),
          ((0 > <k_make_array_u_1182@16:0>) && <fail_1486@19:0>) |- P[<fail_1486@19:0>](
          <fail_1486@19:0>:bool)
          
          P[<<array_max_1033@8:2>@11:0>](<make_array_1030@13:0>:int,0:int,<make_array_1030@13:1>:int)|- P[<make_array_1030@13:1>](
          <make_array_1030@13:0>:int,<make_array_1030@13:1>:int)
          
          P[<array_max_1033@8:1>](<array_max_1033@8:0>:int,<array_max_1033@8:1>:int),
          ((<array_max_1033@8:1> < <array_max_1033@8:0>) && (<<array_max_1033@8:2>@11:0> = <array_max_1033@8:1>))
          |- P[<<array_max_1033@8:2>@11:0>](<array_max_1033@8:0>:int,
                                            <array_max_1033@8:1>:int,
                                            <<array_max_1033@8:2>@11:0>:int)
          
           (<array_max_1033@8:1> = 0) |- P[<array_max_1033@8:1>](<array_max_1033@8:0>:int,
                                                                 <array_max_1033@8:1>:int)
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        
      end HcSolver.check_validity(12632)[4] (0.005000 sec.)
      solution:
        P[<array_max_1033@8:1>]($34:int,$36:int) = true
        P[<<array_max_1033@8:2>@11:0>]($27:int,$29:int,$31:int) = ($29 <= $31)
        P[<fail_1486@19:0>]($19:bool) = false
        P[<make_array_1030@13:1>]($22:int,$24:int) = (0 <= $24)
    end YhornInterface.solve(12492)[3] (0.018997 sec.)
    
  end RefTypeInfer.infer_etrs(214)[2] (0.116983 sec.)
  refinement types:
    main_1479: X
    f_1484: v1:int -> X
    main_1044: v1:int -> (v2:unit -> X) -> X
    array_max_1033: v1:int ->
                    v2:{v2:int | (0 <= v2)} -> (v3:{v3:int | (0 <= v3)} -> (v4:int -> X) -> X) -> (v7:int -> X) -> X
    make_array_1030: v1:int -> v2:{v2:int | (0 <= v2)} -> (v3:int -> X) -> X
    k_make_array_u_1182: v1:int -> v2:int -> (v3:int -> X) -> v5:bool -> X
    fail_1486: v1:{v1:bool | false} -> (v2:unit -> X) -> X
    check_1148: var43:int -> var42:int -> var41:int -> (var40:int -> (var39:int -> X) -> X) -> (var36:unit -> X) -> X
    f_1485: var46:int -> var45:unit -> X
    f_array_max_1480: var56:int ->
                      var55:int -> (var54:int -> (var53:int -> X) -> X) -> (var50:int -> X) -> var48:int -> X
    f_array_max_1481: var63:int -> var62:int -> var61:int -> (var60:int -> X) -> var58:int -> X
    f_check_1482: var74:int ->
                  var73:int -> var72:int -> (var71:int -> (var70:int -> X) -> X) -> (var67:unit -> X) -> var65:int -> X
    f_main_1483: var79:int -> (var78:unit -> X) -> var76:int -> X
    fail_1487: var83:bool -> (var82:unit -> X) -> X
    k_check_u_1336: var94:int ->
                    var93:int ->
                    var92:int -> (var91:int -> (var90:int -> X) -> X) -> (var87:unit -> X) -> var85:unit -> X
    k_make_array_u_1193: var100:int -> var99:int -> (var98:int -> X) -> var96:unit -> X
  abstraction types:
    main_1479: X
    f_1484: v1:int -> X
    main_1044: v1:int -> (v2:unit -> X) -> X
    array_max_1033: v1:int ->
                    v2:int[v2 -> (0 <= v2)] -> (v3:int[v3 -> (0 <= v3)] -> (v4:int -> X) -> X) -> (v7:int -> X) -> X
    make_array_1030: v1:int -> v2:int[v2 -> (0 <= v2)] -> (v3:int -> X) -> X
    k_make_array_u_1182: v1:int -> v2:int -> (v3:int -> X) -> v5:bool -> X
    fail_1486: v1:bool -> (v2:unit -> X) -> X
    check_1148: var43:int -> var42:int -> var41:int -> (var40:int -> (var39:int -> X) -> X) -> (var36:unit -> X) -> X
    f_1485: var46:int -> var45:unit -> X
    f_array_max_1480: var56:int ->
                      var55:int -> (var54:int -> (var53:int -> X) -> X) -> (var50:int -> X) -> var48:int -> X
    f_array_max_1481: var63:int -> var62:int -> var61:int -> (var60:int -> X) -> var58:int -> X
    f_check_1482: var74:int ->
                  var73:int -> var72:int -> (var71:int -> (var70:int -> X) -> X) -> (var67:unit -> X) -> var65:int -> X
    f_main_1483: var79:int -> (var78:unit -> X) -> var76:int -> X
    fail_1487: var83:bool -> (var82:unit -> X) -> X
    k_check_u_1336: var94:int ->
                    var93:int ->
                    var92:int -> (var91:int -> (var90:int -> X) -> X) -> (var87:unit -> X) -> var85:unit -> X
    k_make_array_u_1193: var100:int -> var99:int -> (var98:int -> X) -> var96:unit -> X
  
end AbsTypeInfer.refine(213)[1] (0.122982 sec.)
DONE!

Prefix of spurious counter-example::
0; 0; 0; 1; 1

Program with abstraction types (CEGAR-cycle 1)::
Main: main_1479
  main_1479 -> (rand_int f_1484)
  array_max_1033 n_1034 i_1035 a_1036 k_array_max_1226 when (i_1035 >= n_1034) -> (k_array_max_1226 0)
  array_max_1033 n_1034 i_1035 a_1036 k_array_max_1226 when (not (i_1035 >= n_1034)) ->
      (a_1036 i_1035 (f_array_max_1480 i_1035 n_1034 a_1036 k_array_max_1226))
  check_1148 n_1040 i_1041 max_1042 a_1043 k_check_1309 when (i_1041 >= n_1040) -> (k_check_1309 ())
  check_1148 n_1040 i_1041 max_1042 a_1043 k_check_1309 when (not (i_1041 >= n_1040)) ->
      (a_1043 i_1041 (f_check_1482 i_1041 max_1042 n_1040 a_1043 k_check_1309))
  f_1484 x_1454 -> (main_1044 x_1454 (f_1485 x_1454))
  f_1485 x_1454 x_1451 -> end
  f_array_max_1480 i_1035 n_1034 a_1036 k_array_max_1226 x_1229 ->
      (array_max_1033 n_1034 (i_1035 + 1) a_1036 (f_array_max_1481 i_1035 n_1034 x_1229 k_array_max_1226))
  f_array_max_1481 i_1035 n_1034 x_1229 k_array_max_1226 x_1242 when (x_1229 > x_1242) -> (k_array_max_1226 x_1229)
  f_array_max_1481 i_1035 n_1034 x_1229 k_array_max_1226 x_1242 when (
      not (x_1229 > x_1242)) -> (k_array_max_1226 x_1242)
  f_check_1482 i_1041 max_1042 n_1040 a_1043 k_check_1309 x_1315 when (
      x_1315 <= max_1042) -> (k_check_u_1336 i_1041 max_1042 n_1040 a_1043 k_check_1309 ())
  f_check_1482 i_1041 max_1042 n_1040 a_1043 k_check_1309 x_1315 when (
      not (x_1315 <= max_1042)) -> (fail_1487 true (k_check_u_1336 i_1041 max_1042 n_1040 a_1043 k_check_1309))
  f_main_1483 n_1045 k_main_1380 x_1399 -> (check_1148 n_1045 0 x_1399 (make_array_1030 n_1045) k_main_1380)
  fail_1486 b k -> {fail} => (k ())
  fail_1487 b k -> {fail} => (k ())
  k_check_u_1336 i_1041 max_1042 n_1040 a_1043 k_check_1309 x_1312 ->
      (check_1148 n_1040 (i_1041 + 1) max_1042 a_1043 k_check_1309)
  k_make_array_u_1182 i_1032 n_1031 k_make_array_1176 b_1194 when b_1194 ->
      (k_make_array_u_1193 i_1032 n_1031 k_make_array_1176 ())
  k_make_array_u_1182 i_1032 n_1031 k_make_array_1176 b_1194 when (not b_1194) ->
      (fail_1486 true (k_make_array_u_1193 i_1032 n_1031 k_make_array_1176))
  k_make_array_u_1193 i_1032 n_1031 k_make_array_1176 x_1179 -> (k_make_array_1176 i_1032)
  main_1044 n_1045 k_main_1380 -> (array_max_1033 n_1045 0 (make_array_1030 n_1045) (f_main_1483 n_1045 k_main_1380))
  make_array_1030 n_1031 i_1032 k_make_array_1176 when (0 <= i_1032) ->
      (k_make_array_u_1182 i_1032 n_1031 k_make_array_1176 (i_1032 < n_1031))
  make_array_1030 n_1031 i_1032 k_make_array_1176 when (not (0 <= i_1032)) ->
      (k_make_array_u_1182 i_1032 n_1031 k_make_array_1176 false)
Types:
  main_1479 : X
  array_max_1033 : (int -> x_2:int[x_2 >= 0] -> (x_4:int[x_4 >= 0] -> (int -> X) -> X) -> (int -> X) -> X)
  check_1148 : (int -> int -> int -> (int -> (int -> X) -> X) -> (unit -> X) -> X)
  fail_1486 : (x_1:bool[x_1] -> (unit -> X) -> X)
  fail_1487 : (x_1:bool[x_1] -> (unit -> X) -> X)
  make_array_1030 : (int -> x_2:int[x_2 >= 0] -> (int -> X) -> X)
  
(1-1) Abstracting ... DONE!

(1-2) Checking HORS ... DONE!

Error trace::
  main_1479 ... --> 
  f_1484 ... --> 
  main_1044 ... --> 
  array_max_1033 [1/2] ... --> 
  f_main_1483 ... --> 
  check_1148 [2/2] ... --> 
  make_array_1030 [2/2] ... --> 
  k_make_array_u_1182 [2/2] ... --> 
  fail_1486 ... --> fail -->
  ERROR!

Spurious counter-example::
  0; 0; 0; 0; 0; 1; 1; 1; 0

(1-3) Checking counter-example ... DONE!

(1-4) Discovering predicates ... 
begin AbsTypeInfer.refine(13430)[1]
  program:
    main_1479  | true = ((Random.int 0) f_1484)
    array_max_1033 n_1034 i_1035 a_1036 k_array_max_1226 | (i_1035 >= n_1034) = (
    k_array_max_1226 0)
    array_max_1033 n_1034 i_1035 a_1036 k_array_max_1226 | (not (i_1035 >= n_1034)) = (
    a_1036 i_1035
           (f_array_max_1480 i_1035
                             n_1034
                             a_1036
                             k_array_max_1226))
    check_1148 n_1040 i_1041 max_1042 a_1043 k_check_1309 | (i_1041 >= n_1040) = (
    k_check_1309 ())
    check_1148 n_1040 i_1041 max_1042 a_1043 k_check_1309 | (not (i_1041 >= n_1040)) = (
    a_1043 i_1041
           (f_check_1482 i_1041
                         max_1042
                         n_1040
                         a_1043
                         k_check_1309))
    f_1484 x_1454 | true = (main_1044 x_1454
                                      (f_1485 x_1454))
    f_1485 x_1454 x_1451 | true = end
    f_array_max_1480 i_1035 n_1034 a_1036 k_array_max_1226 x_1229 | true = (
    array_max_1033 n_1034
                   (i_1035 + 1)
                   a_1036
                   (f_array_max_1481 i_1035
                                     n_1034
                                     x_1229
                                     k_array_max_1226))
    f_array_max_1481 i_1035 n_1034 x_1229 k_array_max_1226 x_1242 | (
    x_1229 > x_1242) = (k_array_max_1226 x_1229)
    f_array_max_1481 i_1035 n_1034 x_1229 k_array_max_1226 x_1242 | (
    not (x_1229 > x_1242)) = (k_array_max_1226 x_1242)
    f_check_1482 i_1041 max_1042 n_1040 a_1043 k_check_1309 x_1315 | (
    x_1315 <= max_1042) = (k_check_u_1336 i_1041
                                          max_1042
                                          n_1040
                                          a_1043
                                          k_check_1309
                                          ())
    f_check_1482 i_1041 max_1042 n_1040 a_1043 k_check_1309 x_1315 | (
    not (x_1315 <= max_1042)) = (fail_1487 true
                                           (k_check_u_1336 i_1041
                                                           max_1042
                                                           n_1040
                                                           a_1043
                                                           k_check_1309))
    f_main_1483 n_1045 k_main_1380 x_1399 | true = (check_1148 n_1045
                                                               0
                                                               x_1399
                                                               (make_array_1030 n_1045)
                                                               k_main_1380)
    fail_1486 b k | true = (fail ())
    fail_1487 b k | true = (fail ())
    k_check_u_1336 i_1041 max_1042 n_1040 a_1043 k_check_1309 x_1312 | true = (
    check_1148 n_1040
               (i_1041 + 1)
               max_1042
               a_1043
               k_check_1309)
    k_make_array_u_1182 i_1032 n_1031 k_make_array_1176 b_1194 | b_1194 = (
    k_make_array_u_1193 i_1032
                        n_1031
                        k_make_array_1176
                        ())
    k_make_array_u_1182 i_1032 n_1031 k_make_array_1176 b_1194 | (not b_1194) = (
    fail_1486 true
              (k_make_array_u_1193 i_1032
                                   n_1031
                                   k_make_array_1176))
    k_make_array_u_1193 i_1032 n_1031 k_make_array_1176 x_1179 | true = (
    k_make_array_1176 i_1032)
    main_1044 n_1045 k_main_1380 | true = (array_max_1033
                                             n_1045
                                             0
                                             (make_array_1030 n_1045)
                                             (f_main_1483 n_1045
                                                          k_main_1380))
    make_array_1030 n_1031 i_1032 k_make_array_1176 | (0 <= i_1032) = (
    k_make_array_u_1182 i_1032
                        n_1031
                        k_make_array_1176
                        (i_1032 < n_1031))
    make_array_1030 n_1031 i_1032 k_make_array_1176 | (not (0 <= i_1032)) = (
    k_make_array_u_1182 i_1032
                        n_1031
                        k_make_array_1176
                        false)
    main_1479:X
    array_max_1033:int -> int -> (int -> (int -> X) -> X) -> (int -> X) -> X
    check_1148:int -> int -> int -> (int -> (int -> X) -> X) -> (unit -> X) -> X
    f_1484:int -> X
    f_1485:int -> unit -> X
    f_array_max_1480:int -> int -> (int -> (int -> X) -> X) -> (int -> X) -> int -> X
    f_array_max_1481:int -> int -> int -> (int -> X) -> int -> X
    f_check_1482:int -> int -> int -> (int -> (int -> X) -> X) -> (unit -> X) -> int -> X
    f_main_1483:int -> (unit -> X) -> int -> X
    fail_1486:bool -> (unit -> X) -> X
    fail_1487:bool -> (unit -> X) -> X
    k_check_u_1336:int -> int -> int -> (int -> (int -> X) -> X) -> (unit -> X) -> unit -> X
    k_make_array_u_1182:int -> int -> (int -> X) -> bool -> X
    k_make_array_u_1193:int -> int -> (int -> X) -> unit -> X
    main_1044:int -> (unit -> X) -> X
    make_array_1030:int -> int -> (int -> X) -> X
  inlined functions: f_1484,f_1485,f_array_max_1480,f_array_max_1481,f_check_1482,f_main_1483,k_check_u_1336,k_make_array_u_1182,k_make_array_u_1193,main_1044
  counterexample: 0:0:0:0:0:1:1:1:0
  error traces:
    [true.nop(<f_1484@25:0> = var101)
     [true.(<main_1044@27:0> = <f_1484@25:0>)
      [true.((<array_max_1033@29:0> = <main_1044@27:0>) && (<array_max_1033@29:1> = 0))
       [(<array_max_1033@29:1> >= <array_max_1033@29:0>).(<<array_max_1033@29:3>@32:0> = 0)
        [true.((<f_main_1483@34:0> = <main_1044@27:0>) && (<f_main_1483@34:2> = <<array_max_1033@29:3>@32:0>))
         [true.
          ((<check_1148@36:0> = <f_main_1483@34:0>) &&
           ((<check_1148@36:1> = 0) && (<check_1148@36:2> = <f_main_1483@34:2>)))
          [(not (<check_1148@36:1> >= <check_1148@36:0>)).(<<check_1148@36:3>@39:0> = <check_1148@36:1>)
           [true.((<make_array_1030@41:0> = <f_main_1483@34:0>) && (<make_array_1030@41:1> = <<check_1148@36:3>@39:0>))
            [(not (0 <= <make_array_1030@41:1>)).
             ((<k_make_array_u_1182@44:0> = <make_array_1030@41:1>) &&
              ((<k_make_array_u_1182@44:1> = <make_array_1030@41:0>) && (<k_make_array_u_1182@44:3> = false)))
             [(not <k_make_array_u_1182@44:3>).(<fail_1486@47:0> = true)[true.error
  begin RefTypeInfer.infer_etrs(13431)[2]
    horn clauses:
      P[<fail_1486@47:0>](<fail_1486@47:0>:bool)|- bot
      
      P[<k_make_array_u_1182@44:3>](<k_make_array_u_1182@44:0>:int,<k_make_array_u_1182@44:1>:int,false:bool),
      <fail_1486@47:0> |- P[<fail_1486@47:0>](<fail_1486@47:0>:bool)
      
      P[<make_array_1030@41:1>](<k_make_array_u_1182@44:1>:int,<k_make_array_u_1182@44:0>:int),
      ((0 > <k_make_array_u_1182@44:0>) && (not <k_make_array_u_1182@44:3>))
      |- P[<k_make_array_u_1182@44:3>](<k_make_array_u_1182@44:0>:int,
                                       <k_make_array_u_1182@44:1>:int,
                                       <k_make_array_u_1182@44:3>:bool)
      
      P[<f_main_1483@34:2>](<make_array_1030@41:0>:int,<check_1148@36:2>:int),
      P[<<check_1148@36:3>@39:0>](<make_array_1030@41:0>:int,0:int,<check_1148@36:2>:int,<make_array_1030@41:1>:int)|- P[<make_array_1030@41:1>](
      <make_array_1030@41:0>:int,<make_array_1030@41:1>:int)
      
      P[<check_1148@36:2>](<check_1148@36:0>:int,<check_1148@36:1>:int,<check_1148@36:2>:int),
      ((<check_1148@36:1> < <check_1148@36:0>) && (<<check_1148@36:3>@39:0> = <check_1148@36:1>))
      |- P[<<check_1148@36:3>@39:0>](<check_1148@36:0>:int,<check_1148@36:1>:int,
                                     <check_1148@36:2>:int,<<check_1148@36:3>@39:0>:int)
      
      P[<f_main_1483@34:2>](<check_1148@36:0>:int,<check_1148@36:2>:int), (
      <check_1148@36:1> = 0) |- P[<check_1148@36:2>](<check_1148@36:0>:int,
                                                     <check_1148@36:1>:int,
                                                     <check_1148@36:2>:int)
      
      P[<main_1044@27:0>](<f_main_1483@34:0>:int),
      P[<<array_max_1033@29:3>@32:0>](<f_main_1483@34:0>:int,0:int,<f_main_1483@34:2>:int)|- P[<f_main_1483@34:2>](
      <f_main_1483@34:0>:int,<f_main_1483@34:2>:int)
      
      P[<array_max_1033@29:1>](<array_max_1033@29:0>:int,<array_max_1033@29:1>:int),
      ((<<array_max_1033@29:3>@32:0> = 0) && (<array_max_1033@29:1> >= <array_max_1033@29:0>))
      |- P[<<array_max_1033@29:3>@32:0>](<array_max_1033@29:0>:int,<array_max_1033@29:1>:int,
                                         <<array_max_1033@29:3>@32:0>:int)
      
      P[<main_1044@27:0>](<array_max_1033@29:0>:int), (<array_max_1033@29:1> = 0)
      |- P[<array_max_1033@29:1>](<array_max_1033@29:0>:int,<array_max_1033@29:1>:int)
      
      P[<f_1484@25:0>](<main_1044@27:0>:int)|- P[<main_1044@27:0>](<main_1044@27:0>:int)
      
      |- P[<f_1484@25:0>](<f_1484@25:0>:int)
    call trees:
      <main_1479@22>
        <f_1484@25>
          <main_1044@27>
            <array_max_1033@29>
            </<array_max_1033@29:3>@32>
            <f_main_1483@34>
              <check_1148@36>
              </<check_1148@36:3>@39>
              <make_array_1030@41>
                <k_make_array_u_1182@44>
                  <fail_1486@47>
    inlined horn clauses:
      P[<fail_1486@47:0>](<fail_1486@47:0>:bool)|- bot
      
      P[<make_array_1030@41:1>](<k_make_array_u_1182@44:1>:int,<k_make_array_u_1182@44:0>:int),
      ((0 > <k_make_array_u_1182@44:0>) && <fail_1486@47:0>) |- P[<fail_1486@47:0>](
      <fail_1486@47:0>:bool)
      
      P[<<array_max_1033@29:3>@32:0>](<make_array_1030@41:0>:int,0:int,<check_1148@36:2>:int),
      P[<<check_1148@36:3>@39:0>](<make_array_1030@41:0>:int,0:int,<check_1148@36:2>:int,<make_array_1030@41:1>:int)|- P[<make_array_1030@41:1>](
      <make_array_1030@41:0>:int,<make_array_1030@41:1>:int)
      
      P[<check_1148@36:2>](<check_1148@36:0>:int,<check_1148@36:1>:int,<check_1148@36:2>:int),
      ((<check_1148@36:1> < <check_1148@36:0>) && (<<check_1148@36:3>@39:0> = <check_1148@36:1>))
      |- P[<<check_1148@36:3>@39:0>](<check_1148@36:0>:int,<check_1148@36:1>:int,
                                     <check_1148@36:2>:int,<<check_1148@36:3>@39:0>:int)
      
      P[<<array_max_1033@29:3>@32:0>](<check_1148@36:0>:int,0:int,<check_1148@36:2>:int), (
      <check_1148@36:1> = 0) |- P[<check_1148@36:2>](<check_1148@36:0>:int,
                                                     <check_1148@36:1>:int,
                                                     <check_1148@36:2>:int)
      
      P[<array_max_1033@29:1>](<array_max_1033@29:0>:int,<array_max_1033@29:1>:int),
      ((<<array_max_1033@29:3>@32:0> = 0) && (<array_max_1033@29:1> >= <array_max_1033@29:0>))
      |- P[<<array_max_1033@29:3>@32:0>](<array_max_1033@29:0>:int,<array_max_1033@29:1>:int,
                                         <<array_max_1033@29:3>@32:0>:int)
      
       (<array_max_1033@29:1> = 0) |- P[<array_max_1033@29:1>](<array_max_1033@29:0>:int,
                                                               <array_max_1033@29:1>:int)
    begin ParamSubstInfer.infer(14907)[3]
      
    end ParamSubstInfer.infer(14907)[3] (0.075989 sec.)
    inferred extra parameters:
      
    begin RefTypeInfer.elim_coeffs(14909)[3]
      
    end RefTypeInfer.elim_coeffs(14909)[3] (0.001000 sec.)
    begin GenHcSolver.solve(15195)[3]
      Horn clauses:
        P[<fail_1486@47:0>](<fail_1486@47:0>:bool)|- bot
        
        P[<make_array_1030@41:1>](<k_make_array_u_1182@44:1>:int,<k_make_array_u_1182@44:0>:int),
        ((0 > <k_make_array_u_1182@44:0>) && <fail_1486@47:0>) |- P[<fail_1486@47:0>](
        <fail_1486@47:0>:bool)
        
        P[<<array_max_1033@29:3>@32:0>](<make_array_1030@41:0>:int,0:int,<check_1148@36:2>:int),
        P[<<check_1148@36:3>@39:0>](<make_array_1030@41:0>:int,0:int,<check_1148@36:2>:int,<make_array_1030@41:1>:int)|- P[<make_array_1030@41:1>](
        <make_array_1030@41:0>:int,<make_array_1030@41:1>:int)
        
        P[<check_1148@36:2>](<check_1148@36:0>:int,<check_1148@36:1>:int,<check_1148@36:2>:int),
        ((<check_1148@36:1> < <check_1148@36:0>) && (<<check_1148@36:3>@39:0> = <check_1148@36:1>))
        |- P[<<check_1148@36:3>@39:0>](<check_1148@36:0>:int,<check_1148@36:1>:int,
                                       <check_1148@36:2>:int,<<check_1148@36:3>@39:0>:int)
        
        P[<<array_max_1033@29:3>@32:0>](<check_1148@36:0>:int,0:int,<check_1148@36:2>:int), (
        <check_1148@36:1> = 0)
        |- P[<check_1148@36:2>](<check_1148@36:0>:int,<check_1148@36:1>:int,
                                <check_1148@36:2>:int)
        
        P[<array_max_1033@29:1>](<array_max_1033@29:0>:int,<array_max_1033@29:1>:int),
        ((<<array_max_1033@29:3>@32:0> = 0) && (<array_max_1033@29:1> >= <array_max_1033@29:0>))
        |- P[<<array_max_1033@29:3>@32:0>](<array_max_1033@29:0>:int,
                                           <array_max_1033@29:1>:int,
                                           <<array_max_1033@29:3>@32:0>:int)
        
         (<array_max_1033@29:1> = 0) |- P[<array_max_1033@29:1>](<array_max_1033@29:0>:int,
                                                                 <array_max_1033@29:1>:int)
      lower bounds:
        P[<array_max_1033@29:1>](<array_max_1033@29:0>:int,<array_max_1033@29:1>:int) = (<array_max_1033@29:1> = 0)
        P[<<array_max_1033@29:3>@32:0>](<array_max_1033@29:0>:int,<array_max_1033@29:1>:int,<<array_max_1033@29:3>@32:0>:int) =
        ((<<array_max_1033@29:3>@32:0> = 0) &&
         ((<array_max_1033@29:1> = 0) && (<array_max_1033@29:1> >= <array_max_1033@29:0>)))
        P[<check_1148@36:2>](<check_1148@36:0>:int,<check_1148@36:1>:int,<check_1148@36:2>:int) =
        ((<check_1148@36:1> = 0) && ((<check_1148@36:2> = 0) && (0 >= <check_1148@36:0>)))
        P[<<check_1148@36:3>@39:0>](<check_1148@36:0>:int,<check_1148@36:1>:int,<check_1148@36:2>:int,<<check_1148@36:3>@39:0>:int) =
        ((<check_1148@36:1> = 0) &&
         ((<check_1148@36:2> = 0) &&
          ((<check_1148@36:1> < <check_1148@36:0>) &&
           ((0 >= <check_1148@36:0>) && (<<check_1148@36:3>@39:0> = <check_1148@36:1>)))))
        P[<make_array_1030@41:1>](<make_array_1030@41:0>:int,<make_array_1030@41:1>:int) = false
        P[<fail_1486@47:0>](<fail_1486@47:0>:bool) = false
      upper bounds:
        P[<fail_1486@47:0>](var103:bool) = true
      begin GenHcSolver.classify_pids(17514)[4]
        output:
          [<fail_1486@47:0>]
      end GenHcSolver.classify_pids(17514)[4] (0.000000 sec.)
      lb:false
      nub:false
      begin ApronInterface.convex_hull_interpolate(17517)[4]
        lb:false
        nub:false
        lb':false
        nub':false
        begin InterpProver.interpolate(17518)[5]
          begin InterpProver.interpolate_fresh(17519)[6]
            begin InterpProver.interpolate_log(17520)[7]
              input1: false
              input2: false
              begin InterpProver.interpolate_check(17521)[8]
                begin InterpProver.interpolate_simplify(17522)[9]
                  begin InterpProver.interpolate_quick(17535)[10]
                    
                  end InterpProver.interpolate_quick(17535)[10] (0.000000 sec.)
                  begin minimizing # of disjunctions(17539)[10]
                    input: false
                    output: false
                  end minimizing # of disjunctions(17539)[10] (0.000000 sec.)
                  
                end InterpProver.interpolate_simplify(17522)[9] (0.000999 sec.)
                
              end InterpProver.interpolate_check(17521)[8] (0.000999 sec.)
              output: false
            end InterpProver.interpolate_log(17520)[7] (0.000999 sec.)
            
          end InterpProver.interpolate_fresh(17519)[6] (0.000999 sec.)
          
        end InterpProver.interpolate(17518)[5] (0.000999 sec.)
        output:
          P[<fail_1486@47:0>](<fail_1486@47:0>:bool) = false
      end ApronInterface.convex_hull_interpolate(17517)[4] (0.000999 sec.)
      Horn clauses:
        P[<make_array_1030@41:1>](<k_make_array_u_1182@44:1>:int,<k_make_array_u_1182@44:0>:int),
        (0 > <k_make_array_u_1182@44:0>) |- bot
        
        P[<<array_max_1033@29:3>@32:0>](<make_array_1030@41:0>:int,0:int,<check_1148@36:2>:int),
        P[<<check_1148@36:3>@39:0>](<make_array_1030@41:0>:int,0:int,<check_1148@36:2>:int,<make_array_1030@41:1>:int)|- P[<make_array_1030@41:1>](
        <make_array_1030@41:0>:int,<make_array_1030@41:1>:int)
        
        P[<check_1148@36:2>](<check_1148@36:0>:int,<check_1148@36:1>:int,<check_1148@36:2>:int),
        ((<check_1148@36:1> < <check_1148@36:0>) && (<<check_1148@36:3>@39:0> = <check_1148@36:1>))
        |- P[<<check_1148@36:3>@39:0>](<check_1148@36:0>:int,<check_1148@36:1>:int,
                                       <check_1148@36:2>:int,<<check_1148@36:3>@39:0>:int)
        
        P[<<array_max_1033@29:3>@32:0>](<check_1148@36:0>:int,0:int,<check_1148@36:2>:int), (
        <check_1148@36:1> = 0)
        |- P[<check_1148@36:2>](<check_1148@36:0>:int,<check_1148@36:1>:int,
                                <check_1148@36:2>:int)
        
        P[<array_max_1033@29:1>](<array_max_1033@29:0>:int,<array_max_1033@29:1>:int),
        ((<<array_max_1033@29:3>@32:0> = 0) && (<array_max_1033@29:1> >= <array_max_1033@29:0>))
        |- P[<<array_max_1033@29:3>@32:0>](<array_max_1033@29:0>:int,
                                           <array_max_1033@29:1>:int,
                                           <<array_max_1033@29:3>@32:0>:int)
        
         (<array_max_1033@29:1> = 0) |- P[<array_max_1033@29:1>](<array_max_1033@29:0>:int,
                                                                 <array_max_1033@29:1>:int)
      lower bounds:
        P[<array_max_1033@29:1>](<array_max_1033@29:0>:int,<array_max_1033@29:1>:int) = (<array_max_1033@29:1> = 0)
        P[<<array_max_1033@29:3>@32:0>](<array_max_1033@29:0>:int,<array_max_1033@29:1>:int,<<array_max_1033@29:3>@32:0>:int) =
        ((<<array_max_1033@29:3>@32:0> = 0) &&
         ((<array_max_1033@29:1> = 0) && (<array_max_1033@29:1> >= <array_max_1033@29:0>)))
        P[<check_1148@36:2>](<check_1148@36:0>:int,<check_1148@36:1>:int,<check_1148@36:2>:int) =
        ((<check_1148@36:1> = 0) && ((<check_1148@36:2> = 0) && (0 >= <check_1148@36:0>)))
        P[<<check_1148@36:3>@39:0>](<check_1148@36:0>:int,<check_1148@36:1>:int,<check_1148@36:2>:int,<<check_1148@36:3>@39:0>:int) =
        ((<check_1148@36:1> = 0) &&
         ((<check_1148@36:2> = 0) &&
          ((<check_1148@36:1> < <check_1148@36:0>) &&
           ((0 >= <check_1148@36:0>) && (<<check_1148@36:3>@39:0> = <check_1148@36:1>)))))
        P[<make_array_1030@41:1>](<make_array_1030@41:0>:int,<make_array_1030@41:1>:int) = false
      upper bounds:
        P[<make_array_1030@41:1>](var106:int,var107:int) = true
      begin GenHcSolver.classify_pids(20086)[4]
        output:
          [<make_array_1030@41:1>]
      end GenHcSolver.classify_pids(20086)[4] (0.000000 sec.)
      lb:false
      nub:false
      begin ApronInterface.convex_hull_interpolate(20089)[4]
        lb:false
        nub:false
        lb':false
        nub':false
        begin InterpProver.interpolate(20090)[5]
          begin InterpProver.interpolate_fresh(20091)[6]
            begin InterpProver.interpolate_log(20092)[7]
              input1: false
              input2: false
              begin InterpProver.interpolate_check(20093)[8]
                begin InterpProver.interpolate_simplify(20094)[9]
                  begin InterpProver.interpolate_quick(20107)[10]
                    
                  end InterpProver.interpolate_quick(20107)[10] (0.000000 sec.)
                  begin minimizing # of disjunctions(20111)[10]
                    input: false
                    output: false
                  end minimizing # of disjunctions(20111)[10] (0.000000 sec.)
                  
                end InterpProver.interpolate_simplify(20094)[9] (0.000000 sec.)
                
              end InterpProver.interpolate_check(20093)[8] (0.000000 sec.)
              output: false
            end InterpProver.interpolate_log(20092)[7] (0.000000 sec.)
            
          end InterpProver.interpolate_fresh(20091)[6] (0.000000 sec.)
          
        end InterpProver.interpolate(20090)[5] (0.000000 sec.)
        output:
          P[<make_array_1030@41:1>](<make_array_1030@41:0>:int,<make_array_1030@41:1>:int) = false
      end ApronInterface.convex_hull_interpolate(20089)[4] (0.000000 sec.)
      Horn clauses:
        P[<<array_max_1033@29:3>@32:0>](<make_array_1030@41:0>:int,0:int,<check_1148@36:2>:int),
        P[<<check_1148@36:3>@39:0>](<make_array_1030@41:0>:int,0:int,<check_1148@36:2>:int,<make_array_1030@41:1>:int)|- bot
        
        P[<check_1148@36:2>](<check_1148@36:0>:int,<check_1148@36:1>:int,<check_1148@36:2>:int),
        ((<check_1148@36:1> < <check_1148@36:0>) && (<<check_1148@36:3>@39:0> = <check_1148@36:1>))
        |- P[<<check_1148@36:3>@39:0>](<check_1148@36:0>:int,<check_1148@36:1>:int,
                                       <check_1148@36:2>:int,<<check_1148@36:3>@39:0>:int)
        
        P[<<array_max_1033@29:3>@32:0>](<check_1148@36:0>:int,0:int,<check_1148@36:2>:int), (
        <check_1148@36:1> = 0)
        |- P[<check_1148@36:2>](<check_1148@36:0>:int,<check_1148@36:1>:int,
                                <check_1148@36:2>:int)
        
        P[<array_max_1033@29:1>](<array_max_1033@29:0>:int,<array_max_1033@29:1>:int),
        ((<<array_max_1033@29:3>@32:0> = 0) && (<array_max_1033@29:1> >= <array_max_1033@29:0>))
        |- P[<<array_max_1033@29:3>@32:0>](<array_max_1033@29:0>:int,
                                           <array_max_1033@29:1>:int,
                                           <<array_max_1033@29:3>@32:0>:int)
        
         (<array_max_1033@29:1> = 0) |- P[<array_max_1033@29:1>](<array_max_1033@29:0>:int,
                                                                 <array_max_1033@29:1>:int)
      lower bounds:
        P[<array_max_1033@29:1>](<array_max_1033@29:0>:int,<array_max_1033@29:1>:int) = (<array_max_1033@29:1> = 0)
        P[<<array_max_1033@29:3>@32:0>](<array_max_1033@29:0>:int,<array_max_1033@29:1>:int,<<array_max_1033@29:3>@32:0>:int) =
        ((<<array_max_1033@29:3>@32:0> = 0) &&
         ((<array_max_1033@29:1> = 0) && (<array_max_1033@29:1> >= <array_max_1033@29:0>)))
        P[<check_1148@36:2>](<check_1148@36:0>:int,<check_1148@36:1>:int,<check_1148@36:2>:int) =
        ((<check_1148@36:1> = 0) && ((<check_1148@36:2> = 0) && (0 >= <check_1148@36:0>)))
        P[<<check_1148@36:3>@39:0>](<check_1148@36:0>:int,<check_1148@36:1>:int,<check_1148@36:2>:int,<<check_1148@36:3>@39:0>:int) =
        ((<check_1148@36:1> = 0) &&
         ((<check_1148@36:2> = 0) &&
          ((<check_1148@36:1> < <check_1148@36:0>) &&
           ((0 >= <check_1148@36:0>) && (<<check_1148@36:3>@39:0> = <check_1148@36:1>)))))
      upper bounds:
        P[<<check_1148@36:3>@39:0>](var108:int,var109:int,var110:int,var111:int) =
        ((var109 <> 0) || ((var110 <> 0) || (0 < var108)))
      begin GenHcSolver.classify_pids(22795)[4]
        output:
          [<<check_1148@36:3>@39:0>]
      end GenHcSolver.classify_pids(22795)[4] (0.000000 sec.)
      lb:((<check_1148@36:1> = 0) &&
          ((<check_1148@36:2> = 0) &&
           ((<check_1148@36:1> < <check_1148@36:0>) &&
            ((0 >= <check_1148@36:0>) && (<<check_1148@36:3>@39:0> = <check_1148@36:1>)))))
      nub:(not ((<check_1148@36:1> <> 0) || ((<check_1148@36:2> <> 0) || (0 < <check_1148@36:0>))))
      begin ApronInterface.convex_hull_interpolate(22798)[4]
        lb:((<check_1148@36:1> = 0) &&
            ((<check_1148@36:2> = 0) &&
             ((<check_1148@36:1> < <check_1148@36:0>) &&
              ((0 >= <check_1148@36:0>) && (<<check_1148@36:3>@39:0> = <check_1148@36:1>)))))
        nub:(not ((<check_1148@36:1> <> 0) || ((<check_1148@36:2> <> 0) || (0 < <check_1148@36:0>))))
        lb':((<check_1148@36:1> = 0) &&
             ((<check_1148@36:2> = 0) &&
              ((<check_1148@36:1> < <check_1148@36:0>) &&
               ((0 >= <check_1148@36:0>) && (<<check_1148@36:3>@39:0> = <check_1148@36:1>)))))
        nub':(not ((<check_1148@36:1> <> 0) || ((<check_1148@36:2> <> 0) || (0 < <check_1148@36:0>))))
        begin InterpProver.interpolate(22799)[5]
          begin InterpProver.interpolate_fresh(22800)[6]
            begin InterpProver.interpolate_log(22801)[7]
              input1: ((<check_1148@36:1> = 0) &&
                       ((<check_1148@36:2> = 0) &&
                        ((<check_1148@36:1> < <check_1148@36:0>) &&
                         ((0 >= <check_1148@36:0>) && (<<check_1148@36:3>@39:0> = <check_1148@36:1>)))))
              input2: (not ((<check_1148@36:1> <> 0) || ((<check_1148@36:2> <> 0) || (0 < <check_1148@36:0>))))
              begin InterpProver.interpolate_check(22802)[8]
                begin InterpProver.interpolate_simplify(22803)[9]
                  begin InterpProver.interpolate_quick(22937)[10]
                    
                  end InterpProver.interpolate_quick(22937)[10] (0.000000 sec.)
                  begin minimizing # of disjunctions(22944)[10]
                    input: false
                    output: false
                  end minimizing # of disjunctions(22944)[10] (0.000000 sec.)
                  
                end InterpProver.interpolate_simplify(22803)[9] (0.001000 sec.)
                
              end InterpProver.interpolate_check(22802)[8] (0.002000 sec.)
              output: false
            end InterpProver.interpolate_log(22801)[7] (0.002000 sec.)
            
          end InterpProver.interpolate_fresh(22800)[6] (0.002000 sec.)
          
        end InterpProver.interpolate(22799)[5] (0.002000 sec.)
        output:
          P[<<check_1148@36:3>@39:0>](<check_1148@36:0>:int,<check_1148@36:1>:int,<check_1148@36:2>:int,<<check_1148@36:3>@39:0>:int) =
          false
      end ApronInterface.convex_hull_interpolate(22798)[4] (0.002000 sec.)
      Horn clauses:
        P[<check_1148@36:2>](<check_1148@36:0>:int,<<check_1148@36:3>@39:0>:int,<check_1148@36:2>:int),
        (<<check_1148@36:3>@39:0> < <check_1148@36:0>) |- bot
        
        P[<<array_max_1033@29:3>@32:0>](<check_1148@36:0>:int,0:int,<check_1148@36:2>:int), (
        <check_1148@36:1> = 0)
        |- P[<check_1148@36:2>](<check_1148@36:0>:int,<check_1148@36:1>:int,
                                <check_1148@36:2>:int)
        
        P[<array_max_1033@29:1>](<array_max_1033@29:0>:int,<array_max_1033@29:1>:int),
        ((<<array_max_1033@29:3>@32:0> = 0) && (<array_max_1033@29:1> >= <array_max_1033@29:0>))
        |- P[<<array_max_1033@29:3>@32:0>](<array_max_1033@29:0>:int,
                                           <array_max_1033@29:1>:int,
                                           <<array_max_1033@29:3>@32:0>:int)
        
         (<array_max_1033@29:1> = 0) |- P[<array_max_1033@29:1>](<array_max_1033@29:0>:int,
                                                                 <array_max_1033@29:1>:int)
      lower bounds:
        P[<array_max_1033@29:1>](<array_max_1033@29:0>:int,<array_max_1033@29:1>:int) = (<array_max_1033@29:1> = 0)
        P[<<array_max_1033@29:3>@32:0>](<array_max_1033@29:0>:int,<array_max_1033@29:1>:int,<<array_max_1033@29:3>@32:0>:int) =
        ((<<array_max_1033@29:3>@32:0> = 0) &&
         ((<array_max_1033@29:1> = 0) && (<array_max_1033@29:1> >= <array_max_1033@29:0>)))
        P[<check_1148@36:2>](<check_1148@36:0>:int,<check_1148@36:1>:int,<check_1148@36:2>:int) =
        ((<check_1148@36:1> = 0) && ((<check_1148@36:2> = 0) && (0 >= <check_1148@36:0>)))
      upper bounds:
        P[<check_1148@36:2>](var112:int,var113:int,var114:int) = (var113 >= var112)
      begin GenHcSolver.classify_pids(24538)[4]
        output:
          [<check_1148@36:2>]
      end GenHcSolver.classify_pids(24538)[4] (0.000000 sec.)
      lb:((<check_1148@36:1> = 0) && ((<check_1148@36:2> = 0) && (0 >= <check_1148@36:0>)))
      nub:(not (<check_1148@36:1> >= <check_1148@36:0>))
      begin ApronInterface.convex_hull_interpolate(24541)[4]
        lb:((<check_1148@36:1> = 0) && ((<check_1148@36:2> = 0) && (0 >= <check_1148@36:0>)))
        nub:(not (<check_1148@36:1> >= <check_1148@36:0>))
        lb':((<check_1148@36:1> = 0) && ((<check_1148@36:2> = 0) && (0 >= <check_1148@36:0>)))
        nub':(not (<check_1148@36:1> >= <check_1148@36:0>))
        begin InterpProver.interpolate(24542)[5]
          begin InterpProver.interpolate_fresh(24543)[6]
            begin InterpProver.interpolate_log(24544)[7]
              input1: ((<check_1148@36:1> = 0) && ((<check_1148@36:2> = 0) && (0 >= <check_1148@36:0>)))
              input2: (not (<check_1148@36:1> >= <check_1148@36:0>))
              begin InterpProver.interpolate_check(24545)[8]
                begin InterpProver.interpolate_simplify(24546)[9]
                  begin InterpProver.interpolate_quick(24611)[10]
                    begin CsisatInterface.interpolate_csisat_wrap(24620)[11]
                      begin CsisatInterface.interpolate_csisat_post_process(24621)[12]
                        begin CsisatInterface.interpolate_csisat_log(24622)[13]
                          input1: (0 = v_sep_check_1148_sep_36_sep_1 & v_sep_check_1148_sep_36_sep_0 <= 0)
                          input2: (1 + v_sep_check_1148_sep_36_sep_1) <= v_sep_check_1148_sep_36_sep_0
                          begin CsisatInterface.interpolate_csisat_raw(24623)[14]
                            
                          end CsisatInterface.interpolate_csisat_raw(24623)[14] (0.001000 sec.)
                          output: (-2*v_sep_check_1148_sep_36_sep_1 + 2*v_sep_check_1148_sep_36_sep_0) <= 0
                          
                        end CsisatInterface.interpolate_csisat_log(24622)[13] (0.001000 sec.)
                        after simplification: (-2*v_sep_check_1148_sep_36_sep_1 + 2*v_sep_check_1148_sep_36_sep_0) <= 0
                        after dnf conversion: (((-2*v_sep_check_1148_sep_36_sep_1 + 2*v_sep_check_1148_sep_36_sep_0) <= 0))
                        
                      end CsisatInterface.interpolate_csisat_post_process(24621)[12] (0.001000 sec.)
                      
                    end CsisatInterface.interpolate_csisat_wrap(24620)[11] (0.001000 sec.)
                    
                  end InterpProver.interpolate_quick(24611)[10] (0.001000 sec.)
                  
                end InterpProver.interpolate_simplify(24546)[9] (0.001000 sec.)
                
              end InterpProver.interpolate_check(24545)[8] (0.001000 sec.)
              output: (<check_1148@36:0> <= <check_1148@36:1>)
            end InterpProver.interpolate_log(24544)[7] (0.001000 sec.)
            
          end InterpProver.interpolate_fresh(24543)[6] (0.001000 sec.)
          
        end InterpProver.interpolate(24542)[5] (0.001000 sec.)
        output:
          P[<check_1148@36:2>](<check_1148@36:0>:int,<check_1148@36:1>:int,<check_1148@36:2>:int) =
          (<check_1148@36:0> <= <check_1148@36:1>)
      end ApronInterface.convex_hull_interpolate(24541)[4] (0.002000 sec.)
      Horn clauses:
        P[<<array_max_1033@29:3>@32:0>](<check_1148@36:0>:int,0:int,<check_1148@36:2>:int), (
        <check_1148@36:0> > 0) |- bot
        
        P[<array_max_1033@29:1>](<array_max_1033@29:0>:int,<array_max_1033@29:1>:int),
        ((<<array_max_1033@29:3>@32:0> = 0) && (<array_max_1033@29:1> >= <array_max_1033@29:0>))
        |- P[<<array_max_1033@29:3>@32:0>](<array_max_1033@29:0>:int,
                                           <array_max_1033@29:1>:int,
                                           <<array_max_1033@29:3>@32:0>:int)
        
         (<array_max_1033@29:1> = 0) |- P[<array_max_1033@29:1>](<array_max_1033@29:0>:int,
                                                                 <array_max_1033@29:1>:int)
      lower bounds:
        P[<array_max_1033@29:1>](<array_max_1033@29:0>:int,<array_max_1033@29:1>:int) = (<array_max_1033@29:1> = 0)
        P[<<array_max_1033@29:3>@32:0>](<array_max_1033@29:0>:int,<array_max_1033@29:1>:int,<<array_max_1033@29:3>@32:0>:int) =
        ((<<array_max_1033@29:3>@32:0> = 0) &&
         ((<array_max_1033@29:1> = 0) && (<array_max_1033@29:1> >= <array_max_1033@29:0>)))
      upper bounds:
        P[<<array_max_1033@29:3>@32:0>](var115:int,var116:int,var117:int) = ((var116 <> 0) || (var115 <= 0))
      begin GenHcSolver.classify_pids(25724)[4]
        output:
          [<<array_max_1033@29:3>@32:0>]
      end GenHcSolver.classify_pids(25724)[4] (0.000000 sec.)
      lb:((<<array_max_1033@29:3>@32:0> = 0) &&
          ((<array_max_1033@29:1> = 0) && (<array_max_1033@29:1> >= <array_max_1033@29:0>)))
      nub:(not ((<array_max_1033@29:1> <> 0) || (<array_max_1033@29:0> <= 0)))
      begin ApronInterface.convex_hull_interpolate(25727)[4]
        lb:((<<array_max_1033@29:3>@32:0> = 0) &&
            ((<array_max_1033@29:1> = 0) && (<array_max_1033@29:1> >= <array_max_1033@29:0>)))
        nub:(not ((<array_max_1033@29:1> <> 0) || (<array_max_1033@29:0> <= 0)))
        lb':((<<array_max_1033@29:3>@32:0> = 0) &&
             ((<array_max_1033@29:1> = 0) && (<array_max_1033@29:1> >= <array_max_1033@29:0>)))
        nub':(not ((<array_max_1033@29:1> <> 0) || (<array_max_1033@29:0> <= 0)))
        begin InterpProver.interpolate(25728)[5]
          begin InterpProver.interpolate_fresh(25729)[6]
            begin InterpProver.interpolate_log(25730)[7]
              input1: ((<<array_max_1033@29:3>@32:0> = 0) &&
                       ((<array_max_1033@29:1> = 0) && (<array_max_1033@29:1> >= <array_max_1033@29:0>)))
              input2: (not ((<array_max_1033@29:1> <> 0) || (<array_max_1033@29:0> <= 0)))
              begin InterpProver.interpolate_check(25731)[8]
                begin InterpProver.interpolate_simplify(25732)[9]
                  begin InterpProver.interpolate_quick(25817)[10]
                    begin CsisatInterface.interpolate_csisat_wrap(25826)[11]
                      begin CsisatInterface.interpolate_csisat_post_process(25827)[12]
                        begin CsisatInterface.interpolate_csisat_log(25828)[13]
                          input1: (0 = v_sep_array_max_1033_sep_29_sep_1 & v_sep_array_max_1033_sep_29_sep_0 <= v_sep_array_max_1033_sep_29_sep_1)
                          input2: (0 = v_sep_array_max_1033_sep_29_sep_1 & 1 <= v_sep_array_max_1033_sep_29_sep_0)
                          begin CsisatInterface.interpolate_csisat_raw(25829)[14]
                            
                          end CsisatInterface.interpolate_csisat_raw(25829)[14] (0.000000 sec.)
                          output: 2*v_sep_array_max_1033_sep_29_sep_0 <= 0
                          
                        end CsisatInterface.interpolate_csisat_log(25828)[13] (0.000000 sec.)
                        after simplification: 2*v_sep_array_max_1033_sep_29_sep_0 <= 0
                        after dnf conversion: ((2*v_sep_array_max_1033_sep_29_sep_0 <= 0))
                        
                      end CsisatInterface.interpolate_csisat_post_process(25827)[12] (0.000000 sec.)
                      
                    end CsisatInterface.interpolate_csisat_wrap(25826)[11] (0.000000 sec.)
                    
                  end InterpProver.interpolate_quick(25817)[10] (0.000000 sec.)
                  
                end InterpProver.interpolate_simplify(25732)[9] (0.001000 sec.)
                
              end InterpProver.interpolate_check(25731)[8] (0.002000 sec.)
              output: (<array_max_1033@29:0> <= 0)
            end InterpProver.interpolate_log(25730)[7] (0.002000 sec.)
            
          end InterpProver.interpolate_fresh(25729)[6] (0.002000 sec.)
          
        end InterpProver.interpolate(25728)[5] (0.002000 sec.)
        output:
          P[<<array_max_1033@29:3>@32:0>](<array_max_1033@29:0>:int,<array_max_1033@29:1>:int,<<array_max_1033@29:3>@32:0>:int) =
          (<array_max_1033@29:0> <= 0)
      end ApronInterface.convex_hull_interpolate(25727)[4] (0.002000 sec.)
      Horn clauses:
        P[<array_max_1033@29:1>](<array_max_1033@29:0>:int,<array_max_1033@29:1>:int),
        ((<array_max_1033@29:0> > 0) && (<array_max_1033@29:1> >= <array_max_1033@29:0>)) |- bot
        
         (<array_max_1033@29:1> = 0) |- P[<array_max_1033@29:1>](<array_max_1033@29:0>:int,
                                                                 <array_max_1033@29:1>:int)
      lower bounds:
        P[<array_max_1033@29:1>](<array_max_1033@29:0>:int,<array_max_1033@29:1>:int) = (<array_max_1033@29:1> = 0)
      upper bounds:
        P[<array_max_1033@29:1>](var118:int,var119:int) = ((var118 <= 0) || (var119 < var118))
      begin GenHcSolver.classify_pids(26711)[4]
        output:
          [<array_max_1033@29:1>]
      end GenHcSolver.classify_pids(26711)[4] (0.000000 sec.)
      lb:(<array_max_1033@29:1> = 0)
      nub:(not ((<array_max_1033@29:0> <= 0) || (<array_max_1033@29:1> < <array_max_1033@29:0>)))
      begin ApronInterface.convex_hull_interpolate(26714)[4]
        lb:(<array_max_1033@29:1> = 0)
        nub:(not ((<array_max_1033@29:0> <= 0) || (<array_max_1033@29:1> < <array_max_1033@29:0>)))
        lb':(<array_max_1033@29:1> = 0)
        nub':(not ((<array_max_1033@29:0> <= 0) || (<array_max_1033@29:1> < <array_max_1033@29:0>)))
        begin InterpProver.interpolate(26715)[5]
          begin InterpProver.interpolate_fresh(26716)[6]
            begin InterpProver.interpolate_log(26717)[7]
              input1: (<array_max_1033@29:1> = 0)
              input2: (not ((<array_max_1033@29:0> <= 0) || (<array_max_1033@29:1> < <array_max_1033@29:0>)))
              begin InterpProver.interpolate_check(26718)[8]
                begin InterpProver.interpolate_simplify(26719)[9]
                  begin InterpProver.interpolate_quick(26758)[10]
                    begin CsisatInterface.interpolate_csisat_wrap(26767)[11]
                      begin CsisatInterface.interpolate_csisat_post_process(26768)[12]
                        begin CsisatInterface.interpolate_csisat_log(26769)[13]
                          input1: 0 = v_sep_array_max_1033_sep_29_sep_1
                          input2: (1 <= v_sep_array_max_1033_sep_29_sep_0 & v_sep_array_max_1033_sep_29_sep_0 <= v_sep_array_max_1033_sep_29_sep_1)
                          begin CsisatInterface.interpolate_csisat_raw(26770)[14]
                            
                          end CsisatInterface.interpolate_csisat_raw(26770)[14] (0.000000 sec.)
                          output: 2*v_sep_array_max_1033_sep_29_sep_1 <= 0
                          
                        end CsisatInterface.interpolate_csisat_log(26769)[13] (0.000000 sec.)
                        after simplification: 2*v_sep_array_max_1033_sep_29_sep_1 <= 0
                        after dnf conversion: ((2*v_sep_array_max_1033_sep_29_sep_1 <= 0))
                        
                      end CsisatInterface.interpolate_csisat_post_process(26768)[12] (0.000000 sec.)
                      
                    end CsisatInterface.interpolate_csisat_wrap(26767)[11] (0.000000 sec.)
                    
                  end InterpProver.interpolate_quick(26758)[10] (0.001000 sec.)
                  
                end InterpProver.interpolate_simplify(26719)[9] (0.001000 sec.)
                
              end InterpProver.interpolate_check(26718)[8] (0.001000 sec.)
              output: (<array_max_1033@29:1> <= 0)
            end InterpProver.interpolate_log(26717)[7] (0.001000 sec.)
            
          end InterpProver.interpolate_fresh(26716)[6] (0.001000 sec.)
          
        end InterpProver.interpolate(26715)[5] (0.001000 sec.)
        output:
          P[<array_max_1033@29:1>](<array_max_1033@29:0>:int,<array_max_1033@29:1>:int) = (<array_max_1033@29:1> <= 0)
      end ApronInterface.convex_hull_interpolate(26714)[4] (0.001000 sec.)
      begin HcSolver.check_validity(26929)[4]
        input:
          P[<fail_1486@47:0>](<fail_1486@47:0>:bool)|- bot
          
          P[<make_array_1030@41:1>](<k_make_array_u_1182@44:1>:int,<k_make_array_u_1182@44:0>:int),
          ((0 > <k_make_array_u_1182@44:0>) && <fail_1486@47:0>) |- P[<fail_1486@47:0>](
          <fail_1486@47:0>:bool)
          
          P[<<array_max_1033@29:3>@32:0>](<make_array_1030@41:0>:int,0:int,<check_1148@36:2>:int),
          P[<<check_1148@36:3>@39:0>](<make_array_1030@41:0>:int,0:int,<check_1148@36:2>:int,<make_array_1030@41:1>:int)|- P[<make_array_1030@41:1>](
          <make_array_1030@41:0>:int,<make_array_1030@41:1>:int)
          
          P[<check_1148@36:2>](<check_1148@36:0>:int,<check_1148@36:1>:int,<check_1148@36:2>:int),
          ((<check_1148@36:1> < <check_1148@36:0>) && (<<check_1148@36:3>@39:0> = <check_1148@36:1>))
          |- P[<<check_1148@36:3>@39:0>](<check_1148@36:0>:int,<check_1148@36:1>:int,
                                         <check_1148@36:2>:int,<<check_1148@36:3>@39:0>:int)
          
          P[<<array_max_1033@29:3>@32:0>](<check_1148@36:0>:int,0:int,<check_1148@36:2>:int), (
          <check_1148@36:1> = 0)
          |- P[<check_1148@36:2>](<check_1148@36:0>:int,<check_1148@36:1>:int,
                                  <check_1148@36:2>:int)
          
          P[<array_max_1033@29:1>](<array_max_1033@29:0>:int,<array_max_1033@29:1>:int),
          ((<<array_max_1033@29:3>@32:0> = 0) && (<array_max_1033@29:1> >= <array_max_1033@29:0>))
          |- P[<<array_max_1033@29:3>@32:0>](<array_max_1033@29:0>:int,
                                             <array_max_1033@29:1>:int,
                                             <<array_max_1033@29:3>@32:0>:int)
          
           (<array_max_1033@29:1> = 0) |- P[<array_max_1033@29:1>](<array_max_1033@29:0>:int,
                                                                   <array_max_1033@29:1>:int)
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        
      end HcSolver.check_validity(26929)[4] (0.003999 sec.)
      solution:
        P[<fail_1486@47:0>](<fail_1486@47:0>:bool) = false
        P[<make_array_1030@41:1>](<make_array_1030@41:0>:int,<make_array_1030@41:1>:int) = false
        P[<<check_1148@36:3>@39:0>](<check_1148@36:0>:int,<check_1148@36:1>:int,<check_1148@36:2>:int,<<check_1148@36:3>@39:0>:int) =
        false
        P[<check_1148@36:2>](<check_1148@36:0>:int,<check_1148@36:1>:int,<check_1148@36:2>:int) =
        (<check_1148@36:0> <= <check_1148@36:1>)
        P[<<array_max_1033@29:3>@32:0>](<array_max_1033@29:0>:int,<array_max_1033@29:1>:int,<<array_max_1033@29:3>@32:0>:int) =
        (<array_max_1033@29:0> <= 0)
        P[<array_max_1033@29:1>](<array_max_1033@29:0>:int,<array_max_1033@29:1>:int) = (<array_max_1033@29:1> <= 0)
    end GenHcSolver.solve(15195)[3] (0.075988 sec.)
    begin GenHcSolver.solve(27532)[3]
      Horn clauses:
        P[<fail_1486@47:0>](<fail_1486@47:0>:bool)|- bot
        
        P[<make_array_1030@41:1>](<k_make_array_u_1182@44:1>:int,<k_make_array_u_1182@44:0>:int),
        ((0 > <k_make_array_u_1182@44:0>) && <fail_1486@47:0>) |- P[<fail_1486@47:0>](
        <fail_1486@47:0>:bool)
        
        P[<<array_max_1033@29:3>@32:0>](<make_array_1030@41:0>:int,0:int,<check_1148@36:2>:int),
        P[<<check_1148@36:3>@39:0>](<make_array_1030@41:0>:int,0:int,<check_1148@36:2>:int,<make_array_1030@41:1>:int)|- P[<make_array_1030@41:1>](
        <make_array_1030@41:0>:int,<make_array_1030@41:1>:int)
        
        P[<check_1148@36:2>](<check_1148@36:0>:int,<check_1148@36:1>:int,<check_1148@36:2>:int),
        ((<check_1148@36:1> < <check_1148@36:0>) && (<<check_1148@36:3>@39:0> = <check_1148@36:1>))
        |- P[<<check_1148@36:3>@39:0>](<check_1148@36:0>:int,<check_1148@36:1>:int,
                                       <check_1148@36:2>:int,<<check_1148@36:3>@39:0>:int)
        
        P[<<array_max_1033@29:3>@32:0>](<check_1148@36:0>:int,0:int,<check_1148@36:2>:int), (
        <check_1148@36:1> = 0)
        |- P[<check_1148@36:2>](<check_1148@36:0>:int,<check_1148@36:1>:int,
                                <check_1148@36:2>:int)
        
        P[<array_max_1033@29:1>](<array_max_1033@29:0>:int,<array_max_1033@29:1>:int),
        ((<<array_max_1033@29:3>@32:0> = 0) && (<array_max_1033@29:1> >= <array_max_1033@29:0>))
        |- P[<<array_max_1033@29:3>@32:0>](<array_max_1033@29:0>:int,
                                           <array_max_1033@29:1>:int,
                                           <<array_max_1033@29:3>@32:0>:int)
        
         (<array_max_1033@29:1> = 0) |- P[<array_max_1033@29:1>](<array_max_1033@29:0>:int,
                                                                 <array_max_1033@29:1>:int)
      lower bounds:
        P[<array_max_1033@29:1>](<array_max_1033@29:0>:int,<array_max_1033@29:1>:int) = (<array_max_1033@29:1> = 0)
        P[<<array_max_1033@29:3>@32:0>](<array_max_1033@29:0>:int,<array_max_1033@29:1>:int,<<array_max_1033@29:3>@32:0>:int) =
        ((<<array_max_1033@29:3>@32:0> = 0) &&
         ((<array_max_1033@29:1> = 0) && (<array_max_1033@29:1> >= <array_max_1033@29:0>)))
        P[<check_1148@36:2>](<check_1148@36:0>:int,<check_1148@36:1>:int,<check_1148@36:2>:int) =
        ((<check_1148@36:1> = 0) && ((<check_1148@36:2> = 0) && (0 >= <check_1148@36:0>)))
        P[<<check_1148@36:3>@39:0>](<check_1148@36:0>:int,<check_1148@36:1>:int,<check_1148@36:2>:int,<<check_1148@36:3>@39:0>:int) =
        ((<check_1148@36:1> = 0) &&
         ((<check_1148@36:2> = 0) &&
          ((<check_1148@36:1> < <check_1148@36:0>) &&
           ((0 >= <check_1148@36:0>) && (<<check_1148@36:3>@39:0> = <check_1148@36:1>)))))
        P[<make_array_1030@41:1>](<make_array_1030@41:0>:int,<make_array_1030@41:1>:int) = false
        P[<fail_1486@47:0>](<fail_1486@47:0>:bool) = false
      upper bounds:
        P[<fail_1486@47:0>](var121:bool) = true
      begin GenHcSolver.classify_pids(29851)[4]
        output:
          [<fail_1486@47:0>]
      end GenHcSolver.classify_pids(29851)[4] (0.000000 sec.)
      lb:false
      nub:false
      begin ApronInterface.convex_hull_interpolate(29854)[4]
        lb:false
        nub:false
        begin ExtFormula.Formula.case_analysis_boolean(29857)[5]
          ts: false
          
        end ExtFormula.Formula.case_analysis_boolean(29857)[5] (0.000000 sec.)
        begin ExtFormula.Formula.case_analysis_boolean(29862)[5]
          ts: false
          
        end ExtFormula.Formula.case_analysis_boolean(29862)[5] (0.000000 sec.)
        lb':(-1 >= 0)
        nub':(-1 >= 0)
        begin InterpProver.interpolate(29865)[5]
          begin InterpProver.interpolate_fresh(29866)[6]
            begin InterpProver.interpolate_log(29867)[7]
              input1: (-1 >= 0)
              input2: (-1 >= 0)
              begin InterpProver.interpolate_check(29868)[8]
                begin InterpProver.interpolate_simplify(29869)[9]
                  begin InterpProver.interpolate_quick(29884)[10]
                    
                  end InterpProver.interpolate_quick(29884)[10] (0.000000 sec.)
                  begin minimizing # of disjunctions(29888)[10]
                    input: false
                    output: false
                  end minimizing # of disjunctions(29888)[10] (0.000000 sec.)
                  
                end InterpProver.interpolate_simplify(29869)[9] (0.000000 sec.)
                
              end InterpProver.interpolate_check(29868)[8] (0.001000 sec.)
              output: false
            end InterpProver.interpolate_log(29867)[7] (0.001000 sec.)
            
          end InterpProver.interpolate_fresh(29866)[6] (0.001000 sec.)
          
        end InterpProver.interpolate(29865)[5] (0.001000 sec.)
        output:
          P[<fail_1486@47:0>](<fail_1486@47:0>:bool) = false
      end ApronInterface.convex_hull_interpolate(29854)[4] (0.001000 sec.)
      Horn clauses:
        P[<make_array_1030@41:1>](<k_make_array_u_1182@44:1>:int,<k_make_array_u_1182@44:0>:int),
        (0 > <k_make_array_u_1182@44:0>) |- bot
        
        P[<<array_max_1033@29:3>@32:0>](<make_array_1030@41:0>:int,0:int,<check_1148@36:2>:int),
        P[<<check_1148@36:3>@39:0>](<make_array_1030@41:0>:int,0:int,<check_1148@36:2>:int,<make_array_1030@41:1>:int)|- P[<make_array_1030@41:1>](
        <make_array_1030@41:0>:int,<make_array_1030@41:1>:int)
        
        P[<check_1148@36:2>](<check_1148@36:0>:int,<check_1148@36:1>:int,<check_1148@36:2>:int),
        ((<check_1148@36:1> < <check_1148@36:0>) && (<<check_1148@36:3>@39:0> = <check_1148@36:1>))
        |- P[<<check_1148@36:3>@39:0>](<check_1148@36:0>:int,<check_1148@36:1>:int,
                                       <check_1148@36:2>:int,<<check_1148@36:3>@39:0>:int)
        
        P[<<array_max_1033@29:3>@32:0>](<check_1148@36:0>:int,0:int,<check_1148@36:2>:int), (
        <check_1148@36:1> = 0)
        |- P[<check_1148@36:2>](<check_1148@36:0>:int,<check_1148@36:1>:int,
                                <check_1148@36:2>:int)
        
        P[<array_max_1033@29:1>](<array_max_1033@29:0>:int,<array_max_1033@29:1>:int),
        ((<<array_max_1033@29:3>@32:0> = 0) && (<array_max_1033@29:1> >= <array_max_1033@29:0>))
        |- P[<<array_max_1033@29:3>@32:0>](<array_max_1033@29:0>:int,
                                           <array_max_1033@29:1>:int,
                                           <<array_max_1033@29:3>@32:0>:int)
        
         (<array_max_1033@29:1> = 0) |- P[<array_max_1033@29:1>](<array_max_1033@29:0>:int,
                                                                 <array_max_1033@29:1>:int)
      lower bounds:
        P[<array_max_1033@29:1>](<array_max_1033@29:0>:int,<array_max_1033@29:1>:int) = (<array_max_1033@29:1> = 0)
        P[<<array_max_1033@29:3>@32:0>](<array_max_1033@29:0>:int,<array_max_1033@29:1>:int,<<array_max_1033@29:3>@32:0>:int) =
        ((<<array_max_1033@29:3>@32:0> = 0) &&
         ((<array_max_1033@29:1> = 0) && (<array_max_1033@29:1> >= <array_max_1033@29:0>)))
        P[<check_1148@36:2>](<check_1148@36:0>:int,<check_1148@36:1>:int,<check_1148@36:2>:int) =
        ((<check_1148@36:1> = 0) && ((<check_1148@36:2> = 0) && (0 >= <check_1148@36:0>)))
        P[<<check_1148@36:3>@39:0>](<check_1148@36:0>:int,<check_1148@36:1>:int,<check_1148@36:2>:int,<<check_1148@36:3>@39:0>:int) =
        ((<check_1148@36:1> = 0) &&
         ((<check_1148@36:2> = 0) &&
          ((<check_1148@36:1> < <check_1148@36:0>) &&
           ((0 >= <check_1148@36:0>) && (<<check_1148@36:3>@39:0> = <check_1148@36:1>)))))
        P[<make_array_1030@41:1>](<make_array_1030@41:0>:int,<make_array_1030@41:1>:int) = false
      upper bounds:
        P[<make_array_1030@41:1>](var124:int,var125:int) = true
      begin GenHcSolver.classify_pids(32442)[4]
        output:
          [<make_array_1030@41:1>]
      end GenHcSolver.classify_pids(32442)[4] (0.000000 sec.)
      lb:false
      nub:false
      begin ApronInterface.convex_hull_interpolate(32445)[4]
        lb:false
        nub:false
        begin ExtFormula.Formula.case_analysis_boolean(32448)[5]
          ts: false
          
        end ExtFormula.Formula.case_analysis_boolean(32448)[5] (0.000000 sec.)
        begin ExtFormula.Formula.case_analysis_boolean(32453)[5]
          ts: false
          
        end ExtFormula.Formula.case_analysis_boolean(32453)[5] (0.000000 sec.)
        lb':(-1 >= 0)
        nub':(-1 >= 0)
        begin InterpProver.interpolate(32456)[5]
          begin InterpProver.interpolate_fresh(32457)[6]
            begin InterpProver.interpolate_log(32458)[7]
              input1: (-1 >= 0)
              input2: (-1 >= 0)
              begin InterpProver.interpolate_check(32459)[8]
                begin InterpProver.interpolate_simplify(32460)[9]
                  begin InterpProver.interpolate_quick(32475)[10]
                    
                  end InterpProver.interpolate_quick(32475)[10] (0.000000 sec.)
                  begin minimizing # of disjunctions(32479)[10]
                    input: false
                    output: false
                  end minimizing # of disjunctions(32479)[10] (0.000000 sec.)
                  
                end InterpProver.interpolate_simplify(32460)[9] (0.000000 sec.)
                
              end InterpProver.interpolate_check(32459)[8] (0.000000 sec.)
              output: false
            end InterpProver.interpolate_log(32458)[7] (0.000000 sec.)
            
          end InterpProver.interpolate_fresh(32457)[6] (0.000000 sec.)
          
        end InterpProver.interpolate(32456)[5] (0.000000 sec.)
        output:
          P[<make_array_1030@41:1>](<make_array_1030@41:0>:int,<make_array_1030@41:1>:int) = false
      end ApronInterface.convex_hull_interpolate(32445)[4] (0.001000 sec.)
      Horn clauses:
        P[<<array_max_1033@29:3>@32:0>](<make_array_1030@41:0>:int,0:int,<check_1148@36:2>:int),
        P[<<check_1148@36:3>@39:0>](<make_array_1030@41:0>:int,0:int,<check_1148@36:2>:int,<make_array_1030@41:1>:int)|- bot
        
        P[<check_1148@36:2>](<check_1148@36:0>:int,<check_1148@36:1>:int,<check_1148@36:2>:int),
        ((<check_1148@36:1> < <check_1148@36:0>) && (<<check_1148@36:3>@39:0> = <check_1148@36:1>))
        |- P[<<check_1148@36:3>@39:0>](<check_1148@36:0>:int,<check_1148@36:1>:int,
                                       <check_1148@36:2>:int,<<check_1148@36:3>@39:0>:int)
        
        P[<<array_max_1033@29:3>@32:0>](<check_1148@36:0>:int,0:int,<check_1148@36:2>:int), (
        <check_1148@36:1> = 0)
        |- P[<check_1148@36:2>](<check_1148@36:0>:int,<check_1148@36:1>:int,
                                <check_1148@36:2>:int)
        
        P[<array_max_1033@29:1>](<array_max_1033@29:0>:int,<array_max_1033@29:1>:int),
        ((<<array_max_1033@29:3>@32:0> = 0) && (<array_max_1033@29:1> >= <array_max_1033@29:0>))
        |- P[<<array_max_1033@29:3>@32:0>](<array_max_1033@29:0>:int,
                                           <array_max_1033@29:1>:int,
                                           <<array_max_1033@29:3>@32:0>:int)
        
         (<array_max_1033@29:1> = 0) |- P[<array_max_1033@29:1>](<array_max_1033@29:0>:int,
                                                                 <array_max_1033@29:1>:int)
      lower bounds:
        P[<array_max_1033@29:1>](<array_max_1033@29:0>:int,<array_max_1033@29:1>:int) = (<array_max_1033@29:1> = 0)
        P[<<array_max_1033@29:3>@32:0>](<array_max_1033@29:0>:int,<array_max_1033@29:1>:int,<<array_max_1033@29:3>@32:0>:int) =
        ((<<array_max_1033@29:3>@32:0> = 0) &&
         ((<array_max_1033@29:1> = 0) && (<array_max_1033@29:1> >= <array_max_1033@29:0>)))
        P[<check_1148@36:2>](<check_1148@36:0>:int,<check_1148@36:1>:int,<check_1148@36:2>:int) =
        ((<check_1148@36:1> = 0) && ((<check_1148@36:2> = 0) && (0 >= <check_1148@36:0>)))
        P[<<check_1148@36:3>@39:0>](<check_1148@36:0>:int,<check_1148@36:1>:int,<check_1148@36:2>:int,<<check_1148@36:3>@39:0>:int) =
        ((<check_1148@36:1> = 0) &&
         ((<check_1148@36:2> = 0) &&
          ((<check_1148@36:1> < <check_1148@36:0>) &&
           ((0 >= <check_1148@36:0>) && (<<check_1148@36:3>@39:0> = <check_1148@36:1>)))))
      upper bounds:
        P[<<check_1148@36:3>@39:0>](var126:int,var127:int,var128:int,var129:int) =
        ((var127 <> 0) || ((var128 <> 0) || (0 < var126)))
      begin GenHcSolver.classify_pids(35170)[4]
        output:
          [<<check_1148@36:3>@39:0>]
      end GenHcSolver.classify_pids(35170)[4] (0.000000 sec.)
      lb:((<check_1148@36:1> = 0) &&
          ((<check_1148@36:2> = 0) &&
           ((<check_1148@36:1> < <check_1148@36:0>) &&
            ((0 >= <check_1148@36:0>) && (<<check_1148@36:3>@39:0> = <check_1148@36:1>)))))
      nub:(not ((<check_1148@36:1> <> 0) || ((<check_1148@36:2> <> 0) || (0 < <check_1148@36:0>))))
      begin ApronInterface.convex_hull_interpolate(35173)[4]
        lb:((<check_1148@36:1> = 0) &&
            ((<check_1148@36:2> = 0) &&
             ((<check_1148@36:1> < <check_1148@36:0>) &&
              ((0 >= <check_1148@36:0>) && (<<check_1148@36:3>@39:0> = <check_1148@36:1>)))))
        nub:(not ((<check_1148@36:1> <> 0) || ((<check_1148@36:2> <> 0) || (0 < <check_1148@36:0>))))
        begin ExtFormula.Formula.case_analysis_boolean(35235)[5]
          ts: ((<check_1148@36:1> = 0) &&
               ((<check_1148@36:2> = 0) &&
                ((<check_1148@36:1> < <check_1148@36:0>) &&
                 ((0 >= <check_1148@36:0>) && (<<check_1148@36:3>@39:0> = <check_1148@36:1>)))))
          
        end ExtFormula.Formula.case_analysis_boolean(35235)[5] (0.000000 sec.)
        begin ExtFormula.Formula.case_analysis_boolean(35261)[5]
          ts: ((<check_1148@36:1> = 0) && ((<check_1148@36:2> = 0) && (0 >= <check_1148@36:0>)))
          
        end ExtFormula.Formula.case_analysis_boolean(35261)[5] (0.000000 sec.)
        lb':(-1 >= 0)
        nub':((<check_1148@36:2> = 0) && ((<check_1148@36:1> = 0) && ((-1 * <check_1148@36:0>) >= 0)))
        begin InterpProver.interpolate(35267)[5]
          begin InterpProver.interpolate_fresh(35268)[6]
            begin InterpProver.interpolate_log(35269)[7]
              input1: (-1 >= 0)
              input2: ((<check_1148@36:2> = 0) && ((<check_1148@36:1> = 0) && ((-1 * <check_1148@36:0>) >= 0)))
              begin InterpProver.interpolate_check(35270)[8]
                begin InterpProver.interpolate_simplify(35271)[9]
                  begin InterpProver.interpolate_quick(35318)[10]
                    
                  end InterpProver.interpolate_quick(35318)[10] (0.000000 sec.)
                  begin minimizing # of disjunctions(35322)[10]
                    input: false
                    output: false
                  end minimizing # of disjunctions(35322)[10] (0.000000 sec.)
                  
                end InterpProver.interpolate_simplify(35271)[9] (0.000000 sec.)
                
              end InterpProver.interpolate_check(35270)[8] (0.001000 sec.)
              output: false
            end InterpProver.interpolate_log(35269)[7] (0.001000 sec.)
            
          end InterpProver.interpolate_fresh(35268)[6] (0.001000 sec.)
          
        end InterpProver.interpolate(35267)[5] (0.001000 sec.)
        output:
          P[<<check_1148@36:3>@39:0>](<check_1148@36:0>:int,<check_1148@36:1>:int,<check_1148@36:2>:int,<<check_1148@36:3>@39:0>:int) =
          false
      end ApronInterface.convex_hull_interpolate(35173)[4] (0.002999 sec.)
      Horn clauses:
        P[<check_1148@36:2>](<check_1148@36:0>:int,<<check_1148@36:3>@39:0>:int,<check_1148@36:2>:int),
        (<<check_1148@36:3>@39:0> < <check_1148@36:0>) |- bot
        
        P[<<array_max_1033@29:3>@32:0>](<check_1148@36:0>:int,0:int,<check_1148@36:2>:int), (
        <check_1148@36:1> = 0)
        |- P[<check_1148@36:2>](<check_1148@36:0>:int,<check_1148@36:1>:int,
                                <check_1148@36:2>:int)
        
        P[<array_max_1033@29:1>](<array_max_1033@29:0>:int,<array_max_1033@29:1>:int),
        ((<<array_max_1033@29:3>@32:0> = 0) && (<array_max_1033@29:1> >= <array_max_1033@29:0>))
        |- P[<<array_max_1033@29:3>@32:0>](<array_max_1033@29:0>:int,
                                           <array_max_1033@29:1>:int,
                                           <<array_max_1033@29:3>@32:0>:int)
        
         (<array_max_1033@29:1> = 0) |- P[<array_max_1033@29:1>](<array_max_1033@29:0>:int,
                                                                 <array_max_1033@29:1>:int)
      lower bounds:
        P[<array_max_1033@29:1>](<array_max_1033@29:0>:int,<array_max_1033@29:1>:int) = (<array_max_1033@29:1> = 0)
        P[<<array_max_1033@29:3>@32:0>](<array_max_1033@29:0>:int,<array_max_1033@29:1>:int,<<array_max_1033@29:3>@32:0>:int) =
        ((<<array_max_1033@29:3>@32:0> = 0) &&
         ((<array_max_1033@29:1> = 0) && (<array_max_1033@29:1> >= <array_max_1033@29:0>)))
        P[<check_1148@36:2>](<check_1148@36:0>:int,<check_1148@36:1>:int,<check_1148@36:2>:int) =
        ((<check_1148@36:1> = 0) && ((<check_1148@36:2> = 0) && (0 >= <check_1148@36:0>)))
      upper bounds:
        P[<check_1148@36:2>](var130:int,var131:int,var132:int) = (var131 >= var130)
      begin GenHcSolver.classify_pids(36916)[4]
        output:
          [<check_1148@36:2>]
      end GenHcSolver.classify_pids(36916)[4] (0.000000 sec.)
      lb:((<check_1148@36:1> = 0) && ((<check_1148@36:2> = 0) && (0 >= <check_1148@36:0>)))
      nub:(not (<check_1148@36:1> >= <check_1148@36:0>))
      begin ApronInterface.convex_hull_interpolate(36919)[4]
        lb:((<check_1148@36:1> = 0) && ((<check_1148@36:2> = 0) && (0 >= <check_1148@36:0>)))
        nub:(not (<check_1148@36:1> >= <check_1148@36:0>))
        begin ExtFormula.Formula.case_analysis_boolean(36936)[5]
          ts: ((<check_1148@36:1> = 0) && ((<check_1148@36:2> = 0) && (0 >= <check_1148@36:0>)))
          
        end ExtFormula.Formula.case_analysis_boolean(36936)[5] (0.000000 sec.)
        begin ExtFormula.Formula.case_analysis_boolean(36946)[5]
          ts: (<check_1148@36:1> < <check_1148@36:0>)
          
        end ExtFormula.Formula.case_analysis_boolean(36946)[5] (0.000000 sec.)
        lb':((<check_1148@36:2> = 0) && ((<check_1148@36:1> = 0) && ((-1 * <check_1148@36:0>) >= 0)))
        nub':(((-1 + (-1 * <check_1148@36:1>)) + <check_1148@36:0>) >= 0)
        begin InterpProver.interpolate(36951)[5]
          begin InterpProver.interpolate_fresh(36952)[6]
            begin InterpProver.interpolate_log(36953)[7]
              input1: ((<check_1148@36:2> = 0) && ((<check_1148@36:1> = 0) && ((-1 * <check_1148@36:0>) >= 0)))
              input2: (((-1 + (-1 * <check_1148@36:1>)) + <check_1148@36:0>) >= 0)
              begin InterpProver.interpolate_check(36954)[8]
                begin InterpProver.interpolate_simplify(36955)[9]
                  begin InterpProver.interpolate_quick(37022)[10]
                    begin CsisatInterface.interpolate_csisat_wrap(37031)[11]
                      begin CsisatInterface.interpolate_csisat_post_process(37032)[12]
                        begin CsisatInterface.interpolate_csisat_log(37033)[13]
                          input1: (0 = v_sep_check_1148_sep_36_sep_1 & v_sep_check_1148_sep_36_sep_0 <= 0)
                          input2: (1 + v_sep_check_1148_sep_36_sep_1) <= v_sep_check_1148_sep_36_sep_0
                          begin CsisatInterface.interpolate_csisat_raw(37034)[14]
                            
                          end CsisatInterface.interpolate_csisat_raw(37034)[14] (0.000000 sec.)
                          output: (-2*v_sep_check_1148_sep_36_sep_1 + 2*v_sep_check_1148_sep_36_sep_0) <= 0
                          
                        end CsisatInterface.interpolate_csisat_log(37033)[13] (0.000000 sec.)
                        after simplification: (-2*v_sep_check_1148_sep_36_sep_1 + 2*v_sep_check_1148_sep_36_sep_0) <= 0
                        after dnf conversion: (((-2*v_sep_check_1148_sep_36_sep_1 + 2*v_sep_check_1148_sep_36_sep_0) <= 0))
                        
                      end CsisatInterface.interpolate_csisat_post_process(37032)[12] (0.000000 sec.)
                      
                    end CsisatInterface.interpolate_csisat_wrap(37031)[11] (0.000000 sec.)
                    
                  end InterpProver.interpolate_quick(37022)[10] (0.000999 sec.)
                  
                end InterpProver.interpolate_simplify(36955)[9] (0.001999 sec.)
                
              end InterpProver.interpolate_check(36954)[8] (0.001999 sec.)
              output: (<check_1148@36:0> <= <check_1148@36:1>)
            end InterpProver.interpolate_log(36953)[7] (0.001999 sec.)
            
          end InterpProver.interpolate_fresh(36952)[6] (0.001999 sec.)
          
        end InterpProver.interpolate(36951)[5] (0.001999 sec.)
        output:
          P[<check_1148@36:2>](<check_1148@36:0>:int,<check_1148@36:1>:int,<check_1148@36:2>:int) =
          (<check_1148@36:0> <= <check_1148@36:1>)
      end ApronInterface.convex_hull_interpolate(36919)[4] (0.001999 sec.)
      Horn clauses:
        P[<<array_max_1033@29:3>@32:0>](<check_1148@36:0>:int,0:int,<check_1148@36:2>:int), (
        <check_1148@36:0> > 0) |- bot
        
        P[<array_max_1033@29:1>](<array_max_1033@29:0>:int,<array_max_1033@29:1>:int),
        ((<<array_max_1033@29:3>@32:0> = 0) && (<array_max_1033@29:1> >= <array_max_1033@29:0>))
        |- P[<<array_max_1033@29:3>@32:0>](<array_max_1033@29:0>:int,
                                           <array_max_1033@29:1>:int,
                                           <<array_max_1033@29:3>@32:0>:int)
        
         (<array_max_1033@29:1> = 0) |- P[<array_max_1033@29:1>](<array_max_1033@29:0>:int,
                                                                 <array_max_1033@29:1>:int)
      lower bounds:
        P[<array_max_1033@29:1>](<array_max_1033@29:0>:int,<array_max_1033@29:1>:int) = (<array_max_1033@29:1> = 0)
        P[<<array_max_1033@29:3>@32:0>](<array_max_1033@29:0>:int,<array_max_1033@29:1>:int,<<array_max_1033@29:3>@32:0>:int) =
        ((<<array_max_1033@29:3>@32:0> = 0) &&
         ((<array_max_1033@29:1> = 0) && (<array_max_1033@29:1> >= <array_max_1033@29:0>)))
      upper bounds:
        P[<<array_max_1033@29:3>@32:0>](var133:int,var134:int,var135:int) = ((var134 <> 0) || (var133 <= 0))
      begin GenHcSolver.classify_pids(38134)[4]
        output:
          [<<array_max_1033@29:3>@32:0>]
      end GenHcSolver.classify_pids(38134)[4] (0.000000 sec.)
      lb:((<<array_max_1033@29:3>@32:0> = 0) &&
          ((<array_max_1033@29:1> = 0) && (<array_max_1033@29:1> >= <array_max_1033@29:0>)))
      nub:(not ((<array_max_1033@29:1> <> 0) || (<array_max_1033@29:0> <= 0)))
      begin ApronInterface.convex_hull_interpolate(38137)[4]
        lb:((<<array_max_1033@29:3>@32:0> = 0) &&
            ((<array_max_1033@29:1> = 0) && (<array_max_1033@29:1> >= <array_max_1033@29:0>)))
        nub:(not ((<array_max_1033@29:1> <> 0) || (<array_max_1033@29:0> <= 0)))
        begin ExtFormula.Formula.case_analysis_boolean(38157)[5]
          ts: ((<<array_max_1033@29:3>@32:0> = 0) &&
               ((<array_max_1033@29:1> = 0) && (<array_max_1033@29:1> >= <array_max_1033@29:0>)))
          
        end ExtFormula.Formula.case_analysis_boolean(38157)[5] (0.000000 sec.)
        begin ExtFormula.Formula.case_analysis_boolean(38173)[5]
          ts: ((<array_max_1033@29:1> = 0) && (<array_max_1033@29:0> > 0))
          
        end ExtFormula.Formula.case_analysis_boolean(38173)[5] (0.000000 sec.)
        lb':((<<array_max_1033@29:3>@32:0> = 0) && ((<array_max_1033@29:1> = 0) && ((-1 * <array_max_1033@29:0>) >= 0)))
        nub':((<array_max_1033@29:1> = 0) && ((-1 + <array_max_1033@29:0>) >= 0))
        begin InterpProver.interpolate(38178)[5]
          begin InterpProver.interpolate_fresh(38179)[6]
            begin InterpProver.interpolate_log(38180)[7]
              input1: ((<<array_max_1033@29:3>@32:0> = 0) &&
                       ((<array_max_1033@29:1> = 0) && ((-1 * <array_max_1033@29:0>) >= 0)))
              input2: ((<array_max_1033@29:1> = 0) && ((-1 + <array_max_1033@29:0>) >= 0))
              begin InterpProver.interpolate_check(38181)[8]
                begin InterpProver.interpolate_simplify(38182)[9]
                  begin InterpProver.interpolate_quick(38263)[10]
                    begin CsisatInterface.interpolate_csisat_wrap(38272)[11]
                      begin CsisatInterface.interpolate_csisat_post_process(38273)[12]
                        begin CsisatInterface.interpolate_csisat_log(38274)[13]
                          input1: (0 = v_sep_array_max_1033_sep_29_sep_1 & v_sep_array_max_1033_sep_29_sep_0 <= 0)
                          input2: (0 = v_sep_array_max_1033_sep_29_sep_1 & 1 <= v_sep_array_max_1033_sep_29_sep_0)
                          begin CsisatInterface.interpolate_csisat_raw(38275)[14]
                            
                          end CsisatInterface.interpolate_csisat_raw(38275)[14] (0.000000 sec.)
                          output: 2*v_sep_array_max_1033_sep_29_sep_0 <= 0
                          
                        end CsisatInterface.interpolate_csisat_log(38274)[13] (0.000000 sec.)
                        after simplification: 2*v_sep_array_max_1033_sep_29_sep_0 <= 0
                        after dnf conversion: ((2*v_sep_array_max_1033_sep_29_sep_0 <= 0))
                        
                      end CsisatInterface.interpolate_csisat_post_process(38273)[12] (0.000000 sec.)
                      
                    end CsisatInterface.interpolate_csisat_wrap(38272)[11] (0.000000 sec.)
                    
                  end InterpProver.interpolate_quick(38263)[10] (0.001000 sec.)
                  
                end InterpProver.interpolate_simplify(38182)[9] (0.001000 sec.)
                
              end InterpProver.interpolate_check(38181)[8] (0.001000 sec.)
              output: (<array_max_1033@29:0> <= 0)
            end InterpProver.interpolate_log(38180)[7] (0.001000 sec.)
            
          end InterpProver.interpolate_fresh(38179)[6] (0.001000 sec.)
          
        end InterpProver.interpolate(38178)[5] (0.001000 sec.)
        output:
          P[<<array_max_1033@29:3>@32:0>](<array_max_1033@29:0>:int,<array_max_1033@29:1>:int,<<array_max_1033@29:3>@32:0>:int) =
          (<array_max_1033@29:0> <= 0)
      end ApronInterface.convex_hull_interpolate(38137)[4] (0.002000 sec.)
      Horn clauses:
        P[<array_max_1033@29:1>](<array_max_1033@29:0>:int,<array_max_1033@29:1>:int),
        ((<array_max_1033@29:0> > 0) && (<array_max_1033@29:1> >= <array_max_1033@29:0>)) |- bot
        
         (<array_max_1033@29:1> = 0) |- P[<array_max_1033@29:1>](<array_max_1033@29:0>:int,
                                                                 <array_max_1033@29:1>:int)
      lower bounds:
        P[<array_max_1033@29:1>](<array_max_1033@29:0>:int,<array_max_1033@29:1>:int) = (<array_max_1033@29:1> = 0)
      upper bounds:
        P[<array_max_1033@29:1>](var136:int,var137:int) = ((var136 <= 0) || (var137 < var136))
      begin GenHcSolver.classify_pids(39159)[4]
        output:
          [<array_max_1033@29:1>]
      end GenHcSolver.classify_pids(39159)[4] (0.000000 sec.)
      lb:(<array_max_1033@29:1> = 0)
      nub:(not ((<array_max_1033@29:0> <= 0) || (<array_max_1033@29:1> < <array_max_1033@29:0>)))
      begin ApronInterface.convex_hull_interpolate(39162)[4]
        lb:(<array_max_1033@29:1> = 0)
        nub:(not ((<array_max_1033@29:0> <= 0) || (<array_max_1033@29:1> < <array_max_1033@29:0>)))
        begin ExtFormula.Formula.case_analysis_boolean(39166)[5]
          ts: (<array_max_1033@29:1> = 0)
          
        end ExtFormula.Formula.case_analysis_boolean(39166)[5] (0.000000 sec.)
        begin ExtFormula.Formula.case_analysis_boolean(39184)[5]
          ts: ((<array_max_1033@29:0> > 0) && (<array_max_1033@29:1> >= <array_max_1033@29:0>))
          
        end ExtFormula.Formula.case_analysis_boolean(39184)[5] (0.001000 sec.)
        lb':(<array_max_1033@29:1> = 0)
        nub':(((<array_max_1033@29:1> + (-1 * <array_max_1033@29:0>)) >= 0) && ((-1 + <array_max_1033@29:0>) >= 0))
        begin InterpProver.interpolate(39190)[5]
          begin InterpProver.interpolate_fresh(39191)[6]
            begin InterpProver.interpolate_log(39192)[7]
              input1: (<array_max_1033@29:1> = 0)
              input2: (((<array_max_1033@29:1> + (-1 * <array_max_1033@29:0>)) >= 0) &&
                       ((-1 + <array_max_1033@29:0>) >= 0))
              begin InterpProver.interpolate_check(39193)[8]
                begin InterpProver.interpolate_simplify(39194)[9]
                  begin InterpProver.interpolate_quick(39239)[10]
                    begin CsisatInterface.interpolate_csisat_wrap(39248)[11]
                      begin CsisatInterface.interpolate_csisat_post_process(39249)[12]
                        begin CsisatInterface.interpolate_csisat_log(39250)[13]
                          input1: 0 = v_sep_array_max_1033_sep_29_sep_1
                          input2: (1 <= v_sep_array_max_1033_sep_29_sep_0 & v_sep_array_max_1033_sep_29_sep_0 <= v_sep_array_max_1033_sep_29_sep_1)
                          begin CsisatInterface.interpolate_csisat_raw(39251)[14]
                            
                          end CsisatInterface.interpolate_csisat_raw(39251)[14] (0.000000 sec.)
                          output: 2*v_sep_array_max_1033_sep_29_sep_1 <= 0
                          
                        end CsisatInterface.interpolate_csisat_log(39250)[13] (0.000000 sec.)
                        after simplification: 2*v_sep_array_max_1033_sep_29_sep_1 <= 0
                        after dnf conversion: ((2*v_sep_array_max_1033_sep_29_sep_1 <= 0))
                        
                      end CsisatInterface.interpolate_csisat_post_process(39249)[12] (0.000000 sec.)
                      
                    end CsisatInterface.interpolate_csisat_wrap(39248)[11] (0.000000 sec.)
                    
                  end InterpProver.interpolate_quick(39239)[10] (0.000000 sec.)
                  
                end InterpProver.interpolate_simplify(39194)[9] (0.000000 sec.)
                
              end InterpProver.interpolate_check(39193)[8] (0.000000 sec.)
              output: (<array_max_1033@29:1> <= 0)
            end InterpProver.interpolate_log(39192)[7] (0.000000 sec.)
            
          end InterpProver.interpolate_fresh(39191)[6] (0.000000 sec.)
          
        end InterpProver.interpolate(39190)[5] (0.000000 sec.)
        output:
          P[<array_max_1033@29:1>](<array_max_1033@29:0>:int,<array_max_1033@29:1>:int) = (<array_max_1033@29:1> <= 0)
      end ApronInterface.convex_hull_interpolate(39162)[4] (0.001000 sec.)
      begin HcSolver.check_validity(39412)[4]
        input:
          P[<fail_1486@47:0>](<fail_1486@47:0>:bool)|- bot
          
          P[<make_array_1030@41:1>](<k_make_array_u_1182@44:1>:int,<k_make_array_u_1182@44:0>:int),
          ((0 > <k_make_array_u_1182@44:0>) && <fail_1486@47:0>) |- P[<fail_1486@47:0>](
          <fail_1486@47:0>:bool)
          
          P[<<array_max_1033@29:3>@32:0>](<make_array_1030@41:0>:int,0:int,<check_1148@36:2>:int),
          P[<<check_1148@36:3>@39:0>](<make_array_1030@41:0>:int,0:int,<check_1148@36:2>:int,<make_array_1030@41:1>:int)|- P[<make_array_1030@41:1>](
          <make_array_1030@41:0>:int,<make_array_1030@41:1>:int)
          
          P[<check_1148@36:2>](<check_1148@36:0>:int,<check_1148@36:1>:int,<check_1148@36:2>:int),
          ((<check_1148@36:1> < <check_1148@36:0>) && (<<check_1148@36:3>@39:0> = <check_1148@36:1>))
          |- P[<<check_1148@36:3>@39:0>](<check_1148@36:0>:int,<check_1148@36:1>:int,
                                         <check_1148@36:2>:int,<<check_1148@36:3>@39:0>:int)
          
          P[<<array_max_1033@29:3>@32:0>](<check_1148@36:0>:int,0:int,<check_1148@36:2>:int), (
          <check_1148@36:1> = 0)
          |- P[<check_1148@36:2>](<check_1148@36:0>:int,<check_1148@36:1>:int,
                                  <check_1148@36:2>:int)
          
          P[<array_max_1033@29:1>](<array_max_1033@29:0>:int,<array_max_1033@29:1>:int),
          ((<<array_max_1033@29:3>@32:0> = 0) && (<array_max_1033@29:1> >= <array_max_1033@29:0>))
          |- P[<<array_max_1033@29:3>@32:0>](<array_max_1033@29:0>:int,
                                             <array_max_1033@29:1>:int,
                                             <<array_max_1033@29:3>@32:0>:int)
          
           (<array_max_1033@29:1> = 0) |- P[<array_max_1033@29:1>](<array_max_1033@29:0>:int,
                                                                   <array_max_1033@29:1>:int)
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        
      end HcSolver.check_validity(39412)[4] (0.003999 sec.)
      solution:
        P[<fail_1486@47:0>](<fail_1486@47:0>:bool) = false
        P[<make_array_1030@41:1>](<make_array_1030@41:0>:int,<make_array_1030@41:1>:int) = false
        P[<<check_1148@36:3>@39:0>](<check_1148@36:0>:int,<check_1148@36:1>:int,<check_1148@36:2>:int,<<check_1148@36:3>@39:0>:int) =
        false
        P[<check_1148@36:2>](<check_1148@36:0>:int,<check_1148@36:1>:int,<check_1148@36:2>:int) =
        (<check_1148@36:0> <= <check_1148@36:1>)
        P[<<array_max_1033@29:3>@32:0>](<array_max_1033@29:0>:int,<array_max_1033@29:1>:int,<<array_max_1033@29:3>@32:0>:int) =
        (<array_max_1033@29:0> <= 0)
        P[<array_max_1033@29:1>](<array_max_1033@29:0>:int,<array_max_1033@29:1>:int) = (<array_max_1033@29:1> <= 0)
    end GenHcSolver.solve(27532)[3] (0.077988 sec.)
    begin YhornInterface.solve(40015)[3]
      begin HcSolver.solve_ub(40016)[4]
        encoded:
          P[<fail_1486@47:0>](<fail_1486@47:0>:int)|- bot
          
          P[<make_array_1030@41:1>](<k_make_array_u_1182@44:1>:int,<k_make_array_u_1182@44:0>:int),
          ((0 > <k_make_array_u_1182@44:0>) && (<fail_1486@47:0> = 1)) |- P[<fail_1486@47:0>](
          <fail_1486@47:0>:int)
          
          P[<<array_max_1033@29:3>@32:0>](<make_array_1030@41:0>:int,0:int,<check_1148@36:2>:int),
          P[<<check_1148@36:3>@39:0>](<make_array_1030@41:0>:int,0:int,<check_1148@36:2>:int,<make_array_1030@41:1>:int)|- P[<make_array_1030@41:1>](
          <make_array_1030@41:0>:int,<make_array_1030@41:1>:int)
          
          P[<check_1148@36:2>](<check_1148@36:0>:int,<check_1148@36:1>:int,<check_1148@36:2>:int),
          ((<check_1148@36:1> < <check_1148@36:0>) && (<<check_1148@36:3>@39:0> = <check_1148@36:1>))
          |- P[<<check_1148@36:3>@39:0>](<check_1148@36:0>:int,<check_1148@36:1>:int,
                                         <check_1148@36:2>:int,<<check_1148@36:3>@39:0>:int)
          
          P[<<array_max_1033@29:3>@32:0>](<check_1148@36:0>:int,0:int,<check_1148@36:2>:int), (
          <check_1148@36:1> = 0)
          |- P[<check_1148@36:2>](<check_1148@36:0>:int,<check_1148@36:1>:int,
                                  <check_1148@36:2>:int)
          
          P[<array_max_1033@29:1>](<array_max_1033@29:0>:int,<array_max_1033@29:1>:int),
          ((<<array_max_1033@29:3>@32:0> = 0) && (<array_max_1033@29:1> >= <array_max_1033@29:0>))
          |- P[<<array_max_1033@29:3>@32:0>](<array_max_1033@29:0>:int,
                                             <array_max_1033@29:1>:int,
                                             <<array_max_1033@29:3>@32:0>:int)
          
           (<array_max_1033@29:1> = 0) |- P[<array_max_1033@29:1>](<array_max_1033@29:0>:int,
                                                                   <array_max_1033@29:1>:int)
        input to Yhorn:
          P[<fail_1486@47:0>](<fail_1486@47:0>:int)|- bot
          
          P[<make_array_1030@41:1>](<k_make_array_u_1182@44:1>:int,<k_make_array_u_1182@44:0>:int),
          ((0 > <k_make_array_u_1182@44:0>) && (<fail_1486@47:0> = 1)) |- P[<fail_1486@47:0>](
          <fail_1486@47:0>:int)
          
          P[<<array_max_1033@29:3>@32:0>](<make_array_1030@41:0>:int,var138:int,<check_1148@36:2>:int),
          P[<<check_1148@36:3>@39:0>](<make_array_1030@41:0>:int,var139:int,<check_1148@36:2>:int,<make_array_1030@41:1>:int),
          ((var139 = 0) && (var138 = 0))
          |- P[<make_array_1030@41:1>](<make_array_1030@41:0>:int,<make_array_1030@41:1>:int)
          
          P[<check_1148@36:2>](<check_1148@36:0>:int,<check_1148@36:1>:int,<check_1148@36:2>:int),
          ((<<check_1148@36:3>@39:0> = <check_1148@36:1>) && (<check_1148@36:1> < <check_1148@36:0>))
          |- P[<<check_1148@36:3>@39:0>](<check_1148@36:0>:int,<check_1148@36:1>:int,
                                         <check_1148@36:2>:int,<<check_1148@36:3>@39:0>:int)
          
          P[<<array_max_1033@29:3>@32:0>](<check_1148@36:0>:int,var140:int,<check_1148@36:2>:int),
          ((var140 = 0) && (<check_1148@36:1> = 0))
          |- P[<check_1148@36:2>](<check_1148@36:0>:int,<check_1148@36:1>:int,
                                  <check_1148@36:2>:int)
          
          P[<array_max_1033@29:1>](<array_max_1033@29:0>:int,<array_max_1033@29:1>:int),
          ((<array_max_1033@29:1> >= <array_max_1033@29:0>) && (<<array_max_1033@29:3>@32:0> = 0))
          |- P[<<array_max_1033@29:3>@32:0>](<array_max_1033@29:0>:int,
                                             <array_max_1033@29:1>:int,
                                             <<array_max_1033@29:3>@32:0>:int)
          Yhorn (Wed Sep 25 10:52:05 JST 2013)


(0=0) & (v_sep_fail_1486_sep_47_sep_0($103)) -> 1=0.
(($103-1=0) & (-$104>0)) & (v_sep_make_array_1030_sep_41_sep_1($105,$104)) -> v_sep_fail_1486_sep_47_sep_0($103).
(($106=0) & ($107=0)) & (v_sep_check_1148_sep_36_sep_3_sep_39_sep_0($108,$107,$109,$110)) & (v_sep_array_max_1033_sep_29_sep_3_sep_32_sep_0($108,$106,$109)) -> v_sep_make_array_1030_sep_41_sep_1($108,$110).
(($111-$112<0) & (-$111+$113=0)) & (v_sep_check_1148_sep_36_sep_2($112,$111,$109)) -> v_sep_check_1148_sep_36_sep_3_sep_39_sep_0($112,$111,$109,$113).
(($111=0) & ($114=0)) & (v_sep_array_max_1033_sep_29_sep_3_sep_32_sep_0($112,$114,$109)) -> v_sep_check_1148_sep_36_sep_2($112,$111,$109).
(($115=0) & ($116-$117>=0)) & (v_sep_array_max_1033_sep_29_sep_1($117,$116)) -> v_sep_array_max_1033_sep_29_sep_3_sep_32_sep_0($117,$116,$115).
$116=0 -> v_sep_array_max_1033_sep_29_sep_1($117,$116).


v_sep_array_max_1033_sep_29_sep_1: X
v_sep_array_max_1033_sep_29_sep_3_sep_32_sep_0: X
v_sep_check_1148_sep_36_sep_2: X
v_sep_check_1148_sep_36_sep_3_sep_39_sep_0: X
v_sep_fail_1486_sep_47_sep_0: X
v_sep_make_array_1030_sep_41_sep_1: X
........
v_sep_array_max_1033_sep_29_sep_1: X
v_sep_array_max_1033_sep_29_sep_3_sep_32_sep_0: X
v_sep_check_1148_sep_36_sep_2: X
v_sep_check_1148_sep_36_sep_3_sep_39_sep_0: X
v_sep_fail_1486_sep_47_sep_0: X
v_sep_make_array_1030_sep_41_sep_1: X
...
v_sep_array_max_1033_sep_29_sep_1: X
v_sep_array_max_1033_sep_29_sep_3_sep_32_sep_0: X
v_sep_check_1148_sep_36_sep_2: X
v_sep_check_1148_sep_36_sep_3_sep_39_sep_0: X
v_sep_fail_1486_sep_47_sep_0: X
v_sep_make_array_1030_sep_41_sep_1: X
.....
v_sep_array_max_1033_sep_29_sep_1: X
v_sep_array_max_1033_sep_29_sep_3_sep_32_sep_0: X
v_sep_check_1148_sep_36_sep_2: X
v_sep_check_1148_sep_36_sep_3_sep_39_sep_0: X
v_sep_fail_1486_sep_47_sep_0: X
v_sep_make_array_1030_sep_41_sep_1: X
.......
v_sep_array_max_1033_sep_29_sep_1: X
v_sep_array_max_1033_sep_29_sep_3_sep_32_sep_0: X
v_sep_check_1148_sep_36_sep_2: X
v_sep_check_1148_sep_36_sep_3_sep_39_sep_0: X
v_sep_fail_1486_sep_47_sep_0: X
v_sep_make_array_1030_sep_41_sep_1: X
........(0=0) & (v_sep_fail_1486_sep_47_sep_0($103)) -> 1=0.
(($103-1=0) & (-$104>0)) & (v_sep_make_array_1030_sep_41_sep_1($105,$104)) -> v_sep_fail_1486_sep_47_sep_0($103).
(($106=0) & ($107=0)) & (v_sep_check_1148_sep_36_sep_3_sep_39_sep_0($108,$107,$109,$110)) & (v_sep_array_max_1033_sep_29_sep_3_sep_32_sep_0($108,$106,$109)) -> v_sep_make_array_1030_sep_41_sep_1($108,$110).
(($111-$112<0) & (-$111+$113=0)) & (v_sep_check_1148_sep_36_sep_2($112,$111,$109)) -> v_sep_check_1148_sep_36_sep_3_sep_39_sep_0($112,$111,$109,$113).
(($111=0) & ($114=0)) & (v_sep_array_max_1033_sep_29_sep_3_sep_32_sep_0($112,$114,$109)) -> v_sep_check_1148_sep_36_sep_2($112,$111,$109).
(($115=0) & ($116-$117>=0)) & (v_sep_array_max_1033_sep_29_sep_1($117,$116)) -> v_sep_array_max_1033_sep_29_sep_3_sep_32_sep_0($117,$116,$115).
$116=0 -> v_sep_array_max_1033_sep_29_sep_1($117,$116).

           (<array_max_1033@29:1> = 0) |- P[<array_max_1033@29:1>](<array_max_1033@29:0>:int,
                                                                   <array_max_1033@29:1>:int)
        solution:
          P[<array_max_1033@29:1>]($149:int,$151:int) = true
          P[<<array_max_1033@29:3>@32:0>]($135:int,$137:int,$139:int) = true
          P[<check_1148@36:2>]($142:int,$144:int,$146:int) = true
          P[<<check_1148@36:3>@39:0>]($126:int,$128:int,$130:int,$132:int) = ($128 <= $132)
          P[<fail_1486@47:0>]($118:bool) = false
          P[<make_array_1030@41:1>]($121:int,$123:int) = (0 <= $123)
        
      end HcSolver.solve_ub(40016)[4] (0.022997 sec.)
      begin HcSolver.check_validity(40230)[4]
        input:
          P[<fail_1486@47:0>](<fail_1486@47:0>:bool)|- bot
          
          P[<make_array_1030@41:1>](<k_make_array_u_1182@44:1>:int,<k_make_array_u_1182@44:0>:int),
          ((0 > <k_make_array_u_1182@44:0>) && <fail_1486@47:0>) |- P[<fail_1486@47:0>](
          <fail_1486@47:0>:bool)
          
          P[<<array_max_1033@29:3>@32:0>](<make_array_1030@41:0>:int,0:int,<check_1148@36:2>:int),
          P[<<check_1148@36:3>@39:0>](<make_array_1030@41:0>:int,0:int,<check_1148@36:2>:int,<make_array_1030@41:1>:int)|- P[<make_array_1030@41:1>](
          <make_array_1030@41:0>:int,<make_array_1030@41:1>:int)
          
          P[<check_1148@36:2>](<check_1148@36:0>:int,<check_1148@36:1>:int,<check_1148@36:2>:int),
          ((<check_1148@36:1> < <check_1148@36:0>) && (<<check_1148@36:3>@39:0> = <check_1148@36:1>))
          |- P[<<check_1148@36:3>@39:0>](<check_1148@36:0>:int,<check_1148@36:1>:int,
                                         <check_1148@36:2>:int,<<check_1148@36:3>@39:0>:int)
          
          P[<<array_max_1033@29:3>@32:0>](<check_1148@36:0>:int,0:int,<check_1148@36:2>:int), (
          <check_1148@36:1> = 0)
          |- P[<check_1148@36:2>](<check_1148@36:0>:int,<check_1148@36:1>:int,
                                  <check_1148@36:2>:int)
          
          P[<array_max_1033@29:1>](<array_max_1033@29:0>:int,<array_max_1033@29:1>:int),
          ((<<array_max_1033@29:3>@32:0> = 0) && (<array_max_1033@29:1> >= <array_max_1033@29:0>))
          |- P[<<array_max_1033@29:3>@32:0>](<array_max_1033@29:0>:int,
                                             <array_max_1033@29:1>:int,
                                             <<array_max_1033@29:3>@32:0>:int)
          
           (<array_max_1033@29:1> = 0) |- P[<array_max_1033@29:1>](<array_max_1033@29:0>:int,
                                                                   <array_max_1033@29:1>:int)
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        
      end HcSolver.check_validity(40230)[4] (0.002000 sec.)
      solution:
        P[<array_max_1033@29:1>]($149:int,$151:int) = true
        P[<<array_max_1033@29:3>@32:0>]($135:int,$137:int,$139:int) = true
        P[<check_1148@36:2>]($142:int,$144:int,$146:int) = true
        P[<<check_1148@36:3>@39:0>]($126:int,$128:int,$130:int,$132:int) = ($128 <= $132)
        P[<fail_1486@47:0>]($118:bool) = false
        P[<make_array_1030@41:1>]($121:int,$123:int) = (0 <= $123)
    end YhornInterface.solve(40015)[3] (0.025996 sec.)
    
  end RefTypeInfer.infer_etrs(13431)[2] (0.268959 sec.)
  refinement types:
    main_1479: X
    f_1484: v1:int -> X
    main_1044: v1:int -> (v2:unit -> X) -> X
    array_max_1033: v1:int ->
                    v2:{v2:int | (v2 <= 0)} -> (v3:int -> (v4:int -> X) -> X) -> (v7:{v7:int | (v1 <= 0)} -> X) -> X
    f_main_1483: v1:int -> (v2:unit -> X) -> v4:int -> X
    check_1148: v1:int ->
                v2:int ->
                v3:{v3:int | (v1 <= v2)} -> (v4:{v4:int | false} -> (v5:int -> X) -> X) -> (v8:unit -> X) -> X
    make_array_1030: v1:int -> v2:{v2:int | false} -> (v3:int -> X) -> X
    k_make_array_u_1182: v1:int -> v2:int -> (v3:int -> X) -> v5:bool -> X
    fail_1486: v1:{v1:bool | false} -> (v2:unit -> X) -> X
    f_1485: var161:int -> var160:unit -> X
    f_array_max_1480: var171:int ->
                      var170:int -> (var169:int -> (var168:int -> X) -> X) -> (var165:int -> X) -> var163:int -> X
    f_array_max_1481: var178:int -> var177:int -> var176:int -> (var175:int -> X) -> var173:int -> X
    f_check_1482: var189:int ->
                  var188:int ->
                  var187:int -> (var186:int -> (var185:int -> X) -> X) -> (var182:unit -> X) -> var180:int -> X
    fail_1487: var193:bool -> (var192:unit -> X) -> X
    k_check_u_1336: var204:int ->
                    var203:int ->
                    var202:int -> (var201:int -> (var200:int -> X) -> X) -> (var197:unit -> X) -> var195:unit -> X
    k_make_array_u_1193: var210:int -> var209:int -> (var208:int -> X) -> var206:unit -> X
  abstraction types:
    main_1479: X
    f_1484: v1:int -> X
    main_1044: v1:int -> (v2:unit -> X) -> X
    array_max_1033: v1:int ->
                    v2:int[v2 -> (v2 <= 0)] -> (v3:int -> (v4:int -> X) -> X) -> (v7:int[v7 -> (
                                                                    v1 <= 0)] -> X) -> X
    f_main_1483: v1:int -> (v2:unit -> X) -> v4:int -> X
    check_1148: v1:int -> v2:int -> v3:int[v3 -> (v1 <= v2)] -> (v4:int -> (v5:int -> X) -> X) -> (v8:unit -> X) -> X
    make_array_1030: v1:int -> v2:int -> (v3:int -> X) -> X
    k_make_array_u_1182: v1:int -> v2:int -> (v3:int -> X) -> v5:bool -> X
    fail_1486: v1:bool -> (v2:unit -> X) -> X
    f_1485: var161:int -> var160:unit -> X
    f_array_max_1480: var171:int ->
                      var170:int -> (var169:int -> (var168:int -> X) -> X) -> (var165:int -> X) -> var163:int -> X
    f_array_max_1481: var178:int -> var177:int -> var176:int -> (var175:int -> X) -> var173:int -> X
    f_check_1482: var189:int ->
                  var188:int ->
                  var187:int -> (var186:int -> (var185:int -> X) -> X) -> (var182:unit -> X) -> var180:int -> X
    fail_1487: var193:bool -> (var192:unit -> X) -> X
    k_check_u_1336: var204:int ->
                    var203:int ->
                    var202:int -> (var201:int -> (var200:int -> X) -> X) -> (var197:unit -> X) -> var195:unit -> X
    k_make_array_u_1193: var210:int -> var209:int -> (var208:int -> X) -> var206:unit -> X
  
end AbsTypeInfer.refine(13430)[1] (0.273959 sec.)
DONE!

Prefix of spurious counter-example::
0; 0; 0; 0; 0; 1

Program with abstraction types (CEGAR-cycle 2)::
Main: main_1479
  main_1479 -> (rand_int f_1484)
  array_max_1033 n_1034 i_1035 a_1036 k_array_max_1226 when (i_1035 >= n_1034) -> (k_array_max_1226 0)
  array_max_1033 n_1034 i_1035 a_1036 k_array_max_1226 when (not (i_1035 >= n_1034)) ->
      (a_1036 i_1035 (f_array_max_1480 i_1035 n_1034 a_1036 k_array_max_1226))
  check_1148 n_1040 i_1041 max_1042 a_1043 k_check_1309 when (i_1041 >= n_1040) -> (k_check_1309 ())
  check_1148 n_1040 i_1041 max_1042 a_1043 k_check_1309 when (not (i_1041 >= n_1040)) ->
      (a_1043 i_1041 (f_check_1482 i_1041 max_1042 n_1040 a_1043 k_check_1309))
  f_1484 x_1454 -> (main_1044 x_1454 (f_1485 x_1454))
  f_1485 x_1454 x_1451 -> end
  f_array_max_1480 i_1035 n_1034 a_1036 k_array_max_1226 x_1229 ->
      (array_max_1033 n_1034 (i_1035 + 1) a_1036 (f_array_max_1481 i_1035 n_1034 x_1229 k_array_max_1226))
  f_array_max_1481 i_1035 n_1034 x_1229 k_array_max_1226 x_1242 when (x_1229 > x_1242) -> (k_array_max_1226 x_1229)
  f_array_max_1481 i_1035 n_1034 x_1229 k_array_max_1226 x_1242 when (
      not (x_1229 > x_1242)) -> (k_array_max_1226 x_1242)
  f_check_1482 i_1041 max_1042 n_1040 a_1043 k_check_1309 x_1315 when (
      x_1315 <= max_1042) -> (k_check_u_1336 i_1041 max_1042 n_1040 a_1043 k_check_1309 ())
  f_check_1482 i_1041 max_1042 n_1040 a_1043 k_check_1309 x_1315 when (
      not (x_1315 <= max_1042)) -> (fail_1487 true (k_check_u_1336 i_1041 max_1042 n_1040 a_1043 k_check_1309))
  f_main_1483 n_1045 k_main_1380 x_1399 -> (check_1148 n_1045 0 x_1399 (make_array_1030 n_1045) k_main_1380)
  fail_1486 b k -> {fail} => (k ())
  fail_1487 b k -> {fail} => (k ())
  k_check_u_1336 i_1041 max_1042 n_1040 a_1043 k_check_1309 x_1312 ->
      (check_1148 n_1040 (i_1041 + 1) max_1042 a_1043 k_check_1309)
  k_make_array_u_1182 i_1032 n_1031 k_make_array_1176 b_1194 when b_1194 ->
      (k_make_array_u_1193 i_1032 n_1031 k_make_array_1176 ())
  k_make_array_u_1182 i_1032 n_1031 k_make_array_1176 b_1194 when (not b_1194) ->
      (fail_1486 true (k_make_array_u_1193 i_1032 n_1031 k_make_array_1176))
  k_make_array_u_1193 i_1032 n_1031 k_make_array_1176 x_1179 -> (k_make_array_1176 i_1032)
  main_1044 n_1045 k_main_1380 -> (array_max_1033 n_1045 0 (make_array_1030 n_1045) (f_main_1483 n_1045 k_main_1380))
  make_array_1030 n_1031 i_1032 k_make_array_1176 when (0 <= i_1032) ->
      (k_make_array_u_1182 i_1032 n_1031 k_make_array_1176 (i_1032 < n_1031))
  make_array_1030 n_1031 i_1032 k_make_array_1176 when (not (0 <= i_1032)) ->
      (k_make_array_u_1182 i_1032 n_1031 k_make_array_1176 false)
Types:
  main_1479 : X
  array_max_1033 : (x_1:int ->
                    x_2:int[x_2 <= 0; x_2 >= 0] -> (x_4:int[x_4 >= 0] -> (int -> X) -> X) -> (int[x_1 <= 0] -> X) -> X)
  check_1148 : (x_1:int -> x_2:int -> int[x_1 <= x_2] -> (int -> (int -> X) -> X) -> (unit -> X) -> X)
  fail_1486 : (x_1:bool[x_1] -> (unit -> X) -> X)
  fail_1487 : (x_1:bool[x_1] -> (unit -> X) -> X)
  make_array_1030 : (int -> x_2:int[x_2 >= 0] -> (int -> X) -> X)
  
(2-1) Abstracting ... DONE!

(2-2) Checking HORS ... DONE!

Error trace::
  main_1479 ... --> 
  f_1484 ... --> 
  main_1044 ... --> 
  array_max_1033 [2/2] ... --> 
  make_array_1030 [1/2] ... --> 
  k_make_array_u_1182 [2/2] ... --> 
  fail_1486 ... --> fail -->
  ERROR!

Spurious counter-example::
  0; 0; 0; 1; 0; 1; 0

(2-3) Checking counter-example ... DONE!

(2-4) Discovering predicates ... 
begin AbsTypeInfer.refine(41778)[1]
  program:
    main_1479  | true = ((Random.int 0) f_1484)
    array_max_1033 n_1034 i_1035 a_1036 k_array_max_1226 | (i_1035 >= n_1034) = (
    k_array_max_1226 0)
    array_max_1033 n_1034 i_1035 a_1036 k_array_max_1226 | (not (i_1035 >= n_1034)) = (
    a_1036 i_1035
           (f_array_max_1480 i_1035
                             n_1034
                             a_1036
                             k_array_max_1226))
    check_1148 n_1040 i_1041 max_1042 a_1043 k_check_1309 | (i_1041 >= n_1040) = (
    k_check_1309 ())
    check_1148 n_1040 i_1041 max_1042 a_1043 k_check_1309 | (not (i_1041 >= n_1040)) = (
    a_1043 i_1041
           (f_check_1482 i_1041
                         max_1042
                         n_1040
                         a_1043
                         k_check_1309))
    f_1484 x_1454 | true = (main_1044 x_1454
                                      (f_1485 x_1454))
    f_1485 x_1454 x_1451 | true = end
    f_array_max_1480 i_1035 n_1034 a_1036 k_array_max_1226 x_1229 | true = (
    array_max_1033 n_1034
                   (i_1035 + 1)
                   a_1036
                   (f_array_max_1481 i_1035
                                     n_1034
                                     x_1229
                                     k_array_max_1226))
    f_array_max_1481 i_1035 n_1034 x_1229 k_array_max_1226 x_1242 | (
    x_1229 > x_1242) = (k_array_max_1226 x_1229)
    f_array_max_1481 i_1035 n_1034 x_1229 k_array_max_1226 x_1242 | (
    not (x_1229 > x_1242)) = (k_array_max_1226 x_1242)
    f_check_1482 i_1041 max_1042 n_1040 a_1043 k_check_1309 x_1315 | (
    x_1315 <= max_1042) = (k_check_u_1336 i_1041
                                          max_1042
                                          n_1040
                                          a_1043
                                          k_check_1309
                                          ())
    f_check_1482 i_1041 max_1042 n_1040 a_1043 k_check_1309 x_1315 | (
    not (x_1315 <= max_1042)) = (fail_1487 true
                                           (k_check_u_1336 i_1041
                                                           max_1042
                                                           n_1040
                                                           a_1043
                                                           k_check_1309))
    f_main_1483 n_1045 k_main_1380 x_1399 | true = (check_1148 n_1045
                                                               0
                                                               x_1399
                                                               (make_array_1030 n_1045)
                                                               k_main_1380)
    fail_1486 b k | true = (fail ())
    fail_1487 b k | true = (fail ())
    k_check_u_1336 i_1041 max_1042 n_1040 a_1043 k_check_1309 x_1312 | true = (
    check_1148 n_1040
               (i_1041 + 1)
               max_1042
               a_1043
               k_check_1309)
    k_make_array_u_1182 i_1032 n_1031 k_make_array_1176 b_1194 | b_1194 = (
    k_make_array_u_1193 i_1032
                        n_1031
                        k_make_array_1176
                        ())
    k_make_array_u_1182 i_1032 n_1031 k_make_array_1176 b_1194 | (not b_1194) = (
    fail_1486 true
              (k_make_array_u_1193 i_1032
                                   n_1031
                                   k_make_array_1176))
    k_make_array_u_1193 i_1032 n_1031 k_make_array_1176 x_1179 | true = (
    k_make_array_1176 i_1032)
    main_1044 n_1045 k_main_1380 | true = (array_max_1033
                                             n_1045
                                             0
                                             (make_array_1030 n_1045)
                                             (f_main_1483 n_1045
                                                          k_main_1380))
    make_array_1030 n_1031 i_1032 k_make_array_1176 | (0 <= i_1032) = (
    k_make_array_u_1182 i_1032
                        n_1031
                        k_make_array_1176
                        (i_1032 < n_1031))
    make_array_1030 n_1031 i_1032 k_make_array_1176 | (not (0 <= i_1032)) = (
    k_make_array_u_1182 i_1032
                        n_1031
                        k_make_array_1176
                        false)
    main_1479:X
    array_max_1033:int -> int -> (int -> (int -> X) -> X) -> (int -> X) -> X
    check_1148:int -> int -> int -> (int -> (int -> X) -> X) -> (unit -> X) -> X
    f_1484:int -> X
    f_1485:int -> unit -> X
    f_array_max_1480:int -> int -> (int -> (int -> X) -> X) -> (int -> X) -> int -> X
    f_array_max_1481:int -> int -> int -> (int -> X) -> int -> X
    f_check_1482:int -> int -> int -> (int -> (int -> X) -> X) -> (unit -> X) -> int -> X
    f_main_1483:int -> (unit -> X) -> int -> X
    fail_1486:bool -> (unit -> X) -> X
    fail_1487:bool -> (unit -> X) -> X
    k_check_u_1336:int -> int -> int -> (int -> (int -> X) -> X) -> (unit -> X) -> unit -> X
    k_make_array_u_1182:int -> int -> (int -> X) -> bool -> X
    k_make_array_u_1193:int -> int -> (int -> X) -> unit -> X
    main_1044:int -> (unit -> X) -> X
    make_array_1030:int -> int -> (int -> X) -> X
  inlined functions: f_1484,f_1485,f_array_max_1480,f_array_max_1481,f_check_1482,f_main_1483,k_check_u_1336,k_make_array_u_1182,k_make_array_u_1193,main_1044
  counterexample: 0:0:0:1:0:1:0
  error traces:
    [true.nop(<f_1484@53:0> = var211)
     [true.(<main_1044@55:0> = <f_1484@53:0>)
      [true.((<array_max_1033@57:0> = <main_1044@55:0>) && (<array_max_1033@57:1> = 0))
       [(not (<array_max_1033@57:1> >= <array_max_1033@57:0>)).(<<array_max_1033@57:2>@60:0> = <array_max_1033@57:1>)
        [true.((<make_array_1030@62:0> = <main_1044@55:0>) && (<make_array_1030@62:1> = <<array_max_1033@57:2>@60:0>))
         [(0 <= <make_array_1030@62:1>).
          ((<k_make_array_u_1182@65:0> = <make_array_1030@62:1>) &&
           ((<k_make_array_u_1182@65:1> = <make_array_1030@62:0>) &&
            (<k_make_array_u_1182@65:3> = (<make_array_1030@62:1> < <make_array_1030@62:0>))))
          [(not <k_make_array_u_1182@65:3>).(<fail_1486@68:0> = true)[true.error
  begin RefTypeInfer.infer_etrs(41779)[2]
    horn clauses:
      P[<fail_1486@68:0>](<fail_1486@68:0>:bool)|- bot
      
      P[<k_make_array_u_1182@65:3>](<k_make_array_u_1182@65:0>:int,<k_make_array_u_1182@65:1>:int,false:bool),
      <fail_1486@68:0> |- P[<fail_1486@68:0>](<fail_1486@68:0>:bool)
      
      P[<make_array_1030@62:1>](<k_make_array_u_1182@65:1>:int,<k_make_array_u_1182@65:0>:int),
      ((0 <= <k_make_array_u_1182@65:0>) &&
       (<k_make_array_u_1182@65:3> = (<k_make_array_u_1182@65:0> < <k_make_array_u_1182@65:1>)))
      |- P[<k_make_array_u_1182@65:3>](<k_make_array_u_1182@65:0>:int,
                                       <k_make_array_u_1182@65:1>:int,
                                       <k_make_array_u_1182@65:3>:bool)
      
      P[<main_1044@55:0>](<make_array_1030@62:0>:int),
      P[<<array_max_1033@57:2>@60:0>](<make_array_1030@62:0>:int,0:int,<make_array_1030@62:1>:int)|- P[<make_array_1030@62:1>](
      <make_array_1030@62:0>:int,<make_array_1030@62:1>:int)
      
      P[<array_max_1033@57:1>](<array_max_1033@57:0>:int,<array_max_1033@57:1>:int),
      ((<array_max_1033@57:1> < <array_max_1033@57:0>) && (<<array_max_1033@57:2>@60:0> = <array_max_1033@57:1>))
      |- P[<<array_max_1033@57:2>@60:0>](<array_max_1033@57:0>:int,<array_max_1033@57:1>:int,
                                         <<array_max_1033@57:2>@60:0>:int)
      
      P[<main_1044@55:0>](<array_max_1033@57:0>:int), (<array_max_1033@57:1> = 0)
      |- P[<array_max_1033@57:1>](<array_max_1033@57:0>:int,<array_max_1033@57:1>:int)
      
      P[<f_1484@53:0>](<main_1044@55:0>:int)|- P[<main_1044@55:0>](<main_1044@55:0>:int)
      
      |- P[<f_1484@53:0>](<f_1484@53:0>:int)
    call trees:
      <main_1479@50>
        <f_1484@53>
          <main_1044@55>
            <array_max_1033@57>
            </<array_max_1033@57:2>@60>
            <make_array_1030@62>
              <k_make_array_u_1182@65>
                <fail_1486@68>
    inlined horn clauses:
      P[<fail_1486@68:0>](<fail_1486@68:0>:bool)|- bot
      
      P[<make_array_1030@62:1>](<k_make_array_u_1182@65:1>:int,<k_make_array_u_1182@65:0>:int),
      ((0 <= <k_make_array_u_1182@65:0>) &&
       ((<k_make_array_u_1182@65:0> >= <k_make_array_u_1182@65:1>) && <fail_1486@68:0>))
      |- P[<fail_1486@68:0>](<fail_1486@68:0>:bool)
      
      P[<<array_max_1033@57:2>@60:0>](<make_array_1030@62:0>:int,0:int,<make_array_1030@62:1>:int)|- P[<make_array_1030@62:1>](
      <make_array_1030@62:0>:int,<make_array_1030@62:1>:int)
      
      P[<array_max_1033@57:1>](<array_max_1033@57:0>:int,<array_max_1033@57:1>:int),
      ((<array_max_1033@57:1> < <array_max_1033@57:0>) && (<<array_max_1033@57:2>@60:0> = <array_max_1033@57:1>))
      |- P[<<array_max_1033@57:2>@60:0>](<array_max_1033@57:0>:int,<array_max_1033@57:1>:int,
                                         <<array_max_1033@57:2>@60:0>:int)
      
       (<array_max_1033@57:1> = 0) |- P[<array_max_1033@57:1>](<array_max_1033@57:0>:int,
                                                               <array_max_1033@57:1>:int)
    begin ParamSubstInfer.infer(43045)[3]
      
    end ParamSubstInfer.infer(43045)[3] (0.204969 sec.)
    inferred extra parameters:
      
    begin RefTypeInfer.elim_coeffs(43047)[3]
      
    end RefTypeInfer.elim_coeffs(43047)[3] (0.002000 sec.)
    begin GenHcSolver.solve(43312)[3]
      Horn clauses:
        P[<fail_1486@68:0>](<fail_1486@68:0>:bool)|- bot
        
        P[<make_array_1030@62:1>](<k_make_array_u_1182@65:1>:int,<k_make_array_u_1182@65:0>:int),
        ((0 <= <k_make_array_u_1182@65:0>) &&
         ((<k_make_array_u_1182@65:0> >= <k_make_array_u_1182@65:1>) && <fail_1486@68:0>))
        |- P[<fail_1486@68:0>](<fail_1486@68:0>:bool)
        
        P[<<array_max_1033@57:2>@60:0>](<make_array_1030@62:0>:int,0:int,<make_array_1030@62:1>:int)|- P[<make_array_1030@62:1>](
        <make_array_1030@62:0>:int,<make_array_1030@62:1>:int)
        
        P[<array_max_1033@57:1>](<array_max_1033@57:0>:int,<array_max_1033@57:1>:int),
        ((<array_max_1033@57:1> < <array_max_1033@57:0>) && (<<array_max_1033@57:2>@60:0> = <array_max_1033@57:1>))
        |- P[<<array_max_1033@57:2>@60:0>](<array_max_1033@57:0>:int,
                                           <array_max_1033@57:1>:int,
                                           <<array_max_1033@57:2>@60:0>:int)
        
         (<array_max_1033@57:1> = 0) |- P[<array_max_1033@57:1>](<array_max_1033@57:0>:int,
                                                                 <array_max_1033@57:1>:int)
      lower bounds:
        P[<array_max_1033@57:1>](<array_max_1033@57:0>:int,<array_max_1033@57:1>:int) = (<array_max_1033@57:1> = 0)
        P[<<array_max_1033@57:2>@60:0>](<array_max_1033@57:0>:int,<array_max_1033@57:1>:int,<<array_max_1033@57:2>@60:0>:int) =
        ((<array_max_1033@57:1> = 0) &&
         ((<array_max_1033@57:1> < <array_max_1033@57:0>) && (<<array_max_1033@57:2>@60:0> = <array_max_1033@57:1>)))
        P[<make_array_1030@62:1>](<make_array_1030@62:0>:int,<make_array_1030@62:1>:int) =
        ((<make_array_1030@62:1> = 0) && (0 < <make_array_1030@62:0>))
        P[<fail_1486@68:0>](<fail_1486@68:0>:bool) = false
      upper bounds:
        P[<fail_1486@68:0>](var213:bool) = true
      begin GenHcSolver.classify_pids(44874)[4]
        output:
          [<fail_1486@68:0>]
      end GenHcSolver.classify_pids(44874)[4] (0.000000 sec.)
      lb:false
      nub:false
      begin ApronInterface.convex_hull_interpolate(44877)[4]
        lb:false
        nub:false
        lb':false
        nub':false
        begin InterpProver.interpolate(44878)[5]
          begin InterpProver.interpolate_fresh(44879)[6]
            begin InterpProver.interpolate_log(44880)[7]
              input1: false
              input2: false
              begin InterpProver.interpolate_check(44881)[8]
                begin InterpProver.interpolate_simplify(44882)[9]
                  begin InterpProver.interpolate_quick(44895)[10]
                    
                  end InterpProver.interpolate_quick(44895)[10] (0.000000 sec.)
                  begin minimizing # of disjunctions(44899)[10]
                    input: false
                    output: false
                  end minimizing # of disjunctions(44899)[10] (0.000000 sec.)
                  
                end InterpProver.interpolate_simplify(44882)[9] (0.000000 sec.)
                
              end InterpProver.interpolate_check(44881)[8] (0.000000 sec.)
              output: false
            end InterpProver.interpolate_log(44880)[7] (0.000000 sec.)
            
          end InterpProver.interpolate_fresh(44879)[6] (0.001000 sec.)
          
        end InterpProver.interpolate(44878)[5] (0.001000 sec.)
        output:
          P[<fail_1486@68:0>](<fail_1486@68:0>:bool) = false
      end ApronInterface.convex_hull_interpolate(44877)[4] (0.001000 sec.)
      Horn clauses:
        P[<make_array_1030@62:1>](<k_make_array_u_1182@65:1>:int,<k_make_array_u_1182@65:0>:int),
        ((<k_make_array_u_1182@65:0> >= <k_make_array_u_1182@65:1>) && (0 <= <k_make_array_u_1182@65:0>)) |- bot
        
        P[<<array_max_1033@57:2>@60:0>](<make_array_1030@62:0>:int,0:int,<make_array_1030@62:1>:int)|- P[<make_array_1030@62:1>](
        <make_array_1030@62:0>:int,<make_array_1030@62:1>:int)
        
        P[<array_max_1033@57:1>](<array_max_1033@57:0>:int,<array_max_1033@57:1>:int),
        ((<array_max_1033@57:1> < <array_max_1033@57:0>) && (<<array_max_1033@57:2>@60:0> = <array_max_1033@57:1>))
        |- P[<<array_max_1033@57:2>@60:0>](<array_max_1033@57:0>:int,
                                           <array_max_1033@57:1>:int,
                                           <<array_max_1033@57:2>@60:0>:int)
        
         (<array_max_1033@57:1> = 0) |- P[<array_max_1033@57:1>](<array_max_1033@57:0>:int,
                                                                 <array_max_1033@57:1>:int)
      lower bounds:
        P[<array_max_1033@57:1>](<array_max_1033@57:0>:int,<array_max_1033@57:1>:int) = (<array_max_1033@57:1> = 0)
        P[<<array_max_1033@57:2>@60:0>](<array_max_1033@57:0>:int,<array_max_1033@57:1>:int,<<array_max_1033@57:2>@60:0>:int) =
        ((<array_max_1033@57:1> = 0) &&
         ((<array_max_1033@57:1> < <array_max_1033@57:0>) && (<<array_max_1033@57:2>@60:0> = <array_max_1033@57:1>)))
        P[<make_array_1030@62:1>](<make_array_1030@62:0>:int,<make_array_1030@62:1>:int) =
        ((<make_array_1030@62:1> = 0) && (0 < <make_array_1030@62:0>))
      upper bounds:
        P[<make_array_1030@62:1>](var214:int,var215:int) = ((var215 < var214) || (0 > var215))
      begin GenHcSolver.classify_pids(46758)[4]
        output:
          [<make_array_1030@62:1>]
      end GenHcSolver.classify_pids(46758)[4] (0.000000 sec.)
      lb:((<make_array_1030@62:1> = 0) && (0 < <make_array_1030@62:0>))
      nub:(not ((<make_array_1030@62:1> < <make_array_1030@62:0>) || (0 > <make_array_1030@62:1>)))
      begin ApronInterface.convex_hull_interpolate(46761)[4]
        lb:((<make_array_1030@62:1> = 0) && (0 < <make_array_1030@62:0>))
        nub:(not ((<make_array_1030@62:1> < <make_array_1030@62:0>) || (0 > <make_array_1030@62:1>)))
        lb':((<make_array_1030@62:1> = 0) && (0 < <make_array_1030@62:0>))
        nub':(not ((<make_array_1030@62:1> < <make_array_1030@62:0>) || (0 > <make_array_1030@62:1>)))
        begin InterpProver.interpolate(46762)[5]
          begin InterpProver.interpolate_fresh(46763)[6]
            begin InterpProver.interpolate_log(46764)[7]
              input1: ((<make_array_1030@62:1> = 0) && (0 < <make_array_1030@62:0>))
              input2: (not ((<make_array_1030@62:1> < <make_array_1030@62:0>) || (0 > <make_array_1030@62:1>)))
              begin InterpProver.interpolate_check(46765)[8]
                begin InterpProver.interpolate_simplify(46766)[9]
                  begin InterpProver.interpolate_quick(46817)[10]
                    begin CsisatInterface.interpolate_csisat_wrap(46826)[11]
                      begin CsisatInterface.interpolate_csisat_post_process(46827)[12]
                        begin CsisatInterface.interpolate_csisat_log(46828)[13]
                          input1: (0 = v_sep_make_array_1030_sep_62_sep_1 & 1 <= v_sep_make_array_1030_sep_62_sep_0)
                          input2: (0 <= v_sep_make_array_1030_sep_62_sep_1 & v_sep_make_array_1030_sep_62_sep_0 <= v_sep_make_array_1030_sep_62_sep_1)
                          begin CsisatInterface.interpolate_csisat_raw(46829)[14]
                            
                          end CsisatInterface.interpolate_csisat_raw(46829)[14] (0.000000 sec.)
                          output: (-2*v_sep_make_array_1030_sep_62_sep_0 + 2*v_sep_make_array_1030_sep_62_sep_1) <= -2
                          
                        end CsisatInterface.interpolate_csisat_log(46828)[13] (0.000000 sec.)
                        after simplification: (-2*v_sep_make_array_1030_sep_62_sep_0 + 2*v_sep_make_array_1030_sep_62_sep_1) <= -2
                        after dnf conversion: (((-2*v_sep_make_array_1030_sep_62_sep_0 + 2*v_sep_make_array_1030_sep_62_sep_1) <= -2))
                        
                      end CsisatInterface.interpolate_csisat_post_process(46827)[12] (0.000000 sec.)
                      
                    end CsisatInterface.interpolate_csisat_wrap(46826)[11] (0.000000 sec.)
                    
                  end InterpProver.interpolate_quick(46817)[10] (0.001000 sec.)
                  
                end InterpProver.interpolate_simplify(46766)[9] (0.001000 sec.)
                
              end InterpProver.interpolate_check(46765)[8] (0.001000 sec.)
              output: ((1 + <make_array_1030@62:1>) <= <make_array_1030@62:0>)
            end InterpProver.interpolate_log(46764)[7] (0.001000 sec.)
            
          end InterpProver.interpolate_fresh(46763)[6] (0.001000 sec.)
          
        end InterpProver.interpolate(46762)[5] (0.001000 sec.)
        output:
          P[<make_array_1030@62:1>](<make_array_1030@62:0>:int,<make_array_1030@62:1>:int) =
          ((1 + <make_array_1030@62:1>) <= <make_array_1030@62:0>)
      end ApronInterface.convex_hull_interpolate(46761)[4] (0.001000 sec.)
      Horn clauses:
        P[<<array_max_1033@57:2>@60:0>](<make_array_1030@62:0>:int,0:int,<make_array_1030@62:1>:int),
        ((1 + <make_array_1030@62:1>) > <make_array_1030@62:0>) |- bot
        
        P[<array_max_1033@57:1>](<array_max_1033@57:0>:int,<array_max_1033@57:1>:int),
        ((<array_max_1033@57:1> < <array_max_1033@57:0>) && (<<array_max_1033@57:2>@60:0> = <array_max_1033@57:1>))
        |- P[<<array_max_1033@57:2>@60:0>](<array_max_1033@57:0>:int,
                                           <array_max_1033@57:1>:int,
                                           <<array_max_1033@57:2>@60:0>:int)
        
         (<array_max_1033@57:1> = 0) |- P[<array_max_1033@57:1>](<array_max_1033@57:0>:int,
                                                                 <array_max_1033@57:1>:int)
      lower bounds:
        P[<array_max_1033@57:1>](<array_max_1033@57:0>:int,<array_max_1033@57:1>:int) = (<array_max_1033@57:1> = 0)
        P[<<array_max_1033@57:2>@60:0>](<array_max_1033@57:0>:int,<array_max_1033@57:1>:int,<<array_max_1033@57:2>@60:0>:int) =
        ((<array_max_1033@57:1> = 0) &&
         ((<array_max_1033@57:1> < <array_max_1033@57:0>) && (<<array_max_1033@57:2>@60:0> = <array_max_1033@57:1>)))
      upper bounds:
        P[<<array_max_1033@57:2>@60:0>](var216:int,var217:int,var218:int) = ((var217 <> 0) || ((1 + var218) <= var216))
      begin GenHcSolver.classify_pids(48267)[4]
        output:
          [<<array_max_1033@57:2>@60:0>]
      end GenHcSolver.classify_pids(48267)[4] (0.000000 sec.)
      lb:((<array_max_1033@57:1> = 0) &&
          ((<array_max_1033@57:1> < <array_max_1033@57:0>) && (<<array_max_1033@57:2>@60:0> = <array_max_1033@57:1>)))
      nub:(not ((<array_max_1033@57:1> <> 0) || ((1 + <<array_max_1033@57:2>@60:0>) <= <array_max_1033@57:0>)))
      begin ApronInterface.convex_hull_interpolate(48270)[4]
        lb:((<array_max_1033@57:1> = 0) &&
            ((<array_max_1033@57:1> < <array_max_1033@57:0>) && (<<array_max_1033@57:2>@60:0> = <array_max_1033@57:1>)))
        nub:(not ((<array_max_1033@57:1> <> 0) || ((1 + <<array_max_1033@57:2>@60:0>) <= <array_max_1033@57:0>)))
        lb':((<array_max_1033@57:1> = 0) &&
             ((<array_max_1033@57:1> < <array_max_1033@57:0>) && (<<array_max_1033@57:2>@60:0> = <array_max_1033@57:1>)))
        nub':(not ((<array_max_1033@57:1> <> 0) || ((1 + <<array_max_1033@57:2>@60:0>) <= <array_max_1033@57:0>)))
        begin InterpProver.interpolate(48271)[5]
          begin InterpProver.interpolate_fresh(48272)[6]
            begin InterpProver.interpolate_log(48273)[7]
              input1: ((<array_max_1033@57:1> = 0) &&
                       ((<array_max_1033@57:1> < <array_max_1033@57:0>) &&
                        (<<array_max_1033@57:2>@60:0> = <array_max_1033@57:1>)))
              input2: (not
                         ((<array_max_1033@57:1> <> 0) || ((1 + <<array_max_1033@57:2>@60:0>) <= <array_max_1033@57:0>)))
              begin InterpProver.interpolate_check(48274)[8]
                begin InterpProver.interpolate_simplify(48275)[9]
                  begin InterpProver.interpolate_quick(48366)[10]
                    begin CsisatInterface.interpolate_csisat_wrap(48375)[11]
                      begin CsisatInterface.interpolate_csisat_post_process(48376)[12]
                        begin CsisatInterface.interpolate_csisat_log(48377)[13]
                          input1: (0 = v_sep_array_max_1033_sep_57_sep_1 & v_sep_array_max_1033_sep_57_sep_1 = v_sep_array_max_1033_sep_57_sep_2_sep_60_sep_0 & (1 + v_sep_array_max_1033_sep_57_sep_1) <= v_sep_array_max_1033_sep_57_sep_0)
                          input2: (0 = v_sep_array_max_1033_sep_57_sep_1 & (1 + v_sep_array_max_1033_sep_57_sep_0) <= (1 + v_sep_array_max_1033_sep_57_sep_2_sep_60_sep_0))
                          begin CsisatInterface.interpolate_csisat_raw(48378)[14]
                            
                          end CsisatInterface.interpolate_csisat_raw(48378)[14] (0.000000 sec.)
                          output: (-2*v_sep_array_max_1033_sep_57_sep_0 + 2*v_sep_array_max_1033_sep_57_sep_2_sep_60_sep_0) <= -2
                          
                        end CsisatInterface.interpolate_csisat_log(48377)[13] (0.000999 sec.)
                        after simplification: (-2*v_sep_array_max_1033_sep_57_sep_0 + 2*v_sep_array_max_1033_sep_57_sep_2_sep_60_sep_0) <= -2
                        after dnf conversion: (((-2*v_sep_array_max_1033_sep_57_sep_0 + 2*v_sep_array_max_1033_sep_57_sep_2_sep_60_sep_0) <= -2))
                        
                      end CsisatInterface.interpolate_csisat_post_process(48376)[12] (0.000999 sec.)
                      
                    end CsisatInterface.interpolate_csisat_wrap(48375)[11] (0.000999 sec.)
                    
                  end InterpProver.interpolate_quick(48366)[10] (0.000999 sec.)
                  
                end InterpProver.interpolate_simplify(48275)[9] (0.000999 sec.)
                
              end InterpProver.interpolate_check(48274)[8] (0.000999 sec.)
              output: ((1 + <<array_max_1033@57:2>@60:0>) <= <array_max_1033@57:0>)
            end InterpProver.interpolate_log(48273)[7] (0.000999 sec.)
            
          end InterpProver.interpolate_fresh(48272)[6] (0.000999 sec.)
          
        end InterpProver.interpolate(48271)[5] (0.000999 sec.)
        output:
          P[<<array_max_1033@57:2>@60:0>](<array_max_1033@57:0>:int,<array_max_1033@57:1>:int,<<array_max_1033@57:2>@60:0>:int) =
          ((1 + <<array_max_1033@57:2>@60:0>) <= <array_max_1033@57:0>)
      end ApronInterface.convex_hull_interpolate(48270)[4] (0.000999 sec.)
      Horn clauses:
         (<array_max_1033@57:1> = 0) |- P[<array_max_1033@57:1>](<array_max_1033@57:0>:int,
                                                                 <array_max_1033@57:1>:int)
      lower bounds:
        P[<array_max_1033@57:1>](<array_max_1033@57:0>:int,<array_max_1033@57:1>:int) = (<array_max_1033@57:1> = 0)
      upper bounds:
        P[<array_max_1033@57:1>](var219:int,var220:int) = true
      begin GenHcSolver.classify_pids(48785)[4]
        output:
          [<array_max_1033@57:1>]
      end GenHcSolver.classify_pids(48785)[4] (0.000000 sec.)
      lb:(<array_max_1033@57:1> = 0)
      nub:false
      begin ApronInterface.convex_hull_interpolate(48788)[4]
        lb:(<array_max_1033@57:1> = 0)
        nub:false
        lb':(<array_max_1033@57:1> = 0)
        nub':false
        begin InterpProver.interpolate(48789)[5]
          begin InterpProver.interpolate_fresh(48790)[6]
            begin InterpProver.interpolate_log(48791)[7]
              input1: (<array_max_1033@57:1> = 0)
              input2: false
              begin InterpProver.interpolate_check(48792)[8]
                begin InterpProver.interpolate_simplify(48793)[9]
                  begin InterpProver.interpolate_quick(48812)[10]
                    
                  end InterpProver.interpolate_quick(48812)[10] (0.000000 sec.)
                  
                end InterpProver.interpolate_simplify(48793)[9] (0.000000 sec.)
                
              end InterpProver.interpolate_check(48792)[8] (0.000000 sec.)
              output: true
            end InterpProver.interpolate_log(48791)[7] (0.000000 sec.)
            
          end InterpProver.interpolate_fresh(48790)[6] (0.000000 sec.)
          
        end InterpProver.interpolate(48789)[5] (0.000000 sec.)
        output:
          P[<array_max_1033@57:1>](<array_max_1033@57:0>:int,<array_max_1033@57:1>:int) = true
      end ApronInterface.convex_hull_interpolate(48788)[4] (0.000000 sec.)
      begin HcSolver.check_validity(48876)[4]
        input:
          P[<fail_1486@68:0>](<fail_1486@68:0>:bool)|- bot
          
          P[<make_array_1030@62:1>](<k_make_array_u_1182@65:1>:int,<k_make_array_u_1182@65:0>:int),
          ((0 <= <k_make_array_u_1182@65:0>) &&
           ((<k_make_array_u_1182@65:0> >= <k_make_array_u_1182@65:1>) && <fail_1486@68:0>))
          |- P[<fail_1486@68:0>](<fail_1486@68:0>:bool)
          
          P[<<array_max_1033@57:2>@60:0>](<make_array_1030@62:0>:int,0:int,<make_array_1030@62:1>:int)|- P[<make_array_1030@62:1>](
          <make_array_1030@62:0>:int,<make_array_1030@62:1>:int)
          
          P[<array_max_1033@57:1>](<array_max_1033@57:0>:int,<array_max_1033@57:1>:int),
          ((<array_max_1033@57:1> < <array_max_1033@57:0>) && (<<array_max_1033@57:2>@60:0> = <array_max_1033@57:1>))
          |- P[<<array_max_1033@57:2>@60:0>](<array_max_1033@57:0>:int,
                                             <array_max_1033@57:1>:int,
                                             <<array_max_1033@57:2>@60:0>:int)
          
           (<array_max_1033@57:1> = 0) |- P[<array_max_1033@57:1>](<array_max_1033@57:0>:int,
                                                                   <array_max_1033@57:1>:int)
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        
      end HcSolver.check_validity(48876)[4] (0.001000 sec.)
      solution:
        P[<fail_1486@68:0>](<fail_1486@68:0>:bool) = false
        P[<make_array_1030@62:1>](<make_array_1030@62:0>:int,<make_array_1030@62:1>:int) =
        ((1 + <make_array_1030@62:1>) <= <make_array_1030@62:0>)
        P[<<array_max_1033@57:2>@60:0>](<array_max_1033@57:0>:int,<array_max_1033@57:1>:int,<<array_max_1033@57:2>@60:0>:int) =
        ((1 + <<array_max_1033@57:2>@60:0>) <= <array_max_1033@57:0>)
        P[<array_max_1033@57:1>](<array_max_1033@57:0>:int,<array_max_1033@57:1>:int) = true
    end GenHcSolver.solve(43312)[3] (0.030995 sec.)
    begin GenHcSolver.solve(49218)[3]
      Horn clauses:
        P[<fail_1486@68:0>](<fail_1486@68:0>:bool)|- bot
        
        P[<make_array_1030@62:1>](<k_make_array_u_1182@65:1>:int,<k_make_array_u_1182@65:0>:int),
        ((0 <= <k_make_array_u_1182@65:0>) &&
         ((<k_make_array_u_1182@65:0> >= <k_make_array_u_1182@65:1>) && <fail_1486@68:0>))
        |- P[<fail_1486@68:0>](<fail_1486@68:0>:bool)
        
        P[<<array_max_1033@57:2>@60:0>](<make_array_1030@62:0>:int,0:int,<make_array_1030@62:1>:int)|- P[<make_array_1030@62:1>](
        <make_array_1030@62:0>:int,<make_array_1030@62:1>:int)
        
        P[<array_max_1033@57:1>](<array_max_1033@57:0>:int,<array_max_1033@57:1>:int),
        ((<array_max_1033@57:1> < <array_max_1033@57:0>) && (<<array_max_1033@57:2>@60:0> = <array_max_1033@57:1>))
        |- P[<<array_max_1033@57:2>@60:0>](<array_max_1033@57:0>:int,
                                           <array_max_1033@57:1>:int,
                                           <<array_max_1033@57:2>@60:0>:int)
        
         (<array_max_1033@57:1> = 0) |- P[<array_max_1033@57:1>](<array_max_1033@57:0>:int,
                                                                 <array_max_1033@57:1>:int)
      lower bounds:
        P[<array_max_1033@57:1>](<array_max_1033@57:0>:int,<array_max_1033@57:1>:int) = (<array_max_1033@57:1> = 0)
        P[<<array_max_1033@57:2>@60:0>](<array_max_1033@57:0>:int,<array_max_1033@57:1>:int,<<array_max_1033@57:2>@60:0>:int) =
        ((<array_max_1033@57:1> = 0) &&
         ((<array_max_1033@57:1> < <array_max_1033@57:0>) && (<<array_max_1033@57:2>@60:0> = <array_max_1033@57:1>)))
        P[<make_array_1030@62:1>](<make_array_1030@62:0>:int,<make_array_1030@62:1>:int) =
        ((<make_array_1030@62:1> = 0) && (0 < <make_array_1030@62:0>))
        P[<fail_1486@68:0>](<fail_1486@68:0>:bool) = false
      upper bounds:
        P[<fail_1486@68:0>](var222:bool) = true
      begin GenHcSolver.classify_pids(50780)[4]
        output:
          [<fail_1486@68:0>]
      end GenHcSolver.classify_pids(50780)[4] (0.000000 sec.)
      lb:false
      nub:false
      begin ApronInterface.convex_hull_interpolate(50783)[4]
        lb:false
        nub:false
        begin ExtFormula.Formula.case_analysis_boolean(50786)[5]
          ts: false
          
        end ExtFormula.Formula.case_analysis_boolean(50786)[5] (0.000000 sec.)
        begin ExtFormula.Formula.case_analysis_boolean(50791)[5]
          ts: false
          
        end ExtFormula.Formula.case_analysis_boolean(50791)[5] (0.000000 sec.)
        lb':(-1 >= 0)
        nub':(-1 >= 0)
        begin InterpProver.interpolate(50794)[5]
          begin InterpProver.interpolate_fresh(50795)[6]
            begin InterpProver.interpolate_log(50796)[7]
              input1: (-1 >= 0)
              input2: (-1 >= 0)
              begin InterpProver.interpolate_check(50797)[8]
                begin InterpProver.interpolate_simplify(50798)[9]
                  begin InterpProver.interpolate_quick(50813)[10]
                    
                  end InterpProver.interpolate_quick(50813)[10] (0.000000 sec.)
                  begin minimizing # of disjunctions(50817)[10]
                    input: false
                    output: false
                  end minimizing # of disjunctions(50817)[10] (0.000000 sec.)
                  
                end InterpProver.interpolate_simplify(50798)[9] (0.000000 sec.)
                
              end InterpProver.interpolate_check(50797)[8] (0.001000 sec.)
              output: false
            end InterpProver.interpolate_log(50796)[7] (0.001000 sec.)
            
          end InterpProver.interpolate_fresh(50795)[6] (0.001000 sec.)
          
        end InterpProver.interpolate(50794)[5] (0.001000 sec.)
        output:
          P[<fail_1486@68:0>](<fail_1486@68:0>:bool) = false
      end ApronInterface.convex_hull_interpolate(50783)[4] (0.001000 sec.)
      Horn clauses:
        P[<make_array_1030@62:1>](<k_make_array_u_1182@65:1>:int,<k_make_array_u_1182@65:0>:int),
        ((<k_make_array_u_1182@65:0> >= <k_make_array_u_1182@65:1>) && (0 <= <k_make_array_u_1182@65:0>)) |- bot
        
        P[<<array_max_1033@57:2>@60:0>](<make_array_1030@62:0>:int,0:int,<make_array_1030@62:1>:int)|- P[<make_array_1030@62:1>](
        <make_array_1030@62:0>:int,<make_array_1030@62:1>:int)
        
        P[<array_max_1033@57:1>](<array_max_1033@57:0>:int,<array_max_1033@57:1>:int),
        ((<array_max_1033@57:1> < <array_max_1033@57:0>) && (<<array_max_1033@57:2>@60:0> = <array_max_1033@57:1>))
        |- P[<<array_max_1033@57:2>@60:0>](<array_max_1033@57:0>:int,
                                           <array_max_1033@57:1>:int,
                                           <<array_max_1033@57:2>@60:0>:int)
        
         (<array_max_1033@57:1> = 0) |- P[<array_max_1033@57:1>](<array_max_1033@57:0>:int,
                                                                 <array_max_1033@57:1>:int)
      lower bounds:
        P[<array_max_1033@57:1>](<array_max_1033@57:0>:int,<array_max_1033@57:1>:int) = (<array_max_1033@57:1> = 0)
        P[<<array_max_1033@57:2>@60:0>](<array_max_1033@57:0>:int,<array_max_1033@57:1>:int,<<array_max_1033@57:2>@60:0>:int) =
        ((<array_max_1033@57:1> = 0) &&
         ((<array_max_1033@57:1> < <array_max_1033@57:0>) && (<<array_max_1033@57:2>@60:0> = <array_max_1033@57:1>)))
        P[<make_array_1030@62:1>](<make_array_1030@62:0>:int,<make_array_1030@62:1>:int) =
        ((<make_array_1030@62:1> = 0) && (0 < <make_array_1030@62:0>))
      upper bounds:
        P[<make_array_1030@62:1>](var223:int,var224:int) = ((var224 < var223) || (0 > var224))
      begin GenHcSolver.classify_pids(52683)[4]
        output:
          [<make_array_1030@62:1>]
      end GenHcSolver.classify_pids(52683)[4] (0.000000 sec.)
      lb:((<make_array_1030@62:1> = 0) && (0 < <make_array_1030@62:0>))
      nub:(not ((<make_array_1030@62:1> < <make_array_1030@62:0>) || (0 > <make_array_1030@62:1>)))
      begin ApronInterface.convex_hull_interpolate(52686)[4]
        lb:((<make_array_1030@62:1> = 0) && (0 < <make_array_1030@62:0>))
        nub:(not ((<make_array_1030@62:1> < <make_array_1030@62:0>) || (0 > <make_array_1030@62:1>)))
        begin ExtFormula.Formula.case_analysis_boolean(52696)[5]
          ts: ((<make_array_1030@62:1> = 0) && (0 < <make_array_1030@62:0>))
          
        end ExtFormula.Formula.case_analysis_boolean(52696)[5] (0.000000 sec.)
        begin ExtFormula.Formula.case_analysis_boolean(52715)[5]
          ts: ((<make_array_1030@62:1> >= <make_array_1030@62:0>) && (0 <= <make_array_1030@62:1>))
          
        end ExtFormula.Formula.case_analysis_boolean(52715)[5] (0.001000 sec.)
        lb':((<make_array_1030@62:1> = 0) && ((-1 + <make_array_1030@62:0>) >= 0))
        nub':(((<make_array_1030@62:1> + (-1 * <make_array_1030@62:0>)) >= 0) && (<make_array_1030@62:1> >= 0))
        begin InterpProver.interpolate(52721)[5]
          begin InterpProver.interpolate_fresh(52722)[6]
            begin InterpProver.interpolate_log(52723)[7]
              input1: ((<make_array_1030@62:1> = 0) && ((-1 + <make_array_1030@62:0>) >= 0))
              input2: (((<make_array_1030@62:1> + (-1 * <make_array_1030@62:0>)) >= 0) && (<make_array_1030@62:1> >= 0))
              begin InterpProver.interpolate_check(52724)[8]
                begin InterpProver.interpolate_simplify(52725)[9]
                  begin InterpProver.interpolate_quick(52782)[10]
                    begin CsisatInterface.interpolate_csisat_wrap(52791)[11]
                      begin CsisatInterface.interpolate_csisat_post_process(52792)[12]
                        begin CsisatInterface.interpolate_csisat_log(52793)[13]
                          input1: (0 = v_sep_make_array_1030_sep_62_sep_1 & 1 <= v_sep_make_array_1030_sep_62_sep_0)
                          input2: (0 <= v_sep_make_array_1030_sep_62_sep_1 & v_sep_make_array_1030_sep_62_sep_0 <= v_sep_make_array_1030_sep_62_sep_1)
                          begin CsisatInterface.interpolate_csisat_raw(52794)[14]
                            
                          end CsisatInterface.interpolate_csisat_raw(52794)[14] (0.000000 sec.)
                          output: (-2*v_sep_make_array_1030_sep_62_sep_0 + 2*v_sep_make_array_1030_sep_62_sep_1) <= -2
                          
                        end CsisatInterface.interpolate_csisat_log(52793)[13] (0.000000 sec.)
                        after simplification: (-2*v_sep_make_array_1030_sep_62_sep_0 + 2*v_sep_make_array_1030_sep_62_sep_1) <= -2
                        after dnf conversion: (((-2*v_sep_make_array_1030_sep_62_sep_0 + 2*v_sep_make_array_1030_sep_62_sep_1) <= -2))
                        
                      end CsisatInterface.interpolate_csisat_post_process(52792)[12] (0.000000 sec.)
                      
                    end CsisatInterface.interpolate_csisat_wrap(52791)[11] (0.000000 sec.)
                    
                  end InterpProver.interpolate_quick(52782)[10] (0.001000 sec.)
                  
                end InterpProver.interpolate_simplify(52725)[9] (0.001000 sec.)
                
              end InterpProver.interpolate_check(52724)[8] (0.001000 sec.)
              output: ((1 + <make_array_1030@62:1>) <= <make_array_1030@62:0>)
            end InterpProver.interpolate_log(52723)[7] (0.001000 sec.)
            
          end InterpProver.interpolate_fresh(52722)[6] (0.001000 sec.)
          
        end InterpProver.interpolate(52721)[5] (0.001000 sec.)
        output:
          P[<make_array_1030@62:1>](<make_array_1030@62:0>:int,<make_array_1030@62:1>:int) =
          ((1 + <make_array_1030@62:1>) <= <make_array_1030@62:0>)
      end ApronInterface.convex_hull_interpolate(52686)[4] (0.002000 sec.)
      Horn clauses:
        P[<<array_max_1033@57:2>@60:0>](<make_array_1030@62:0>:int,0:int,<make_array_1030@62:1>:int),
        ((1 + <make_array_1030@62:1>) > <make_array_1030@62:0>) |- bot
        
        P[<array_max_1033@57:1>](<array_max_1033@57:0>:int,<array_max_1033@57:1>:int),
        ((<array_max_1033@57:1> < <array_max_1033@57:0>) && (<<array_max_1033@57:2>@60:0> = <array_max_1033@57:1>))
        |- P[<<array_max_1033@57:2>@60:0>](<array_max_1033@57:0>:int,
                                           <array_max_1033@57:1>:int,
                                           <<array_max_1033@57:2>@60:0>:int)
        
         (<array_max_1033@57:1> = 0) |- P[<array_max_1033@57:1>](<array_max_1033@57:0>:int,
                                                                 <array_max_1033@57:1>:int)
      lower bounds:
        P[<array_max_1033@57:1>](<array_max_1033@57:0>:int,<array_max_1033@57:1>:int) = (<array_max_1033@57:1> = 0)
        P[<<array_max_1033@57:2>@60:0>](<array_max_1033@57:0>:int,<array_max_1033@57:1>:int,<<array_max_1033@57:2>@60:0>:int) =
        ((<array_max_1033@57:1> = 0) &&
         ((<array_max_1033@57:1> < <array_max_1033@57:0>) && (<<array_max_1033@57:2>@60:0> = <array_max_1033@57:1>)))
      upper bounds:
        P[<<array_max_1033@57:2>@60:0>](var225:int,var226:int,var227:int) = ((var226 <> 0) || ((1 + var227) <= var225))
      begin GenHcSolver.classify_pids(54232)[4]
        output:
          [<<array_max_1033@57:2>@60:0>]
      end GenHcSolver.classify_pids(54232)[4] (0.000000 sec.)
      lb:((<array_max_1033@57:1> = 0) &&
          ((<array_max_1033@57:1> < <array_max_1033@57:0>) && (<<array_max_1033@57:2>@60:0> = <array_max_1033@57:1>)))
      nub:(not ((<array_max_1033@57:1> <> 0) || ((1 + <<array_max_1033@57:2>@60:0>) <= <array_max_1033@57:0>)))
      begin ApronInterface.convex_hull_interpolate(54235)[4]
        lb:((<array_max_1033@57:1> = 0) &&
            ((<array_max_1033@57:1> < <array_max_1033@57:0>) && (<<array_max_1033@57:2>@60:0> = <array_max_1033@57:1>)))
        nub:(not ((<array_max_1033@57:1> <> 0) || ((1 + <<array_max_1033@57:2>@60:0>) <= <array_max_1033@57:0>)))
        begin ExtFormula.Formula.case_analysis_boolean(54264)[5]
          ts: ((<array_max_1033@57:1> = 0) &&
               ((<array_max_1033@57:1> < <array_max_1033@57:0>) &&
                (<<array_max_1033@57:2>@60:0> = <array_max_1033@57:1>)))
          
        end ExtFormula.Formula.case_analysis_boolean(54264)[5] (0.000000 sec.)
        begin ExtFormula.Formula.case_analysis_boolean(54287)[5]
          ts: ((<array_max_1033@57:1> = 0) && ((1 + <<array_max_1033@57:2>@60:0>) > <array_max_1033@57:0>))
          
        end ExtFormula.Formula.case_analysis_boolean(54287)[5] (0.000000 sec.)
        lb':((<<array_max_1033@57:2>@60:0> = 0) && ((<array_max_1033@57:1> = 0) && ((-1 + <array_max_1033@57:0>) >= 0)))
        nub':((<array_max_1033@57:1> = 0) && ((<<array_max_1033@57:2>@60:0> + (-1 * <array_max_1033@57:0>)) >= 0))
        begin InterpProver.interpolate(54294)[5]
          begin InterpProver.interpolate_fresh(54295)[6]
            begin InterpProver.interpolate_log(54296)[7]
              input1: ((<<array_max_1033@57:2>@60:0> = 0) &&
                       ((<array_max_1033@57:1> = 0) && ((-1 + <array_max_1033@57:0>) >= 0)))
              input2: ((<array_max_1033@57:1> = 0) &&
                       ((<<array_max_1033@57:2>@60:0> + (-1 * <array_max_1033@57:0>)) >= 0))
              begin InterpProver.interpolate_check(54297)[8]
                begin InterpProver.interpolate_simplify(54298)[9]
                  begin InterpProver.interpolate_quick(54369)[10]
                    begin CsisatInterface.interpolate_csisat_wrap(54378)[11]
                      begin CsisatInterface.interpolate_csisat_post_process(54379)[12]
                        begin CsisatInterface.interpolate_csisat_log(54380)[13]
                          input1: (0 = v_sep_array_max_1033_sep_57_sep_1 & 0 = v_sep_array_max_1033_sep_57_sep_2_sep_60_sep_0 & 1 <= v_sep_array_max_1033_sep_57_sep_0)
                          input2: (0 = v_sep_array_max_1033_sep_57_sep_1 & v_sep_array_max_1033_sep_57_sep_0 <= v_sep_array_max_1033_sep_57_sep_2_sep_60_sep_0)
                          begin CsisatInterface.interpolate_csisat_raw(54381)[14]
                            
                          end CsisatInterface.interpolate_csisat_raw(54381)[14] (0.000000 sec.)
                          output: (-2*v_sep_array_max_1033_sep_57_sep_0 + 2*v_sep_array_max_1033_sep_57_sep_2_sep_60_sep_0) <= -2
                          
                        end CsisatInterface.interpolate_csisat_log(54380)[13] (0.000000 sec.)
                        after simplification: (-2*v_sep_array_max_1033_sep_57_sep_0 + 2*v_sep_array_max_1033_sep_57_sep_2_sep_60_sep_0) <= -2
                        after dnf conversion: (((-2*v_sep_array_max_1033_sep_57_sep_0 + 2*v_sep_array_max_1033_sep_57_sep_2_sep_60_sep_0) <= -2))
                        
                      end CsisatInterface.interpolate_csisat_post_process(54379)[12] (0.000000 sec.)
                      
                    end CsisatInterface.interpolate_csisat_wrap(54378)[11] (0.000000 sec.)
                    
                  end InterpProver.interpolate_quick(54369)[10] (0.001000 sec.)
                  
                end InterpProver.interpolate_simplify(54298)[9] (0.001000 sec.)
                
              end InterpProver.interpolate_check(54297)[8] (0.001000 sec.)
              output: ((1 + <<array_max_1033@57:2>@60:0>) <= <array_max_1033@57:0>)
            end InterpProver.interpolate_log(54296)[7] (0.001999 sec.)
            
          end InterpProver.interpolate_fresh(54295)[6] (0.001999 sec.)
          
        end InterpProver.interpolate(54294)[5] (0.001999 sec.)
        output:
          P[<<array_max_1033@57:2>@60:0>](<array_max_1033@57:0>:int,<array_max_1033@57:1>:int,<<array_max_1033@57:2>@60:0>:int) =
          ((1 + <<array_max_1033@57:2>@60:0>) <= <array_max_1033@57:0>)
      end ApronInterface.convex_hull_interpolate(54235)[4] (0.001999 sec.)
      Horn clauses:
         (<array_max_1033@57:1> = 0) |- P[<array_max_1033@57:1>](<array_max_1033@57:0>:int,
                                                                 <array_max_1033@57:1>:int)
      lower bounds:
        P[<array_max_1033@57:1>](<array_max_1033@57:0>:int,<array_max_1033@57:1>:int) = (<array_max_1033@57:1> = 0)
      upper bounds:
        P[<array_max_1033@57:1>](var228:int,var229:int) = true
      begin GenHcSolver.classify_pids(54786)[4]
        output:
          [<array_max_1033@57:1>]
      end GenHcSolver.classify_pids(54786)[4] (0.000000 sec.)
      lb:(<array_max_1033@57:1> = 0)
      nub:false
      begin ApronInterface.convex_hull_interpolate(54789)[4]
        lb:(<array_max_1033@57:1> = 0)
        nub:false
        begin ExtFormula.Formula.case_analysis_boolean(54793)[5]
          ts: (<array_max_1033@57:1> = 0)
          
        end ExtFormula.Formula.case_analysis_boolean(54793)[5] (0.000000 sec.)
        begin ExtFormula.Formula.case_analysis_boolean(54799)[5]
          ts: false
          
        end ExtFormula.Formula.case_analysis_boolean(54799)[5] (0.000000 sec.)
        lb':(<array_max_1033@57:1> = 0)
        nub':(-1 >= 0)
        begin InterpProver.interpolate(54802)[5]
          begin InterpProver.interpolate_fresh(54803)[6]
            begin InterpProver.interpolate_log(54804)[7]
              input1: (<array_max_1033@57:1> = 0)
              input2: (-1 >= 0)
              begin InterpProver.interpolate_check(54805)[8]
                begin InterpProver.interpolate_simplify(54806)[9]
                  begin InterpProver.interpolate_quick(54826)[10]
                    
                  end InterpProver.interpolate_quick(54826)[10] (0.000000 sec.)
                  
                end InterpProver.interpolate_simplify(54806)[9] (0.000000 sec.)
                
              end InterpProver.interpolate_check(54805)[8] (0.000000 sec.)
              output: true
            end InterpProver.interpolate_log(54804)[7] (0.001000 sec.)
            
          end InterpProver.interpolate_fresh(54803)[6] (0.001000 sec.)
          
        end InterpProver.interpolate(54802)[5] (0.001000 sec.)
        output:
          P[<array_max_1033@57:1>](<array_max_1033@57:0>:int,<array_max_1033@57:1>:int) = true
      end ApronInterface.convex_hull_interpolate(54789)[4] (0.001000 sec.)
      begin HcSolver.check_validity(54892)[4]
        input:
          P[<fail_1486@68:0>](<fail_1486@68:0>:bool)|- bot
          
          P[<make_array_1030@62:1>](<k_make_array_u_1182@65:1>:int,<k_make_array_u_1182@65:0>:int),
          ((0 <= <k_make_array_u_1182@65:0>) &&
           ((<k_make_array_u_1182@65:0> >= <k_make_array_u_1182@65:1>) && <fail_1486@68:0>))
          |- P[<fail_1486@68:0>](<fail_1486@68:0>:bool)
          
          P[<<array_max_1033@57:2>@60:0>](<make_array_1030@62:0>:int,0:int,<make_array_1030@62:1>:int)|- P[<make_array_1030@62:1>](
          <make_array_1030@62:0>:int,<make_array_1030@62:1>:int)
          
          P[<array_max_1033@57:1>](<array_max_1033@57:0>:int,<array_max_1033@57:1>:int),
          ((<array_max_1033@57:1> < <array_max_1033@57:0>) && (<<array_max_1033@57:2>@60:0> = <array_max_1033@57:1>))
          |- P[<<array_max_1033@57:2>@60:0>](<array_max_1033@57:0>:int,
                                             <array_max_1033@57:1>:int,
                                             <<array_max_1033@57:2>@60:0>:int)
          
           (<array_max_1033@57:1> = 0) |- P[<array_max_1033@57:1>](<array_max_1033@57:0>:int,
                                                                   <array_max_1033@57:1>:int)
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        
      end HcSolver.check_validity(54892)[4] (0.005999 sec.)
      solution:
        P[<fail_1486@68:0>](<fail_1486@68:0>:bool) = false
        P[<make_array_1030@62:1>](<make_array_1030@62:0>:int,<make_array_1030@62:1>:int) =
        ((1 + <make_array_1030@62:1>) <= <make_array_1030@62:0>)
        P[<<array_max_1033@57:2>@60:0>](<array_max_1033@57:0>:int,<array_max_1033@57:1>:int,<<array_max_1033@57:2>@60:0>:int) =
        ((1 + <<array_max_1033@57:2>@60:0>) <= <array_max_1033@57:0>)
        P[<array_max_1033@57:1>](<array_max_1033@57:0>:int,<array_max_1033@57:1>:int) = true
    end GenHcSolver.solve(49218)[3] (0.039994 sec.)
    begin YhornInterface.solve(55234)[3]
      begin HcSolver.solve_ub(55235)[4]
        encoded:
          P[<fail_1486@68:0>](<fail_1486@68:0>:int)|- bot
          
          P[<make_array_1030@62:1>](<k_make_array_u_1182@65:1>:int,<k_make_array_u_1182@65:0>:int),
          ((0 <= <k_make_array_u_1182@65:0>) &&
           ((<k_make_array_u_1182@65:0> >= <k_make_array_u_1182@65:1>) && (<fail_1486@68:0> = 1)))
          |- P[<fail_1486@68:0>](<fail_1486@68:0>:int)
          
          P[<<array_max_1033@57:2>@60:0>](<make_array_1030@62:0>:int,0:int,<make_array_1030@62:1>:int)|- P[<make_array_1030@62:1>](
          <make_array_1030@62:0>:int,<make_array_1030@62:1>:int)
          
          P[<array_max_1033@57:1>](<array_max_1033@57:0>:int,<array_max_1033@57:1>:int),
          ((<array_max_1033@57:1> < <array_max_1033@57:0>) && (<<array_max_1033@57:2>@60:0> = <array_max_1033@57:1>))
          |- P[<<array_max_1033@57:2>@60:0>](<array_max_1033@57:0>:int,
                                             <array_max_1033@57:1>:int,
                                             <<array_max_1033@57:2>@60:0>:int)
          
           (<array_max_1033@57:1> = 0) |- P[<array_max_1033@57:1>](<array_max_1033@57:0>:int,
                                                                   <array_max_1033@57:1>:int)
        input to Yhorn:
          P[<fail_1486@68:0>](<fail_1486@68:0>:int)|- bot
          
          P[<make_array_1030@62:1>](<k_make_array_u_1182@65:1>:int,<k_make_array_u_1182@65:0>:int),
          ((<k_make_array_u_1182@65:0> >= <k_make_array_u_1182@65:1>) &&
           ((0 <= <k_make_array_u_1182@65:0>) && (<fail_1486@68:0> = 1))) |- P[<fail_1486@68:0>](
          <fail_1486@68:0>:int)
          
          P[<<array_max_1033@57:2>@60:0>](<make_array_1030@62:0>:int,var230:int,<make_array_1030@62:1>:int),
          (var230 = 0) |- P[<make_array_1030@62:1>](<make_array_1030@62:0>:int,
                                                    <make_array_1030@62:1>:int)
          
          P[<array_max_1033@57:1>](<array_max_1033@57:0>:int,<array_max_1033@57:1>:int),
          ((<<array_max_1033@57:2>@60:0> = <array_max_1033@57:1>) && (<array_max_1033@57:1> < <array_max_1033@57:0>))
          |- P[<<array_max_1033@57:2>@60:0>](<array_max_1033@57:0>:int,
                                             <array_max_1033@57:1>:int,
                                             <<array_max_1033@57:2>@60:0>:int)
          Yhorn (Wed Sep 25 10:52:05 JST 2013)


(0=0) & (v_sep_fail_1486_sep_68_sep_0($240)) -> 1=0.
(($240-1=0) & (-$241<=0) & ($241-$242>=0)) & (v_sep_make_array_1030_sep_62_sep_1($242,$241)) -> v_sep_fail_1486_sep_68_sep_0($240).
($243=0) & (v_sep_array_max_1033_sep_57_sep_2_sep_60_sep_0($244,$243,$245)) -> v_sep_make_array_1030_sep_62_sep_1($244,$245).
(($246-$247<0) & (-$246+$248=0)) & (v_sep_array_max_1033_sep_57_sep_1($247,$246)) -> v_sep_array_max_1033_sep_57_sep_2_sep_60_sep_0($247,$246,$248).
$246=0 -> v_sep_array_max_1033_sep_57_sep_1($247,$246).


v_sep_array_max_1033_sep_57_sep_1: X
v_sep_array_max_1033_sep_57_sep_2_sep_60_sep_0: X
v_sep_fail_1486_sep_68_sep_0: X
v_sep_make_array_1030_sep_62_sep_1: X
.....
v_sep_array_max_1033_sep_57_sep_1: X
v_sep_array_max_1033_sep_57_sep_2_sep_60_sep_0: X
v_sep_fail_1486_sep_68_sep_0: X
v_sep_make_array_1030_sep_62_sep_1: X
...
v_sep_array_max_1033_sep_57_sep_1: X
v_sep_array_max_1033_sep_57_sep_2_sep_60_sep_0: X
v_sep_fail_1486_sep_68_sep_0: X
v_sep_make_array_1030_sep_62_sep_1: X
....
v_sep_array_max_1033_sep_57_sep_1: X
v_sep_array_max_1033_sep_57_sep_2_sep_60_sep_0: X
v_sep_fail_1486_sep_68_sep_0: X
v_sep_make_array_1030_sep_62_sep_1: X
.....
v_sep_array_max_1033_sep_57_sep_1: X
v_sep_array_max_1033_sep_57_sep_2_sep_60_sep_0: X
v_sep_fail_1486_sep_68_sep_0: X
v_sep_make_array_1030_sep_62_sep_1: X
.....(0=0) & (v_sep_fail_1486_sep_68_sep_0($240)) -> 1=0.
(($240-1=0) & (-$241<=0) & ($241-$242>=0)) & (v_sep_make_array_1030_sep_62_sep_1($242,$241)) -> v_sep_fail_1486_sep_68_sep_0($240).
($243=0) & (v_sep_array_max_1033_sep_57_sep_2_sep_60_sep_0($244,$243,$245)) -> v_sep_make_array_1030_sep_62_sep_1($244,$245).
(($246-$247<0) & (-$246+$248=0)) & (v_sep_array_max_1033_sep_57_sep_1($247,$246)) -> v_sep_array_max_1033_sep_57_sep_2_sep_60_sep_0($247,$246,$248).
$246=0 -> v_sep_array_max_1033_sep_57_sep_1($247,$246).

           (<array_max_1033@57:1> = 0) |- P[<array_max_1033@57:1>](<array_max_1033@57:0>:int,
                                                                   <array_max_1033@57:1>:int)
        solution:
          P[<array_max_1033@57:1>]($264:int,$266:int) = true
          P[<<array_max_1033@57:2>@60:0>]($257:int,$259:int,$261:int) = ((1 + $261) <= $257)
          P[<fail_1486@68:0>]($249:bool) = false
          P[<make_array_1030@62:1>]($252:int,$254:int) = ((1 + $254) <= $252)
        
      end HcSolver.solve_ub(55235)[4] (0.010998 sec.)
      begin HcSolver.check_validity(55424)[4]
        input:
          P[<fail_1486@68:0>](<fail_1486@68:0>:bool)|- bot
          
          P[<make_array_1030@62:1>](<k_make_array_u_1182@65:1>:int,<k_make_array_u_1182@65:0>:int),
          ((0 <= <k_make_array_u_1182@65:0>) &&
           ((<k_make_array_u_1182@65:0> >= <k_make_array_u_1182@65:1>) && <fail_1486@68:0>))
          |- P[<fail_1486@68:0>](<fail_1486@68:0>:bool)
          
          P[<<array_max_1033@57:2>@60:0>](<make_array_1030@62:0>:int,0:int,<make_array_1030@62:1>:int)|- P[<make_array_1030@62:1>](
          <make_array_1030@62:0>:int,<make_array_1030@62:1>:int)
          
          P[<array_max_1033@57:1>](<array_max_1033@57:0>:int,<array_max_1033@57:1>:int),
          ((<array_max_1033@57:1> < <array_max_1033@57:0>) && (<<array_max_1033@57:2>@60:0> = <array_max_1033@57:1>))
          |- P[<<array_max_1033@57:2>@60:0>](<array_max_1033@57:0>:int,
                                             <array_max_1033@57:1>:int,
                                             <<array_max_1033@57:2>@60:0>:int)
          
           (<array_max_1033@57:1> = 0) |- P[<array_max_1033@57:1>](<array_max_1033@57:0>:int,
                                                                   <array_max_1033@57:1>:int)
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        
      end HcSolver.check_validity(55424)[4] (0.001000 sec.)
      solution:
        P[<array_max_1033@57:1>]($264:int,$266:int) = true
        P[<<array_max_1033@57:2>@60:0>]($257:int,$259:int,$261:int) = ((1 + $261) <= $257)
        P[<fail_1486@68:0>]($249:bool) = false
        P[<make_array_1030@62:1>]($252:int,$254:int) = ((1 + $254) <= $252)
    end YhornInterface.solve(55234)[3] (0.012998 sec.)
    
  end RefTypeInfer.infer_etrs(41779)[2] (0.296955 sec.)
  refinement types:
    main_1479: X
    f_1484: v1:int -> X
    main_1044: v1:int -> (v2:unit -> X) -> X
    array_max_1033: v1:int -> v2:int -> (v3:{v3:int | ((1 + v3) <= v1)} -> (v4:int -> X) -> X) -> (v7:int -> X) -> X
    make_array_1030: v1:int -> v2:{v2:int | ((1 + v2) <= v1)} -> (v3:int -> X) -> X
    k_make_array_u_1182: v1:int -> v2:int -> (v3:int -> X) -> v5:bool -> X
    fail_1486: v1:{v1:bool | false} -> (v2:unit -> X) -> X
    check_1148: var252:int ->
                var251:int -> var250:int -> (var249:int -> (var248:int -> X) -> X) -> (var245:unit -> X) -> X
    f_1485: var255:int -> var254:unit -> X
    f_array_max_1480: var265:int ->
                      var264:int -> (var263:int -> (var262:int -> X) -> X) -> (var259:int -> X) -> var257:int -> X
    f_array_max_1481: var272:int -> var271:int -> var270:int -> (var269:int -> X) -> var267:int -> X
    f_check_1482: var283:int ->
                  var282:int ->
                  var281:int -> (var280:int -> (var279:int -> X) -> X) -> (var276:unit -> X) -> var274:int -> X
    f_main_1483: var288:int -> (var287:unit -> X) -> var285:int -> X
    fail_1487: var292:bool -> (var291:unit -> X) -> X
    k_check_u_1336: var303:int ->
                    var302:int ->
                    var301:int -> (var300:int -> (var299:int -> X) -> X) -> (var296:unit -> X) -> var294:unit -> X
    k_make_array_u_1193: var309:int -> var308:int -> (var307:int -> X) -> var305:unit -> X
  abstraction types:
    main_1479: X
    f_1484: v1:int -> X
    main_1044: v1:int -> (v2:unit -> X) -> X
    array_max_1033: v1:int -> v2:int -> (v3:int[v3 -> ((1 + v3) <= v1)] -> (v4:int -> X) -> X) -> (v7:int -> X) -> X
    make_array_1030: v1:int -> v2:int[v2 -> ((1 + v2) <= v1)] -> (v3:int -> X) -> X
    k_make_array_u_1182: v1:int -> v2:int -> (v3:int -> X) -> v5:bool -> X
    fail_1486: v1:bool -> (v2:unit -> X) -> X
    check_1148: var252:int ->
                var251:int -> var250:int -> (var249:int -> (var248:int -> X) -> X) -> (var245:unit -> X) -> X
    f_1485: var255:int -> var254:unit -> X
    f_array_max_1480: var265:int ->
                      var264:int -> (var263:int -> (var262:int -> X) -> X) -> (var259:int -> X) -> var257:int -> X
    f_array_max_1481: var272:int -> var271:int -> var270:int -> (var269:int -> X) -> var267:int -> X
    f_check_1482: var283:int ->
                  var282:int ->
                  var281:int -> (var280:int -> (var279:int -> X) -> X) -> (var276:unit -> X) -> var274:int -> X
    f_main_1483: var288:int -> (var287:unit -> X) -> var285:int -> X
    fail_1487: var292:bool -> (var291:unit -> X) -> X
    k_check_u_1336: var303:int ->
                    var302:int ->
                    var301:int -> (var300:int -> (var299:int -> X) -> X) -> (var296:unit -> X) -> var294:unit -> X
    k_make_array_u_1193: var309:int -> var308:int -> (var307:int -> X) -> var305:unit -> X
  
end AbsTypeInfer.refine(41778)[1] (0.300955 sec.)
DONE!

Prefix of spurious counter-example::
0; 0; 0; 1; 0; 1

Program with abstraction types (CEGAR-cycle 3)::
Main: main_1479
  main_1479 -> (rand_int f_1484)
  array_max_1033 n_1034 i_1035 a_1036 k_array_max_1226 when (i_1035 >= n_1034) -> (k_array_max_1226 0)
  array_max_1033 n_1034 i_1035 a_1036 k_array_max_1226 when (not (i_1035 >= n_1034)) ->
      (a_1036 i_1035 (f_array_max_1480 i_1035 n_1034 a_1036 k_array_max_1226))
  check_1148 n_1040 i_1041 max_1042 a_1043 k_check_1309 when (i_1041 >= n_1040) -> (k_check_1309 ())
  check_1148 n_1040 i_1041 max_1042 a_1043 k_check_1309 when (not (i_1041 >= n_1040)) ->
      (a_1043 i_1041 (f_check_1482 i_1041 max_1042 n_1040 a_1043 k_check_1309))
  f_1484 x_1454 -> (main_1044 x_1454 (f_1485 x_1454))
  f_1485 x_1454 x_1451 -> end
  f_array_max_1480 i_1035 n_1034 a_1036 k_array_max_1226 x_1229 ->
      (array_max_1033 n_1034 (i_1035 + 1) a_1036 (f_array_max_1481 i_1035 n_1034 x_1229 k_array_max_1226))
  f_array_max_1481 i_1035 n_1034 x_1229 k_array_max_1226 x_1242 when (x_1229 > x_1242) -> (k_array_max_1226 x_1229)
  f_array_max_1481 i_1035 n_1034 x_1229 k_array_max_1226 x_1242 when (
      not (x_1229 > x_1242)) -> (k_array_max_1226 x_1242)
  f_check_1482 i_1041 max_1042 n_1040 a_1043 k_check_1309 x_1315 when (
      x_1315 <= max_1042) -> (k_check_u_1336 i_1041 max_1042 n_1040 a_1043 k_check_1309 ())
  f_check_1482 i_1041 max_1042 n_1040 a_1043 k_check_1309 x_1315 when (
      not (x_1315 <= max_1042)) -> (fail_1487 true (k_check_u_1336 i_1041 max_1042 n_1040 a_1043 k_check_1309))
  f_main_1483 n_1045 k_main_1380 x_1399 -> (check_1148 n_1045 0 x_1399 (make_array_1030 n_1045) k_main_1380)
  fail_1486 b k -> {fail} => (k ())
  fail_1487 b k -> {fail} => (k ())
  k_check_u_1336 i_1041 max_1042 n_1040 a_1043 k_check_1309 x_1312 ->
      (check_1148 n_1040 (i_1041 + 1) max_1042 a_1043 k_check_1309)
  k_make_array_u_1182 i_1032 n_1031 k_make_array_1176 b_1194 when b_1194 ->
      (k_make_array_u_1193 i_1032 n_1031 k_make_array_1176 ())
  k_make_array_u_1182 i_1032 n_1031 k_make_array_1176 b_1194 when (not b_1194) ->
      (fail_1486 true (k_make_array_u_1193 i_1032 n_1031 k_make_array_1176))
  k_make_array_u_1193 i_1032 n_1031 k_make_array_1176 x_1179 -> (k_make_array_1176 i_1032)
  main_1044 n_1045 k_main_1380 -> (array_max_1033 n_1045 0 (make_array_1030 n_1045) (f_main_1483 n_1045 k_main_1380))
  make_array_1030 n_1031 i_1032 k_make_array_1176 when (0 <= i_1032) ->
      (k_make_array_u_1182 i_1032 n_1031 k_make_array_1176 (i_1032 < n_1031))
  make_array_1030 n_1031 i_1032 k_make_array_1176 when (not (0 <= i_1032)) ->
      (k_make_array_u_1182 i_1032 n_1031 k_make_array_1176 false)
Types:
  main_1479 : X
  array_max_1033 : (x_1:int ->
                    x_2:int[x_2 <= 0; x_2 >= 0] ->
                    (x_4:int[x_1 >= x_4 + 1; x_4 >= 0] -> (int -> X) -> X) -> (int[x_1 <= 0] -> X) -> X)
  check_1148 : (x_1:int -> x_2:int -> int[x_1 <= x_2] -> (int -> (int -> X) -> X) -> (unit -> X) -> X)
  fail_1486 : (x_1:bool[x_1] -> (unit -> X) -> X)
  fail_1487 : (x_1:bool[x_1] -> (unit -> X) -> X)
  make_array_1030 : (x_1:int -> x_2:int[x_1 >= x_2 + 1; x_2 >= 0] -> (int -> X) -> X)
  
(3-1) Abstracting ... DONE!

(3-2) Checking HORS ... DONE!

Error trace::
  main_1479 ... --> 
  f_1484 ... --> 
  main_1044 ... --> 
  array_max_1033 [2/2] ... --> 
  make_array_1030 [1/2] ... --> 
  k_make_array_u_1182 [1/2] ... --> 
  k_make_array_u_1193 ... --> 
  f_array_max_1480 ... --> 
  array_max_1033 [1/2] ... --> 
  f_array_max_1481 [1/2] ... --> 
  f_main_1483 ... --> 
  check_1148 [2/2] ... --> 
  make_array_1030 [2/2] ... --> 
  k_make_array_u_1182 [2/2] ... --> 
  fail_1486 ... --> fail -->
  ERROR!

Spurious counter-example::
  0; 0; 0; 1; 0; 0; 0; 0; 0; 0; 0; 1; 1; 1; 0

(3-3) Checking counter-example ... DONE!

(3-4) Discovering predicates ... 
begin AbsTypeInfer.refine(57432)[1]
  program:
    main_1479  | true = ((Random.int 0) f_1484)
    array_max_1033 n_1034 i_1035 a_1036 k_array_max_1226 | (i_1035 >= n_1034) = (
    k_array_max_1226 0)
    array_max_1033 n_1034 i_1035 a_1036 k_array_max_1226 | (not (i_1035 >= n_1034)) = (
    a_1036 i_1035
           (f_array_max_1480 i_1035
                             n_1034
                             a_1036
                             k_array_max_1226))
    check_1148 n_1040 i_1041 max_1042 a_1043 k_check_1309 | (i_1041 >= n_1040) = (
    k_check_1309 ())
    check_1148 n_1040 i_1041 max_1042 a_1043 k_check_1309 | (not (i_1041 >= n_1040)) = (
    a_1043 i_1041
           (f_check_1482 i_1041
                         max_1042
                         n_1040
                         a_1043
                         k_check_1309))
    f_1484 x_1454 | true = (main_1044 x_1454
                                      (f_1485 x_1454))
    f_1485 x_1454 x_1451 | true = end
    f_array_max_1480 i_1035 n_1034 a_1036 k_array_max_1226 x_1229 | true = (
    array_max_1033 n_1034
                   (i_1035 + 1)
                   a_1036
                   (f_array_max_1481 i_1035
                                     n_1034
                                     x_1229
                                     k_array_max_1226))
    f_array_max_1481 i_1035 n_1034 x_1229 k_array_max_1226 x_1242 | (
    x_1229 > x_1242) = (k_array_max_1226 x_1229)
    f_array_max_1481 i_1035 n_1034 x_1229 k_array_max_1226 x_1242 | (
    not (x_1229 > x_1242)) = (k_array_max_1226 x_1242)
    f_check_1482 i_1041 max_1042 n_1040 a_1043 k_check_1309 x_1315 | (
    x_1315 <= max_1042) = (k_check_u_1336 i_1041
                                          max_1042
                                          n_1040
                                          a_1043
                                          k_check_1309
                                          ())
    f_check_1482 i_1041 max_1042 n_1040 a_1043 k_check_1309 x_1315 | (
    not (x_1315 <= max_1042)) = (fail_1487 true
                                           (k_check_u_1336 i_1041
                                                           max_1042
                                                           n_1040
                                                           a_1043
                                                           k_check_1309))
    f_main_1483 n_1045 k_main_1380 x_1399 | true = (check_1148 n_1045
                                                               0
                                                               x_1399
                                                               (make_array_1030 n_1045)
                                                               k_main_1380)
    fail_1486 b k | true = (fail ())
    fail_1487 b k | true = (fail ())
    k_check_u_1336 i_1041 max_1042 n_1040 a_1043 k_check_1309 x_1312 | true = (
    check_1148 n_1040
               (i_1041 + 1)
               max_1042
               a_1043
               k_check_1309)
    k_make_array_u_1182 i_1032 n_1031 k_make_array_1176 b_1194 | b_1194 = (
    k_make_array_u_1193 i_1032
                        n_1031
                        k_make_array_1176
                        ())
    k_make_array_u_1182 i_1032 n_1031 k_make_array_1176 b_1194 | (not b_1194) = (
    fail_1486 true
              (k_make_array_u_1193 i_1032
                                   n_1031
                                   k_make_array_1176))
    k_make_array_u_1193 i_1032 n_1031 k_make_array_1176 x_1179 | true = (
    k_make_array_1176 i_1032)
    main_1044 n_1045 k_main_1380 | true = (array_max_1033
                                             n_1045
                                             0
                                             (make_array_1030 n_1045)
                                             (f_main_1483 n_1045
                                                          k_main_1380))
    make_array_1030 n_1031 i_1032 k_make_array_1176 | (0 <= i_1032) = (
    k_make_array_u_1182 i_1032
                        n_1031
                        k_make_array_1176
                        (i_1032 < n_1031))
    make_array_1030 n_1031 i_1032 k_make_array_1176 | (not (0 <= i_1032)) = (
    k_make_array_u_1182 i_1032
                        n_1031
                        k_make_array_1176
                        false)
    main_1479:X
    array_max_1033:int -> int -> (int -> (int -> X) -> X) -> (int -> X) -> X
    check_1148:int -> int -> int -> (int -> (int -> X) -> X) -> (unit -> X) -> X
    f_1484:int -> X
    f_1485:int -> unit -> X
    f_array_max_1480:int -> int -> (int -> (int -> X) -> X) -> (int -> X) -> int -> X
    f_array_max_1481:int -> int -> int -> (int -> X) -> int -> X
    f_check_1482:int -> int -> int -> (int -> (int -> X) -> X) -> (unit -> X) -> int -> X
    f_main_1483:int -> (unit -> X) -> int -> X
    fail_1486:bool -> (unit -> X) -> X
    fail_1487:bool -> (unit -> X) -> X
    k_check_u_1336:int -> int -> int -> (int -> (int -> X) -> X) -> (unit -> X) -> unit -> X
    k_make_array_u_1182:int -> int -> (int -> X) -> bool -> X
    k_make_array_u_1193:int -> int -> (int -> X) -> unit -> X
    main_1044:int -> (unit -> X) -> X
    make_array_1030:int -> int -> (int -> X) -> X
  inlined functions: f_1484,f_1485,f_array_max_1480,f_array_max_1481,f_check_1482,f_main_1483,k_check_u_1336,k_make_array_u_1182,k_make_array_u_1193,main_1044
  counterexample: 0:0:0:1:0:0:0:0:0:0:0:1:1:1:0
  error traces:
    [true.nop(<f_1484@74:0> = var310)
     [true.(<main_1044@76:0> = <f_1484@74:0>)
      [true.((<array_max_1033@78:0> = <main_1044@76:0>) && (<array_max_1033@78:1> = 0))
       [(not (<array_max_1033@78:1> >= <array_max_1033@78:0>)).(<<array_max_1033@78:2>@81:0> = <array_max_1033@78:1>)
        [true.((<make_array_1030@83:0> = <main_1044@76:0>) && (<make_array_1030@83:1> = <<array_max_1033@78:2>@81:0>))
         [(0 <= <make_array_1030@83:1>).
          ((<k_make_array_u_1182@86:0> = <make_array_1030@83:1>) &&
           ((<k_make_array_u_1182@86:1> = <make_array_1030@83:0>) &&
            (<k_make_array_u_1182@86:3> = (<make_array_1030@83:1> < <make_array_1030@83:0>))))
          [<k_make_array_u_1182@86:3>.
           ((<k_make_array_u_1193@89:0> = <k_make_array_u_1182@86:0>) &&
            ((<k_make_array_u_1193@89:1> = <k_make_array_u_1182@86:1>) && (<k_make_array_u_1193@89:3> = ())))
           [true.(<<k_make_array_u_1193@89:2>@91:0> = <k_make_array_u_1193@89:0>)
            [true.(<<k_make_array_u_1182@86:2>@93:0> = <<k_make_array_u_1193@89:2>@91:0>)
             [true.(<<make_array_1030@83:2>@95:0> = <<k_make_array_u_1182@86:2>@93:0>)
              [true.(<<<array_max_1033@78:2>@81:1>@97:0> = <<make_array_1030@83:2>@95:0>)
               [true.
                ((<f_array_max_1480@99:0> = <array_max_1033@78:1>) &&
                 ((<f_array_max_1480@99:1> = <array_max_1033@78:0>) &&
                  (<f_array_max_1480@99:4> = <<<array_max_1033@78:2>@81:1>@97:0>)))
                [true.
                 ((<array_max_1033@101:0> = <f_array_max_1480@99:1>) &&
                  (<array_max_1033@101:1> = (<f_array_max_1480@99:0> + 1)))
                 [(<array_max_1033@101:1> >= <array_max_1033@101:0>).(
                  <<array_max_1033@101:3>@104:0> = 0)
                  [true.
                   ((<f_array_max_1481@106:0> = <f_array_max_1480@99:0>) &&
                    ((<f_array_max_1481@106:1> = <f_array_max_1480@99:1>) &&
                     ((<f_array_max_1481@106:2> = <f_array_max_1480@99:4>) &&
                      (<f_array_max_1481@106:4> = <<array_max_1033@101:3>@104:0>))))
                   [(<f_array_max_1481@106:2> > <f_array_max_1481@106:4>).
                    (<<f_array_max_1481@106:3>@109:0> = <f_array_max_1481@106:2>)
                    [true.(<<f_array_max_1480@99:3>@111:0> = <<f_array_max_1481@106:3>@109:0>)
                     [true.(<<array_max_1033@78:3>@113:0> = <<f_array_max_1480@99:3>@111:0>)
                      [true.
                       ((<f_main_1483@115:0> = <main_1044@76:0>) &&
                        (<f_main_1483@115:2> = <<array_max_1033@78:3>@113:0>))
                       [true.
                        ((<check_1148@117:0> = <f_main_1483@115:0>) &&
                         ((<check_1148@117:1> = 0) && (<check_1148@117:2> = <f_main_1483@115:2>)))
                        [(not (<check_1148@117:1> >= <check_1148@117:0>)).
                         (<<check_1148@117:3>@120:0> = <check_1148@117:1>)
                         [true.
                          ((<make_array_1030@122:0> = <f_main_1483@115:0>) &&
                           (<make_array_1030@122:1> = <<check_1148@117:3>@120:0>))
                          [(not (0 <= <make_array_1030@122:1>)).
                           ((<k_make_array_u_1182@125:0> = <make_array_1030@122:1>) &&
                            ((<k_make_array_u_1182@125:1> = <make_array_1030@122:0>) &&
                             (<k_make_array_u_1182@125:3> = false)))
                           [(not <k_make_array_u_1182@125:3>).(<fail_1486@128:0> = true)[true.error
  begin RefTypeInfer.infer_etrs(57433)[2]
    horn clauses:
      P[<fail_1486@128:0>](<fail_1486@128:0>:bool)|- bot
      
      P[<k_make_array_u_1182@125:3>](<k_make_array_u_1182@125:0>:int,<k_make_array_u_1182@125:1>:int,false:bool),
      <fail_1486@128:0> |- P[<fail_1486@128:0>](<fail_1486@128:0>:bool)
      
      P[<make_array_1030@122:1>](<k_make_array_u_1182@125:1>:int,<k_make_array_u_1182@125:0>:int),
      ((0 > <k_make_array_u_1182@125:0>) && (not <k_make_array_u_1182@125:3>))
      |- P[<k_make_array_u_1182@125:3>](<k_make_array_u_1182@125:0>:int,
                                        <k_make_array_u_1182@125:1>:int,
                                        <k_make_array_u_1182@125:3>:bool)
      
      P[<f_main_1483@115:2>](<make_array_1030@122:0>:int,<check_1148@117:2>:int),
      P[<<check_1148@117:3>@120:0>](<make_array_1030@122:0>:int,0:int,<check_1148@117:2>:int,<make_array_1030@122:1>:int)|- P[<make_array_1030@122:1>](
      <make_array_1030@122:0>:int,<make_array_1030@122:1>:int)
      
      P[<check_1148@117:2>](<check_1148@117:0>:int,<check_1148@117:1>:int,<check_1148@117:2>:int),
      ((<check_1148@117:1> < <check_1148@117:0>) && (<<check_1148@117:3>@120:0> = <check_1148@117:1>))
      |- P[<<check_1148@117:3>@120:0>](<check_1148@117:0>:int,<check_1148@117:1>:int,
                                       <check_1148@117:2>:int,<<check_1148@117:3>@120:0>:int)
      
      P[<f_main_1483@115:2>](<check_1148@117:0>:int,<check_1148@117:2>:int), (
      <check_1148@117:1> = 0)
      |- P[<check_1148@117:2>](<check_1148@117:0>:int,<check_1148@117:1>:int,
                               <check_1148@117:2>:int)
      
      P[<main_1044@76:0>](<f_main_1483@115:0>:int),
      P[<<array_max_1033@78:3>@113:0>](<f_main_1483@115:0>:int,0:int,<f_main_1483@115:2>:int)|- P[<f_main_1483@115:2>](
      <f_main_1483@115:0>:int,<f_main_1483@115:2>:int)
      
      P[<array_max_1033@78:1>](<array_max_1033@78:0>:int,<array_max_1033@78:1>:int),
      P[<<f_array_max_1480@99:3>@111:0>](<array_max_1033@78:1>:int,<array_max_1033@78:0>:int,<<array_max_1033@78:3>@113:0>:int),
      (<array_max_1033@78:1> < <array_max_1033@78:0>)
      |- P[<<array_max_1033@78:3>@113:0>](<array_max_1033@78:0>:int,<array_max_1033@78:1>:int,
                                          <<array_max_1033@78:3>@113:0>:int)
      
      P[<f_array_max_1480@99:4>](<f_array_max_1480@99:0>:int,<f_array_max_1480@99:1>:int,<f_array_max_1481@106:2>:int),
      P[<<f_array_max_1481@106:3>@109:0>](<f_array_max_1480@99:0>:int,<f_array_max_1480@99:1>:int,<f_array_max_1481@106:2>:int,<<f_array_max_1480@99:3>@111:0>:int)|- P[<<f_array_max_1480@99:3>@111:0>](
      <f_array_max_1480@99:0>:int,<f_array_max_1480@99:1>:int,<<f_array_max_1480@99:3>@111:0>:int)
      
      P[<f_array_max_1481@106:4>](<f_array_max_1481@106:0>:int,<f_array_max_1481@106:1>:int,<f_array_max_1481@106:2>:int,<f_array_max_1481@106:4>:int),
      ((<f_array_max_1481@106:2> > <f_array_max_1481@106:4>) &&
       (<<f_array_max_1481@106:3>@109:0> = <f_array_max_1481@106:2>))
      |- P[<<f_array_max_1481@106:3>@109:0>](<f_array_max_1481@106:0>:int,
                                             <f_array_max_1481@106:1>:int,
                                             <f_array_max_1481@106:2>:int,
                                             <<f_array_max_1481@106:3>@109:0>:int)
      
      P[<f_array_max_1480@99:4>](<f_array_max_1481@106:0>:int,<f_array_max_1481@106:1>:int,<f_array_max_1481@106:2>:int),
      P[<<array_max_1033@101:3>@104:0>](<f_array_max_1481@106:1>:int,(
                                        1 + <f_array_max_1481@106:0>):int,<f_array_max_1481@106:4>:int)|- P[<f_array_max_1481@106:4>](
      <f_array_max_1481@106:0>:int,<f_array_max_1481@106:1>:int,<f_array_max_1481@106:2>:int,
      <f_array_max_1481@106:4>:int)
      
      P[<array_max_1033@101:1>](<array_max_1033@101:0>:int,<array_max_1033@101:1>:int),
      ((<<array_max_1033@101:3>@104:0> = 0) && (<array_max_1033@101:1> >= <array_max_1033@101:0>))
      |- P[<<array_max_1033@101:3>@104:0>](<array_max_1033@101:0>:int,
                                           <array_max_1033@101:1>:int,
                                           <<array_max_1033@101:3>@104:0>:int)
      
      P[<f_array_max_1480@99:4>]((-1 + <array_max_1033@101:1>):int,<array_max_1033@101:0>:int,<f_array_max_1480@99:4>:int)|- P[<array_max_1033@101:1>](
      <array_max_1033@101:0>:int,<array_max_1033@101:1>:int)
      
      P[<array_max_1033@78:1>](<f_array_max_1480@99:1>:int,<f_array_max_1480@99:0>:int),
      P[<<<array_max_1033@78:2>@81:1>@97:0>](<f_array_max_1480@99:1>:int,<f_array_max_1480@99:0>:int,<f_array_max_1480@99:0>:int,<f_array_max_1480@99:4>:int),
      (<f_array_max_1480@99:0> < <f_array_max_1480@99:1>)
      |- P[<f_array_max_1480@99:4>](<f_array_max_1480@99:0>:int,<f_array_max_1480@99:1>:int,
                                    <f_array_max_1480@99:4>:int)
      
      P[<main_1044@76:0>](<array_max_1033@78:0>:int),
      P[<<make_array_1030@83:2>@95:0>](<array_max_1033@78:0>:int,<<array_max_1033@78:2>@81:0>:int,<<<array_max_1033@78:2>@81:1>@97:0>:int),
      P[<array_max_1033@78:1>](<array_max_1033@78:0>:int,<array_max_1033@78:1>:int), (
      <array_max_1033@78:1> = 0)
      |- P[<<<array_max_1033@78:2>@81:1>@97:0>](<array_max_1033@78:0>:int,
                                                <array_max_1033@78:1>:int,
                                                <<array_max_1033@78:2>@81:0>:int,
                                                <<<array_max_1033@78:2>@81:1>@97:0>:int)
      
      P[<make_array_1030@83:1>](<make_array_1030@83:0>:int,<make_array_1030@83:1>:int),
      P[<<k_make_array_u_1182@86:2>@93:0>](<make_array_1030@83:1>:int,<make_array_1030@83:0>:int,<<make_array_1030@83:2>@95:0>:int),
      (0 <= <make_array_1030@83:1>)
      |- P[<<make_array_1030@83:2>@95:0>](<make_array_1030@83:0>:int,
                                          <make_array_1030@83:1>:int,
                                          <<make_array_1030@83:2>@95:0>:int)
      
      P[<k_make_array_u_1182@86:3>](<k_make_array_u_1182@86:0>:int,<k_make_array_u_1182@86:1>:int,true:bool),
      P[<<k_make_array_u_1193@89:2>@91:0>](<k_make_array_u_1182@86:0>:int,<k_make_array_u_1182@86:1>:int,<<k_make_array_u_1182@86:2>@93:0>:int)|- P[<<k_make_array_u_1182@86:2>@93:0>](
      <k_make_array_u_1182@86:0>:int,<k_make_array_u_1182@86:1>:int,<<k_make_array_u_1182@86:2>@93:0>:int)
      
      P[<k_make_array_u_1193@89:3>](<k_make_array_u_1193@89:0>:int,<k_make_array_u_1193@89:1>:int,<k_make_array_u_1193@89:3>:unit),
      (<<k_make_array_u_1193@89:2>@91:0> = <k_make_array_u_1193@89:0>)
      |- P[<<k_make_array_u_1193@89:2>@91:0>](<k_make_array_u_1193@89:0>:int,
                                              <k_make_array_u_1193@89:1>:int,
                                              <<k_make_array_u_1193@89:2>@91:0>:int)
      
      P[<k_make_array_u_1182@86:3>](<k_make_array_u_1193@89:0>:int,<k_make_array_u_1193@89:1>:int,true:bool)|- P[<k_make_array_u_1193@89:3>](
      <k_make_array_u_1193@89:0>:int,<k_make_array_u_1193@89:1>:int,<k_make_array_u_1193@89:3>:unit)
      
      P[<make_array_1030@83:1>](<k_make_array_u_1182@86:1>:int,<k_make_array_u_1182@86:0>:int),
      ((0 <= <k_make_array_u_1182@86:0>) &&
       (<k_make_array_u_1182@86:3> = (<k_make_array_u_1182@86:0> < <k_make_array_u_1182@86:1>)))
      |- P[<k_make_array_u_1182@86:3>](<k_make_array_u_1182@86:0>:int,
                                       <k_make_array_u_1182@86:1>:int,
                                       <k_make_array_u_1182@86:3>:bool)
      
      P[<main_1044@76:0>](<make_array_1030@83:0>:int),
      P[<<array_max_1033@78:2>@81:0>](<make_array_1030@83:0>:int,0:int,<make_array_1030@83:1>:int)|- P[<make_array_1030@83:1>](
      <make_array_1030@83:0>:int,<make_array_1030@83:1>:int)
      
      P[<array_max_1033@78:1>](<array_max_1033@78:0>:int,<array_max_1033@78:1>:int),
      ((<array_max_1033@78:1> < <array_max_1033@78:0>) && (<<array_max_1033@78:2>@81:0> = <array_max_1033@78:1>))
      |- P[<<array_max_1033@78:2>@81:0>](<array_max_1033@78:0>:int,<array_max_1033@78:1>:int,
                                         <<array_max_1033@78:2>@81:0>:int)
      
      P[<main_1044@76:0>](<array_max_1033@78:0>:int), (<array_max_1033@78:1> = 0)
      |- P[<array_max_1033@78:1>](<array_max_1033@78:0>:int,<array_max_1033@78:1>:int)
      
      P[<f_1484@74:0>](<main_1044@76:0>:int)|- P[<main_1044@76:0>](<main_1044@76:0>:int)
      
      |- P[<f_1484@74:0>](<f_1484@74:0>:int)
    call trees:
      <main_1479@71>
        <f_1484@74>
          <main_1044@76>
            <array_max_1033@78>
            </<array_max_1033@78:2>@81>
            <make_array_1030@83>
              <k_make_array_u_1182@86>
                <k_make_array_u_1193@89>
                </<k_make_array_u_1193@89:2>@91>
              </<k_make_array_u_1182@86:2>@93>
            </<make_array_1030@83:2>@95>
            <<<array_max_1033@78:2>@81:1>@97>
              <f_array_max_1480@99>
                <array_max_1033@101>
                </<array_max_1033@101:3>@104>
                <f_array_max_1481@106>
                </<f_array_max_1481@106:3>@109>
              </<f_array_max_1480@99:3>@111>
            </<array_max_1033@78:3>@113>
            <f_main_1483@115>
              <check_1148@117>
              </<check_1148@117:3>@120>
              <make_array_1030@122>
                <k_make_array_u_1182@125>
                  <fail_1486@128>
    inlined horn clauses:
      P[<fail_1486@128:0>](<fail_1486@128:0>:bool)|- bot
      
      P[<make_array_1030@122:1>](<k_make_array_u_1182@125:1>:int,<k_make_array_u_1182@125:0>:int),
      ((0 > <k_make_array_u_1182@125:0>) && <fail_1486@128:0>) |- P[<fail_1486@128:0>](
      <fail_1486@128:0>:bool)
      
      P[<<array_max_1033@78:3>@113:0>](<make_array_1030@122:0>:int,0:int,<check_1148@117:2>:int),
      P[<<check_1148@117:3>@120:0>](<make_array_1030@122:0>:int,0:int,<check_1148@117:2>:int,<make_array_1030@122:1>:int)|- P[<make_array_1030@122:1>](
      <make_array_1030@122:0>:int,<make_array_1030@122:1>:int)
      
      P[<check_1148@117:2>](<check_1148@117:0>:int,<check_1148@117:1>:int,<check_1148@117:2>:int),
      ((<check_1148@117:1> < <check_1148@117:0>) && (<<check_1148@117:3>@120:0> = <check_1148@117:1>))
      |- P[<<check_1148@117:3>@120:0>](<check_1148@117:0>:int,<check_1148@117:1>:int,
                                       <check_1148@117:2>:int,<<check_1148@117:3>@120:0>:int)
      
      P[<<array_max_1033@78:3>@113:0>](<check_1148@117:0>:int,0:int,<check_1148@117:2>:int), (
      <check_1148@117:1> = 0)
      |- P[<check_1148@117:2>](<check_1148@117:0>:int,<check_1148@117:1>:int,
                               <check_1148@117:2>:int)
      
      P[<array_max_1033@78:1>](<array_max_1033@78:0>:int,<array_max_1033@78:1>:int),
      P[<<<array_max_1033@78:2>@81:1>@97:0>](<array_max_1033@78:0>:int,<array_max_1033@78:1>:int,<array_max_1033@78:1>:int,<<array_max_1033@78:3>@113:0>:int),
      P[<<array_max_1033@101:3>@104:0>](<array_max_1033@78:0>:int,(1 + <array_max_1033@78:1>):int,var312:int),
      ((<<array_max_1033@78:3>@113:0> > var312) && (<array_max_1033@78:1> < <array_max_1033@78:0>))
      |- P[<<array_max_1033@78:3>@113:0>](<array_max_1033@78:0>:int,<array_max_1033@78:1>:int,
                                          <<array_max_1033@78:3>@113:0>:int)
      
      P[<array_max_1033@101:1>](<array_max_1033@101:0>:int,<array_max_1033@101:1>:int),
      ((<<array_max_1033@101:3>@104:0> = 0) && (<array_max_1033@101:1> >= <array_max_1033@101:0>))
      |- P[<<array_max_1033@101:3>@104:0>](<array_max_1033@101:0>:int,
                                           <array_max_1033@101:1>:int,
                                           <<array_max_1033@101:3>@104:0>:int)
      
      P[<array_max_1033@78:1>](<array_max_1033@101:0>:int,(-1 + <array_max_1033@101:1>):int),
      P[<<<array_max_1033@78:2>@81:1>@97:0>](<array_max_1033@101:0>:int,(
                                             -1 + <array_max_1033@101:1>):int,(
                                             -1 + <array_max_1033@101:1>):int,<f_array_max_1480@99:4>:int),
      (<array_max_1033@101:1> < (1 + <array_max_1033@101:0>))
      |- P[<array_max_1033@101:1>](<array_max_1033@101:0>:int,<array_max_1033@101:1>:int)
      
      P[<<make_array_1030@83:2>@95:0>](<array_max_1033@78:0>:int,<<array_max_1033@78:2>@81:0>:int,<<<array_max_1033@78:2>@81:1>@97:0>:int),
      P[<array_max_1033@78:1>](<array_max_1033@78:0>:int,<array_max_1033@78:1>:int), (
      <array_max_1033@78:1> = 0)
      |- P[<<<array_max_1033@78:2>@81:1>@97:0>](<array_max_1033@78:0>:int,
                                                <array_max_1033@78:1>:int,
                                                <<array_max_1033@78:2>@81:0>:int,
                                                <<<array_max_1033@78:2>@81:1>@97:0>:int)
      
      P[<make_array_1030@83:1>](<make_array_1030@83:0>:int,<make_array_1030@83:1>:int),
      ((0 <= <make_array_1030@83:1>) &&
       ((<make_array_1030@83:1> < <make_array_1030@83:0>) && (<<make_array_1030@83:2>@95:0> = <make_array_1030@83:1>)))
      |- P[<<make_array_1030@83:2>@95:0>](<make_array_1030@83:0>:int,
                                          <make_array_1030@83:1>:int,
                                          <<make_array_1030@83:2>@95:0>:int)
      
      P[<<array_max_1033@78:2>@81:0>](<make_array_1030@83:0>:int,0:int,<make_array_1030@83:1>:int)|- P[<make_array_1030@83:1>](
      <make_array_1030@83:0>:int,<make_array_1030@83:1>:int)
      
      P[<array_max_1033@78:1>](<array_max_1033@78:0>:int,<array_max_1033@78:1>:int),
      ((<array_max_1033@78:1> < <array_max_1033@78:0>) && (<<array_max_1033@78:2>@81:0> = <array_max_1033@78:1>))
      |- P[<<array_max_1033@78:2>@81:0>](<array_max_1033@78:0>:int,<array_max_1033@78:1>:int,
                                         <<array_max_1033@78:2>@81:0>:int)
      
       (<array_max_1033@78:1> = 0) |- P[<array_max_1033@78:1>](<array_max_1033@78:0>:int,
                                                               <array_max_1033@78:1>:int)
    begin ParamSubstInfer.infer(61580)[3]
      
    end ParamSubstInfer.infer(61580)[3] (0.293955 sec.)
    inferred extra parameters:
      
    begin RefTypeInfer.elim_coeffs(61582)[3]
      
    end RefTypeInfer.elim_coeffs(61582)[3] (0.002000 sec.)
    begin GenHcSolver.solve(62254)[3]
      Horn clauses:
        P[<fail_1486@128:0>](<fail_1486@128:0>:bool)|- bot
        
        P[<make_array_1030@122:1>](<k_make_array_u_1182@125:1>:int,<k_make_array_u_1182@125:0>:int),
        ((0 > <k_make_array_u_1182@125:0>) && <fail_1486@128:0>) |- P[<fail_1486@128:0>](
        <fail_1486@128:0>:bool)
        
        P[<<array_max_1033@78:3>@113:0>](<make_array_1030@122:0>:int,0:int,<check_1148@117:2>:int),
        P[<<check_1148@117:3>@120:0>](<make_array_1030@122:0>:int,0:int,<check_1148@117:2>:int,<make_array_1030@122:1>:int)|- P[<make_array_1030@122:1>](
        <make_array_1030@122:0>:int,<make_array_1030@122:1>:int)
        
        P[<check_1148@117:2>](<check_1148@117:0>:int,<check_1148@117:1>:int,<check_1148@117:2>:int),
        ((<check_1148@117:1> < <check_1148@117:0>) && (<<check_1148@117:3>@120:0> = <check_1148@117:1>))
        |- P[<<check_1148@117:3>@120:0>](<check_1148@117:0>:int,<check_1148@117:1>:int,
                                         <check_1148@117:2>:int,<<check_1148@117:3>@120:0>:int)
        
        P[<<array_max_1033@78:3>@113:0>](<check_1148@117:0>:int,0:int,<check_1148@117:2>:int), (
        <check_1148@117:1> = 0)
        |- P[<check_1148@117:2>](<check_1148@117:0>:int,<check_1148@117:1>:int,
                                 <check_1148@117:2>:int)
        
        P[<array_max_1033@78:1>](<array_max_1033@78:0>:int,<array_max_1033@78:1>:int),
        P[<<<array_max_1033@78:2>@81:1>@97:0>](<array_max_1033@78:0>:int,<array_max_1033@78:1>:int,<array_max_1033@78:1>:int,<<array_max_1033@78:3>@113:0>:int),
        P[<<array_max_1033@101:3>@104:0>](<array_max_1033@78:0>:int,(
                                          1 + <array_max_1033@78:1>):int,var312:int),
        ((<<array_max_1033@78:3>@113:0> > var312) && (<array_max_1033@78:1> < <array_max_1033@78:0>))
        |- P[<<array_max_1033@78:3>@113:0>](<array_max_1033@78:0>:int,
                                            <array_max_1033@78:1>:int,
                                            <<array_max_1033@78:3>@113:0>:int)
        
        P[<array_max_1033@101:1>](<array_max_1033@101:0>:int,<array_max_1033@101:1>:int),
        ((<<array_max_1033@101:3>@104:0> = 0) && (<array_max_1033@101:1> >= <array_max_1033@101:0>))
        |- P[<<array_max_1033@101:3>@104:0>](<array_max_1033@101:0>:int,
                                             <array_max_1033@101:1>:int,
                                             <<array_max_1033@101:3>@104:0>:int)
        
        P[<array_max_1033@78:1>](<array_max_1033@101:0>:int,(-1 + <array_max_1033@101:1>):int),
        P[<<<array_max_1033@78:2>@81:1>@97:0>](<array_max_1033@101:0>:int,(
                                               -1 + <array_max_1033@101:1>):int,(
                                               -1 + <array_max_1033@101:1>):int,<f_array_max_1480@99:4>:int),
        (<array_max_1033@101:1> < (1 + <array_max_1033@101:0>))
        |- P[<array_max_1033@101:1>](<array_max_1033@101:0>:int,<array_max_1033@101:1>:int)
        
        P[<<make_array_1030@83:2>@95:0>](<array_max_1033@78:0>:int,<<array_max_1033@78:2>@81:0>:int,<<<array_max_1033@78:2>@81:1>@97:0>:int),
        P[<array_max_1033@78:1>](<array_max_1033@78:0>:int,<array_max_1033@78:1>:int), (
        <array_max_1033@78:1> = 0)
        |- P[<<<array_max_1033@78:2>@81:1>@97:0>](<array_max_1033@78:0>:int,
                                                  <array_max_1033@78:1>:int,
                                                  <<array_max_1033@78:2>@81:0>:int,
                                                  <<<array_max_1033@78:2>@81:1>@97:0>:int)
        
        P[<make_array_1030@83:1>](<make_array_1030@83:0>:int,<make_array_1030@83:1>:int),
        ((0 <= <make_array_1030@83:1>) &&
         ((<make_array_1030@83:1> < <make_array_1030@83:0>) && (<<make_array_1030@83:2>@95:0> = <make_array_1030@83:1>)))
        |- P[<<make_array_1030@83:2>@95:0>](<make_array_1030@83:0>:int,
                                            <make_array_1030@83:1>:int,
                                            <<make_array_1030@83:2>@95:0>:int)
        
        P[<<array_max_1033@78:2>@81:0>](<make_array_1030@83:0>:int,0:int,<make_array_1030@83:1>:int)|- P[<make_array_1030@83:1>](
        <make_array_1030@83:0>:int,<make_array_1030@83:1>:int)
        
        P[<array_max_1033@78:1>](<array_max_1033@78:0>:int,<array_max_1033@78:1>:int),
        ((<array_max_1033@78:1> < <array_max_1033@78:0>) && (<<array_max_1033@78:2>@81:0> = <array_max_1033@78:1>))
        |- P[<<array_max_1033@78:2>@81:0>](<array_max_1033@78:0>:int,
                                           <array_max_1033@78:1>:int,
                                           <<array_max_1033@78:2>@81:0>:int)
        
         (<array_max_1033@78:1> = 0) |- P[<array_max_1033@78:1>](<array_max_1033@78:0>:int,
                                                                 <array_max_1033@78:1>:int)
      lower bounds:
        P[<array_max_1033@78:1>](<array_max_1033@78:0>:int,<array_max_1033@78:1>:int) = (<array_max_1033@78:1> = 0)
        P[<<array_max_1033@78:2>@81:0>](<array_max_1033@78:0>:int,<array_max_1033@78:1>:int,<<array_max_1033@78:2>@81:0>:int) =
        ((<array_max_1033@78:1> = 0) &&
         ((<array_max_1033@78:1> < <array_max_1033@78:0>) && (<<array_max_1033@78:2>@81:0> = <array_max_1033@78:1>)))
        P[<make_array_1030@83:1>](<make_array_1030@83:0>:int,<make_array_1030@83:1>:int) =
        ((<make_array_1030@83:1> = 0) && (0 < <make_array_1030@83:0>))
        P[<<make_array_1030@83:2>@95:0>](<make_array_1030@83:0>:int,<make_array_1030@83:1>:int,<<make_array_1030@83:2>@95:0>:int) =
        ((<make_array_1030@83:1> = 0) &&
         ((<make_array_1030@83:1> < <make_array_1030@83:0>) &&
          ((0 < <make_array_1030@83:0>) && (<<make_array_1030@83:2>@95:0> = <make_array_1030@83:1>))))
        P[<<<array_max_1033@78:2>@81:1>@97:0>](<array_max_1033@78:0>:int,<array_max_1033@78:1>:int,<<array_max_1033@78:2>@81:0>:int,<<<array_max_1033@78:2>@81:1>@97:0>:int) =
        ((<<array_max_1033@78:2>@81:0> = 0) &&
         ((<array_max_1033@78:1> = 0) &&
          ((<<array_max_1033@78:2>@81:0> < <array_max_1033@78:0>) &&
           ((0 < <array_max_1033@78:0>) && (<<<array_max_1033@78:2>@81:1>@97:0> = <<array_max_1033@78:2>@81:0>)))))
        P[<array_max_1033@101:1>](<array_max_1033@101:0>:int,<array_max_1033@101:1>:int) =
        ((<array_max_1033@101:1> = 1) &&
         ((0 < <array_max_1033@101:0>) && (<array_max_1033@101:1> < (1 + <array_max_1033@101:0>))))
        P[<<array_max_1033@101:3>@104:0>](<array_max_1033@101:0>:int,<array_max_1033@101:1>:int,<<array_max_1033@101:3>@104:0>:int) =
        ((<<array_max_1033@101:3>@104:0> = 0) &&
         ((<array_max_1033@101:1> = 1) &&
          ((0 < <array_max_1033@101:0>) && (<array_max_1033@101:1> = <array_max_1033@101:0>))))
        P[<<array_max_1033@78:3>@113:0>](<array_max_1033@78:0>:int,<array_max_1033@78:1>:int,<<array_max_1033@78:3>@113:0>:int) =
        ((<array_max_1033@78:1> = 0) &&
         ((<<array_max_1033@78:3>@113:0> = <array_max_1033@78:1>) &&
          ((0 < <array_max_1033@78:0>) &&
           (((1 + <array_max_1033@78:1>) = <array_max_1033@78:0>) && (<<array_max_1033@78:3>@113:0> > 0)))))
        P[<check_1148@117:2>](<check_1148@117:0>:int,<check_1148@117:1>:int,<check_1148@117:2>:int) = false
        P[<<check_1148@117:3>@120:0>](<check_1148@117:0>:int,<check_1148@117:1>:int,<check_1148@117:2>:int,<<check_1148@117:3>@120:0>:int) =
        false
        P[<make_array_1030@122:1>](<make_array_1030@122:0>:int,<make_array_1030@122:1>:int) = false
        P[<fail_1486@128:0>](<fail_1486@128:0>:bool) = false
      upper bounds:
        P[<make_array_1030@122:1>](var320:int,var321:int) = true
        P[<make_array_1030@83:1>](var314:int,var315:int) = true
      begin GenHcSolver.classify_pids(73665)[4]
        output:
          [<make_array_1030@83:1>;<make_array_1030@122:1>]
      end GenHcSolver.classify_pids(73665)[4] (0.000000 sec.)
      begin ApronInterface.convex_hull_interpolate(73676)[4]
        lb:((<make_array_1030@83:1> = 0) && (0 < <make_array_1030@83:0>))
        nub:false
        lb':((<make_array_1030@83:1> = 0) && (0 < <make_array_1030@83:0>))
        nub':false
        begin InterpProver.interpolate(73677)[5]
          begin InterpProver.interpolate_fresh(73678)[6]
            begin InterpProver.interpolate_log(73679)[7]
              input1: ((<make_array_1030@83:1> = 0) && (0 < <make_array_1030@83:0>))
              input2: false
              begin InterpProver.interpolate_check(73680)[8]
                begin InterpProver.interpolate_simplify(73681)[9]
                  begin InterpProver.interpolate_quick(73713)[10]
                    
                  end InterpProver.interpolate_quick(73713)[10] (0.000000 sec.)
                  
                end InterpProver.interpolate_simplify(73681)[9] (0.000000 sec.)
                
              end InterpProver.interpolate_check(73680)[8] (0.000000 sec.)
              output: true
            end InterpProver.interpolate_log(73679)[7] (0.000000 sec.)
            
          end InterpProver.interpolate_fresh(73678)[6] (0.000000 sec.)
          
        end InterpProver.interpolate(73677)[5] (0.000000 sec.)
        output:
          P[<make_array_1030@83:1>](<make_array_1030@83:0>:int,<make_array_1030@83:1>:int) = true
          P[<make_array_1030@122:1>](<make_array_1030@83:0>:int,<make_array_1030@83:1>:int) = true
      end ApronInterface.convex_hull_interpolate(73676)[4] (0.000000 sec.)
      Horn clauses:
        P[<fail_1486@128:0>](<fail_1486@128:0>:bool)|- bot
        
        P[<make_array_1030@122:1>](<k_make_array_u_1182@125:1>:int,<k_make_array_u_1182@125:0>:int),
        ((0 > <k_make_array_u_1182@125:0>) && <fail_1486@128:0>) |- P[<fail_1486@128:0>](
        <fail_1486@128:0>:bool)
        
        P[<<array_max_1033@78:3>@113:0>](<make_array_1030@122:0>:int,0:int,<check_1148@117:2>:int),
        P[<<check_1148@117:3>@120:0>](<make_array_1030@122:0>:int,0:int,<check_1148@117:2>:int,<make_array_1030@122:1>:int)|- P[<make_array_1030@122:1>](
        <make_array_1030@122:0>:int,<make_array_1030@122:1>:int)
        
        P[<check_1148@117:2>](<check_1148@117:0>:int,<check_1148@117:1>:int,<check_1148@117:2>:int),
        ((<check_1148@117:1> < <check_1148@117:0>) && (<<check_1148@117:3>@120:0> = <check_1148@117:1>))
        |- P[<<check_1148@117:3>@120:0>](<check_1148@117:0>:int,<check_1148@117:1>:int,
                                         <check_1148@117:2>:int,<<check_1148@117:3>@120:0>:int)
        
        P[<<array_max_1033@78:3>@113:0>](<check_1148@117:0>:int,0:int,<check_1148@117:2>:int), (
        <check_1148@117:1> = 0)
        |- P[<check_1148@117:2>](<check_1148@117:0>:int,<check_1148@117:1>:int,
                                 <check_1148@117:2>:int)
        
        P[<array_max_1033@78:1>](<array_max_1033@78:0>:int,<array_max_1033@78:1>:int),
        P[<<<array_max_1033@78:2>@81:1>@97:0>](<array_max_1033@78:0>:int,<array_max_1033@78:1>:int,<array_max_1033@78:1>:int,<<array_max_1033@78:3>@113:0>:int),
        P[<<array_max_1033@101:3>@104:0>](<array_max_1033@78:0>:int,(
                                          1 + <array_max_1033@78:1>):int,var312:int),
        ((<<array_max_1033@78:3>@113:0> > var312) && (<array_max_1033@78:1> < <array_max_1033@78:0>))
        |- P[<<array_max_1033@78:3>@113:0>](<array_max_1033@78:0>:int,
                                            <array_max_1033@78:1>:int,
                                            <<array_max_1033@78:3>@113:0>:int)
        
        P[<array_max_1033@101:1>](<array_max_1033@101:0>:int,<array_max_1033@101:1>:int),
        ((<<array_max_1033@101:3>@104:0> = 0) && (<array_max_1033@101:1> >= <array_max_1033@101:0>))
        |- P[<<array_max_1033@101:3>@104:0>](<array_max_1033@101:0>:int,
                                             <array_max_1033@101:1>:int,
                                             <<array_max_1033@101:3>@104:0>:int)
        
        P[<array_max_1033@78:1>](<array_max_1033@101:0>:int,(-1 + <array_max_1033@101:1>):int),
        P[<<<array_max_1033@78:2>@81:1>@97:0>](<array_max_1033@101:0>:int,(
                                               -1 + <array_max_1033@101:1>):int,(
                                               -1 + <array_max_1033@101:1>):int,<f_array_max_1480@99:4>:int),
        (<array_max_1033@101:1> < (1 + <array_max_1033@101:0>))
        |- P[<array_max_1033@101:1>](<array_max_1033@101:0>:int,<array_max_1033@101:1>:int)
        
        P[<<make_array_1030@83:2>@95:0>](<array_max_1033@78:0>:int,<<array_max_1033@78:2>@81:0>:int,<<<array_max_1033@78:2>@81:1>@97:0>:int),
        P[<array_max_1033@78:1>](<array_max_1033@78:0>:int,<array_max_1033@78:1>:int), (
        <array_max_1033@78:1> = 0)
        |- P[<<<array_max_1033@78:2>@81:1>@97:0>](<array_max_1033@78:0>:int,
                                                  <array_max_1033@78:1>:int,
                                                  <<array_max_1033@78:2>@81:0>:int,
                                                  <<<array_max_1033@78:2>@81:1>@97:0>:int)
        
        
        ((0 <= <make_array_1030@83:1>) &&
         ((<make_array_1030@83:1> < <make_array_1030@83:0>) && (<<make_array_1030@83:2>@95:0> = <make_array_1030@83:1>)))
        |- P[<<make_array_1030@83:2>@95:0>](<make_array_1030@83:0>:int,
                                            <make_array_1030@83:1>:int,
                                            <<make_array_1030@83:2>@95:0>:int)
        
        P[<array_max_1033@78:1>](<array_max_1033@78:0>:int,<array_max_1033@78:1>:int),
        ((<array_max_1033@78:1> < <array_max_1033@78:0>) && (<<array_max_1033@78:2>@81:0> = <array_max_1033@78:1>))
        |- P[<<array_max_1033@78:2>@81:0>](<array_max_1033@78:0>:int,
                                           <array_max_1033@78:1>:int,
                                           <<array_max_1033@78:2>@81:0>:int)
        
         (<array_max_1033@78:1> = 0) |- P[<array_max_1033@78:1>](<array_max_1033@78:0>:int,
                                                                 <array_max_1033@78:1>:int)
      lower bounds:
        P[<<make_array_1030@83:2>@95:0>](<make_array_1030@83:0>:int,<make_array_1030@83:1>:int,<<make_array_1030@83:2>@95:0>:int) =
        ((0 <= <make_array_1030@83:1>) &&
         ((<make_array_1030@83:1> < <make_array_1030@83:0>) && (<<make_array_1030@83:2>@95:0> = <make_array_1030@83:1>)))
        P[<array_max_1033@78:1>](<array_max_1033@78:0>:int,<array_max_1033@78:1>:int) = (<array_max_1033@78:1> = 0)
        P[<<<array_max_1033@78:2>@81:1>@97:0>](<array_max_1033@78:0>:int,<array_max_1033@78:1>:int,<<array_max_1033@78:2>@81:0>:int,<<<array_max_1033@78:2>@81:1>@97:0>:int) =
        ((<array_max_1033@78:1> = 0) &&
         ((0 <= <<array_max_1033@78:2>@81:0>) &&
          ((<<array_max_1033@78:2>@81:0> < <array_max_1033@78:0>) &&
           (<<<array_max_1033@78:2>@81:1>@97:0> = <<array_max_1033@78:2>@81:0>))))
        P[<<array_max_1033@78:2>@81:0>](<array_max_1033@78:0>:int,<array_max_1033@78:1>:int,<<array_max_1033@78:2>@81:0>:int) =
        ((<array_max_1033@78:1> = 0) &&
         ((<array_max_1033@78:1> < <array_max_1033@78:0>) && (<<array_max_1033@78:2>@81:0> = <array_max_1033@78:1>)))
        P[<array_max_1033@101:1>](<array_max_1033@101:0>:int,<array_max_1033@101:1>:int) =
        ((<array_max_1033@101:1> = 1) && (<array_max_1033@101:1> < (1 + <array_max_1033@101:0>)))
        P[<<array_max_1033@101:3>@104:0>](<array_max_1033@101:0>:int,<array_max_1033@101:1>:int,<<array_max_1033@101:3>@104:0>:int) =
        ((<<array_max_1033@101:3>@104:0> = 0) &&
         ((<array_max_1033@101:1> = 1) && (<array_max_1033@101:1> = <array_max_1033@101:0>)))
        P[<<array_max_1033@78:3>@113:0>](<array_max_1033@78:0>:int,<array_max_1033@78:1>:int,<<array_max_1033@78:3>@113:0>:int) =
        ((<array_max_1033@78:1> = 0) &&
         ((<<array_max_1033@78:3>@113:0> = <array_max_1033@78:1>) &&
          (((1 + <array_max_1033@78:1>) = <array_max_1033@78:0>) && (<<array_max_1033@78:3>@113:0> > 0))))
        P[<check_1148@117:2>](<check_1148@117:0>:int,<check_1148@117:1>:int,<check_1148@117:2>:int) = false
        P[<<check_1148@117:3>@120:0>](<check_1148@117:0>:int,<check_1148@117:1>:int,<check_1148@117:2>:int,<<check_1148@117:3>@120:0>:int) =
        false
        P[<make_array_1030@122:1>](<make_array_1030@122:0>:int,<make_array_1030@122:1>:int) = false
        P[<fail_1486@128:0>](<fail_1486@128:0>:bool) = false
      upper bounds:
        P[<<array_max_1033@78:3>@113:0>](var335:int,var336:int,var337:int) = true
        P[<<array_max_1033@101:3>@104:0>](var329:int,var330:int,var331:int) = true
      begin GenHcSolver.classify_pids(88341)[4]
        output:
          [<<array_max_1033@101:3>@104:0>;<<array_max_1033@78:3>@113:0>]
      end GenHcSolver.classify_pids(88341)[4] (0.000000 sec.)
      begin ApronInterface.convex_hull_interpolate(88352)[4]
        lb:(((<<array_max_1033@101:3>@104:0> = 0) &&
             ((<array_max_1033@101:1> = 1) && (<array_max_1033@101:1> = <array_max_1033@101:0>))) ||
            ((<array_max_1033@101:1> = 0) &&
             ((<<array_max_1033@101:3>@104:0> = <array_max_1033@101:1>) &&
              (((1 + <array_max_1033@101:1>) = <array_max_1033@101:0>) && (<<array_max_1033@101:3>@104:0> > 0)))))
        nub:false
        lb':(((<<array_max_1033@101:3>@104:0> = 0) &&
              ((<array_max_1033@101:1> = 1) && (<array_max_1033@101:1> = <array_max_1033@101:0>))) ||
             ((<array_max_1033@101:1> = 0) &&
              ((<<array_max_1033@101:3>@104:0> = <array_max_1033@101:1>) &&
               (((1 + <array_max_1033@101:1>) = <array_max_1033@101:0>) && (<<array_max_1033@101:3>@104:0> > 0)))))
        nub':false
        begin InterpProver.interpolate(88353)[5]
          begin InterpProver.interpolate_fresh(88354)[6]
            begin InterpProver.interpolate_log(88355)[7]
              input1: (((<<array_max_1033@101:3>@104:0> = 0) &&
                        ((<array_max_1033@101:1> = 1) && (<array_max_1033@101:1> = <array_max_1033@101:0>))) ||
                       ((<array_max_1033@101:1> = 0) &&
                        ((<<array_max_1033@101:3>@104:0> = <array_max_1033@101:1>) &&
                         (((1 + <array_max_1033@101:1>) = <array_max_1033@101:0>) &&
                          (<<array_max_1033@101:3>@104:0> > 0)))))
              input2: false
              begin InterpProver.interpolate_check(88356)[8]
                begin InterpProver.interpolate_simplify(88357)[9]
                  begin InterpProver.interpolate_quick(88514)[10]
                    
                  end InterpProver.interpolate_quick(88514)[10] (0.001000 sec.)
                  
                end InterpProver.interpolate_simplify(88357)[9] (0.001000 sec.)
                
              end InterpProver.interpolate_check(88356)[8] (0.001000 sec.)
              output: true
            end InterpProver.interpolate_log(88355)[7] (0.001000 sec.)
            
          end InterpProver.interpolate_fresh(88354)[6] (0.001000 sec.)
          
        end InterpProver.interpolate(88353)[5] (0.001000 sec.)
        output:
          P[<<array_max_1033@101:3>@104:0>](<array_max_1033@101:0>:int,<array_max_1033@101:1>:int,<<array_max_1033@101:3>@104:0>:int) =
          true
          P[<<array_max_1033@78:3>@113:0>](<array_max_1033@101:0>:int,<array_max_1033@101:1>:int,<<array_max_1033@101:3>@104:0>:int) =
          true
      end ApronInterface.convex_hull_interpolate(88352)[4] (0.001000 sec.)
      Horn clauses:
        P[<fail_1486@128:0>](<fail_1486@128:0>:bool)|- bot
        
        P[<make_array_1030@122:1>](<k_make_array_u_1182@125:1>:int,<k_make_array_u_1182@125:0>:int),
        ((0 > <k_make_array_u_1182@125:0>) && <fail_1486@128:0>) |- P[<fail_1486@128:0>](
        <fail_1486@128:0>:bool)
        
        P[<<check_1148@117:3>@120:0>](<make_array_1030@122:0>:int,0:int,<check_1148@117:2>:int,<make_array_1030@122:1>:int)|- P[<make_array_1030@122:1>](
        <make_array_1030@122:0>:int,<make_array_1030@122:1>:int)
        
        P[<check_1148@117:2>](<check_1148@117:0>:int,<check_1148@117:1>:int,<check_1148@117:2>:int),
        ((<check_1148@117:1> < <check_1148@117:0>) && (<<check_1148@117:3>@120:0> = <check_1148@117:1>))
        |- P[<<check_1148@117:3>@120:0>](<check_1148@117:0>:int,<check_1148@117:1>:int,
                                         <check_1148@117:2>:int,<<check_1148@117:3>@120:0>:int)
        
         (<check_1148@117:1> = 0)
        |- P[<check_1148@117:2>](<check_1148@117:0>:int,<check_1148@117:1>:int,
                                 <check_1148@117:2>:int)
        
        P[<array_max_1033@78:1>](<array_max_1033@101:0>:int,(-1 + <array_max_1033@101:1>):int),
        P[<<<array_max_1033@78:2>@81:1>@97:0>](<array_max_1033@101:0>:int,(
                                               -1 + <array_max_1033@101:1>):int,(
                                               -1 + <array_max_1033@101:1>):int,<f_array_max_1480@99:4>:int),
        (<array_max_1033@101:1> < (1 + <array_max_1033@101:0>))
        |- P[<array_max_1033@101:1>](<array_max_1033@101:0>:int,<array_max_1033@101:1>:int)
        
        P[<<make_array_1030@83:2>@95:0>](<array_max_1033@78:0>:int,<<array_max_1033@78:2>@81:0>:int,<<<array_max_1033@78:2>@81:1>@97:0>:int),
        P[<array_max_1033@78:1>](<array_max_1033@78:0>:int,<array_max_1033@78:1>:int), (
        <array_max_1033@78:1> = 0)
        |- P[<<<array_max_1033@78:2>@81:1>@97:0>](<array_max_1033@78:0>:int,
                                                  <array_max_1033@78:1>:int,
                                                  <<array_max_1033@78:2>@81:0>:int,
                                                  <<<array_max_1033@78:2>@81:1>@97:0>:int)
        
        
        ((0 <= <make_array_1030@83:1>) &&
         ((<make_array_1030@83:1> < <make_array_1030@83:0>) && (<<make_array_1030@83:2>@95:0> = <make_array_1030@83:1>)))
        |- P[<<make_array_1030@83:2>@95:0>](<make_array_1030@83:0>:int,
                                            <make_array_1030@83:1>:int,
                                            <<make_array_1030@83:2>@95:0>:int)
        
        P[<array_max_1033@78:1>](<array_max_1033@78:0>:int,<array_max_1033@78:1>:int),
        ((<array_max_1033@78:1> < <array_max_1033@78:0>) && (<<array_max_1033@78:2>@81:0> = <array_max_1033@78:1>))
        |- P[<<array_max_1033@78:2>@81:0>](<array_max_1033@78:0>:int,
                                           <array_max_1033@78:1>:int,
                                           <<array_max_1033@78:2>@81:0>:int)
        
         (<array_max_1033@78:1> = 0) |- P[<array_max_1033@78:1>](<array_max_1033@78:0>:int,
                                                                 <array_max_1033@78:1>:int)
      lower bounds:
        P[<check_1148@117:2>](<check_1148@117:0>:int,<check_1148@117:1>:int,<check_1148@117:2>:int) =
        (<check_1148@117:1> = 0)
        P[<<make_array_1030@83:2>@95:0>](<make_array_1030@83:0>:int,<make_array_1030@83:1>:int,<<make_array_1030@83:2>@95:0>:int) =
        ((0 <= <make_array_1030@83:1>) &&
         ((<make_array_1030@83:1> < <make_array_1030@83:0>) && (<<make_array_1030@83:2>@95:0> = <make_array_1030@83:1>)))
        P[<array_max_1033@78:1>](<array_max_1033@78:0>:int,<array_max_1033@78:1>:int) = (<array_max_1033@78:1> = 0)
        P[<<check_1148@117:3>@120:0>](<check_1148@117:0>:int,<check_1148@117:1>:int,<check_1148@117:2>:int,<<check_1148@117:3>@120:0>:int) =
        ((<check_1148@117:1> = 0) &&
         ((<check_1148@117:1> < <check_1148@117:0>) && (<<check_1148@117:3>@120:0> = <check_1148@117:1>)))
        P[<<<array_max_1033@78:2>@81:1>@97:0>](<array_max_1033@78:0>:int,<array_max_1033@78:1>:int,<<array_max_1033@78:2>@81:0>:int,<<<array_max_1033@78:2>@81:1>@97:0>:int) =
        ((<array_max_1033@78:1> = 0) &&
         ((0 <= <<array_max_1033@78:2>@81:0>) &&
          ((<<array_max_1033@78:2>@81:0> < <array_max_1033@78:0>) &&
           (<<<array_max_1033@78:2>@81:1>@97:0> = <<array_max_1033@78:2>@81:0>))))
        P[<<array_max_1033@78:2>@81:0>](<array_max_1033@78:0>:int,<array_max_1033@78:1>:int,<<array_max_1033@78:2>@81:0>:int) =
        ((<array_max_1033@78:1> = 0) &&
         ((<array_max_1033@78:1> < <array_max_1033@78:0>) && (<<array_max_1033@78:2>@81:0> = <array_max_1033@78:1>)))
        P[<make_array_1030@122:1>](<make_array_1030@122:0>:int,<make_array_1030@122:1>:int) =
        ((<make_array_1030@122:1> = 0) && (0 < <make_array_1030@122:0>))
        P[<array_max_1033@101:1>](<array_max_1033@101:0>:int,<array_max_1033@101:1>:int) =
        ((<array_max_1033@101:1> = 1) && (<array_max_1033@101:1> < (1 + <array_max_1033@101:0>)))
        P[<fail_1486@128:0>](<fail_1486@128:0>:bool) = false
      upper bounds:
        P[<array_max_1033@101:1>](var340:int,var341:int) = true
        P[<array_max_1033@78:1>](var338:int,var339:int) = true
      begin GenHcSolver.classify_pids(98541)[4]
        output:
          [<array_max_1033@78:1>;<array_max_1033@101:1>]
      end GenHcSolver.classify_pids(98541)[4] (0.000000 sec.)
      begin ApronInterface.convex_hull_interpolate(98552)[4]
        lb:((<array_max_1033@78:1> = 0) ||
            ((<array_max_1033@78:1> = 1) && (<array_max_1033@78:1> < (1 + <array_max_1033@78:0>))))
        nub:false
        lb':((<array_max_1033@78:1> = 0) ||
             ((<array_max_1033@78:1> = 1) && (<array_max_1033@78:1> < (1 + <array_max_1033@78:0>))))
        nub':false
        begin InterpProver.interpolate(98553)[5]
          begin InterpProver.interpolate_fresh(98554)[6]
            begin InterpProver.interpolate_log(98555)[7]
              input1: ((<array_max_1033@78:1> = 0) ||
                       ((<array_max_1033@78:1> = 1) && (<array_max_1033@78:1> < (1 + <array_max_1033@78:0>))))
              input2: false
              begin InterpProver.interpolate_check(98556)[8]
                begin InterpProver.interpolate_simplify(98557)[9]
                  begin InterpProver.interpolate_quick(98602)[10]
                    
                  end InterpProver.interpolate_quick(98602)[10] (0.000000 sec.)
                  
                end InterpProver.interpolate_simplify(98557)[9] (0.000000 sec.)
                
              end InterpProver.interpolate_check(98556)[8] (0.000000 sec.)
              output: true
            end InterpProver.interpolate_log(98555)[7] (0.000000 sec.)
            
          end InterpProver.interpolate_fresh(98554)[6] (0.000000 sec.)
          
        end InterpProver.interpolate(98553)[5] (0.000000 sec.)
        output:
          P[<array_max_1033@78:1>](<array_max_1033@78:0>:int,<array_max_1033@78:1>:int) = true
          P[<array_max_1033@101:1>](<array_max_1033@78:0>:int,<array_max_1033@78:1>:int) = true
      end ApronInterface.convex_hull_interpolate(98552)[4] (0.000000 sec.)
      Horn clauses:
        P[<fail_1486@128:0>](<fail_1486@128:0>:bool)|- bot
        
        P[<make_array_1030@122:1>](<k_make_array_u_1182@125:1>:int,<k_make_array_u_1182@125:0>:int),
        ((0 > <k_make_array_u_1182@125:0>) && <fail_1486@128:0>) |- P[<fail_1486@128:0>](
        <fail_1486@128:0>:bool)
        
        P[<<check_1148@117:3>@120:0>](<make_array_1030@122:0>:int,0:int,<check_1148@117:2>:int,<make_array_1030@122:1>:int)|- P[<make_array_1030@122:1>](
        <make_array_1030@122:0>:int,<make_array_1030@122:1>:int)
        
        P[<check_1148@117:2>](<check_1148@117:0>:int,<check_1148@117:1>:int,<check_1148@117:2>:int),
        ((<check_1148@117:1> < <check_1148@117:0>) && (<<check_1148@117:3>@120:0> = <check_1148@117:1>))
        |- P[<<check_1148@117:3>@120:0>](<check_1148@117:0>:int,<check_1148@117:1>:int,
                                         <check_1148@117:2>:int,<<check_1148@117:3>@120:0>:int)
        
         (<check_1148@117:1> = 0)
        |- P[<check_1148@117:2>](<check_1148@117:0>:int,<check_1148@117:1>:int,
                                 <check_1148@117:2>:int)
        
        P[<<make_array_1030@83:2>@95:0>](<array_max_1033@78:0>:int,<<array_max_1033@78:2>@81:0>:int,<<<array_max_1033@78:2>@81:1>@97:0>:int),
        (<array_max_1033@78:1> = 0)
        |- P[<<<array_max_1033@78:2>@81:1>@97:0>](<array_max_1033@78:0>:int,
                                                  <array_max_1033@78:1>:int,
                                                  <<array_max_1033@78:2>@81:0>:int,
                                                  <<<array_max_1033@78:2>@81:1>@97:0>:int)
        
        
        ((0 <= <make_array_1030@83:1>) &&
         ((<make_array_1030@83:1> < <make_array_1030@83:0>) && (<<make_array_1030@83:2>@95:0> = <make_array_1030@83:1>)))
        |- P[<<make_array_1030@83:2>@95:0>](<make_array_1030@83:0>:int,
                                            <make_array_1030@83:1>:int,
                                            <<make_array_1030@83:2>@95:0>:int)
        
         ((<array_max_1033@78:1> < <array_max_1033@78:0>) && (<<array_max_1033@78:2>@81:0> = <array_max_1033@78:1>))
        |- P[<<array_max_1033@78:2>@81:0>](<array_max_1033@78:0>:int,
                                           <array_max_1033@78:1>:int,
                                           <<array_max_1033@78:2>@81:0>:int)
      lower bounds:
        P[<check_1148@117:2>](<check_1148@117:0>:int,<check_1148@117:1>:int,<check_1148@117:2>:int) =
        (<check_1148@117:1> = 0)
        P[<<make_array_1030@83:2>@95:0>](<make_array_1030@83:0>:int,<make_array_1030@83:1>:int,<<make_array_1030@83:2>@95:0>:int) =
        ((0 <= <make_array_1030@83:1>) &&
         ((<make_array_1030@83:1> < <make_array_1030@83:0>) && (<<make_array_1030@83:2>@95:0> = <make_array_1030@83:1>)))
        P[<<array_max_1033@78:2>@81:0>](<array_max_1033@78:0>:int,<array_max_1033@78:1>:int,<<array_max_1033@78:2>@81:0>:int) =
        ((<array_max_1033@78:1> < <array_max_1033@78:0>) && (<<array_max_1033@78:2>@81:0> = <array_max_1033@78:1>))
        P[<<check_1148@117:3>@120:0>](<check_1148@117:0>:int,<check_1148@117:1>:int,<check_1148@117:2>:int,<<check_1148@117:3>@120:0>:int) =
        ((<check_1148@117:1> = 0) &&
         ((<check_1148@117:1> < <check_1148@117:0>) && (<<check_1148@117:3>@120:0> = <check_1148@117:1>)))
        P[<<<array_max_1033@78:2>@81:1>@97:0>](<array_max_1033@78:0>:int,<array_max_1033@78:1>:int,<<array_max_1033@78:2>@81:0>:int,<<<array_max_1033@78:2>@81:1>@97:0>:int) =
        ((<array_max_1033@78:1> = 0) &&
         ((0 <= <<array_max_1033@78:2>@81:0>) &&
          ((<<array_max_1033@78:2>@81:0> < <array_max_1033@78:0>) &&
           (<<<array_max_1033@78:2>@81:1>@97:0> = <<array_max_1033@78:2>@81:0>))))
        P[<make_array_1030@122:1>](<make_array_1030@122:0>:int,<make_array_1030@122:1>:int) =
        ((<make_array_1030@122:1> = 0) && (0 < <make_array_1030@122:0>))
        P[<fail_1486@128:0>](<fail_1486@128:0>:bool) = false
      upper bounds:
        P[<<<array_max_1033@78:2>@81:1>@97:0>](var342:int,var343:int,var344:int,var345:int) = true
      begin GenHcSolver.classify_pids(104494)[4]
        output:
          [<<<array_max_1033@78:2>@81:1>@97:0>]
      end GenHcSolver.classify_pids(104494)[4] (0.000000 sec.)
      lb:((<array_max_1033@78:1> = 0) &&
          ((0 <= <<array_max_1033@78:2>@81:0>) &&
           ((<<array_max_1033@78:2>@81:0> < <array_max_1033@78:0>) &&
            (<<<array_max_1033@78:2>@81:1>@97:0> = <<array_max_1033@78:2>@81:0>))))
      nub:false
      begin ApronInterface.convex_hull_interpolate(104497)[4]
        lb:((<array_max_1033@78:1> = 0) &&
            ((0 <= <<array_max_1033@78:2>@81:0>) &&
             ((<<array_max_1033@78:2>@81:0> < <array_max_1033@78:0>) &&
              (<<<array_max_1033@78:2>@81:1>@97:0> = <<array_max_1033@78:2>@81:0>))))
        nub:false
        lb':((<array_max_1033@78:1> = 0) &&
             ((0 <= <<array_max_1033@78:2>@81:0>) &&
              ((<<array_max_1033@78:2>@81:0> < <array_max_1033@78:0>) &&
               (<<<array_max_1033@78:2>@81:1>@97:0> = <<array_max_1033@78:2>@81:0>))))
        nub':false
        begin InterpProver.interpolate(104498)[5]
          begin InterpProver.interpolate_fresh(104499)[6]
            begin InterpProver.interpolate_log(104500)[7]
              input1: ((<array_max_1033@78:1> = 0) &&
                       ((0 <= <<array_max_1033@78:2>@81:0>) &&
                        ((<<array_max_1033@78:2>@81:0> < <array_max_1033@78:0>) &&
                         (<<<array_max_1033@78:2>@81:1>@97:0> = <<array_max_1033@78:2>@81:0>))))
              input2: false
              begin InterpProver.interpolate_check(104501)[8]
                begin InterpProver.interpolate_simplify(104502)[9]
                  begin InterpProver.interpolate_quick(104600)[10]
                    
                  end InterpProver.interpolate_quick(104600)[10] (0.001000 sec.)
                  
                end InterpProver.interpolate_simplify(104502)[9] (0.002000 sec.)
                
              end InterpProver.interpolate_check(104501)[8] (0.002000 sec.)
              output: true
            end InterpProver.interpolate_log(104500)[7] (0.002000 sec.)
            
          end InterpProver.interpolate_fresh(104499)[6] (0.002000 sec.)
          
        end InterpProver.interpolate(104498)[5] (0.002000 sec.)
        output:
          P[<<<array_max_1033@78:2>@81:1>@97:0>](<array_max_1033@78:0>:int,<array_max_1033@78:1>:int,<<array_max_1033@78:2>@81:0>:int,<<<array_max_1033@78:2>@81:1>@97:0>:int) =
          true
      end ApronInterface.convex_hull_interpolate(104497)[4] (0.002000 sec.)
      Horn clauses:
        P[<fail_1486@128:0>](<fail_1486@128:0>:bool)|- bot
        
        P[<make_array_1030@122:1>](<k_make_array_u_1182@125:1>:int,<k_make_array_u_1182@125:0>:int),
        ((0 > <k_make_array_u_1182@125:0>) && <fail_1486@128:0>) |- P[<fail_1486@128:0>](
        <fail_1486@128:0>:bool)
        
        P[<<check_1148@117:3>@120:0>](<make_array_1030@122:0>:int,0:int,<check_1148@117:2>:int,<make_array_1030@122:1>:int)|- P[<make_array_1030@122:1>](
        <make_array_1030@122:0>:int,<make_array_1030@122:1>:int)
        
        P[<check_1148@117:2>](<check_1148@117:0>:int,<check_1148@117:1>:int,<check_1148@117:2>:int),
        ((<check_1148@117:1> < <check_1148@117:0>) && (<<check_1148@117:3>@120:0> = <check_1148@117:1>))
        |- P[<<check_1148@117:3>@120:0>](<check_1148@117:0>:int,<check_1148@117:1>:int,
                                         <check_1148@117:2>:int,<<check_1148@117:3>@120:0>:int)
        
         (<check_1148@117:1> = 0)
        |- P[<check_1148@117:2>](<check_1148@117:0>:int,<check_1148@117:1>:int,
                                 <check_1148@117:2>:int)
        
        
        ((0 <= <make_array_1030@83:1>) &&
         ((<make_array_1030@83:1> < <make_array_1030@83:0>) && (<<make_array_1030@83:2>@95:0> = <make_array_1030@83:1>)))
        |- P[<<make_array_1030@83:2>@95:0>](<make_array_1030@83:0>:int,
                                            <make_array_1030@83:1>:int,
                                            <<make_array_1030@83:2>@95:0>:int)
        
         ((<array_max_1033@78:1> < <array_max_1033@78:0>) && (<<array_max_1033@78:2>@81:0> = <array_max_1033@78:1>))
        |- P[<<array_max_1033@78:2>@81:0>](<array_max_1033@78:0>:int,
                                           <array_max_1033@78:1>:int,
                                           <<array_max_1033@78:2>@81:0>:int)
      lower bounds:
        P[<check_1148@117:2>](<check_1148@117:0>:int,<check_1148@117:1>:int,<check_1148@117:2>:int) =
        (<check_1148@117:1> = 0)
        P[<<make_array_1030@83:2>@95:0>](<make_array_1030@83:0>:int,<make_array_1030@83:1>:int,<<make_array_1030@83:2>@95:0>:int) =
        ((0 <= <make_array_1030@83:1>) &&
         ((<make_array_1030@83:1> < <make_array_1030@83:0>) && (<<make_array_1030@83:2>@95:0> = <make_array_1030@83:1>)))
        P[<<array_max_1033@78:2>@81:0>](<array_max_1033@78:0>:int,<array_max_1033@78:1>:int,<<array_max_1033@78:2>@81:0>:int) =
        ((<array_max_1033@78:1> < <array_max_1033@78:0>) && (<<array_max_1033@78:2>@81:0> = <array_max_1033@78:1>))
        P[<<check_1148@117:3>@120:0>](<check_1148@117:0>:int,<check_1148@117:1>:int,<check_1148@117:2>:int,<<check_1148@117:3>@120:0>:int) =
        ((<check_1148@117:1> = 0) &&
         ((<check_1148@117:1> < <check_1148@117:0>) && (<<check_1148@117:3>@120:0> = <check_1148@117:1>)))
        P[<make_array_1030@122:1>](<make_array_1030@122:0>:int,<make_array_1030@122:1>:int) =
        ((<make_array_1030@122:1> = 0) && (0 < <make_array_1030@122:0>))
        P[<fail_1486@128:0>](<fail_1486@128:0>:bool) = false
      upper bounds:
        P[<<make_array_1030@83:2>@95:0>](var346:int,var347:int,var348:int) = true
      begin GenHcSolver.classify_pids(107617)[4]
        output:
          [<<make_array_1030@83:2>@95:0>]
      end GenHcSolver.classify_pids(107617)[4] (0.000000 sec.)
      lb:((0 <= <make_array_1030@83:1>) &&
          ((<make_array_1030@83:1> < <make_array_1030@83:0>) &&
           (<<make_array_1030@83:2>@95:0> = <make_array_1030@83:1>)))
      nub:false
      begin ApronInterface.convex_hull_interpolate(107620)[4]
        lb:((0 <= <make_array_1030@83:1>) &&
            ((<make_array_1030@83:1> < <make_array_1030@83:0>) &&
             (<<make_array_1030@83:2>@95:0> = <make_array_1030@83:1>)))
        nub:false
        lb':((0 <= <make_array_1030@83:1>) &&
             ((<make_array_1030@83:1> < <make_array_1030@83:0>) &&
              (<<make_array_1030@83:2>@95:0> = <make_array_1030@83:1>)))
        nub':false
        begin InterpProver.interpolate(107621)[5]
          begin InterpProver.interpolate_fresh(107622)[6]
            begin InterpProver.interpolate_log(107623)[7]
              input1: ((0 <= <make_array_1030@83:1>) &&
                       ((<make_array_1030@83:1> < <make_array_1030@83:0>) &&
                        (<<make_array_1030@83:2>@95:0> = <make_array_1030@83:1>)))
              input2: false
              begin InterpProver.interpolate_check(107624)[8]
                begin InterpProver.interpolate_simplify(107625)[9]
                  begin InterpProver.interpolate_quick(107680)[10]
                    
                  end InterpProver.interpolate_quick(107680)[10] (0.000000 sec.)
                  
                end InterpProver.interpolate_simplify(107625)[9] (0.001000 sec.)
                
              end InterpProver.interpolate_check(107624)[8] (0.001000 sec.)
              output: true
            end InterpProver.interpolate_log(107623)[7] (0.001000 sec.)
            
          end InterpProver.interpolate_fresh(107622)[6] (0.001000 sec.)
          
        end InterpProver.interpolate(107621)[5] (0.001000 sec.)
        output:
          P[<<make_array_1030@83:2>@95:0>](<make_array_1030@83:0>:int,<make_array_1030@83:1>:int,<<make_array_1030@83:2>@95:0>:int) =
          true
      end ApronInterface.convex_hull_interpolate(107620)[4] (0.001000 sec.)
      Horn clauses:
        P[<fail_1486@128:0>](<fail_1486@128:0>:bool)|- bot
        
        P[<make_array_1030@122:1>](<k_make_array_u_1182@125:1>:int,<k_make_array_u_1182@125:0>:int),
        ((0 > <k_make_array_u_1182@125:0>) && <fail_1486@128:0>) |- P[<fail_1486@128:0>](
        <fail_1486@128:0>:bool)
        
        P[<<check_1148@117:3>@120:0>](<make_array_1030@122:0>:int,0:int,<check_1148@117:2>:int,<make_array_1030@122:1>:int)|- P[<make_array_1030@122:1>](
        <make_array_1030@122:0>:int,<make_array_1030@122:1>:int)
        
        P[<check_1148@117:2>](<check_1148@117:0>:int,<check_1148@117:1>:int,<check_1148@117:2>:int),
        ((<check_1148@117:1> < <check_1148@117:0>) && (<<check_1148@117:3>@120:0> = <check_1148@117:1>))
        |- P[<<check_1148@117:3>@120:0>](<check_1148@117:0>:int,<check_1148@117:1>:int,
                                         <check_1148@117:2>:int,<<check_1148@117:3>@120:0>:int)
        
         (<check_1148@117:1> = 0)
        |- P[<check_1148@117:2>](<check_1148@117:0>:int,<check_1148@117:1>:int,
                                 <check_1148@117:2>:int)
        
         ((<array_max_1033@78:1> < <array_max_1033@78:0>) && (<<array_max_1033@78:2>@81:0> = <array_max_1033@78:1>))
        |- P[<<array_max_1033@78:2>@81:0>](<array_max_1033@78:0>:int,
                                           <array_max_1033@78:1>:int,
                                           <<array_max_1033@78:2>@81:0>:int)
      lower bounds:
        P[<check_1148@117:2>](<check_1148@117:0>:int,<check_1148@117:1>:int,<check_1148@117:2>:int) =
        (<check_1148@117:1> = 0)
        P[<<array_max_1033@78:2>@81:0>](<array_max_1033@78:0>:int,<array_max_1033@78:1>:int,<<array_max_1033@78:2>@81:0>:int) =
        ((<array_max_1033@78:1> < <array_max_1033@78:0>) && (<<array_max_1033@78:2>@81:0> = <array_max_1033@78:1>))
        P[<<check_1148@117:3>@120:0>](<check_1148@117:0>:int,<check_1148@117:1>:int,<check_1148@117:2>:int,<<check_1148@117:3>@120:0>:int) =
        ((<check_1148@117:1> = 0) &&
         ((<check_1148@117:1> < <check_1148@117:0>) && (<<check_1148@117:3>@120:0> = <check_1148@117:1>)))
        P[<make_array_1030@122:1>](<make_array_1030@122:0>:int,<make_array_1030@122:1>:int) =
        ((<make_array_1030@122:1> = 0) && (0 < <make_array_1030@122:0>))
        P[<fail_1486@128:0>](<fail_1486@128:0>:bool) = false
      upper bounds:
        P[<<array_max_1033@78:2>@81:0>](var349:int,var350:int,var351:int) = true
      begin GenHcSolver.classify_pids(109898)[4]
        output:
          [<<array_max_1033@78:2>@81:0>]
      end GenHcSolver.classify_pids(109898)[4] (0.000000 sec.)
      lb:((<array_max_1033@78:1> < <array_max_1033@78:0>) && (<<array_max_1033@78:2>@81:0> = <array_max_1033@78:1>))
      nub:false
      begin ApronInterface.convex_hull_interpolate(109901)[4]
        lb:((<array_max_1033@78:1> < <array_max_1033@78:0>) && (<<array_max_1033@78:2>@81:0> = <array_max_1033@78:1>))
        nub:false
        lb':((<array_max_1033@78:1> < <array_max_1033@78:0>) && (<<array_max_1033@78:2>@81:0> = <array_max_1033@78:1>))
        nub':false
        begin InterpProver.interpolate(109902)[5]
          begin InterpProver.interpolate_fresh(109903)[6]
            begin InterpProver.interpolate_log(109904)[7]
              input1: ((<array_max_1033@78:1> < <array_max_1033@78:0>) &&
                       (<<array_max_1033@78:2>@81:0> = <array_max_1033@78:1>))
              input2: false
              begin InterpProver.interpolate_check(109905)[8]
                begin InterpProver.interpolate_simplify(109906)[9]
                  begin InterpProver.interpolate_quick(109936)[10]
                    
                  end InterpProver.interpolate_quick(109936)[10] (0.001000 sec.)
                  
                end InterpProver.interpolate_simplify(109906)[9] (0.001000 sec.)
                
              end InterpProver.interpolate_check(109905)[8] (0.001000 sec.)
              output: true
            end InterpProver.interpolate_log(109904)[7] (0.001000 sec.)
            
          end InterpProver.interpolate_fresh(109903)[6] (0.001000 sec.)
          
        end InterpProver.interpolate(109902)[5] (0.001000 sec.)
        output:
          P[<<array_max_1033@78:2>@81:0>](<array_max_1033@78:0>:int,<array_max_1033@78:1>:int,<<array_max_1033@78:2>@81:0>:int) =
          true
      end ApronInterface.convex_hull_interpolate(109901)[4] (0.001000 sec.)
      Horn clauses:
        P[<fail_1486@128:0>](<fail_1486@128:0>:bool)|- bot
        
        P[<make_array_1030@122:1>](<k_make_array_u_1182@125:1>:int,<k_make_array_u_1182@125:0>:int),
        ((0 > <k_make_array_u_1182@125:0>) && <fail_1486@128:0>) |- P[<fail_1486@128:0>](
        <fail_1486@128:0>:bool)
        
        P[<<check_1148@117:3>@120:0>](<make_array_1030@122:0>:int,0:int,<check_1148@117:2>:int,<make_array_1030@122:1>:int)|- P[<make_array_1030@122:1>](
        <make_array_1030@122:0>:int,<make_array_1030@122:1>:int)
        
        P[<check_1148@117:2>](<check_1148@117:0>:int,<check_1148@117:1>:int,<check_1148@117:2>:int),
        ((<check_1148@117:1> < <check_1148@117:0>) && (<<check_1148@117:3>@120:0> = <check_1148@117:1>))
        |- P[<<check_1148@117:3>@120:0>](<check_1148@117:0>:int,<check_1148@117:1>:int,
                                         <check_1148@117:2>:int,<<check_1148@117:3>@120:0>:int)
        
         (<check_1148@117:1> = 0)
        |- P[<check_1148@117:2>](<check_1148@117:0>:int,<check_1148@117:1>:int,
                                 <check_1148@117:2>:int)
      lower bounds:
        P[<check_1148@117:2>](<check_1148@117:0>:int,<check_1148@117:1>:int,<check_1148@117:2>:int) =
        (<check_1148@117:1> = 0)
        P[<<check_1148@117:3>@120:0>](<check_1148@117:0>:int,<check_1148@117:1>:int,<check_1148@117:2>:int,<<check_1148@117:3>@120:0>:int) =
        ((<check_1148@117:1> = 0) &&
         ((<check_1148@117:1> < <check_1148@117:0>) && (<<check_1148@117:3>@120:0> = <check_1148@117:1>)))
        P[<make_array_1030@122:1>](<make_array_1030@122:0>:int,<make_array_1030@122:1>:int) =
        ((<make_array_1030@122:1> = 0) && (0 < <make_array_1030@122:0>))
        P[<fail_1486@128:0>](<fail_1486@128:0>:bool) = false
      upper bounds:
        P[<fail_1486@128:0>](var353:bool) = true
      begin GenHcSolver.classify_pids(111528)[4]
        output:
          [<fail_1486@128:0>]
      end GenHcSolver.classify_pids(111528)[4] (0.000000 sec.)
      lb:false
      nub:false
      begin ApronInterface.convex_hull_interpolate(111531)[4]
        lb:false
        nub:false
        lb':false
        nub':false
        begin InterpProver.interpolate(111532)[5]
          begin InterpProver.interpolate_fresh(111533)[6]
            begin InterpProver.interpolate_log(111534)[7]
              input1: false
              input2: false
              begin InterpProver.interpolate_check(111535)[8]
                begin InterpProver.interpolate_simplify(111536)[9]
                  begin InterpProver.interpolate_quick(111549)[10]
                    
                  end InterpProver.interpolate_quick(111549)[10] (0.000000 sec.)
                  begin minimizing # of disjunctions(111553)[10]
                    input: false
                    output: false
                  end minimizing # of disjunctions(111553)[10] (0.000000 sec.)
                  
                end InterpProver.interpolate_simplify(111536)[9] (0.000000 sec.)
                
              end InterpProver.interpolate_check(111535)[8] (0.000000 sec.)
              output: false
            end InterpProver.interpolate_log(111534)[7] (0.000000 sec.)
            
          end InterpProver.interpolate_fresh(111533)[6] (0.000000 sec.)
          
        end InterpProver.interpolate(111532)[5] (0.000000 sec.)
        output:
          P[<fail_1486@128:0>](<fail_1486@128:0>:bool) = false
      end ApronInterface.convex_hull_interpolate(111531)[4] (0.000000 sec.)
      Horn clauses:
        P[<make_array_1030@122:1>](<k_make_array_u_1182@125:1>:int,<k_make_array_u_1182@125:0>:int),
        (0 > <k_make_array_u_1182@125:0>) |- bot
        
        P[<<check_1148@117:3>@120:0>](<make_array_1030@122:0>:int,0:int,<check_1148@117:2>:int,<make_array_1030@122:1>:int)|- P[<make_array_1030@122:1>](
        <make_array_1030@122:0>:int,<make_array_1030@122:1>:int)
        
        P[<check_1148@117:2>](<check_1148@117:0>:int,<check_1148@117:1>:int,<check_1148@117:2>:int),
        ((<check_1148@117:1> < <check_1148@117:0>) && (<<check_1148@117:3>@120:0> = <check_1148@117:1>))
        |- P[<<check_1148@117:3>@120:0>](<check_1148@117:0>:int,<check_1148@117:1>:int,
                                         <check_1148@117:2>:int,<<check_1148@117:3>@120:0>:int)
        
         (<check_1148@117:1> = 0)
        |- P[<check_1148@117:2>](<check_1148@117:0>:int,<check_1148@117:1>:int,
                                 <check_1148@117:2>:int)
      lower bounds:
        P[<check_1148@117:2>](<check_1148@117:0>:int,<check_1148@117:1>:int,<check_1148@117:2>:int) =
        (<check_1148@117:1> = 0)
        P[<<check_1148@117:3>@120:0>](<check_1148@117:0>:int,<check_1148@117:1>:int,<check_1148@117:2>:int,<<check_1148@117:3>@120:0>:int) =
        ((<check_1148@117:1> = 0) &&
         ((<check_1148@117:1> < <check_1148@117:0>) && (<<check_1148@117:3>@120:0> = <check_1148@117:1>)))
        P[<make_array_1030@122:1>](<make_array_1030@122:0>:int,<make_array_1030@122:1>:int) =
        ((<make_array_1030@122:1> = 0) && (0 < <make_array_1030@122:0>))
      upper bounds:
        P[<make_array_1030@122:1>](var354:int,var355:int) = (0 <= var355)
      begin GenHcSolver.classify_pids(112994)[4]
        output:
          [<make_array_1030@122:1>]
      end GenHcSolver.classify_pids(112994)[4] (0.000000 sec.)
      lb:((<make_array_1030@122:1> = 0) && (0 < <make_array_1030@122:0>))
      nub:(not (0 <= <make_array_1030@122:1>))
      begin ApronInterface.convex_hull_interpolate(112997)[4]
        lb:((<make_array_1030@122:1> = 0) && (0 < <make_array_1030@122:0>))
        nub:(not (0 <= <make_array_1030@122:1>))
        lb':((<make_array_1030@122:1> = 0) && (0 < <make_array_1030@122:0>))
        nub':(not (0 <= <make_array_1030@122:1>))
        begin InterpProver.interpolate(112998)[5]
          begin InterpProver.interpolate_fresh(112999)[6]
            begin InterpProver.interpolate_log(113000)[7]
              input1: ((<make_array_1030@122:1> = 0) && (0 < <make_array_1030@122:0>))
              input2: (not (0 <= <make_array_1030@122:1>))
              begin InterpProver.interpolate_check(113001)[8]
                begin InterpProver.interpolate_simplify(113002)[9]
                  begin InterpProver.interpolate_quick(113031)[10]
                    begin CsisatInterface.interpolate_csisat_wrap(113040)[11]
                      begin CsisatInterface.interpolate_csisat_post_process(113041)[12]
                        begin CsisatInterface.interpolate_csisat_log(113042)[13]
                          input1: (0 = v_sep_make_array_1030_sep_122_sep_1 & 1 <= v_sep_make_array_1030_sep_122_sep_0)
                          input2: (1 + v_sep_make_array_1030_sep_122_sep_1) <= 0
                          begin CsisatInterface.interpolate_csisat_raw(113043)[14]
                            
                          end CsisatInterface.interpolate_csisat_raw(113043)[14] (0.000000 sec.)
                          output: -2*v_sep_make_array_1030_sep_122_sep_1 <= 0
                          
                        end CsisatInterface.interpolate_csisat_log(113042)[13] (0.000000 sec.)
                        after simplification: -2*v_sep_make_array_1030_sep_122_sep_1 <= 0
                        after dnf conversion: ((-2*v_sep_make_array_1030_sep_122_sep_1 <= 0))
                        
                      end CsisatInterface.interpolate_csisat_post_process(113041)[12] (0.001000 sec.)
                      
                    end CsisatInterface.interpolate_csisat_wrap(113040)[11] (0.001000 sec.)
                    
                  end InterpProver.interpolate_quick(113031)[10] (0.001000 sec.)
                  
                end InterpProver.interpolate_simplify(113002)[9] (0.001000 sec.)
                
              end InterpProver.interpolate_check(113001)[8] (0.001000 sec.)
              output: (0 <= <make_array_1030@122:1>)
            end InterpProver.interpolate_log(113000)[7] (0.001000 sec.)
            
          end InterpProver.interpolate_fresh(112999)[6] (0.001000 sec.)
          
        end InterpProver.interpolate(112998)[5] (0.001000 sec.)
        output:
          P[<make_array_1030@122:1>](<make_array_1030@122:0>:int,<make_array_1030@122:1>:int) =
          (0 <= <make_array_1030@122:1>)
      end ApronInterface.convex_hull_interpolate(112997)[4] (0.001000 sec.)
      Horn clauses:
        P[<<check_1148@117:3>@120:0>](<make_array_1030@122:0>:int,0:int,<check_1148@117:2>:int,<make_array_1030@122:1>:int),
        (0 > <make_array_1030@122:1>) |- bot
        
        P[<check_1148@117:2>](<check_1148@117:0>:int,<check_1148@117:1>:int,<check_1148@117:2>:int),
        ((<check_1148@117:1> < <check_1148@117:0>) && (<<check_1148@117:3>@120:0> = <check_1148@117:1>))
        |- P[<<check_1148@117:3>@120:0>](<check_1148@117:0>:int,<check_1148@117:1>:int,
                                         <check_1148@117:2>:int,<<check_1148@117:3>@120:0>:int)
        
         (<check_1148@117:1> = 0)
        |- P[<check_1148@117:2>](<check_1148@117:0>:int,<check_1148@117:1>:int,
                                 <check_1148@117:2>:int)
      lower bounds:
        P[<check_1148@117:2>](<check_1148@117:0>:int,<check_1148@117:1>:int,<check_1148@117:2>:int) =
        (<check_1148@117:1> = 0)
        P[<<check_1148@117:3>@120:0>](<check_1148@117:0>:int,<check_1148@117:1>:int,<check_1148@117:2>:int,<<check_1148@117:3>@120:0>:int) =
        ((<check_1148@117:1> = 0) &&
         ((<check_1148@117:1> < <check_1148@117:0>) && (<<check_1148@117:3>@120:0> = <check_1148@117:1>)))
      upper bounds:
        P[<<check_1148@117:3>@120:0>](var356:int,var357:int,var358:int,var359:int) = ((var357 <> 0) || (0 <= var359))
      begin GenHcSolver.classify_pids(114284)[4]
        output:
          [<<check_1148@117:3>@120:0>]
      end GenHcSolver.classify_pids(114284)[4] (0.000000 sec.)
      lb:((<check_1148@117:1> = 0) &&
          ((<check_1148@117:1> < <check_1148@117:0>) && (<<check_1148@117:3>@120:0> = <check_1148@117:1>)))
      nub:(not ((<check_1148@117:1> <> 0) || (0 <= <<check_1148@117:3>@120:0>)))
      begin ApronInterface.convex_hull_interpolate(114287)[4]
        lb:((<check_1148@117:1> = 0) &&
            ((<check_1148@117:1> < <check_1148@117:0>) && (<<check_1148@117:3>@120:0> = <check_1148@117:1>)))
        nub:(not ((<check_1148@117:1> <> 0) || (0 <= <<check_1148@117:3>@120:0>)))
        lb':((<check_1148@117:1> = 0) &&
             ((<check_1148@117:1> < <check_1148@117:0>) && (<<check_1148@117:3>@120:0> = <check_1148@117:1>)))
        nub':(not ((<check_1148@117:1> <> 0) || (0 <= <<check_1148@117:3>@120:0>)))
        begin InterpProver.interpolate(114288)[5]
          begin InterpProver.interpolate_fresh(114289)[6]
            begin InterpProver.interpolate_log(114290)[7]
              input1: ((<check_1148@117:1> = 0) &&
                       ((<check_1148@117:1> < <check_1148@117:0>) && (<<check_1148@117:3>@120:0> = <check_1148@117:1>)))
              input2: (not ((<check_1148@117:1> <> 0) || (0 <= <<check_1148@117:3>@120:0>)))
              begin InterpProver.interpolate_check(114291)[8]
                begin InterpProver.interpolate_simplify(114292)[9]
                  begin InterpProver.interpolate_quick(114371)[10]
                    begin CsisatInterface.interpolate_csisat_wrap(114380)[11]
                      begin CsisatInterface.interpolate_csisat_post_process(114381)[12]
                        begin CsisatInterface.interpolate_csisat_log(114382)[13]
                          input1: (0 = v_sep_check_1148_sep_117_sep_1 & v_sep_check_1148_sep_117_sep_1 = v_sep_check_1148_sep_117_sep_3_sep_120_sep_0 & (1 + v_sep_check_1148_sep_117_sep_1) <= v_sep_check_1148_sep_117_sep_0)
                          input2: (0 = v_sep_check_1148_sep_117_sep_1 & (1 + v_sep_check_1148_sep_117_sep_3_sep_120_sep_0) <= 0)
                          begin CsisatInterface.interpolate_csisat_raw(114383)[14]
                            
                          end CsisatInterface.interpolate_csisat_raw(114383)[14] (0.000000 sec.)
                          output: -2*v_sep_check_1148_sep_117_sep_3_sep_120_sep_0 <= 0
                          
                        end CsisatInterface.interpolate_csisat_log(114382)[13] (0.000000 sec.)
                        after simplification: -2*v_sep_check_1148_sep_117_sep_3_sep_120_sep_0 <= 0
                        after dnf conversion: ((-2*v_sep_check_1148_sep_117_sep_3_sep_120_sep_0 <= 0))
                        
                      end CsisatInterface.interpolate_csisat_post_process(114381)[12] (0.000000 sec.)
                      
                    end CsisatInterface.interpolate_csisat_wrap(114380)[11] (0.000000 sec.)
                    
                  end InterpProver.interpolate_quick(114371)[10] (0.000000 sec.)
                  
                end InterpProver.interpolate_simplify(114292)[9] (0.001000 sec.)
                
              end InterpProver.interpolate_check(114291)[8] (0.002000 sec.)
              output: (0 <= <<check_1148@117:3>@120:0>)
            end InterpProver.interpolate_log(114290)[7] (0.002000 sec.)
            
          end InterpProver.interpolate_fresh(114289)[6] (0.002000 sec.)
          
        end InterpProver.interpolate(114288)[5] (0.002000 sec.)
        output:
          P[<<check_1148@117:3>@120:0>](<check_1148@117:0>:int,<check_1148@117:1>:int,<check_1148@117:2>:int,<<check_1148@117:3>@120:0>:int) =
          (0 <= <<check_1148@117:3>@120:0>)
      end ApronInterface.convex_hull_interpolate(114287)[4] (0.002000 sec.)
      Horn clauses:
        P[<check_1148@117:2>](<check_1148@117:0>:int,<<check_1148@117:3>@120:0>:int,<check_1148@117:2>:int),
        ((<<check_1148@117:3>@120:0> < <check_1148@117:0>) && (0 > <<check_1148@117:3>@120:0>)) |- bot
        
         (<check_1148@117:1> = 0)
        |- P[<check_1148@117:2>](<check_1148@117:0>:int,<check_1148@117:1>:int,
                                 <check_1148@117:2>:int)
      lower bounds:
        P[<check_1148@117:2>](<check_1148@117:0>:int,<check_1148@117:1>:int,<check_1148@117:2>:int) =
        (<check_1148@117:1> = 0)
      upper bounds:
        P[<check_1148@117:2>](var360:int,var361:int,var362:int) = ((var361 >= var360) || (0 <= var361))
      begin GenHcSolver.classify_pids(115161)[4]
        output:
          [<check_1148@117:2>]
      end GenHcSolver.classify_pids(115161)[4] (0.000000 sec.)
      lb:(<check_1148@117:1> = 0)
      nub:(not ((<check_1148@117:1> >= <check_1148@117:0>) || (0 <= <check_1148@117:1>)))
      begin ApronInterface.convex_hull_interpolate(115164)[4]
        lb:(<check_1148@117:1> = 0)
        nub:(not ((<check_1148@117:1> >= <check_1148@117:0>) || (0 <= <check_1148@117:1>)))
        lb':(<check_1148@117:1> = 0)
        nub':(not ((<check_1148@117:1> >= <check_1148@117:0>) || (0 <= <check_1148@117:1>)))
        begin InterpProver.interpolate(115165)[5]
          begin InterpProver.interpolate_fresh(115166)[6]
            begin InterpProver.interpolate_log(115167)[7]
              input1: (<check_1148@117:1> = 0)
              input2: (not ((<check_1148@117:1> >= <check_1148@117:0>) || (0 <= <check_1148@117:1>)))
              begin InterpProver.interpolate_check(115168)[8]
                begin InterpProver.interpolate_simplify(115169)[9]
                  begin InterpProver.interpolate_quick(115208)[10]
                    begin CsisatInterface.interpolate_csisat_wrap(115217)[11]
                      begin CsisatInterface.interpolate_csisat_post_process(115218)[12]
                        begin CsisatInterface.interpolate_csisat_log(115219)[13]
                          input1: 0 = v_sep_check_1148_sep_117_sep_1
                          input2: ((1 + v_sep_check_1148_sep_117_sep_1) <= 0 & (1 + v_sep_check_1148_sep_117_sep_1) <= v_sep_check_1148_sep_117_sep_0)
                          begin CsisatInterface.interpolate_csisat_raw(115220)[14]
                            
                          end CsisatInterface.interpolate_csisat_raw(115220)[14] (0.000000 sec.)
                          output: -2*v_sep_check_1148_sep_117_sep_1 <= 0
                          
                        end CsisatInterface.interpolate_csisat_log(115219)[13] (0.000000 sec.)
                        after simplification: -2*v_sep_check_1148_sep_117_sep_1 <= 0
                        after dnf conversion: ((-2*v_sep_check_1148_sep_117_sep_1 <= 0))
                        
                      end CsisatInterface.interpolate_csisat_post_process(115218)[12] (0.000000 sec.)
                      
                    end CsisatInterface.interpolate_csisat_wrap(115217)[11] (0.000000 sec.)
                    
                  end InterpProver.interpolate_quick(115208)[10] (0.000000 sec.)
                  
                end InterpProver.interpolate_simplify(115169)[9] (0.000000 sec.)
                
              end InterpProver.interpolate_check(115168)[8] (0.001000 sec.)
              output: (0 <= <check_1148@117:1>)
            end InterpProver.interpolate_log(115167)[7] (0.001000 sec.)
            
          end InterpProver.interpolate_fresh(115166)[6] (0.001000 sec.)
          
        end InterpProver.interpolate(115165)[5] (0.001000 sec.)
        output:
          P[<check_1148@117:2>](<check_1148@117:0>:int,<check_1148@117:1>:int,<check_1148@117:2>:int) =
          (0 <= <check_1148@117:1>)
      end ApronInterface.convex_hull_interpolate(115164)[4] (0.002000 sec.)
      begin HcSolver.check_validity(115336)[4]
        input:
          P[<fail_1486@128:0>](<fail_1486@128:0>:bool)|- bot
          
          P[<make_array_1030@122:1>](<k_make_array_u_1182@125:1>:int,<k_make_array_u_1182@125:0>:int),
          ((0 > <k_make_array_u_1182@125:0>) && <fail_1486@128:0>) |- P[<fail_1486@128:0>](
          <fail_1486@128:0>:bool)
          
          P[<<array_max_1033@78:3>@113:0>](<make_array_1030@122:0>:int,0:int,<check_1148@117:2>:int),
          P[<<check_1148@117:3>@120:0>](<make_array_1030@122:0>:int,0:int,<check_1148@117:2>:int,<make_array_1030@122:1>:int)|- P[<make_array_1030@122:1>](
          <make_array_1030@122:0>:int,<make_array_1030@122:1>:int)
          
          P[<check_1148@117:2>](<check_1148@117:0>:int,<check_1148@117:1>:int,<check_1148@117:2>:int),
          ((<check_1148@117:1> < <check_1148@117:0>) && (<<check_1148@117:3>@120:0> = <check_1148@117:1>))
          |- P[<<check_1148@117:3>@120:0>](<check_1148@117:0>:int,<check_1148@117:1>:int,
                                           <check_1148@117:2>:int,<<check_1148@117:3>@120:0>:int)
          
          P[<<array_max_1033@78:3>@113:0>](<check_1148@117:0>:int,0:int,<check_1148@117:2>:int),
          (<check_1148@117:1> = 0)
          |- P[<check_1148@117:2>](<check_1148@117:0>:int,<check_1148@117:1>:int,
                                   <check_1148@117:2>:int)
          
          P[<array_max_1033@78:1>](<array_max_1033@78:0>:int,<array_max_1033@78:1>:int),
          P[<<<array_max_1033@78:2>@81:1>@97:0>](<array_max_1033@78:0>:int,<array_max_1033@78:1>:int,<array_max_1033@78:1>:int,<<array_max_1033@78:3>@113:0>:int),
          P[<<array_max_1033@101:3>@104:0>](<array_max_1033@78:0>:int,(
                                            1 + <array_max_1033@78:1>):int,var312:int),
          ((<<array_max_1033@78:3>@113:0> > var312) && (<array_max_1033@78:1> < <array_max_1033@78:0>))
          |- P[<<array_max_1033@78:3>@113:0>](<array_max_1033@78:0>:int,
                                              <array_max_1033@78:1>:int,
                                              <<array_max_1033@78:3>@113:0>:int)
          
          P[<array_max_1033@101:1>](<array_max_1033@101:0>:int,<array_max_1033@101:1>:int),
          ((<<array_max_1033@101:3>@104:0> = 0) && (<array_max_1033@101:1> >= <array_max_1033@101:0>))
          |- P[<<array_max_1033@101:3>@104:0>](<array_max_1033@101:0>:int,
                                               <array_max_1033@101:1>:int,
                                               <<array_max_1033@101:3>@104:0>:int)
          
          P[<array_max_1033@78:1>](<array_max_1033@101:0>:int,(-1 + <array_max_1033@101:1>):int),
          P[<<<array_max_1033@78:2>@81:1>@97:0>](<array_max_1033@101:0>:int,(
                                                 -1 + <array_max_1033@101:1>):int,(
                                                 -1 + <array_max_1033@101:1>):int,<f_array_max_1480@99:4>:int),
          (<array_max_1033@101:1> < (1 + <array_max_1033@101:0>))
          |- P[<array_max_1033@101:1>](<array_max_1033@101:0>:int,<array_max_1033@101:1>:int)
          
          P[<<make_array_1030@83:2>@95:0>](<array_max_1033@78:0>:int,<<array_max_1033@78:2>@81:0>:int,<<<array_max_1033@78:2>@81:1>@97:0>:int),
          P[<array_max_1033@78:1>](<array_max_1033@78:0>:int,<array_max_1033@78:1>:int), (
          <array_max_1033@78:1> = 0)
          |- P[<<<array_max_1033@78:2>@81:1>@97:0>](<array_max_1033@78:0>:int,
                                                    <array_max_1033@78:1>:int,
                                                    <<array_max_1033@78:2>@81:0>:int,
                                                    <<<array_max_1033@78:2>@81:1>@97:0>:int)
          
          P[<make_array_1030@83:1>](<make_array_1030@83:0>:int,<make_array_1030@83:1>:int),
          ((0 <= <make_array_1030@83:1>) &&
           ((<make_array_1030@83:1> < <make_array_1030@83:0>) &&
            (<<make_array_1030@83:2>@95:0> = <make_array_1030@83:1>)))
          |- P[<<make_array_1030@83:2>@95:0>](<make_array_1030@83:0>:int,
                                              <make_array_1030@83:1>:int,
                                              <<make_array_1030@83:2>@95:0>:int)
          
          P[<<array_max_1033@78:2>@81:0>](<make_array_1030@83:0>:int,0:int,<make_array_1030@83:1>:int)|- P[<make_array_1030@83:1>](
          <make_array_1030@83:0>:int,<make_array_1030@83:1>:int)
          
          P[<array_max_1033@78:1>](<array_max_1033@78:0>:int,<array_max_1033@78:1>:int),
          ((<array_max_1033@78:1> < <array_max_1033@78:0>) && (<<array_max_1033@78:2>@81:0> = <array_max_1033@78:1>))
          |- P[<<array_max_1033@78:2>@81:0>](<array_max_1033@78:0>:int,
                                             <array_max_1033@78:1>:int,
                                             <<array_max_1033@78:2>@81:0>:int)
          
           (<array_max_1033@78:1> = 0) |- P[<array_max_1033@78:1>](<array_max_1033@78:0>:int,
                                                                   <array_max_1033@78:1>:int)
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        
      end HcSolver.check_validity(115336)[4] (0.003999 sec.)
      solution:
        P[<fail_1486@128:0>](<fail_1486@128:0>:bool) = false
        P[<make_array_1030@122:1>](<make_array_1030@122:0>:int,<make_array_1030@122:1>:int) =
        (0 <= <make_array_1030@122:1>)
        P[<<check_1148@117:3>@120:0>](<check_1148@117:0>:int,<check_1148@117:1>:int,<check_1148@117:2>:int,<<check_1148@117:3>@120:0>:int) =
        (0 <= <<check_1148@117:3>@120:0>)
        P[<check_1148@117:2>](<check_1148@117:0>:int,<check_1148@117:1>:int,<check_1148@117:2>:int) =
        (0 <= <check_1148@117:1>)
        P[<<array_max_1033@78:3>@113:0>](<array_max_1033@101:0>:int,<array_max_1033@101:1>:int,<<array_max_1033@101:3>@104:0>:int) =
        true
        P[<<array_max_1033@101:3>@104:0>](<array_max_1033@101:0>:int,<array_max_1033@101:1>:int,<<array_max_1033@101:3>@104:0>:int) =
        true
        P[<array_max_1033@101:1>](<array_max_1033@78:0>:int,<array_max_1033@78:1>:int) = true
        P[<<<array_max_1033@78:2>@81:1>@97:0>](<array_max_1033@78:0>:int,<array_max_1033@78:1>:int,<<array_max_1033@78:2>@81:0>:int,<<<array_max_1033@78:2>@81:1>@97:0>:int) =
        true
        P[<<make_array_1030@83:2>@95:0>](<make_array_1030@83:0>:int,<make_array_1030@83:1>:int,<<make_array_1030@83:2>@95:0>:int) =
        true
        P[<make_array_1030@83:1>](<make_array_1030@83:0>:int,<make_array_1030@83:1>:int) = true
        P[<<array_max_1033@78:2>@81:0>](<array_max_1033@78:0>:int,<array_max_1033@78:1>:int,<<array_max_1033@78:2>@81:0>:int) =
        true
        P[<array_max_1033@78:1>](<array_max_1033@78:0>:int,<array_max_1033@78:1>:int) = true
    end GenHcSolver.solve(62254)[3] (0.281957 sec.)
    begin GenHcSolver.solve(116381)[3]
      Horn clauses:
        P[<fail_1486@128:0>](<fail_1486@128:0>:bool)|- bot
        
        P[<make_array_1030@122:1>](<k_make_array_u_1182@125:1>:int,<k_make_array_u_1182@125:0>:int),
        ((0 > <k_make_array_u_1182@125:0>) && <fail_1486@128:0>) |- P[<fail_1486@128:0>](
        <fail_1486@128:0>:bool)
        
        P[<<array_max_1033@78:3>@113:0>](<make_array_1030@122:0>:int,0:int,<check_1148@117:2>:int),
        P[<<check_1148@117:3>@120:0>](<make_array_1030@122:0>:int,0:int,<check_1148@117:2>:int,<make_array_1030@122:1>:int)|- P[<make_array_1030@122:1>](
        <make_array_1030@122:0>:int,<make_array_1030@122:1>:int)
        
        P[<check_1148@117:2>](<check_1148@117:0>:int,<check_1148@117:1>:int,<check_1148@117:2>:int),
        ((<check_1148@117:1> < <check_1148@117:0>) && (<<check_1148@117:3>@120:0> = <check_1148@117:1>))
        |- P[<<check_1148@117:3>@120:0>](<check_1148@117:0>:int,<check_1148@117:1>:int,
                                         <check_1148@117:2>:int,<<check_1148@117:3>@120:0>:int)
        
        P[<<array_max_1033@78:3>@113:0>](<check_1148@117:0>:int,0:int,<check_1148@117:2>:int), (
        <check_1148@117:1> = 0)
        |- P[<check_1148@117:2>](<check_1148@117:0>:int,<check_1148@117:1>:int,
                                 <check_1148@117:2>:int)
        
        P[<array_max_1033@78:1>](<array_max_1033@78:0>:int,<array_max_1033@78:1>:int),
        P[<<<array_max_1033@78:2>@81:1>@97:0>](<array_max_1033@78:0>:int,<array_max_1033@78:1>:int,<array_max_1033@78:1>:int,<<array_max_1033@78:3>@113:0>:int),
        P[<<array_max_1033@101:3>@104:0>](<array_max_1033@78:0>:int,(
                                          1 + <array_max_1033@78:1>):int,var312:int),
        ((<<array_max_1033@78:3>@113:0> > var312) && (<array_max_1033@78:1> < <array_max_1033@78:0>))
        |- P[<<array_max_1033@78:3>@113:0>](<array_max_1033@78:0>:int,
                                            <array_max_1033@78:1>:int,
                                            <<array_max_1033@78:3>@113:0>:int)
        
        P[<array_max_1033@101:1>](<array_max_1033@101:0>:int,<array_max_1033@101:1>:int),
        ((<<array_max_1033@101:3>@104:0> = 0) && (<array_max_1033@101:1> >= <array_max_1033@101:0>))
        |- P[<<array_max_1033@101:3>@104:0>](<array_max_1033@101:0>:int,
                                             <array_max_1033@101:1>:int,
                                             <<array_max_1033@101:3>@104:0>:int)
        
        P[<array_max_1033@78:1>](<array_max_1033@101:0>:int,(-1 + <array_max_1033@101:1>):int),
        P[<<<array_max_1033@78:2>@81:1>@97:0>](<array_max_1033@101:0>:int,(
                                               -1 + <array_max_1033@101:1>):int,(
                                               -1 + <array_max_1033@101:1>):int,<f_array_max_1480@99:4>:int),
        (<array_max_1033@101:1> < (1 + <array_max_1033@101:0>))
        |- P[<array_max_1033@101:1>](<array_max_1033@101:0>:int,<array_max_1033@101:1>:int)
        
        P[<<make_array_1030@83:2>@95:0>](<array_max_1033@78:0>:int,<<array_max_1033@78:2>@81:0>:int,<<<array_max_1033@78:2>@81:1>@97:0>:int),
        P[<array_max_1033@78:1>](<array_max_1033@78:0>:int,<array_max_1033@78:1>:int), (
        <array_max_1033@78:1> = 0)
        |- P[<<<array_max_1033@78:2>@81:1>@97:0>](<array_max_1033@78:0>:int,
                                                  <array_max_1033@78:1>:int,
                                                  <<array_max_1033@78:2>@81:0>:int,
                                                  <<<array_max_1033@78:2>@81:1>@97:0>:int)
        
        P[<make_array_1030@83:1>](<make_array_1030@83:0>:int,<make_array_1030@83:1>:int),
        ((0 <= <make_array_1030@83:1>) &&
         ((<make_array_1030@83:1> < <make_array_1030@83:0>) && (<<make_array_1030@83:2>@95:0> = <make_array_1030@83:1>)))
        |- P[<<make_array_1030@83:2>@95:0>](<make_array_1030@83:0>:int,
                                            <make_array_1030@83:1>:int,
                                            <<make_array_1030@83:2>@95:0>:int)
        
        P[<<array_max_1033@78:2>@81:0>](<make_array_1030@83:0>:int,0:int,<make_array_1030@83:1>:int)|- P[<make_array_1030@83:1>](
        <make_array_1030@83:0>:int,<make_array_1030@83:1>:int)
        
        P[<array_max_1033@78:1>](<array_max_1033@78:0>:int,<array_max_1033@78:1>:int),
        ((<array_max_1033@78:1> < <array_max_1033@78:0>) && (<<array_max_1033@78:2>@81:0> = <array_max_1033@78:1>))
        |- P[<<array_max_1033@78:2>@81:0>](<array_max_1033@78:0>:int,
                                           <array_max_1033@78:1>:int,
                                           <<array_max_1033@78:2>@81:0>:int)
        
         (<array_max_1033@78:1> = 0) |- P[<array_max_1033@78:1>](<array_max_1033@78:0>:int,
                                                                 <array_max_1033@78:1>:int)
      lower bounds:
        P[<array_max_1033@78:1>](<array_max_1033@78:0>:int,<array_max_1033@78:1>:int) = (<array_max_1033@78:1> = 0)
        P[<<array_max_1033@78:2>@81:0>](<array_max_1033@78:0>:int,<array_max_1033@78:1>:int,<<array_max_1033@78:2>@81:0>:int) =
        ((<array_max_1033@78:1> = 0) &&
         ((<array_max_1033@78:1> < <array_max_1033@78:0>) && (<<array_max_1033@78:2>@81:0> = <array_max_1033@78:1>)))
        P[<make_array_1030@83:1>](<make_array_1030@83:0>:int,<make_array_1030@83:1>:int) =
        ((<make_array_1030@83:1> = 0) && (0 < <make_array_1030@83:0>))
        P[<<make_array_1030@83:2>@95:0>](<make_array_1030@83:0>:int,<make_array_1030@83:1>:int,<<make_array_1030@83:2>@95:0>:int) =
        ((<make_array_1030@83:1> = 0) &&
         ((<make_array_1030@83:1> < <make_array_1030@83:0>) &&
          ((0 < <make_array_1030@83:0>) && (<<make_array_1030@83:2>@95:0> = <make_array_1030@83:1>))))
        P[<<<array_max_1033@78:2>@81:1>@97:0>](<array_max_1033@78:0>:int,<array_max_1033@78:1>:int,<<array_max_1033@78:2>@81:0>:int,<<<array_max_1033@78:2>@81:1>@97:0>:int) =
        ((<<array_max_1033@78:2>@81:0> = 0) &&
         ((<array_max_1033@78:1> = 0) &&
          ((<<array_max_1033@78:2>@81:0> < <array_max_1033@78:0>) &&
           ((0 < <array_max_1033@78:0>) && (<<<array_max_1033@78:2>@81:1>@97:0> = <<array_max_1033@78:2>@81:0>)))))
        P[<array_max_1033@101:1>](<array_max_1033@101:0>:int,<array_max_1033@101:1>:int) =
        ((<array_max_1033@101:1> = 1) &&
         ((0 < <array_max_1033@101:0>) && (<array_max_1033@101:1> < (1 + <array_max_1033@101:0>))))
        P[<<array_max_1033@101:3>@104:0>](<array_max_1033@101:0>:int,<array_max_1033@101:1>:int,<<array_max_1033@101:3>@104:0>:int) =
        ((<<array_max_1033@101:3>@104:0> = 0) &&
         ((<array_max_1033@101:1> = 1) &&
          ((0 < <array_max_1033@101:0>) && (<array_max_1033@101:1> = <array_max_1033@101:0>))))
        P[<<array_max_1033@78:3>@113:0>](<array_max_1033@78:0>:int,<array_max_1033@78:1>:int,<<array_max_1033@78:3>@113:0>:int) =
        ((<array_max_1033@78:1> = 0) &&
         ((<<array_max_1033@78:3>@113:0> = <array_max_1033@78:1>) &&
          ((0 < <array_max_1033@78:0>) &&
           (((1 + <array_max_1033@78:1>) = <array_max_1033@78:0>) && (<<array_max_1033@78:3>@113:0> > 0)))))
        P[<check_1148@117:2>](<check_1148@117:0>:int,<check_1148@117:1>:int,<check_1148@117:2>:int) = false
        P[<<check_1148@117:3>@120:0>](<check_1148@117:0>:int,<check_1148@117:1>:int,<check_1148@117:2>:int,<<check_1148@117:3>@120:0>:int) =
        false
        P[<make_array_1030@122:1>](<make_array_1030@122:0>:int,<make_array_1030@122:1>:int) = false
        P[<fail_1486@128:0>](<fail_1486@128:0>:bool) = false
      upper bounds:
        P[<make_array_1030@122:1>](var370:int,var371:int) = true
        P[<make_array_1030@83:1>](var364:int,var365:int) = true
      begin GenHcSolver.classify_pids(127792)[4]
        output:
          [<make_array_1030@83:1>;<make_array_1030@122:1>]
      end GenHcSolver.classify_pids(127792)[4] (0.000000 sec.)
      begin ApronInterface.convex_hull_interpolate(127803)[4]
        lb:((<make_array_1030@83:1> = 0) && (0 < <make_array_1030@83:0>))
        nub:false
        begin ExtFormula.Formula.case_analysis_boolean(127813)[5]
          ts: ((<make_array_1030@83:1> = 0) && (0 < <make_array_1030@83:0>))
          
        end ExtFormula.Formula.case_analysis_boolean(127813)[5] (0.000000 sec.)
        begin ExtFormula.Formula.case_analysis_boolean(127820)[5]
          ts: false
          
        end ExtFormula.Formula.case_analysis_boolean(127820)[5] (0.000000 sec.)
        lb':((<make_array_1030@83:1> = 0) && ((-1 + <make_array_1030@83:0>) >= 0))
        nub':(-1 >= 0)
        begin InterpProver.interpolate(127823)[5]
          begin InterpProver.interpolate_fresh(127824)[6]
            begin InterpProver.interpolate_log(127825)[7]
              input1: ((<make_array_1030@83:1> = 0) && ((-1 + <make_array_1030@83:0>) >= 0))
              input2: (-1 >= 0)
              begin InterpProver.interpolate_check(127826)[8]
                begin InterpProver.interpolate_simplify(127827)[9]
                  begin InterpProver.interpolate_quick(127867)[10]
                    
                  end InterpProver.interpolate_quick(127867)[10] (0.000000 sec.)
                  
                end InterpProver.interpolate_simplify(127827)[9] (0.000999 sec.)
                
              end InterpProver.interpolate_check(127826)[8] (0.000999 sec.)
              output: true
            end InterpProver.interpolate_log(127825)[7] (0.000999 sec.)
            
          end InterpProver.interpolate_fresh(127824)[6] (0.000999 sec.)
          
        end InterpProver.interpolate(127823)[5] (0.000999 sec.)
        output:
          P[<make_array_1030@83:1>](<make_array_1030@83:0>:int,<make_array_1030@83:1>:int) = true
          P[<make_array_1030@122:1>](<make_array_1030@83:0>:int,<make_array_1030@83:1>:int) = true
      end ApronInterface.convex_hull_interpolate(127803)[4] (0.000999 sec.)
      Horn clauses:
        P[<fail_1486@128:0>](<fail_1486@128:0>:bool)|- bot
        
        P[<make_array_1030@122:1>](<k_make_array_u_1182@125:1>:int,<k_make_array_u_1182@125:0>:int),
        ((0 > <k_make_array_u_1182@125:0>) && <fail_1486@128:0>) |- P[<fail_1486@128:0>](
        <fail_1486@128:0>:bool)
        
        P[<<array_max_1033@78:3>@113:0>](<make_array_1030@122:0>:int,0:int,<check_1148@117:2>:int),
        P[<<check_1148@117:3>@120:0>](<make_array_1030@122:0>:int,0:int,<check_1148@117:2>:int,<make_array_1030@122:1>:int)|- P[<make_array_1030@122:1>](
        <make_array_1030@122:0>:int,<make_array_1030@122:1>:int)
        
        P[<check_1148@117:2>](<check_1148@117:0>:int,<check_1148@117:1>:int,<check_1148@117:2>:int),
        ((<check_1148@117:1> < <check_1148@117:0>) && (<<check_1148@117:3>@120:0> = <check_1148@117:1>))
        |- P[<<check_1148@117:3>@120:0>](<check_1148@117:0>:int,<check_1148@117:1>:int,
                                         <check_1148@117:2>:int,<<check_1148@117:3>@120:0>:int)
        
        P[<<array_max_1033@78:3>@113:0>](<check_1148@117:0>:int,0:int,<check_1148@117:2>:int), (
        <check_1148@117:1> = 0)
        |- P[<check_1148@117:2>](<check_1148@117:0>:int,<check_1148@117:1>:int,
                                 <check_1148@117:2>:int)
        
        P[<array_max_1033@78:1>](<array_max_1033@78:0>:int,<array_max_1033@78:1>:int),
        P[<<<array_max_1033@78:2>@81:1>@97:0>](<array_max_1033@78:0>:int,<array_max_1033@78:1>:int,<array_max_1033@78:1>:int,<<array_max_1033@78:3>@113:0>:int),
        P[<<array_max_1033@101:3>@104:0>](<array_max_1033@78:0>:int,(
                                          1 + <array_max_1033@78:1>):int,var312:int),
        ((<<array_max_1033@78:3>@113:0> > var312) && (<array_max_1033@78:1> < <array_max_1033@78:0>))
        |- P[<<array_max_1033@78:3>@113:0>](<array_max_1033@78:0>:int,
                                            <array_max_1033@78:1>:int,
                                            <<array_max_1033@78:3>@113:0>:int)
        
        P[<array_max_1033@101:1>](<array_max_1033@101:0>:int,<array_max_1033@101:1>:int),
        ((<<array_max_1033@101:3>@104:0> = 0) && (<array_max_1033@101:1> >= <array_max_1033@101:0>))
        |- P[<<array_max_1033@101:3>@104:0>](<array_max_1033@101:0>:int,
                                             <array_max_1033@101:1>:int,
                                             <<array_max_1033@101:3>@104:0>:int)
        
        P[<array_max_1033@78:1>](<array_max_1033@101:0>:int,(-1 + <array_max_1033@101:1>):int),
        P[<<<array_max_1033@78:2>@81:1>@97:0>](<array_max_1033@101:0>:int,(
                                               -1 + <array_max_1033@101:1>):int,(
                                               -1 + <array_max_1033@101:1>):int,<f_array_max_1480@99:4>:int),
        (<array_max_1033@101:1> < (1 + <array_max_1033@101:0>))
        |- P[<array_max_1033@101:1>](<array_max_1033@101:0>:int,<array_max_1033@101:1>:int)
        
        P[<<make_array_1030@83:2>@95:0>](<array_max_1033@78:0>:int,<<array_max_1033@78:2>@81:0>:int,<<<array_max_1033@78:2>@81:1>@97:0>:int),
        P[<array_max_1033@78:1>](<array_max_1033@78:0>:int,<array_max_1033@78:1>:int), (
        <array_max_1033@78:1> = 0)
        |- P[<<<array_max_1033@78:2>@81:1>@97:0>](<array_max_1033@78:0>:int,
                                                  <array_max_1033@78:1>:int,
                                                  <<array_max_1033@78:2>@81:0>:int,
                                                  <<<array_max_1033@78:2>@81:1>@97:0>:int)
        
        
        ((0 <= <make_array_1030@83:1>) &&
         ((<make_array_1030@83:1> < <make_array_1030@83:0>) && (<<make_array_1030@83:2>@95:0> = <make_array_1030@83:1>)))
        |- P[<<make_array_1030@83:2>@95:0>](<make_array_1030@83:0>:int,
                                            <make_array_1030@83:1>:int,
                                            <<make_array_1030@83:2>@95:0>:int)
        
        P[<array_max_1033@78:1>](<array_max_1033@78:0>:int,<array_max_1033@78:1>:int),
        ((<array_max_1033@78:1> < <array_max_1033@78:0>) && (<<array_max_1033@78:2>@81:0> = <array_max_1033@78:1>))
        |- P[<<array_max_1033@78:2>@81:0>](<array_max_1033@78:0>:int,
                                           <array_max_1033@78:1>:int,
                                           <<array_max_1033@78:2>@81:0>:int)
        
         (<array_max_1033@78:1> = 0) |- P[<array_max_1033@78:1>](<array_max_1033@78:0>:int,
                                                                 <array_max_1033@78:1>:int)
      lower bounds:
        P[<<make_array_1030@83:2>@95:0>](<make_array_1030@83:0>:int,<make_array_1030@83:1>:int,<<make_array_1030@83:2>@95:0>:int) =
        ((0 <= <make_array_1030@83:1>) &&
         ((<make_array_1030@83:1> < <make_array_1030@83:0>) && (<<make_array_1030@83:2>@95:0> = <make_array_1030@83:1>)))
        P[<array_max_1033@78:1>](<array_max_1033@78:0>:int,<array_max_1033@78:1>:int) = (<array_max_1033@78:1> = 0)
        P[<<<array_max_1033@78:2>@81:1>@97:0>](<array_max_1033@78:0>:int,<array_max_1033@78:1>:int,<<array_max_1033@78:2>@81:0>:int,<<<array_max_1033@78:2>@81:1>@97:0>:int) =
        ((<array_max_1033@78:1> = 0) &&
         ((0 <= <<array_max_1033@78:2>@81:0>) &&
          ((<<array_max_1033@78:2>@81:0> < <array_max_1033@78:0>) &&
           (<<<array_max_1033@78:2>@81:1>@97:0> = <<array_max_1033@78:2>@81:0>))))
        P[<<array_max_1033@78:2>@81:0>](<array_max_1033@78:0>:int,<array_max_1033@78:1>:int,<<array_max_1033@78:2>@81:0>:int) =
        ((<array_max_1033@78:1> = 0) &&
         ((<array_max_1033@78:1> < <array_max_1033@78:0>) && (<<array_max_1033@78:2>@81:0> = <array_max_1033@78:1>)))
        P[<array_max_1033@101:1>](<array_max_1033@101:0>:int,<array_max_1033@101:1>:int) =
        ((<array_max_1033@101:1> = 1) && (<array_max_1033@101:1> < (1 + <array_max_1033@101:0>)))
        P[<<array_max_1033@101:3>@104:0>](<array_max_1033@101:0>:int,<array_max_1033@101:1>:int,<<array_max_1033@101:3>@104:0>:int) =
        ((<<array_max_1033@101:3>@104:0> = 0) &&
         ((<array_max_1033@101:1> = 1) && (<array_max_1033@101:1> = <array_max_1033@101:0>)))
        P[<<array_max_1033@78:3>@113:0>](<array_max_1033@78:0>:int,<array_max_1033@78:1>:int,<<array_max_1033@78:3>@113:0>:int) =
        ((<array_max_1033@78:1> = 0) &&
         ((<<array_max_1033@78:3>@113:0> = <array_max_1033@78:1>) &&
          (((1 + <array_max_1033@78:1>) = <array_max_1033@78:0>) && (<<array_max_1033@78:3>@113:0> > 0))))
        P[<check_1148@117:2>](<check_1148@117:0>:int,<check_1148@117:1>:int,<check_1148@117:2>:int) = false
        P[<<check_1148@117:3>@120:0>](<check_1148@117:0>:int,<check_1148@117:1>:int,<check_1148@117:2>:int,<<check_1148@117:3>@120:0>:int) =
        false
        P[<make_array_1030@122:1>](<make_array_1030@122:0>:int,<make_array_1030@122:1>:int) = false
        P[<fail_1486@128:0>](<fail_1486@128:0>:bool) = false
      upper bounds:
        P[<<array_max_1033@78:3>@113:0>](var385:int,var386:int,var387:int) = true
        P[<<array_max_1033@101:3>@104:0>](var379:int,var380:int,var381:int) = true
      begin GenHcSolver.classify_pids(142497)[4]
        output:
          [<<array_max_1033@101:3>@104:0>;<<array_max_1033@78:3>@113:0>]
      end GenHcSolver.classify_pids(142497)[4] (0.000000 sec.)
      begin ApronInterface.convex_hull_interpolate(142508)[4]
        lb:(((<<array_max_1033@101:3>@104:0> = 0) &&
             ((<array_max_1033@101:1> = 1) && (<array_max_1033@101:1> = <array_max_1033@101:0>))) ||
            ((<array_max_1033@101:1> = 0) &&
             ((<<array_max_1033@101:3>@104:0> = <array_max_1033@101:1>) &&
              (((1 + <array_max_1033@101:1>) = <array_max_1033@101:0>) && (<<array_max_1033@101:3>@104:0> > 0)))))
        nub:false
        begin ExtFormula.Formula.case_analysis_boolean(142583)[5]
          ts: (((<<array_max_1033@101:3>@104:0> = 0) &&
                ((<array_max_1033@101:1> = 1) && (<array_max_1033@101:1> = <array_max_1033@101:0>))) ||
               ((<array_max_1033@101:1> = 0) &&
                ((<<array_max_1033@101:3>@104:0> = <array_max_1033@101:1>) &&
                 (((1 + <array_max_1033@101:1>) = <array_max_1033@101:0>) && (<<array_max_1033@101:3>@104:0> > 0)))))
          
        end ExtFormula.Formula.case_analysis_boolean(142583)[5] (0.000999 sec.)
        begin ExtFormula.Formula.case_analysis_boolean(142600)[5]
          ts: false
          
        end ExtFormula.Formula.case_analysis_boolean(142600)[5] (0.000000 sec.)
        lb':((<<array_max_1033@101:3>@104:0> = 0) &&
             (((-1 + <array_max_1033@101:1>) = 0) && ((-1 + <array_max_1033@101:0>) = 0)))
        nub':(-1 >= 0)
        begin InterpProver.interpolate(142603)[5]
          begin InterpProver.interpolate_fresh(142604)[6]
            begin InterpProver.interpolate_log(142605)[7]
              input1: ((<<array_max_1033@101:3>@104:0> = 0) &&
                       (((-1 + <array_max_1033@101:1>) = 0) && ((-1 + <array_max_1033@101:0>) = 0)))
              input2: (-1 >= 0)
              begin InterpProver.interpolate_check(142606)[8]
                begin InterpProver.interpolate_simplify(142607)[9]
                  begin InterpProver.interpolate_quick(142657)[10]
                    
                  end InterpProver.interpolate_quick(142657)[10] (0.000000 sec.)
                  
                end InterpProver.interpolate_simplify(142607)[9] (0.001000 sec.)
                
              end InterpProver.interpolate_check(142606)[8] (0.001000 sec.)
              output: true
            end InterpProver.interpolate_log(142605)[7] (0.001000 sec.)
            
          end InterpProver.interpolate_fresh(142604)[6] (0.001000 sec.)
          
        end InterpProver.interpolate(142603)[5] (0.001000 sec.)
        output:
          P[<<array_max_1033@101:3>@104:0>](<array_max_1033@101:0>:int,<array_max_1033@101:1>:int,<<array_max_1033@101:3>@104:0>:int) =
          true
          P[<<array_max_1033@78:3>@113:0>](<array_max_1033@101:0>:int,<array_max_1033@101:1>:int,<<array_max_1033@101:3>@104:0>:int) =
          true
      end ApronInterface.convex_hull_interpolate(142508)[4] (0.001999 sec.)
      Horn clauses:
        P[<fail_1486@128:0>](<fail_1486@128:0>:bool)|- bot
        
        P[<make_array_1030@122:1>](<k_make_array_u_1182@125:1>:int,<k_make_array_u_1182@125:0>:int),
        ((0 > <k_make_array_u_1182@125:0>) && <fail_1486@128:0>) |- P[<fail_1486@128:0>](
        <fail_1486@128:0>:bool)
        
        P[<<check_1148@117:3>@120:0>](<make_array_1030@122:0>:int,0:int,<check_1148@117:2>:int,<make_array_1030@122:1>:int)|- P[<make_array_1030@122:1>](
        <make_array_1030@122:0>:int,<make_array_1030@122:1>:int)
        
        P[<check_1148@117:2>](<check_1148@117:0>:int,<check_1148@117:1>:int,<check_1148@117:2>:int),
        ((<check_1148@117:1> < <check_1148@117:0>) && (<<check_1148@117:3>@120:0> = <check_1148@117:1>))
        |- P[<<check_1148@117:3>@120:0>](<check_1148@117:0>:int,<check_1148@117:1>:int,
                                         <check_1148@117:2>:int,<<check_1148@117:3>@120:0>:int)
        
         (<check_1148@117:1> = 0)
        |- P[<check_1148@117:2>](<check_1148@117:0>:int,<check_1148@117:1>:int,
                                 <check_1148@117:2>:int)
        
        P[<array_max_1033@78:1>](<array_max_1033@101:0>:int,(-1 + <array_max_1033@101:1>):int),
        P[<<<array_max_1033@78:2>@81:1>@97:0>](<array_max_1033@101:0>:int,(
                                               -1 + <array_max_1033@101:1>):int,(
                                               -1 + <array_max_1033@101:1>):int,<f_array_max_1480@99:4>:int),
        (<array_max_1033@101:1> < (1 + <array_max_1033@101:0>))
        |- P[<array_max_1033@101:1>](<array_max_1033@101:0>:int,<array_max_1033@101:1>:int)
        
        P[<<make_array_1030@83:2>@95:0>](<array_max_1033@78:0>:int,<<array_max_1033@78:2>@81:0>:int,<<<array_max_1033@78:2>@81:1>@97:0>:int),
        P[<array_max_1033@78:1>](<array_max_1033@78:0>:int,<array_max_1033@78:1>:int), (
        <array_max_1033@78:1> = 0)
        |- P[<<<array_max_1033@78:2>@81:1>@97:0>](<array_max_1033@78:0>:int,
                                                  <array_max_1033@78:1>:int,
                                                  <<array_max_1033@78:2>@81:0>:int,
                                                  <<<array_max_1033@78:2>@81:1>@97:0>:int)
        
        
        ((0 <= <make_array_1030@83:1>) &&
         ((<make_array_1030@83:1> < <make_array_1030@83:0>) && (<<make_array_1030@83:2>@95:0> = <make_array_1030@83:1>)))
        |- P[<<make_array_1030@83:2>@95:0>](<make_array_1030@83:0>:int,
                                            <make_array_1030@83:1>:int,
                                            <<make_array_1030@83:2>@95:0>:int)
        
        P[<array_max_1033@78:1>](<array_max_1033@78:0>:int,<array_max_1033@78:1>:int),
        ((<array_max_1033@78:1> < <array_max_1033@78:0>) && (<<array_max_1033@78:2>@81:0> = <array_max_1033@78:1>))
        |- P[<<array_max_1033@78:2>@81:0>](<array_max_1033@78:0>:int,
                                           <array_max_1033@78:1>:int,
                                           <<array_max_1033@78:2>@81:0>:int)
        
         (<array_max_1033@78:1> = 0) |- P[<array_max_1033@78:1>](<array_max_1033@78:0>:int,
                                                                 <array_max_1033@78:1>:int)
      lower bounds:
        P[<check_1148@117:2>](<check_1148@117:0>:int,<check_1148@117:1>:int,<check_1148@117:2>:int) =
        (<check_1148@117:1> = 0)
        P[<<make_array_1030@83:2>@95:0>](<make_array_1030@83:0>:int,<make_array_1030@83:1>:int,<<make_array_1030@83:2>@95:0>:int) =
        ((0 <= <make_array_1030@83:1>) &&
         ((<make_array_1030@83:1> < <make_array_1030@83:0>) && (<<make_array_1030@83:2>@95:0> = <make_array_1030@83:1>)))
        P[<array_max_1033@78:1>](<array_max_1033@78:0>:int,<array_max_1033@78:1>:int) = (<array_max_1033@78:1> = 0)
        P[<<check_1148@117:3>@120:0>](<check_1148@117:0>:int,<check_1148@117:1>:int,<check_1148@117:2>:int,<<check_1148@117:3>@120:0>:int) =
        ((<check_1148@117:1> = 0) &&
         ((<check_1148@117:1> < <check_1148@117:0>) && (<<check_1148@117:3>@120:0> = <check_1148@117:1>)))
        P[<<<array_max_1033@78:2>@81:1>@97:0>](<array_max_1033@78:0>:int,<array_max_1033@78:1>:int,<<array_max_1033@78:2>@81:0>:int,<<<array_max_1033@78:2>@81:1>@97:0>:int) =
        ((<array_max_1033@78:1> = 0) &&
         ((0 <= <<array_max_1033@78:2>@81:0>) &&
          ((<<array_max_1033@78:2>@81:0> < <array_max_1033@78:0>) &&
           (<<<array_max_1033@78:2>@81:1>@97:0> = <<array_max_1033@78:2>@81:0>))))
        P[<<array_max_1033@78:2>@81:0>](<array_max_1033@78:0>:int,<array_max_1033@78:1>:int,<<array_max_1033@78:2>@81:0>:int) =
        ((<array_max_1033@78:1> = 0) &&
         ((<array_max_1033@78:1> < <array_max_1033@78:0>) && (<<array_max_1033@78:2>@81:0> = <array_max_1033@78:1>)))
        P[<make_array_1030@122:1>](<make_array_1030@122:0>:int,<make_array_1030@122:1>:int) =
        ((<make_array_1030@122:1> = 0) && (0 < <make_array_1030@122:0>))
        P[<array_max_1033@101:1>](<array_max_1033@101:0>:int,<array_max_1033@101:1>:int) =
        ((<array_max_1033@101:1> = 1) && (<array_max_1033@101:1> < (1 + <array_max_1033@101:0>)))
        P[<fail_1486@128:0>](<fail_1486@128:0>:bool) = false
      upper bounds:
        P[<array_max_1033@101:1>](var390:int,var391:int) = true
        P[<array_max_1033@78:1>](var388:int,var389:int) = true
      begin GenHcSolver.classify_pids(152683)[4]
        output:
          [<array_max_1033@78:1>;<array_max_1033@101:1>]
      end GenHcSolver.classify_pids(152683)[4] (0.000000 sec.)
      begin ApronInterface.convex_hull_interpolate(152694)[4]
        lb:((<array_max_1033@78:1> = 0) ||
            ((<array_max_1033@78:1> = 1) && (<array_max_1033@78:1> < (1 + <array_max_1033@78:0>))))
        nub:false
        begin ExtFormula.Formula.case_analysis_boolean(152713)[5]
          ts: ((<array_max_1033@78:1> = 0) ||
               ((<array_max_1033@78:1> = 1) && (<array_max_1033@78:1> < (1 + <array_max_1033@78:0>))))
          
        end ExtFormula.Formula.case_analysis_boolean(152713)[5] (0.000000 sec.)
        begin ExtFormula.Formula.case_analysis_boolean(152724)[5]
          ts: false
          
        end ExtFormula.Formula.case_analysis_boolean(152724)[5] (0.000000 sec.)
        lb':(((1 + (-1 * <array_max_1033@78:1>)) >= 0) && (<array_max_1033@78:1> >= 0))
        nub':(-1 >= 0)
        begin InterpProver.interpolate(152727)[5]
          begin InterpProver.interpolate_fresh(152728)[6]
            begin InterpProver.interpolate_log(152729)[7]
              input1: (((1 + (-1 * <array_max_1033@78:1>)) >= 0) && (<array_max_1033@78:1> >= 0))
              input2: (-1 >= 0)
              begin InterpProver.interpolate_check(152730)[8]
                begin InterpProver.interpolate_simplify(152731)[9]
                  begin InterpProver.interpolate_quick(152769)[10]
                    
                  end InterpProver.interpolate_quick(152769)[10] (0.000000 sec.)
                  
                end InterpProver.interpolate_simplify(152731)[9] (0.000000 sec.)
                
              end InterpProver.interpolate_check(152730)[8] (0.000000 sec.)
              output: true
            end InterpProver.interpolate_log(152729)[7] (0.000000 sec.)
            
          end InterpProver.interpolate_fresh(152728)[6] (0.000000 sec.)
          
        end InterpProver.interpolate(152727)[5] (0.000000 sec.)
        output:
          P[<array_max_1033@78:1>](<array_max_1033@78:0>:int,<array_max_1033@78:1>:int) = true
          P[<array_max_1033@101:1>](<array_max_1033@78:0>:int,<array_max_1033@78:1>:int) = true
      end ApronInterface.convex_hull_interpolate(152694)[4] (0.000000 sec.)
      Horn clauses:
        P[<fail_1486@128:0>](<fail_1486@128:0>:bool)|- bot
        
        P[<make_array_1030@122:1>](<k_make_array_u_1182@125:1>:int,<k_make_array_u_1182@125:0>:int),
        ((0 > <k_make_array_u_1182@125:0>) && <fail_1486@128:0>) |- P[<fail_1486@128:0>](
        <fail_1486@128:0>:bool)
        
        P[<<check_1148@117:3>@120:0>](<make_array_1030@122:0>:int,0:int,<check_1148@117:2>:int,<make_array_1030@122:1>:int)|- P[<make_array_1030@122:1>](
        <make_array_1030@122:0>:int,<make_array_1030@122:1>:int)
        
        P[<check_1148@117:2>](<check_1148@117:0>:int,<check_1148@117:1>:int,<check_1148@117:2>:int),
        ((<check_1148@117:1> < <check_1148@117:0>) && (<<check_1148@117:3>@120:0> = <check_1148@117:1>))
        |- P[<<check_1148@117:3>@120:0>](<check_1148@117:0>:int,<check_1148@117:1>:int,
                                         <check_1148@117:2>:int,<<check_1148@117:3>@120:0>:int)
        
         (<check_1148@117:1> = 0)
        |- P[<check_1148@117:2>](<check_1148@117:0>:int,<check_1148@117:1>:int,
                                 <check_1148@117:2>:int)
        
        P[<<make_array_1030@83:2>@95:0>](<array_max_1033@78:0>:int,<<array_max_1033@78:2>@81:0>:int,<<<array_max_1033@78:2>@81:1>@97:0>:int),
        (<array_max_1033@78:1> = 0)
        |- P[<<<array_max_1033@78:2>@81:1>@97:0>](<array_max_1033@78:0>:int,
                                                  <array_max_1033@78:1>:int,
                                                  <<array_max_1033@78:2>@81:0>:int,
                                                  <<<array_max_1033@78:2>@81:1>@97:0>:int)
        
        
        ((0 <= <make_array_1030@83:1>) &&
         ((<make_array_1030@83:1> < <make_array_1030@83:0>) && (<<make_array_1030@83:2>@95:0> = <make_array_1030@83:1>)))
        |- P[<<make_array_1030@83:2>@95:0>](<make_array_1030@83:0>:int,
                                            <make_array_1030@83:1>:int,
                                            <<make_array_1030@83:2>@95:0>:int)
        
         ((<array_max_1033@78:1> < <array_max_1033@78:0>) && (<<array_max_1033@78:2>@81:0> = <array_max_1033@78:1>))
        |- P[<<array_max_1033@78:2>@81:0>](<array_max_1033@78:0>:int,
                                           <array_max_1033@78:1>:int,
                                           <<array_max_1033@78:2>@81:0>:int)
      lower bounds:
        P[<check_1148@117:2>](<check_1148@117:0>:int,<check_1148@117:1>:int,<check_1148@117:2>:int) =
        (<check_1148@117:1> = 0)
        P[<<make_array_1030@83:2>@95:0>](<make_array_1030@83:0>:int,<make_array_1030@83:1>:int,<<make_array_1030@83:2>@95:0>:int) =
        ((0 <= <make_array_1030@83:1>) &&
         ((<make_array_1030@83:1> < <make_array_1030@83:0>) && (<<make_array_1030@83:2>@95:0> = <make_array_1030@83:1>)))
        P[<<array_max_1033@78:2>@81:0>](<array_max_1033@78:0>:int,<array_max_1033@78:1>:int,<<array_max_1033@78:2>@81:0>:int) =
        ((<array_max_1033@78:1> < <array_max_1033@78:0>) && (<<array_max_1033@78:2>@81:0> = <array_max_1033@78:1>))
        P[<<check_1148@117:3>@120:0>](<check_1148@117:0>:int,<check_1148@117:1>:int,<check_1148@117:2>:int,<<check_1148@117:3>@120:0>:int) =
        ((<check_1148@117:1> = 0) &&
         ((<check_1148@117:1> < <check_1148@117:0>) && (<<check_1148@117:3>@120:0> = <check_1148@117:1>)))
        P[<<<array_max_1033@78:2>@81:1>@97:0>](<array_max_1033@78:0>:int,<array_max_1033@78:1>:int,<<array_max_1033@78:2>@81:0>:int,<<<array_max_1033@78:2>@81:1>@97:0>:int) =
        ((<array_max_1033@78:1> = 0) &&
         ((0 <= <<array_max_1033@78:2>@81:0>) &&
          ((<<array_max_1033@78:2>@81:0> < <array_max_1033@78:0>) &&
           (<<<array_max_1033@78:2>@81:1>@97:0> = <<array_max_1033@78:2>@81:0>))))
        P[<make_array_1030@122:1>](<make_array_1030@122:0>:int,<make_array_1030@122:1>:int) =
        ((<make_array_1030@122:1> = 0) && (0 < <make_array_1030@122:0>))
        P[<fail_1486@128:0>](<fail_1486@128:0>:bool) = false
      upper bounds:
        P[<<<array_max_1033@78:2>@81:1>@97:0>](var392:int,var393:int,var394:int,var395:int) = true
      begin GenHcSolver.classify_pids(158663)[4]
        output:
          [<<<array_max_1033@78:2>@81:1>@97:0>]
      end GenHcSolver.classify_pids(158663)[4] (0.000000 sec.)
      lb:((<array_max_1033@78:1> = 0) &&
          ((0 <= <<array_max_1033@78:2>@81:0>) &&
           ((<<array_max_1033@78:2>@81:0> < <array_max_1033@78:0>) &&
            (<<<array_max_1033@78:2>@81:1>@97:0> = <<array_max_1033@78:2>@81:0>))))
      nub:false
      begin ApronInterface.convex_hull_interpolate(158666)[4]
        lb:((<array_max_1033@78:1> = 0) &&
            ((0 <= <<array_max_1033@78:2>@81:0>) &&
             ((<<array_max_1033@78:2>@81:0> < <array_max_1033@78:0>) &&
              (<<<array_max_1033@78:2>@81:1>@97:0> = <<array_max_1033@78:2>@81:0>))))
        nub:false
        begin ExtFormula.Formula.case_analysis_boolean(158715)[5]
          ts: ((<array_max_1033@78:1> = 0) &&
               ((0 <= <<array_max_1033@78:2>@81:0>) &&
                ((<<array_max_1033@78:2>@81:0> < <array_max_1033@78:0>) &&
                 (<<<array_max_1033@78:2>@81:1>@97:0> = <<array_max_1033@78:2>@81:0>))))
          
        end ExtFormula.Formula.case_analysis_boolean(158715)[5] (0.000000 sec.)
        begin ExtFormula.Formula.case_analysis_boolean(158726)[5]
          ts: false
          
        end ExtFormula.Formula.case_analysis_boolean(158726)[5] (0.000000 sec.)
        lb':(((<<<array_max_1033@78:2>@81:1>@97:0> + (-1 * <<array_max_1033@78:2>@81:0>)) = 0) &&
             ((<array_max_1033@78:1> = 0) &&
              ((<<array_max_1033@78:2>@81:0> >= 0) &&
               (((-1 + (-1 * <<array_max_1033@78:2>@81:0>)) + <array_max_1033@78:0>) >= 0))))
        nub':(-1 >= 0)
        begin InterpProver.interpolate(158729)[5]
          begin InterpProver.interpolate_fresh(158730)[6]
            begin InterpProver.interpolate_log(158731)[7]
              input1: (((<<<array_max_1033@78:2>@81:1>@97:0> + (-1 * <<array_max_1033@78:2>@81:0>)) = 0) &&
                       ((<array_max_1033@78:1> = 0) &&
                        ((<<array_max_1033@78:2>@81:0> >= 0) &&
                         (((-1 + (-1 * <<array_max_1033@78:2>@81:0>)) + <array_max_1033@78:0>) >= 0))))
              input2: (-1 >= 0)
              begin InterpProver.interpolate_check(158732)[8]
                begin InterpProver.interpolate_simplify(158733)[9]
                  begin InterpProver.interpolate_quick(158841)[10]
                    
                  end InterpProver.interpolate_quick(158841)[10] (0.000000 sec.)
                  
                end InterpProver.interpolate_simplify(158733)[9] (0.000000 sec.)
                
              end InterpProver.interpolate_check(158732)[8] (0.000000 sec.)
              output: true
            end InterpProver.interpolate_log(158731)[7] (0.001000 sec.)
            
          end InterpProver.interpolate_fresh(158730)[6] (0.001000 sec.)
          
        end InterpProver.interpolate(158729)[5] (0.001000 sec.)
        output:
          P[<<<array_max_1033@78:2>@81:1>@97:0>](<array_max_1033@78:0>:int,<array_max_1033@78:1>:int,<<array_max_1033@78:2>@81:0>:int,<<<array_max_1033@78:2>@81:1>@97:0>:int) =
          true
      end ApronInterface.convex_hull_interpolate(158666)[4] (0.002000 sec.)
      Horn clauses:
        P[<fail_1486@128:0>](<fail_1486@128:0>:bool)|- bot
        
        P[<make_array_1030@122:1>](<k_make_array_u_1182@125:1>:int,<k_make_array_u_1182@125:0>:int),
        ((0 > <k_make_array_u_1182@125:0>) && <fail_1486@128:0>) |- P[<fail_1486@128:0>](
        <fail_1486@128:0>:bool)
        
        P[<<check_1148@117:3>@120:0>](<make_array_1030@122:0>:int,0:int,<check_1148@117:2>:int,<make_array_1030@122:1>:int)|- P[<make_array_1030@122:1>](
        <make_array_1030@122:0>:int,<make_array_1030@122:1>:int)
        
        P[<check_1148@117:2>](<check_1148@117:0>:int,<check_1148@117:1>:int,<check_1148@117:2>:int),
        ((<check_1148@117:1> < <check_1148@117:0>) && (<<check_1148@117:3>@120:0> = <check_1148@117:1>))
        |- P[<<check_1148@117:3>@120:0>](<check_1148@117:0>:int,<check_1148@117:1>:int,
                                         <check_1148@117:2>:int,<<check_1148@117:3>@120:0>:int)
        
         (<check_1148@117:1> = 0)
        |- P[<check_1148@117:2>](<check_1148@117:0>:int,<check_1148@117:1>:int,
                                 <check_1148@117:2>:int)
        
        
        ((0 <= <make_array_1030@83:1>) &&
         ((<make_array_1030@83:1> < <make_array_1030@83:0>) && (<<make_array_1030@83:2>@95:0> = <make_array_1030@83:1>)))
        |- P[<<make_array_1030@83:2>@95:0>](<make_array_1030@83:0>:int,
                                            <make_array_1030@83:1>:int,
                                            <<make_array_1030@83:2>@95:0>:int)
        
         ((<array_max_1033@78:1> < <array_max_1033@78:0>) && (<<array_max_1033@78:2>@81:0> = <array_max_1033@78:1>))
        |- P[<<array_max_1033@78:2>@81:0>](<array_max_1033@78:0>:int,
                                           <array_max_1033@78:1>:int,
                                           <<array_max_1033@78:2>@81:0>:int)
      lower bounds:
        P[<check_1148@117:2>](<check_1148@117:0>:int,<check_1148@117:1>:int,<check_1148@117:2>:int) =
        (<check_1148@117:1> = 0)
        P[<<make_array_1030@83:2>@95:0>](<make_array_1030@83:0>:int,<make_array_1030@83:1>:int,<<make_array_1030@83:2>@95:0>:int) =
        ((0 <= <make_array_1030@83:1>) &&
         ((<make_array_1030@83:1> < <make_array_1030@83:0>) && (<<make_array_1030@83:2>@95:0> = <make_array_1030@83:1>)))
        P[<<array_max_1033@78:2>@81:0>](<array_max_1033@78:0>:int,<array_max_1033@78:1>:int,<<array_max_1033@78:2>@81:0>:int) =
        ((<array_max_1033@78:1> < <array_max_1033@78:0>) && (<<array_max_1033@78:2>@81:0> = <array_max_1033@78:1>))
        P[<<check_1148@117:3>@120:0>](<check_1148@117:0>:int,<check_1148@117:1>:int,<check_1148@117:2>:int,<<check_1148@117:3>@120:0>:int) =
        ((<check_1148@117:1> = 0) &&
         ((<check_1148@117:1> < <check_1148@117:0>) && (<<check_1148@117:3>@120:0> = <check_1148@117:1>)))
        P[<make_array_1030@122:1>](<make_array_1030@122:0>:int,<make_array_1030@122:1>:int) =
        ((<make_array_1030@122:1> = 0) && (0 < <make_array_1030@122:0>))
        P[<fail_1486@128:0>](<fail_1486@128:0>:bool) = false
      upper bounds:
        P[<<make_array_1030@83:2>@95:0>](var396:int,var397:int,var398:int) = true
      begin GenHcSolver.classify_pids(161860)[4]
        output:
          [<<make_array_1030@83:2>@95:0>]
      end GenHcSolver.classify_pids(161860)[4] (0.000000 sec.)
      lb:((0 <= <make_array_1030@83:1>) &&
          ((<make_array_1030@83:1> < <make_array_1030@83:0>) &&
           (<<make_array_1030@83:2>@95:0> = <make_array_1030@83:1>)))
      nub:false
      begin ApronInterface.convex_hull_interpolate(161863)[4]
        lb:((0 <= <make_array_1030@83:1>) &&
            ((<make_array_1030@83:1> < <make_array_1030@83:0>) &&
             (<<make_array_1030@83:2>@95:0> = <make_array_1030@83:1>)))
        nub:false
        begin ExtFormula.Formula.case_analysis_boolean(161896)[5]
          ts: ((0 <= <make_array_1030@83:1>) &&
               ((<make_array_1030@83:1> < <make_array_1030@83:0>) &&
                (<<make_array_1030@83:2>@95:0> = <make_array_1030@83:1>)))
          
        end ExtFormula.Formula.case_analysis_boolean(161896)[5] (0.000000 sec.)
        begin ExtFormula.Formula.case_analysis_boolean(161906)[5]
          ts: false
          
        end ExtFormula.Formula.case_analysis_boolean(161906)[5] (0.000000 sec.)
        lb':(((<<make_array_1030@83:2>@95:0> + (-1 * <make_array_1030@83:1>)) = 0) &&
             ((<make_array_1030@83:1> >= 0) && (((-1 + (-1 * <make_array_1030@83:1>)) + <make_array_1030@83:0>) >= 0)))
        nub':(-1 >= 0)
        begin InterpProver.interpolate(161909)[5]
          begin InterpProver.interpolate_fresh(161910)[6]
            begin InterpProver.interpolate_log(161911)[7]
              input1: (((<<make_array_1030@83:2>@95:0> + (-1 * <make_array_1030@83:1>)) = 0) &&
                       ((<make_array_1030@83:1> >= 0) &&
                        (((-1 + (-1 * <make_array_1030@83:1>)) + <make_array_1030@83:0>) >= 0)))
              input2: (-1 >= 0)
              begin InterpProver.interpolate_check(161912)[8]
                begin InterpProver.interpolate_simplify(161913)[9]
                  begin InterpProver.interpolate_quick(161975)[10]
                    
                  end InterpProver.interpolate_quick(161975)[10] (0.000000 sec.)
                  
                end InterpProver.interpolate_simplify(161913)[9] (0.000000 sec.)
                
              end InterpProver.interpolate_check(161912)[8] (0.000000 sec.)
              output: true
            end InterpProver.interpolate_log(161911)[7] (0.001000 sec.)
            
          end InterpProver.interpolate_fresh(161910)[6] (0.001000 sec.)
          
        end InterpProver.interpolate(161909)[5] (0.001000 sec.)
        output:
          P[<<make_array_1030@83:2>@95:0>](<make_array_1030@83:0>:int,<make_array_1030@83:1>:int,<<make_array_1030@83:2>@95:0>:int) =
          true
      end ApronInterface.convex_hull_interpolate(161863)[4] (0.001999 sec.)
      Horn clauses:
        P[<fail_1486@128:0>](<fail_1486@128:0>:bool)|- bot
        
        P[<make_array_1030@122:1>](<k_make_array_u_1182@125:1>:int,<k_make_array_u_1182@125:0>:int),
        ((0 > <k_make_array_u_1182@125:0>) && <fail_1486@128:0>) |- P[<fail_1486@128:0>](
        <fail_1486@128:0>:bool)
        
        P[<<check_1148@117:3>@120:0>](<make_array_1030@122:0>:int,0:int,<check_1148@117:2>:int,<make_array_1030@122:1>:int)|- P[<make_array_1030@122:1>](
        <make_array_1030@122:0>:int,<make_array_1030@122:1>:int)
        
        P[<check_1148@117:2>](<check_1148@117:0>:int,<check_1148@117:1>:int,<check_1148@117:2>:int),
        ((<check_1148@117:1> < <check_1148@117:0>) && (<<check_1148@117:3>@120:0> = <check_1148@117:1>))
        |- P[<<check_1148@117:3>@120:0>](<check_1148@117:0>:int,<check_1148@117:1>:int,
                                         <check_1148@117:2>:int,<<check_1148@117:3>@120:0>:int)
        
         (<check_1148@117:1> = 0)
        |- P[<check_1148@117:2>](<check_1148@117:0>:int,<check_1148@117:1>:int,
                                 <check_1148@117:2>:int)
        
         ((<array_max_1033@78:1> < <array_max_1033@78:0>) && (<<array_max_1033@78:2>@81:0> = <array_max_1033@78:1>))
        |- P[<<array_max_1033@78:2>@81:0>](<array_max_1033@78:0>:int,
                                           <array_max_1033@78:1>:int,
                                           <<array_max_1033@78:2>@81:0>:int)
      lower bounds:
        P[<check_1148@117:2>](<check_1148@117:0>:int,<check_1148@117:1>:int,<check_1148@117:2>:int) =
        (<check_1148@117:1> = 0)
        P[<<array_max_1033@78:2>@81:0>](<array_max_1033@78:0>:int,<array_max_1033@78:1>:int,<<array_max_1033@78:2>@81:0>:int) =
        ((<array_max_1033@78:1> < <array_max_1033@78:0>) && (<<array_max_1033@78:2>@81:0> = <array_max_1033@78:1>))
        P[<<check_1148@117:3>@120:0>](<check_1148@117:0>:int,<check_1148@117:1>:int,<check_1148@117:2>:int,<<check_1148@117:3>@120:0>:int) =
        ((<check_1148@117:1> = 0) &&
         ((<check_1148@117:1> < <check_1148@117:0>) && (<<check_1148@117:3>@120:0> = <check_1148@117:1>)))
        P[<make_array_1030@122:1>](<make_array_1030@122:0>:int,<make_array_1030@122:1>:int) =
        ((<make_array_1030@122:1> = 0) && (0 < <make_array_1030@122:0>))
        P[<fail_1486@128:0>](<fail_1486@128:0>:bool) = false
      upper bounds:
        P[<<array_max_1033@78:2>@81:0>](var399:int,var400:int,var401:int) = true
      begin GenHcSolver.classify_pids(164195)[4]
        output:
          [<<array_max_1033@78:2>@81:0>]
      end GenHcSolver.classify_pids(164195)[4] (0.000000 sec.)
      lb:((<array_max_1033@78:1> < <array_max_1033@78:0>) && (<<array_max_1033@78:2>@81:0> = <array_max_1033@78:1>))
      nub:false
      begin ApronInterface.convex_hull_interpolate(164198)[4]
        lb:((<array_max_1033@78:1> < <array_max_1033@78:0>) && (<<array_max_1033@78:2>@81:0> = <array_max_1033@78:1>))
        nub:false
        begin ExtFormula.Formula.case_analysis_boolean(164216)[5]
          ts: ((<array_max_1033@78:1> < <array_max_1033@78:0>) &&
               (<<array_max_1033@78:2>@81:0> = <array_max_1033@78:1>))
          
        end ExtFormula.Formula.case_analysis_boolean(164216)[5] (0.000000 sec.)
        begin ExtFormula.Formula.case_analysis_boolean(164225)[5]
          ts: false
          
        end ExtFormula.Formula.case_analysis_boolean(164225)[5] (0.000000 sec.)
        lb':(((<<array_max_1033@78:2>@81:0> + (-1 * <array_max_1033@78:1>)) = 0) &&
             (((-1 + (-1 * <array_max_1033@78:1>)) + <array_max_1033@78:0>) >= 0))
        nub':(-1 >= 0)
        begin InterpProver.interpolate(164228)[5]
          begin InterpProver.interpolate_fresh(164229)[6]
            begin InterpProver.interpolate_log(164230)[7]
              input1: (((<<array_max_1033@78:2>@81:0> + (-1 * <array_max_1033@78:1>)) = 0) &&
                       (((-1 + (-1 * <array_max_1033@78:1>)) + <array_max_1033@78:0>) >= 0))
              input2: (-1 >= 0)
              begin InterpProver.interpolate_check(164231)[8]
                begin InterpProver.interpolate_simplify(164232)[9]
                  begin InterpProver.interpolate_quick(164267)[10]
                    
                  end InterpProver.interpolate_quick(164267)[10] (0.000000 sec.)
                  
                end InterpProver.interpolate_simplify(164232)[9] (0.000000 sec.)
                
              end InterpProver.interpolate_check(164231)[8] (0.000000 sec.)
              output: true
            end InterpProver.interpolate_log(164230)[7] (0.000000 sec.)
            
          end InterpProver.interpolate_fresh(164229)[6] (0.001000 sec.)
          
        end InterpProver.interpolate(164228)[5] (0.001000 sec.)
        output:
          P[<<array_max_1033@78:2>@81:0>](<array_max_1033@78:0>:int,<array_max_1033@78:1>:int,<<array_max_1033@78:2>@81:0>:int) =
          true
      end ApronInterface.convex_hull_interpolate(164198)[4] (0.001000 sec.)
      Horn clauses:
        P[<fail_1486@128:0>](<fail_1486@128:0>:bool)|- bot
        
        P[<make_array_1030@122:1>](<k_make_array_u_1182@125:1>:int,<k_make_array_u_1182@125:0>:int),
        ((0 > <k_make_array_u_1182@125:0>) && <fail_1486@128:0>) |- P[<fail_1486@128:0>](
        <fail_1486@128:0>:bool)
        
        P[<<check_1148@117:3>@120:0>](<make_array_1030@122:0>:int,0:int,<check_1148@117:2>:int,<make_array_1030@122:1>:int)|- P[<make_array_1030@122:1>](
        <make_array_1030@122:0>:int,<make_array_1030@122:1>:int)
        
        P[<check_1148@117:2>](<check_1148@117:0>:int,<check_1148@117:1>:int,<check_1148@117:2>:int),
        ((<check_1148@117:1> < <check_1148@117:0>) && (<<check_1148@117:3>@120:0> = <check_1148@117:1>))
        |- P[<<check_1148@117:3>@120:0>](<check_1148@117:0>:int,<check_1148@117:1>:int,
                                         <check_1148@117:2>:int,<<check_1148@117:3>@120:0>:int)
        
         (<check_1148@117:1> = 0)
        |- P[<check_1148@117:2>](<check_1148@117:0>:int,<check_1148@117:1>:int,
                                 <check_1148@117:2>:int)
      lower bounds:
        P[<check_1148@117:2>](<check_1148@117:0>:int,<check_1148@117:1>:int,<check_1148@117:2>:int) =
        (<check_1148@117:1> = 0)
        P[<<check_1148@117:3>@120:0>](<check_1148@117:0>:int,<check_1148@117:1>:int,<check_1148@117:2>:int,<<check_1148@117:3>@120:0>:int) =
        ((<check_1148@117:1> = 0) &&
         ((<check_1148@117:1> < <check_1148@117:0>) && (<<check_1148@117:3>@120:0> = <check_1148@117:1>)))
        P[<make_array_1030@122:1>](<make_array_1030@122:0>:int,<make_array_1030@122:1>:int) =
        ((<make_array_1030@122:1> = 0) && (0 < <make_array_1030@122:0>))
        P[<fail_1486@128:0>](<fail_1486@128:0>:bool) = false
      upper bounds:
        P[<fail_1486@128:0>](var403:bool) = true
      begin GenHcSolver.classify_pids(165861)[4]
        output:
          [<fail_1486@128:0>]
      end GenHcSolver.classify_pids(165861)[4] (0.000000 sec.)
      lb:false
      nub:false
      begin ApronInterface.convex_hull_interpolate(165864)[4]
        lb:false
        nub:false
        begin ExtFormula.Formula.case_analysis_boolean(165867)[5]
          ts: false
          
        end ExtFormula.Formula.case_analysis_boolean(165867)[5] (0.000000 sec.)
        begin ExtFormula.Formula.case_analysis_boolean(165872)[5]
          ts: false
          
        end ExtFormula.Formula.case_analysis_boolean(165872)[5] (0.001000 sec.)
        lb':(-1 >= 0)
        nub':(-1 >= 0)
        begin InterpProver.interpolate(165875)[5]
          begin InterpProver.interpolate_fresh(165876)[6]
            begin InterpProver.interpolate_log(165877)[7]
              input1: (-1 >= 0)
              input2: (-1 >= 0)
              begin InterpProver.interpolate_check(165878)[8]
                begin InterpProver.interpolate_simplify(165879)[9]
                  begin InterpProver.interpolate_quick(165894)[10]
                    
                  end InterpProver.interpolate_quick(165894)[10] (0.000000 sec.)
                  begin minimizing # of disjunctions(165898)[10]
                    input: false
                    output: false
                  end minimizing # of disjunctions(165898)[10] (0.000000 sec.)
                  
                end InterpProver.interpolate_simplify(165879)[9] (0.000000 sec.)
                
              end InterpProver.interpolate_check(165878)[8] (0.000000 sec.)
              output: false
            end InterpProver.interpolate_log(165877)[7] (0.000000 sec.)
            
          end InterpProver.interpolate_fresh(165876)[6] (0.000000 sec.)
          
        end InterpProver.interpolate(165875)[5] (0.000000 sec.)
        output:
          P[<fail_1486@128:0>](<fail_1486@128:0>:bool) = false
      end ApronInterface.convex_hull_interpolate(165864)[4] (0.001000 sec.)
      Horn clauses:
        P[<make_array_1030@122:1>](<k_make_array_u_1182@125:1>:int,<k_make_array_u_1182@125:0>:int),
        (0 > <k_make_array_u_1182@125:0>) |- bot
        
        P[<<check_1148@117:3>@120:0>](<make_array_1030@122:0>:int,0:int,<check_1148@117:2>:int,<make_array_1030@122:1>:int)|- P[<make_array_1030@122:1>](
        <make_array_1030@122:0>:int,<make_array_1030@122:1>:int)
        
        P[<check_1148@117:2>](<check_1148@117:0>:int,<check_1148@117:1>:int,<check_1148@117:2>:int),
        ((<check_1148@117:1> < <check_1148@117:0>) && (<<check_1148@117:3>@120:0> = <check_1148@117:1>))
        |- P[<<check_1148@117:3>@120:0>](<check_1148@117:0>:int,<check_1148@117:1>:int,
                                         <check_1148@117:2>:int,<<check_1148@117:3>@120:0>:int)
        
         (<check_1148@117:1> = 0)
        |- P[<check_1148@117:2>](<check_1148@117:0>:int,<check_1148@117:1>:int,
                                 <check_1148@117:2>:int)
      lower bounds:
        P[<check_1148@117:2>](<check_1148@117:0>:int,<check_1148@117:1>:int,<check_1148@117:2>:int) =
        (<check_1148@117:1> = 0)
        P[<<check_1148@117:3>@120:0>](<check_1148@117:0>:int,<check_1148@117:1>:int,<check_1148@117:2>:int,<<check_1148@117:3>@120:0>:int) =
        ((<check_1148@117:1> = 0) &&
         ((<check_1148@117:1> < <check_1148@117:0>) && (<<check_1148@117:3>@120:0> = <check_1148@117:1>)))
        P[<make_array_1030@122:1>](<make_array_1030@122:0>:int,<make_array_1030@122:1>:int) =
        ((<make_array_1030@122:1> = 0) && (0 < <make_array_1030@122:0>))
      upper bounds:
        P[<make_array_1030@122:1>](var404:int,var405:int) = (0 <= var405)
      begin GenHcSolver.classify_pids(167346)[4]
        output:
          [<make_array_1030@122:1>]
      end GenHcSolver.classify_pids(167346)[4] (0.000000 sec.)
      lb:((<make_array_1030@122:1> = 0) && (0 < <make_array_1030@122:0>))
      nub:(not (0 <= <make_array_1030@122:1>))
      begin ApronInterface.convex_hull_interpolate(167349)[4]
        lb:((<make_array_1030@122:1> = 0) && (0 < <make_array_1030@122:0>))
        nub:(not (0 <= <make_array_1030@122:1>))
        begin ExtFormula.Formula.case_analysis_boolean(167359)[5]
          ts: ((<make_array_1030@122:1> = 0) && (0 < <make_array_1030@122:0>))
          
        end ExtFormula.Formula.case_analysis_boolean(167359)[5] (0.000000 sec.)
        begin ExtFormula.Formula.case_analysis_boolean(167367)[5]
          ts: (0 > <make_array_1030@122:1>)
          
        end ExtFormula.Formula.case_analysis_boolean(167367)[5] (0.001000 sec.)
        lb':((<make_array_1030@122:1> = 0) && ((-1 + <make_array_1030@122:0>) >= 0))
        nub':((-1 + (-1 * <make_array_1030@122:1>)) >= 0)
        begin InterpProver.interpolate(167371)[5]
          begin InterpProver.interpolate_fresh(167372)[6]
            begin InterpProver.interpolate_log(167373)[7]
              input1: ((<make_array_1030@122:1> = 0) && ((-1 + <make_array_1030@122:0>) >= 0))
              input2: ((-1 + (-1 * <make_array_1030@122:1>)) >= 0)
              begin InterpProver.interpolate_check(167374)[8]
                begin InterpProver.interpolate_simplify(167375)[9]
                  begin InterpProver.interpolate_quick(167412)[10]
                    begin CsisatInterface.interpolate_csisat_wrap(167421)[11]
                      begin CsisatInterface.interpolate_csisat_post_process(167422)[12]
                        begin CsisatInterface.interpolate_csisat_log(167423)[13]
                          input1: (0 = v_sep_make_array_1030_sep_122_sep_1 & 1 <= v_sep_make_array_1030_sep_122_sep_0)
                          input2: (1 + v_sep_make_array_1030_sep_122_sep_1) <= 0
                          begin CsisatInterface.interpolate_csisat_raw(167424)[14]
                            
                          end CsisatInterface.interpolate_csisat_raw(167424)[14] (0.000000 sec.)
                          output: -2*v_sep_make_array_1030_sep_122_sep_1 <= 0
                          
                        end CsisatInterface.interpolate_csisat_log(167423)[13] (0.000000 sec.)
                        after simplification: -2*v_sep_make_array_1030_sep_122_sep_1 <= 0
                        after dnf conversion: ((-2*v_sep_make_array_1030_sep_122_sep_1 <= 0))
                        
                      end CsisatInterface.interpolate_csisat_post_process(167422)[12] (0.000000 sec.)
                      
                    end CsisatInterface.interpolate_csisat_wrap(167421)[11] (0.000000 sec.)
                    
                  end InterpProver.interpolate_quick(167412)[10] (0.001000 sec.)
                  
                end InterpProver.interpolate_simplify(167375)[9] (0.001000 sec.)
                
              end InterpProver.interpolate_check(167374)[8] (0.001000 sec.)
              output: (0 <= <make_array_1030@122:1>)
            end InterpProver.interpolate_log(167373)[7] (0.001000 sec.)
            
          end InterpProver.interpolate_fresh(167372)[6] (0.001000 sec.)
          
        end InterpProver.interpolate(167371)[5] (0.001000 sec.)
        output:
          P[<make_array_1030@122:1>](<make_array_1030@122:0>:int,<make_array_1030@122:1>:int) =
          (0 <= <make_array_1030@122:1>)
      end ApronInterface.convex_hull_interpolate(167349)[4] (0.002000 sec.)
      Horn clauses:
        P[<<check_1148@117:3>@120:0>](<make_array_1030@122:0>:int,0:int,<check_1148@117:2>:int,<make_array_1030@122:1>:int),
        (0 > <make_array_1030@122:1>) |- bot
        
        P[<check_1148@117:2>](<check_1148@117:0>:int,<check_1148@117:1>:int,<check_1148@117:2>:int),
        ((<check_1148@117:1> < <check_1148@117:0>) && (<<check_1148@117:3>@120:0> = <check_1148@117:1>))
        |- P[<<check_1148@117:3>@120:0>](<check_1148@117:0>:int,<check_1148@117:1>:int,
                                         <check_1148@117:2>:int,<<check_1148@117:3>@120:0>:int)
        
         (<check_1148@117:1> = 0)
        |- P[<check_1148@117:2>](<check_1148@117:0>:int,<check_1148@117:1>:int,
                                 <check_1148@117:2>:int)
      lower bounds:
        P[<check_1148@117:2>](<check_1148@117:0>:int,<check_1148@117:1>:int,<check_1148@117:2>:int) =
        (<check_1148@117:1> = 0)
        P[<<check_1148@117:3>@120:0>](<check_1148@117:0>:int,<check_1148@117:1>:int,<check_1148@117:2>:int,<<check_1148@117:3>@120:0>:int) =
        ((<check_1148@117:1> = 0) &&
         ((<check_1148@117:1> < <check_1148@117:0>) && (<<check_1148@117:3>@120:0> = <check_1148@117:1>)))
      upper bounds:
        P[<<check_1148@117:3>@120:0>](var406:int,var407:int,var408:int,var409:int) = ((var407 <> 0) || (0 <= var409))
      begin GenHcSolver.classify_pids(168672)[4]
        output:
          [<<check_1148@117:3>@120:0>]
      end GenHcSolver.classify_pids(168672)[4] (0.000000 sec.)
      lb:((<check_1148@117:1> = 0) &&
          ((<check_1148@117:1> < <check_1148@117:0>) && (<<check_1148@117:3>@120:0> = <check_1148@117:1>)))
      nub:(not ((<check_1148@117:1> <> 0) || (0 <= <<check_1148@117:3>@120:0>)))
      begin ApronInterface.convex_hull_interpolate(168675)[4]
        lb:((<check_1148@117:1> = 0) &&
            ((<check_1148@117:1> < <check_1148@117:0>) && (<<check_1148@117:3>@120:0> = <check_1148@117:1>)))
        nub:(not ((<check_1148@117:1> <> 0) || (0 <= <<check_1148@117:3>@120:0>)))
        begin ExtFormula.Formula.case_analysis_boolean(168704)[5]
          ts: ((<check_1148@117:1> = 0) &&
               ((<check_1148@117:1> < <check_1148@117:0>) && (<<check_1148@117:3>@120:0> = <check_1148@117:1>)))
          
        end ExtFormula.Formula.case_analysis_boolean(168704)[5] (0.000000 sec.)
        begin ExtFormula.Formula.case_analysis_boolean(168721)[5]
          ts: ((<check_1148@117:1> = 0) && (0 > <<check_1148@117:3>@120:0>))
          
        end ExtFormula.Formula.case_analysis_boolean(168721)[5] (0.000000 sec.)
        lb':((<<check_1148@117:3>@120:0> = 0) && ((<check_1148@117:1> = 0) && ((-1 + <check_1148@117:0>) >= 0)))
        nub':((<check_1148@117:1> = 0) && ((-1 + (-1 * <<check_1148@117:3>@120:0>)) >= 0))
        begin InterpProver.interpolate(168726)[5]
          begin InterpProver.interpolate_fresh(168727)[6]
            begin InterpProver.interpolate_log(168728)[7]
              input1: ((<<check_1148@117:3>@120:0> = 0) &&
                       ((<check_1148@117:1> = 0) && ((-1 + <check_1148@117:0>) >= 0)))
              input2: ((<check_1148@117:1> = 0) && ((-1 + (-1 * <<check_1148@117:3>@120:0>)) >= 0))
              begin InterpProver.interpolate_check(168729)[8]
                begin InterpProver.interpolate_simplify(168730)[9]
                  begin InterpProver.interpolate_quick(168801)[10]
                    begin CsisatInterface.interpolate_csisat_wrap(168810)[11]
                      begin CsisatInterface.interpolate_csisat_post_process(168811)[12]
                        begin CsisatInterface.interpolate_csisat_log(168812)[13]
                          input1: (0 = v_sep_check_1148_sep_117_sep_1 & 0 = v_sep_check_1148_sep_117_sep_3_sep_120_sep_0 & 1 <= v_sep_check_1148_sep_117_sep_0)
                          input2: (0 = v_sep_check_1148_sep_117_sep_1 & (1 + v_sep_check_1148_sep_117_sep_3_sep_120_sep_0) <= 0)
                          begin CsisatInterface.interpolate_csisat_raw(168813)[14]
                            
                          end CsisatInterface.interpolate_csisat_raw(168813)[14] (0.000000 sec.)
                          output: -2*v_sep_check_1148_sep_117_sep_3_sep_120_sep_0 <= 0
                          
                        end CsisatInterface.interpolate_csisat_log(168812)[13] (0.000000 sec.)
                        after simplification: -2*v_sep_check_1148_sep_117_sep_3_sep_120_sep_0 <= 0
                        after dnf conversion: ((-2*v_sep_check_1148_sep_117_sep_3_sep_120_sep_0 <= 0))
                        
                      end CsisatInterface.interpolate_csisat_post_process(168811)[12] (0.000000 sec.)
                      
                    end CsisatInterface.interpolate_csisat_wrap(168810)[11] (0.000000 sec.)
                    
                  end InterpProver.interpolate_quick(168801)[10] (0.000999 sec.)
                  
                end InterpProver.interpolate_simplify(168730)[9] (0.000999 sec.)
                
              end InterpProver.interpolate_check(168729)[8] (0.001999 sec.)
              output: (0 <= <<check_1148@117:3>@120:0>)
            end InterpProver.interpolate_log(168728)[7] (0.001999 sec.)
            
          end InterpProver.interpolate_fresh(168727)[6] (0.001999 sec.)
          
        end InterpProver.interpolate(168726)[5] (0.001999 sec.)
        output:
          P[<<check_1148@117:3>@120:0>](<check_1148@117:0>:int,<check_1148@117:1>:int,<check_1148@117:2>:int,<<check_1148@117:3>@120:0>:int) =
          (0 <= <<check_1148@117:3>@120:0>)
      end ApronInterface.convex_hull_interpolate(168675)[4] (0.002999 sec.)
      Horn clauses:
        P[<check_1148@117:2>](<check_1148@117:0>:int,<<check_1148@117:3>@120:0>:int,<check_1148@117:2>:int),
        ((<<check_1148@117:3>@120:0> < <check_1148@117:0>) && (0 > <<check_1148@117:3>@120:0>)) |- bot
        
         (<check_1148@117:1> = 0)
        |- P[<check_1148@117:2>](<check_1148@117:0>:int,<check_1148@117:1>:int,
                                 <check_1148@117:2>:int)
      lower bounds:
        P[<check_1148@117:2>](<check_1148@117:0>:int,<check_1148@117:1>:int,<check_1148@117:2>:int) =
        (<check_1148@117:1> = 0)
      upper bounds:
        P[<check_1148@117:2>](var410:int,var411:int,var412:int) = ((var411 >= var410) || (0 <= var411))
      begin GenHcSolver.classify_pids(169593)[4]
        output:
          [<check_1148@117:2>]
      end GenHcSolver.classify_pids(169593)[4] (0.000000 sec.)
      lb:(<check_1148@117:1> = 0)
      nub:(not ((<check_1148@117:1> >= <check_1148@117:0>) || (0 <= <check_1148@117:1>)))
      begin ApronInterface.convex_hull_interpolate(169596)[4]
        lb:(<check_1148@117:1> = 0)
        nub:(not ((<check_1148@117:1> >= <check_1148@117:0>) || (0 <= <check_1148@117:1>)))
        begin ExtFormula.Formula.case_analysis_boolean(169600)[5]
          ts: (<check_1148@117:1> = 0)
          
        end ExtFormula.Formula.case_analysis_boolean(169600)[5] (0.000000 sec.)
        begin ExtFormula.Formula.case_analysis_boolean(169618)[5]
          ts: ((<check_1148@117:1> < <check_1148@117:0>) && (0 > <check_1148@117:1>))
          
        end ExtFormula.Formula.case_analysis_boolean(169618)[5] (0.000000 sec.)
        lb':(<check_1148@117:1> = 0)
        nub':(((-1 + (-1 * <check_1148@117:1>)) >= 0) && (((-1 + (-1 * <check_1148@117:1>)) + <check_1148@117:0>) >= 0))
        begin InterpProver.interpolate(169624)[5]
          begin InterpProver.interpolate_fresh(169625)[6]
            begin InterpProver.interpolate_log(169626)[7]
              input1: (<check_1148@117:1> = 0)
              input2: (((-1 + (-1 * <check_1148@117:1>)) >= 0) &&
                       (((-1 + (-1 * <check_1148@117:1>)) + <check_1148@117:0>) >= 0))
              begin InterpProver.interpolate_check(169627)[8]
                begin InterpProver.interpolate_simplify(169628)[9]
                  begin InterpProver.interpolate_quick(169679)[10]
                    begin CsisatInterface.interpolate_csisat_wrap(169688)[11]
                      begin CsisatInterface.interpolate_csisat_post_process(169689)[12]
                        begin CsisatInterface.interpolate_csisat_log(169690)[13]
                          input1: 0 = v_sep_check_1148_sep_117_sep_1
                          input2: ((1 + v_sep_check_1148_sep_117_sep_1) <= 0 & (1 + v_sep_check_1148_sep_117_sep_1) <= v_sep_check_1148_sep_117_sep_0)
                          begin CsisatInterface.interpolate_csisat_raw(169691)[14]
                            
                          end CsisatInterface.interpolate_csisat_raw(169691)[14] (0.000999 sec.)
                          output: -2*v_sep_check_1148_sep_117_sep_1 <= 0
                          
                        end CsisatInterface.interpolate_csisat_log(169690)[13] (0.000999 sec.)
                        after simplification: -2*v_sep_check_1148_sep_117_sep_1 <= 0
                        after dnf conversion: ((-2*v_sep_check_1148_sep_117_sep_1 <= 0))
                        
                      end CsisatInterface.interpolate_csisat_post_process(169689)[12] (0.000999 sec.)
                      
                    end CsisatInterface.interpolate_csisat_wrap(169688)[11] (0.000999 sec.)
                    
                  end InterpProver.interpolate_quick(169679)[10] (0.000999 sec.)
                  
                end InterpProver.interpolate_simplify(169628)[9] (0.000999 sec.)
                
              end InterpProver.interpolate_check(169627)[8] (0.000999 sec.)
              output: (0 <= <check_1148@117:1>)
            end InterpProver.interpolate_log(169626)[7] (0.001999 sec.)
            
          end InterpProver.interpolate_fresh(169625)[6] (0.001999 sec.)
          
        end InterpProver.interpolate(169624)[5] (0.001999 sec.)
        output:
          P[<check_1148@117:2>](<check_1148@117:0>:int,<check_1148@117:1>:int,<check_1148@117:2>:int) =
          (0 <= <check_1148@117:1>)
      end ApronInterface.convex_hull_interpolate(169596)[4] (0.001999 sec.)
      begin HcSolver.check_validity(169811)[4]
        input:
          P[<fail_1486@128:0>](<fail_1486@128:0>:bool)|- bot
          
          P[<make_array_1030@122:1>](<k_make_array_u_1182@125:1>:int,<k_make_array_u_1182@125:0>:int),
          ((0 > <k_make_array_u_1182@125:0>) && <fail_1486@128:0>) |- P[<fail_1486@128:0>](
          <fail_1486@128:0>:bool)
          
          P[<<array_max_1033@78:3>@113:0>](<make_array_1030@122:0>:int,0:int,<check_1148@117:2>:int),
          P[<<check_1148@117:3>@120:0>](<make_array_1030@122:0>:int,0:int,<check_1148@117:2>:int,<make_array_1030@122:1>:int)|- P[<make_array_1030@122:1>](
          <make_array_1030@122:0>:int,<make_array_1030@122:1>:int)
          
          P[<check_1148@117:2>](<check_1148@117:0>:int,<check_1148@117:1>:int,<check_1148@117:2>:int),
          ((<check_1148@117:1> < <check_1148@117:0>) && (<<check_1148@117:3>@120:0> = <check_1148@117:1>))
          |- P[<<check_1148@117:3>@120:0>](<check_1148@117:0>:int,<check_1148@117:1>:int,
                                           <check_1148@117:2>:int,<<check_1148@117:3>@120:0>:int)
          
          P[<<array_max_1033@78:3>@113:0>](<check_1148@117:0>:int,0:int,<check_1148@117:2>:int),
          (<check_1148@117:1> = 0)
          |- P[<check_1148@117:2>](<check_1148@117:0>:int,<check_1148@117:1>:int,
                                   <check_1148@117:2>:int)
          
          P[<array_max_1033@78:1>](<array_max_1033@78:0>:int,<array_max_1033@78:1>:int),
          P[<<<array_max_1033@78:2>@81:1>@97:0>](<array_max_1033@78:0>:int,<array_max_1033@78:1>:int,<array_max_1033@78:1>:int,<<array_max_1033@78:3>@113:0>:int),
          P[<<array_max_1033@101:3>@104:0>](<array_max_1033@78:0>:int,(
                                            1 + <array_max_1033@78:1>):int,var312:int),
          ((<<array_max_1033@78:3>@113:0> > var312) && (<array_max_1033@78:1> < <array_max_1033@78:0>))
          |- P[<<array_max_1033@78:3>@113:0>](<array_max_1033@78:0>:int,
                                              <array_max_1033@78:1>:int,
                                              <<array_max_1033@78:3>@113:0>:int)
          
          P[<array_max_1033@101:1>](<array_max_1033@101:0>:int,<array_max_1033@101:1>:int),
          ((<<array_max_1033@101:3>@104:0> = 0) && (<array_max_1033@101:1> >= <array_max_1033@101:0>))
          |- P[<<array_max_1033@101:3>@104:0>](<array_max_1033@101:0>:int,
                                               <array_max_1033@101:1>:int,
                                               <<array_max_1033@101:3>@104:0>:int)
          
          P[<array_max_1033@78:1>](<array_max_1033@101:0>:int,(-1 + <array_max_1033@101:1>):int),
          P[<<<array_max_1033@78:2>@81:1>@97:0>](<array_max_1033@101:0>:int,(
                                                 -1 + <array_max_1033@101:1>):int,(
                                                 -1 + <array_max_1033@101:1>):int,<f_array_max_1480@99:4>:int),
          (<array_max_1033@101:1> < (1 + <array_max_1033@101:0>))
          |- P[<array_max_1033@101:1>](<array_max_1033@101:0>:int,<array_max_1033@101:1>:int)
          
          P[<<make_array_1030@83:2>@95:0>](<array_max_1033@78:0>:int,<<array_max_1033@78:2>@81:0>:int,<<<array_max_1033@78:2>@81:1>@97:0>:int),
          P[<array_max_1033@78:1>](<array_max_1033@78:0>:int,<array_max_1033@78:1>:int), (
          <array_max_1033@78:1> = 0)
          |- P[<<<array_max_1033@78:2>@81:1>@97:0>](<array_max_1033@78:0>:int,
                                                    <array_max_1033@78:1>:int,
                                                    <<array_max_1033@78:2>@81:0>:int,
                                                    <<<array_max_1033@78:2>@81:1>@97:0>:int)
          
          P[<make_array_1030@83:1>](<make_array_1030@83:0>:int,<make_array_1030@83:1>:int),
          ((0 <= <make_array_1030@83:1>) &&
           ((<make_array_1030@83:1> < <make_array_1030@83:0>) &&
            (<<make_array_1030@83:2>@95:0> = <make_array_1030@83:1>)))
          |- P[<<make_array_1030@83:2>@95:0>](<make_array_1030@83:0>:int,
                                              <make_array_1030@83:1>:int,
                                              <<make_array_1030@83:2>@95:0>:int)
          
          P[<<array_max_1033@78:2>@81:0>](<make_array_1030@83:0>:int,0:int,<make_array_1030@83:1>:int)|- P[<make_array_1030@83:1>](
          <make_array_1030@83:0>:int,<make_array_1030@83:1>:int)
          
          P[<array_max_1033@78:1>](<array_max_1033@78:0>:int,<array_max_1033@78:1>:int),
          ((<array_max_1033@78:1> < <array_max_1033@78:0>) && (<<array_max_1033@78:2>@81:0> = <array_max_1033@78:1>))
          |- P[<<array_max_1033@78:2>@81:0>](<array_max_1033@78:0>:int,
                                             <array_max_1033@78:1>:int,
                                             <<array_max_1033@78:2>@81:0>:int)
          
           (<array_max_1033@78:1> = 0) |- P[<array_max_1033@78:1>](<array_max_1033@78:0>:int,
                                                                   <array_max_1033@78:1>:int)
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        
      end HcSolver.check_validity(169811)[4] (0.004000 sec.)
      solution:
        P[<fail_1486@128:0>](<fail_1486@128:0>:bool) = false
        P[<make_array_1030@122:1>](<make_array_1030@122:0>:int,<make_array_1030@122:1>:int) =
        (0 <= <make_array_1030@122:1>)
        P[<<check_1148@117:3>@120:0>](<check_1148@117:0>:int,<check_1148@117:1>:int,<check_1148@117:2>:int,<<check_1148@117:3>@120:0>:int) =
        (0 <= <<check_1148@117:3>@120:0>)
        P[<check_1148@117:2>](<check_1148@117:0>:int,<check_1148@117:1>:int,<check_1148@117:2>:int) =
        (0 <= <check_1148@117:1>)
        P[<<array_max_1033@78:3>@113:0>](<array_max_1033@101:0>:int,<array_max_1033@101:1>:int,<<array_max_1033@101:3>@104:0>:int) =
        true
        P[<<array_max_1033@101:3>@104:0>](<array_max_1033@101:0>:int,<array_max_1033@101:1>:int,<<array_max_1033@101:3>@104:0>:int) =
        true
        P[<array_max_1033@101:1>](<array_max_1033@78:0>:int,<array_max_1033@78:1>:int) = true
        P[<<<array_max_1033@78:2>@81:1>@97:0>](<array_max_1033@78:0>:int,<array_max_1033@78:1>:int,<<array_max_1033@78:2>@81:0>:int,<<<array_max_1033@78:2>@81:1>@97:0>:int) =
        true
        P[<<make_array_1030@83:2>@95:0>](<make_array_1030@83:0>:int,<make_array_1030@83:1>:int,<<make_array_1030@83:2>@95:0>:int) =
        true
        P[<make_array_1030@83:1>](<make_array_1030@83:0>:int,<make_array_1030@83:1>:int) = true
        P[<<array_max_1033@78:2>@81:0>](<array_max_1033@78:0>:int,<array_max_1033@78:1>:int,<<array_max_1033@78:2>@81:0>:int) =
        true
        P[<array_max_1033@78:1>](<array_max_1033@78:0>:int,<array_max_1033@78:1>:int) = true
    end GenHcSolver.solve(116381)[3] (0.277958 sec.)
    begin YhornInterface.solve(170856)[3]
      begin HcSolver.solve_ub(170857)[4]
        encoded:
          P[<fail_1486@128:0>](<fail_1486@128:0>:int)|- bot
          
          P[<make_array_1030@122:1>](<k_make_array_u_1182@125:1>:int,<k_make_array_u_1182@125:0>:int),
          ((0 > <k_make_array_u_1182@125:0>) && (<fail_1486@128:0> = 1)) |- P[<fail_1486@128:0>](
          <fail_1486@128:0>:int)
          
          P[<<array_max_1033@78:3>@113:0>](<make_array_1030@122:0>:int,0:int,<check_1148@117:2>:int),
          P[<<check_1148@117:3>@120:0>](<make_array_1030@122:0>:int,0:int,<check_1148@117:2>:int,<make_array_1030@122:1>:int)|- P[<make_array_1030@122:1>](
          <make_array_1030@122:0>:int,<make_array_1030@122:1>:int)
          
          P[<check_1148@117:2>](<check_1148@117:0>:int,<check_1148@117:1>:int,<check_1148@117:2>:int),
          ((<check_1148@117:1> < <check_1148@117:0>) && (<<check_1148@117:3>@120:0> = <check_1148@117:1>))
          |- P[<<check_1148@117:3>@120:0>](<check_1148@117:0>:int,<check_1148@117:1>:int,
                                           <check_1148@117:2>:int,<<check_1148@117:3>@120:0>:int)
          
          P[<<array_max_1033@78:3>@113:0>](<check_1148@117:0>:int,0:int,<check_1148@117:2>:int),
          (<check_1148@117:1> = 0)
          |- P[<check_1148@117:2>](<check_1148@117:0>:int,<check_1148@117:1>:int,
                                   <check_1148@117:2>:int)
          
          P[<array_max_1033@78:1>](<array_max_1033@78:0>:int,<array_max_1033@78:1>:int),
          P[<<<array_max_1033@78:2>@81:1>@97:0>](<array_max_1033@78:0>:int,<array_max_1033@78:1>:int,<array_max_1033@78:1>:int,<<array_max_1033@78:3>@113:0>:int),
          P[<<array_max_1033@101:3>@104:0>](<array_max_1033@78:0>:int,(
                                            1 + <array_max_1033@78:1>):int,var312:int),
          ((<<array_max_1033@78:3>@113:0> > var312) && (<array_max_1033@78:1> < <array_max_1033@78:0>))
          |- P[<<array_max_1033@78:3>@113:0>](<array_max_1033@78:0>:int,
                                              <array_max_1033@78:1>:int,
                                              <<array_max_1033@78:3>@113:0>:int)
          
          P[<array_max_1033@101:1>](<array_max_1033@101:0>:int,<array_max_1033@101:1>:int),
          ((<<array_max_1033@101:3>@104:0> = 0) && (<array_max_1033@101:1> >= <array_max_1033@101:0>))
          |- P[<<array_max_1033@101:3>@104:0>](<array_max_1033@101:0>:int,
                                               <array_max_1033@101:1>:int,
                                               <<array_max_1033@101:3>@104:0>:int)
          
          P[<array_max_1033@78:1>](<array_max_1033@101:0>:int,(-1 + <array_max_1033@101:1>):int),
          P[<<<array_max_1033@78:2>@81:1>@97:0>](<array_max_1033@101:0>:int,(
                                                 -1 + <array_max_1033@101:1>):int,(
                                                 -1 + <array_max_1033@101:1>):int,<f_array_max_1480@99:4>:int),
          (<array_max_1033@101:1> < (1 + <array_max_1033@101:0>))
          |- P[<array_max_1033@101:1>](<array_max_1033@101:0>:int,<array_max_1033@101:1>:int)
          
          P[<<make_array_1030@83:2>@95:0>](<array_max_1033@78:0>:int,<<array_max_1033@78:2>@81:0>:int,<<<array_max_1033@78:2>@81:1>@97:0>:int),
          P[<array_max_1033@78:1>](<array_max_1033@78:0>:int,<array_max_1033@78:1>:int), (
          <array_max_1033@78:1> = 0)
          |- P[<<<array_max_1033@78:2>@81:1>@97:0>](<array_max_1033@78:0>:int,
                                                    <array_max_1033@78:1>:int,
                                                    <<array_max_1033@78:2>@81:0>:int,
                                                    <<<array_max_1033@78:2>@81:1>@97:0>:int)
          
          P[<make_array_1030@83:1>](<make_array_1030@83:0>:int,<make_array_1030@83:1>:int),
          ((0 <= <make_array_1030@83:1>) &&
           ((<make_array_1030@83:1> < <make_array_1030@83:0>) &&
            (<<make_array_1030@83:2>@95:0> = <make_array_1030@83:1>)))
          |- P[<<make_array_1030@83:2>@95:0>](<make_array_1030@83:0>:int,
                                              <make_array_1030@83:1>:int,
                                              <<make_array_1030@83:2>@95:0>:int)
          
          P[<<array_max_1033@78:2>@81:0>](<make_array_1030@83:0>:int,0:int,<make_array_1030@83:1>:int)|- P[<make_array_1030@83:1>](
          <make_array_1030@83:0>:int,<make_array_1030@83:1>:int)
          
          P[<array_max_1033@78:1>](<array_max_1033@78:0>:int,<array_max_1033@78:1>:int),
          ((<array_max_1033@78:1> < <array_max_1033@78:0>) && (<<array_max_1033@78:2>@81:0> = <array_max_1033@78:1>))
          |- P[<<array_max_1033@78:2>@81:0>](<array_max_1033@78:0>:int,
                                             <array_max_1033@78:1>:int,
                                             <<array_max_1033@78:2>@81:0>:int)
          
           (<array_max_1033@78:1> = 0) |- P[<array_max_1033@78:1>](<array_max_1033@78:0>:int,
                                                                   <array_max_1033@78:1>:int)
        input to Yhorn:
          P[<fail_1486@128:0>](<fail_1486@128:0>:int)|- bot
          
          P[<make_array_1030@122:1>](<k_make_array_u_1182@125:1>:int,<k_make_array_u_1182@125:0>:int),
          ((0 > <k_make_array_u_1182@125:0>) && (<fail_1486@128:0> = 1)) |- P[<fail_1486@128:0>](
          <fail_1486@128:0>:int)
          
          P[<<array_max_1033@78:3>@113:0>](<make_array_1030@122:0>:int,var413:int,<check_1148@117:2>:int),
          P[<<check_1148@117:3>@120:0>](<make_array_1030@122:0>:int,var414:int,<check_1148@117:2>:int,<make_array_1030@122:1>:int),
          ((var414 = 0) && (var413 = 0))
          |- P[<make_array_1030@122:1>](<make_array_1030@122:0>:int,<make_array_1030@122:1>:int)
          
          P[<check_1148@117:2>](<check_1148@117:0>:int,<check_1148@117:1>:int,<check_1148@117:2>:int),
          ((<<check_1148@117:3>@120:0> = <check_1148@117:1>) && (<check_1148@117:1> < <check_1148@117:0>))
          |- P[<<check_1148@117:3>@120:0>](<check_1148@117:0>:int,<check_1148@117:1>:int,
                                           <check_1148@117:2>:int,<<check_1148@117:3>@120:0>:int)
          
          P[<<array_max_1033@78:3>@113:0>](<check_1148@117:0>:int,var415:int,<check_1148@117:2>:int),
          ((var415 = 0) && (<check_1148@117:1> = 0))
          |- P[<check_1148@117:2>](<check_1148@117:0>:int,<check_1148@117:1>:int,
                                   <check_1148@117:2>:int)
          
          P[<array_max_1033@78:1>](<array_max_1033@78:0>:int,<array_max_1033@78:1>:int),
          P[<<<array_max_1033@78:2>@81:1>@97:0>](<array_max_1033@78:0>:int,<array_max_1033@78:1>:int,<array_max_1033@78:1>:int,<<array_max_1033@78:3>@113:0>:int),
          P[<<array_max_1033@101:3>@104:0>](<array_max_1033@78:0>:int,var416:int,var312:int),
          ((var416 = (1 + <array_max_1033@78:1>)) &&
           ((<array_max_1033@78:1> < <array_max_1033@78:0>) && (<<array_max_1033@78:3>@113:0> > var312)))
          |- P[<<array_max_1033@78:3>@113:0>](<array_max_1033@78:0>:int,
                                              <array_max_1033@78:1>:int,
                                              <<array_max_1033@78:3>@113:0>:int)
          
          P[<array_max_1033@101:1>](<array_max_1033@101:0>:int,<array_max_1033@101:1>:int),
          ((<array_max_1033@101:1> >= <array_max_1033@101:0>) && (<<array_max_1033@101:3>@104:0> = 0))
          |- P[<<array_max_1033@101:3>@104:0>](<array_max_1033@101:0>:int,
                                               <array_max_1033@101:1>:int,
                                               <<array_max_1033@101:3>@104:0>:int)
          
          P[<array_max_1033@78:1>](<array_max_1033@101:0>:int,var417:int),
          P[<<<array_max_1033@78:2>@81:1>@97:0>](<array_max_1033@101:0>:int,var418:int,var419:int,<f_array_max_1480@99:4>:int),
          (((1 + var419) = <array_max_1033@101:1>) &&
           (((1 + var418) = <array_max_1033@101:1>) &&
            (((1 + var417) = <array_max_1033@101:1>) && (<array_max_1033@101:1> < (1 + <array_max_1033@101:0>)))))
          |- P[<array_max_1033@101:1>](<array_max_1033@101:0>:int,<array_max_1033@101:1>:int)
          
          P[<<make_array_1030@83:2>@95:0>](<array_max_1033@78:0>:int,<<array_max_1033@78:2>@81:0>:int,<<<array_max_1033@78:2>@81:1>@97:0>:int),
          P[<array_max_1033@78:1>](<array_max_1033@78:0>:int,<array_max_1033@78:1>:int), (
          <array_max_1033@78:1> = 0)
          |- P[<<<array_max_1033@78:2>@81:1>@97:0>](<array_max_1033@78:0>:int,
                                                    <array_max_1033@78:1>:int,
                                                    <<array_max_1033@78:2>@81:0>:int,
                                                    <<<array_max_1033@78:2>@81:1>@97:0>:int)
          
          P[<make_array_1030@83:1>](<make_array_1030@83:0>:int,<make_array_1030@83:1>:int),
          ((<<make_array_1030@83:2>@95:0> = <make_array_1030@83:1>) &&
           ((<make_array_1030@83:1> < <make_array_1030@83:0>) && (0 <= <make_array_1030@83:1>)))
          |- P[<<make_array_1030@83:2>@95:0>](<make_array_1030@83:0>:int,
                                              <make_array_1030@83:1>:int,
                                              <<make_array_1030@83:2>@95:0>:int)
          
          P[<<array_max_1033@78:2>@81:0>](<make_array_1030@83:0>:int,var420:int,<make_array_1030@83:1>:int),
          (var420 = 0) |- P[<make_array_1030@83:1>](<make_array_1030@83:0>:int,
                                                    <make_array_1030@83:1>:int)
          
          P[<array_max_1033@78:1>](<array_max_1033@78:0>:int,<array_max_1033@78:1>:int),
          ((<<array_max_1033@78:2>@81:0> = <array_max_1033@78:1>) && (<array_max_1033@78:1> < <array_max_1033@78:0>))
          |- P[<<array_max_1033@78:2>@81:0>](<array_max_1033@78:0>:int,
                                             <array_max_1033@78:1>:int,
                                             <<array_max_1033@78:2>@81:0>:int)
          Yhorn (Wed Sep 25 10:52:05 JST 2013)


(0=0) & (v_sep_fail_1486_sep_128_sep_0($353)) -> 1=0.
(($353-1=0) & (-$354>0)) & (v_sep_make_array_1030_sep_122_sep_1($355,$354)) -> v_sep_fail_1486_sep_128_sep_0($353).
(($356=0) & ($357=0)) & (v_sep_check_1148_sep_117_sep_3_sep_120_sep_0($358,$357,$359,$360)) & (v_sep_array_max_1033_sep_78_sep_3_sep_113_sep_0($358,$356,$359)) -> v_sep_make_array_1030_sep_122_sep_1($358,$360).
(($361-$362<0) & (-$361+$363=0)) & (v_sep_check_1148_sep_117_sep_2($362,$361,$359)) -> v_sep_check_1148_sep_117_sep_3_sep_120_sep_0($362,$361,$359,$363).
(($361=0) & ($364=0)) & (v_sep_array_max_1033_sep_78_sep_3_sep_113_sep_0($362,$364,$359)) -> v_sep_check_1148_sep_117_sep_2($362,$361,$359).
(($365-$366>0) & ($367-$368<0) & (-$367+$369-1=0)) & (v_sep_array_max_1033_sep_101_sep_3_sep_104_sep_0($368,$369,$366)) & (v_sep_array_max_1033_sep_78_sep_2_sep_81_sep_1_sep_97_sep_0($368,$367,$367,$365)) & (v_sep_array_max_1033_sep_78_sep_1($368,$367)) -> v_sep_array_max_1033_sep_78_sep_3_sep_113_sep_0($368,$367,$365).
(($370=0) & ($371-$372>=0)) & (v_sep_array_max_1033_sep_101_sep_1($372,$371)) -> v_sep_array_max_1033_sep_101_sep_3_sep_104_sep_0($372,$371,$370).
(($371-$372-1<0) & (-$371+$373+1=0) & (-$371+$374+1=0) & (-$371+$375+1=0)) & (v_sep_array_max_1033_sep_78_sep_2_sep_81_sep_1_sep_97_sep_0($372,$374,$375,$376)) & (v_sep_array_max_1033_sep_78_sep_1($372,$373)) -> v_sep_array_max_1033_sep_101_sep_1($372,$371).
($367=0) & (v_sep_array_max_1033_sep_78_sep_1($368,$367)) & (v_sep_make_array_1030_sep_83_sep_2_sep_95_sep_0($368,$377,$378)) -> v_sep_array_max_1033_sep_78_sep_2_sep_81_sep_1_sep_97_sep_0($368,$367,$377,$378).
((-$379<=0) & ($379-$380<0) & (-$379+$381=0)) & (v_sep_make_array_1030_sep_83_sep_1($380,$379)) -> v_sep_make_array_1030_sep_83_sep_2_sep_95_sep_0($380,$379,$381).
($382=0) & (v_sep_array_max_1033_sep_78_sep_2_sep_81_sep_0($380,$382,$379)) -> v_sep_make_array_1030_sep_83_sep_1($380,$379).
(($367-$368<0) & (-$367+$377=0)) & (v_sep_array_max_1033_sep_78_sep_1($368,$367)) -> v_sep_array_max_1033_sep_78_sep_2_sep_81_sep_0($368,$367,$377).
$367=0 -> v_sep_array_max_1033_sep_78_sep_1($368,$367).


v_sep_array_max_1033_sep_101_sep_1: X
v_sep_array_max_1033_sep_101_sep_3_sep_104_sep_0: X
v_sep_array_max_1033_sep_78_sep_1: X
v_sep_array_max_1033_sep_78_sep_2_sep_81_sep_0: X
v_sep_array_max_1033_sep_78_sep_2_sep_81_sep_1_sep_97_sep_0: X
v_sep_array_max_1033_sep_78_sep_3_sep_113_sep_0: X
v_sep_check_1148_sep_117_sep_2: X
v_sep_check_1148_sep_117_sep_3_sep_120_sep_0: X
v_sep_fail_1486_sep_128_sep_0: X
v_sep_make_array_1030_sep_122_sep_1: X
v_sep_make_array_1030_sep_83_sep_1: X
v_sep_make_array_1030_sep_83_sep_2_sep_95_sep_0: X
..................
v_sep_array_max_1033_sep_101_sep_1: X
v_sep_array_max_1033_sep_101_sep_3_sep_104_sep_0: X
v_sep_array_max_1033_sep_78_sep_1: X
v_sep_array_max_1033_sep_78_sep_2_sep_81_sep_0: X
v_sep_array_max_1033_sep_78_sep_2_sep_81_sep_1_sep_97_sep_0: X
v_sep_array_max_1033_sep_78_sep_3_sep_113_sep_0: X
v_sep_check_1148_sep_117_sep_2: X
v_sep_check_1148_sep_117_sep_3_sep_120_sep_0: X
v_sep_fail_1486_sep_128_sep_0: X
v_sep_make_array_1030_sep_122_sep_1: X
v_sep_make_array_1030_sep_83_sep_1: X
v_sep_make_array_1030_sep_83_sep_2_sep_95_sep_0: X
...
v_sep_array_max_1033_sep_101_sep_1: X
v_sep_array_max_1033_sep_101_sep_3_sep_104_sep_0: X
v_sep_array_max_1033_sep_78_sep_1: X
v_sep_array_max_1033_sep_78_sep_2_sep_81_sep_0: X
v_sep_array_max_1033_sep_78_sep_2_sep_81_sep_1_sep_97_sep_0: X
v_sep_array_max_1033_sep_78_sep_3_sep_113_sep_0: X
v_sep_check_1148_sep_117_sep_2: X
v_sep_check_1148_sep_117_sep_3_sep_120_sep_0: X
v_sep_fail_1486_sep_128_sep_0: X
v_sep_make_array_1030_sep_122_sep_1: X
v_sep_make_array_1030_sep_83_sep_1: X
v_sep_make_array_1030_sep_83_sep_2_sep_95_sep_0: X
.....
v_sep_array_max_1033_sep_101_sep_1: X
v_sep_array_max_1033_sep_101_sep_3_sep_104_sep_0: X
v_sep_array_max_1033_sep_78_sep_1: X
v_sep_array_max_1033_sep_78_sep_2_sep_81_sep_0: X
v_sep_array_max_1033_sep_78_sep_2_sep_81_sep_1_sep_97_sep_0: X
v_sep_array_max_1033_sep_78_sep_3_sep_113_sep_0: X
v_sep_check_1148_sep_117_sep_2: X
v_sep_check_1148_sep_117_sep_3_sep_120_sep_0: X
v_sep_fail_1486_sep_128_sep_0: X
v_sep_make_array_1030_sep_122_sep_1: X
v_sep_make_array_1030_sep_83_sep_1: X
v_sep_make_array_1030_sep_83_sep_2_sep_95_sep_0: X
.........
v_sep_array_max_1033_sep_101_sep_1: X
v_sep_array_max_1033_sep_101_sep_3_sep_104_sep_0: X
v_sep_array_max_1033_sep_78_sep_1: X
v_sep_array_max_1033_sep_78_sep_2_sep_81_sep_0: X
v_sep_array_max_1033_sep_78_sep_2_sep_81_sep_1_sep_97_sep_0: X
v_sep_array_max_1033_sep_78_sep_3_sep_113_sep_0: X
v_sep_check_1148_sep_117_sep_2: X
v_sep_check_1148_sep_117_sep_3_sep_120_sep_0: X
v_sep_fail_1486_sep_128_sep_0: X
v_sep_make_array_1030_sep_122_sep_1: X
v_sep_make_array_1030_sep_83_sep_1: X
v_sep_make_array_1030_sep_83_sep_2_sep_95_sep_0: X
.............
v_sep_array_max_1033_sep_101_sep_1: X
v_sep_array_max_1033_sep_101_sep_3_sep_104_sep_0: X
v_sep_array_max_1033_sep_78_sep_1: X
v_sep_array_max_1033_sep_78_sep_2_sep_81_sep_0: X
v_sep_array_max_1033_sep_78_sep_2_sep_81_sep_1_sep_97_sep_0: X
v_sep_array_max_1033_sep_78_sep_3_sep_113_sep_0: X
v_sep_check_1148_sep_117_sep_2: X
v_sep_check_1148_sep_117_sep_3_sep_120_sep_0: X
v_sep_fail_1486_sep_128_sep_0: X
v_sep_make_array_1030_sep_122_sep_1: X
v_sep_make_array_1030_sep_83_sep_1: X
v_sep_make_array_1030_sep_83_sep_2_sep_95_sep_0: X
................
v_sep_array_max_1033_sep_101_sep_1: X
v_sep_array_max_1033_sep_101_sep_3_sep_104_sep_0: X
v_sep_array_max_1033_sep_78_sep_1: X
v_sep_array_max_1033_sep_78_sep_2_sep_81_sep_0: X
v_sep_array_max_1033_sep_78_sep_2_sep_81_sep_1_sep_97_sep_0: X
v_sep_array_max_1033_sep_78_sep_3_sep_113_sep_0: X
v_sep_check_1148_sep_117_sep_2: X
v_sep_check_1148_sep_117_sep_3_sep_120_sep_0: X
v_sep_fail_1486_sep_128_sep_0: X
v_sep_make_array_1030_sep_122_sep_1: X
v_sep_make_array_1030_sep_83_sep_1: X
v_sep_make_array_1030_sep_83_sep_2_sep_95_sep_0: X
.................
v_sep_array_max_1033_sep_101_sep_1: X
v_sep_array_max_1033_sep_101_sep_3_sep_104_sep_0: X
v_sep_array_max_1033_sep_78_sep_1: X
v_sep_array_max_1033_sep_78_sep_2_sep_81_sep_0: X
v_sep_array_max_1033_sep_78_sep_2_sep_81_sep_1_sep_97_sep_0: X
v_sep_array_max_1033_sep_78_sep_3_sep_113_sep_0: X
v_sep_check_1148_sep_117_sep_2: X
v_sep_check_1148_sep_117_sep_3_sep_120_sep_0: X
v_sep_fail_1486_sep_128_sep_0: X
v_sep_make_array_1030_sep_122_sep_1: X
v_sep_make_array_1030_sep_83_sep_1: X
v_sep_make_array_1030_sep_83_sep_2_sep_95_sep_0: X
..................(0=0) & (v_sep_fail_1486_sep_128_sep_0($353)) -> 1=0.
(($353-1=0) & (-$354>0)) & (v_sep_make_array_1030_sep_122_sep_1($355,$354)) -> v_sep_fail_1486_sep_128_sep_0($353).
(($356=0) & ($357=0)) & (v_sep_check_1148_sep_117_sep_3_sep_120_sep_0($358,$357,$359,$360)) & (v_sep_array_max_1033_sep_78_sep_3_sep_113_sep_0($358,$356,$359)) -> v_sep_make_array_1030_sep_122_sep_1($358,$360).
(($361-$362<0) & (-$361+$363=0)) & (v_sep_check_1148_sep_117_sep_2($362,$361,$359)) -> v_sep_check_1148_sep_117_sep_3_sep_120_sep_0($362,$361,$359,$363).
(($361=0) & ($364=0)) & (v_sep_array_max_1033_sep_78_sep_3_sep_113_sep_0($362,$364,$359)) -> v_sep_check_1148_sep_117_sep_2($362,$361,$359).
(($365-$366>0) & ($367-$368<0) & (-$367+$369-1=0)) & (v_sep_array_max_1033_sep_101_sep_3_sep_104_sep_0($368,$369,$366)) & (v_sep_array_max_1033_sep_78_sep_2_sep_81_sep_1_sep_97_sep_0($368,$367,$367,$365)) & (v_sep_array_max_1033_sep_78_sep_1($368,$367)) -> v_sep_array_max_1033_sep_78_sep_3_sep_113_sep_0($368,$367,$365).
(($370=0) & ($371-$372>=0)) & (v_sep_array_max_1033_sep_101_sep_1($372,$371)) -> v_sep_array_max_1033_sep_101_sep_3_sep_104_sep_0($372,$371,$370).
(($371-$372-1<0) & (-$371+$373+1=0) & (-$371+$374+1=0) & (-$371+$375+1=0)) & (v_sep_array_max_1033_sep_78_sep_2_sep_81_sep_1_sep_97_sep_0($372,$374,$375,$376)) & (v_sep_array_max_1033_sep_78_sep_1($372,$373)) -> v_sep_array_max_1033_sep_101_sep_1($372,$371).
($367=0) & (v_sep_array_max_1033_sep_78_sep_1($368,$367)) & (v_sep_make_array_1030_sep_83_sep_2_sep_95_sep_0($368,$377,$378)) -> v_sep_array_max_1033_sep_78_sep_2_sep_81_sep_1_sep_97_sep_0($368,$367,$377,$378).
((-$379<=0) & ($379-$380<0) & (-$379+$381=0)) & (v_sep_make_array_1030_sep_83_sep_1($380,$379)) -> v_sep_make_array_1030_sep_83_sep_2_sep_95_sep_0($380,$379,$381).
($382=0) & (v_sep_array_max_1033_sep_78_sep_2_sep_81_sep_0($380,$382,$379)) -> v_sep_make_array_1030_sep_83_sep_1($380,$379).
(($367-$368<0) & (-$367+$377=0)) & (v_sep_array_max_1033_sep_78_sep_1($368,$367)) -> v_sep_array_max_1033_sep_78_sep_2_sep_81_sep_0($368,$367,$377).
$367=0 -> v_sep_array_max_1033_sep_78_sep_1($368,$367).

           (<array_max_1033@78:1> = 0) |- P[<array_max_1033@78:1>](<array_max_1033@78:0>:int,
                                                                   <array_max_1033@78:1>:int)
        solution:
          P[<array_max_1033@101:1>]($435:int,$437:int) = true
          P[<<array_max_1033@101:3>@104:0>]($414:int,$416:int,$418:int) = true
          P[<array_max_1033@78:1>]($430:int,$432:int) = true
          P[<<array_max_1033@78:2>@81:0>]($452:int,$454:int,$456:int) = true
          P[<<<array_max_1033@78:2>@81:1>@97:0>]($421:int,$423:int,$425:int,$427:int) = true
          P[<<array_max_1033@78:3>@113:0>]($400:int,$402:int,$404:int) = true
          P[<check_1148@117:2>]($407:int,$409:int,$411:int) = true
          P[<<check_1148@117:3>@120:0>]($391:int,$393:int,$395:int,$397:int) = ($393 <= $397)
          P[<fail_1486@128:0>]($383:bool) = false
          P[<make_array_1030@122:1>]($386:int,$388:int) = (0 <= $388)
          P[<make_array_1030@83:1>]($447:int,$449:int) = true
          P[<<make_array_1030@83:2>@95:0>]($440:int,$442:int,$444:int) = true
        
      end HcSolver.solve_ub(170857)[4] (0.074988 sec.)
      begin HcSolver.check_validity(171549)[4]
        input:
          P[<fail_1486@128:0>](<fail_1486@128:0>:bool)|- bot
          
          P[<make_array_1030@122:1>](<k_make_array_u_1182@125:1>:int,<k_make_array_u_1182@125:0>:int),
          ((0 > <k_make_array_u_1182@125:0>) && <fail_1486@128:0>) |- P[<fail_1486@128:0>](
          <fail_1486@128:0>:bool)
          
          P[<<array_max_1033@78:3>@113:0>](<make_array_1030@122:0>:int,0:int,<check_1148@117:2>:int),
          P[<<check_1148@117:3>@120:0>](<make_array_1030@122:0>:int,0:int,<check_1148@117:2>:int,<make_array_1030@122:1>:int)|- P[<make_array_1030@122:1>](
          <make_array_1030@122:0>:int,<make_array_1030@122:1>:int)
          
          P[<check_1148@117:2>](<check_1148@117:0>:int,<check_1148@117:1>:int,<check_1148@117:2>:int),
          ((<check_1148@117:1> < <check_1148@117:0>) && (<<check_1148@117:3>@120:0> = <check_1148@117:1>))
          |- P[<<check_1148@117:3>@120:0>](<check_1148@117:0>:int,<check_1148@117:1>:int,
                                           <check_1148@117:2>:int,<<check_1148@117:3>@120:0>:int)
          
          P[<<array_max_1033@78:3>@113:0>](<check_1148@117:0>:int,0:int,<check_1148@117:2>:int),
          (<check_1148@117:1> = 0)
          |- P[<check_1148@117:2>](<check_1148@117:0>:int,<check_1148@117:1>:int,
                                   <check_1148@117:2>:int)
          
          P[<array_max_1033@78:1>](<array_max_1033@78:0>:int,<array_max_1033@78:1>:int),
          P[<<<array_max_1033@78:2>@81:1>@97:0>](<array_max_1033@78:0>:int,<array_max_1033@78:1>:int,<array_max_1033@78:1>:int,<<array_max_1033@78:3>@113:0>:int),
          P[<<array_max_1033@101:3>@104:0>](<array_max_1033@78:0>:int,(
                                            1 + <array_max_1033@78:1>):int,var312:int),
          ((<<array_max_1033@78:3>@113:0> > var312) && (<array_max_1033@78:1> < <array_max_1033@78:0>))
          |- P[<<array_max_1033@78:3>@113:0>](<array_max_1033@78:0>:int,
                                              <array_max_1033@78:1>:int,
                                              <<array_max_1033@78:3>@113:0>:int)
          
          P[<array_max_1033@101:1>](<array_max_1033@101:0>:int,<array_max_1033@101:1>:int),
          ((<<array_max_1033@101:3>@104:0> = 0) && (<array_max_1033@101:1> >= <array_max_1033@101:0>))
          |- P[<<array_max_1033@101:3>@104:0>](<array_max_1033@101:0>:int,
                                               <array_max_1033@101:1>:int,
                                               <<array_max_1033@101:3>@104:0>:int)
          
          P[<array_max_1033@78:1>](<array_max_1033@101:0>:int,(-1 + <array_max_1033@101:1>):int),
          P[<<<array_max_1033@78:2>@81:1>@97:0>](<array_max_1033@101:0>:int,(
                                                 -1 + <array_max_1033@101:1>):int,(
                                                 -1 + <array_max_1033@101:1>):int,<f_array_max_1480@99:4>:int),
          (<array_max_1033@101:1> < (1 + <array_max_1033@101:0>))
          |- P[<array_max_1033@101:1>](<array_max_1033@101:0>:int,<array_max_1033@101:1>:int)
          
          P[<<make_array_1030@83:2>@95:0>](<array_max_1033@78:0>:int,<<array_max_1033@78:2>@81:0>:int,<<<array_max_1033@78:2>@81:1>@97:0>:int),
          P[<array_max_1033@78:1>](<array_max_1033@78:0>:int,<array_max_1033@78:1>:int), (
          <array_max_1033@78:1> = 0)
          |- P[<<<array_max_1033@78:2>@81:1>@97:0>](<array_max_1033@78:0>:int,
                                                    <array_max_1033@78:1>:int,
                                                    <<array_max_1033@78:2>@81:0>:int,
                                                    <<<array_max_1033@78:2>@81:1>@97:0>:int)
          
          P[<make_array_1030@83:1>](<make_array_1030@83:0>:int,<make_array_1030@83:1>:int),
          ((0 <= <make_array_1030@83:1>) &&
           ((<make_array_1030@83:1> < <make_array_1030@83:0>) &&
            (<<make_array_1030@83:2>@95:0> = <make_array_1030@83:1>)))
          |- P[<<make_array_1030@83:2>@95:0>](<make_array_1030@83:0>:int,
                                              <make_array_1030@83:1>:int,
                                              <<make_array_1030@83:2>@95:0>:int)
          
          P[<<array_max_1033@78:2>@81:0>](<make_array_1030@83:0>:int,0:int,<make_array_1030@83:1>:int)|- P[<make_array_1030@83:1>](
          <make_array_1030@83:0>:int,<make_array_1030@83:1>:int)
          
          P[<array_max_1033@78:1>](<array_max_1033@78:0>:int,<array_max_1033@78:1>:int),
          ((<array_max_1033@78:1> < <array_max_1033@78:0>) && (<<array_max_1033@78:2>@81:0> = <array_max_1033@78:1>))
          |- P[<<array_max_1033@78:2>@81:0>](<array_max_1033@78:0>:int,
                                             <array_max_1033@78:1>:int,
                                             <<array_max_1033@78:2>@81:0>:int)
          
           (<array_max_1033@78:1> = 0) |- P[<array_max_1033@78:1>](<array_max_1033@78:0>:int,
                                                                   <array_max_1033@78:1>:int)
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        
      end HcSolver.check_validity(171549)[4] (0.004999 sec.)
      solution:
        P[<array_max_1033@101:1>]($435:int,$437:int) = true
        P[<<array_max_1033@101:3>@104:0>]($414:int,$416:int,$418:int) = true
        P[<array_max_1033@78:1>]($430:int,$432:int) = true
        P[<<array_max_1033@78:2>@81:0>]($452:int,$454:int,$456:int) = true
        P[<<<array_max_1033@78:2>@81:1>@97:0>]($421:int,$423:int,$425:int,$427:int) = true
        P[<<array_max_1033@78:3>@113:0>]($400:int,$402:int,$404:int) = true
        P[<check_1148@117:2>]($407:int,$409:int,$411:int) = true
        P[<<check_1148@117:3>@120:0>]($391:int,$393:int,$395:int,$397:int) = ($393 <= $397)
        P[<fail_1486@128:0>]($383:bool) = false
        P[<make_array_1030@122:1>]($386:int,$388:int) = (0 <= $388)
        P[<make_array_1030@83:1>]($447:int,$449:int) = true
        P[<<make_array_1030@83:2>@95:0>]($440:int,$442:int,$444:int) = true
    end YhornInterface.solve(170856)[3] (0.080987 sec.)
    
  end RefTypeInfer.infer_etrs(57433)[2] (0.963853 sec.)
  refinement types:
    main_1479: X
    f_1484: v1:int -> X
    main_1044: v1:int -> (v2:unit -> X) -> X
    array_max_1033: v1:int -> v2:int -> (v3:int -> (v4:int -> X) -> X) -> (v7:int -> X) -> X
    make_array_1030: v1:int -> v2:int -> (v3:int -> X) -> X
    k_make_array_u_1182: v1:int -> v2:int -> (v3:int -> X) -> v5:bool -> X
    k_make_array_u_1193: v1:int -> v2:int -> (v3:int -> X) -> v5:unit -> X
    f_array_max_1480: v1:int -> v2:int -> (v3:int -> (v4:int -> X) -> X) -> (v7:int -> X) -> v9:int -> X
    array_max_1033: v1:int -> v2:int -> (v3:int -> (v4:int -> X) -> X) -> (v7:int -> X) -> X
    f_array_max_1481: v1:int -> v2:int -> v3:int -> (v4:int -> X) -> v6:int -> X
    f_main_1483: v1:int -> (v2:unit -> X) -> v4:int -> X
    check_1148: v1:int ->
                v2:int ->
                v3:{v3:int | (0 <= v2)} -> (v4:{v4:int | (0 <= v4)} -> (v5:int -> X) -> X) -> (v8:unit -> X) -> X
    make_array_1030: v1:int -> v2:{v2:int | (0 <= v2)} -> (v3:int -> X) -> X
    k_make_array_u_1182: v1:int -> v2:int -> (v3:int -> X) -> v5:bool -> X
    fail_1486: v1:{v1:bool | false} -> (v2:unit -> X) -> X
    f_1485: var445:int -> var444:unit -> X
    f_check_1482: var456:int ->
                  var455:int ->
                  var454:int -> (var453:int -> (var452:int -> X) -> X) -> (var449:unit -> X) -> var447:int -> X
    fail_1487: var460:bool -> (var459:unit -> X) -> X
    k_check_u_1336: var471:int ->
                    var470:int ->
                    var469:int -> (var468:int -> (var467:int -> X) -> X) -> (var464:unit -> X) -> var462:unit -> X
  abstraction types:
    main_1479: X
    f_1484: v1:int -> X
    main_1044: v1:int -> (v2:unit -> X) -> X
    array_max_1033: var472:int -> var473:int -> (var474:int -> (var475:int -> X) -> X) -> (var478:int -> X) -> X
    make_array_1030: var481:int -> var482:int[var482 -> (0 <= var482)] -> (var483:int -> X) -> X
    k_make_array_u_1182: var486:int -> var487:int -> (var488:int -> X) -> var490:bool -> X
    k_make_array_u_1193: v1:int -> v2:int -> (v3:int -> X) -> v5:unit -> X
    f_array_max_1480: v1:int -> v2:int -> (v3:int -> (v4:int -> X) -> X) -> (v7:int -> X) -> v9:int -> X
    f_array_max_1481: v1:int -> v2:int -> v3:int -> (v4:int -> X) -> v6:int -> X
    f_main_1483: v1:int -> (v2:unit -> X) -> v4:int -> X
    check_1148: v1:int ->
                v2:int ->
                v3:int[v3 -> (0 <= v2)] -> (v4:int[v4 -> (0 <= v4)] -> (v5:int -> X) -> X) -> (v8:unit -> X) -> X
    fail_1486: v1:bool -> (v2:unit -> X) -> X
    f_1485: var445:int -> var444:unit -> X
    f_check_1482: var456:int ->
                  var455:int ->
                  var454:int -> (var453:int -> (var452:int -> X) -> X) -> (var449:unit -> X) -> var447:int -> X
    fail_1487: var460:bool -> (var459:unit -> X) -> X
    k_check_u_1336: var471:int ->
                    var470:int ->
                    var469:int -> (var468:int -> (var467:int -> X) -> X) -> (var464:unit -> X) -> var462:unit -> X
  
end AbsTypeInfer.refine(57432)[1] (0.969852 sec.)
DONE!

Prefix of spurious counter-example::
0; 0; 0; 1; 0; 0; 0; 0; 0; 0

Program with abstraction types (CEGAR-cycle 4)::
Main: main_1479
  main_1479 -> (rand_int f_1484)
  array_max_1033 n_1034 i_1035 a_1036 k_array_max_1226 when (i_1035 >= n_1034) -> (k_array_max_1226 0)
  array_max_1033 n_1034 i_1035 a_1036 k_array_max_1226 when (not (i_1035 >= n_1034)) ->
      (a_1036 i_1035 (f_array_max_1480 i_1035 n_1034 a_1036 k_array_max_1226))
  check_1148 n_1040 i_1041 max_1042 a_1043 k_check_1309 when (i_1041 >= n_1040) -> (k_check_1309 ())
  check_1148 n_1040 i_1041 max_1042 a_1043 k_check_1309 when (not (i_1041 >= n_1040)) ->
      (a_1043 i_1041 (f_check_1482 i_1041 max_1042 n_1040 a_1043 k_check_1309))
  f_1484 x_1454 -> (main_1044 x_1454 (f_1485 x_1454))
  f_1485 x_1454 x_1451 -> end
  f_array_max_1480 i_1035 n_1034 a_1036 k_array_max_1226 x_1229 ->
      (array_max_1033 n_1034 (i_1035 + 1) a_1036 (f_array_max_1481 i_1035 n_1034 x_1229 k_array_max_1226))
  f_array_max_1481 i_1035 n_1034 x_1229 k_array_max_1226 x_1242 when (x_1229 > x_1242) -> (k_array_max_1226 x_1229)
  f_array_max_1481 i_1035 n_1034 x_1229 k_array_max_1226 x_1242 when (
      not (x_1229 > x_1242)) -> (k_array_max_1226 x_1242)
  f_check_1482 i_1041 max_1042 n_1040 a_1043 k_check_1309 x_1315 when (
      x_1315 <= max_1042) -> (k_check_u_1336 i_1041 max_1042 n_1040 a_1043 k_check_1309 ())
  f_check_1482 i_1041 max_1042 n_1040 a_1043 k_check_1309 x_1315 when (
      not (x_1315 <= max_1042)) -> (fail_1487 true (k_check_u_1336 i_1041 max_1042 n_1040 a_1043 k_check_1309))
  f_main_1483 n_1045 k_main_1380 x_1399 -> (check_1148 n_1045 0 x_1399 (make_array_1030 n_1045) k_main_1380)
  fail_1486 b k -> {fail} => (k ())
  fail_1487 b k -> {fail} => (k ())
  k_check_u_1336 i_1041 max_1042 n_1040 a_1043 k_check_1309 x_1312 ->
      (check_1148 n_1040 (i_1041 + 1) max_1042 a_1043 k_check_1309)
  k_make_array_u_1182 i_1032 n_1031 k_make_array_1176 b_1194 when b_1194 ->
      (k_make_array_u_1193 i_1032 n_1031 k_make_array_1176 ())
  k_make_array_u_1182 i_1032 n_1031 k_make_array_1176 b_1194 when (not b_1194) ->
      (fail_1486 true (k_make_array_u_1193 i_1032 n_1031 k_make_array_1176))
  k_make_array_u_1193 i_1032 n_1031 k_make_array_1176 x_1179 -> (k_make_array_1176 i_1032)
  main_1044 n_1045 k_main_1380 -> (array_max_1033 n_1045 0 (make_array_1030 n_1045) (f_main_1483 n_1045 k_main_1380))
  make_array_1030 n_1031 i_1032 k_make_array_1176 when (0 <= i_1032) ->
      (k_make_array_u_1182 i_1032 n_1031 k_make_array_1176 (i_1032 < n_1031))
  make_array_1030 n_1031 i_1032 k_make_array_1176 when (not (0 <= i_1032)) ->
      (k_make_array_u_1182 i_1032 n_1031 k_make_array_1176 false)
Types:
  main_1479 : X
  array_max_1033 : (x_1:int ->
                    x_2:int[x_2 <= 0; x_2 >= 0] ->
                    (x_4:int[x_1 >= x_4 + 1; x_4 >= 0] -> (int -> X) -> X) -> (int[x_1 <= 0] -> X) -> X)
  check_1148 : (x_1:int ->
                x_2:int -> int[x_2 >= 0; x_1 <= x_2] -> (x_5:int[x_5 >= 0] -> (int -> X) -> X) -> (unit -> X) -> X)
  fail_1486 : (x_1:bool[x_1] -> (unit -> X) -> X)
  fail_1487 : (x_1:bool[x_1] -> (unit -> X) -> X)
  make_array_1030 : (x_1:int -> x_2:int[x_1 >= x_2 + 1; x_2 >= 0] -> (int -> X) -> X)
  
(4-1) Abstracting ... DONE!

(4-2) Checking HORS ... DONE!

Error trace::
  main_1479 ... --> 
  f_1484 ... --> 
  main_1044 ... --> 
  array_max_1033 [2/2] ... --> 
  make_array_1030 [1/2] ... --> 
  k_make_array_u_1182 [1/2] ... --> 
  k_make_array_u_1193 ... --> 
  f_array_max_1480 ... --> 
  array_max_1033 [1/2] ... --> 
  f_array_max_1481 [1/2] ... --> 
  f_main_1483 ... --> 
  check_1148 [2/2] ... --> 
  make_array_1030 [1/2] ... --> 
  k_make_array_u_1182 [2/2] ... --> 
  fail_1486 ... --> fail -->
  ERROR!

Spurious counter-example::
  0; 0; 0; 1; 0; 0; 0; 0; 0; 0; 0; 1; 0; 1; 0

(4-3) Checking counter-example ... DONE!

(4-4) Discovering predicates ... 
begin AbsTypeInfer.refine(174667)[1]
  program:
    main_1479  | true = ((Random.int 0) f_1484)
    array_max_1033 n_1034 i_1035 a_1036 k_array_max_1226 | (i_1035 >= n_1034) = (
    k_array_max_1226 0)
    array_max_1033 n_1034 i_1035 a_1036 k_array_max_1226 | (not (i_1035 >= n_1034)) = (
    a_1036 i_1035
           (f_array_max_1480 i_1035
                             n_1034
                             a_1036
                             k_array_max_1226))
    check_1148 n_1040 i_1041 max_1042 a_1043 k_check_1309 | (i_1041 >= n_1040) = (
    k_check_1309 ())
    check_1148 n_1040 i_1041 max_1042 a_1043 k_check_1309 | (not (i_1041 >= n_1040)) = (
    a_1043 i_1041
           (f_check_1482 i_1041
                         max_1042
                         n_1040
                         a_1043
                         k_check_1309))
    f_1484 x_1454 | true = (main_1044 x_1454
                                      (f_1485 x_1454))
    f_1485 x_1454 x_1451 | true = end
    f_array_max_1480 i_1035 n_1034 a_1036 k_array_max_1226 x_1229 | true = (
    array_max_1033 n_1034
                   (i_1035 + 1)
                   a_1036
                   (f_array_max_1481 i_1035
                                     n_1034
                                     x_1229
                                     k_array_max_1226))
    f_array_max_1481 i_1035 n_1034 x_1229 k_array_max_1226 x_1242 | (
    x_1229 > x_1242) = (k_array_max_1226 x_1229)
    f_array_max_1481 i_1035 n_1034 x_1229 k_array_max_1226 x_1242 | (
    not (x_1229 > x_1242)) = (k_array_max_1226 x_1242)
    f_check_1482 i_1041 max_1042 n_1040 a_1043 k_check_1309 x_1315 | (
    x_1315 <= max_1042) = (k_check_u_1336 i_1041
                                          max_1042
                                          n_1040
                                          a_1043
                                          k_check_1309
                                          ())
    f_check_1482 i_1041 max_1042 n_1040 a_1043 k_check_1309 x_1315 | (
    not (x_1315 <= max_1042)) = (fail_1487 true
                                           (k_check_u_1336 i_1041
                                                           max_1042
                                                           n_1040
                                                           a_1043
                                                           k_check_1309))
    f_main_1483 n_1045 k_main_1380 x_1399 | true = (check_1148 n_1045
                                                               0
                                                               x_1399
                                                               (make_array_1030 n_1045)
                                                               k_main_1380)
    fail_1486 b k | true = (fail ())
    fail_1487 b k | true = (fail ())
    k_check_u_1336 i_1041 max_1042 n_1040 a_1043 k_check_1309 x_1312 | true = (
    check_1148 n_1040
               (i_1041 + 1)
               max_1042
               a_1043
               k_check_1309)
    k_make_array_u_1182 i_1032 n_1031 k_make_array_1176 b_1194 | b_1194 = (
    k_make_array_u_1193 i_1032
                        n_1031
                        k_make_array_1176
                        ())
    k_make_array_u_1182 i_1032 n_1031 k_make_array_1176 b_1194 | (not b_1194) = (
    fail_1486 true
              (k_make_array_u_1193 i_1032
                                   n_1031
                                   k_make_array_1176))
    k_make_array_u_1193 i_1032 n_1031 k_make_array_1176 x_1179 | true = (
    k_make_array_1176 i_1032)
    main_1044 n_1045 k_main_1380 | true = (array_max_1033
                                             n_1045
                                             0
                                             (make_array_1030 n_1045)
                                             (f_main_1483 n_1045
                                                          k_main_1380))
    make_array_1030 n_1031 i_1032 k_make_array_1176 | (0 <= i_1032) = (
    k_make_array_u_1182 i_1032
                        n_1031
                        k_make_array_1176
                        (i_1032 < n_1031))
    make_array_1030 n_1031 i_1032 k_make_array_1176 | (not (0 <= i_1032)) = (
    k_make_array_u_1182 i_1032
                        n_1031
                        k_make_array_1176
                        false)
    main_1479:X
    array_max_1033:int -> int -> (int -> (int -> X) -> X) -> (int -> X) -> X
    check_1148:int -> int -> int -> (int -> (int -> X) -> X) -> (unit -> X) -> X
    f_1484:int -> X
    f_1485:int -> unit -> X
    f_array_max_1480:int -> int -> (int -> (int -> X) -> X) -> (int -> X) -> int -> X
    f_array_max_1481:int -> int -> int -> (int -> X) -> int -> X
    f_check_1482:int -> int -> int -> (int -> (int -> X) -> X) -> (unit -> X) -> int -> X
    f_main_1483:int -> (unit -> X) -> int -> X
    fail_1486:bool -> (unit -> X) -> X
    fail_1487:bool -> (unit -> X) -> X
    k_check_u_1336:int -> int -> int -> (int -> (int -> X) -> X) -> (unit -> X) -> unit -> X
    k_make_array_u_1182:int -> int -> (int -> X) -> bool -> X
    k_make_array_u_1193:int -> int -> (int -> X) -> unit -> X
    main_1044:int -> (unit -> X) -> X
    make_array_1030:int -> int -> (int -> X) -> X
  inlined functions: f_1484,f_1485,f_array_max_1480,f_array_max_1481,f_check_1482,f_main_1483,k_check_u_1336,k_make_array_u_1182,k_make_array_u_1193,main_1044
  counterexample: 0:0:0:1:0:0:0:0:0:0:0:1:0:1:0
  error traces:
    [true.nop(<f_1484@134:0> = var492)
     [true.(<main_1044@136:0> = <f_1484@134:0>)
      [true.((<array_max_1033@138:0> = <main_1044@136:0>) && (<array_max_1033@138:1> = 0))
       [(not (<array_max_1033@138:1> >= <array_max_1033@138:0>)).
        (<<array_max_1033@138:2>@141:0> = <array_max_1033@138:1>)
        [true.
         ((<make_array_1030@143:0> = <main_1044@136:0>) && (<make_array_1030@143:1> = <<array_max_1033@138:2>@141:0>))
         [(0 <= <make_array_1030@143:1>).
          ((<k_make_array_u_1182@146:0> = <make_array_1030@143:1>) &&
           ((<k_make_array_u_1182@146:1> = <make_array_1030@143:0>) &&
            (<k_make_array_u_1182@146:3> = (<make_array_1030@143:1> < <make_array_1030@143:0>))))
          [<k_make_array_u_1182@146:3>.
           ((<k_make_array_u_1193@149:0> = <k_make_array_u_1182@146:0>) &&
            ((<k_make_array_u_1193@149:1> = <k_make_array_u_1182@146:1>) && (<k_make_array_u_1193@149:3> = ())))
           [true.(<<k_make_array_u_1193@149:2>@151:0> = <k_make_array_u_1193@149:0>)
            [true.(<<k_make_array_u_1182@146:2>@153:0> = <<k_make_array_u_1193@149:2>@151:0>)
             [true.(<<make_array_1030@143:2>@155:0> = <<k_make_array_u_1182@146:2>@153:0>)
              [true.(<<<array_max_1033@138:2>@141:1>@157:0> = <<make_array_1030@143:2>@155:0>)
               [true.
                ((<f_array_max_1480@159:0> = <array_max_1033@138:1>) &&
                 ((<f_array_max_1480@159:1> = <array_max_1033@138:0>) &&
                  (<f_array_max_1480@159:4> = <<<array_max_1033@138:2>@141:1>@157:0>)))
                [true.
                 ((<array_max_1033@161:0> = <f_array_max_1480@159:1>) &&
                  (<array_max_1033@161:1> = (<f_array_max_1480@159:0> + 1)))
                 [(<array_max_1033@161:1> >= <array_max_1033@161:0>).(
                  <<array_max_1033@161:3>@164:0> = 0)
                  [true.
                   ((<f_array_max_1481@166:0> = <f_array_max_1480@159:0>) &&
                    ((<f_array_max_1481@166:1> = <f_array_max_1480@159:1>) &&
                     ((<f_array_max_1481@166:2> = <f_array_max_1480@159:4>) &&
                      (<f_array_max_1481@166:4> = <<array_max_1033@161:3>@164:0>))))
                   [(<f_array_max_1481@166:2> > <f_array_max_1481@166:4>).
                    (<<f_array_max_1481@166:3>@169:0> = <f_array_max_1481@166:2>)
                    [true.(<<f_array_max_1480@159:3>@171:0> = <<f_array_max_1481@166:3>@169:0>)
                     [true.(<<array_max_1033@138:3>@173:0> = <<f_array_max_1480@159:3>@171:0>)
                      [true.
                       ((<f_main_1483@175:0> = <main_1044@136:0>) &&
                        (<f_main_1483@175:2> = <<array_max_1033@138:3>@173:0>))
                       [true.
                        ((<check_1148@177:0> = <f_main_1483@175:0>) &&
                         ((<check_1148@177:1> = 0) && (<check_1148@177:2> = <f_main_1483@175:2>)))
                        [(not (<check_1148@177:1> >= <check_1148@177:0>)).
                         (<<check_1148@177:3>@180:0> = <check_1148@177:1>)
                         [true.
                          ((<make_array_1030@182:0> = <f_main_1483@175:0>) &&
                           (<make_array_1030@182:1> = <<check_1148@177:3>@180:0>))
                          [(0 <= <make_array_1030@182:1>).
                           ((<k_make_array_u_1182@185:0> = <make_array_1030@182:1>) &&
                            ((<k_make_array_u_1182@185:1> = <make_array_1030@182:0>) &&
                             (<k_make_array_u_1182@185:3> = (<make_array_1030@182:1> < <make_array_1030@182:0>))))
                           [(not <k_make_array_u_1182@185:3>).(<fail_1486@188:0> = true)[true.error
  begin RefTypeInfer.infer_etrs(174668)[2]
    horn clauses:
      P[<fail_1486@188:0>](<fail_1486@188:0>:bool)|- bot
      
      P[<k_make_array_u_1182@185:3>](<k_make_array_u_1182@185:0>:int,<k_make_array_u_1182@185:1>:int,false:bool),
      <fail_1486@188:0> |- P[<fail_1486@188:0>](<fail_1486@188:0>:bool)
      
      P[<make_array_1030@182:1>](<k_make_array_u_1182@185:1>:int,<k_make_array_u_1182@185:0>:int),
      ((0 <= <k_make_array_u_1182@185:0>) &&
       (<k_make_array_u_1182@185:3> = (<k_make_array_u_1182@185:0> < <k_make_array_u_1182@185:1>)))
      |- P[<k_make_array_u_1182@185:3>](<k_make_array_u_1182@185:0>:int,
                                        <k_make_array_u_1182@185:1>:int,
                                        <k_make_array_u_1182@185:3>:bool)
      
      P[<f_main_1483@175:2>](<make_array_1030@182:0>:int,<check_1148@177:2>:int),
      P[<<check_1148@177:3>@180:0>](<make_array_1030@182:0>:int,0:int,<check_1148@177:2>:int,<make_array_1030@182:1>:int)|- P[<make_array_1030@182:1>](
      <make_array_1030@182:0>:int,<make_array_1030@182:1>:int)
      
      P[<check_1148@177:2>](<check_1148@177:0>:int,<check_1148@177:1>:int,<check_1148@177:2>:int),
      ((<check_1148@177:1> < <check_1148@177:0>) && (<<check_1148@177:3>@180:0> = <check_1148@177:1>))
      |- P[<<check_1148@177:3>@180:0>](<check_1148@177:0>:int,<check_1148@177:1>:int,
                                       <check_1148@177:2>:int,<<check_1148@177:3>@180:0>:int)
      
      P[<f_main_1483@175:2>](<check_1148@177:0>:int,<check_1148@177:2>:int), (
      <check_1148@177:1> = 0)
      |- P[<check_1148@177:2>](<check_1148@177:0>:int,<check_1148@177:1>:int,
                               <check_1148@177:2>:int)
      
      P[<main_1044@136:0>](<f_main_1483@175:0>:int),
      P[<<array_max_1033@138:3>@173:0>](<f_main_1483@175:0>:int,0:int,<f_main_1483@175:2>:int)|- P[<f_main_1483@175:2>](
      <f_main_1483@175:0>:int,<f_main_1483@175:2>:int)
      
      P[<array_max_1033@138:1>](<array_max_1033@138:0>:int,<array_max_1033@138:1>:int),
      P[<<f_array_max_1480@159:3>@171:0>](<array_max_1033@138:1>:int,<array_max_1033@138:0>:int,<<array_max_1033@138:3>@173:0>:int),
      (<array_max_1033@138:1> < <array_max_1033@138:0>)
      |- P[<<array_max_1033@138:3>@173:0>](<array_max_1033@138:0>:int,
                                           <array_max_1033@138:1>:int,
                                           <<array_max_1033@138:3>@173:0>:int)
      
      P[<f_array_max_1480@159:4>](<f_array_max_1480@159:0>:int,<f_array_max_1480@159:1>:int,<f_array_max_1481@166:2>:int),
      P[<<f_array_max_1481@166:3>@169:0>](<f_array_max_1480@159:0>:int,<f_array_max_1480@159:1>:int,<f_array_max_1481@166:2>:int,<<f_array_max_1480@159:3>@171:0>:int)|- P[<<f_array_max_1480@159:3>@171:0>](
      <f_array_max_1480@159:0>:int,<f_array_max_1480@159:1>:int,<<f_array_max_1480@159:3>@171:0>:int)
      
      P[<f_array_max_1481@166:4>](<f_array_max_1481@166:0>:int,<f_array_max_1481@166:1>:int,<f_array_max_1481@166:2>:int,<f_array_max_1481@166:4>:int),
      ((<f_array_max_1481@166:2> > <f_array_max_1481@166:4>) &&
       (<<f_array_max_1481@166:3>@169:0> = <f_array_max_1481@166:2>))
      |- P[<<f_array_max_1481@166:3>@169:0>](<f_array_max_1481@166:0>:int,
                                             <f_array_max_1481@166:1>:int,
                                             <f_array_max_1481@166:2>:int,
                                             <<f_array_max_1481@166:3>@169:0>:int)
      
      P[<f_array_max_1480@159:4>](<f_array_max_1481@166:0>:int,<f_array_max_1481@166:1>:int,<f_array_max_1481@166:2>:int),
      P[<<array_max_1033@161:3>@164:0>](<f_array_max_1481@166:1>:int,(
                                        1 + <f_array_max_1481@166:0>):int,<f_array_max_1481@166:4>:int)|- P[<f_array_max_1481@166:4>](
      <f_array_max_1481@166:0>:int,<f_array_max_1481@166:1>:int,<f_array_max_1481@166:2>:int,
      <f_array_max_1481@166:4>:int)
      
      P[<array_max_1033@161:1>](<array_max_1033@161:0>:int,<array_max_1033@161:1>:int),
      ((<<array_max_1033@161:3>@164:0> = 0) && (<array_max_1033@161:1> >= <array_max_1033@161:0>))
      |- P[<<array_max_1033@161:3>@164:0>](<array_max_1033@161:0>:int,
                                           <array_max_1033@161:1>:int,
                                           <<array_max_1033@161:3>@164:0>:int)
      
      P[<f_array_max_1480@159:4>]((-1 + <array_max_1033@161:1>):int,<array_max_1033@161:0>:int,<f_array_max_1480@159:4>:int)|- P[<array_max_1033@161:1>](
      <array_max_1033@161:0>:int,<array_max_1033@161:1>:int)
      
      P[<array_max_1033@138:1>](<f_array_max_1480@159:1>:int,<f_array_max_1480@159:0>:int),
      P[<<<array_max_1033@138:2>@141:1>@157:0>](<f_array_max_1480@159:1>:int,<f_array_max_1480@159:0>:int,<f_array_max_1480@159:0>:int,<f_array_max_1480@159:4>:int),
      (<f_array_max_1480@159:0> < <f_array_max_1480@159:1>)
      |- P[<f_array_max_1480@159:4>](<f_array_max_1480@159:0>:int,<f_array_max_1480@159:1>:int,
                                     <f_array_max_1480@159:4>:int)
      
      P[<main_1044@136:0>](<array_max_1033@138:0>:int),
      P[<<make_array_1030@143:2>@155:0>](<array_max_1033@138:0>:int,<<array_max_1033@138:2>@141:0>:int,<<<array_max_1033@138:2>@141:1>@157:0>:int),
      P[<array_max_1033@138:1>](<array_max_1033@138:0>:int,<array_max_1033@138:1>:int), (
      <array_max_1033@138:1> = 0)
      |- P[<<<array_max_1033@138:2>@141:1>@157:0>](<array_max_1033@138:0>:int,
                                                   <array_max_1033@138:1>:int,
                                                   <<array_max_1033@138:2>@141:0>:int,
                                                   <<<array_max_1033@138:2>@141:1>@157:0>:int)
      
      P[<make_array_1030@143:1>](<make_array_1030@143:0>:int,<make_array_1030@143:1>:int),
      P[<<k_make_array_u_1182@146:2>@153:0>](<make_array_1030@143:1>:int,<make_array_1030@143:0>:int,<<make_array_1030@143:2>@155:0>:int),
      (0 <= <make_array_1030@143:1>)
      |- P[<<make_array_1030@143:2>@155:0>](<make_array_1030@143:0>:int,
                                            <make_array_1030@143:1>:int,
                                            <<make_array_1030@143:2>@155:0>:int)
      
      P[<k_make_array_u_1182@146:3>](<k_make_array_u_1182@146:0>:int,<k_make_array_u_1182@146:1>:int,true:bool),
      P[<<k_make_array_u_1193@149:2>@151:0>](<k_make_array_u_1182@146:0>:int,<k_make_array_u_1182@146:1>:int,<<k_make_array_u_1182@146:2>@153:0>:int)|- P[<<k_make_array_u_1182@146:2>@153:0>](
      <k_make_array_u_1182@146:0>:int,<k_make_array_u_1182@146:1>:int,
      <<k_make_array_u_1182@146:2>@153:0>:int)
      
      P[<k_make_array_u_1193@149:3>](<k_make_array_u_1193@149:0>:int,<k_make_array_u_1193@149:1>:int,<k_make_array_u_1193@149:3>:unit),
      (<<k_make_array_u_1193@149:2>@151:0> = <k_make_array_u_1193@149:0>)
      |- P[<<k_make_array_u_1193@149:2>@151:0>](<k_make_array_u_1193@149:0>:int,
                                                <k_make_array_u_1193@149:1>:int,
                                                <<k_make_array_u_1193@149:2>@151:0>:int)
      
      P[<k_make_array_u_1182@146:3>](<k_make_array_u_1193@149:0>:int,<k_make_array_u_1193@149:1>:int,true:bool)|- P[<k_make_array_u_1193@149:3>](
      <k_make_array_u_1193@149:0>:int,<k_make_array_u_1193@149:1>:int,
      <k_make_array_u_1193@149:3>:unit)
      
      P[<make_array_1030@143:1>](<k_make_array_u_1182@146:1>:int,<k_make_array_u_1182@146:0>:int),
      ((0 <= <k_make_array_u_1182@146:0>) &&
       (<k_make_array_u_1182@146:3> = (<k_make_array_u_1182@146:0> < <k_make_array_u_1182@146:1>)))
      |- P[<k_make_array_u_1182@146:3>](<k_make_array_u_1182@146:0>:int,
                                        <k_make_array_u_1182@146:1>:int,
                                        <k_make_array_u_1182@146:3>:bool)
      
      P[<main_1044@136:0>](<make_array_1030@143:0>:int),
      P[<<array_max_1033@138:2>@141:0>](<make_array_1030@143:0>:int,0:int,<make_array_1030@143:1>:int)|- P[<make_array_1030@143:1>](
      <make_array_1030@143:0>:int,<make_array_1030@143:1>:int)
      
      P[<array_max_1033@138:1>](<array_max_1033@138:0>:int,<array_max_1033@138:1>:int),
      ((<array_max_1033@138:1> < <array_max_1033@138:0>) && (<<array_max_1033@138:2>@141:0> = <array_max_1033@138:1>))
      |- P[<<array_max_1033@138:2>@141:0>](<array_max_1033@138:0>:int,
                                           <array_max_1033@138:1>:int,
                                           <<array_max_1033@138:2>@141:0>:int)
      
      P[<main_1044@136:0>](<array_max_1033@138:0>:int), (<array_max_1033@138:1> = 0)
      |- P[<array_max_1033@138:1>](<array_max_1033@138:0>:int,<array_max_1033@138:1>:int)
      
      P[<f_1484@134:0>](<main_1044@136:0>:int)|- P[<main_1044@136:0>](<main_1044@136:0>:int)
      
      |- P[<f_1484@134:0>](<f_1484@134:0>:int)
    call trees:
      <main_1479@131>
        <f_1484@134>
          <main_1044@136>
            <array_max_1033@138>
            </<array_max_1033@138:2>@141>
            <make_array_1030@143>
              <k_make_array_u_1182@146>
                <k_make_array_u_1193@149>
                </<k_make_array_u_1193@149:2>@151>
              </<k_make_array_u_1182@146:2>@153>
            </<make_array_1030@143:2>@155>
            <<<array_max_1033@138:2>@141:1>@157>
              <f_array_max_1480@159>
                <array_max_1033@161>
                </<array_max_1033@161:3>@164>
                <f_array_max_1481@166>
                </<f_array_max_1481@166:3>@169>
              </<f_array_max_1480@159:3>@171>
            </<array_max_1033@138:3>@173>
            <f_main_1483@175>
              <check_1148@177>
              </<check_1148@177:3>@180>
              <make_array_1030@182>
                <k_make_array_u_1182@185>
                  <fail_1486@188>
    inlined horn clauses:
      P[<fail_1486@188:0>](<fail_1486@188:0>:bool)|- bot
      
      P[<make_array_1030@182:1>](<k_make_array_u_1182@185:1>:int,<k_make_array_u_1182@185:0>:int),
      ((0 <= <k_make_array_u_1182@185:0>) &&
       ((<k_make_array_u_1182@185:0> >= <k_make_array_u_1182@185:1>) && <fail_1486@188:0>))
      |- P[<fail_1486@188:0>](<fail_1486@188:0>:bool)
      
      P[<<array_max_1033@138:3>@173:0>](<make_array_1030@182:0>:int,0:int,<check_1148@177:2>:int),
      P[<<check_1148@177:3>@180:0>](<make_array_1030@182:0>:int,0:int,<check_1148@177:2>:int,<make_array_1030@182:1>:int)|- P[<make_array_1030@182:1>](
      <make_array_1030@182:0>:int,<make_array_1030@182:1>:int)
      
      P[<check_1148@177:2>](<check_1148@177:0>:int,<check_1148@177:1>:int,<check_1148@177:2>:int),
      ((<check_1148@177:1> < <check_1148@177:0>) && (<<check_1148@177:3>@180:0> = <check_1148@177:1>))
      |- P[<<check_1148@177:3>@180:0>](<check_1148@177:0>:int,<check_1148@177:1>:int,
                                       <check_1148@177:2>:int,<<check_1148@177:3>@180:0>:int)
      
      P[<<array_max_1033@138:3>@173:0>](<check_1148@177:0>:int,0:int,<check_1148@177:2>:int), (
      <check_1148@177:1> = 0)
      |- P[<check_1148@177:2>](<check_1148@177:0>:int,<check_1148@177:1>:int,
                               <check_1148@177:2>:int)
      
      P[<array_max_1033@138:1>](<array_max_1033@138:0>:int,<array_max_1033@138:1>:int),
      P[<<<array_max_1033@138:2>@141:1>@157:0>](<array_max_1033@138:0>:int,<array_max_1033@138:1>:int,<array_max_1033@138:1>:int,<<array_max_1033@138:3>@173:0>:int),
      P[<<array_max_1033@161:3>@164:0>](<array_max_1033@138:0>:int,(1 + <array_max_1033@138:1>):int,var494:int),
      ((<<array_max_1033@138:3>@173:0> > var494) && (<array_max_1033@138:1> < <array_max_1033@138:0>))
      |- P[<<array_max_1033@138:3>@173:0>](<array_max_1033@138:0>:int,
                                           <array_max_1033@138:1>:int,
                                           <<array_max_1033@138:3>@173:0>:int)
      
      P[<array_max_1033@161:1>](<array_max_1033@161:0>:int,<array_max_1033@161:1>:int),
      ((<<array_max_1033@161:3>@164:0> = 0) && (<array_max_1033@161:1> >= <array_max_1033@161:0>))
      |- P[<<array_max_1033@161:3>@164:0>](<array_max_1033@161:0>:int,
                                           <array_max_1033@161:1>:int,
                                           <<array_max_1033@161:3>@164:0>:int)
      
      P[<array_max_1033@138:1>](<array_max_1033@161:0>:int,(-1 + <array_max_1033@161:1>):int),
      P[<<<array_max_1033@138:2>@141:1>@157:0>](<array_max_1033@161:0>:int,(
                                                -1 + <array_max_1033@161:1>):int,(
                                                -1 + <array_max_1033@161:1>):int,<f_array_max_1480@159:4>:int),
      (<array_max_1033@161:1> < (1 + <array_max_1033@161:0>))
      |- P[<array_max_1033@161:1>](<array_max_1033@161:0>:int,<array_max_1033@161:1>:int)
      
      P[<<make_array_1030@143:2>@155:0>](<array_max_1033@138:0>:int,<<array_max_1033@138:2>@141:0>:int,<<<array_max_1033@138:2>@141:1>@157:0>:int),
      P[<array_max_1033@138:1>](<array_max_1033@138:0>:int,<array_max_1033@138:1>:int), (
      <array_max_1033@138:1> = 0)
      |- P[<<<array_max_1033@138:2>@141:1>@157:0>](<array_max_1033@138:0>:int,
                                                   <array_max_1033@138:1>:int,
                                                   <<array_max_1033@138:2>@141:0>:int,
                                                   <<<array_max_1033@138:2>@141:1>@157:0>:int)
      
      P[<make_array_1030@143:1>](<make_array_1030@143:0>:int,<make_array_1030@143:1>:int),
      ((0 <= <make_array_1030@143:1>) &&
       ((<make_array_1030@143:1> < <make_array_1030@143:0>) &&
        (<<make_array_1030@143:2>@155:0> = <make_array_1030@143:1>)))
      |- P[<<make_array_1030@143:2>@155:0>](<make_array_1030@143:0>:int,
                                            <make_array_1030@143:1>:int,
                                            <<make_array_1030@143:2>@155:0>:int)
      
      P[<<array_max_1033@138:2>@141:0>](<make_array_1030@143:0>:int,0:int,<make_array_1030@143:1>:int)|- P[<make_array_1030@143:1>](
      <make_array_1030@143:0>:int,<make_array_1030@143:1>:int)
      
      P[<array_max_1033@138:1>](<array_max_1033@138:0>:int,<array_max_1033@138:1>:int),
      ((<array_max_1033@138:1> < <array_max_1033@138:0>) && (<<array_max_1033@138:2>@141:0> = <array_max_1033@138:1>))
      |- P[<<array_max_1033@138:2>@141:0>](<array_max_1033@138:0>:int,
                                           <array_max_1033@138:1>:int,
                                           <<array_max_1033@138:2>@141:0>:int)
      
       (<array_max_1033@138:1> = 0) |- P[<array_max_1033@138:1>](<array_max_1033@138:0>:int,
                                                                 <array_max_1033@138:1>:int)
    begin ParamSubstInfer.infer(179033)[3]
      
    end ParamSubstInfer.infer(179033)[3] (0.390941 sec.)
    inferred extra parameters:
      
    begin RefTypeInfer.elim_coeffs(179035)[3]
      
    end RefTypeInfer.elim_coeffs(179035)[3] (0.003999 sec.)
    begin GenHcSolver.solve(179774)[3]
      Horn clauses:
        P[<fail_1486@188:0>](<fail_1486@188:0>:bool)|- bot
        
        P[<make_array_1030@182:1>](<k_make_array_u_1182@185:1>:int,<k_make_array_u_1182@185:0>:int),
        ((0 <= <k_make_array_u_1182@185:0>) &&
         ((<k_make_array_u_1182@185:0> >= <k_make_array_u_1182@185:1>) && <fail_1486@188:0>))
        |- P[<fail_1486@188:0>](<fail_1486@188:0>:bool)
        
        P[<<array_max_1033@138:3>@173:0>](<make_array_1030@182:0>:int,0:int,<check_1148@177:2>:int),
        P[<<check_1148@177:3>@180:0>](<make_array_1030@182:0>:int,0:int,<check_1148@177:2>:int,<make_array_1030@182:1>:int)|- P[<make_array_1030@182:1>](
        <make_array_1030@182:0>:int,<make_array_1030@182:1>:int)
        
        P[<check_1148@177:2>](<check_1148@177:0>:int,<check_1148@177:1>:int,<check_1148@177:2>:int),
        ((<check_1148@177:1> < <check_1148@177:0>) && (<<check_1148@177:3>@180:0> = <check_1148@177:1>))
        |- P[<<check_1148@177:3>@180:0>](<check_1148@177:0>:int,<check_1148@177:1>:int,
                                         <check_1148@177:2>:int,<<check_1148@177:3>@180:0>:int)
        
        P[<<array_max_1033@138:3>@173:0>](<check_1148@177:0>:int,0:int,<check_1148@177:2>:int),
        (<check_1148@177:1> = 0)
        |- P[<check_1148@177:2>](<check_1148@177:0>:int,<check_1148@177:1>:int,
                                 <check_1148@177:2>:int)
        
        P[<array_max_1033@138:1>](<array_max_1033@138:0>:int,<array_max_1033@138:1>:int),
        P[<<<array_max_1033@138:2>@141:1>@157:0>](<array_max_1033@138:0>:int,<array_max_1033@138:1>:int,<array_max_1033@138:1>:int,<<array_max_1033@138:3>@173:0>:int),
        P[<<array_max_1033@161:3>@164:0>](<array_max_1033@138:0>:int,(
                                          1 + <array_max_1033@138:1>):int,var494:int),
        ((<<array_max_1033@138:3>@173:0> > var494) && (<array_max_1033@138:1> < <array_max_1033@138:0>))
        |- P[<<array_max_1033@138:3>@173:0>](<array_max_1033@138:0>:int,
                                             <array_max_1033@138:1>:int,
                                             <<array_max_1033@138:3>@173:0>:int)
        
        P[<array_max_1033@161:1>](<array_max_1033@161:0>:int,<array_max_1033@161:1>:int),
        ((<<array_max_1033@161:3>@164:0> = 0) && (<array_max_1033@161:1> >= <array_max_1033@161:0>))
        |- P[<<array_max_1033@161:3>@164:0>](<array_max_1033@161:0>:int,
                                             <array_max_1033@161:1>:int,
                                             <<array_max_1033@161:3>@164:0>:int)
        
        P[<array_max_1033@138:1>](<array_max_1033@161:0>:int,(-1 + <array_max_1033@161:1>):int),
        P[<<<array_max_1033@138:2>@141:1>@157:0>](<array_max_1033@161:0>:int,(
                                                  -1 + <array_max_1033@161:1>):int,(
                                                  -1 + <array_max_1033@161:1>):int,<f_array_max_1480@159:4>:int),
        (<array_max_1033@161:1> < (1 + <array_max_1033@161:0>))
        |- P[<array_max_1033@161:1>](<array_max_1033@161:0>:int,<array_max_1033@161:1>:int)
        
        P[<<make_array_1030@143:2>@155:0>](<array_max_1033@138:0>:int,<<array_max_1033@138:2>@141:0>:int,<<<array_max_1033@138:2>@141:1>@157:0>:int),
        P[<array_max_1033@138:1>](<array_max_1033@138:0>:int,<array_max_1033@138:1>:int), (
        <array_max_1033@138:1> = 0)
        |- P[<<<array_max_1033@138:2>@141:1>@157:0>](<array_max_1033@138:0>:int,
                                                     <array_max_1033@138:1>:int,
                                                     <<array_max_1033@138:2>@141:0>:int,
                                                     <<<array_max_1033@138:2>@141:1>@157:0>:int)
        
        P[<make_array_1030@143:1>](<make_array_1030@143:0>:int,<make_array_1030@143:1>:int),
        ((0 <= <make_array_1030@143:1>) &&
         ((<make_array_1030@143:1> < <make_array_1030@143:0>) &&
          (<<make_array_1030@143:2>@155:0> = <make_array_1030@143:1>)))
        |- P[<<make_array_1030@143:2>@155:0>](<make_array_1030@143:0>:int,
                                              <make_array_1030@143:1>:int,
                                              <<make_array_1030@143:2>@155:0>:int)
        
        P[<<array_max_1033@138:2>@141:0>](<make_array_1030@143:0>:int,0:int,<make_array_1030@143:1>:int)|- P[<make_array_1030@143:1>](
        <make_array_1030@143:0>:int,<make_array_1030@143:1>:int)
        
        P[<array_max_1033@138:1>](<array_max_1033@138:0>:int,<array_max_1033@138:1>:int),
        ((<array_max_1033@138:1> < <array_max_1033@138:0>) && (<<array_max_1033@138:2>@141:0> = <array_max_1033@138:1>))
        |- P[<<array_max_1033@138:2>@141:0>](<array_max_1033@138:0>:int,
                                             <array_max_1033@138:1>:int,
                                             <<array_max_1033@138:2>@141:0>:int)
        
         (<array_max_1033@138:1> = 0)
        |- P[<array_max_1033@138:1>](<array_max_1033@138:0>:int,<array_max_1033@138:1>:int)
      lower bounds:
        P[<array_max_1033@138:1>](<array_max_1033@138:0>:int,<array_max_1033@138:1>:int) = (<array_max_1033@138:1> = 0)
        P[<<array_max_1033@138:2>@141:0>](<array_max_1033@138:0>:int,<array_max_1033@138:1>:int,<<array_max_1033@138:2>@141:0>:int) =
        ((<array_max_1033@138:1> = 0) &&
         ((<array_max_1033@138:1> < <array_max_1033@138:0>) &&
          (<<array_max_1033@138:2>@141:0> = <array_max_1033@138:1>)))
        P[<make_array_1030@143:1>](<make_array_1030@143:0>:int,<make_array_1030@143:1>:int) =
        ((<make_array_1030@143:1> = 0) && (0 < <make_array_1030@143:0>))
        P[<<make_array_1030@143:2>@155:0>](<make_array_1030@143:0>:int,<make_array_1030@143:1>:int,<<make_array_1030@143:2>@155:0>:int) =
        ((<make_array_1030@143:1> = 0) &&
         ((<make_array_1030@143:1> < <make_array_1030@143:0>) &&
          ((0 < <make_array_1030@143:0>) && (<<make_array_1030@143:2>@155:0> = <make_array_1030@143:1>))))
        P[<<<array_max_1033@138:2>@141:1>@157:0>](<array_max_1033@138:0>:int,<array_max_1033@138:1>:int,<<array_max_1033@138:2>@141:0>:int,<<<array_max_1033@138:2>@141:1>@157:0>:int) =
        ((<<array_max_1033@138:2>@141:0> = 0) &&
         ((<array_max_1033@138:1> = 0) &&
          ((<<array_max_1033@138:2>@141:0> < <array_max_1033@138:0>) &&
           ((0 < <array_max_1033@138:0>) && (<<<array_max_1033@138:2>@141:1>@157:0> = <<array_max_1033@138:2>@141:0>)))))
        P[<array_max_1033@161:1>](<array_max_1033@161:0>:int,<array_max_1033@161:1>:int) =
        ((<array_max_1033@161:1> = 1) &&
         ((0 < <array_max_1033@161:0>) && (<array_max_1033@161:1> < (1 + <array_max_1033@161:0>))))
        P[<<array_max_1033@161:3>@164:0>](<array_max_1033@161:0>:int,<array_max_1033@161:1>:int,<<array_max_1033@161:3>@164:0>:int) =
        ((<<array_max_1033@161:3>@164:0> = 0) &&
         ((<array_max_1033@161:1> = 1) &&
          ((0 < <array_max_1033@161:0>) && (<array_max_1033@161:1> = <array_max_1033@161:0>))))
        P[<<array_max_1033@138:3>@173:0>](<array_max_1033@138:0>:int,<array_max_1033@138:1>:int,<<array_max_1033@138:3>@173:0>:int) =
        ((<array_max_1033@138:1> = 0) &&
         ((<<array_max_1033@138:3>@173:0> = <array_max_1033@138:1>) &&
          ((0 < <array_max_1033@138:0>) &&
           (((1 + <array_max_1033@138:1>) = <array_max_1033@138:0>) && (<<array_max_1033@138:3>@173:0> > 0)))))
        P[<check_1148@177:2>](<check_1148@177:0>:int,<check_1148@177:1>:int,<check_1148@177:2>:int) = false
        P[<<check_1148@177:3>@180:0>](<check_1148@177:0>:int,<check_1148@177:1>:int,<check_1148@177:2>:int,<<check_1148@177:3>@180:0>:int) =
        false
        P[<make_array_1030@182:1>](<make_array_1030@182:0>:int,<make_array_1030@182:1>:int) = false
        P[<fail_1486@188:0>](<fail_1486@188:0>:bool) = false
      upper bounds:
        P[<make_array_1030@182:1>](var502:int,var503:int) = true
        P[<make_array_1030@143:1>](var496:int,var497:int) = true
      begin GenHcSolver.classify_pids(191478)[4]
        output:
          [<make_array_1030@143:1>;<make_array_1030@182:1>]
      end GenHcSolver.classify_pids(191478)[4] (0.000000 sec.)
      begin ApronInterface.convex_hull_interpolate(191489)[4]
        lb:((<make_array_1030@143:1> = 0) && (0 < <make_array_1030@143:0>))
        nub:false
        lb':((<make_array_1030@143:1> = 0) && (0 < <make_array_1030@143:0>))
        nub':false
        begin InterpProver.interpolate(191490)[5]
          begin InterpProver.interpolate_fresh(191491)[6]
            begin InterpProver.interpolate_log(191492)[7]
              input1: ((<make_array_1030@143:1> = 0) && (0 < <make_array_1030@143:0>))
              input2: false
              begin InterpProver.interpolate_check(191493)[8]
                begin InterpProver.interpolate_simplify(191494)[9]
                  begin InterpProver.interpolate_quick(191526)[10]
                    
                  end InterpProver.interpolate_quick(191526)[10] (0.001000 sec.)
                  
                end InterpProver.interpolate_simplify(191494)[9] (0.001000 sec.)
                
              end InterpProver.interpolate_check(191493)[8] (0.001000 sec.)
              output: true
            end InterpProver.interpolate_log(191492)[7] (0.001000 sec.)
            
          end InterpProver.interpolate_fresh(191491)[6] (0.001000 sec.)
          
        end InterpProver.interpolate(191490)[5] (0.001000 sec.)
        output:
          P[<make_array_1030@143:1>](<make_array_1030@143:0>:int,<make_array_1030@143:1>:int) = true
          P[<make_array_1030@182:1>](<make_array_1030@143:0>:int,<make_array_1030@143:1>:int) = true
      end ApronInterface.convex_hull_interpolate(191489)[4] (0.001000 sec.)
      Horn clauses:
        P[<fail_1486@188:0>](<fail_1486@188:0>:bool)|- bot
        
        P[<make_array_1030@182:1>](<k_make_array_u_1182@185:1>:int,<k_make_array_u_1182@185:0>:int),
        ((0 <= <k_make_array_u_1182@185:0>) &&
         ((<k_make_array_u_1182@185:0> >= <k_make_array_u_1182@185:1>) && <fail_1486@188:0>))
        |- P[<fail_1486@188:0>](<fail_1486@188:0>:bool)
        
        P[<<array_max_1033@138:3>@173:0>](<make_array_1030@182:0>:int,0:int,<check_1148@177:2>:int),
        P[<<check_1148@177:3>@180:0>](<make_array_1030@182:0>:int,0:int,<check_1148@177:2>:int,<make_array_1030@182:1>:int)|- P[<make_array_1030@182:1>](
        <make_array_1030@182:0>:int,<make_array_1030@182:1>:int)
        
        P[<check_1148@177:2>](<check_1148@177:0>:int,<check_1148@177:1>:int,<check_1148@177:2>:int),
        ((<check_1148@177:1> < <check_1148@177:0>) && (<<check_1148@177:3>@180:0> = <check_1148@177:1>))
        |- P[<<check_1148@177:3>@180:0>](<check_1148@177:0>:int,<check_1148@177:1>:int,
                                         <check_1148@177:2>:int,<<check_1148@177:3>@180:0>:int)
        
        P[<<array_max_1033@138:3>@173:0>](<check_1148@177:0>:int,0:int,<check_1148@177:2>:int),
        (<check_1148@177:1> = 0)
        |- P[<check_1148@177:2>](<check_1148@177:0>:int,<check_1148@177:1>:int,
                                 <check_1148@177:2>:int)
        
        P[<array_max_1033@138:1>](<array_max_1033@138:0>:int,<array_max_1033@138:1>:int),
        P[<<<array_max_1033@138:2>@141:1>@157:0>](<array_max_1033@138:0>:int,<array_max_1033@138:1>:int,<array_max_1033@138:1>:int,<<array_max_1033@138:3>@173:0>:int),
        P[<<array_max_1033@161:3>@164:0>](<array_max_1033@138:0>:int,(
                                          1 + <array_max_1033@138:1>):int,var494:int),
        ((<<array_max_1033@138:3>@173:0> > var494) && (<array_max_1033@138:1> < <array_max_1033@138:0>))
        |- P[<<array_max_1033@138:3>@173:0>](<array_max_1033@138:0>:int,
                                             <array_max_1033@138:1>:int,
                                             <<array_max_1033@138:3>@173:0>:int)
        
        P[<array_max_1033@161:1>](<array_max_1033@161:0>:int,<array_max_1033@161:1>:int),
        ((<<array_max_1033@161:3>@164:0> = 0) && (<array_max_1033@161:1> >= <array_max_1033@161:0>))
        |- P[<<array_max_1033@161:3>@164:0>](<array_max_1033@161:0>:int,
                                             <array_max_1033@161:1>:int,
                                             <<array_max_1033@161:3>@164:0>:int)
        
        P[<array_max_1033@138:1>](<array_max_1033@161:0>:int,(-1 + <array_max_1033@161:1>):int),
        P[<<<array_max_1033@138:2>@141:1>@157:0>](<array_max_1033@161:0>:int,(
                                                  -1 + <array_max_1033@161:1>):int,(
                                                  -1 + <array_max_1033@161:1>):int,<f_array_max_1480@159:4>:int),
        (<array_max_1033@161:1> < (1 + <array_max_1033@161:0>))
        |- P[<array_max_1033@161:1>](<array_max_1033@161:0>:int,<array_max_1033@161:1>:int)
        
        P[<<make_array_1030@143:2>@155:0>](<array_max_1033@138:0>:int,<<array_max_1033@138:2>@141:0>:int,<<<array_max_1033@138:2>@141:1>@157:0>:int),
        P[<array_max_1033@138:1>](<array_max_1033@138:0>:int,<array_max_1033@138:1>:int), (
        <array_max_1033@138:1> = 0)
        |- P[<<<array_max_1033@138:2>@141:1>@157:0>](<array_max_1033@138:0>:int,
                                                     <array_max_1033@138:1>:int,
                                                     <<array_max_1033@138:2>@141:0>:int,
                                                     <<<array_max_1033@138:2>@141:1>@157:0>:int)
        
        
        ((0 <= <make_array_1030@143:1>) &&
         ((<make_array_1030@143:1> < <make_array_1030@143:0>) &&
          (<<make_array_1030@143:2>@155:0> = <make_array_1030@143:1>)))
        |- P[<<make_array_1030@143:2>@155:0>](<make_array_1030@143:0>:int,
                                              <make_array_1030@143:1>:int,
                                              <<make_array_1030@143:2>@155:0>:int)
        
        P[<array_max_1033@138:1>](<array_max_1033@138:0>:int,<array_max_1033@138:1>:int),
        ((<array_max_1033@138:1> < <array_max_1033@138:0>) && (<<array_max_1033@138:2>@141:0> = <array_max_1033@138:1>))
        |- P[<<array_max_1033@138:2>@141:0>](<array_max_1033@138:0>:int,
                                             <array_max_1033@138:1>:int,
                                             <<array_max_1033@138:2>@141:0>:int)
        
         (<array_max_1033@138:1> = 0)
        |- P[<array_max_1033@138:1>](<array_max_1033@138:0>:int,<array_max_1033@138:1>:int)
      lower bounds:
        P[<<make_array_1030@143:2>@155:0>](<make_array_1030@143:0>:int,<make_array_1030@143:1>:int,<<make_array_1030@143:2>@155:0>:int) =
        ((0 <= <make_array_1030@143:1>) &&
         ((<make_array_1030@143:1> < <make_array_1030@143:0>) &&
          (<<make_array_1030@143:2>@155:0> = <make_array_1030@143:1>)))
        P[<array_max_1033@138:1>](<array_max_1033@138:0>:int,<array_max_1033@138:1>:int) = (<array_max_1033@138:1> = 0)
        P[<<<array_max_1033@138:2>@141:1>@157:0>](<array_max_1033@138:0>:int,<array_max_1033@138:1>:int,<<array_max_1033@138:2>@141:0>:int,<<<array_max_1033@138:2>@141:1>@157:0>:int) =
        ((<array_max_1033@138:1> = 0) &&
         ((0 <= <<array_max_1033@138:2>@141:0>) &&
          ((<<array_max_1033@138:2>@141:0> < <array_max_1033@138:0>) &&
           (<<<array_max_1033@138:2>@141:1>@157:0> = <<array_max_1033@138:2>@141:0>))))
        P[<<array_max_1033@138:2>@141:0>](<array_max_1033@138:0>:int,<array_max_1033@138:1>:int,<<array_max_1033@138:2>@141:0>:int) =
        ((<array_max_1033@138:1> = 0) &&
         ((<array_max_1033@138:1> < <array_max_1033@138:0>) &&
          (<<array_max_1033@138:2>@141:0> = <array_max_1033@138:1>)))
        P[<array_max_1033@161:1>](<array_max_1033@161:0>:int,<array_max_1033@161:1>:int) =
        ((<array_max_1033@161:1> = 1) && (<array_max_1033@161:1> < (1 + <array_max_1033@161:0>)))
        P[<<array_max_1033@161:3>@164:0>](<array_max_1033@161:0>:int,<array_max_1033@161:1>:int,<<array_max_1033@161:3>@164:0>:int) =
        ((<<array_max_1033@161:3>@164:0> = 0) &&
         ((<array_max_1033@161:1> = 1) && (<array_max_1033@161:1> = <array_max_1033@161:0>)))
        P[<<array_max_1033@138:3>@173:0>](<array_max_1033@138:0>:int,<array_max_1033@138:1>:int,<<array_max_1033@138:3>@173:0>:int) =
        ((<array_max_1033@138:1> = 0) &&
         ((<<array_max_1033@138:3>@173:0> = <array_max_1033@138:1>) &&
          (((1 + <array_max_1033@138:1>) = <array_max_1033@138:0>) && (<<array_max_1033@138:3>@173:0> > 0))))
        P[<check_1148@177:2>](<check_1148@177:0>:int,<check_1148@177:1>:int,<check_1148@177:2>:int) = false
        P[<<check_1148@177:3>@180:0>](<check_1148@177:0>:int,<check_1148@177:1>:int,<check_1148@177:2>:int,<<check_1148@177:3>@180:0>:int) =
        false
        P[<make_array_1030@182:1>](<make_array_1030@182:0>:int,<make_array_1030@182:1>:int) = false
        P[<fail_1486@188:0>](<fail_1486@188:0>:bool) = false
      upper bounds:
        P[<<array_max_1033@138:3>@173:0>](var517:int,var518:int,var519:int) = true
        P[<<array_max_1033@161:3>@164:0>](var511:int,var512:int,var513:int) = true
      begin GenHcSolver.classify_pids(206550)[4]
        output:
          [<<array_max_1033@161:3>@164:0>;<<array_max_1033@138:3>@173:0>]
      end GenHcSolver.classify_pids(206550)[4] (0.000000 sec.)
      begin ApronInterface.convex_hull_interpolate(206561)[4]
        lb:(((<<array_max_1033@161:3>@164:0> = 0) &&
             ((<array_max_1033@161:1> = 1) && (<array_max_1033@161:1> = <array_max_1033@161:0>))) ||
            ((<array_max_1033@161:1> = 0) &&
             ((<<array_max_1033@161:3>@164:0> = <array_max_1033@161:1>) &&
              (((1 + <array_max_1033@161:1>) = <array_max_1033@161:0>) && (<<array_max_1033@161:3>@164:0> > 0)))))
        nub:false
        lb':(((<<array_max_1033@161:3>@164:0> = 0) &&
              ((<array_max_1033@161:1> = 1) && (<array_max_1033@161:1> = <array_max_1033@161:0>))) ||
             ((<array_max_1033@161:1> = 0) &&
              ((<<array_max_1033@161:3>@164:0> = <array_max_1033@161:1>) &&
               (((1 + <array_max_1033@161:1>) = <array_max_1033@161:0>) && (<<array_max_1033@161:3>@164:0> > 0)))))
        nub':false
        begin InterpProver.interpolate(206562)[5]
          begin InterpProver.interpolate_fresh(206563)[6]
            begin InterpProver.interpolate_log(206564)[7]
              input1: (((<<array_max_1033@161:3>@164:0> = 0) &&
                        ((<array_max_1033@161:1> = 1) && (<array_max_1033@161:1> = <array_max_1033@161:0>))) ||
                       ((<array_max_1033@161:1> = 0) &&
                        ((<<array_max_1033@161:3>@164:0> = <array_max_1033@161:1>) &&
                         (((1 + <array_max_1033@161:1>) = <array_max_1033@161:0>) &&
                          (<<array_max_1033@161:3>@164:0> > 0)))))
              input2: false
              begin InterpProver.interpolate_check(206565)[8]
                begin InterpProver.interpolate_simplify(206566)[9]
                  begin InterpProver.interpolate_quick(206723)[10]
                    
                  end InterpProver.interpolate_quick(206723)[10] (0.000000 sec.)
                  
                end InterpProver.interpolate_simplify(206566)[9] (0.001000 sec.)
                
              end InterpProver.interpolate_check(206565)[8] (0.001000 sec.)
              output: true
            end InterpProver.interpolate_log(206564)[7] (0.001000 sec.)
            
          end InterpProver.interpolate_fresh(206563)[6] (0.001000 sec.)
          
        end InterpProver.interpolate(206562)[5] (0.001000 sec.)
        output:
          P[<<array_max_1033@161:3>@164:0>](<array_max_1033@161:0>:int,<array_max_1033@161:1>:int,<<array_max_1033@161:3>@164:0>:int) =
          true
          P[<<array_max_1033@138:3>@173:0>](<array_max_1033@161:0>:int,<array_max_1033@161:1>:int,<<array_max_1033@161:3>@164:0>:int) =
          true
      end ApronInterface.convex_hull_interpolate(206561)[4] (0.001000 sec.)
      Horn clauses:
        P[<fail_1486@188:0>](<fail_1486@188:0>:bool)|- bot
        
        P[<make_array_1030@182:1>](<k_make_array_u_1182@185:1>:int,<k_make_array_u_1182@185:0>:int),
        ((0 <= <k_make_array_u_1182@185:0>) &&
         ((<k_make_array_u_1182@185:0> >= <k_make_array_u_1182@185:1>) && <fail_1486@188:0>))
        |- P[<fail_1486@188:0>](<fail_1486@188:0>:bool)
        
        P[<<check_1148@177:3>@180:0>](<make_array_1030@182:0>:int,0:int,<check_1148@177:2>:int,<make_array_1030@182:1>:int)|- P[<make_array_1030@182:1>](
        <make_array_1030@182:0>:int,<make_array_1030@182:1>:int)
        
        P[<check_1148@177:2>](<check_1148@177:0>:int,<check_1148@177:1>:int,<check_1148@177:2>:int),
        ((<check_1148@177:1> < <check_1148@177:0>) && (<<check_1148@177:3>@180:0> = <check_1148@177:1>))
        |- P[<<check_1148@177:3>@180:0>](<check_1148@177:0>:int,<check_1148@177:1>:int,
                                         <check_1148@177:2>:int,<<check_1148@177:3>@180:0>:int)
        
         (<check_1148@177:1> = 0)
        |- P[<check_1148@177:2>](<check_1148@177:0>:int,<check_1148@177:1>:int,
                                 <check_1148@177:2>:int)
        
        P[<array_max_1033@138:1>](<array_max_1033@161:0>:int,(-1 + <array_max_1033@161:1>):int),
        P[<<<array_max_1033@138:2>@141:1>@157:0>](<array_max_1033@161:0>:int,(
                                                  -1 + <array_max_1033@161:1>):int,(
                                                  -1 + <array_max_1033@161:1>):int,<f_array_max_1480@159:4>:int),
        (<array_max_1033@161:1> < (1 + <array_max_1033@161:0>))
        |- P[<array_max_1033@161:1>](<array_max_1033@161:0>:int,<array_max_1033@161:1>:int)
        
        P[<<make_array_1030@143:2>@155:0>](<array_max_1033@138:0>:int,<<array_max_1033@138:2>@141:0>:int,<<<array_max_1033@138:2>@141:1>@157:0>:int),
        P[<array_max_1033@138:1>](<array_max_1033@138:0>:int,<array_max_1033@138:1>:int), (
        <array_max_1033@138:1> = 0)
        |- P[<<<array_max_1033@138:2>@141:1>@157:0>](<array_max_1033@138:0>:int,
                                                     <array_max_1033@138:1>:int,
                                                     <<array_max_1033@138:2>@141:0>:int,
                                                     <<<array_max_1033@138:2>@141:1>@157:0>:int)
        
        
        ((0 <= <make_array_1030@143:1>) &&
         ((<make_array_1030@143:1> < <make_array_1030@143:0>) &&
          (<<make_array_1030@143:2>@155:0> = <make_array_1030@143:1>)))
        |- P[<<make_array_1030@143:2>@155:0>](<make_array_1030@143:0>:int,
                                              <make_array_1030@143:1>:int,
                                              <<make_array_1030@143:2>@155:0>:int)
        
        P[<array_max_1033@138:1>](<array_max_1033@138:0>:int,<array_max_1033@138:1>:int),
        ((<array_max_1033@138:1> < <array_max_1033@138:0>) && (<<array_max_1033@138:2>@141:0> = <array_max_1033@138:1>))
        |- P[<<array_max_1033@138:2>@141:0>](<array_max_1033@138:0>:int,
                                             <array_max_1033@138:1>:int,
                                             <<array_max_1033@138:2>@141:0>:int)
        
         (<array_max_1033@138:1> = 0)
        |- P[<array_max_1033@138:1>](<array_max_1033@138:0>:int,<array_max_1033@138:1>:int)
      lower bounds:
        P[<check_1148@177:2>](<check_1148@177:0>:int,<check_1148@177:1>:int,<check_1148@177:2>:int) =
        (<check_1148@177:1> = 0)
        P[<<make_array_1030@143:2>@155:0>](<make_array_1030@143:0>:int,<make_array_1030@143:1>:int,<<make_array_1030@143:2>@155:0>:int) =
        ((0 <= <make_array_1030@143:1>) &&
         ((<make_array_1030@143:1> < <make_array_1030@143:0>) &&
          (<<make_array_1030@143:2>@155:0> = <make_array_1030@143:1>)))
        P[<array_max_1033@138:1>](<array_max_1033@138:0>:int,<array_max_1033@138:1>:int) = (<array_max_1033@138:1> = 0)
        P[<<check_1148@177:3>@180:0>](<check_1148@177:0>:int,<check_1148@177:1>:int,<check_1148@177:2>:int,<<check_1148@177:3>@180:0>:int) =
        ((<check_1148@177:1> = 0) &&
         ((<check_1148@177:1> < <check_1148@177:0>) && (<<check_1148@177:3>@180:0> = <check_1148@177:1>)))
        P[<<<array_max_1033@138:2>@141:1>@157:0>](<array_max_1033@138:0>:int,<array_max_1033@138:1>:int,<<array_max_1033@138:2>@141:0>:int,<<<array_max_1033@138:2>@141:1>@157:0>:int) =
        ((<array_max_1033@138:1> = 0) &&
         ((0 <= <<array_max_1033@138:2>@141:0>) &&
          ((<<array_max_1033@138:2>@141:0> < <array_max_1033@138:0>) &&
           (<<<array_max_1033@138:2>@141:1>@157:0> = <<array_max_1033@138:2>@141:0>))))
        P[<<array_max_1033@138:2>@141:0>](<array_max_1033@138:0>:int,<array_max_1033@138:1>:int,<<array_max_1033@138:2>@141:0>:int) =
        ((<array_max_1033@138:1> = 0) &&
         ((<array_max_1033@138:1> < <array_max_1033@138:0>) &&
          (<<array_max_1033@138:2>@141:0> = <array_max_1033@138:1>)))
        P[<make_array_1030@182:1>](<make_array_1030@182:0>:int,<make_array_1030@182:1>:int) =
        ((<make_array_1030@182:1> = 0) && (0 < <make_array_1030@182:0>))
        P[<array_max_1033@161:1>](<array_max_1033@161:0>:int,<array_max_1033@161:1>:int) =
        ((<array_max_1033@161:1> = 1) && (<array_max_1033@161:1> < (1 + <array_max_1033@161:0>)))
        P[<fail_1486@188:0>](<fail_1486@188:0>:bool) = false
      upper bounds:
        P[<array_max_1033@161:1>](var522:int,var523:int) = true
        P[<array_max_1033@138:1>](var520:int,var521:int) = true
      begin GenHcSolver.classify_pids(217482)[4]
        output:
          [<array_max_1033@138:1>;<array_max_1033@161:1>]
      end GenHcSolver.classify_pids(217482)[4] (0.000000 sec.)
      begin ApronInterface.convex_hull_interpolate(217493)[4]
        lb:((<array_max_1033@138:1> = 0) ||
            ((<array_max_1033@138:1> = 1) && (<array_max_1033@138:1> < (1 + <array_max_1033@138:0>))))
        nub:false
        lb':((<array_max_1033@138:1> = 0) ||
             ((<array_max_1033@138:1> = 1) && (<array_max_1033@138:1> < (1 + <array_max_1033@138:0>))))
        nub':false
        begin InterpProver.interpolate(217494)[5]
          begin InterpProver.interpolate_fresh(217495)[6]
            begin InterpProver.interpolate_log(217496)[7]
              input1: ((<array_max_1033@138:1> = 0) ||
                       ((<array_max_1033@138:1> = 1) && (<array_max_1033@138:1> < (1 + <array_max_1033@138:0>))))
              input2: false
              begin InterpProver.interpolate_check(217497)[8]
                begin InterpProver.interpolate_simplify(217498)[9]
                  begin InterpProver.interpolate_quick(217543)[10]
                    
                  end InterpProver.interpolate_quick(217543)[10] (0.000000 sec.)
                  
                end InterpProver.interpolate_simplify(217498)[9] (0.000000 sec.)
                
              end InterpProver.interpolate_check(217497)[8] (0.000999 sec.)
              output: true
            end InterpProver.interpolate_log(217496)[7] (0.000999 sec.)
            
          end InterpProver.interpolate_fresh(217495)[6] (0.000999 sec.)
          
        end InterpProver.interpolate(217494)[5] (0.000999 sec.)
        output:
          P[<array_max_1033@138:1>](<array_max_1033@138:0>:int,<array_max_1033@138:1>:int) = true
          P[<array_max_1033@161:1>](<array_max_1033@138:0>:int,<array_max_1033@138:1>:int) = true
      end ApronInterface.convex_hull_interpolate(217493)[4] (0.000999 sec.)
      Horn clauses:
        P[<fail_1486@188:0>](<fail_1486@188:0>:bool)|- bot
        
        P[<make_array_1030@182:1>](<k_make_array_u_1182@185:1>:int,<k_make_array_u_1182@185:0>:int),
        ((0 <= <k_make_array_u_1182@185:0>) &&
         ((<k_make_array_u_1182@185:0> >= <k_make_array_u_1182@185:1>) && <fail_1486@188:0>))
        |- P[<fail_1486@188:0>](<fail_1486@188:0>:bool)
        
        P[<<check_1148@177:3>@180:0>](<make_array_1030@182:0>:int,0:int,<check_1148@177:2>:int,<make_array_1030@182:1>:int)|- P[<make_array_1030@182:1>](
        <make_array_1030@182:0>:int,<make_array_1030@182:1>:int)
        
        P[<check_1148@177:2>](<check_1148@177:0>:int,<check_1148@177:1>:int,<check_1148@177:2>:int),
        ((<check_1148@177:1> < <check_1148@177:0>) && (<<check_1148@177:3>@180:0> = <check_1148@177:1>))
        |- P[<<check_1148@177:3>@180:0>](<check_1148@177:0>:int,<check_1148@177:1>:int,
                                         <check_1148@177:2>:int,<<check_1148@177:3>@180:0>:int)
        
         (<check_1148@177:1> = 0)
        |- P[<check_1148@177:2>](<check_1148@177:0>:int,<check_1148@177:1>:int,
                                 <check_1148@177:2>:int)
        
        P[<<make_array_1030@143:2>@155:0>](<array_max_1033@138:0>:int,<<array_max_1033@138:2>@141:0>:int,<<<array_max_1033@138:2>@141:1>@157:0>:int),
        (<array_max_1033@138:1> = 0)
        |- P[<<<array_max_1033@138:2>@141:1>@157:0>](<array_max_1033@138:0>:int,
                                                     <array_max_1033@138:1>:int,
                                                     <<array_max_1033@138:2>@141:0>:int,
                                                     <<<array_max_1033@138:2>@141:1>@157:0>:int)
        
        
        ((0 <= <make_array_1030@143:1>) &&
         ((<make_array_1030@143:1> < <make_array_1030@143:0>) &&
          (<<make_array_1030@143:2>@155:0> = <make_array_1030@143:1>)))
        |- P[<<make_array_1030@143:2>@155:0>](<make_array_1030@143:0>:int,
                                              <make_array_1030@143:1>:int,
                                              <<make_array_1030@143:2>@155:0>:int)
        
        
        ((<array_max_1033@138:1> < <array_max_1033@138:0>) && (<<array_max_1033@138:2>@141:0> = <array_max_1033@138:1>))
        |- P[<<array_max_1033@138:2>@141:0>](<array_max_1033@138:0>:int,
                                             <array_max_1033@138:1>:int,
                                             <<array_max_1033@138:2>@141:0>:int)
      lower bounds:
        P[<check_1148@177:2>](<check_1148@177:0>:int,<check_1148@177:1>:int,<check_1148@177:2>:int) =
        (<check_1148@177:1> = 0)
        P[<<make_array_1030@143:2>@155:0>](<make_array_1030@143:0>:int,<make_array_1030@143:1>:int,<<make_array_1030@143:2>@155:0>:int) =
        ((0 <= <make_array_1030@143:1>) &&
         ((<make_array_1030@143:1> < <make_array_1030@143:0>) &&
          (<<make_array_1030@143:2>@155:0> = <make_array_1030@143:1>)))
        P[<<array_max_1033@138:2>@141:0>](<array_max_1033@138:0>:int,<array_max_1033@138:1>:int,<<array_max_1033@138:2>@141:0>:int) =
        ((<array_max_1033@138:1> < <array_max_1033@138:0>) && (<<array_max_1033@138:2>@141:0> = <array_max_1033@138:1>))
        P[<<check_1148@177:3>@180:0>](<check_1148@177:0>:int,<check_1148@177:1>:int,<check_1148@177:2>:int,<<check_1148@177:3>@180:0>:int) =
        ((<check_1148@177:1> = 0) &&
         ((<check_1148@177:1> < <check_1148@177:0>) && (<<check_1148@177:3>@180:0> = <check_1148@177:1>)))
        P[<<<array_max_1033@138:2>@141:1>@157:0>](<array_max_1033@138:0>:int,<array_max_1033@138:1>:int,<<array_max_1033@138:2>@141:0>:int,<<<array_max_1033@138:2>@141:1>@157:0>:int) =
        ((<array_max_1033@138:1> = 0) &&
         ((0 <= <<array_max_1033@138:2>@141:0>) &&
          ((<<array_max_1033@138:2>@141:0> < <array_max_1033@138:0>) &&
           (<<<array_max_1033@138:2>@141:1>@157:0> = <<array_max_1033@138:2>@141:0>))))
        P[<make_array_1030@182:1>](<make_array_1030@182:0>:int,<make_array_1030@182:1>:int) =
        ((<make_array_1030@182:1> = 0) && (0 < <make_array_1030@182:0>))
        P[<fail_1486@188:0>](<fail_1486@188:0>:bool) = false
      upper bounds:
        P[<<<array_max_1033@138:2>@141:1>@157:0>](var524:int,var525:int,var526:int,var527:int) = true
      begin GenHcSolver.classify_pids(223984)[4]
        output:
          [<<<array_max_1033@138:2>@141:1>@157:0>]
      end GenHcSolver.classify_pids(223984)[4] (0.000000 sec.)
      lb:((<array_max_1033@138:1> = 0) &&
          ((0 <= <<array_max_1033@138:2>@141:0>) &&
           ((<<array_max_1033@138:2>@141:0> < <array_max_1033@138:0>) &&
            (<<<array_max_1033@138:2>@141:1>@157:0> = <<array_max_1033@138:2>@141:0>))))
      nub:false
      begin ApronInterface.convex_hull_interpolate(223987)[4]
        lb:((<array_max_1033@138:1> = 0) &&
            ((0 <= <<array_max_1033@138:2>@141:0>) &&
             ((<<array_max_1033@138:2>@141:0> < <array_max_1033@138:0>) &&
              (<<<array_max_1033@138:2>@141:1>@157:0> = <<array_max_1033@138:2>@141:0>))))
        nub:false
        lb':((<array_max_1033@138:1> = 0) &&
             ((0 <= <<array_max_1033@138:2>@141:0>) &&
              ((<<array_max_1033@138:2>@141:0> < <array_max_1033@138:0>) &&
               (<<<array_max_1033@138:2>@141:1>@157:0> = <<array_max_1033@138:2>@141:0>))))
        nub':false
        begin InterpProver.interpolate(223988)[5]
          begin InterpProver.interpolate_fresh(223989)[6]
            begin InterpProver.interpolate_log(223990)[7]
              input1: ((<array_max_1033@138:1> = 0) &&
                       ((0 <= <<array_max_1033@138:2>@141:0>) &&
                        ((<<array_max_1033@138:2>@141:0> < <array_max_1033@138:0>) &&
                         (<<<array_max_1033@138:2>@141:1>@157:0> = <<array_max_1033@138:2>@141:0>))))
              input2: false
              begin InterpProver.interpolate_check(223991)[8]
                begin InterpProver.interpolate_simplify(223992)[9]
                  begin InterpProver.interpolate_quick(224090)[10]
                    
                  end InterpProver.interpolate_quick(224090)[10] (0.000000 sec.)
                  
                end InterpProver.interpolate_simplify(223992)[9] (0.000000 sec.)
                
              end InterpProver.interpolate_check(223991)[8] (0.000000 sec.)
              output: true
            end InterpProver.interpolate_log(223990)[7] (0.000000 sec.)
            
          end InterpProver.interpolate_fresh(223989)[6] (0.000000 sec.)
          
        end InterpProver.interpolate(223988)[5] (0.000000 sec.)
        output:
          P[<<<array_max_1033@138:2>@141:1>@157:0>](<array_max_1033@138:0>:int,<array_max_1033@138:1>:int,<<array_max_1033@138:2>@141:0>:int,<<<array_max_1033@138:2>@141:1>@157:0>:int) =
          true
      end ApronInterface.convex_hull_interpolate(223987)[4] (0.000000 sec.)
      Horn clauses:
        P[<fail_1486@188:0>](<fail_1486@188:0>:bool)|- bot
        
        P[<make_array_1030@182:1>](<k_make_array_u_1182@185:1>:int,<k_make_array_u_1182@185:0>:int),
        ((0 <= <k_make_array_u_1182@185:0>) &&
         ((<k_make_array_u_1182@185:0> >= <k_make_array_u_1182@185:1>) && <fail_1486@188:0>))
        |- P[<fail_1486@188:0>](<fail_1486@188:0>:bool)
        
        P[<<check_1148@177:3>@180:0>](<make_array_1030@182:0>:int,0:int,<check_1148@177:2>:int,<make_array_1030@182:1>:int)|- P[<make_array_1030@182:1>](
        <make_array_1030@182:0>:int,<make_array_1030@182:1>:int)
        
        P[<check_1148@177:2>](<check_1148@177:0>:int,<check_1148@177:1>:int,<check_1148@177:2>:int),
        ((<check_1148@177:1> < <check_1148@177:0>) && (<<check_1148@177:3>@180:0> = <check_1148@177:1>))
        |- P[<<check_1148@177:3>@180:0>](<check_1148@177:0>:int,<check_1148@177:1>:int,
                                         <check_1148@177:2>:int,<<check_1148@177:3>@180:0>:int)
        
         (<check_1148@177:1> = 0)
        |- P[<check_1148@177:2>](<check_1148@177:0>:int,<check_1148@177:1>:int,
                                 <check_1148@177:2>:int)
        
        
        ((0 <= <make_array_1030@143:1>) &&
         ((<make_array_1030@143:1> < <make_array_1030@143:0>) &&
          (<<make_array_1030@143:2>@155:0> = <make_array_1030@143:1>)))
        |- P[<<make_array_1030@143:2>@155:0>](<make_array_1030@143:0>:int,
                                              <make_array_1030@143:1>:int,
                                              <<make_array_1030@143:2>@155:0>:int)
        
        
        ((<array_max_1033@138:1> < <array_max_1033@138:0>) && (<<array_max_1033@138:2>@141:0> = <array_max_1033@138:1>))
        |- P[<<array_max_1033@138:2>@141:0>](<array_max_1033@138:0>:int,
                                             <array_max_1033@138:1>:int,
                                             <<array_max_1033@138:2>@141:0>:int)
      lower bounds:
        P[<check_1148@177:2>](<check_1148@177:0>:int,<check_1148@177:1>:int,<check_1148@177:2>:int) =
        (<check_1148@177:1> = 0)
        P[<<make_array_1030@143:2>@155:0>](<make_array_1030@143:0>:int,<make_array_1030@143:1>:int,<<make_array_1030@143:2>@155:0>:int) =
        ((0 <= <make_array_1030@143:1>) &&
         ((<make_array_1030@143:1> < <make_array_1030@143:0>) &&
          (<<make_array_1030@143:2>@155:0> = <make_array_1030@143:1>)))
        P[<<array_max_1033@138:2>@141:0>](<array_max_1033@138:0>:int,<array_max_1033@138:1>:int,<<array_max_1033@138:2>@141:0>:int) =
        ((<array_max_1033@138:1> < <array_max_1033@138:0>) && (<<array_max_1033@138:2>@141:0> = <array_max_1033@138:1>))
        P[<<check_1148@177:3>@180:0>](<check_1148@177:0>:int,<check_1148@177:1>:int,<check_1148@177:2>:int,<<check_1148@177:3>@180:0>:int) =
        ((<check_1148@177:1> = 0) &&
         ((<check_1148@177:1> < <check_1148@177:0>) && (<<check_1148@177:3>@180:0> = <check_1148@177:1>)))
        P[<make_array_1030@182:1>](<make_array_1030@182:0>:int,<make_array_1030@182:1>:int) =
        ((<make_array_1030@182:1> = 0) && (0 < <make_array_1030@182:0>))
        P[<fail_1486@188:0>](<fail_1486@188:0>:bool) = false
      upper bounds:
        P[<<make_array_1030@143:2>@155:0>](var528:int,var529:int,var530:int) = true
      begin GenHcSolver.classify_pids(227473)[4]
        output:
          [<<make_array_1030@143:2>@155:0>]
      end GenHcSolver.classify_pids(227473)[4] (0.000000 sec.)
      lb:((0 <= <make_array_1030@143:1>) &&
          ((<make_array_1030@143:1> < <make_array_1030@143:0>) &&
           (<<make_array_1030@143:2>@155:0> = <make_array_1030@143:1>)))
      nub:false
      begin ApronInterface.convex_hull_interpolate(227476)[4]
        lb:((0 <= <make_array_1030@143:1>) &&
            ((<make_array_1030@143:1> < <make_array_1030@143:0>) &&
             (<<make_array_1030@143:2>@155:0> = <make_array_1030@143:1>)))
        nub:false
        lb':((0 <= <make_array_1030@143:1>) &&
             ((<make_array_1030@143:1> < <make_array_1030@143:0>) &&
              (<<make_array_1030@143:2>@155:0> = <make_array_1030@143:1>)))
        nub':false
        begin InterpProver.interpolate(227477)[5]
          begin InterpProver.interpolate_fresh(227478)[6]
            begin InterpProver.interpolate_log(227479)[7]
              input1: ((0 <= <make_array_1030@143:1>) &&
                       ((<make_array_1030@143:1> < <make_array_1030@143:0>) &&
                        (<<make_array_1030@143:2>@155:0> = <make_array_1030@143:1>)))
              input2: false
              begin InterpProver.interpolate_check(227480)[8]
                begin InterpProver.interpolate_simplify(227481)[9]
                  begin InterpProver.interpolate_quick(227536)[10]
                    
                  end InterpProver.interpolate_quick(227536)[10] (0.000000 sec.)
                  
                end InterpProver.interpolate_simplify(227481)[9] (0.000000 sec.)
                
              end InterpProver.interpolate_check(227480)[8] (0.000000 sec.)
              output: true
            end InterpProver.interpolate_log(227479)[7] (0.000000 sec.)
            
          end InterpProver.interpolate_fresh(227478)[6] (0.000000 sec.)
          
        end InterpProver.interpolate(227477)[5] (0.000000 sec.)
        output:
          P[<<make_array_1030@143:2>@155:0>](<make_array_1030@143:0>:int,<make_array_1030@143:1>:int,<<make_array_1030@143:2>@155:0>:int) =
          true
      end ApronInterface.convex_hull_interpolate(227476)[4] (0.001000 sec.)
      Horn clauses:
        P[<fail_1486@188:0>](<fail_1486@188:0>:bool)|- bot
        
        P[<make_array_1030@182:1>](<k_make_array_u_1182@185:1>:int,<k_make_array_u_1182@185:0>:int),
        ((0 <= <k_make_array_u_1182@185:0>) &&
         ((<k_make_array_u_1182@185:0> >= <k_make_array_u_1182@185:1>) && <fail_1486@188:0>))
        |- P[<fail_1486@188:0>](<fail_1486@188:0>:bool)
        
        P[<<check_1148@177:3>@180:0>](<make_array_1030@182:0>:int,0:int,<check_1148@177:2>:int,<make_array_1030@182:1>:int)|- P[<make_array_1030@182:1>](
        <make_array_1030@182:0>:int,<make_array_1030@182:1>:int)
        
        P[<check_1148@177:2>](<check_1148@177:0>:int,<check_1148@177:1>:int,<check_1148@177:2>:int),
        ((<check_1148@177:1> < <check_1148@177:0>) && (<<check_1148@177:3>@180:0> = <check_1148@177:1>))
        |- P[<<check_1148@177:3>@180:0>](<check_1148@177:0>:int,<check_1148@177:1>:int,
                                         <check_1148@177:2>:int,<<check_1148@177:3>@180:0>:int)
        
         (<check_1148@177:1> = 0)
        |- P[<check_1148@177:2>](<check_1148@177:0>:int,<check_1148@177:1>:int,
                                 <check_1148@177:2>:int)
        
        
        ((<array_max_1033@138:1> < <array_max_1033@138:0>) && (<<array_max_1033@138:2>@141:0> = <array_max_1033@138:1>))
        |- P[<<array_max_1033@138:2>@141:0>](<array_max_1033@138:0>:int,
                                             <array_max_1033@138:1>:int,
                                             <<array_max_1033@138:2>@141:0>:int)
      lower bounds:
        P[<check_1148@177:2>](<check_1148@177:0>:int,<check_1148@177:1>:int,<check_1148@177:2>:int) =
        (<check_1148@177:1> = 0)
        P[<<array_max_1033@138:2>@141:0>](<array_max_1033@138:0>:int,<array_max_1033@138:1>:int,<<array_max_1033@138:2>@141:0>:int) =
        ((<array_max_1033@138:1> < <array_max_1033@138:0>) && (<<array_max_1033@138:2>@141:0> = <array_max_1033@138:1>))
        P[<<check_1148@177:3>@180:0>](<check_1148@177:0>:int,<check_1148@177:1>:int,<check_1148@177:2>:int,<<check_1148@177:3>@180:0>:int) =
        ((<check_1148@177:1> = 0) &&
         ((<check_1148@177:1> < <check_1148@177:0>) && (<<check_1148@177:3>@180:0> = <check_1148@177:1>)))
        P[<make_array_1030@182:1>](<make_array_1030@182:0>:int,<make_array_1030@182:1>:int) =
        ((<make_array_1030@182:1> = 0) && (0 < <make_array_1030@182:0>))
        P[<fail_1486@188:0>](<fail_1486@188:0>:bool) = false
      upper bounds:
        P[<<array_max_1033@138:2>@141:0>](var531:int,var532:int,var533:int) = true
      begin GenHcSolver.classify_pids(230120)[4]
        output:
          [<<array_max_1033@138:2>@141:0>]
      end GenHcSolver.classify_pids(230120)[4] (0.000000 sec.)
      lb:((<array_max_1033@138:1> < <array_max_1033@138:0>) &&
          (<<array_max_1033@138:2>@141:0> = <array_max_1033@138:1>))
      nub:false
      begin ApronInterface.convex_hull_interpolate(230123)[4]
        lb:((<array_max_1033@138:1> < <array_max_1033@138:0>) &&
            (<<array_max_1033@138:2>@141:0> = <array_max_1033@138:1>))
        nub:false
        lb':((<array_max_1033@138:1> < <array_max_1033@138:0>) &&
             (<<array_max_1033@138:2>@141:0> = <array_max_1033@138:1>))
        nub':false
        begin InterpProver.interpolate(230124)[5]
          begin InterpProver.interpolate_fresh(230125)[6]
            begin InterpProver.interpolate_log(230126)[7]
              input1: ((<array_max_1033@138:1> < <array_max_1033@138:0>) &&
                       (<<array_max_1033@138:2>@141:0> = <array_max_1033@138:1>))
              input2: false
              begin InterpProver.interpolate_check(230127)[8]
                begin InterpProver.interpolate_simplify(230128)[9]
                  begin InterpProver.interpolate_quick(230158)[10]
                    
                  end InterpProver.interpolate_quick(230158)[10] (0.001000 sec.)
                  
                end InterpProver.interpolate_simplify(230128)[9] (0.001000 sec.)
                
              end InterpProver.interpolate_check(230127)[8] (0.001000 sec.)
              output: true
            end InterpProver.interpolate_log(230126)[7] (0.001000 sec.)
            
          end InterpProver.interpolate_fresh(230125)[6] (0.001000 sec.)
          
        end InterpProver.interpolate(230124)[5] (0.001000 sec.)
        output:
          P[<<array_max_1033@138:2>@141:0>](<array_max_1033@138:0>:int,<array_max_1033@138:1>:int,<<array_max_1033@138:2>@141:0>:int) =
          true
      end ApronInterface.convex_hull_interpolate(230123)[4] (0.001999 sec.)
      Horn clauses:
        P[<fail_1486@188:0>](<fail_1486@188:0>:bool)|- bot
        
        P[<make_array_1030@182:1>](<k_make_array_u_1182@185:1>:int,<k_make_array_u_1182@185:0>:int),
        ((0 <= <k_make_array_u_1182@185:0>) &&
         ((<k_make_array_u_1182@185:0> >= <k_make_array_u_1182@185:1>) && <fail_1486@188:0>))
        |- P[<fail_1486@188:0>](<fail_1486@188:0>:bool)
        
        P[<<check_1148@177:3>@180:0>](<make_array_1030@182:0>:int,0:int,<check_1148@177:2>:int,<make_array_1030@182:1>:int)|- P[<make_array_1030@182:1>](
        <make_array_1030@182:0>:int,<make_array_1030@182:1>:int)
        
        P[<check_1148@177:2>](<check_1148@177:0>:int,<check_1148@177:1>:int,<check_1148@177:2>:int),
        ((<check_1148@177:1> < <check_1148@177:0>) && (<<check_1148@177:3>@180:0> = <check_1148@177:1>))
        |- P[<<check_1148@177:3>@180:0>](<check_1148@177:0>:int,<check_1148@177:1>:int,
                                         <check_1148@177:2>:int,<<check_1148@177:3>@180:0>:int)
        
         (<check_1148@177:1> = 0)
        |- P[<check_1148@177:2>](<check_1148@177:0>:int,<check_1148@177:1>:int,
                                 <check_1148@177:2>:int)
      lower bounds:
        P[<check_1148@177:2>](<check_1148@177:0>:int,<check_1148@177:1>:int,<check_1148@177:2>:int) =
        (<check_1148@177:1> = 0)
        P[<<check_1148@177:3>@180:0>](<check_1148@177:0>:int,<check_1148@177:1>:int,<check_1148@177:2>:int,<<check_1148@177:3>@180:0>:int) =
        ((<check_1148@177:1> = 0) &&
         ((<check_1148@177:1> < <check_1148@177:0>) && (<<check_1148@177:3>@180:0> = <check_1148@177:1>)))
        P[<make_array_1030@182:1>](<make_array_1030@182:0>:int,<make_array_1030@182:1>:int) =
        ((<make_array_1030@182:1> = 0) && (0 < <make_array_1030@182:0>))
        P[<fail_1486@188:0>](<fail_1486@188:0>:bool) = false
      upper bounds:
        P[<fail_1486@188:0>](var535:bool) = true
      begin GenHcSolver.classify_pids(232116)[4]
        output:
          [<fail_1486@188:0>]
      end GenHcSolver.classify_pids(232116)[4] (0.000000 sec.)
      lb:false
      nub:false
      begin ApronInterface.convex_hull_interpolate(232119)[4]
        lb:false
        nub:false
        lb':false
        nub':false
        begin InterpProver.interpolate(232120)[5]
          begin InterpProver.interpolate_fresh(232121)[6]
            begin InterpProver.interpolate_log(232122)[7]
              input1: false
              input2: false
              begin InterpProver.interpolate_check(232123)[8]
                begin InterpProver.interpolate_simplify(232124)[9]
                  begin InterpProver.interpolate_quick(232137)[10]
                    
                  end InterpProver.interpolate_quick(232137)[10] (0.000000 sec.)
                  begin minimizing # of disjunctions(232141)[10]
                    input: false
                    output: false
                  end minimizing # of disjunctions(232141)[10] (0.000000 sec.)
                  
                end InterpProver.interpolate_simplify(232124)[9] (0.000000 sec.)
                
              end InterpProver.interpolate_check(232123)[8] (0.000000 sec.)
              output: false
            end InterpProver.interpolate_log(232122)[7] (0.000000 sec.)
            
          end InterpProver.interpolate_fresh(232121)[6] (0.000000 sec.)
          
        end InterpProver.interpolate(232120)[5] (0.000000 sec.)
        output:
          P[<fail_1486@188:0>](<fail_1486@188:0>:bool) = false
      end ApronInterface.convex_hull_interpolate(232119)[4] (0.000000 sec.)
      Horn clauses:
        P[<make_array_1030@182:1>](<k_make_array_u_1182@185:1>:int,<k_make_array_u_1182@185:0>:int),
        ((<k_make_array_u_1182@185:0> >= <k_make_array_u_1182@185:1>) && (0 <= <k_make_array_u_1182@185:0>)) |- bot
        
        P[<<check_1148@177:3>@180:0>](<make_array_1030@182:0>:int,0:int,<check_1148@177:2>:int,<make_array_1030@182:1>:int)|- P[<make_array_1030@182:1>](
        <make_array_1030@182:0>:int,<make_array_1030@182:1>:int)
        
        P[<check_1148@177:2>](<check_1148@177:0>:int,<check_1148@177:1>:int,<check_1148@177:2>:int),
        ((<check_1148@177:1> < <check_1148@177:0>) && (<<check_1148@177:3>@180:0> = <check_1148@177:1>))
        |- P[<<check_1148@177:3>@180:0>](<check_1148@177:0>:int,<check_1148@177:1>:int,
                                         <check_1148@177:2>:int,<<check_1148@177:3>@180:0>:int)
        
         (<check_1148@177:1> = 0)
        |- P[<check_1148@177:2>](<check_1148@177:0>:int,<check_1148@177:1>:int,
                                 <check_1148@177:2>:int)
      lower bounds:
        P[<check_1148@177:2>](<check_1148@177:0>:int,<check_1148@177:1>:int,<check_1148@177:2>:int) =
        (<check_1148@177:1> = 0)
        P[<<check_1148@177:3>@180:0>](<check_1148@177:0>:int,<check_1148@177:1>:int,<check_1148@177:2>:int,<<check_1148@177:3>@180:0>:int) =
        ((<check_1148@177:1> = 0) &&
         ((<check_1148@177:1> < <check_1148@177:0>) && (<<check_1148@177:3>@180:0> = <check_1148@177:1>)))
        P[<make_array_1030@182:1>](<make_array_1030@182:0>:int,<make_array_1030@182:1>:int) =
        ((<make_array_1030@182:1> = 0) && (0 < <make_array_1030@182:0>))
      upper bounds:
        P[<make_array_1030@182:1>](var536:int,var537:int) = ((var537 < var536) || (0 > var537))
      begin GenHcSolver.classify_pids(234000)[4]
        output:
          [<make_array_1030@182:1>]
      end GenHcSolver.classify_pids(234000)[4] (0.000000 sec.)
      lb:((<make_array_1030@182:1> = 0) && (0 < <make_array_1030@182:0>))
      nub:(not ((<make_array_1030@182:1> < <make_array_1030@182:0>) || (0 > <make_array_1030@182:1>)))
      begin ApronInterface.convex_hull_interpolate(234003)[4]
        lb:((<make_array_1030@182:1> = 0) && (0 < <make_array_1030@182:0>))
        nub:(not ((<make_array_1030@182:1> < <make_array_1030@182:0>) || (0 > <make_array_1030@182:1>)))
        lb':((<make_array_1030@182:1> = 0) && (0 < <make_array_1030@182:0>))
        nub':(not ((<make_array_1030@182:1> < <make_array_1030@182:0>) || (0 > <make_array_1030@182:1>)))
        begin InterpProver.interpolate(234004)[5]
          begin InterpProver.interpolate_fresh(234005)[6]
            begin InterpProver.interpolate_log(234006)[7]
              input1: ((<make_array_1030@182:1> = 0) && (0 < <make_array_1030@182:0>))
              input2: (not ((<make_array_1030@182:1> < <make_array_1030@182:0>) || (0 > <make_array_1030@182:1>)))
              begin InterpProver.interpolate_check(234007)[8]
                begin InterpProver.interpolate_simplify(234008)[9]
                  begin InterpProver.interpolate_quick(234059)[10]
                    begin CsisatInterface.interpolate_csisat_wrap(234068)[11]
                      begin CsisatInterface.interpolate_csisat_post_process(234069)[12]
                        begin CsisatInterface.interpolate_csisat_log(234070)[13]
                          input1: (0 = v_sep_make_array_1030_sep_182_sep_1 & 1 <= v_sep_make_array_1030_sep_182_sep_0)
                          input2: (0 <= v_sep_make_array_1030_sep_182_sep_1 & v_sep_make_array_1030_sep_182_sep_0 <= v_sep_make_array_1030_sep_182_sep_1)
                          begin CsisatInterface.interpolate_csisat_raw(234071)[14]
                            
                          end CsisatInterface.interpolate_csisat_raw(234071)[14] (0.000000 sec.)
                          output: (-2*v_sep_make_array_1030_sep_182_sep_0 + 2*v_sep_make_array_1030_sep_182_sep_1) <= -2
                          
                        end CsisatInterface.interpolate_csisat_log(234070)[13] (0.000000 sec.)
                        after simplification: (-2*v_sep_make_array_1030_sep_182_sep_0 + 2*v_sep_make_array_1030_sep_182_sep_1) <= -2
                        after dnf conversion: (((-2*v_sep_make_array_1030_sep_182_sep_0 + 2*v_sep_make_array_1030_sep_182_sep_1) <= -2))
                        
                      end CsisatInterface.interpolate_csisat_post_process(234069)[12] (0.000000 sec.)
                      
                    end CsisatInterface.interpolate_csisat_wrap(234068)[11] (0.000000 sec.)
                    
                  end InterpProver.interpolate_quick(234059)[10] (0.001000 sec.)
                  
                end InterpProver.interpolate_simplify(234008)[9] (0.001000 sec.)
                
              end InterpProver.interpolate_check(234007)[8] (0.002000 sec.)
              output: ((1 + <make_array_1030@182:1>) <= <make_array_1030@182:0>)
            end InterpProver.interpolate_log(234006)[7] (0.002000 sec.)
            
          end InterpProver.interpolate_fresh(234005)[6] (0.002000 sec.)
          
        end InterpProver.interpolate(234004)[5] (0.002000 sec.)
        output:
          P[<make_array_1030@182:1>](<make_array_1030@182:0>:int,<make_array_1030@182:1>:int) =
          ((1 + <make_array_1030@182:1>) <= <make_array_1030@182:0>)
      end ApronInterface.convex_hull_interpolate(234003)[4] (0.002000 sec.)
      Horn clauses:
        P[<<check_1148@177:3>@180:0>](<make_array_1030@182:0>:int,0:int,<check_1148@177:2>:int,<make_array_1030@182:1>:int),
        ((1 + <make_array_1030@182:1>) > <make_array_1030@182:0>) |- bot
        
        P[<check_1148@177:2>](<check_1148@177:0>:int,<check_1148@177:1>:int,<check_1148@177:2>:int),
        ((<check_1148@177:1> < <check_1148@177:0>) && (<<check_1148@177:3>@180:0> = <check_1148@177:1>))
        |- P[<<check_1148@177:3>@180:0>](<check_1148@177:0>:int,<check_1148@177:1>:int,
                                         <check_1148@177:2>:int,<<check_1148@177:3>@180:0>:int)
        
         (<check_1148@177:1> = 0)
        |- P[<check_1148@177:2>](<check_1148@177:0>:int,<check_1148@177:1>:int,
                                 <check_1148@177:2>:int)
      lower bounds:
        P[<check_1148@177:2>](<check_1148@177:0>:int,<check_1148@177:1>:int,<check_1148@177:2>:int) =
        (<check_1148@177:1> = 0)
        P[<<check_1148@177:3>@180:0>](<check_1148@177:0>:int,<check_1148@177:1>:int,<check_1148@177:2>:int,<<check_1148@177:3>@180:0>:int) =
        ((<check_1148@177:1> = 0) &&
         ((<check_1148@177:1> < <check_1148@177:0>) && (<<check_1148@177:3>@180:0> = <check_1148@177:1>)))
      upper bounds:
        P[<<check_1148@177:3>@180:0>](var538:int,var539:int,var540:int,var541:int) =
        ((var539 <> 0) || ((1 + var541) <= var538))
      begin GenHcSolver.classify_pids(235509)[4]
        output:
          [<<check_1148@177:3>@180:0>]
      end GenHcSolver.classify_pids(235509)[4] (0.000000 sec.)
      lb:((<check_1148@177:1> = 0) &&
          ((<check_1148@177:1> < <check_1148@177:0>) && (<<check_1148@177:3>@180:0> = <check_1148@177:1>)))
      nub:(not ((<check_1148@177:1> <> 0) || ((1 + <<check_1148@177:3>@180:0>) <= <check_1148@177:0>)))
      begin ApronInterface.convex_hull_interpolate(235512)[4]
        lb:((<check_1148@177:1> = 0) &&
            ((<check_1148@177:1> < <check_1148@177:0>) && (<<check_1148@177:3>@180:0> = <check_1148@177:1>)))
        nub:(not ((<check_1148@177:1> <> 0) || ((1 + <<check_1148@177:3>@180:0>) <= <check_1148@177:0>)))
        lb':((<check_1148@177:1> = 0) &&
             ((<check_1148@177:1> < <check_1148@177:0>) && (<<check_1148@177:3>@180:0> = <check_1148@177:1>)))
        nub':(not ((<check_1148@177:1> <> 0) || ((1 + <<check_1148@177:3>@180:0>) <= <check_1148@177:0>)))
        begin InterpProver.interpolate(235513)[5]
          begin InterpProver.interpolate_fresh(235514)[6]
            begin InterpProver.interpolate_log(235515)[7]
              input1: ((<check_1148@177:1> = 0) &&
                       ((<check_1148@177:1> < <check_1148@177:0>) && (<<check_1148@177:3>@180:0> = <check_1148@177:1>)))
              input2: (not ((<check_1148@177:1> <> 0) || ((1 + <<check_1148@177:3>@180:0>) <= <check_1148@177:0>)))
              begin InterpProver.interpolate_check(235516)[8]
                begin InterpProver.interpolate_simplify(235517)[9]
                  begin InterpProver.interpolate_quick(235608)[10]
                    begin CsisatInterface.interpolate_csisat_wrap(235617)[11]
                      begin CsisatInterface.interpolate_csisat_post_process(235618)[12]
                        begin CsisatInterface.interpolate_csisat_log(235619)[13]
                          input1: (0 = v_sep_check_1148_sep_177_sep_1 & v_sep_check_1148_sep_177_sep_1 = v_sep_check_1148_sep_177_sep_3_sep_180_sep_0 & (1 + v_sep_check_1148_sep_177_sep_1) <= v_sep_check_1148_sep_177_sep_0)
                          input2: (0 = v_sep_check_1148_sep_177_sep_1 & (1 + v_sep_check_1148_sep_177_sep_0) <= (1 + v_sep_check_1148_sep_177_sep_3_sep_180_sep_0))
                          begin CsisatInterface.interpolate_csisat_raw(235620)[14]
                            
                          end CsisatInterface.interpolate_csisat_raw(235620)[14] (0.000000 sec.)
                          output: (-2*v_sep_check_1148_sep_177_sep_0 + 2*v_sep_check_1148_sep_177_sep_3_sep_180_sep_0) <= -2
                          
                        end CsisatInterface.interpolate_csisat_log(235619)[13] (0.000000 sec.)
                        after simplification: (-2*v_sep_check_1148_sep_177_sep_0 + 2*v_sep_check_1148_sep_177_sep_3_sep_180_sep_0) <= -2
                        after dnf conversion: (((-2*v_sep_check_1148_sep_177_sep_0 + 2*v_sep_check_1148_sep_177_sep_3_sep_180_sep_0) <= -2))
                        
                      end CsisatInterface.interpolate_csisat_post_process(235618)[12] (0.000000 sec.)
                      
                    end CsisatInterface.interpolate_csisat_wrap(235617)[11] (0.000000 sec.)
                    
                  end InterpProver.interpolate_quick(235608)[10] (0.001000 sec.)
                  
                end InterpProver.interpolate_simplify(235517)[9] (0.001000 sec.)
                
              end InterpProver.interpolate_check(235516)[8] (0.002000 sec.)
              output: ((1 + <<check_1148@177:3>@180:0>) <= <check_1148@177:0>)
            end InterpProver.interpolate_log(235515)[7] (0.002000 sec.)
            
          end InterpProver.interpolate_fresh(235514)[6] (0.002000 sec.)
          
        end InterpProver.interpolate(235513)[5] (0.002000 sec.)
        output:
          P[<<check_1148@177:3>@180:0>](<check_1148@177:0>:int,<check_1148@177:1>:int,<check_1148@177:2>:int,<<check_1148@177:3>@180:0>:int) =
          ((1 + <<check_1148@177:3>@180:0>) <= <check_1148@177:0>)
      end ApronInterface.convex_hull_interpolate(235512)[4] (0.002000 sec.)
      Horn clauses:
         (<check_1148@177:1> = 0)
        |- P[<check_1148@177:2>](<check_1148@177:0>:int,<check_1148@177:1>:int,
                                 <check_1148@177:2>:int)
      lower bounds:
        P[<check_1148@177:2>](<check_1148@177:0>:int,<check_1148@177:1>:int,<check_1148@177:2>:int) =
        (<check_1148@177:1> = 0)
      upper bounds:
        P[<check_1148@177:2>](var542:int,var543:int,var544:int) = true
      begin GenHcSolver.classify_pids(236027)[4]
        output:
          [<check_1148@177:2>]
      end GenHcSolver.classify_pids(236027)[4] (0.000000 sec.)
      lb:(<check_1148@177:1> = 0)
      nub:false
      begin ApronInterface.convex_hull_interpolate(236030)[4]
        lb:(<check_1148@177:1> = 0)
        nub:false
        lb':(<check_1148@177:1> = 0)
        nub':false
        begin InterpProver.interpolate(236031)[5]
          begin InterpProver.interpolate_fresh(236032)[6]
            begin InterpProver.interpolate_log(236033)[7]
              input1: (<check_1148@177:1> = 0)
              input2: false
              begin InterpProver.interpolate_check(236034)[8]
                begin InterpProver.interpolate_simplify(236035)[9]
                  begin InterpProver.interpolate_quick(236054)[10]
                    
                  end InterpProver.interpolate_quick(236054)[10] (0.000000 sec.)
                  
                end InterpProver.interpolate_simplify(236035)[9] (0.000000 sec.)
                
              end InterpProver.interpolate_check(236034)[8] (0.000000 sec.)
              output: true
            end InterpProver.interpolate_log(236033)[7] (0.000000 sec.)
            
          end InterpProver.interpolate_fresh(236032)[6] (0.000000 sec.)
          
        end InterpProver.interpolate(236031)[5] (0.000999 sec.)
        output:
          P[<check_1148@177:2>](<check_1148@177:0>:int,<check_1148@177:1>:int,<check_1148@177:2>:int) = true
      end ApronInterface.convex_hull_interpolate(236030)[4] (0.000999 sec.)
      begin HcSolver.check_validity(236118)[4]
        input:
          P[<fail_1486@188:0>](<fail_1486@188:0>:bool)|- bot
          
          P[<make_array_1030@182:1>](<k_make_array_u_1182@185:1>:int,<k_make_array_u_1182@185:0>:int),
          ((0 <= <k_make_array_u_1182@185:0>) &&
           ((<k_make_array_u_1182@185:0> >= <k_make_array_u_1182@185:1>) && <fail_1486@188:0>))
          |- P[<fail_1486@188:0>](<fail_1486@188:0>:bool)
          
          P[<<array_max_1033@138:3>@173:0>](<make_array_1030@182:0>:int,0:int,<check_1148@177:2>:int),
          P[<<check_1148@177:3>@180:0>](<make_array_1030@182:0>:int,0:int,<check_1148@177:2>:int,<make_array_1030@182:1>:int)|- P[<make_array_1030@182:1>](
          <make_array_1030@182:0>:int,<make_array_1030@182:1>:int)
          
          P[<check_1148@177:2>](<check_1148@177:0>:int,<check_1148@177:1>:int,<check_1148@177:2>:int),
          ((<check_1148@177:1> < <check_1148@177:0>) && (<<check_1148@177:3>@180:0> = <check_1148@177:1>))
          |- P[<<check_1148@177:3>@180:0>](<check_1148@177:0>:int,<check_1148@177:1>:int,
                                           <check_1148@177:2>:int,<<check_1148@177:3>@180:0>:int)
          
          P[<<array_max_1033@138:3>@173:0>](<check_1148@177:0>:int,0:int,<check_1148@177:2>:int),
          (<check_1148@177:1> = 0)
          |- P[<check_1148@177:2>](<check_1148@177:0>:int,<check_1148@177:1>:int,
                                   <check_1148@177:2>:int)
          
          P[<array_max_1033@138:1>](<array_max_1033@138:0>:int,<array_max_1033@138:1>:int),
          P[<<<array_max_1033@138:2>@141:1>@157:0>](<array_max_1033@138:0>:int,<array_max_1033@138:1>:int,<array_max_1033@138:1>:int,<<array_max_1033@138:3>@173:0>:int),
          P[<<array_max_1033@161:3>@164:0>](<array_max_1033@138:0>:int,(
                                            1 + <array_max_1033@138:1>):int,var494:int),
          ((<<array_max_1033@138:3>@173:0> > var494) && (<array_max_1033@138:1> < <array_max_1033@138:0>))
          |- P[<<array_max_1033@138:3>@173:0>](<array_max_1033@138:0>:int,
                                               <array_max_1033@138:1>:int,
                                               <<array_max_1033@138:3>@173:0>:int)
          
          P[<array_max_1033@161:1>](<array_max_1033@161:0>:int,<array_max_1033@161:1>:int),
          ((<<array_max_1033@161:3>@164:0> = 0) && (<array_max_1033@161:1> >= <array_max_1033@161:0>))
          |- P[<<array_max_1033@161:3>@164:0>](<array_max_1033@161:0>:int,
                                               <array_max_1033@161:1>:int,
                                               <<array_max_1033@161:3>@164:0>:int)
          
          P[<array_max_1033@138:1>](<array_max_1033@161:0>:int,(-1 + <array_max_1033@161:1>):int),
          P[<<<array_max_1033@138:2>@141:1>@157:0>](<array_max_1033@161:0>:int,(
                                                    -1 + <array_max_1033@161:1>):int,(
                                                    -1 + <array_max_1033@161:1>):int,<f_array_max_1480@159:4>:int),
          (<array_max_1033@161:1> < (1 + <array_max_1033@161:0>))
          |- P[<array_max_1033@161:1>](<array_max_1033@161:0>:int,<array_max_1033@161:1>:int)
          
          P[<<make_array_1030@143:2>@155:0>](<array_max_1033@138:0>:int,<<array_max_1033@138:2>@141:0>:int,<<<array_max_1033@138:2>@141:1>@157:0>:int),
          P[<array_max_1033@138:1>](<array_max_1033@138:0>:int,<array_max_1033@138:1>:int),
          (<array_max_1033@138:1> = 0)
          |- P[<<<array_max_1033@138:2>@141:1>@157:0>](<array_max_1033@138:0>:int,
                                                       <array_max_1033@138:1>:int,
                                                       <<array_max_1033@138:2>@141:0>:int,
                                                       <<<array_max_1033@138:2>@141:1>@157:0>:int)
          
          P[<make_array_1030@143:1>](<make_array_1030@143:0>:int,<make_array_1030@143:1>:int),
          ((0 <= <make_array_1030@143:1>) &&
           ((<make_array_1030@143:1> < <make_array_1030@143:0>) &&
            (<<make_array_1030@143:2>@155:0> = <make_array_1030@143:1>)))
          |- P[<<make_array_1030@143:2>@155:0>](<make_array_1030@143:0>:int,
                                                <make_array_1030@143:1>:int,
                                                <<make_array_1030@143:2>@155:0>:int)
          
          P[<<array_max_1033@138:2>@141:0>](<make_array_1030@143:0>:int,0:int,<make_array_1030@143:1>:int)|- P[<make_array_1030@143:1>](
          <make_array_1030@143:0>:int,<make_array_1030@143:1>:int)
          
          P[<array_max_1033@138:1>](<array_max_1033@138:0>:int,<array_max_1033@138:1>:int),
          ((<array_max_1033@138:1> < <array_max_1033@138:0>) &&
           (<<array_max_1033@138:2>@141:0> = <array_max_1033@138:1>))
          |- P[<<array_max_1033@138:2>@141:0>](<array_max_1033@138:0>:int,
                                               <array_max_1033@138:1>:int,
                                               <<array_max_1033@138:2>@141:0>:int)
          
           (<array_max_1033@138:1> = 0)
          |- P[<array_max_1033@138:1>](<array_max_1033@138:0>:int,<array_max_1033@138:1>:int)
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        
      end HcSolver.check_validity(236118)[4] (0.005000 sec.)
      solution:
        P[<fail_1486@188:0>](<fail_1486@188:0>:bool) = false
        P[<make_array_1030@182:1>](<make_array_1030@182:0>:int,<make_array_1030@182:1>:int) =
        ((1 + <make_array_1030@182:1>) <= <make_array_1030@182:0>)
        P[<<check_1148@177:3>@180:0>](<check_1148@177:0>:int,<check_1148@177:1>:int,<check_1148@177:2>:int,<<check_1148@177:3>@180:0>:int) =
        ((1 + <<check_1148@177:3>@180:0>) <= <check_1148@177:0>)
        P[<check_1148@177:2>](<check_1148@177:0>:int,<check_1148@177:1>:int,<check_1148@177:2>:int) = true
        P[<<array_max_1033@138:3>@173:0>](<array_max_1033@161:0>:int,<array_max_1033@161:1>:int,<<array_max_1033@161:3>@164:0>:int) =
        true
        P[<<array_max_1033@161:3>@164:0>](<array_max_1033@161:0>:int,<array_max_1033@161:1>:int,<<array_max_1033@161:3>@164:0>:int) =
        true
        P[<array_max_1033@161:1>](<array_max_1033@138:0>:int,<array_max_1033@138:1>:int) = true
        P[<<<array_max_1033@138:2>@141:1>@157:0>](<array_max_1033@138:0>:int,<array_max_1033@138:1>:int,<<array_max_1033@138:2>@141:0>:int,<<<array_max_1033@138:2>@141:1>@157:0>:int) =
        true
        P[<<make_array_1030@143:2>@155:0>](<make_array_1030@143:0>:int,<make_array_1030@143:1>:int,<<make_array_1030@143:2>@155:0>:int) =
        true
        P[<make_array_1030@143:1>](<make_array_1030@143:0>:int,<make_array_1030@143:1>:int) = true
        P[<<array_max_1033@138:2>@141:0>](<array_max_1033@138:0>:int,<array_max_1033@138:1>:int,<<array_max_1033@138:2>@141:0>:int) =
        true
        P[<array_max_1033@138:1>](<array_max_1033@138:0>:int,<array_max_1033@138:1>:int) = true
    end GenHcSolver.solve(179774)[3] (0.314953 sec.)
    begin GenHcSolver.solve(237132)[3]
      Horn clauses:
        P[<fail_1486@188:0>](<fail_1486@188:0>:bool)|- bot
        
        P[<make_array_1030@182:1>](<k_make_array_u_1182@185:1>:int,<k_make_array_u_1182@185:0>:int),
        ((0 <= <k_make_array_u_1182@185:0>) &&
         ((<k_make_array_u_1182@185:0> >= <k_make_array_u_1182@185:1>) && <fail_1486@188:0>))
        |- P[<fail_1486@188:0>](<fail_1486@188:0>:bool)
        
        P[<<array_max_1033@138:3>@173:0>](<make_array_1030@182:0>:int,0:int,<check_1148@177:2>:int),
        P[<<check_1148@177:3>@180:0>](<make_array_1030@182:0>:int,0:int,<check_1148@177:2>:int,<make_array_1030@182:1>:int)|- P[<make_array_1030@182:1>](
        <make_array_1030@182:0>:int,<make_array_1030@182:1>:int)
        
        P[<check_1148@177:2>](<check_1148@177:0>:int,<check_1148@177:1>:int,<check_1148@177:2>:int),
        ((<check_1148@177:1> < <check_1148@177:0>) && (<<check_1148@177:3>@180:0> = <check_1148@177:1>))
        |- P[<<check_1148@177:3>@180:0>](<check_1148@177:0>:int,<check_1148@177:1>:int,
                                         <check_1148@177:2>:int,<<check_1148@177:3>@180:0>:int)
        
        P[<<array_max_1033@138:3>@173:0>](<check_1148@177:0>:int,0:int,<check_1148@177:2>:int),
        (<check_1148@177:1> = 0)
        |- P[<check_1148@177:2>](<check_1148@177:0>:int,<check_1148@177:1>:int,
                                 <check_1148@177:2>:int)
        
        P[<array_max_1033@138:1>](<array_max_1033@138:0>:int,<array_max_1033@138:1>:int),
        P[<<<array_max_1033@138:2>@141:1>@157:0>](<array_max_1033@138:0>:int,<array_max_1033@138:1>:int,<array_max_1033@138:1>:int,<<array_max_1033@138:3>@173:0>:int),
        P[<<array_max_1033@161:3>@164:0>](<array_max_1033@138:0>:int,(
                                          1 + <array_max_1033@138:1>):int,var494:int),
        ((<<array_max_1033@138:3>@173:0> > var494) && (<array_max_1033@138:1> < <array_max_1033@138:0>))
        |- P[<<array_max_1033@138:3>@173:0>](<array_max_1033@138:0>:int,
                                             <array_max_1033@138:1>:int,
                                             <<array_max_1033@138:3>@173:0>:int)
        
        P[<array_max_1033@161:1>](<array_max_1033@161:0>:int,<array_max_1033@161:1>:int),
        ((<<array_max_1033@161:3>@164:0> = 0) && (<array_max_1033@161:1> >= <array_max_1033@161:0>))
        |- P[<<array_max_1033@161:3>@164:0>](<array_max_1033@161:0>:int,
                                             <array_max_1033@161:1>:int,
                                             <<array_max_1033@161:3>@164:0>:int)
        
        P[<array_max_1033@138:1>](<array_max_1033@161:0>:int,(-1 + <array_max_1033@161:1>):int),
        P[<<<array_max_1033@138:2>@141:1>@157:0>](<array_max_1033@161:0>:int,(
                                                  -1 + <array_max_1033@161:1>):int,(
                                                  -1 + <array_max_1033@161:1>):int,<f_array_max_1480@159:4>:int),
        (<array_max_1033@161:1> < (1 + <array_max_1033@161:0>))
        |- P[<array_max_1033@161:1>](<array_max_1033@161:0>:int,<array_max_1033@161:1>:int)
        
        P[<<make_array_1030@143:2>@155:0>](<array_max_1033@138:0>:int,<<array_max_1033@138:2>@141:0>:int,<<<array_max_1033@138:2>@141:1>@157:0>:int),
        P[<array_max_1033@138:1>](<array_max_1033@138:0>:int,<array_max_1033@138:1>:int), (
        <array_max_1033@138:1> = 0)
        |- P[<<<array_max_1033@138:2>@141:1>@157:0>](<array_max_1033@138:0>:int,
                                                     <array_max_1033@138:1>:int,
                                                     <<array_max_1033@138:2>@141:0>:int,
                                                     <<<array_max_1033@138:2>@141:1>@157:0>:int)
        
        P[<make_array_1030@143:1>](<make_array_1030@143:0>:int,<make_array_1030@143:1>:int),
        ((0 <= <make_array_1030@143:1>) &&
         ((<make_array_1030@143:1> < <make_array_1030@143:0>) &&
          (<<make_array_1030@143:2>@155:0> = <make_array_1030@143:1>)))
        |- P[<<make_array_1030@143:2>@155:0>](<make_array_1030@143:0>:int,
                                              <make_array_1030@143:1>:int,
                                              <<make_array_1030@143:2>@155:0>:int)
        
        P[<<array_max_1033@138:2>@141:0>](<make_array_1030@143:0>:int,0:int,<make_array_1030@143:1>:int)|- P[<make_array_1030@143:1>](
        <make_array_1030@143:0>:int,<make_array_1030@143:1>:int)
        
        P[<array_max_1033@138:1>](<array_max_1033@138:0>:int,<array_max_1033@138:1>:int),
        ((<array_max_1033@138:1> < <array_max_1033@138:0>) && (<<array_max_1033@138:2>@141:0> = <array_max_1033@138:1>))
        |- P[<<array_max_1033@138:2>@141:0>](<array_max_1033@138:0>:int,
                                             <array_max_1033@138:1>:int,
                                             <<array_max_1033@138:2>@141:0>:int)
        
         (<array_max_1033@138:1> = 0)
        |- P[<array_max_1033@138:1>](<array_max_1033@138:0>:int,<array_max_1033@138:1>:int)
      lower bounds:
        P[<array_max_1033@138:1>](<array_max_1033@138:0>:int,<array_max_1033@138:1>:int) = (<array_max_1033@138:1> = 0)
        P[<<array_max_1033@138:2>@141:0>](<array_max_1033@138:0>:int,<array_max_1033@138:1>:int,<<array_max_1033@138:2>@141:0>:int) =
        ((<array_max_1033@138:1> = 0) &&
         ((<array_max_1033@138:1> < <array_max_1033@138:0>) &&
          (<<array_max_1033@138:2>@141:0> = <array_max_1033@138:1>)))
        P[<make_array_1030@143:1>](<make_array_1030@143:0>:int,<make_array_1030@143:1>:int) =
        ((<make_array_1030@143:1> = 0) && (0 < <make_array_1030@143:0>))
        P[<<make_array_1030@143:2>@155:0>](<make_array_1030@143:0>:int,<make_array_1030@143:1>:int,<<make_array_1030@143:2>@155:0>:int) =
        ((<make_array_1030@143:1> = 0) &&
         ((<make_array_1030@143:1> < <make_array_1030@143:0>) &&
          ((0 < <make_array_1030@143:0>) && (<<make_array_1030@143:2>@155:0> = <make_array_1030@143:1>))))
        P[<<<array_max_1033@138:2>@141:1>@157:0>](<array_max_1033@138:0>:int,<array_max_1033@138:1>:int,<<array_max_1033@138:2>@141:0>:int,<<<array_max_1033@138:2>@141:1>@157:0>:int) =
        ((<<array_max_1033@138:2>@141:0> = 0) &&
         ((<array_max_1033@138:1> = 0) &&
          ((<<array_max_1033@138:2>@141:0> < <array_max_1033@138:0>) &&
           ((0 < <array_max_1033@138:0>) && (<<<array_max_1033@138:2>@141:1>@157:0> = <<array_max_1033@138:2>@141:0>)))))
        P[<array_max_1033@161:1>](<array_max_1033@161:0>:int,<array_max_1033@161:1>:int) =
        ((<array_max_1033@161:1> = 1) &&
         ((0 < <array_max_1033@161:0>) && (<array_max_1033@161:1> < (1 + <array_max_1033@161:0>))))
        P[<<array_max_1033@161:3>@164:0>](<array_max_1033@161:0>:int,<array_max_1033@161:1>:int,<<array_max_1033@161:3>@164:0>:int) =
        ((<<array_max_1033@161:3>@164:0> = 0) &&
         ((<array_max_1033@161:1> = 1) &&
          ((0 < <array_max_1033@161:0>) && (<array_max_1033@161:1> = <array_max_1033@161:0>))))
        P[<<array_max_1033@138:3>@173:0>](<array_max_1033@138:0>:int,<array_max_1033@138:1>:int,<<array_max_1033@138:3>@173:0>:int) =
        ((<array_max_1033@138:1> = 0) &&
         ((<<array_max_1033@138:3>@173:0> = <array_max_1033@138:1>) &&
          ((0 < <array_max_1033@138:0>) &&
           (((1 + <array_max_1033@138:1>) = <array_max_1033@138:0>) && (<<array_max_1033@138:3>@173:0> > 0)))))
        P[<check_1148@177:2>](<check_1148@177:0>:int,<check_1148@177:1>:int,<check_1148@177:2>:int) = false
        P[<<check_1148@177:3>@180:0>](<check_1148@177:0>:int,<check_1148@177:1>:int,<check_1148@177:2>:int,<<check_1148@177:3>@180:0>:int) =
        false
        P[<make_array_1030@182:1>](<make_array_1030@182:0>:int,<make_array_1030@182:1>:int) = false
        P[<fail_1486@188:0>](<fail_1486@188:0>:bool) = false
      upper bounds:
        P[<make_array_1030@182:1>](var552:int,var553:int) = true
        P[<make_array_1030@143:1>](var546:int,var547:int) = true
      begin GenHcSolver.classify_pids(248836)[4]
        output:
          [<make_array_1030@143:1>;<make_array_1030@182:1>]
      end GenHcSolver.classify_pids(248836)[4] (0.000000 sec.)
      begin ApronInterface.convex_hull_interpolate(248847)[4]
        lb:((<make_array_1030@143:1> = 0) && (0 < <make_array_1030@143:0>))
        nub:false
        begin ExtFormula.Formula.case_analysis_boolean(248857)[5]
          ts: ((<make_array_1030@143:1> = 0) && (0 < <make_array_1030@143:0>))
          
        end ExtFormula.Formula.case_analysis_boolean(248857)[5] (0.000000 sec.)
        begin ExtFormula.Formula.case_analysis_boolean(248864)[5]
          ts: false
          
        end ExtFormula.Formula.case_analysis_boolean(248864)[5] (0.000000 sec.)
        lb':((<make_array_1030@143:1> = 0) && ((-1 + <make_array_1030@143:0>) >= 0))
        nub':(-1 >= 0)
        begin InterpProver.interpolate(248867)[5]
          begin InterpProver.interpolate_fresh(248868)[6]
            begin InterpProver.interpolate_log(248869)[7]
              input1: ((<make_array_1030@143:1> = 0) && ((-1 + <make_array_1030@143:0>) >= 0))
              input2: (-1 >= 0)
              begin InterpProver.interpolate_check(248870)[8]
                begin InterpProver.interpolate_simplify(248871)[9]
                  begin InterpProver.interpolate_quick(248911)[10]
                    
                  end InterpProver.interpolate_quick(248911)[10] (0.001000 sec.)
                  
                end InterpProver.interpolate_simplify(248871)[9] (0.001000 sec.)
                
              end InterpProver.interpolate_check(248870)[8] (0.001000 sec.)
              output: true
            end InterpProver.interpolate_log(248869)[7] (0.001000 sec.)
            
          end InterpProver.interpolate_fresh(248868)[6] (0.001000 sec.)
          
        end InterpProver.interpolate(248867)[5] (0.001000 sec.)
        output:
          P[<make_array_1030@143:1>](<make_array_1030@143:0>:int,<make_array_1030@143:1>:int) = true
          P[<make_array_1030@182:1>](<make_array_1030@143:0>:int,<make_array_1030@143:1>:int) = true
      end ApronInterface.convex_hull_interpolate(248847)[4] (0.002000 sec.)
      Horn clauses:
        P[<fail_1486@188:0>](<fail_1486@188:0>:bool)|- bot
        
        P[<make_array_1030@182:1>](<k_make_array_u_1182@185:1>:int,<k_make_array_u_1182@185:0>:int),
        ((0 <= <k_make_array_u_1182@185:0>) &&
         ((<k_make_array_u_1182@185:0> >= <k_make_array_u_1182@185:1>) && <fail_1486@188:0>))
        |- P[<fail_1486@188:0>](<fail_1486@188:0>:bool)
        
        P[<<array_max_1033@138:3>@173:0>](<make_array_1030@182:0>:int,0:int,<check_1148@177:2>:int),
        P[<<check_1148@177:3>@180:0>](<make_array_1030@182:0>:int,0:int,<check_1148@177:2>:int,<make_array_1030@182:1>:int)|- P[<make_array_1030@182:1>](
        <make_array_1030@182:0>:int,<make_array_1030@182:1>:int)
        
        P[<check_1148@177:2>](<check_1148@177:0>:int,<check_1148@177:1>:int,<check_1148@177:2>:int),
        ((<check_1148@177:1> < <check_1148@177:0>) && (<<check_1148@177:3>@180:0> = <check_1148@177:1>))
        |- P[<<check_1148@177:3>@180:0>](<check_1148@177:0>:int,<check_1148@177:1>:int,
                                         <check_1148@177:2>:int,<<check_1148@177:3>@180:0>:int)
        
        P[<<array_max_1033@138:3>@173:0>](<check_1148@177:0>:int,0:int,<check_1148@177:2>:int),
        (<check_1148@177:1> = 0)
        |- P[<check_1148@177:2>](<check_1148@177:0>:int,<check_1148@177:1>:int,
                                 <check_1148@177:2>:int)
        
        P[<array_max_1033@138:1>](<array_max_1033@138:0>:int,<array_max_1033@138:1>:int),
        P[<<<array_max_1033@138:2>@141:1>@157:0>](<array_max_1033@138:0>:int,<array_max_1033@138:1>:int,<array_max_1033@138:1>:int,<<array_max_1033@138:3>@173:0>:int),
        P[<<array_max_1033@161:3>@164:0>](<array_max_1033@138:0>:int,(
                                          1 + <array_max_1033@138:1>):int,var494:int),
        ((<<array_max_1033@138:3>@173:0> > var494) && (<array_max_1033@138:1> < <array_max_1033@138:0>))
        |- P[<<array_max_1033@138:3>@173:0>](<array_max_1033@138:0>:int,
                                             <array_max_1033@138:1>:int,
                                             <<array_max_1033@138:3>@173:0>:int)
        
        P[<array_max_1033@161:1>](<array_max_1033@161:0>:int,<array_max_1033@161:1>:int),
        ((<<array_max_1033@161:3>@164:0> = 0) && (<array_max_1033@161:1> >= <array_max_1033@161:0>))
        |- P[<<array_max_1033@161:3>@164:0>](<array_max_1033@161:0>:int,
                                             <array_max_1033@161:1>:int,
                                             <<array_max_1033@161:3>@164:0>:int)
        
        P[<array_max_1033@138:1>](<array_max_1033@161:0>:int,(-1 + <array_max_1033@161:1>):int),
        P[<<<array_max_1033@138:2>@141:1>@157:0>](<array_max_1033@161:0>:int,(
                                                  -1 + <array_max_1033@161:1>):int,(
                                                  -1 + <array_max_1033@161:1>):int,<f_array_max_1480@159:4>:int),
        (<array_max_1033@161:1> < (1 + <array_max_1033@161:0>))
        |- P[<array_max_1033@161:1>](<array_max_1033@161:0>:int,<array_max_1033@161:1>:int)
        
        P[<<make_array_1030@143:2>@155:0>](<array_max_1033@138:0>:int,<<array_max_1033@138:2>@141:0>:int,<<<array_max_1033@138:2>@141:1>@157:0>:int),
        P[<array_max_1033@138:1>](<array_max_1033@138:0>:int,<array_max_1033@138:1>:int), (
        <array_max_1033@138:1> = 0)
        |- P[<<<array_max_1033@138:2>@141:1>@157:0>](<array_max_1033@138:0>:int,
                                                     <array_max_1033@138:1>:int,
                                                     <<array_max_1033@138:2>@141:0>:int,
                                                     <<<array_max_1033@138:2>@141:1>@157:0>:int)
        
        
        ((0 <= <make_array_1030@143:1>) &&
         ((<make_array_1030@143:1> < <make_array_1030@143:0>) &&
          (<<make_array_1030@143:2>@155:0> = <make_array_1030@143:1>)))
        |- P[<<make_array_1030@143:2>@155:0>](<make_array_1030@143:0>:int,
                                              <make_array_1030@143:1>:int,
                                              <<make_array_1030@143:2>@155:0>:int)
        
        P[<array_max_1033@138:1>](<array_max_1033@138:0>:int,<array_max_1033@138:1>:int),
        ((<array_max_1033@138:1> < <array_max_1033@138:0>) && (<<array_max_1033@138:2>@141:0> = <array_max_1033@138:1>))
        |- P[<<array_max_1033@138:2>@141:0>](<array_max_1033@138:0>:int,
                                             <array_max_1033@138:1>:int,
                                             <<array_max_1033@138:2>@141:0>:int)
        
         (<array_max_1033@138:1> = 0)
        |- P[<array_max_1033@138:1>](<array_max_1033@138:0>:int,<array_max_1033@138:1>:int)
      lower bounds:
        P[<<make_array_1030@143:2>@155:0>](<make_array_1030@143:0>:int,<make_array_1030@143:1>:int,<<make_array_1030@143:2>@155:0>:int) =
        ((0 <= <make_array_1030@143:1>) &&
         ((<make_array_1030@143:1> < <make_array_1030@143:0>) &&
          (<<make_array_1030@143:2>@155:0> = <make_array_1030@143:1>)))
        P[<array_max_1033@138:1>](<array_max_1033@138:0>:int,<array_max_1033@138:1>:int) = (<array_max_1033@138:1> = 0)
        P[<<<array_max_1033@138:2>@141:1>@157:0>](<array_max_1033@138:0>:int,<array_max_1033@138:1>:int,<<array_max_1033@138:2>@141:0>:int,<<<array_max_1033@138:2>@141:1>@157:0>:int) =
        ((<array_max_1033@138:1> = 0) &&
         ((0 <= <<array_max_1033@138:2>@141:0>) &&
          ((<<array_max_1033@138:2>@141:0> < <array_max_1033@138:0>) &&
           (<<<array_max_1033@138:2>@141:1>@157:0> = <<array_max_1033@138:2>@141:0>))))
        P[<<array_max_1033@138:2>@141:0>](<array_max_1033@138:0>:int,<array_max_1033@138:1>:int,<<array_max_1033@138:2>@141:0>:int) =
        ((<array_max_1033@138:1> = 0) &&
         ((<array_max_1033@138:1> < <array_max_1033@138:0>) &&
          (<<array_max_1033@138:2>@141:0> = <array_max_1033@138:1>)))
        P[<array_max_1033@161:1>](<array_max_1033@161:0>:int,<array_max_1033@161:1>:int) =
        ((<array_max_1033@161:1> = 1) && (<array_max_1033@161:1> < (1 + <array_max_1033@161:0>)))
        P[<<array_max_1033@161:3>@164:0>](<array_max_1033@161:0>:int,<array_max_1033@161:1>:int,<<array_max_1033@161:3>@164:0>:int) =
        ((<<array_max_1033@161:3>@164:0> = 0) &&
         ((<array_max_1033@161:1> = 1) && (<array_max_1033@161:1> = <array_max_1033@161:0>)))
        P[<<array_max_1033@138:3>@173:0>](<array_max_1033@138:0>:int,<array_max_1033@138:1>:int,<<array_max_1033@138:3>@173:0>:int) =
        ((<array_max_1033@138:1> = 0) &&
         ((<<array_max_1033@138:3>@173:0> = <array_max_1033@138:1>) &&
          (((1 + <array_max_1033@138:1>) = <array_max_1033@138:0>) && (<<array_max_1033@138:3>@173:0> > 0))))
        P[<check_1148@177:2>](<check_1148@177:0>:int,<check_1148@177:1>:int,<check_1148@177:2>:int) = false
        P[<<check_1148@177:3>@180:0>](<check_1148@177:0>:int,<check_1148@177:1>:int,<check_1148@177:2>:int,<<check_1148@177:3>@180:0>:int) =
        false
        P[<make_array_1030@182:1>](<make_array_1030@182:0>:int,<make_array_1030@182:1>:int) = false
        P[<fail_1486@188:0>](<fail_1486@188:0>:bool) = false
      upper bounds:
        P[<<array_max_1033@138:3>@173:0>](var567:int,var568:int,var569:int) = true
        P[<<array_max_1033@161:3>@164:0>](var561:int,var562:int,var563:int) = true
      begin GenHcSolver.classify_pids(263937)[4]
        output:
          [<<array_max_1033@161:3>@164:0>;<<array_max_1033@138:3>@173:0>]
      end GenHcSolver.classify_pids(263937)[4] (0.000000 sec.)
      begin ApronInterface.convex_hull_interpolate(263948)[4]
        lb:(((<<array_max_1033@161:3>@164:0> = 0) &&
             ((<array_max_1033@161:1> = 1) && (<array_max_1033@161:1> = <array_max_1033@161:0>))) ||
            ((<array_max_1033@161:1> = 0) &&
             ((<<array_max_1033@161:3>@164:0> = <array_max_1033@161:1>) &&
              (((1 + <array_max_1033@161:1>) = <array_max_1033@161:0>) && (<<array_max_1033@161:3>@164:0> > 0)))))
        nub:false
        begin ExtFormula.Formula.case_analysis_boolean(264023)[5]
          ts: (((<<array_max_1033@161:3>@164:0> = 0) &&
                ((<array_max_1033@161:1> = 1) && (<array_max_1033@161:1> = <array_max_1033@161:0>))) ||
               ((<array_max_1033@161:1> = 0) &&
                ((<<array_max_1033@161:3>@164:0> = <array_max_1033@161:1>) &&
                 (((1 + <array_max_1033@161:1>) = <array_max_1033@161:0>) && (<<array_max_1033@161:3>@164:0> > 0)))))
          
        end ExtFormula.Formula.case_analysis_boolean(264023)[5] (0.000000 sec.)
        begin ExtFormula.Formula.case_analysis_boolean(264040)[5]
          ts: false
          
        end ExtFormula.Formula.case_analysis_boolean(264040)[5] (0.000000 sec.)
        lb':((<<array_max_1033@161:3>@164:0> = 0) &&
             (((-1 + <array_max_1033@161:1>) = 0) && ((-1 + <array_max_1033@161:0>) = 0)))
        nub':(-1 >= 0)
        begin InterpProver.interpolate(264043)[5]
          begin InterpProver.interpolate_fresh(264044)[6]
            begin InterpProver.interpolate_log(264045)[7]
              input1: ((<<array_max_1033@161:3>@164:0> = 0) &&
                       (((-1 + <array_max_1033@161:1>) = 0) && ((-1 + <array_max_1033@161:0>) = 0)))
              input2: (-1 >= 0)
              begin InterpProver.interpolate_check(264046)[8]
                begin InterpProver.interpolate_simplify(264047)[9]
                  begin InterpProver.interpolate_quick(264097)[10]
                    
                  end InterpProver.interpolate_quick(264097)[10] (0.000000 sec.)
                  
                end InterpProver.interpolate_simplify(264047)[9] (0.000000 sec.)
                
              end InterpProver.interpolate_check(264046)[8] (0.000000 sec.)
              output: true
            end InterpProver.interpolate_log(264045)[7] (0.000000 sec.)
            
          end InterpProver.interpolate_fresh(264044)[6] (0.000000 sec.)
          
        end InterpProver.interpolate(264043)[5] (0.000000 sec.)
        output:
          P[<<array_max_1033@161:3>@164:0>](<array_max_1033@161:0>:int,<array_max_1033@161:1>:int,<<array_max_1033@161:3>@164:0>:int) =
          true
          P[<<array_max_1033@138:3>@173:0>](<array_max_1033@161:0>:int,<array_max_1033@161:1>:int,<<array_max_1033@161:3>@164:0>:int) =
          true
      end ApronInterface.convex_hull_interpolate(263948)[4] (0.001999 sec.)
      Horn clauses:
        P[<fail_1486@188:0>](<fail_1486@188:0>:bool)|- bot
        
        P[<make_array_1030@182:1>](<k_make_array_u_1182@185:1>:int,<k_make_array_u_1182@185:0>:int),
        ((0 <= <k_make_array_u_1182@185:0>) &&
         ((<k_make_array_u_1182@185:0> >= <k_make_array_u_1182@185:1>) && <fail_1486@188:0>))
        |- P[<fail_1486@188:0>](<fail_1486@188:0>:bool)
        
        P[<<check_1148@177:3>@180:0>](<make_array_1030@182:0>:int,0:int,<check_1148@177:2>:int,<make_array_1030@182:1>:int)|- P[<make_array_1030@182:1>](
        <make_array_1030@182:0>:int,<make_array_1030@182:1>:int)
        
        P[<check_1148@177:2>](<check_1148@177:0>:int,<check_1148@177:1>:int,<check_1148@177:2>:int),
        ((<check_1148@177:1> < <check_1148@177:0>) && (<<check_1148@177:3>@180:0> = <check_1148@177:1>))
        |- P[<<check_1148@177:3>@180:0>](<check_1148@177:0>:int,<check_1148@177:1>:int,
                                         <check_1148@177:2>:int,<<check_1148@177:3>@180:0>:int)
        
         (<check_1148@177:1> = 0)
        |- P[<check_1148@177:2>](<check_1148@177:0>:int,<check_1148@177:1>:int,
                                 <check_1148@177:2>:int)
        
        P[<array_max_1033@138:1>](<array_max_1033@161:0>:int,(-1 + <array_max_1033@161:1>):int),
        P[<<<array_max_1033@138:2>@141:1>@157:0>](<array_max_1033@161:0>:int,(
                                                  -1 + <array_max_1033@161:1>):int,(
                                                  -1 + <array_max_1033@161:1>):int,<f_array_max_1480@159:4>:int),
        (<array_max_1033@161:1> < (1 + <array_max_1033@161:0>))
        |- P[<array_max_1033@161:1>](<array_max_1033@161:0>:int,<array_max_1033@161:1>:int)
        
        P[<<make_array_1030@143:2>@155:0>](<array_max_1033@138:0>:int,<<array_max_1033@138:2>@141:0>:int,<<<array_max_1033@138:2>@141:1>@157:0>:int),
        P[<array_max_1033@138:1>](<array_max_1033@138:0>:int,<array_max_1033@138:1>:int), (
        <array_max_1033@138:1> = 0)
        |- P[<<<array_max_1033@138:2>@141:1>@157:0>](<array_max_1033@138:0>:int,
                                                     <array_max_1033@138:1>:int,
                                                     <<array_max_1033@138:2>@141:0>:int,
                                                     <<<array_max_1033@138:2>@141:1>@157:0>:int)
        
        
        ((0 <= <make_array_1030@143:1>) &&
         ((<make_array_1030@143:1> < <make_array_1030@143:0>) &&
          (<<make_array_1030@143:2>@155:0> = <make_array_1030@143:1>)))
        |- P[<<make_array_1030@143:2>@155:0>](<make_array_1030@143:0>:int,
                                              <make_array_1030@143:1>:int,
                                              <<make_array_1030@143:2>@155:0>:int)
        
        P[<array_max_1033@138:1>](<array_max_1033@138:0>:int,<array_max_1033@138:1>:int),
        ((<array_max_1033@138:1> < <array_max_1033@138:0>) && (<<array_max_1033@138:2>@141:0> = <array_max_1033@138:1>))
        |- P[<<array_max_1033@138:2>@141:0>](<array_max_1033@138:0>:int,
                                             <array_max_1033@138:1>:int,
                                             <<array_max_1033@138:2>@141:0>:int)
        
         (<array_max_1033@138:1> = 0)
        |- P[<array_max_1033@138:1>](<array_max_1033@138:0>:int,<array_max_1033@138:1>:int)
      lower bounds:
        P[<check_1148@177:2>](<check_1148@177:0>:int,<check_1148@177:1>:int,<check_1148@177:2>:int) =
        (<check_1148@177:1> = 0)
        P[<<make_array_1030@143:2>@155:0>](<make_array_1030@143:0>:int,<make_array_1030@143:1>:int,<<make_array_1030@143:2>@155:0>:int) =
        ((0 <= <make_array_1030@143:1>) &&
         ((<make_array_1030@143:1> < <make_array_1030@143:0>) &&
          (<<make_array_1030@143:2>@155:0> = <make_array_1030@143:1>)))
        P[<array_max_1033@138:1>](<array_max_1033@138:0>:int,<array_max_1033@138:1>:int) = (<array_max_1033@138:1> = 0)
        P[<<check_1148@177:3>@180:0>](<check_1148@177:0>:int,<check_1148@177:1>:int,<check_1148@177:2>:int,<<check_1148@177:3>@180:0>:int) =
        ((<check_1148@177:1> = 0) &&
         ((<check_1148@177:1> < <check_1148@177:0>) && (<<check_1148@177:3>@180:0> = <check_1148@177:1>)))
        P[<<<array_max_1033@138:2>@141:1>@157:0>](<array_max_1033@138:0>:int,<array_max_1033@138:1>:int,<<array_max_1033@138:2>@141:0>:int,<<<array_max_1033@138:2>@141:1>@157:0>:int) =
        ((<array_max_1033@138:1> = 0) &&
         ((0 <= <<array_max_1033@138:2>@141:0>) &&
          ((<<array_max_1033@138:2>@141:0> < <array_max_1033@138:0>) &&
           (<<<array_max_1033@138:2>@141:1>@157:0> = <<array_max_1033@138:2>@141:0>))))
        P[<<array_max_1033@138:2>@141:0>](<array_max_1033@138:0>:int,<array_max_1033@138:1>:int,<<array_max_1033@138:2>@141:0>:int) =
        ((<array_max_1033@138:1> = 0) &&
         ((<array_max_1033@138:1> < <array_max_1033@138:0>) &&
          (<<array_max_1033@138:2>@141:0> = <array_max_1033@138:1>)))
        P[<make_array_1030@182:1>](<make_array_1030@182:0>:int,<make_array_1030@182:1>:int) =
        ((<make_array_1030@182:1> = 0) && (0 < <make_array_1030@182:0>))
        P[<array_max_1033@161:1>](<array_max_1033@161:0>:int,<array_max_1033@161:1>:int) =
        ((<array_max_1033@161:1> = 1) && (<array_max_1033@161:1> < (1 + <array_max_1033@161:0>)))
        P[<fail_1486@188:0>](<fail_1486@188:0>:bool) = false
      upper bounds:
        P[<array_max_1033@161:1>](var572:int,var573:int) = true
        P[<array_max_1033@138:1>](var570:int,var571:int) = true
      begin GenHcSolver.classify_pids(274855)[4]
        output:
          [<array_max_1033@138:1>;<array_max_1033@161:1>]
      end GenHcSolver.classify_pids(274855)[4] (0.000000 sec.)
      begin ApronInterface.convex_hull_interpolate(274866)[4]
        lb:((<array_max_1033@138:1> = 0) ||
            ((<array_max_1033@138:1> = 1) && (<array_max_1033@138:1> < (1 + <array_max_1033@138:0>))))
        nub:false
        begin ExtFormula.Formula.case_analysis_boolean(274885)[5]
          ts: ((<array_max_1033@138:1> = 0) ||
               ((<array_max_1033@138:1> = 1) && (<array_max_1033@138:1> < (1 + <array_max_1033@138:0>))))
          
        end ExtFormula.Formula.case_analysis_boolean(274885)[5] (0.000000 sec.)
        begin ExtFormula.Formula.case_analysis_boolean(274896)[5]
          ts: false
          
        end ExtFormula.Formula.case_analysis_boolean(274896)[5] (0.001000 sec.)
        lb':(((1 + (-1 * <array_max_1033@138:1>)) >= 0) && (<array_max_1033@138:1> >= 0))
        nub':(-1 >= 0)
        begin InterpProver.interpolate(274899)[5]
          begin InterpProver.interpolate_fresh(274900)[6]
            begin InterpProver.interpolate_log(274901)[7]
              input1: (((1 + (-1 * <array_max_1033@138:1>)) >= 0) && (<array_max_1033@138:1> >= 0))
              input2: (-1 >= 0)
              begin InterpProver.interpolate_check(274902)[8]
                begin InterpProver.interpolate_simplify(274903)[9]
                  begin InterpProver.interpolate_quick(274941)[10]
                    
                  end InterpProver.interpolate_quick(274941)[10] (0.001000 sec.)
                  
                end InterpProver.interpolate_simplify(274903)[9] (0.001000 sec.)
                
              end InterpProver.interpolate_check(274902)[8] (0.001000 sec.)
              output: true
            end InterpProver.interpolate_log(274901)[7] (0.001000 sec.)
            
          end InterpProver.interpolate_fresh(274900)[6] (0.001000 sec.)
          
        end InterpProver.interpolate(274899)[5] (0.001000 sec.)
        output:
          P[<array_max_1033@138:1>](<array_max_1033@138:0>:int,<array_max_1033@138:1>:int) = true
          P[<array_max_1033@161:1>](<array_max_1033@138:0>:int,<array_max_1033@138:1>:int) = true
      end ApronInterface.convex_hull_interpolate(274866)[4] (0.002000 sec.)
      Horn clauses:
        P[<fail_1486@188:0>](<fail_1486@188:0>:bool)|- bot
        
        P[<make_array_1030@182:1>](<k_make_array_u_1182@185:1>:int,<k_make_array_u_1182@185:0>:int),
        ((0 <= <k_make_array_u_1182@185:0>) &&
         ((<k_make_array_u_1182@185:0> >= <k_make_array_u_1182@185:1>) && <fail_1486@188:0>))
        |- P[<fail_1486@188:0>](<fail_1486@188:0>:bool)
        
        P[<<check_1148@177:3>@180:0>](<make_array_1030@182:0>:int,0:int,<check_1148@177:2>:int,<make_array_1030@182:1>:int)|- P[<make_array_1030@182:1>](
        <make_array_1030@182:0>:int,<make_array_1030@182:1>:int)
        
        P[<check_1148@177:2>](<check_1148@177:0>:int,<check_1148@177:1>:int,<check_1148@177:2>:int),
        ((<check_1148@177:1> < <check_1148@177:0>) && (<<check_1148@177:3>@180:0> = <check_1148@177:1>))
        |- P[<<check_1148@177:3>@180:0>](<check_1148@177:0>:int,<check_1148@177:1>:int,
                                         <check_1148@177:2>:int,<<check_1148@177:3>@180:0>:int)
        
         (<check_1148@177:1> = 0)
        |- P[<check_1148@177:2>](<check_1148@177:0>:int,<check_1148@177:1>:int,
                                 <check_1148@177:2>:int)
        
        P[<<make_array_1030@143:2>@155:0>](<array_max_1033@138:0>:int,<<array_max_1033@138:2>@141:0>:int,<<<array_max_1033@138:2>@141:1>@157:0>:int),
        (<array_max_1033@138:1> = 0)
        |- P[<<<array_max_1033@138:2>@141:1>@157:0>](<array_max_1033@138:0>:int,
                                                     <array_max_1033@138:1>:int,
                                                     <<array_max_1033@138:2>@141:0>:int,
                                                     <<<array_max_1033@138:2>@141:1>@157:0>:int)
        
        
        ((0 <= <make_array_1030@143:1>) &&
         ((<make_array_1030@143:1> < <make_array_1030@143:0>) &&
          (<<make_array_1030@143:2>@155:0> = <make_array_1030@143:1>)))
        |- P[<<make_array_1030@143:2>@155:0>](<make_array_1030@143:0>:int,
                                              <make_array_1030@143:1>:int,
                                              <<make_array_1030@143:2>@155:0>:int)
        
        
        ((<array_max_1033@138:1> < <array_max_1033@138:0>) && (<<array_max_1033@138:2>@141:0> = <array_max_1033@138:1>))
        |- P[<<array_max_1033@138:2>@141:0>](<array_max_1033@138:0>:int,
                                             <array_max_1033@138:1>:int,
                                             <<array_max_1033@138:2>@141:0>:int)
      lower bounds:
        P[<check_1148@177:2>](<check_1148@177:0>:int,<check_1148@177:1>:int,<check_1148@177:2>:int) =
        (<check_1148@177:1> = 0)
        P[<<make_array_1030@143:2>@155:0>](<make_array_1030@143:0>:int,<make_array_1030@143:1>:int,<<make_array_1030@143:2>@155:0>:int) =
        ((0 <= <make_array_1030@143:1>) &&
         ((<make_array_1030@143:1> < <make_array_1030@143:0>) &&
          (<<make_array_1030@143:2>@155:0> = <make_array_1030@143:1>)))
        P[<<array_max_1033@138:2>@141:0>](<array_max_1033@138:0>:int,<array_max_1033@138:1>:int,<<array_max_1033@138:2>@141:0>:int) =
        ((<array_max_1033@138:1> < <array_max_1033@138:0>) && (<<array_max_1033@138:2>@141:0> = <array_max_1033@138:1>))
        P[<<check_1148@177:3>@180:0>](<check_1148@177:0>:int,<check_1148@177:1>:int,<check_1148@177:2>:int,<<check_1148@177:3>@180:0>:int) =
        ((<check_1148@177:1> = 0) &&
         ((<check_1148@177:1> < <check_1148@177:0>) && (<<check_1148@177:3>@180:0> = <check_1148@177:1>)))
        P[<<<array_max_1033@138:2>@141:1>@157:0>](<array_max_1033@138:0>:int,<array_max_1033@138:1>:int,<<array_max_1033@138:2>@141:0>:int,<<<array_max_1033@138:2>@141:1>@157:0>:int) =
        ((<array_max_1033@138:1> = 0) &&
         ((0 <= <<array_max_1033@138:2>@141:0>) &&
          ((<<array_max_1033@138:2>@141:0> < <array_max_1033@138:0>) &&
           (<<<array_max_1033@138:2>@141:1>@157:0> = <<array_max_1033@138:2>@141:0>))))
        P[<make_array_1030@182:1>](<make_array_1030@182:0>:int,<make_array_1030@182:1>:int) =
        ((<make_array_1030@182:1> = 0) && (0 < <make_array_1030@182:0>))
        P[<fail_1486@188:0>](<fail_1486@188:0>:bool) = false
      upper bounds:
        P[<<<array_max_1033@138:2>@141:1>@157:0>](var574:int,var575:int,var576:int,var577:int) = true
      begin GenHcSolver.classify_pids(281384)[4]
        output:
          [<<<array_max_1033@138:2>@141:1>@157:0>]
      end GenHcSolver.classify_pids(281384)[4] (0.000000 sec.)
      lb:((<array_max_1033@138:1> = 0) &&
          ((0 <= <<array_max_1033@138:2>@141:0>) &&
           ((<<array_max_1033@138:2>@141:0> < <array_max_1033@138:0>) &&
            (<<<array_max_1033@138:2>@141:1>@157:0> = <<array_max_1033@138:2>@141:0>))))
      nub:false
      begin ApronInterface.convex_hull_interpolate(281387)[4]
        lb:((<array_max_1033@138:1> = 0) &&
            ((0 <= <<array_max_1033@138:2>@141:0>) &&
             ((<<array_max_1033@138:2>@141:0> < <array_max_1033@138:0>) &&
              (<<<array_max_1033@138:2>@141:1>@157:0> = <<array_max_1033@138:2>@141:0>))))
        nub:false
        begin ExtFormula.Formula.case_analysis_boolean(281436)[5]
          ts: ((<array_max_1033@138:1> = 0) &&
               ((0 <= <<array_max_1033@138:2>@141:0>) &&
                ((<<array_max_1033@138:2>@141:0> < <array_max_1033@138:0>) &&
                 (<<<array_max_1033@138:2>@141:1>@157:0> = <<array_max_1033@138:2>@141:0>))))
          
        end ExtFormula.Formula.case_analysis_boolean(281436)[5] (0.000000 sec.)
        begin ExtFormula.Formula.case_analysis_boolean(281447)[5]
          ts: false
          
        end ExtFormula.Formula.case_analysis_boolean(281447)[5] (0.000000 sec.)
        lb':(((<<<array_max_1033@138:2>@141:1>@157:0> + (-1 * <<array_max_1033@138:2>@141:0>)) = 0) &&
             ((<array_max_1033@138:1> = 0) &&
              ((<<array_max_1033@138:2>@141:0> >= 0) &&
               (((-1 + (-1 * <<array_max_1033@138:2>@141:0>)) + <array_max_1033@138:0>) >= 0))))
        nub':(-1 >= 0)
        begin InterpProver.interpolate(281450)[5]
          begin InterpProver.interpolate_fresh(281451)[6]
            begin InterpProver.interpolate_log(281452)[7]
              input1: (((<<<array_max_1033@138:2>@141:1>@157:0> + (-1 * <<array_max_1033@138:2>@141:0>)) = 0) &&
                       ((<array_max_1033@138:1> = 0) &&
                        ((<<array_max_1033@138:2>@141:0> >= 0) &&
                         (((-1 + (-1 * <<array_max_1033@138:2>@141:0>)) + <array_max_1033@138:0>) >= 0))))
              input2: (-1 >= 0)
              begin InterpProver.interpolate_check(281453)[8]
                begin InterpProver.interpolate_simplify(281454)[9]
                  begin InterpProver.interpolate_quick(281562)[10]
                    
                  end InterpProver.interpolate_quick(281562)[10] (0.000000 sec.)
                  
                end InterpProver.interpolate_simplify(281454)[9] (0.001000 sec.)
                
              end InterpProver.interpolate_check(281453)[8] (0.001000 sec.)
              output: true
            end InterpProver.interpolate_log(281452)[7] (0.001000 sec.)
            
          end InterpProver.interpolate_fresh(281451)[6] (0.001000 sec.)
          
        end InterpProver.interpolate(281450)[5] (0.001000 sec.)
        output:
          P[<<<array_max_1033@138:2>@141:1>@157:0>](<array_max_1033@138:0>:int,<array_max_1033@138:1>:int,<<array_max_1033@138:2>@141:0>:int,<<<array_max_1033@138:2>@141:1>@157:0>:int) =
          true
      end ApronInterface.convex_hull_interpolate(281387)[4] (0.002000 sec.)
      Horn clauses:
        P[<fail_1486@188:0>](<fail_1486@188:0>:bool)|- bot
        
        P[<make_array_1030@182:1>](<k_make_array_u_1182@185:1>:int,<k_make_array_u_1182@185:0>:int),
        ((0 <= <k_make_array_u_1182@185:0>) &&
         ((<k_make_array_u_1182@185:0> >= <k_make_array_u_1182@185:1>) && <fail_1486@188:0>))
        |- P[<fail_1486@188:0>](<fail_1486@188:0>:bool)
        
        P[<<check_1148@177:3>@180:0>](<make_array_1030@182:0>:int,0:int,<check_1148@177:2>:int,<make_array_1030@182:1>:int)|- P[<make_array_1030@182:1>](
        <make_array_1030@182:0>:int,<make_array_1030@182:1>:int)
        
        P[<check_1148@177:2>](<check_1148@177:0>:int,<check_1148@177:1>:int,<check_1148@177:2>:int),
        ((<check_1148@177:1> < <check_1148@177:0>) && (<<check_1148@177:3>@180:0> = <check_1148@177:1>))
        |- P[<<check_1148@177:3>@180:0>](<check_1148@177:0>:int,<check_1148@177:1>:int,
                                         <check_1148@177:2>:int,<<check_1148@177:3>@180:0>:int)
        
         (<check_1148@177:1> = 0)
        |- P[<check_1148@177:2>](<check_1148@177:0>:int,<check_1148@177:1>:int,
                                 <check_1148@177:2>:int)
        
        
        ((0 <= <make_array_1030@143:1>) &&
         ((<make_array_1030@143:1> < <make_array_1030@143:0>) &&
          (<<make_array_1030@143:2>@155:0> = <make_array_1030@143:1>)))
        |- P[<<make_array_1030@143:2>@155:0>](<make_array_1030@143:0>:int,
                                              <make_array_1030@143:1>:int,
                                              <<make_array_1030@143:2>@155:0>:int)
        
        
        ((<array_max_1033@138:1> < <array_max_1033@138:0>) && (<<array_max_1033@138:2>@141:0> = <array_max_1033@138:1>))
        |- P[<<array_max_1033@138:2>@141:0>](<array_max_1033@138:0>:int,
                                             <array_max_1033@138:1>:int,
                                             <<array_max_1033@138:2>@141:0>:int)
      lower bounds:
        P[<check_1148@177:2>](<check_1148@177:0>:int,<check_1148@177:1>:int,<check_1148@177:2>:int) =
        (<check_1148@177:1> = 0)
        P[<<make_array_1030@143:2>@155:0>](<make_array_1030@143:0>:int,<make_array_1030@143:1>:int,<<make_array_1030@143:2>@155:0>:int) =
        ((0 <= <make_array_1030@143:1>) &&
         ((<make_array_1030@143:1> < <make_array_1030@143:0>) &&
          (<<make_array_1030@143:2>@155:0> = <make_array_1030@143:1>)))
        P[<<array_max_1033@138:2>@141:0>](<array_max_1033@138:0>:int,<array_max_1033@138:1>:int,<<array_max_1033@138:2>@141:0>:int) =
        ((<array_max_1033@138:1> < <array_max_1033@138:0>) && (<<array_max_1033@138:2>@141:0> = <array_max_1033@138:1>))
        P[<<check_1148@177:3>@180:0>](<check_1148@177:0>:int,<check_1148@177:1>:int,<check_1148@177:2>:int,<<check_1148@177:3>@180:0>:int) =
        ((<check_1148@177:1> = 0) &&
         ((<check_1148@177:1> < <check_1148@177:0>) && (<<check_1148@177:3>@180:0> = <check_1148@177:1>)))
        P[<make_array_1030@182:1>](<make_array_1030@182:0>:int,<make_array_1030@182:1>:int) =
        ((<make_array_1030@182:1> = 0) && (0 < <make_array_1030@182:0>))
        P[<fail_1486@188:0>](<fail_1486@188:0>:bool) = false
      upper bounds:
        P[<<make_array_1030@143:2>@155:0>](var578:int,var579:int,var580:int) = true
      begin GenHcSolver.classify_pids(284947)[4]
        output:
          [<<make_array_1030@143:2>@155:0>]
      end GenHcSolver.classify_pids(284947)[4] (0.000000 sec.)
      lb:((0 <= <make_array_1030@143:1>) &&
          ((<make_array_1030@143:1> < <make_array_1030@143:0>) &&
           (<<make_array_1030@143:2>@155:0> = <make_array_1030@143:1>)))
      nub:false
      begin ApronInterface.convex_hull_interpolate(284950)[4]
        lb:((0 <= <make_array_1030@143:1>) &&
            ((<make_array_1030@143:1> < <make_array_1030@143:0>) &&
             (<<make_array_1030@143:2>@155:0> = <make_array_1030@143:1>)))
        nub:false
        begin ExtFormula.Formula.case_analysis_boolean(284983)[5]
          ts: ((0 <= <make_array_1030@143:1>) &&
               ((<make_array_1030@143:1> < <make_array_1030@143:0>) &&
                (<<make_array_1030@143:2>@155:0> = <make_array_1030@143:1>)))
          
        end ExtFormula.Formula.case_analysis_boolean(284983)[5] (0.001000 sec.)
        begin ExtFormula.Formula.case_analysis_boolean(284993)[5]
          ts: false
          
        end ExtFormula.Formula.case_analysis_boolean(284993)[5] (0.000000 sec.)
        lb':(((<<make_array_1030@143:2>@155:0> + (-1 * <make_array_1030@143:1>)) = 0) &&
             ((<make_array_1030@143:1> >= 0) &&
              (((-1 + (-1 * <make_array_1030@143:1>)) + <make_array_1030@143:0>) >= 0)))
        nub':(-1 >= 0)
        begin InterpProver.interpolate(284996)[5]
          begin InterpProver.interpolate_fresh(284997)[6]
            begin InterpProver.interpolate_log(284998)[7]
              input1: (((<<make_array_1030@143:2>@155:0> + (-1 * <make_array_1030@143:1>)) = 0) &&
                       ((<make_array_1030@143:1> >= 0) &&
                        (((-1 + (-1 * <make_array_1030@143:1>)) + <make_array_1030@143:0>) >= 0)))
              input2: (-1 >= 0)
              begin InterpProver.interpolate_check(284999)[8]
                begin InterpProver.interpolate_simplify(285000)[9]
                  begin InterpProver.interpolate_quick(285062)[10]
                    
                  end InterpProver.interpolate_quick(285062)[10] (0.001999 sec.)
                  
                end InterpProver.interpolate_simplify(285000)[9] (0.001999 sec.)
                
              end InterpProver.interpolate_check(284999)[8] (0.001999 sec.)
              output: true
            end InterpProver.interpolate_log(284998)[7] (0.001999 sec.)
            
          end InterpProver.interpolate_fresh(284997)[6] (0.001999 sec.)
          
        end InterpProver.interpolate(284996)[5] (0.001999 sec.)
        output:
          P[<<make_array_1030@143:2>@155:0>](<make_array_1030@143:0>:int,<make_array_1030@143:1>:int,<<make_array_1030@143:2>@155:0>:int) =
          true
      end ApronInterface.convex_hull_interpolate(284950)[4] (0.002999 sec.)
      Horn clauses:
        P[<fail_1486@188:0>](<fail_1486@188:0>:bool)|- bot
        
        P[<make_array_1030@182:1>](<k_make_array_u_1182@185:1>:int,<k_make_array_u_1182@185:0>:int),
        ((0 <= <k_make_array_u_1182@185:0>) &&
         ((<k_make_array_u_1182@185:0> >= <k_make_array_u_1182@185:1>) && <fail_1486@188:0>))
        |- P[<fail_1486@188:0>](<fail_1486@188:0>:bool)
        
        P[<<check_1148@177:3>@180:0>](<make_array_1030@182:0>:int,0:int,<check_1148@177:2>:int,<make_array_1030@182:1>:int)|- P[<make_array_1030@182:1>](
        <make_array_1030@182:0>:int,<make_array_1030@182:1>:int)
        
        P[<check_1148@177:2>](<check_1148@177:0>:int,<check_1148@177:1>:int,<check_1148@177:2>:int),
        ((<check_1148@177:1> < <check_1148@177:0>) && (<<check_1148@177:3>@180:0> = <check_1148@177:1>))
        |- P[<<check_1148@177:3>@180:0>](<check_1148@177:0>:int,<check_1148@177:1>:int,
                                         <check_1148@177:2>:int,<<check_1148@177:3>@180:0>:int)
        
         (<check_1148@177:1> = 0)
        |- P[<check_1148@177:2>](<check_1148@177:0>:int,<check_1148@177:1>:int,
                                 <check_1148@177:2>:int)
        
        
        ((<array_max_1033@138:1> < <array_max_1033@138:0>) && (<<array_max_1033@138:2>@141:0> = <array_max_1033@138:1>))
        |- P[<<array_max_1033@138:2>@141:0>](<array_max_1033@138:0>:int,
                                             <array_max_1033@138:1>:int,
                                             <<array_max_1033@138:2>@141:0>:int)
      lower bounds:
        P[<check_1148@177:2>](<check_1148@177:0>:int,<check_1148@177:1>:int,<check_1148@177:2>:int) =
        (<check_1148@177:1> = 0)
        P[<<array_max_1033@138:2>@141:0>](<array_max_1033@138:0>:int,<array_max_1033@138:1>:int,<<array_max_1033@138:2>@141:0>:int) =
        ((<array_max_1033@138:1> < <array_max_1033@138:0>) && (<<array_max_1033@138:2>@141:0> = <array_max_1033@138:1>))
        P[<<check_1148@177:3>@180:0>](<check_1148@177:0>:int,<check_1148@177:1>:int,<check_1148@177:2>:int,<<check_1148@177:3>@180:0>:int) =
        ((<check_1148@177:1> = 0) &&
         ((<check_1148@177:1> < <check_1148@177:0>) && (<<check_1148@177:3>@180:0> = <check_1148@177:1>)))
        P[<make_array_1030@182:1>](<make_array_1030@182:0>:int,<make_array_1030@182:1>:int) =
        ((<make_array_1030@182:1> = 0) && (0 < <make_array_1030@182:0>))
        P[<fail_1486@188:0>](<fail_1486@188:0>:bool) = false
      upper bounds:
        P[<<array_max_1033@138:2>@141:0>](var581:int,var582:int,var583:int) = true
      begin GenHcSolver.classify_pids(287648)[4]
        output:
          [<<array_max_1033@138:2>@141:0>]
      end GenHcSolver.classify_pids(287648)[4] (0.000000 sec.)
      lb:((<array_max_1033@138:1> < <array_max_1033@138:0>) &&
          (<<array_max_1033@138:2>@141:0> = <array_max_1033@138:1>))
      nub:false
      begin ApronInterface.convex_hull_interpolate(287651)[4]
        lb:((<array_max_1033@138:1> < <array_max_1033@138:0>) &&
            (<<array_max_1033@138:2>@141:0> = <array_max_1033@138:1>))
        nub:false
        begin ExtFormula.Formula.case_analysis_boolean(287669)[5]
          ts: ((<array_max_1033@138:1> < <array_max_1033@138:0>) &&
               (<<array_max_1033@138:2>@141:0> = <array_max_1033@138:1>))
          
        end ExtFormula.Formula.case_analysis_boolean(287669)[5] (0.001000 sec.)
        begin ExtFormula.Formula.case_analysis_boolean(287678)[5]
          ts: false
          
        end ExtFormula.Formula.case_analysis_boolean(287678)[5] (0.000000 sec.)
        lb':(((<<array_max_1033@138:2>@141:0> + (-1 * <array_max_1033@138:1>)) = 0) &&
             (((-1 + (-1 * <array_max_1033@138:1>)) + <array_max_1033@138:0>) >= 0))
        nub':(-1 >= 0)
        begin InterpProver.interpolate(287681)[5]
          begin InterpProver.interpolate_fresh(287682)[6]
            begin InterpProver.interpolate_log(287683)[7]
              input1: (((<<array_max_1033@138:2>@141:0> + (-1 * <array_max_1033@138:1>)) = 0) &&
                       (((-1 + (-1 * <array_max_1033@138:1>)) + <array_max_1033@138:0>) >= 0))
              input2: (-1 >= 0)
              begin InterpProver.interpolate_check(287684)[8]
                begin InterpProver.interpolate_simplify(287685)[9]
                  begin InterpProver.interpolate_quick(287720)[10]
                    
                  end InterpProver.interpolate_quick(287720)[10] (0.000000 sec.)
                  
                end InterpProver.interpolate_simplify(287685)[9] (0.000000 sec.)
                
              end InterpProver.interpolate_check(287684)[8] (0.000000 sec.)
              output: true
            end InterpProver.interpolate_log(287683)[7] (0.000000 sec.)
            
          end InterpProver.interpolate_fresh(287682)[6] (0.000000 sec.)
          
        end InterpProver.interpolate(287681)[5] (0.000000 sec.)
        output:
          P[<<array_max_1033@138:2>@141:0>](<array_max_1033@138:0>:int,<array_max_1033@138:1>:int,<<array_max_1033@138:2>@141:0>:int) =
          true
      end ApronInterface.convex_hull_interpolate(287651)[4] (0.001000 sec.)
      Horn clauses:
        P[<fail_1486@188:0>](<fail_1486@188:0>:bool)|- bot
        
        P[<make_array_1030@182:1>](<k_make_array_u_1182@185:1>:int,<k_make_array_u_1182@185:0>:int),
        ((0 <= <k_make_array_u_1182@185:0>) &&
         ((<k_make_array_u_1182@185:0> >= <k_make_array_u_1182@185:1>) && <fail_1486@188:0>))
        |- P[<fail_1486@188:0>](<fail_1486@188:0>:bool)
        
        P[<<check_1148@177:3>@180:0>](<make_array_1030@182:0>:int,0:int,<check_1148@177:2>:int,<make_array_1030@182:1>:int)|- P[<make_array_1030@182:1>](
        <make_array_1030@182:0>:int,<make_array_1030@182:1>:int)
        
        P[<check_1148@177:2>](<check_1148@177:0>:int,<check_1148@177:1>:int,<check_1148@177:2>:int),
        ((<check_1148@177:1> < <check_1148@177:0>) && (<<check_1148@177:3>@180:0> = <check_1148@177:1>))
        |- P[<<check_1148@177:3>@180:0>](<check_1148@177:0>:int,<check_1148@177:1>:int,
                                         <check_1148@177:2>:int,<<check_1148@177:3>@180:0>:int)
        
         (<check_1148@177:1> = 0)
        |- P[<check_1148@177:2>](<check_1148@177:0>:int,<check_1148@177:1>:int,
                                 <check_1148@177:2>:int)
      lower bounds:
        P[<check_1148@177:2>](<check_1148@177:0>:int,<check_1148@177:1>:int,<check_1148@177:2>:int) =
        (<check_1148@177:1> = 0)
        P[<<check_1148@177:3>@180:0>](<check_1148@177:0>:int,<check_1148@177:1>:int,<check_1148@177:2>:int,<<check_1148@177:3>@180:0>:int) =
        ((<check_1148@177:1> = 0) &&
         ((<check_1148@177:1> < <check_1148@177:0>) && (<<check_1148@177:3>@180:0> = <check_1148@177:1>)))
        P[<make_array_1030@182:1>](<make_array_1030@182:0>:int,<make_array_1030@182:1>:int) =
        ((<make_array_1030@182:1> = 0) && (0 < <make_array_1030@182:0>))
        P[<fail_1486@188:0>](<fail_1486@188:0>:bool) = false
      upper bounds:
        P[<fail_1486@188:0>](var585:bool) = true
      begin GenHcSolver.classify_pids(289680)[4]
        output:
          [<fail_1486@188:0>]
      end GenHcSolver.classify_pids(289680)[4] (0.000000 sec.)
      lb:false
      nub:false
      begin ApronInterface.convex_hull_interpolate(289683)[4]
        lb:false
        nub:false
        begin ExtFormula.Formula.case_analysis_boolean(289686)[5]
          ts: false
          
        end ExtFormula.Formula.case_analysis_boolean(289686)[5] (0.000000 sec.)
        begin ExtFormula.Formula.case_analysis_boolean(289691)[5]
          ts: false
          
        end ExtFormula.Formula.case_analysis_boolean(289691)[5] (0.000000 sec.)
        lb':(-1 >= 0)
        nub':(-1 >= 0)
        begin InterpProver.interpolate(289694)[5]
          begin InterpProver.interpolate_fresh(289695)[6]
            begin InterpProver.interpolate_log(289696)[7]
              input1: (-1 >= 0)
              input2: (-1 >= 0)
              begin InterpProver.interpolate_check(289697)[8]
                begin InterpProver.interpolate_simplify(289698)[9]
                  begin InterpProver.interpolate_quick(289713)[10]
                    
                  end InterpProver.interpolate_quick(289713)[10] (0.000000 sec.)
                  begin minimizing # of disjunctions(289717)[10]
                    input: false
                    output: false
                  end minimizing # of disjunctions(289717)[10] (0.000000 sec.)
                  
                end InterpProver.interpolate_simplify(289698)[9] (0.000000 sec.)
                
              end InterpProver.interpolate_check(289697)[8] (0.001000 sec.)
              output: false
            end InterpProver.interpolate_log(289696)[7] (0.001000 sec.)
            
          end InterpProver.interpolate_fresh(289695)[6] (0.001000 sec.)
          
        end InterpProver.interpolate(289694)[5] (0.001000 sec.)
        output:
          P[<fail_1486@188:0>](<fail_1486@188:0>:bool) = false
      end ApronInterface.convex_hull_interpolate(289683)[4] (0.001000 sec.)
      Horn clauses:
        P[<make_array_1030@182:1>](<k_make_array_u_1182@185:1>:int,<k_make_array_u_1182@185:0>:int),
        ((<k_make_array_u_1182@185:0> >= <k_make_array_u_1182@185:1>) && (0 <= <k_make_array_u_1182@185:0>)) |- bot
        
        P[<<check_1148@177:3>@180:0>](<make_array_1030@182:0>:int,0:int,<check_1148@177:2>:int,<make_array_1030@182:1>:int)|- P[<make_array_1030@182:1>](
        <make_array_1030@182:0>:int,<make_array_1030@182:1>:int)
        
        P[<check_1148@177:2>](<check_1148@177:0>:int,<check_1148@177:1>:int,<check_1148@177:2>:int),
        ((<check_1148@177:1> < <check_1148@177:0>) && (<<check_1148@177:3>@180:0> = <check_1148@177:1>))
        |- P[<<check_1148@177:3>@180:0>](<check_1148@177:0>:int,<check_1148@177:1>:int,
                                         <check_1148@177:2>:int,<<check_1148@177:3>@180:0>:int)
        
         (<check_1148@177:1> = 0)
        |- P[<check_1148@177:2>](<check_1148@177:0>:int,<check_1148@177:1>:int,
                                 <check_1148@177:2>:int)
      lower bounds:
        P[<check_1148@177:2>](<check_1148@177:0>:int,<check_1148@177:1>:int,<check_1148@177:2>:int) =
        (<check_1148@177:1> = 0)
        P[<<check_1148@177:3>@180:0>](<check_1148@177:0>:int,<check_1148@177:1>:int,<check_1148@177:2>:int,<<check_1148@177:3>@180:0>:int) =
        ((<check_1148@177:1> = 0) &&
         ((<check_1148@177:1> < <check_1148@177:0>) && (<<check_1148@177:3>@180:0> = <check_1148@177:1>)))
        P[<make_array_1030@182:1>](<make_array_1030@182:0>:int,<make_array_1030@182:1>:int) =
        ((<make_array_1030@182:1> = 0) && (0 < <make_array_1030@182:0>))
      upper bounds:
        P[<make_array_1030@182:1>](var586:int,var587:int) = ((var587 < var586) || (0 > var587))
      begin GenHcSolver.classify_pids(291583)[4]
        output:
          [<make_array_1030@182:1>]
      end GenHcSolver.classify_pids(291583)[4] (0.000000 sec.)
      lb:((<make_array_1030@182:1> = 0) && (0 < <make_array_1030@182:0>))
      nub:(not ((<make_array_1030@182:1> < <make_array_1030@182:0>) || (0 > <make_array_1030@182:1>)))
      begin ApronInterface.convex_hull_interpolate(291586)[4]
        lb:((<make_array_1030@182:1> = 0) && (0 < <make_array_1030@182:0>))
        nub:(not ((<make_array_1030@182:1> < <make_array_1030@182:0>) || (0 > <make_array_1030@182:1>)))
        begin ExtFormula.Formula.case_analysis_boolean(291596)[5]
          ts: ((<make_array_1030@182:1> = 0) && (0 < <make_array_1030@182:0>))
          
        end ExtFormula.Formula.case_analysis_boolean(291596)[5] (0.000000 sec.)
        begin ExtFormula.Formula.case_analysis_boolean(291615)[5]
          ts: ((<make_array_1030@182:1> >= <make_array_1030@182:0>) && (0 <= <make_array_1030@182:1>))
          
        end ExtFormula.Formula.case_analysis_boolean(291615)[5] (0.000000 sec.)
        lb':((<make_array_1030@182:1> = 0) && ((-1 + <make_array_1030@182:0>) >= 0))
        nub':(((<make_array_1030@182:1> + (-1 * <make_array_1030@182:0>)) >= 0) && (<make_array_1030@182:1> >= 0))
        begin InterpProver.interpolate(291621)[5]
          begin InterpProver.interpolate_fresh(291622)[6]
            begin InterpProver.interpolate_log(291623)[7]
              input1: ((<make_array_1030@182:1> = 0) && ((-1 + <make_array_1030@182:0>) >= 0))
              input2: (((<make_array_1030@182:1> + (-1 * <make_array_1030@182:0>)) >= 0) &&
                       (<make_array_1030@182:1> >= 0))
              begin InterpProver.interpolate_check(291624)[8]
                begin InterpProver.interpolate_simplify(291625)[9]
                  begin InterpProver.interpolate_quick(291682)[10]
                    begin CsisatInterface.interpolate_csisat_wrap(291691)[11]
                      begin CsisatInterface.interpolate_csisat_post_process(291692)[12]
                        begin CsisatInterface.interpolate_csisat_log(291693)[13]
                          input1: (0 = v_sep_make_array_1030_sep_182_sep_1 & 1 <= v_sep_make_array_1030_sep_182_sep_0)
                          input2: (0 <= v_sep_make_array_1030_sep_182_sep_1 & v_sep_make_array_1030_sep_182_sep_0 <= v_sep_make_array_1030_sep_182_sep_1)
                          begin CsisatInterface.interpolate_csisat_raw(291694)[14]
                            
                          end CsisatInterface.interpolate_csisat_raw(291694)[14] (0.000000 sec.)
                          output: (-2*v_sep_make_array_1030_sep_182_sep_0 + 2*v_sep_make_array_1030_sep_182_sep_1) <= -2
                          
                        end CsisatInterface.interpolate_csisat_log(291693)[13] (0.000000 sec.)
                        after simplification: (-2*v_sep_make_array_1030_sep_182_sep_0 + 2*v_sep_make_array_1030_sep_182_sep_1) <= -2
                        after dnf conversion: (((-2*v_sep_make_array_1030_sep_182_sep_0 + 2*v_sep_make_array_1030_sep_182_sep_1) <= -2))
                        
                      end CsisatInterface.interpolate_csisat_post_process(291692)[12] (0.000000 sec.)
                      
                    end CsisatInterface.interpolate_csisat_wrap(291691)[11] (0.000000 sec.)
                    
                  end InterpProver.interpolate_quick(291682)[10] (0.001000 sec.)
                  
                end InterpProver.interpolate_simplify(291625)[9] (0.001000 sec.)
                
              end InterpProver.interpolate_check(291624)[8] (0.001000 sec.)
              output: ((1 + <make_array_1030@182:1>) <= <make_array_1030@182:0>)
            end InterpProver.interpolate_log(291623)[7] (0.001999 sec.)
            
          end InterpProver.interpolate_fresh(291622)[6] (0.001999 sec.)
          
        end InterpProver.interpolate(291621)[5] (0.001999 sec.)
        output:
          P[<make_array_1030@182:1>](<make_array_1030@182:0>:int,<make_array_1030@182:1>:int) =
          ((1 + <make_array_1030@182:1>) <= <make_array_1030@182:0>)
      end ApronInterface.convex_hull_interpolate(291586)[4] (0.001999 sec.)
      Horn clauses:
        P[<<check_1148@177:3>@180:0>](<make_array_1030@182:0>:int,0:int,<check_1148@177:2>:int,<make_array_1030@182:1>:int),
        ((1 + <make_array_1030@182:1>) > <make_array_1030@182:0>) |- bot
        
        P[<check_1148@177:2>](<check_1148@177:0>:int,<check_1148@177:1>:int,<check_1148@177:2>:int),
        ((<check_1148@177:1> < <check_1148@177:0>) && (<<check_1148@177:3>@180:0> = <check_1148@177:1>))
        |- P[<<check_1148@177:3>@180:0>](<check_1148@177:0>:int,<check_1148@177:1>:int,
                                         <check_1148@177:2>:int,<<check_1148@177:3>@180:0>:int)
        
         (<check_1148@177:1> = 0)
        |- P[<check_1148@177:2>](<check_1148@177:0>:int,<check_1148@177:1>:int,
                                 <check_1148@177:2>:int)
      lower bounds:
        P[<check_1148@177:2>](<check_1148@177:0>:int,<check_1148@177:1>:int,<check_1148@177:2>:int) =
        (<check_1148@177:1> = 0)
        P[<<check_1148@177:3>@180:0>](<check_1148@177:0>:int,<check_1148@177:1>:int,<check_1148@177:2>:int,<<check_1148@177:3>@180:0>:int) =
        ((<check_1148@177:1> = 0) &&
         ((<check_1148@177:1> < <check_1148@177:0>) && (<<check_1148@177:3>@180:0> = <check_1148@177:1>)))
      upper bounds:
        P[<<check_1148@177:3>@180:0>](var588:int,var589:int,var590:int,var591:int) =
        ((var589 <> 0) || ((1 + var591) <= var588))
      begin GenHcSolver.classify_pids(293132)[4]
        output:
          [<<check_1148@177:3>@180:0>]
      end GenHcSolver.classify_pids(293132)[4] (0.000000 sec.)
      lb:((<check_1148@177:1> = 0) &&
          ((<check_1148@177:1> < <check_1148@177:0>) && (<<check_1148@177:3>@180:0> = <check_1148@177:1>)))
      nub:(not ((<check_1148@177:1> <> 0) || ((1 + <<check_1148@177:3>@180:0>) <= <check_1148@177:0>)))
      begin ApronInterface.convex_hull_interpolate(293135)[4]
        lb:((<check_1148@177:1> = 0) &&
            ((<check_1148@177:1> < <check_1148@177:0>) && (<<check_1148@177:3>@180:0> = <check_1148@177:1>)))
        nub:(not ((<check_1148@177:1> <> 0) || ((1 + <<check_1148@177:3>@180:0>) <= <check_1148@177:0>)))
        begin ExtFormula.Formula.case_analysis_boolean(293164)[5]
          ts: ((<check_1148@177:1> = 0) &&
               ((<check_1148@177:1> < <check_1148@177:0>) && (<<check_1148@177:3>@180:0> = <check_1148@177:1>)))
          
        end ExtFormula.Formula.case_analysis_boolean(293164)[5] (0.000000 sec.)
        begin ExtFormula.Formula.case_analysis_boolean(293187)[5]
          ts: ((<check_1148@177:1> = 0) && ((1 + <<check_1148@177:3>@180:0>) > <check_1148@177:0>))
          
        end ExtFormula.Formula.case_analysis_boolean(293187)[5] (0.000000 sec.)
        lb':((<<check_1148@177:3>@180:0> = 0) && ((<check_1148@177:1> = 0) && ((-1 + <check_1148@177:0>) >= 0)))
        nub':((<check_1148@177:1> = 0) && ((<<check_1148@177:3>@180:0> + (-1 * <check_1148@177:0>)) >= 0))
        begin InterpProver.interpolate(293194)[5]
          begin InterpProver.interpolate_fresh(293195)[6]
            begin InterpProver.interpolate_log(293196)[7]
              input1: ((<<check_1148@177:3>@180:0> = 0) &&
                       ((<check_1148@177:1> = 0) && ((-1 + <check_1148@177:0>) >= 0)))
              input2: ((<check_1148@177:1> = 0) && ((<<check_1148@177:3>@180:0> + (-1 * <check_1148@177:0>)) >= 0))
              begin InterpProver.interpolate_check(293197)[8]
                begin InterpProver.interpolate_simplify(293198)[9]
                  begin InterpProver.interpolate_quick(293269)[10]
                    begin CsisatInterface.interpolate_csisat_wrap(293278)[11]
                      begin CsisatInterface.interpolate_csisat_post_process(293279)[12]
                        begin CsisatInterface.interpolate_csisat_log(293280)[13]
                          input1: (0 = v_sep_check_1148_sep_177_sep_1 & 0 = v_sep_check_1148_sep_177_sep_3_sep_180_sep_0 & 1 <= v_sep_check_1148_sep_177_sep_0)
                          input2: (0 = v_sep_check_1148_sep_177_sep_1 & v_sep_check_1148_sep_177_sep_0 <= v_sep_check_1148_sep_177_sep_3_sep_180_sep_0)
                          begin CsisatInterface.interpolate_csisat_raw(293281)[14]
                            
                          end CsisatInterface.interpolate_csisat_raw(293281)[14] (0.000000 sec.)
                          output: (-2*v_sep_check_1148_sep_177_sep_0 + 2*v_sep_check_1148_sep_177_sep_3_sep_180_sep_0) <= -2
                          
                        end CsisatInterface.interpolate_csisat_log(293280)[13] (0.000000 sec.)
                        after simplification: (-2*v_sep_check_1148_sep_177_sep_0 + 2*v_sep_check_1148_sep_177_sep_3_sep_180_sep_0) <= -2
                        after dnf conversion: (((-2*v_sep_check_1148_sep_177_sep_0 + 2*v_sep_check_1148_sep_177_sep_3_sep_180_sep_0) <= -2))
                        
                      end CsisatInterface.interpolate_csisat_post_process(293279)[12] (0.000000 sec.)
                      
                    end CsisatInterface.interpolate_csisat_wrap(293278)[11] (0.000000 sec.)
                    
                  end InterpProver.interpolate_quick(293269)[10] (0.000000 sec.)
                  
                end InterpProver.interpolate_simplify(293198)[9] (0.000000 sec.)
                
              end InterpProver.interpolate_check(293197)[8] (0.001000 sec.)
              output: ((1 + <<check_1148@177:3>@180:0>) <= <check_1148@177:0>)
            end InterpProver.interpolate_log(293196)[7] (0.001000 sec.)
            
          end InterpProver.interpolate_fresh(293195)[6] (0.001000 sec.)
          
        end InterpProver.interpolate(293194)[5] (0.001000 sec.)
        output:
          P[<<check_1148@177:3>@180:0>](<check_1148@177:0>:int,<check_1148@177:1>:int,<check_1148@177:2>:int,<<check_1148@177:3>@180:0>:int) =
          ((1 + <<check_1148@177:3>@180:0>) <= <check_1148@177:0>)
      end ApronInterface.convex_hull_interpolate(293135)[4] (0.002000 sec.)
      Horn clauses:
         (<check_1148@177:1> = 0)
        |- P[<check_1148@177:2>](<check_1148@177:0>:int,<check_1148@177:1>:int,
                                 <check_1148@177:2>:int)
      lower bounds:
        P[<check_1148@177:2>](<check_1148@177:0>:int,<check_1148@177:1>:int,<check_1148@177:2>:int) =
        (<check_1148@177:1> = 0)
      upper bounds:
        P[<check_1148@177:2>](var592:int,var593:int,var594:int) = true
      begin GenHcSolver.classify_pids(293686)[4]
        output:
          [<check_1148@177:2>]
      end GenHcSolver.classify_pids(293686)[4] (0.000000 sec.)
      lb:(<check_1148@177:1> = 0)
      nub:false
      begin ApronInterface.convex_hull_interpolate(293689)[4]
        lb:(<check_1148@177:1> = 0)
        nub:false
        begin ExtFormula.Formula.case_analysis_boolean(293693)[5]
          ts: (<check_1148@177:1> = 0)
          
        end ExtFormula.Formula.case_analysis_boolean(293693)[5] (0.000000 sec.)
        begin ExtFormula.Formula.case_analysis_boolean(293699)[5]
          ts: false
          
        end ExtFormula.Formula.case_analysis_boolean(293699)[5] (0.000000 sec.)
        lb':(<check_1148@177:1> = 0)
        nub':(-1 >= 0)
        begin InterpProver.interpolate(293702)[5]
          begin InterpProver.interpolate_fresh(293703)[6]
            begin InterpProver.interpolate_log(293704)[7]
              input1: (<check_1148@177:1> = 0)
              input2: (-1 >= 0)
              begin InterpProver.interpolate_check(293705)[8]
                begin InterpProver.interpolate_simplify(293706)[9]
                  begin InterpProver.interpolate_quick(293726)[10]
                    
                  end InterpProver.interpolate_quick(293726)[10] (0.000000 sec.)
                  
                end InterpProver.interpolate_simplify(293706)[9] (0.000000 sec.)
                
              end InterpProver.interpolate_check(293705)[8] (0.000000 sec.)
              output: true
            end InterpProver.interpolate_log(293704)[7] (0.000000 sec.)
            
          end InterpProver.interpolate_fresh(293703)[6] (0.000000 sec.)
          
        end InterpProver.interpolate(293702)[5] (0.000000 sec.)
        output:
          P[<check_1148@177:2>](<check_1148@177:0>:int,<check_1148@177:1>:int,<check_1148@177:2>:int) = true
      end ApronInterface.convex_hull_interpolate(293689)[4] (0.001000 sec.)
      begin HcSolver.check_validity(293792)[4]
        input:
          P[<fail_1486@188:0>](<fail_1486@188:0>:bool)|- bot
          
          P[<make_array_1030@182:1>](<k_make_array_u_1182@185:1>:int,<k_make_array_u_1182@185:0>:int),
          ((0 <= <k_make_array_u_1182@185:0>) &&
           ((<k_make_array_u_1182@185:0> >= <k_make_array_u_1182@185:1>) && <fail_1486@188:0>))
          |- P[<fail_1486@188:0>](<fail_1486@188:0>:bool)
          
          P[<<array_max_1033@138:3>@173:0>](<make_array_1030@182:0>:int,0:int,<check_1148@177:2>:int),
          P[<<check_1148@177:3>@180:0>](<make_array_1030@182:0>:int,0:int,<check_1148@177:2>:int,<make_array_1030@182:1>:int)|- P[<make_array_1030@182:1>](
          <make_array_1030@182:0>:int,<make_array_1030@182:1>:int)
          
          P[<check_1148@177:2>](<check_1148@177:0>:int,<check_1148@177:1>:int,<check_1148@177:2>:int),
          ((<check_1148@177:1> < <check_1148@177:0>) && (<<check_1148@177:3>@180:0> = <check_1148@177:1>))
          |- P[<<check_1148@177:3>@180:0>](<check_1148@177:0>:int,<check_1148@177:1>:int,
                                           <check_1148@177:2>:int,<<check_1148@177:3>@180:0>:int)
          
          P[<<array_max_1033@138:3>@173:0>](<check_1148@177:0>:int,0:int,<check_1148@177:2>:int),
          (<check_1148@177:1> = 0)
          |- P[<check_1148@177:2>](<check_1148@177:0>:int,<check_1148@177:1>:int,
                                   <check_1148@177:2>:int)
          
          P[<array_max_1033@138:1>](<array_max_1033@138:0>:int,<array_max_1033@138:1>:int),
          P[<<<array_max_1033@138:2>@141:1>@157:0>](<array_max_1033@138:0>:int,<array_max_1033@138:1>:int,<array_max_1033@138:1>:int,<<array_max_1033@138:3>@173:0>:int),
          P[<<array_max_1033@161:3>@164:0>](<array_max_1033@138:0>:int,(
                                            1 + <array_max_1033@138:1>):int,var494:int),
          ((<<array_max_1033@138:3>@173:0> > var494) && (<array_max_1033@138:1> < <array_max_1033@138:0>))
          |- P[<<array_max_1033@138:3>@173:0>](<array_max_1033@138:0>:int,
                                               <array_max_1033@138:1>:int,
                                               <<array_max_1033@138:3>@173:0>:int)
          
          P[<array_max_1033@161:1>](<array_max_1033@161:0>:int,<array_max_1033@161:1>:int),
          ((<<array_max_1033@161:3>@164:0> = 0) && (<array_max_1033@161:1> >= <array_max_1033@161:0>))
          |- P[<<array_max_1033@161:3>@164:0>](<array_max_1033@161:0>:int,
                                               <array_max_1033@161:1>:int,
                                               <<array_max_1033@161:3>@164:0>:int)
          
          P[<array_max_1033@138:1>](<array_max_1033@161:0>:int,(-1 + <array_max_1033@161:1>):int),
          P[<<<array_max_1033@138:2>@141:1>@157:0>](<array_max_1033@161:0>:int,(
                                                    -1 + <array_max_1033@161:1>):int,(
                                                    -1 + <array_max_1033@161:1>):int,<f_array_max_1480@159:4>:int),
          (<array_max_1033@161:1> < (1 + <array_max_1033@161:0>))
          |- P[<array_max_1033@161:1>](<array_max_1033@161:0>:int,<array_max_1033@161:1>:int)
          
          P[<<make_array_1030@143:2>@155:0>](<array_max_1033@138:0>:int,<<array_max_1033@138:2>@141:0>:int,<<<array_max_1033@138:2>@141:1>@157:0>:int),
          P[<array_max_1033@138:1>](<array_max_1033@138:0>:int,<array_max_1033@138:1>:int),
          (<array_max_1033@138:1> = 0)
          |- P[<<<array_max_1033@138:2>@141:1>@157:0>](<array_max_1033@138:0>:int,
                                                       <array_max_1033@138:1>:int,
                                                       <<array_max_1033@138:2>@141:0>:int,
                                                       <<<array_max_1033@138:2>@141:1>@157:0>:int)
          
          P[<make_array_1030@143:1>](<make_array_1030@143:0>:int,<make_array_1030@143:1>:int),
          ((0 <= <make_array_1030@143:1>) &&
           ((<make_array_1030@143:1> < <make_array_1030@143:0>) &&
            (<<make_array_1030@143:2>@155:0> = <make_array_1030@143:1>)))
          |- P[<<make_array_1030@143:2>@155:0>](<make_array_1030@143:0>:int,
                                                <make_array_1030@143:1>:int,
                                                <<make_array_1030@143:2>@155:0>:int)
          
          P[<<array_max_1033@138:2>@141:0>](<make_array_1030@143:0>:int,0:int,<make_array_1030@143:1>:int)|- P[<make_array_1030@143:1>](
          <make_array_1030@143:0>:int,<make_array_1030@143:1>:int)
          
          P[<array_max_1033@138:1>](<array_max_1033@138:0>:int,<array_max_1033@138:1>:int),
          ((<array_max_1033@138:1> < <array_max_1033@138:0>) &&
           (<<array_max_1033@138:2>@141:0> = <array_max_1033@138:1>))
          |- P[<<array_max_1033@138:2>@141:0>](<array_max_1033@138:0>:int,
                                               <array_max_1033@138:1>:int,
                                               <<array_max_1033@138:2>@141:0>:int)
          
           (<array_max_1033@138:1> = 0)
          |- P[<array_max_1033@138:1>](<array_max_1033@138:0>:int,<array_max_1033@138:1>:int)
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        
      end HcSolver.check_validity(293792)[4] (0.003999 sec.)
      solution:
        P[<fail_1486@188:0>](<fail_1486@188:0>:bool) = false
        P[<make_array_1030@182:1>](<make_array_1030@182:0>:int,<make_array_1030@182:1>:int) =
        ((1 + <make_array_1030@182:1>) <= <make_array_1030@182:0>)
        P[<<check_1148@177:3>@180:0>](<check_1148@177:0>:int,<check_1148@177:1>:int,<check_1148@177:2>:int,<<check_1148@177:3>@180:0>:int) =
        ((1 + <<check_1148@177:3>@180:0>) <= <check_1148@177:0>)
        P[<check_1148@177:2>](<check_1148@177:0>:int,<check_1148@177:1>:int,<check_1148@177:2>:int) = true
        P[<<array_max_1033@138:3>@173:0>](<array_max_1033@161:0>:int,<array_max_1033@161:1>:int,<<array_max_1033@161:3>@164:0>:int) =
        true
        P[<<array_max_1033@161:3>@164:0>](<array_max_1033@161:0>:int,<array_max_1033@161:1>:int,<<array_max_1033@161:3>@164:0>:int) =
        true
        P[<array_max_1033@161:1>](<array_max_1033@138:0>:int,<array_max_1033@138:1>:int) = true
        P[<<<array_max_1033@138:2>@141:1>@157:0>](<array_max_1033@138:0>:int,<array_max_1033@138:1>:int,<<array_max_1033@138:2>@141:0>:int,<<<array_max_1033@138:2>@141:1>@157:0>:int) =
        true
        P[<<make_array_1030@143:2>@155:0>](<make_array_1030@143:0>:int,<make_array_1030@143:1>:int,<<make_array_1030@143:2>@155:0>:int) =
        true
        P[<make_array_1030@143:1>](<make_array_1030@143:0>:int,<make_array_1030@143:1>:int) = true
        P[<<array_max_1033@138:2>@141:0>](<array_max_1033@138:0>:int,<array_max_1033@138:1>:int,<<array_max_1033@138:2>@141:0>:int) =
        true
        P[<array_max_1033@138:1>](<array_max_1033@138:0>:int,<array_max_1033@138:1>:int) = true
    end GenHcSolver.solve(237132)[3] (0.285956 sec.)
    begin YhornInterface.solve(294806)[3]
      begin HcSolver.solve_ub(294807)[4]
        encoded:
          P[<fail_1486@188:0>](<fail_1486@188:0>:int)|- bot
          
          P[<make_array_1030@182:1>](<k_make_array_u_1182@185:1>:int,<k_make_array_u_1182@185:0>:int),
          ((0 <= <k_make_array_u_1182@185:0>) &&
           ((<k_make_array_u_1182@185:0> >= <k_make_array_u_1182@185:1>) && (<fail_1486@188:0> = 1)))
          |- P[<fail_1486@188:0>](<fail_1486@188:0>:int)
          
          P[<<array_max_1033@138:3>@173:0>](<make_array_1030@182:0>:int,0:int,<check_1148@177:2>:int),
          P[<<check_1148@177:3>@180:0>](<make_array_1030@182:0>:int,0:int,<check_1148@177:2>:int,<make_array_1030@182:1>:int)|- P[<make_array_1030@182:1>](
          <make_array_1030@182:0>:int,<make_array_1030@182:1>:int)
          
          P[<check_1148@177:2>](<check_1148@177:0>:int,<check_1148@177:1>:int,<check_1148@177:2>:int),
          ((<check_1148@177:1> < <check_1148@177:0>) && (<<check_1148@177:3>@180:0> = <check_1148@177:1>))
          |- P[<<check_1148@177:3>@180:0>](<check_1148@177:0>:int,<check_1148@177:1>:int,
                                           <check_1148@177:2>:int,<<check_1148@177:3>@180:0>:int)
          
          P[<<array_max_1033@138:3>@173:0>](<check_1148@177:0>:int,0:int,<check_1148@177:2>:int),
          (<check_1148@177:1> = 0)
          |- P[<check_1148@177:2>](<check_1148@177:0>:int,<check_1148@177:1>:int,
                                   <check_1148@177:2>:int)
          
          P[<array_max_1033@138:1>](<array_max_1033@138:0>:int,<array_max_1033@138:1>:int),
          P[<<<array_max_1033@138:2>@141:1>@157:0>](<array_max_1033@138:0>:int,<array_max_1033@138:1>:int,<array_max_1033@138:1>:int,<<array_max_1033@138:3>@173:0>:int),
          P[<<array_max_1033@161:3>@164:0>](<array_max_1033@138:0>:int,(
                                            1 + <array_max_1033@138:1>):int,var494:int),
          ((<<array_max_1033@138:3>@173:0> > var494) && (<array_max_1033@138:1> < <array_max_1033@138:0>))
          |- P[<<array_max_1033@138:3>@173:0>](<array_max_1033@138:0>:int,
                                               <array_max_1033@138:1>:int,
                                               <<array_max_1033@138:3>@173:0>:int)
          
          P[<array_max_1033@161:1>](<array_max_1033@161:0>:int,<array_max_1033@161:1>:int),
          ((<<array_max_1033@161:3>@164:0> = 0) && (<array_max_1033@161:1> >= <array_max_1033@161:0>))
          |- P[<<array_max_1033@161:3>@164:0>](<array_max_1033@161:0>:int,
                                               <array_max_1033@161:1>:int,
                                               <<array_max_1033@161:3>@164:0>:int)
          
          P[<array_max_1033@138:1>](<array_max_1033@161:0>:int,(-1 + <array_max_1033@161:1>):int),
          P[<<<array_max_1033@138:2>@141:1>@157:0>](<array_max_1033@161:0>:int,(
                                                    -1 + <array_max_1033@161:1>):int,(
                                                    -1 + <array_max_1033@161:1>):int,<f_array_max_1480@159:4>:int),
          (<array_max_1033@161:1> < (1 + <array_max_1033@161:0>))
          |- P[<array_max_1033@161:1>](<array_max_1033@161:0>:int,<array_max_1033@161:1>:int)
          
          P[<<make_array_1030@143:2>@155:0>](<array_max_1033@138:0>:int,<<array_max_1033@138:2>@141:0>:int,<<<array_max_1033@138:2>@141:1>@157:0>:int),
          P[<array_max_1033@138:1>](<array_max_1033@138:0>:int,<array_max_1033@138:1>:int),
          (<array_max_1033@138:1> = 0)
          |- P[<<<array_max_1033@138:2>@141:1>@157:0>](<array_max_1033@138:0>:int,
                                                       <array_max_1033@138:1>:int,
                                                       <<array_max_1033@138:2>@141:0>:int,
                                                       <<<array_max_1033@138:2>@141:1>@157:0>:int)
          
          P[<make_array_1030@143:1>](<make_array_1030@143:0>:int,<make_array_1030@143:1>:int),
          ((0 <= <make_array_1030@143:1>) &&
           ((<make_array_1030@143:1> < <make_array_1030@143:0>) &&
            (<<make_array_1030@143:2>@155:0> = <make_array_1030@143:1>)))
          |- P[<<make_array_1030@143:2>@155:0>](<make_array_1030@143:0>:int,
                                                <make_array_1030@143:1>:int,
                                                <<make_array_1030@143:2>@155:0>:int)
          
          P[<<array_max_1033@138:2>@141:0>](<make_array_1030@143:0>:int,0:int,<make_array_1030@143:1>:int)|- P[<make_array_1030@143:1>](
          <make_array_1030@143:0>:int,<make_array_1030@143:1>:int)
          
          P[<array_max_1033@138:1>](<array_max_1033@138:0>:int,<array_max_1033@138:1>:int),
          ((<array_max_1033@138:1> < <array_max_1033@138:0>) &&
           (<<array_max_1033@138:2>@141:0> = <array_max_1033@138:1>))
          |- P[<<array_max_1033@138:2>@141:0>](<array_max_1033@138:0>:int,
                                               <array_max_1033@138:1>:int,
                                               <<array_max_1033@138:2>@141:0>:int)
          
           (<array_max_1033@138:1> = 0)
          |- P[<array_max_1033@138:1>](<array_max_1033@138:0>:int,<array_max_1033@138:1>:int)
        input to Yhorn:
          P[<fail_1486@188:0>](<fail_1486@188:0>:int)|- bot
          
          P[<make_array_1030@182:1>](<k_make_array_u_1182@185:1>:int,<k_make_array_u_1182@185:0>:int),
          ((<k_make_array_u_1182@185:0> >= <k_make_array_u_1182@185:1>) &&
           ((0 <= <k_make_array_u_1182@185:0>) && (<fail_1486@188:0> = 1)))
          |- P[<fail_1486@188:0>](<fail_1486@188:0>:int)
          
          P[<<array_max_1033@138:3>@173:0>](<make_array_1030@182:0>:int,var595:int,<check_1148@177:2>:int),
          P[<<check_1148@177:3>@180:0>](<make_array_1030@182:0>:int,var596:int,<check_1148@177:2>:int,<make_array_1030@182:1>:int),
          ((var596 = 0) && (var595 = 0))
          |- P[<make_array_1030@182:1>](<make_array_1030@182:0>:int,<make_array_1030@182:1>:int)
          
          P[<check_1148@177:2>](<check_1148@177:0>:int,<check_1148@177:1>:int,<check_1148@177:2>:int),
          ((<<check_1148@177:3>@180:0> = <check_1148@177:1>) && (<check_1148@177:1> < <check_1148@177:0>))
          |- P[<<check_1148@177:3>@180:0>](<check_1148@177:0>:int,<check_1148@177:1>:int,
                                           <check_1148@177:2>:int,<<check_1148@177:3>@180:0>:int)
          
          P[<<array_max_1033@138:3>@173:0>](<check_1148@177:0>:int,var597:int,<check_1148@177:2>:int),
          ((var597 = 0) && (<check_1148@177:1> = 0))
          |- P[<check_1148@177:2>](<check_1148@177:0>:int,<check_1148@177:1>:int,
                                   <check_1148@177:2>:int)
          
          P[<array_max_1033@138:1>](<array_max_1033@138:0>:int,<array_max_1033@138:1>:int),
          P[<<<array_max_1033@138:2>@141:1>@157:0>](<array_max_1033@138:0>:int,<array_max_1033@138:1>:int,<array_max_1033@138:1>:int,<<array_max_1033@138:3>@173:0>:int),
          P[<<array_max_1033@161:3>@164:0>](<array_max_1033@138:0>:int,var598:int,var494:int),
          ((var598 = (1 + <array_max_1033@138:1>)) &&
           ((<array_max_1033@138:1> < <array_max_1033@138:0>) && (<<array_max_1033@138:3>@173:0> > var494)))
          |- P[<<array_max_1033@138:3>@173:0>](<array_max_1033@138:0>:int,
                                               <array_max_1033@138:1>:int,
                                               <<array_max_1033@138:3>@173:0>:int)
          
          P[<array_max_1033@161:1>](<array_max_1033@161:0>:int,<array_max_1033@161:1>:int),
          ((<array_max_1033@161:1> >= <array_max_1033@161:0>) && (<<array_max_1033@161:3>@164:0> = 0))
          |- P[<<array_max_1033@161:3>@164:0>](<array_max_1033@161:0>:int,
                                               <array_max_1033@161:1>:int,
                                               <<array_max_1033@161:3>@164:0>:int)
          
          P[<array_max_1033@138:1>](<array_max_1033@161:0>:int,var599:int),
          P[<<<array_max_1033@138:2>@141:1>@157:0>](<array_max_1033@161:0>:int,var600:int,var601:int,<f_array_max_1480@159:4>:int),
          (((1 + var601) = <array_max_1033@161:1>) &&
           (((1 + var600) = <array_max_1033@161:1>) &&
            (((1 + var599) = <array_max_1033@161:1>) && (<array_max_1033@161:1> < (1 + <array_max_1033@161:0>)))))
          |- P[<array_max_1033@161:1>](<array_max_1033@161:0>:int,<array_max_1033@161:1>:int)
          
          P[<<make_array_1030@143:2>@155:0>](<array_max_1033@138:0>:int,<<array_max_1033@138:2>@141:0>:int,<<<array_max_1033@138:2>@141:1>@157:0>:int),
          P[<array_max_1033@138:1>](<array_max_1033@138:0>:int,<array_max_1033@138:1>:int),
          (<array_max_1033@138:1> = 0)
          |- P[<<<array_max_1033@138:2>@141:1>@157:0>](<array_max_1033@138:0>:int,
                                                       <array_max_1033@138:1>:int,
                                                       <<array_max_1033@138:2>@141:0>:int,
                                                       <<<array_max_1033@138:2>@141:1>@157:0>:int)
          
          P[<make_array_1030@143:1>](<make_array_1030@143:0>:int,<make_array_1030@143:1>:int),
          ((<<make_array_1030@143:2>@155:0> = <make_array_1030@143:1>) &&
           ((<make_array_1030@143:1> < <make_array_1030@143:0>) && (0 <= <make_array_1030@143:1>)))
          |- P[<<make_array_1030@143:2>@155:0>](<make_array_1030@143:0>:int,
                                                <make_array_1030@143:1>:int,
                                                <<make_array_1030@143:2>@155:0>:int)
          
          P[<<array_max_1033@138:2>@141:0>](<make_array_1030@143:0>:int,var602:int,<make_array_1030@143:1>:int),
          (var602 = 0) |- P[<make_array_1030@143:1>](<make_array_1030@143:0>:int,
                                                     <make_array_1030@143:1>:int)
          
          P[<array_max_1033@138:1>](<array_max_1033@138:0>:int,<array_max_1033@138:1>:int),
          ((<<array_max_1033@138:2>@141:0> = <array_max_1033@138:1>) &&
           (<array_max_1033@138:1> < <array_max_1033@138:0>))
          |- P[<<array_max_1033@138:2>@141:0>](<array_max_1033@138:0>:int,
                                               <array_max_1033@138:1>:int,
                                               <<array_max_1033@138:2>@141:0>:int)
          
           (<array_max_1033@138:1> = 0)
          |- P[<array_max_1033@138:1>](<array_max_1033@138:0>:int,<array_max_1033@138:1>:int)Yhorn (Wed Sep 25 10:52:05 JST 2013)


(0=0) & (v_sep_fail_1486_sep_188_sep_0($723)) -> 1=0.
(($723-1=0) & (-$724<=0) & ($724-$725>=0)) & (v_sep_make_array_1030_sep_182_sep_1($725,$724)) -> v_sep_fail_1486_sep_188_sep_0($723).
(($726=0) & ($727=0)) & (v_sep_check_1148_sep_177_sep_3_sep_180_sep_0($728,$727,$729,$730)) & (v_sep_array_max_1033_sep_138_sep_3_sep_173_sep_0($728,$726,$729)) -> v_sep_make_array_1030_sep_182_sep_1($728,$730).
(($731-$732<0) & (-$731+$733=0)) & (v_sep_check_1148_sep_177_sep_2($732,$731,$729)) -> v_sep_check_1148_sep_177_sep_3_sep_180_sep_0($732,$731,$729,$733).
(($731=0) & ($734=0)) & (v_sep_array_max_1033_sep_138_sep_3_sep_173_sep_0($732,$734,$729)) -> v_sep_check_1148_sep_177_sep_2($732,$731,$729).
(($735-$736>0) & ($737-$738<0) & (-$737+$739-1=0)) & (v_sep_array_max_1033_sep_161_sep_3_sep_164_sep_0($738,$739,$736)) & (v_sep_array_max_1033_sep_138_sep_2_sep_141_sep_1_sep_157_sep_0($738,$737,$737,$735)) & (v_sep_array_max_1033_sep_138_sep_1($738,$737)) -> v_sep_array_max_1033_sep_138_sep_3_sep_173_sep_0($738,$737,$735).
(($740=0) & ($741-$742>=0)) & (v_sep_array_max_1033_sep_161_sep_1($742,$741)) -> v_sep_array_max_1033_sep_161_sep_3_sep_164_sep_0($742,$741,$740).
(($741-$742-1<0) & (-$741+$743+1=0) & (-$741+$744+1=0) & (-$741+$745+1=0)) & (v_sep_array_max_1033_sep_138_sep_2_sep_141_sep_1_sep_157_sep_0($742,$744,$745,$746)) & (v_sep_array_max_1033_sep_138_sep_1($742,$743)) -> v_sep_array_max_1033_sep_161_sep_1($742,$741).
($737=0) & (v_sep_array_max_1033_sep_138_sep_1($738,$737)) & (v_sep_make_array_1030_sep_143_sep_2_sep_155_sep_0($738,$747,$748)) -> v_sep_array_max_1033_sep_138_sep_2_sep_141_sep_1_sep_157_sep_0($738,$737,$747,$748).
((-$749<=0) & ($749-$750<0) & (-$749+$751=0)) & (v_sep_make_array_1030_sep_143_sep_1($750,$749)) -> v_sep_make_array_1030_sep_143_sep_2_sep_155_sep_0($750,$749,$751).
($752=0) & (v_sep_array_max_1033_sep_138_sep_2_sep_141_sep_0($750,$752,$749)) -> v_sep_make_array_1030_sep_143_sep_1($750,$749).
(($737-$738<0) & (-$737+$747=0)) & (v_sep_array_max_1033_sep_138_sep_1($738,$737)) -> v_sep_array_max_1033_sep_138_sep_2_sep_141_sep_0($738,$737,$747).
$737=0 -> v_sep_array_max_1033_sep_138_sep_1($738,$737).


v_sep_array_max_1033_sep_138_sep_1: X
v_sep_array_max_1033_sep_138_sep_2_sep_141_sep_0: X
v_sep_array_max_1033_sep_138_sep_2_sep_141_sep_1_sep_157_sep_0: X
v_sep_array_max_1033_sep_138_sep_3_sep_173_sep_0: X
v_sep_array_max_1033_sep_161_sep_1: X
v_sep_array_max_1033_sep_161_sep_3_sep_164_sep_0: X
v_sep_check_1148_sep_177_sep_2: X
v_sep_check_1148_sep_177_sep_3_sep_180_sep_0: X
v_sep_fail_1486_sep_188_sep_0: X
v_sep_make_array_1030_sep_143_sep_1: X
v_sep_make_array_1030_sep_143_sep_2_sep_155_sep_0: X
v_sep_make_array_1030_sep_182_sep_1: X
..................
v_sep_array_max_1033_sep_138_sep_1: X
v_sep_array_max_1033_sep_138_sep_2_sep_141_sep_0: X
v_sep_array_max_1033_sep_138_sep_2_sep_141_sep_1_sep_157_sep_0: X
v_sep_array_max_1033_sep_138_sep_3_sep_173_sep_0: X
v_sep_array_max_1033_sep_161_sep_1: X
v_sep_array_max_1033_sep_161_sep_3_sep_164_sep_0: X
v_sep_check_1148_sep_177_sep_2: X
v_sep_check_1148_sep_177_sep_3_sep_180_sep_0: X
v_sep_fail_1486_sep_188_sep_0: X
v_sep_make_array_1030_sep_143_sep_1: X
v_sep_make_array_1030_sep_143_sep_2_sep_155_sep_0: X
v_sep_make_array_1030_sep_182_sep_1: X
...
v_sep_array_max_1033_sep_138_sep_1: X
v_sep_array_max_1033_sep_138_sep_2_sep_141_sep_0: X
v_sep_array_max_1033_sep_138_sep_2_sep_141_sep_1_sep_157_sep_0: X
v_sep_array_max_1033_sep_138_sep_3_sep_173_sep_0: X
v_sep_array_max_1033_sep_161_sep_1: X
v_sep_array_max_1033_sep_161_sep_3_sep_164_sep_0: X
v_sep_check_1148_sep_177_sep_2: X
v_sep_check_1148_sep_177_sep_3_sep_180_sep_0: X
v_sep_fail_1486_sep_188_sep_0: X
v_sep_make_array_1030_sep_143_sep_1: X
v_sep_make_array_1030_sep_143_sep_2_sep_155_sep_0: X
v_sep_make_array_1030_sep_182_sep_1: X
.....
v_sep_array_max_1033_sep_138_sep_1: X
v_sep_array_max_1033_sep_138_sep_2_sep_141_sep_0: X
v_sep_array_max_1033_sep_138_sep_2_sep_141_sep_1_sep_157_sep_0: X
v_sep_array_max_1033_sep_138_sep_3_sep_173_sep_0: X
v_sep_array_max_1033_sep_161_sep_1: X
v_sep_array_max_1033_sep_161_sep_3_sep_164_sep_0: X
v_sep_check_1148_sep_177_sep_2: X
v_sep_check_1148_sep_177_sep_3_sep_180_sep_0: X
v_sep_fail_1486_sep_188_sep_0: X
v_sep_make_array_1030_sep_143_sep_1: X
v_sep_make_array_1030_sep_143_sep_2_sep_155_sep_0: X
v_sep_make_array_1030_sep_182_sep_1: X
.........
v_sep_array_max_1033_sep_138_sep_1: X
v_sep_array_max_1033_sep_138_sep_2_sep_141_sep_0: X
v_sep_array_max_1033_sep_138_sep_2_sep_141_sep_1_sep_157_sep_0: X
v_sep_array_max_1033_sep_138_sep_3_sep_173_sep_0: X
v_sep_array_max_1033_sep_161_sep_1: X
v_sep_array_max_1033_sep_161_sep_3_sep_164_sep_0: X
v_sep_check_1148_sep_177_sep_2: X
v_sep_check_1148_sep_177_sep_3_sep_180_sep_0: X
v_sep_fail_1486_sep_188_sep_0: X
v_sep_make_array_1030_sep_143_sep_1: X
v_sep_make_array_1030_sep_143_sep_2_sep_155_sep_0: X
v_sep_make_array_1030_sep_182_sep_1: X
.............
v_sep_array_max_1033_sep_138_sep_1: X
v_sep_array_max_1033_sep_138_sep_2_sep_141_sep_0: X
v_sep_array_max_1033_sep_138_sep_2_sep_141_sep_1_sep_157_sep_0: X
v_sep_array_max_1033_sep_138_sep_3_sep_173_sep_0: X
v_sep_array_max_1033_sep_161_sep_1: X
v_sep_array_max_1033_sep_161_sep_3_sep_164_sep_0: X
v_sep_check_1148_sep_177_sep_2: X
v_sep_check_1148_sep_177_sep_3_sep_180_sep_0: X
v_sep_fail_1486_sep_188_sep_0: X
v_sep_make_array_1030_sep_143_sep_1: X
v_sep_make_array_1030_sep_143_sep_2_sep_155_sep_0: X
v_sep_make_array_1030_sep_182_sep_1: X
................
v_sep_array_max_1033_sep_138_sep_1: X
v_sep_array_max_1033_sep_138_sep_2_sep_141_sep_0: X
v_sep_array_max_1033_sep_138_sep_2_sep_141_sep_1_sep_157_sep_0: X
v_sep_array_max_1033_sep_138_sep_3_sep_173_sep_0: X
v_sep_array_max_1033_sep_161_sep_1: X
v_sep_array_max_1033_sep_161_sep_3_sep_164_sep_0: X
v_sep_check_1148_sep_177_sep_2: X
v_sep_check_1148_sep_177_sep_3_sep_180_sep_0: X
v_sep_fail_1486_sep_188_sep_0: X
v_sep_make_array_1030_sep_143_sep_1: X
v_sep_make_array_1030_sep_143_sep_2_sep_155_sep_0: X
v_sep_make_array_1030_sep_182_sep_1: X
.................
v_sep_array_max_1033_sep_138_sep_1: X
v_sep_array_max_1033_sep_138_sep_2_sep_141_sep_0: X
v_sep_array_max_1033_sep_138_sep_2_sep_141_sep_1_sep_157_sep_0: X
v_sep_array_max_1033_sep_138_sep_3_sep_173_sep_0: X
v_sep_array_max_1033_sep_161_sep_1: X
v_sep_array_max_1033_sep_161_sep_3_sep_164_sep_0: X
v_sep_check_1148_sep_177_sep_2: X
v_sep_check_1148_sep_177_sep_3_sep_180_sep_0: X
v_sep_fail_1486_sep_188_sep_0: X
v_sep_make_array_1030_sep_143_sep_1: X
v_sep_make_array_1030_sep_143_sep_2_sep_155_sep_0: X
v_sep_make_array_1030_sep_182_sep_1: X
..................(0=0) & (v_sep_fail_1486_sep_188_sep_0($723)) -> 1=0.
(($723-1=0) & (-$724<=0) & ($724-$725>=0)) & (v_sep_make_array_1030_sep_182_sep_1($725,$724)) -> v_sep_fail_1486_sep_188_sep_0($723).
(($726=0) & ($727=0)) & (v_sep_check_1148_sep_177_sep_3_sep_180_sep_0($728,$727,$729,$730)) & (v_sep_array_max_1033_sep_138_sep_3_sep_173_sep_0($728,$726,$729)) -> v_sep_make_array_1030_sep_182_sep_1($728,$730).
(($731-$732<0) & (-$731+$733=0)) & (v_sep_check_1148_sep_177_sep_2($732,$731,$729)) -> v_sep_check_1148_sep_177_sep_3_sep_180_sep_0($732,$731,$729,$733).
(($731=0) & ($734=0)) & (v_sep_array_max_1033_sep_138_sep_3_sep_173_sep_0($732,$734,$729)) -> v_sep_check_1148_sep_177_sep_2($732,$731,$729).
(($735-$736>0) & ($737-$738<0) & (-$737+$739-1=0)) & (v_sep_array_max_1033_sep_161_sep_3_sep_164_sep_0($738,$739,$736)) & (v_sep_array_max_1033_sep_138_sep_2_sep_141_sep_1_sep_157_sep_0($738,$737,$737,$735)) & (v_sep_array_max_1033_sep_138_sep_1($738,$737)) -> v_sep_array_max_1033_sep_138_sep_3_sep_173_sep_0($738,$737,$735).
(($740=0) & ($741-$742>=0)) & (v_sep_array_max_1033_sep_161_sep_1($742,$741)) -> v_sep_array_max_1033_sep_161_sep_3_sep_164_sep_0($742,$741,$740).
(($741-$742-1<0) & (-$741+$743+1=0) & (-$741+$744+1=0) & (-$741+$745+1=0)) & (v_sep_array_max_1033_sep_138_sep_2_sep_141_sep_1_sep_157_sep_0($742,$744,$745,$746)) & (v_sep_array_max_1033_sep_138_sep_1($742,$743)) -> v_sep_array_max_1033_sep_161_sep_1($742,$741).
($737=0) & (v_sep_array_max_1033_sep_138_sep_1($738,$737)) & (v_sep_make_array_1030_sep_143_sep_2_sep_155_sep_0($738,$747,$748)) -> v_sep_array_max_1033_sep_138_sep_2_sep_141_sep_1_sep_157_sep_0($738,$737,$747,$748).
((-$749<=0) & ($749-$750<0) & (-$749+$751=0)) & (v_sep_make_array_1030_sep_143_sep_1($750,$749)) -> v_sep_make_array_1030_sep_143_sep_2_sep_155_sep_0($750,$749,$751).
($752=0) & (v_sep_array_max_1033_sep_138_sep_2_sep_141_sep_0($750,$752,$749)) -> v_sep_make_array_1030_sep_143_sep_1($750,$749).
(($737-$738<0) & (-$737+$747=0)) & (v_sep_array_max_1033_sep_138_sep_1($738,$737)) -> v_sep_array_max_1033_sep_138_sep_2_sep_141_sep_0($738,$737,$747).
$737=0 -> v_sep_array_max_1033_sep_138_sep_1($738,$737).

        solution:
          P[<array_max_1033@138:1>]($800:int,$802:int) = true
          P[<<array_max_1033@138:2>@141:0>]($822:int,$824:int,$826:int) = true
          P[<<<array_max_1033@138:2>@141:1>@157:0>]($791:int,$793:int,$795:int,$797:int) = true
          P[<<array_max_1033@138:3>@173:0>]($770:int,$772:int,$774:int) = true
          P[<array_max_1033@161:1>]($805:int,$807:int) = true
          P[<<array_max_1033@161:3>@164:0>]($784:int,$786:int,$788:int) = true
          P[<check_1148@177:2>]($777:int,$779:int,$781:int) = true
          P[<<check_1148@177:3>@180:0>]($761:int,$763:int,$765:int,$767:int) = ((1 + $767) <= $761)
          P[<fail_1486@188:0>]($753:bool) = false
          P[<make_array_1030@143:1>]($817:int,$819:int) = true
          P[<<make_array_1030@143:2>@155:0>]($810:int,$812:int,$814:int) = true
          P[<make_array_1030@182:1>]($756:int,$758:int) = ((1 + $758) <= $756)
        
      end HcSolver.solve_ub(294807)[4] (0.049992 sec.)
      begin HcSolver.check_validity(295549)[4]
        input:
          P[<fail_1486@188:0>](<fail_1486@188:0>:bool)|- bot
          
          P[<make_array_1030@182:1>](<k_make_array_u_1182@185:1>:int,<k_make_array_u_1182@185:0>:int),
          ((0 <= <k_make_array_u_1182@185:0>) &&
           ((<k_make_array_u_1182@185:0> >= <k_make_array_u_1182@185:1>) && <fail_1486@188:0>))
          |- P[<fail_1486@188:0>](<fail_1486@188:0>:bool)
          
          P[<<array_max_1033@138:3>@173:0>](<make_array_1030@182:0>:int,0:int,<check_1148@177:2>:int),
          P[<<check_1148@177:3>@180:0>](<make_array_1030@182:0>:int,0:int,<check_1148@177:2>:int,<make_array_1030@182:1>:int)|- P[<make_array_1030@182:1>](
          <make_array_1030@182:0>:int,<make_array_1030@182:1>:int)
          
          P[<check_1148@177:2>](<check_1148@177:0>:int,<check_1148@177:1>:int,<check_1148@177:2>:int),
          ((<check_1148@177:1> < <check_1148@177:0>) && (<<check_1148@177:3>@180:0> = <check_1148@177:1>))
          |- P[<<check_1148@177:3>@180:0>](<check_1148@177:0>:int,<check_1148@177:1>:int,
                                           <check_1148@177:2>:int,<<check_1148@177:3>@180:0>:int)
          
          P[<<array_max_1033@138:3>@173:0>](<check_1148@177:0>:int,0:int,<check_1148@177:2>:int),
          (<check_1148@177:1> = 0)
          |- P[<check_1148@177:2>](<check_1148@177:0>:int,<check_1148@177:1>:int,
                                   <check_1148@177:2>:int)
          
          P[<array_max_1033@138:1>](<array_max_1033@138:0>:int,<array_max_1033@138:1>:int),
          P[<<<array_max_1033@138:2>@141:1>@157:0>](<array_max_1033@138:0>:int,<array_max_1033@138:1>:int,<array_max_1033@138:1>:int,<<array_max_1033@138:3>@173:0>:int),
          P[<<array_max_1033@161:3>@164:0>](<array_max_1033@138:0>:int,(
                                            1 + <array_max_1033@138:1>):int,var494:int),
          ((<<array_max_1033@138:3>@173:0> > var494) && (<array_max_1033@138:1> < <array_max_1033@138:0>))
          |- P[<<array_max_1033@138:3>@173:0>](<array_max_1033@138:0>:int,
                                               <array_max_1033@138:1>:int,
                                               <<array_max_1033@138:3>@173:0>:int)
          
          P[<array_max_1033@161:1>](<array_max_1033@161:0>:int,<array_max_1033@161:1>:int),
          ((<<array_max_1033@161:3>@164:0> = 0) && (<array_max_1033@161:1> >= <array_max_1033@161:0>))
          |- P[<<array_max_1033@161:3>@164:0>](<array_max_1033@161:0>:int,
                                               <array_max_1033@161:1>:int,
                                               <<array_max_1033@161:3>@164:0>:int)
          
          P[<array_max_1033@138:1>](<array_max_1033@161:0>:int,(-1 + <array_max_1033@161:1>):int),
          P[<<<array_max_1033@138:2>@141:1>@157:0>](<array_max_1033@161:0>:int,(
                                                    -1 + <array_max_1033@161:1>):int,(
                                                    -1 + <array_max_1033@161:1>):int,<f_array_max_1480@159:4>:int),
          (<array_max_1033@161:1> < (1 + <array_max_1033@161:0>))
          |- P[<array_max_1033@161:1>](<array_max_1033@161:0>:int,<array_max_1033@161:1>:int)
          
          P[<<make_array_1030@143:2>@155:0>](<array_max_1033@138:0>:int,<<array_max_1033@138:2>@141:0>:int,<<<array_max_1033@138:2>@141:1>@157:0>:int),
          P[<array_max_1033@138:1>](<array_max_1033@138:0>:int,<array_max_1033@138:1>:int),
          (<array_max_1033@138:1> = 0)
          |- P[<<<array_max_1033@138:2>@141:1>@157:0>](<array_max_1033@138:0>:int,
                                                       <array_max_1033@138:1>:int,
                                                       <<array_max_1033@138:2>@141:0>:int,
                                                       <<<array_max_1033@138:2>@141:1>@157:0>:int)
          
          P[<make_array_1030@143:1>](<make_array_1030@143:0>:int,<make_array_1030@143:1>:int),
          ((0 <= <make_array_1030@143:1>) &&
           ((<make_array_1030@143:1> < <make_array_1030@143:0>) &&
            (<<make_array_1030@143:2>@155:0> = <make_array_1030@143:1>)))
          |- P[<<make_array_1030@143:2>@155:0>](<make_array_1030@143:0>:int,
                                                <make_array_1030@143:1>:int,
                                                <<make_array_1030@143:2>@155:0>:int)
          
          P[<<array_max_1033@138:2>@141:0>](<make_array_1030@143:0>:int,0:int,<make_array_1030@143:1>:int)|- P[<make_array_1030@143:1>](
          <make_array_1030@143:0>:int,<make_array_1030@143:1>:int)
          
          P[<array_max_1033@138:1>](<array_max_1033@138:0>:int,<array_max_1033@138:1>:int),
          ((<array_max_1033@138:1> < <array_max_1033@138:0>) &&
           (<<array_max_1033@138:2>@141:0> = <array_max_1033@138:1>))
          |- P[<<array_max_1033@138:2>@141:0>](<array_max_1033@138:0>:int,
                                               <array_max_1033@138:1>:int,
                                               <<array_max_1033@138:2>@141:0>:int)
          
           (<array_max_1033@138:1> = 0)
          |- P[<array_max_1033@138:1>](<array_max_1033@138:0>:int,<array_max_1033@138:1>:int)
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        
      end HcSolver.check_validity(295549)[4] (0.005000 sec.)
      solution:
        P[<array_max_1033@138:1>]($800:int,$802:int) = true
        P[<<array_max_1033@138:2>@141:0>]($822:int,$824:int,$826:int) = true
        P[<<<array_max_1033@138:2>@141:1>@157:0>]($791:int,$793:int,$795:int,$797:int) = true
        P[<<array_max_1033@138:3>@173:0>]($770:int,$772:int,$774:int) = true
        P[<array_max_1033@161:1>]($805:int,$807:int) = true
        P[<<array_max_1033@161:3>@164:0>]($784:int,$786:int,$788:int) = true
        P[<check_1148@177:2>]($777:int,$779:int,$781:int) = true
        P[<<check_1148@177:3>@180:0>]($761:int,$763:int,$765:int,$767:int) = ((1 + $767) <= $761)
        P[<fail_1486@188:0>]($753:bool) = false
        P[<make_array_1030@143:1>]($817:int,$819:int) = true
        P[<<make_array_1030@143:2>@155:0>]($810:int,$812:int,$814:int) = true
        P[<make_array_1030@182:1>]($756:int,$758:int) = ((1 + $758) <= $756)
    end YhornInterface.solve(294806)[3] (0.055992 sec.)
    
  end RefTypeInfer.infer_etrs(174668)[2] (1.076837 sec.)
  refinement types:
    main_1479: X
    f_1484: v1:int -> X
    main_1044: v1:int -> (v2:unit -> X) -> X
    array_max_1033: v1:int -> v2:int -> (v3:int -> (v4:int -> X) -> X) -> (v7:int -> X) -> X
    make_array_1030: v1:int -> v2:int -> (v3:int -> X) -> X
    k_make_array_u_1182: v1:int -> v2:int -> (v3:int -> X) -> v5:bool -> X
    k_make_array_u_1193: v1:int -> v2:int -> (v3:int -> X) -> v5:unit -> X
    f_array_max_1480: v1:int -> v2:int -> (v3:int -> (v4:int -> X) -> X) -> (v7:int -> X) -> v9:int -> X
    array_max_1033: v1:int -> v2:int -> (v3:int -> (v4:int -> X) -> X) -> (v7:int -> X) -> X
    f_array_max_1481: v1:int -> v2:int -> v3:int -> (v4:int -> X) -> v6:int -> X
    f_main_1483: v1:int -> (v2:unit -> X) -> v4:int -> X
    check_1148: v1:int ->
                v2:int -> v3:int -> (v4:{v4:int | ((1 + v4) <= v1)} -> (v5:int -> X) -> X) -> (v8:unit -> X) -> X
    make_array_1030: v1:int -> v2:{v2:int | ((1 + v2) <= v1)} -> (v3:int -> X) -> X
    k_make_array_u_1182: v1:int -> v2:int -> (v3:int -> X) -> v5:bool -> X
    fail_1486: v1:{v1:bool | false} -> (v2:unit -> X) -> X
    f_1485: var627:int -> var626:unit -> X
    f_check_1482: var638:int ->
                  var637:int ->
                  var636:int -> (var635:int -> (var634:int -> X) -> X) -> (var631:unit -> X) -> var629:int -> X
    fail_1487: var642:bool -> (var641:unit -> X) -> X
    k_check_u_1336: var653:int ->
                    var652:int ->
                    var651:int -> (var650:int -> (var649:int -> X) -> X) -> (var646:unit -> X) -> var644:unit -> X
  abstraction types:
    main_1479: X
    f_1484: v1:int -> X
    main_1044: v1:int -> (v2:unit -> X) -> X
    array_max_1033: var654:int -> var655:int -> (var656:int -> (var657:int -> X) -> X) -> (var660:int -> X) -> X
    make_array_1030: var663:int -> var664:int[var664 -> ((1 + var664) <= var663)] -> (var665:int -> X) -> X
    k_make_array_u_1182: var668:int -> var669:int -> (var670:int -> X) -> var672:bool -> X
    k_make_array_u_1193: v1:int -> v2:int -> (v3:int -> X) -> v5:unit -> X
    f_array_max_1480: v1:int -> v2:int -> (v3:int -> (v4:int -> X) -> X) -> (v7:int -> X) -> v9:int -> X
    f_array_max_1481: v1:int -> v2:int -> v3:int -> (v4:int -> X) -> v6:int -> X
    f_main_1483: v1:int -> (v2:unit -> X) -> v4:int -> X
    check_1148: v1:int ->
                v2:int -> v3:int -> (v4:int[v4 -> ((1 + v4) <= v1)] -> (v5:int -> X) -> X) -> (v8:unit -> X) -> X
    fail_1486: v1:bool -> (v2:unit -> X) -> X
    f_1485: var627:int -> var626:unit -> X
    f_check_1482: var638:int ->
                  var637:int ->
                  var636:int -> (var635:int -> (var634:int -> X) -> X) -> (var631:unit -> X) -> var629:int -> X
    fail_1487: var642:bool -> (var641:unit -> X) -> X
    k_check_u_1336: var653:int ->
                    var652:int ->
                    var651:int -> (var650:int -> (var649:int -> X) -> X) -> (var646:unit -> X) -> var644:unit -> X
  
end AbsTypeInfer.refine(174667)[1] (1.083835 sec.)
DONE!

Prefix of spurious counter-example::
0; 0; 0; 1; 0; 0; 0; 0; 0; 0

Program with abstraction types (CEGAR-cycle 5)::
Main: main_1479
  main_1479 -> (rand_int f_1484)
  array_max_1033 n_1034 i_1035 a_1036 k_array_max_1226 when (i_1035 >= n_1034) -> (k_array_max_1226 0)
  array_max_1033 n_1034 i_1035 a_1036 k_array_max_1226 when (not (i_1035 >= n_1034)) ->
      (a_1036 i_1035 (f_array_max_1480 i_1035 n_1034 a_1036 k_array_max_1226))
  check_1148 n_1040 i_1041 max_1042 a_1043 k_check_1309 when (i_1041 >= n_1040) -> (k_check_1309 ())
  check_1148 n_1040 i_1041 max_1042 a_1043 k_check_1309 when (not (i_1041 >= n_1040)) ->
      (a_1043 i_1041 (f_check_1482 i_1041 max_1042 n_1040 a_1043 k_check_1309))
  f_1484 x_1454 -> (main_1044 x_1454 (f_1485 x_1454))
  f_1485 x_1454 x_1451 -> end
  f_array_max_1480 i_1035 n_1034 a_1036 k_array_max_1226 x_1229 ->
      (array_max_1033 n_1034 (i_1035 + 1) a_1036 (f_array_max_1481 i_1035 n_1034 x_1229 k_array_max_1226))
  f_array_max_1481 i_1035 n_1034 x_1229 k_array_max_1226 x_1242 when (x_1229 > x_1242) -> (k_array_max_1226 x_1229)
  f_array_max_1481 i_1035 n_1034 x_1229 k_array_max_1226 x_1242 when (
      not (x_1229 > x_1242)) -> (k_array_max_1226 x_1242)
  f_check_1482 i_1041 max_1042 n_1040 a_1043 k_check_1309 x_1315 when (
      x_1315 <= max_1042) -> (k_check_u_1336 i_1041 max_1042 n_1040 a_1043 k_check_1309 ())
  f_check_1482 i_1041 max_1042 n_1040 a_1043 k_check_1309 x_1315 when (
      not (x_1315 <= max_1042)) -> (fail_1487 true (k_check_u_1336 i_1041 max_1042 n_1040 a_1043 k_check_1309))
  f_main_1483 n_1045 k_main_1380 x_1399 -> (check_1148 n_1045 0 x_1399 (make_array_1030 n_1045) k_main_1380)
  fail_1486 b k -> {fail} => (k ())
  fail_1487 b k -> {fail} => (k ())
  k_check_u_1336 i_1041 max_1042 n_1040 a_1043 k_check_1309 x_1312 ->
      (check_1148 n_1040 (i_1041 + 1) max_1042 a_1043 k_check_1309)
  k_make_array_u_1182 i_1032 n_1031 k_make_array_1176 b_1194 when b_1194 ->
      (k_make_array_u_1193 i_1032 n_1031 k_make_array_1176 ())
  k_make_array_u_1182 i_1032 n_1031 k_make_array_1176 b_1194 when (not b_1194) ->
      (fail_1486 true (k_make_array_u_1193 i_1032 n_1031 k_make_array_1176))
  k_make_array_u_1193 i_1032 n_1031 k_make_array_1176 x_1179 -> (k_make_array_1176 i_1032)
  main_1044 n_1045 k_main_1380 -> (array_max_1033 n_1045 0 (make_array_1030 n_1045) (f_main_1483 n_1045 k_main_1380))
  make_array_1030 n_1031 i_1032 k_make_array_1176 when (0 <= i_1032) ->
      (k_make_array_u_1182 i_1032 n_1031 k_make_array_1176 (i_1032 < n_1031))
  make_array_1030 n_1031 i_1032 k_make_array_1176 when (not (0 <= i_1032)) ->
      (k_make_array_u_1182 i_1032 n_1031 k_make_array_1176 false)
Types:
  main_1479 : X
  array_max_1033 : (x_1:int ->
                    x_2:int[x_2 <= 0; x_2 >= 0] ->
                    (x_4:int[x_1 >= x_4 + 1; x_4 >= 0] -> (int -> X) -> X) -> (int[x_1 <= 0] -> X) -> X)
  check_1148 : (x_1:int ->
                x_2:int ->
                int[x_2 >= 0; x_1 <= x_2] -> (x_5:int[x_1 >= x_5 + 1; x_5 >= 0] -> (int -> X) -> X) -> (unit -> X) -> X)
  fail_1486 : (x_1:bool[x_1] -> (unit -> X) -> X)
  fail_1487 : (x_1:bool[x_1] -> (unit -> X) -> X)
  make_array_1030 : (x_1:int -> x_2:int[x_1 >= x_2 + 1; x_2 >= 0] -> (int -> X) -> X)
  
(5-1) Abstracting ... DONE!

(5-2) Checking HORS ... DONE!

Error trace::
  main_1479 ... --> 
  f_1484 ... --> 
  main_1044 ... --> 
  array_max_1033 [2/2] ... --> 
  make_array_1030 [1/2] ... --> 
  k_make_array_u_1182 [1/2] ... --> 
  k_make_array_u_1193 ... --> 
  f_array_max_1480 ... --> 
  array_max_1033 [1/2] ... --> 
  f_array_max_1481 [1/2] ... --> 
  f_main_1483 ... --> 
  check_1148 [2/2] ... --> 
  make_array_1030 [1/2] ... --> 
  k_make_array_u_1182 [1/2] ... --> 
  k_make_array_u_1193 ... --> 
  f_check_1482 [2/2] ... --> 
  fail_1487 ... --> fail -->
  ERROR!

Spurious counter-example::
  0; 0; 0; 1; 0; 0; 0; 0; 0; 0; 0; 1; 0; 0; 0; 1; 0

(5-3) Checking counter-example ... DONE!

(5-4) Discovering predicates ... 
begin AbsTypeInfer.refine(299232)[1]
  program:
    main_1479  | true = ((Random.int 0) f_1484)
    array_max_1033 n_1034 i_1035 a_1036 k_array_max_1226 | (i_1035 >= n_1034) = (
    k_array_max_1226 0)
    array_max_1033 n_1034 i_1035 a_1036 k_array_max_1226 | (not (i_1035 >= n_1034)) = (
    a_1036 i_1035
           (f_array_max_1480 i_1035
                             n_1034
                             a_1036
                             k_array_max_1226))
    check_1148 n_1040 i_1041 max_1042 a_1043 k_check_1309 | (i_1041 >= n_1040) = (
    k_check_1309 ())
    check_1148 n_1040 i_1041 max_1042 a_1043 k_check_1309 | (not (i_1041 >= n_1040)) = (
    a_1043 i_1041
           (f_check_1482 i_1041
                         max_1042
                         n_1040
                         a_1043
                         k_check_1309))
    f_1484 x_1454 | true = (main_1044 x_1454
                                      (f_1485 x_1454))
    f_1485 x_1454 x_1451 | true = end
    f_array_max_1480 i_1035 n_1034 a_1036 k_array_max_1226 x_1229 | true = (
    array_max_1033 n_1034
                   (i_1035 + 1)
                   a_1036
                   (f_array_max_1481 i_1035
                                     n_1034
                                     x_1229
                                     k_array_max_1226))
    f_array_max_1481 i_1035 n_1034 x_1229 k_array_max_1226 x_1242 | (
    x_1229 > x_1242) = (k_array_max_1226 x_1229)
    f_array_max_1481 i_1035 n_1034 x_1229 k_array_max_1226 x_1242 | (
    not (x_1229 > x_1242)) = (k_array_max_1226 x_1242)
    f_check_1482 i_1041 max_1042 n_1040 a_1043 k_check_1309 x_1315 | (
    x_1315 <= max_1042) = (k_check_u_1336 i_1041
                                          max_1042
                                          n_1040
                                          a_1043
                                          k_check_1309
                                          ())
    f_check_1482 i_1041 max_1042 n_1040 a_1043 k_check_1309 x_1315 | (
    not (x_1315 <= max_1042)) = (fail_1487 true
                                           (k_check_u_1336 i_1041
                                                           max_1042
                                                           n_1040
                                                           a_1043
                                                           k_check_1309))
    f_main_1483 n_1045 k_main_1380 x_1399 | true = (check_1148 n_1045
                                                               0
                                                               x_1399
                                                               (make_array_1030 n_1045)
                                                               k_main_1380)
    fail_1486 b k | true = (fail ())
    fail_1487 b k | true = (fail ())
    k_check_u_1336 i_1041 max_1042 n_1040 a_1043 k_check_1309 x_1312 | true = (
    check_1148 n_1040
               (i_1041 + 1)
               max_1042
               a_1043
               k_check_1309)
    k_make_array_u_1182 i_1032 n_1031 k_make_array_1176 b_1194 | b_1194 = (
    k_make_array_u_1193 i_1032
                        n_1031
                        k_make_array_1176
                        ())
    k_make_array_u_1182 i_1032 n_1031 k_make_array_1176 b_1194 | (not b_1194) = (
    fail_1486 true
              (k_make_array_u_1193 i_1032
                                   n_1031
                                   k_make_array_1176))
    k_make_array_u_1193 i_1032 n_1031 k_make_array_1176 x_1179 | true = (
    k_make_array_1176 i_1032)
    main_1044 n_1045 k_main_1380 | true = (array_max_1033
                                             n_1045
                                             0
                                             (make_array_1030 n_1045)
                                             (f_main_1483 n_1045
                                                          k_main_1380))
    make_array_1030 n_1031 i_1032 k_make_array_1176 | (0 <= i_1032) = (
    k_make_array_u_1182 i_1032
                        n_1031
                        k_make_array_1176
                        (i_1032 < n_1031))
    make_array_1030 n_1031 i_1032 k_make_array_1176 | (not (0 <= i_1032)) = (
    k_make_array_u_1182 i_1032
                        n_1031
                        k_make_array_1176
                        false)
    main_1479:X
    array_max_1033:int -> int -> (int -> (int -> X) -> X) -> (int -> X) -> X
    check_1148:int -> int -> int -> (int -> (int -> X) -> X) -> (unit -> X) -> X
    f_1484:int -> X
    f_1485:int -> unit -> X
    f_array_max_1480:int -> int -> (int -> (int -> X) -> X) -> (int -> X) -> int -> X
    f_array_max_1481:int -> int -> int -> (int -> X) -> int -> X
    f_check_1482:int -> int -> int -> (int -> (int -> X) -> X) -> (unit -> X) -> int -> X
    f_main_1483:int -> (unit -> X) -> int -> X
    fail_1486:bool -> (unit -> X) -> X
    fail_1487:bool -> (unit -> X) -> X
    k_check_u_1336:int -> int -> int -> (int -> (int -> X) -> X) -> (unit -> X) -> unit -> X
    k_make_array_u_1182:int -> int -> (int -> X) -> bool -> X
    k_make_array_u_1193:int -> int -> (int -> X) -> unit -> X
    main_1044:int -> (unit -> X) -> X
    make_array_1030:int -> int -> (int -> X) -> X
  inlined functions: f_1484,f_1485,f_array_max_1480,f_array_max_1481,f_check_1482,f_main_1483,k_check_u_1336,k_make_array_u_1182,k_make_array_u_1193,main_1044
  counterexample: 0:0:0:1:0:0:0:0:0:0:0:1:0:0:0:1:0
  error traces:
    [true.nop(<f_1484@194:0> = var674)
     [true.(<main_1044@196:0> = <f_1484@194:0>)
      [true.((<array_max_1033@198:0> = <main_1044@196:0>) && (<array_max_1033@198:1> = 0))
       [(not (<array_max_1033@198:1> >= <array_max_1033@198:0>)).
        (<<array_max_1033@198:2>@201:0> = <array_max_1033@198:1>)
        [true.
         ((<make_array_1030@203:0> = <main_1044@196:0>) && (<make_array_1030@203:1> = <<array_max_1033@198:2>@201:0>))
         [(0 <= <make_array_1030@203:1>).
          ((<k_make_array_u_1182@206:0> = <make_array_1030@203:1>) &&
           ((<k_make_array_u_1182@206:1> = <make_array_1030@203:0>) &&
            (<k_make_array_u_1182@206:3> = (<make_array_1030@203:1> < <make_array_1030@203:0>))))
          [<k_make_array_u_1182@206:3>.
           ((<k_make_array_u_1193@209:0> = <k_make_array_u_1182@206:0>) &&
            ((<k_make_array_u_1193@209:1> = <k_make_array_u_1182@206:1>) && (<k_make_array_u_1193@209:3> = ())))
           [true.(<<k_make_array_u_1193@209:2>@211:0> = <k_make_array_u_1193@209:0>)
            [true.(<<k_make_array_u_1182@206:2>@213:0> = <<k_make_array_u_1193@209:2>@211:0>)
             [true.(<<make_array_1030@203:2>@215:0> = <<k_make_array_u_1182@206:2>@213:0>)
              [true.(<<<array_max_1033@198:2>@201:1>@217:0> = <<make_array_1030@203:2>@215:0>)
               [true.
                ((<f_array_max_1480@219:0> = <array_max_1033@198:1>) &&
                 ((<f_array_max_1480@219:1> = <array_max_1033@198:0>) &&
                  (<f_array_max_1480@219:4> = <<<array_max_1033@198:2>@201:1>@217:0>)))
                [true.
                 ((<array_max_1033@221:0> = <f_array_max_1480@219:1>) &&
                  (<array_max_1033@221:1> = (<f_array_max_1480@219:0> + 1)))
                 [(<array_max_1033@221:1> >= <array_max_1033@221:0>).(
                  <<array_max_1033@221:3>@224:0> = 0)
                  [true.
                   ((<f_array_max_1481@226:0> = <f_array_max_1480@219:0>) &&
                    ((<f_array_max_1481@226:1> = <f_array_max_1480@219:1>) &&
                     ((<f_array_max_1481@226:2> = <f_array_max_1480@219:4>) &&
                      (<f_array_max_1481@226:4> = <<array_max_1033@221:3>@224:0>))))
                   [(<f_array_max_1481@226:2> > <f_array_max_1481@226:4>).
                    (<<f_array_max_1481@226:3>@229:0> = <f_array_max_1481@226:2>)
                    [true.(<<f_array_max_1480@219:3>@231:0> = <<f_array_max_1481@226:3>@229:0>)
                     [true.(<<array_max_1033@198:3>@233:0> = <<f_array_max_1480@219:3>@231:0>)
                      [true.
                       ((<f_main_1483@235:0> = <main_1044@196:0>) &&
                        (<f_main_1483@235:2> = <<array_max_1033@198:3>@233:0>))
                       [true.
                        ((<check_1148@237:0> = <f_main_1483@235:0>) &&
                         ((<check_1148@237:1> = 0) && (<check_1148@237:2> = <f_main_1483@235:2>)))
                        [(not (<check_1148@237:1> >= <check_1148@237:0>)).
                         (<<check_1148@237:3>@240:0> = <check_1148@237:1>)
                         [true.
                          ((<make_array_1030@242:0> = <f_main_1483@235:0>) &&
                           (<make_array_1030@242:1> = <<check_1148@237:3>@240:0>))
                          [(0 <= <make_array_1030@242:1>).
                           ((<k_make_array_u_1182@245:0> = <make_array_1030@242:1>) &&
                            ((<k_make_array_u_1182@245:1> = <make_array_1030@242:0>) &&
                             (<k_make_array_u_1182@245:3> = (<make_array_1030@242:1> < <make_array_1030@242:0>))))
                           [<k_make_array_u_1182@245:3>.
                            ((<k_make_array_u_1193@248:0> = <k_make_array_u_1182@245:0>) &&
                             ((<k_make_array_u_1193@248:1> = <k_make_array_u_1182@245:1>) &&
                              (<k_make_array_u_1193@248:3> = ())))
                            [true.(<<k_make_array_u_1193@248:2>@250:0> = <k_make_array_u_1193@248:0>)
                             [true.(<<k_make_array_u_1182@245:2>@252:0> = <<k_make_array_u_1193@248:2>@250:0>)
                              [true.(<<make_array_1030@242:2>@254:0> = <<k_make_array_u_1182@245:2>@252:0>)
                               [true.(<<<check_1148@237:3>@240:1>@256:0> = <<make_array_1030@242:2>@254:0>)
                                [true.
                                 ((<f_check_1482@258:0> = <check_1148@237:1>) &&
                                  ((<f_check_1482@258:1> = <check_1148@237:2>) &&
                                   ((<f_check_1482@258:2> = <check_1148@237:0>) &&
                                    (<f_check_1482@258:5> = <<<check_1148@237:3>@240:1>@256:0>))))
                                 [(not (<f_check_1482@258:5> <= <f_check_1482@258:1>)).(
                                  <fail_1487@261:0> = true)[true.error
  begin RefTypeInfer.infer_etrs(299233)[2]
    horn clauses:
      P[<fail_1487@261:0>](<fail_1487@261:0>:bool)|- bot
      
      P[<f_check_1482@258:5>](<f_check_1482@258:0>:int,<f_check_1482@258:1>:int,<f_check_1482@258:2>:int,<f_check_1482@258:5>:int),
      ((<f_check_1482@258:5> > <f_check_1482@258:1>) && <fail_1487@261:0>)
      |- P[<fail_1487@261:0>](<fail_1487@261:0>:bool)
      
      P[<check_1148@237:2>](<f_check_1482@258:2>:int,<f_check_1482@258:0>:int,<f_check_1482@258:1>:int),
      P[<<<check_1148@237:3>@240:1>@256:0>](<f_check_1482@258:2>:int,<f_check_1482@258:0>:int,<f_check_1482@258:1>:int,<f_check_1482@258:0>:int,<f_check_1482@258:5>:int),
      (<f_check_1482@258:0> < <f_check_1482@258:2>)
      |- P[<f_check_1482@258:5>](<f_check_1482@258:0>:int,<f_check_1482@258:1>:int,
                                 <f_check_1482@258:2>:int,<f_check_1482@258:5>:int)
      
      P[<f_main_1483@235:2>](<check_1148@237:0>:int,<check_1148@237:2>:int),
      P[<<make_array_1030@242:2>@254:0>](<check_1148@237:0>:int,<<check_1148@237:3>@240:0>:int,<<<check_1148@237:3>@240:1>@256:0>:int),
      P[<check_1148@237:2>](<check_1148@237:0>:int,<check_1148@237:1>:int,<check_1148@237:2>:int),
      (<check_1148@237:1> = 0)
      |- P[<<<check_1148@237:3>@240:1>@256:0>](<check_1148@237:0>:int,
                                               <check_1148@237:1>:int,
                                               <check_1148@237:2>:int,
                                               <<check_1148@237:3>@240:0>:int,
                                               <<<check_1148@237:3>@240:1>@256:0>:int)
      
      P[<make_array_1030@242:1>](<make_array_1030@242:0>:int,<make_array_1030@242:1>:int),
      P[<<k_make_array_u_1182@245:2>@252:0>](<make_array_1030@242:1>:int,<make_array_1030@242:0>:int,<<make_array_1030@242:2>@254:0>:int),
      (0 <= <make_array_1030@242:1>)
      |- P[<<make_array_1030@242:2>@254:0>](<make_array_1030@242:0>:int,
                                            <make_array_1030@242:1>:int,
                                            <<make_array_1030@242:2>@254:0>:int)
      
      P[<k_make_array_u_1182@245:3>](<k_make_array_u_1182@245:0>:int,<k_make_array_u_1182@245:1>:int,true:bool),
      P[<<k_make_array_u_1193@248:2>@250:0>](<k_make_array_u_1182@245:0>:int,<k_make_array_u_1182@245:1>:int,<<k_make_array_u_1182@245:2>@252:0>:int)|- P[<<k_make_array_u_1182@245:2>@252:0>](
      <k_make_array_u_1182@245:0>:int,<k_make_array_u_1182@245:1>:int,
      <<k_make_array_u_1182@245:2>@252:0>:int)
      
      P[<k_make_array_u_1193@248:3>](<k_make_array_u_1193@248:0>:int,<k_make_array_u_1193@248:1>:int,<k_make_array_u_1193@248:3>:unit),
      (<<k_make_array_u_1193@248:2>@250:0> = <k_make_array_u_1193@248:0>)
      |- P[<<k_make_array_u_1193@248:2>@250:0>](<k_make_array_u_1193@248:0>:int,
                                                <k_make_array_u_1193@248:1>:int,
                                                <<k_make_array_u_1193@248:2>@250:0>:int)
      
      P[<k_make_array_u_1182@245:3>](<k_make_array_u_1193@248:0>:int,<k_make_array_u_1193@248:1>:int,true:bool)|- P[<k_make_array_u_1193@248:3>](
      <k_make_array_u_1193@248:0>:int,<k_make_array_u_1193@248:1>:int,
      <k_make_array_u_1193@248:3>:unit)
      
      P[<make_array_1030@242:1>](<k_make_array_u_1182@245:1>:int,<k_make_array_u_1182@245:0>:int),
      ((0 <= <k_make_array_u_1182@245:0>) &&
       (<k_make_array_u_1182@245:3> = (<k_make_array_u_1182@245:0> < <k_make_array_u_1182@245:1>)))
      |- P[<k_make_array_u_1182@245:3>](<k_make_array_u_1182@245:0>:int,
                                        <k_make_array_u_1182@245:1>:int,
                                        <k_make_array_u_1182@245:3>:bool)
      
      P[<f_main_1483@235:2>](<make_array_1030@242:0>:int,<check_1148@237:2>:int),
      P[<<check_1148@237:3>@240:0>](<make_array_1030@242:0>:int,0:int,<check_1148@237:2>:int,<make_array_1030@242:1>:int)|- P[<make_array_1030@242:1>](
      <make_array_1030@242:0>:int,<make_array_1030@242:1>:int)
      
      P[<check_1148@237:2>](<check_1148@237:0>:int,<check_1148@237:1>:int,<check_1148@237:2>:int),
      ((<check_1148@237:1> < <check_1148@237:0>) && (<<check_1148@237:3>@240:0> = <check_1148@237:1>))
      |- P[<<check_1148@237:3>@240:0>](<check_1148@237:0>:int,<check_1148@237:1>:int,
                                       <check_1148@237:2>:int,<<check_1148@237:3>@240:0>:int)
      
      P[<f_main_1483@235:2>](<check_1148@237:0>:int,<check_1148@237:2>:int), (
      <check_1148@237:1> = 0)
      |- P[<check_1148@237:2>](<check_1148@237:0>:int,<check_1148@237:1>:int,
                               <check_1148@237:2>:int)
      
      P[<main_1044@196:0>](<f_main_1483@235:0>:int),
      P[<<array_max_1033@198:3>@233:0>](<f_main_1483@235:0>:int,0:int,<f_main_1483@235:2>:int)|- P[<f_main_1483@235:2>](
      <f_main_1483@235:0>:int,<f_main_1483@235:2>:int)
      
      P[<array_max_1033@198:1>](<array_max_1033@198:0>:int,<array_max_1033@198:1>:int),
      P[<<f_array_max_1480@219:3>@231:0>](<array_max_1033@198:1>:int,<array_max_1033@198:0>:int,<<array_max_1033@198:3>@233:0>:int),
      (<array_max_1033@198:1> < <array_max_1033@198:0>)
      |- P[<<array_max_1033@198:3>@233:0>](<array_max_1033@198:0>:int,
                                           <array_max_1033@198:1>:int,
                                           <<array_max_1033@198:3>@233:0>:int)
      
      P[<f_array_max_1480@219:4>](<f_array_max_1480@219:0>:int,<f_array_max_1480@219:1>:int,<f_array_max_1481@226:2>:int),
      P[<<f_array_max_1481@226:3>@229:0>](<f_array_max_1480@219:0>:int,<f_array_max_1480@219:1>:int,<f_array_max_1481@226:2>:int,<<f_array_max_1480@219:3>@231:0>:int)|- P[<<f_array_max_1480@219:3>@231:0>](
      <f_array_max_1480@219:0>:int,<f_array_max_1480@219:1>:int,<<f_array_max_1480@219:3>@231:0>:int)
      
      P[<f_array_max_1481@226:4>](<f_array_max_1481@226:0>:int,<f_array_max_1481@226:1>:int,<f_array_max_1481@226:2>:int,<f_array_max_1481@226:4>:int),
      ((<f_array_max_1481@226:2> > <f_array_max_1481@226:4>) &&
       (<<f_array_max_1481@226:3>@229:0> = <f_array_max_1481@226:2>))
      |- P[<<f_array_max_1481@226:3>@229:0>](<f_array_max_1481@226:0>:int,
                                             <f_array_max_1481@226:1>:int,
                                             <f_array_max_1481@226:2>:int,
                                             <<f_array_max_1481@226:3>@229:0>:int)
      
      P[<f_array_max_1480@219:4>](<f_array_max_1481@226:0>:int,<f_array_max_1481@226:1>:int,<f_array_max_1481@226:2>:int),
      P[<<array_max_1033@221:3>@224:0>](<f_array_max_1481@226:1>:int,(
                                        1 + <f_array_max_1481@226:0>):int,<f_array_max_1481@226:4>:int)|- P[<f_array_max_1481@226:4>](
      <f_array_max_1481@226:0>:int,<f_array_max_1481@226:1>:int,<f_array_max_1481@226:2>:int,
      <f_array_max_1481@226:4>:int)
      
      P[<array_max_1033@221:1>](<array_max_1033@221:0>:int,<array_max_1033@221:1>:int),
      ((<<array_max_1033@221:3>@224:0> = 0) && (<array_max_1033@221:1> >= <array_max_1033@221:0>))
      |- P[<<array_max_1033@221:3>@224:0>](<array_max_1033@221:0>:int,
                                           <array_max_1033@221:1>:int,
                                           <<array_max_1033@221:3>@224:0>:int)
      
      P[<f_array_max_1480@219:4>]((-1 + <array_max_1033@221:1>):int,<array_max_1033@221:0>:int,<f_array_max_1480@219:4>:int)|- P[<array_max_1033@221:1>](
      <array_max_1033@221:0>:int,<array_max_1033@221:1>:int)
      
      P[<array_max_1033@198:1>](<f_array_max_1480@219:1>:int,<f_array_max_1480@219:0>:int),
      P[<<<array_max_1033@198:2>@201:1>@217:0>](<f_array_max_1480@219:1>:int,<f_array_max_1480@219:0>:int,<f_array_max_1480@219:0>:int,<f_array_max_1480@219:4>:int),
      (<f_array_max_1480@219:0> < <f_array_max_1480@219:1>)
      |- P[<f_array_max_1480@219:4>](<f_array_max_1480@219:0>:int,<f_array_max_1480@219:1>:int,
                                     <f_array_max_1480@219:4>:int)
      
      P[<main_1044@196:0>](<array_max_1033@198:0>:int),
      P[<<make_array_1030@203:2>@215:0>](<array_max_1033@198:0>:int,<<array_max_1033@198:2>@201:0>:int,<<<array_max_1033@198:2>@201:1>@217:0>:int),
      P[<array_max_1033@198:1>](<array_max_1033@198:0>:int,<array_max_1033@198:1>:int), (
      <array_max_1033@198:1> = 0)
      |- P[<<<array_max_1033@198:2>@201:1>@217:0>](<array_max_1033@198:0>:int,
                                                   <array_max_1033@198:1>:int,
                                                   <<array_max_1033@198:2>@201:0>:int,
                                                   <<<array_max_1033@198:2>@201:1>@217:0>:int)
      
      P[<make_array_1030@203:1>](<make_array_1030@203:0>:int,<make_array_1030@203:1>:int),
      P[<<k_make_array_u_1182@206:2>@213:0>](<make_array_1030@203:1>:int,<make_array_1030@203:0>:int,<<make_array_1030@203:2>@215:0>:int),
      (0 <= <make_array_1030@203:1>)
      |- P[<<make_array_1030@203:2>@215:0>](<make_array_1030@203:0>:int,
                                            <make_array_1030@203:1>:int,
                                            <<make_array_1030@203:2>@215:0>:int)
      
      P[<k_make_array_u_1182@206:3>](<k_make_array_u_1182@206:0>:int,<k_make_array_u_1182@206:1>:int,true:bool),
      P[<<k_make_array_u_1193@209:2>@211:0>](<k_make_array_u_1182@206:0>:int,<k_make_array_u_1182@206:1>:int,<<k_make_array_u_1182@206:2>@213:0>:int)|- P[<<k_make_array_u_1182@206:2>@213:0>](
      <k_make_array_u_1182@206:0>:int,<k_make_array_u_1182@206:1>:int,
      <<k_make_array_u_1182@206:2>@213:0>:int)
      
      P[<k_make_array_u_1193@209:3>](<k_make_array_u_1193@209:0>:int,<k_make_array_u_1193@209:1>:int,<k_make_array_u_1193@209:3>:unit),
      (<<k_make_array_u_1193@209:2>@211:0> = <k_make_array_u_1193@209:0>)
      |- P[<<k_make_array_u_1193@209:2>@211:0>](<k_make_array_u_1193@209:0>:int,
                                                <k_make_array_u_1193@209:1>:int,
                                                <<k_make_array_u_1193@209:2>@211:0>:int)
      
      P[<k_make_array_u_1182@206:3>](<k_make_array_u_1193@209:0>:int,<k_make_array_u_1193@209:1>:int,true:bool)|- P[<k_make_array_u_1193@209:3>](
      <k_make_array_u_1193@209:0>:int,<k_make_array_u_1193@209:1>:int,
      <k_make_array_u_1193@209:3>:unit)
      
      P[<make_array_1030@203:1>](<k_make_array_u_1182@206:1>:int,<k_make_array_u_1182@206:0>:int),
      ((0 <= <k_make_array_u_1182@206:0>) &&
       (<k_make_array_u_1182@206:3> = (<k_make_array_u_1182@206:0> < <k_make_array_u_1182@206:1>)))
      |- P[<k_make_array_u_1182@206:3>](<k_make_array_u_1182@206:0>:int,
                                        <k_make_array_u_1182@206:1>:int,
                                        <k_make_array_u_1182@206:3>:bool)
      
      P[<main_1044@196:0>](<make_array_1030@203:0>:int),
      P[<<array_max_1033@198:2>@201:0>](<make_array_1030@203:0>:int,0:int,<make_array_1030@203:1>:int)|- P[<make_array_1030@203:1>](
      <make_array_1030@203:0>:int,<make_array_1030@203:1>:int)
      
      P[<array_max_1033@198:1>](<array_max_1033@198:0>:int,<array_max_1033@198:1>:int),
      ((<array_max_1033@198:1> < <array_max_1033@198:0>) && (<<array_max_1033@198:2>@201:0> = <array_max_1033@198:1>))
      |- P[<<array_max_1033@198:2>@201:0>](<array_max_1033@198:0>:int,
                                           <array_max_1033@198:1>:int,
                                           <<array_max_1033@198:2>@201:0>:int)
      
      P[<main_1044@196:0>](<array_max_1033@198:0>:int), (<array_max_1033@198:1> = 0)
      |- P[<array_max_1033@198:1>](<array_max_1033@198:0>:int,<array_max_1033@198:1>:int)
      
      P[<f_1484@194:0>](<main_1044@196:0>:int)|- P[<main_1044@196:0>](<main_1044@196:0>:int)
      
      |- P[<f_1484@194:0>](<f_1484@194:0>:int)
    call trees:
      <main_1479@191>
        <f_1484@194>
          <main_1044@196>
            <array_max_1033@198>
            </<array_max_1033@198:2>@201>
            <make_array_1030@203>
              <k_make_array_u_1182@206>
                <k_make_array_u_1193@209>
                </<k_make_array_u_1193@209:2>@211>
              </<k_make_array_u_1182@206:2>@213>
            </<make_array_1030@203:2>@215>
            <<<array_max_1033@198:2>@201:1>@217>
              <f_array_max_1480@219>
                <array_max_1033@221>
                </<array_max_1033@221:3>@224>
                <f_array_max_1481@226>
                </<f_array_max_1481@226:3>@229>
              </<f_array_max_1480@219:3>@231>
            </<array_max_1033@198:3>@233>
            <f_main_1483@235>
              <check_1148@237>
              </<check_1148@237:3>@240>
              <make_array_1030@242>
                <k_make_array_u_1182@245>
                  <k_make_array_u_1193@248>
                  </<k_make_array_u_1193@248:2>@250>
                </<k_make_array_u_1182@245:2>@252>
              </<make_array_1030@242:2>@254>
              <<<check_1148@237:3>@240:1>@256>
                <f_check_1482@258>
                  <fail_1487@261>
    inlined horn clauses:
      P[<fail_1487@261:0>](<fail_1487@261:0>:bool)|- bot
      
      P[<check_1148@237:2>](<f_check_1482@258:2>:int,<f_check_1482@258:0>:int,<f_check_1482@258:1>:int),
      P[<<<check_1148@237:3>@240:1>@256:0>](<f_check_1482@258:2>:int,<f_check_1482@258:0>:int,<f_check_1482@258:1>:int,<f_check_1482@258:0>:int,<f_check_1482@258:5>:int),
      ((<f_check_1482@258:5> > <f_check_1482@258:1>) &&
       ((<f_check_1482@258:0> < <f_check_1482@258:2>) && <fail_1487@261:0>))
      |- P[<fail_1487@261:0>](<fail_1487@261:0>:bool)
      
      P[<<array_max_1033@198:3>@233:0>](<check_1148@237:0>:int,0:int,<check_1148@237:2>:int),
      P[<<make_array_1030@242:2>@254:0>](<check_1148@237:0>:int,<<check_1148@237:3>@240:0>:int,<<<check_1148@237:3>@240:1>@256:0>:int),
      P[<check_1148@237:2>](<check_1148@237:0>:int,<check_1148@237:1>:int,<check_1148@237:2>:int),
      (<check_1148@237:1> = 0)
      |- P[<<<check_1148@237:3>@240:1>@256:0>](<check_1148@237:0>:int,
                                               <check_1148@237:1>:int,
                                               <check_1148@237:2>:int,
                                               <<check_1148@237:3>@240:0>:int,
                                               <<<check_1148@237:3>@240:1>@256:0>:int)
      
      P[<make_array_1030@242:1>](<make_array_1030@242:0>:int,<make_array_1030@242:1>:int),
      ((0 <= <make_array_1030@242:1>) &&
       ((<make_array_1030@242:1> < <make_array_1030@242:0>) &&
        (<<make_array_1030@242:2>@254:0> = <make_array_1030@242:1>)))
      |- P[<<make_array_1030@242:2>@254:0>](<make_array_1030@242:0>:int,
                                            <make_array_1030@242:1>:int,
                                            <<make_array_1030@242:2>@254:0>:int)
      
      P[<<array_max_1033@198:3>@233:0>](<make_array_1030@242:0>:int,0:int,<check_1148@237:2>:int),
      P[<<check_1148@237:3>@240:0>](<make_array_1030@242:0>:int,0:int,<check_1148@237:2>:int,<make_array_1030@242:1>:int)|- P[<make_array_1030@242:1>](
      <make_array_1030@242:0>:int,<make_array_1030@242:1>:int)
      
      P[<check_1148@237:2>](<check_1148@237:0>:int,<check_1148@237:1>:int,<check_1148@237:2>:int),
      ((<check_1148@237:1> < <check_1148@237:0>) && (<<check_1148@237:3>@240:0> = <check_1148@237:1>))
      |- P[<<check_1148@237:3>@240:0>](<check_1148@237:0>:int,<check_1148@237:1>:int,
                                       <check_1148@237:2>:int,<<check_1148@237:3>@240:0>:int)
      
      P[<<array_max_1033@198:3>@233:0>](<check_1148@237:0>:int,0:int,<check_1148@237:2>:int), (
      <check_1148@237:1> = 0)
      |- P[<check_1148@237:2>](<check_1148@237:0>:int,<check_1148@237:1>:int,
                               <check_1148@237:2>:int)
      
      P[<array_max_1033@198:1>](<array_max_1033@198:0>:int,<array_max_1033@198:1>:int),
      P[<<<array_max_1033@198:2>@201:1>@217:0>](<array_max_1033@198:0>:int,<array_max_1033@198:1>:int,<array_max_1033@198:1>:int,<<array_max_1033@198:3>@233:0>:int),
      P[<<array_max_1033@221:3>@224:0>](<array_max_1033@198:0>:int,(1 + <array_max_1033@198:1>):int,var676:int),
      ((<<array_max_1033@198:3>@233:0> > var676) && (<array_max_1033@198:1> < <array_max_1033@198:0>))
      |- P[<<array_max_1033@198:3>@233:0>](<array_max_1033@198:0>:int,
                                           <array_max_1033@198:1>:int,
                                           <<array_max_1033@198:3>@233:0>:int)
      
      P[<array_max_1033@221:1>](<array_max_1033@221:0>:int,<array_max_1033@221:1>:int),
      ((<<array_max_1033@221:3>@224:0> = 0) && (<array_max_1033@221:1> >= <array_max_1033@221:0>))
      |- P[<<array_max_1033@221:3>@224:0>](<array_max_1033@221:0>:int,
                                           <array_max_1033@221:1>:int,
                                           <<array_max_1033@221:3>@224:0>:int)
      
      P[<array_max_1033@198:1>](<array_max_1033@221:0>:int,(-1 + <array_max_1033@221:1>):int),
      P[<<<array_max_1033@198:2>@201:1>@217:0>](<array_max_1033@221:0>:int,(
                                                -1 + <array_max_1033@221:1>):int,(
                                                -1 + <array_max_1033@221:1>):int,<f_array_max_1480@219:4>:int),
      (<array_max_1033@221:1> < (1 + <array_max_1033@221:0>))
      |- P[<array_max_1033@221:1>](<array_max_1033@221:0>:int,<array_max_1033@221:1>:int)
      
      P[<<make_array_1030@203:2>@215:0>](<array_max_1033@198:0>:int,<<array_max_1033@198:2>@201:0>:int,<<<array_max_1033@198:2>@201:1>@217:0>:int),
      P[<array_max_1033@198:1>](<array_max_1033@198:0>:int,<array_max_1033@198:1>:int), (
      <array_max_1033@198:1> = 0)
      |- P[<<<array_max_1033@198:2>@201:1>@217:0>](<array_max_1033@198:0>:int,
                                                   <array_max_1033@198:1>:int,
                                                   <<array_max_1033@198:2>@201:0>:int,
                                                   <<<array_max_1033@198:2>@201:1>@217:0>:int)
      
      P[<make_array_1030@203:1>](<make_array_1030@203:0>:int,<make_array_1030@203:1>:int),
      ((0 <= <make_array_1030@203:1>) &&
       ((<make_array_1030@203:1> < <make_array_1030@203:0>) &&
        (<<make_array_1030@203:2>@215:0> = <make_array_1030@203:1>)))
      |- P[<<make_array_1030@203:2>@215:0>](<make_array_1030@203:0>:int,
                                            <make_array_1030@203:1>:int,
                                            <<make_array_1030@203:2>@215:0>:int)
      
      P[<<array_max_1033@198:2>@201:0>](<make_array_1030@203:0>:int,0:int,<make_array_1030@203:1>:int)|- P[<make_array_1030@203:1>](
      <make_array_1030@203:0>:int,<make_array_1030@203:1>:int)
      
      P[<array_max_1033@198:1>](<array_max_1033@198:0>:int,<array_max_1033@198:1>:int),
      ((<array_max_1033@198:1> < <array_max_1033@198:0>) && (<<array_max_1033@198:2>@201:0> = <array_max_1033@198:1>))
      |- P[<<array_max_1033@198:2>@201:0>](<array_max_1033@198:0>:int,
                                           <array_max_1033@198:1>:int,
                                           <<array_max_1033@198:2>@201:0>:int)
      
       (<array_max_1033@198:1> = 0) |- P[<array_max_1033@198:1>](<array_max_1033@198:0>:int,
                                                                 <array_max_1033@198:1>:int)
    begin ParamSubstInfer.infer(304811)[3]
      
    end ParamSubstInfer.infer(304811)[3] (0.523921 sec.)
    inferred extra parameters:
      
    begin RefTypeInfer.elim_coeffs(304813)[3]
      
    end RefTypeInfer.elim_coeffs(304813)[3] (0.003999 sec.)
    begin GenHcSolver.solve(305738)[3]
      Horn clauses:
        P[<fail_1487@261:0>](<fail_1487@261:0>:bool)|- bot
        
        P[<check_1148@237:2>](<f_check_1482@258:2>:int,<f_check_1482@258:0>:int,<f_check_1482@258:1>:int),
        P[<<<check_1148@237:3>@240:1>@256:0>](<f_check_1482@258:2>:int,<f_check_1482@258:0>:int,<f_check_1482@258:1>:int,<f_check_1482@258:0>:int,<f_check_1482@258:5>:int),
        ((<f_check_1482@258:5> > <f_check_1482@258:1>) &&
         ((<f_check_1482@258:0> < <f_check_1482@258:2>) && <fail_1487@261:0>))
        |- P[<fail_1487@261:0>](<fail_1487@261:0>:bool)
        
        P[<<array_max_1033@198:3>@233:0>](<check_1148@237:0>:int,0:int,<check_1148@237:2>:int),
        P[<<make_array_1030@242:2>@254:0>](<check_1148@237:0>:int,<<check_1148@237:3>@240:0>:int,<<<check_1148@237:3>@240:1>@256:0>:int),
        P[<check_1148@237:2>](<check_1148@237:0>:int,<check_1148@237:1>:int,<check_1148@237:2>:int),
        (<check_1148@237:1> = 0)
        |- P[<<<check_1148@237:3>@240:1>@256:0>](<check_1148@237:0>:int,
                                                 <check_1148@237:1>:int,
                                                 <check_1148@237:2>:int,
                                                 <<check_1148@237:3>@240:0>:int,
                                                 <<<check_1148@237:3>@240:1>@256:0>:int)
        
        P[<make_array_1030@242:1>](<make_array_1030@242:0>:int,<make_array_1030@242:1>:int),
        ((0 <= <make_array_1030@242:1>) &&
         ((<make_array_1030@242:1> < <make_array_1030@242:0>) &&
          (<<make_array_1030@242:2>@254:0> = <make_array_1030@242:1>)))
        |- P[<<make_array_1030@242:2>@254:0>](<make_array_1030@242:0>:int,
                                              <make_array_1030@242:1>:int,
                                              <<make_array_1030@242:2>@254:0>:int)
        
        P[<<array_max_1033@198:3>@233:0>](<make_array_1030@242:0>:int,0:int,<check_1148@237:2>:int),
        P[<<check_1148@237:3>@240:0>](<make_array_1030@242:0>:int,0:int,<check_1148@237:2>:int,<make_array_1030@242:1>:int)|- P[<make_array_1030@242:1>](
        <make_array_1030@242:0>:int,<make_array_1030@242:1>:int)
        
        P[<check_1148@237:2>](<check_1148@237:0>:int,<check_1148@237:1>:int,<check_1148@237:2>:int),
        ((<check_1148@237:1> < <check_1148@237:0>) && (<<check_1148@237:3>@240:0> = <check_1148@237:1>))
        |- P[<<check_1148@237:3>@240:0>](<check_1148@237:0>:int,<check_1148@237:1>:int,
                                         <check_1148@237:2>:int,<<check_1148@237:3>@240:0>:int)
        
        P[<<array_max_1033@198:3>@233:0>](<check_1148@237:0>:int,0:int,<check_1148@237:2>:int),
        (<check_1148@237:1> = 0)
        |- P[<check_1148@237:2>](<check_1148@237:0>:int,<check_1148@237:1>:int,
                                 <check_1148@237:2>:int)
        
        P[<array_max_1033@198:1>](<array_max_1033@198:0>:int,<array_max_1033@198:1>:int),
        P[<<<array_max_1033@198:2>@201:1>@217:0>](<array_max_1033@198:0>:int,<array_max_1033@198:1>:int,<array_max_1033@198:1>:int,<<array_max_1033@198:3>@233:0>:int),
        P[<<array_max_1033@221:3>@224:0>](<array_max_1033@198:0>:int,(
                                          1 + <array_max_1033@198:1>):int,var676:int),
        ((<<array_max_1033@198:3>@233:0> > var676) && (<array_max_1033@198:1> < <array_max_1033@198:0>))
        |- P[<<array_max_1033@198:3>@233:0>](<array_max_1033@198:0>:int,
                                             <array_max_1033@198:1>:int,
                                             <<array_max_1033@198:3>@233:0>:int)
        
        P[<array_max_1033@221:1>](<array_max_1033@221:0>:int,<array_max_1033@221:1>:int),
        ((<<array_max_1033@221:3>@224:0> = 0) && (<array_max_1033@221:1> >= <array_max_1033@221:0>))
        |- P[<<array_max_1033@221:3>@224:0>](<array_max_1033@221:0>:int,
                                             <array_max_1033@221:1>:int,
                                             <<array_max_1033@221:3>@224:0>:int)
        
        P[<array_max_1033@198:1>](<array_max_1033@221:0>:int,(-1 + <array_max_1033@221:1>):int),
        P[<<<array_max_1033@198:2>@201:1>@217:0>](<array_max_1033@221:0>:int,(
                                                  -1 + <array_max_1033@221:1>):int,(
                                                  -1 + <array_max_1033@221:1>):int,<f_array_max_1480@219:4>:int),
        (<array_max_1033@221:1> < (1 + <array_max_1033@221:0>))
        |- P[<array_max_1033@221:1>](<array_max_1033@221:0>:int,<array_max_1033@221:1>:int)
        
        P[<<make_array_1030@203:2>@215:0>](<array_max_1033@198:0>:int,<<array_max_1033@198:2>@201:0>:int,<<<array_max_1033@198:2>@201:1>@217:0>:int),
        P[<array_max_1033@198:1>](<array_max_1033@198:0>:int,<array_max_1033@198:1>:int), (
        <array_max_1033@198:1> = 0)
        |- P[<<<array_max_1033@198:2>@201:1>@217:0>](<array_max_1033@198:0>:int,
                                                     <array_max_1033@198:1>:int,
                                                     <<array_max_1033@198:2>@201:0>:int,
                                                     <<<array_max_1033@198:2>@201:1>@217:0>:int)
        
        P[<make_array_1030@203:1>](<make_array_1030@203:0>:int,<make_array_1030@203:1>:int),
        ((0 <= <make_array_1030@203:1>) &&
         ((<make_array_1030@203:1> < <make_array_1030@203:0>) &&
          (<<make_array_1030@203:2>@215:0> = <make_array_1030@203:1>)))
        |- P[<<make_array_1030@203:2>@215:0>](<make_array_1030@203:0>:int,
                                              <make_array_1030@203:1>:int,
                                              <<make_array_1030@203:2>@215:0>:int)
        
        P[<<array_max_1033@198:2>@201:0>](<make_array_1030@203:0>:int,0:int,<make_array_1030@203:1>:int)|- P[<make_array_1030@203:1>](
        <make_array_1030@203:0>:int,<make_array_1030@203:1>:int)
        
        P[<array_max_1033@198:1>](<array_max_1033@198:0>:int,<array_max_1033@198:1>:int),
        ((<array_max_1033@198:1> < <array_max_1033@198:0>) && (<<array_max_1033@198:2>@201:0> = <array_max_1033@198:1>))
        |- P[<<array_max_1033@198:2>@201:0>](<array_max_1033@198:0>:int,
                                             <array_max_1033@198:1>:int,
                                             <<array_max_1033@198:2>@201:0>:int)
        
         (<array_max_1033@198:1> = 0)
        |- P[<array_max_1033@198:1>](<array_max_1033@198:0>:int,<array_max_1033@198:1>:int)
      lower bounds:
        P[<array_max_1033@198:1>](<array_max_1033@198:0>:int,<array_max_1033@198:1>:int) = (<array_max_1033@198:1> = 0)
        P[<<array_max_1033@198:2>@201:0>](<array_max_1033@198:0>:int,<array_max_1033@198:1>:int,<<array_max_1033@198:2>@201:0>:int) =
        ((<array_max_1033@198:1> = 0) &&
         ((<array_max_1033@198:1> < <array_max_1033@198:0>) &&
          (<<array_max_1033@198:2>@201:0> = <array_max_1033@198:1>)))
        P[<make_array_1030@203:1>](<make_array_1030@203:0>:int,<make_array_1030@203:1>:int) =
        ((<make_array_1030@203:1> = 0) && (0 < <make_array_1030@203:0>))
        P[<<make_array_1030@203:2>@215:0>](<make_array_1030@203:0>:int,<make_array_1030@203:1>:int,<<make_array_1030@203:2>@215:0>:int) =
        ((<make_array_1030@203:1> = 0) &&
         ((<make_array_1030@203:1> < <make_array_1030@203:0>) &&
          ((0 < <make_array_1030@203:0>) && (<<make_array_1030@203:2>@215:0> = <make_array_1030@203:1>))))
        P[<<<array_max_1033@198:2>@201:1>@217:0>](<array_max_1033@198:0>:int,<array_max_1033@198:1>:int,<<array_max_1033@198:2>@201:0>:int,<<<array_max_1033@198:2>@201:1>@217:0>:int) =
        ((<<array_max_1033@198:2>@201:0> = 0) &&
         ((<array_max_1033@198:1> = 0) &&
          ((<<array_max_1033@198:2>@201:0> < <array_max_1033@198:0>) &&
           ((0 < <array_max_1033@198:0>) && (<<<array_max_1033@198:2>@201:1>@217:0> = <<array_max_1033@198:2>@201:0>)))))
        P[<array_max_1033@221:1>](<array_max_1033@221:0>:int,<array_max_1033@221:1>:int) =
        ((<array_max_1033@221:1> = 1) &&
         ((0 < <array_max_1033@221:0>) && (<array_max_1033@221:1> < (1 + <array_max_1033@221:0>))))
        P[<<array_max_1033@221:3>@224:0>](<array_max_1033@221:0>:int,<array_max_1033@221:1>:int,<<array_max_1033@221:3>@224:0>:int) =
        ((<<array_max_1033@221:3>@224:0> = 0) &&
         ((<array_max_1033@221:1> = 1) &&
          ((0 < <array_max_1033@221:0>) && (<array_max_1033@221:1> = <array_max_1033@221:0>))))
        P[<<array_max_1033@198:3>@233:0>](<array_max_1033@198:0>:int,<array_max_1033@198:1>:int,<<array_max_1033@198:3>@233:0>:int) =
        ((<array_max_1033@198:1> = 0) &&
         ((<<array_max_1033@198:3>@233:0> = <array_max_1033@198:1>) &&
          ((0 < <array_max_1033@198:0>) &&
           (((1 + <array_max_1033@198:1>) = <array_max_1033@198:0>) && (<<array_max_1033@198:3>@233:0> > 0)))))
        P[<check_1148@237:2>](<check_1148@237:0>:int,<check_1148@237:1>:int,<check_1148@237:2>:int) = false
        P[<<check_1148@237:3>@240:0>](<check_1148@237:0>:int,<check_1148@237:1>:int,<check_1148@237:2>:int,<<check_1148@237:3>@240:0>:int) =
        false
        P[<make_array_1030@242:1>](<make_array_1030@242:0>:int,<make_array_1030@242:1>:int) = false
        P[<<make_array_1030@242:2>@254:0>](<make_array_1030@242:0>:int,<make_array_1030@242:1>:int,<<make_array_1030@242:2>@254:0>:int) =
        false
        P[<<<check_1148@237:3>@240:1>@256:0>](<check_1148@237:0>:int,<check_1148@237:1>:int,<check_1148@237:2>:int,<<check_1148@237:3>@240:0>:int,<<<check_1148@237:3>@240:1>@256:0>:int) =
        false
        P[<fail_1487@261:0>](<fail_1487@261:0>:bool) = false
      upper bounds:
        P[<<make_array_1030@242:2>@254:0>](var689:int,var690:int,var691:int) = true
        P[<<make_array_1030@203:2>@215:0>](var683:int,var684:int,var685:int) = true
      begin GenHcSolver.classify_pids(318574)[4]
        output:
          [<<make_array_1030@203:2>@215:0>;<<make_array_1030@242:2>@254:0>]
      end GenHcSolver.classify_pids(318574)[4] (0.000000 sec.)
      begin ApronInterface.convex_hull_interpolate(318585)[4]
        lb:((<make_array_1030@203:1> = 0) &&
            ((<make_array_1030@203:1> < <make_array_1030@203:0>) &&
             ((0 < <make_array_1030@203:0>) && (<<make_array_1030@203:2>@215:0> = <make_array_1030@203:1>))))
        nub:false
        lb':((<make_array_1030@203:1> = 0) &&
             ((<make_array_1030@203:1> < <make_array_1030@203:0>) &&
              ((0 < <make_array_1030@203:0>) && (<<make_array_1030@203:2>@215:0> = <make_array_1030@203:1>))))
        nub':false
        begin InterpProver.interpolate(318586)[5]
          begin InterpProver.interpolate_fresh(318587)[6]
            begin InterpProver.interpolate_log(318588)[7]
              input1: ((<make_array_1030@203:1> = 0) &&
                       ((<make_array_1030@203:1> < <make_array_1030@203:0>) &&
                        ((0 < <make_array_1030@203:0>) && (<<make_array_1030@203:2>@215:0> = <make_array_1030@203:1>))))
              input2: false
              begin InterpProver.interpolate_check(318589)[8]
                begin InterpProver.interpolate_simplify(318590)[9]
                  begin InterpProver.interpolate_quick(318680)[10]
                    
                  end InterpProver.interpolate_quick(318680)[10] (0.000000 sec.)
                  
                end InterpProver.interpolate_simplify(318590)[9] (0.000000 sec.)
                
              end InterpProver.interpolate_check(318589)[8] (0.000000 sec.)
              output: true
            end InterpProver.interpolate_log(318588)[7] (0.000000 sec.)
            
          end InterpProver.interpolate_fresh(318587)[6] (0.000000 sec.)
          
        end InterpProver.interpolate(318586)[5] (0.000000 sec.)
        output:
          P[<<make_array_1030@203:2>@215:0>](<make_array_1030@203:0>:int,<make_array_1030@203:1>:int,<<make_array_1030@203:2>@215:0>:int) =
          true
          P[<<make_array_1030@242:2>@254:0>](<make_array_1030@203:0>:int,<make_array_1030@203:1>:int,<<make_array_1030@203:2>@215:0>:int) =
          true
      end ApronInterface.convex_hull_interpolate(318585)[4] (0.000000 sec.)
      Horn clauses:
        P[<fail_1487@261:0>](<fail_1487@261:0>:bool)|- bot
        
        P[<check_1148@237:2>](<f_check_1482@258:2>:int,<f_check_1482@258:0>:int,<f_check_1482@258:1>:int),
        P[<<<check_1148@237:3>@240:1>@256:0>](<f_check_1482@258:2>:int,<f_check_1482@258:0>:int,<f_check_1482@258:1>:int,<f_check_1482@258:0>:int,<f_check_1482@258:5>:int),
        ((<f_check_1482@258:5> > <f_check_1482@258:1>) &&
         ((<f_check_1482@258:0> < <f_check_1482@258:2>) && <fail_1487@261:0>))
        |- P[<fail_1487@261:0>](<fail_1487@261:0>:bool)
        
        P[<<array_max_1033@198:3>@233:0>](<check_1148@237:0>:int,0:int,<check_1148@237:2>:int),
        P[<check_1148@237:2>](<check_1148@237:0>:int,<check_1148@237:1>:int,<check_1148@237:2>:int),
        (<check_1148@237:1> = 0)
        |- P[<<<check_1148@237:3>@240:1>@256:0>](<check_1148@237:0>:int,
                                                 <check_1148@237:1>:int,
                                                 <check_1148@237:2>:int,
                                                 <<check_1148@237:3>@240:0>:int,
                                                 <<<check_1148@237:3>@240:1>@256:0>:int)
        
        P[<<array_max_1033@198:3>@233:0>](<make_array_1030@242:0>:int,0:int,<check_1148@237:2>:int),
        P[<<check_1148@237:3>@240:0>](<make_array_1030@242:0>:int,0:int,<check_1148@237:2>:int,<make_array_1030@242:1>:int)|- P[<make_array_1030@242:1>](
        <make_array_1030@242:0>:int,<make_array_1030@242:1>:int)
        
        P[<check_1148@237:2>](<check_1148@237:0>:int,<check_1148@237:1>:int,<check_1148@237:2>:int),
        ((<check_1148@237:1> < <check_1148@237:0>) && (<<check_1148@237:3>@240:0> = <check_1148@237:1>))
        |- P[<<check_1148@237:3>@240:0>](<check_1148@237:0>:int,<check_1148@237:1>:int,
                                         <check_1148@237:2>:int,<<check_1148@237:3>@240:0>:int)
        
        P[<<array_max_1033@198:3>@233:0>](<check_1148@237:0>:int,0:int,<check_1148@237:2>:int),
        (<check_1148@237:1> = 0)
        |- P[<check_1148@237:2>](<check_1148@237:0>:int,<check_1148@237:1>:int,
                                 <check_1148@237:2>:int)
        
        P[<array_max_1033@198:1>](<array_max_1033@198:0>:int,<array_max_1033@198:1>:int),
        P[<<<array_max_1033@198:2>@201:1>@217:0>](<array_max_1033@198:0>:int,<array_max_1033@198:1>:int,<array_max_1033@198:1>:int,<<array_max_1033@198:3>@233:0>:int),
        P[<<array_max_1033@221:3>@224:0>](<array_max_1033@198:0>:int,(
                                          1 + <array_max_1033@198:1>):int,var676:int),
        ((<<array_max_1033@198:3>@233:0> > var676) && (<array_max_1033@198:1> < <array_max_1033@198:0>))
        |- P[<<array_max_1033@198:3>@233:0>](<array_max_1033@198:0>:int,
                                             <array_max_1033@198:1>:int,
                                             <<array_max_1033@198:3>@233:0>:int)
        
        P[<array_max_1033@221:1>](<array_max_1033@221:0>:int,<array_max_1033@221:1>:int),
        ((<<array_max_1033@221:3>@224:0> = 0) && (<array_max_1033@221:1> >= <array_max_1033@221:0>))
        |- P[<<array_max_1033@221:3>@224:0>](<array_max_1033@221:0>:int,
                                             <array_max_1033@221:1>:int,
                                             <<array_max_1033@221:3>@224:0>:int)
        
        P[<array_max_1033@198:1>](<array_max_1033@221:0>:int,(-1 + <array_max_1033@221:1>):int),
        P[<<<array_max_1033@198:2>@201:1>@217:0>](<array_max_1033@221:0>:int,(
                                                  -1 + <array_max_1033@221:1>):int,(
                                                  -1 + <array_max_1033@221:1>):int,<f_array_max_1480@219:4>:int),
        (<array_max_1033@221:1> < (1 + <array_max_1033@221:0>))
        |- P[<array_max_1033@221:1>](<array_max_1033@221:0>:int,<array_max_1033@221:1>:int)
        
        P[<<make_array_1030@203:2>@215:0>](<array_max_1033@198:0>:int,<<array_max_1033@198:2>@201:0>:int,<<<array_max_1033@198:2>@201:1>@217:0>:int),
        P[<array_max_1033@198:1>](<array_max_1033@198:0>:int,<array_max_1033@198:1>:int), (
        <array_max_1033@198:1> = 0)
        |- P[<<<array_max_1033@198:2>@201:1>@217:0>](<array_max_1033@198:0>:int,
                                                     <array_max_1033@198:1>:int,
                                                     <<array_max_1033@198:2>@201:0>:int,
                                                     <<<array_max_1033@198:2>@201:1>@217:0>:int)
        
        P[<make_array_1030@203:1>](<make_array_1030@203:0>:int,<make_array_1030@203:1>:int),
        ((0 <= <make_array_1030@203:1>) &&
         ((<make_array_1030@203:1> < <make_array_1030@203:0>) &&
          (<<make_array_1030@203:2>@215:0> = <make_array_1030@203:1>)))
        |- P[<<make_array_1030@203:2>@215:0>](<make_array_1030@203:0>:int,
                                              <make_array_1030@203:1>:int,
                                              <<make_array_1030@203:2>@215:0>:int)
        
        P[<<array_max_1033@198:2>@201:0>](<make_array_1030@203:0>:int,0:int,<make_array_1030@203:1>:int)|- P[<make_array_1030@203:1>](
        <make_array_1030@203:0>:int,<make_array_1030@203:1>:int)
        
        P[<array_max_1033@198:1>](<array_max_1033@198:0>:int,<array_max_1033@198:1>:int),
        ((<array_max_1033@198:1> < <array_max_1033@198:0>) && (<<array_max_1033@198:2>@201:0> = <array_max_1033@198:1>))
        |- P[<<array_max_1033@198:2>@201:0>](<array_max_1033@198:0>:int,
                                             <array_max_1033@198:1>:int,
                                             <<array_max_1033@198:2>@201:0>:int)
        
         (<array_max_1033@198:1> = 0)
        |- P[<array_max_1033@198:1>](<array_max_1033@198:0>:int,<array_max_1033@198:1>:int)
      lower bounds:
        P[<array_max_1033@198:1>](<array_max_1033@198:0>:int,<array_max_1033@198:1>:int) = (<array_max_1033@198:1> = 0)
        P[<<array_max_1033@198:2>@201:0>](<array_max_1033@198:0>:int,<array_max_1033@198:1>:int,<<array_max_1033@198:2>@201:0>:int) =
        ((<array_max_1033@198:1> = 0) &&
         ((<array_max_1033@198:1> < <array_max_1033@198:0>) &&
          (<<array_max_1033@198:2>@201:0> = <array_max_1033@198:1>)))
        P[<make_array_1030@203:1>](<make_array_1030@203:0>:int,<make_array_1030@203:1>:int) =
        ((<make_array_1030@203:1> = 0) && (0 < <make_array_1030@203:0>))
        P[<<make_array_1030@203:2>@215:0>](<make_array_1030@203:0>:int,<make_array_1030@203:1>:int,<<make_array_1030@203:2>@215:0>:int) =
        ((<make_array_1030@203:1> = 0) &&
         ((<make_array_1030@203:1> < <make_array_1030@203:0>) &&
          ((0 < <make_array_1030@203:0>) && (<<make_array_1030@203:2>@215:0> = <make_array_1030@203:1>))))
        P[<<<array_max_1033@198:2>@201:1>@217:0>](<array_max_1033@198:0>:int,<array_max_1033@198:1>:int,<<array_max_1033@198:2>@201:0>:int,<<<array_max_1033@198:2>@201:1>@217:0>:int) =
        ((<<array_max_1033@198:2>@201:0> = 0) &&
         ((<array_max_1033@198:1> = 0) &&
          ((<<array_max_1033@198:2>@201:0> < <array_max_1033@198:0>) &&
           ((0 < <array_max_1033@198:0>) && (<<<array_max_1033@198:2>@201:1>@217:0> = <<array_max_1033@198:2>@201:0>)))))
        P[<array_max_1033@221:1>](<array_max_1033@221:0>:int,<array_max_1033@221:1>:int) =
        ((<array_max_1033@221:1> = 1) &&
         ((0 < <array_max_1033@221:0>) && (<array_max_1033@221:1> < (1 + <array_max_1033@221:0>))))
        P[<<array_max_1033@221:3>@224:0>](<array_max_1033@221:0>:int,<array_max_1033@221:1>:int,<<array_max_1033@221:3>@224:0>:int) =
        ((<<array_max_1033@221:3>@224:0> = 0) &&
         ((<array_max_1033@221:1> = 1) &&
          ((0 < <array_max_1033@221:0>) && (<array_max_1033@221:1> = <array_max_1033@221:0>))))
        P[<<array_max_1033@198:3>@233:0>](<array_max_1033@198:0>:int,<array_max_1033@198:1>:int,<<array_max_1033@198:3>@233:0>:int) =
        ((<array_max_1033@198:1> = 0) &&
         ((<<array_max_1033@198:3>@233:0> = <array_max_1033@198:1>) &&
          ((0 < <array_max_1033@198:0>) &&
           (((1 + <array_max_1033@198:1>) = <array_max_1033@198:0>) && (<<array_max_1033@198:3>@233:0> > 0)))))
        P[<check_1148@237:2>](<check_1148@237:0>:int,<check_1148@237:1>:int,<check_1148@237:2>:int) = false
        P[<<<check_1148@237:3>@240:1>@256:0>](<check_1148@237:0>:int,<check_1148@237:1>:int,<check_1148@237:2>:int,<<check_1148@237:3>@240:0>:int,<<<check_1148@237:3>@240:1>@256:0>:int) =
        false
        P[<<check_1148@237:3>@240:0>](<check_1148@237:0>:int,<check_1148@237:1>:int,<check_1148@237:2>:int,<<check_1148@237:3>@240:0>:int) =
        false
        P[<fail_1487@261:0>](<fail_1487@261:0>:bool) = false
        P[<make_array_1030@242:1>](<make_array_1030@242:0>:int,<make_array_1030@242:1>:int) = false
      upper bounds:
        P[<make_array_1030@242:1>](var695:int,var696:int) = true
        P[<make_array_1030@203:1>](var693:int,var694:int) = true
      begin GenHcSolver.classify_pids(335477)[4]
        output:
          [<make_array_1030@203:1>;<make_array_1030@242:1>]
      end GenHcSolver.classify_pids(335477)[4] (0.001000 sec.)
      begin ApronInterface.convex_hull_interpolate(335488)[4]
        lb:((<make_array_1030@203:1> = 0) && (0 < <make_array_1030@203:0>))
        nub:false
        lb':((<make_array_1030@203:1> = 0) && (0 < <make_array_1030@203:0>))
        nub':false
        begin InterpProver.interpolate(335489)[5]
          begin InterpProver.interpolate_fresh(335490)[6]
            begin InterpProver.interpolate_log(335491)[7]
              input1: ((<make_array_1030@203:1> = 0) && (0 < <make_array_1030@203:0>))
              input2: false
              begin InterpProver.interpolate_check(335492)[8]
                begin InterpProver.interpolate_simplify(335493)[9]
                  begin InterpProver.interpolate_quick(335525)[10]
                    
                  end InterpProver.interpolate_quick(335525)[10] (0.000000 sec.)
                  
                end InterpProver.interpolate_simplify(335493)[9] (0.000000 sec.)
                
              end InterpProver.interpolate_check(335492)[8] (0.000000 sec.)
              output: true
            end InterpProver.interpolate_log(335491)[7] (0.000000 sec.)
            
          end InterpProver.interpolate_fresh(335490)[6] (0.000000 sec.)
          
        end InterpProver.interpolate(335489)[5] (0.000000 sec.)
        output:
          P[<make_array_1030@203:1>](<make_array_1030@203:0>:int,<make_array_1030@203:1>:int) = true
          P[<make_array_1030@242:1>](<make_array_1030@203:0>:int,<make_array_1030@203:1>:int) = true
      end ApronInterface.convex_hull_interpolate(335488)[4] (0.000000 sec.)
      Horn clauses:
        P[<fail_1487@261:0>](<fail_1487@261:0>:bool)|- bot
        
        P[<check_1148@237:2>](<f_check_1482@258:2>:int,<f_check_1482@258:0>:int,<f_check_1482@258:1>:int),
        P[<<<check_1148@237:3>@240:1>@256:0>](<f_check_1482@258:2>:int,<f_check_1482@258:0>:int,<f_check_1482@258:1>:int,<f_check_1482@258:0>:int,<f_check_1482@258:5>:int),
        ((<f_check_1482@258:5> > <f_check_1482@258:1>) &&
         ((<f_check_1482@258:0> < <f_check_1482@258:2>) && <fail_1487@261:0>))
        |- P[<fail_1487@261:0>](<fail_1487@261:0>:bool)
        
        P[<<array_max_1033@198:3>@233:0>](<check_1148@237:0>:int,0:int,<check_1148@237:2>:int),
        P[<check_1148@237:2>](<check_1148@237:0>:int,<check_1148@237:1>:int,<check_1148@237:2>:int),
        (<check_1148@237:1> = 0)
        |- P[<<<check_1148@237:3>@240:1>@256:0>](<check_1148@237:0>:int,
                                                 <check_1148@237:1>:int,
                                                 <check_1148@237:2>:int,
                                                 <<check_1148@237:3>@240:0>:int,
                                                 <<<check_1148@237:3>@240:1>@256:0>:int)
        
        P[<check_1148@237:2>](<check_1148@237:0>:int,<check_1148@237:1>:int,<check_1148@237:2>:int),
        ((<check_1148@237:1> < <check_1148@237:0>) && (<<check_1148@237:3>@240:0> = <check_1148@237:1>))
        |- P[<<check_1148@237:3>@240:0>](<check_1148@237:0>:int,<check_1148@237:1>:int,
                                         <check_1148@237:2>:int,<<check_1148@237:3>@240:0>:int)
        
        P[<<array_max_1033@198:3>@233:0>](<check_1148@237:0>:int,0:int,<check_1148@237:2>:int),
        (<check_1148@237:1> = 0)
        |- P[<check_1148@237:2>](<check_1148@237:0>:int,<check_1148@237:1>:int,
                                 <check_1148@237:2>:int)
        
        P[<array_max_1033@198:1>](<array_max_1033@198:0>:int,<array_max_1033@198:1>:int),
        P[<<<array_max_1033@198:2>@201:1>@217:0>](<array_max_1033@198:0>:int,<array_max_1033@198:1>:int,<array_max_1033@198:1>:int,<<array_max_1033@198:3>@233:0>:int),
        P[<<array_max_1033@221:3>@224:0>](<array_max_1033@198:0>:int,(
                                          1 + <array_max_1033@198:1>):int,var676:int),
        ((<<array_max_1033@198:3>@233:0> > var676) && (<array_max_1033@198:1> < <array_max_1033@198:0>))
        |- P[<<array_max_1033@198:3>@233:0>](<array_max_1033@198:0>:int,
                                             <array_max_1033@198:1>:int,
                                             <<array_max_1033@198:3>@233:0>:int)
        
        P[<array_max_1033@221:1>](<array_max_1033@221:0>:int,<array_max_1033@221:1>:int),
        ((<<array_max_1033@221:3>@224:0> = 0) && (<array_max_1033@221:1> >= <array_max_1033@221:0>))
        |- P[<<array_max_1033@221:3>@224:0>](<array_max_1033@221:0>:int,
                                             <array_max_1033@221:1>:int,
                                             <<array_max_1033@221:3>@224:0>:int)
        
        P[<array_max_1033@198:1>](<array_max_1033@221:0>:int,(-1 + <array_max_1033@221:1>):int),
        P[<<<array_max_1033@198:2>@201:1>@217:0>](<array_max_1033@221:0>:int,(
                                                  -1 + <array_max_1033@221:1>):int,(
                                                  -1 + <array_max_1033@221:1>):int,<f_array_max_1480@219:4>:int),
        (<array_max_1033@221:1> < (1 + <array_max_1033@221:0>))
        |- P[<array_max_1033@221:1>](<array_max_1033@221:0>:int,<array_max_1033@221:1>:int)
        
        P[<<make_array_1030@203:2>@215:0>](<array_max_1033@198:0>:int,<<array_max_1033@198:2>@201:0>:int,<<<array_max_1033@198:2>@201:1>@217:0>:int),
        P[<array_max_1033@198:1>](<array_max_1033@198:0>:int,<array_max_1033@198:1>:int), (
        <array_max_1033@198:1> = 0)
        |- P[<<<array_max_1033@198:2>@201:1>@217:0>](<array_max_1033@198:0>:int,
                                                     <array_max_1033@198:1>:int,
                                                     <<array_max_1033@198:2>@201:0>:int,
                                                     <<<array_max_1033@198:2>@201:1>@217:0>:int)
        
        
        ((0 <= <make_array_1030@203:1>) &&
         ((<make_array_1030@203:1> < <make_array_1030@203:0>) &&
          (<<make_array_1030@203:2>@215:0> = <make_array_1030@203:1>)))
        |- P[<<make_array_1030@203:2>@215:0>](<make_array_1030@203:0>:int,
                                              <make_array_1030@203:1>:int,
                                              <<make_array_1030@203:2>@215:0>:int)
        
        P[<array_max_1033@198:1>](<array_max_1033@198:0>:int,<array_max_1033@198:1>:int),
        ((<array_max_1033@198:1> < <array_max_1033@198:0>) && (<<array_max_1033@198:2>@201:0> = <array_max_1033@198:1>))
        |- P[<<array_max_1033@198:2>@201:0>](<array_max_1033@198:0>:int,
                                             <array_max_1033@198:1>:int,
                                             <<array_max_1033@198:2>@201:0>:int)
        
         (<array_max_1033@198:1> = 0)
        |- P[<array_max_1033@198:1>](<array_max_1033@198:0>:int,<array_max_1033@198:1>:int)
      lower bounds:
        P[<<make_array_1030@203:2>@215:0>](<make_array_1030@203:0>:int,<make_array_1030@203:1>:int,<<make_array_1030@203:2>@215:0>:int) =
        ((0 <= <make_array_1030@203:1>) &&
         ((<make_array_1030@203:1> < <make_array_1030@203:0>) &&
          (<<make_array_1030@203:2>@215:0> = <make_array_1030@203:1>)))
        P[<array_max_1033@198:1>](<array_max_1033@198:0>:int,<array_max_1033@198:1>:int) = (<array_max_1033@198:1> = 0)
        P[<<<array_max_1033@198:2>@201:1>@217:0>](<array_max_1033@198:0>:int,<array_max_1033@198:1>:int,<<array_max_1033@198:2>@201:0>:int,<<<array_max_1033@198:2>@201:1>@217:0>:int) =
        ((<array_max_1033@198:1> = 0) &&
         ((0 <= <<array_max_1033@198:2>@201:0>) &&
          ((<<array_max_1033@198:2>@201:0> < <array_max_1033@198:0>) &&
           (<<<array_max_1033@198:2>@201:1>@217:0> = <<array_max_1033@198:2>@201:0>))))
        P[<<array_max_1033@198:2>@201:0>](<array_max_1033@198:0>:int,<array_max_1033@198:1>:int,<<array_max_1033@198:2>@201:0>:int) =
        ((<array_max_1033@198:1> = 0) &&
         ((<array_max_1033@198:1> < <array_max_1033@198:0>) &&
          (<<array_max_1033@198:2>@201:0> = <array_max_1033@198:1>)))
        P[<array_max_1033@221:1>](<array_max_1033@221:0>:int,<array_max_1033@221:1>:int) =
        ((<array_max_1033@221:1> = 1) && (<array_max_1033@221:1> < (1 + <array_max_1033@221:0>)))
        P[<<array_max_1033@221:3>@224:0>](<array_max_1033@221:0>:int,<array_max_1033@221:1>:int,<<array_max_1033@221:3>@224:0>:int) =
        ((<<array_max_1033@221:3>@224:0> = 0) &&
         ((<array_max_1033@221:1> = 1) && (<array_max_1033@221:1> = <array_max_1033@221:0>)))
        P[<<array_max_1033@198:3>@233:0>](<array_max_1033@198:0>:int,<array_max_1033@198:1>:int,<<array_max_1033@198:3>@233:0>:int) =
        ((<array_max_1033@198:1> = 0) &&
         ((<<array_max_1033@198:3>@233:0> = <array_max_1033@198:1>) &&
          (((1 + <array_max_1033@198:1>) = <array_max_1033@198:0>) && (<<array_max_1033@198:3>@233:0> > 0))))
        P[<check_1148@237:2>](<check_1148@237:0>:int,<check_1148@237:1>:int,<check_1148@237:2>:int) = false
        P[<<<check_1148@237:3>@240:1>@256:0>](<check_1148@237:0>:int,<check_1148@237:1>:int,<check_1148@237:2>:int,<<check_1148@237:3>@240:0>:int,<<<check_1148@237:3>@240:1>@256:0>:int) =
        false
        P[<<check_1148@237:3>@240:0>](<check_1148@237:0>:int,<check_1148@237:1>:int,<check_1148@237:2>:int,<<check_1148@237:3>@240:0>:int) =
        false
        P[<fail_1487@261:0>](<fail_1487@261:0>:bool) = false
      upper bounds:
        P[<<array_max_1033@198:3>@233:0>](var710:int,var711:int,var712:int) = ((var711 <> 0) || (0 >= var710))
        P[<<array_max_1033@221:3>@224:0>](var705:int,var706:int,var707:int) =
        ((var706 <> 1) || ((0 >= var705) || (0 <= var707)))
      begin GenHcSolver.classify_pids(351507)[4]
        output:
          [<<array_max_1033@221:3>@224:0>;<<array_max_1033@198:3>@233:0>]
      end GenHcSolver.classify_pids(351507)[4] (0.001000 sec.)
      begin ApronInterface.convex_hull_interpolate(351584)[4]
        lb:(((<<array_max_1033@221:3>@224:0> = 0) &&
             ((<array_max_1033@221:1> = 1) && (<array_max_1033@221:1> = <array_max_1033@221:0>))) ||
            ((<array_max_1033@221:1> = 0) &&
             ((<<array_max_1033@221:3>@224:0> = <array_max_1033@221:1>) &&
              (((1 + <array_max_1033@221:1>) = <array_max_1033@221:0>) && (<<array_max_1033@221:3>@224:0> > 0)))))
        nub:((not
                ((<array_max_1033@221:1> <> 1) ||
                 ((0 >= <array_max_1033@221:0>) || (0 <= <<array_max_1033@221:3>@224:0>)))) ||
             (not ((<array_max_1033@221:1> <> 0) || (0 >= <array_max_1033@221:0>))))
        lb':(((<<array_max_1033@221:3>@224:0> = 0) &&
              ((<array_max_1033@221:1> = 1) && (<array_max_1033@221:1> = <array_max_1033@221:0>))) ||
             ((<array_max_1033@221:1> = 0) &&
              ((<<array_max_1033@221:3>@224:0> = <array_max_1033@221:1>) &&
               (((1 + <array_max_1033@221:1>) = <array_max_1033@221:0>) && (<<array_max_1033@221:3>@224:0> > 0)))))
        nub':((not
                 ((<array_max_1033@221:1> <> 1) ||
                  ((0 >= <array_max_1033@221:0>) || (0 <= <<array_max_1033@221:3>@224:0>)))) ||
              (not ((<array_max_1033@221:1> <> 0) || (0 >= <array_max_1033@221:0>))))
        begin InterpProver.interpolate(351585)[5]
          begin InterpProver.interpolate_fresh(351586)[6]
            begin InterpProver.interpolate_log(351587)[7]
              input1: (((<<array_max_1033@221:3>@224:0> = 0) &&
                        ((<array_max_1033@221:1> = 1) && (<array_max_1033@221:1> = <array_max_1033@221:0>))) ||
                       ((<array_max_1033@221:1> = 0) &&
                        ((<<array_max_1033@221:3>@224:0> = <array_max_1033@221:1>) &&
                         (((1 + <array_max_1033@221:1>) = <array_max_1033@221:0>) &&
                          (<<array_max_1033@221:3>@224:0> > 0)))))
              input2: ((not
                          ((<array_max_1033@221:1> <> 1) ||
                           ((0 >= <array_max_1033@221:0>) || (0 <= <<array_max_1033@221:3>@224:0>)))) ||
                       (not ((<array_max_1033@221:1> <> 0) || (0 >= <array_max_1033@221:0>))))
              begin InterpProver.interpolate_check(351588)[8]
                begin InterpProver.interpolate_simplify(351589)[9]
                  begin InterpProver.interpolate_quick(351820)[10]
                    begin CsisatInterface.interpolate_csisat_wrap(351829)[11]
                      begin CsisatInterface.interpolate_csisat_post_process(351830)[12]
                        begin CsisatInterface.interpolate_csisat_log(351831)[13]
                          input1: ((0 = v_sep_array_max_1033_sep_221_sep_1 & v_sep_array_max_1033_sep_221_sep_0 = (1 + v_sep_array_max_1033_sep_221_sep_1) & v_sep_array_max_1033_sep_221_sep_1 = v_sep_array_max_1033_sep_221_sep_3_sep_224_sep_0 & 1 <= v_sep_array_max_1033_sep_221_sep_3_sep_224_sep_0) | (0 = v_sep_array_max_1033_sep_221_sep_3_sep_224_sep_0 & 1 = v_sep_array_max_1033_sep_221_sep_1 & v_sep_array_max_1033_sep_221_sep_0 = v_sep_array_max_1033_sep_221_sep_1))
                          input2: (((1 = v_sep_array_max_1033_sep_221_sep_1 & (1 + v_sep_array_max_1033_sep_221_sep_3_sep_224_sep_0) <= 0) | 0 = v_sep_array_max_1033_sep_221_sep_1) & 1 <= v_sep_array_max_1033_sep_221_sep_0)
                          begin CsisatInterface.interpolate_csisat_raw(351832)[14]
                            
                          end CsisatInterface.interpolate_csisat_raw(351832)[14] (0.003000 sec.)
                          output: (((((0 = v_sep_array_max_1033_sep_221_sep_1 | -2*v_sep_array_max_1033_sep_221_sep_3_sep_224_sep_0 <= 0) & not 0 = v_sep_array_max_1033_sep_221_sep_1) | not 1 = v_sep_array_max_1033_sep_221_sep_1) & 1 = v_sep_array_max_1033_sep_221_sep_1) | (not 0 = v_sep_array_max_1033_sep_221_sep_1 & 0 = v_sep_array_max_1033_sep_221_sep_1))
                          
                        end CsisatInterface.interpolate_csisat_log(351831)[13] (0.003000 sec.)
                        after simplification: (((((0 = v_sep_array_max_1033_sep_221_sep_1 | -2*v_sep_array_max_1033_sep_221_sep_3_sep_224_sep_0 <= 0) & not 0 = v_sep_array_max_1033_sep_221_sep_1) | not 1 = v_sep_array_max_1033_sep_221_sep_1) & 1 = v_sep_array_max_1033_sep_221_sep_1) | (not 0 = v_sep_array_max_1033_sep_221_sep_1 & 0 = v_sep_array_max_1033_sep_221_sep_1))
                        after dnf conversion: ((not 1 = v_sep_array_max_1033_sep_221_sep_1 & 1 = v_sep_array_max_1033_sep_221_sep_1) | (0 = v_sep_array_max_1033_sep_221_sep_1 & not 0 = v_sep_array_max_1033_sep_221_sep_1 & 1 = v_sep_array_max_1033_sep_221_sep_1) | (-2*v_sep_array_max_1033_sep_221_sep_3_sep_224_sep_0 <= 0 & not 0 = v_sep_array_max_1033_sep_221_sep_1 & 1 = v_sep_array_max_1033_sep_221_sep_1) | (not 0 = v_sep_array_max_1033_sep_221_sep_1 & 0 = v_sep_array_max_1033_sep_221_sep_1))
                        
                      end CsisatInterface.interpolate_csisat_post_process(351830)[12] (0.003000 sec.)
                      
                    end CsisatInterface.interpolate_csisat_wrap(351829)[11] (0.003000 sec.)
                    
                  end InterpProver.interpolate_quick(351820)[10] (0.004000 sec.)
                  begin minimizing # of conjunctions(351881)[10]
                    input: ((<array_max_1033@221:1> = 1) && (0 <= <<array_max_1033@221:3>@224:0>))
                    output: ((0 <= <<array_max_1033@221:3>@224:0>) && (<array_max_1033@221:1> = 1))
                  end minimizing # of conjunctions(351881)[10] (0.001999 sec.)
                  
                end InterpProver.interpolate_simplify(351589)[9] (0.007998 sec.)
                
              end InterpProver.interpolate_check(351588)[8] (0.008998 sec.)
              output: ((0 <= <<array_max_1033@221:3>@224:0>) && (<array_max_1033@221:1> = 1))
            end InterpProver.interpolate_log(351587)[7] (0.008998 sec.)
            
          end InterpProver.interpolate_fresh(351586)[6] (0.008998 sec.)
          
        end InterpProver.interpolate(351585)[5] (0.008998 sec.)
        output:
          P[<<array_max_1033@221:3>@224:0>](<array_max_1033@221:0>:int,<array_max_1033@221:1>:int,<<array_max_1033@221:3>@224:0>:int) =
          ((0 <= <<array_max_1033@221:3>@224:0>) && (<array_max_1033@221:1> = 1))
          P[<<array_max_1033@198:3>@233:0>](<array_max_1033@221:0>:int,<array_max_1033@221:1>:int,<<array_max_1033@221:3>@224:0>:int) =
          ((0 <= <<array_max_1033@221:3>@224:0>) && (<array_max_1033@221:1> = 1))
      end ApronInterface.convex_hull_interpolate(351584)[4] (0.008998 sec.)
      Horn clauses:
        P[<fail_1487@261:0>](<fail_1487@261:0>:bool)|- bot
        
        P[<check_1148@237:2>](<f_check_1482@258:2>:int,<f_check_1482@258:0>:int,<f_check_1482@258:1>:int),
        P[<<<check_1148@237:3>@240:1>@256:0>](<f_check_1482@258:2>:int,<f_check_1482@258:0>:int,<f_check_1482@258:1>:int,<f_check_1482@258:0>:int,<f_check_1482@258:5>:int),
        ((<f_check_1482@258:5> > <f_check_1482@258:1>) &&
         ((<f_check_1482@258:0> < <f_check_1482@258:2>) && <fail_1487@261:0>))
        |- P[<fail_1487@261:0>](<fail_1487@261:0>:bool)
        
        P[<check_1148@237:2>](<check_1148@237:0>:int,<check_1148@237:1>:int,<check_1148@237:2>:int),
        ((<check_1148@237:1> < <check_1148@237:0>) && (<<check_1148@237:3>@240:0> = <check_1148@237:1>))
        |- P[<<check_1148@237:3>@240:0>](<check_1148@237:0>:int,<check_1148@237:1>:int,
                                         <check_1148@237:2>:int,<<check_1148@237:3>@240:0>:int)
        
        P[<array_max_1033@198:1>](<array_max_1033@198:0>:int,0:int),
        P[<<<array_max_1033@198:2>@201:1>@217:0>](<array_max_1033@198:0>:int,0:int,0:int,<<array_max_1033@198:3>@233:0>:int),
        ((0 < <<array_max_1033@198:3>@233:0>) && (0 < <array_max_1033@198:0>)) |- bot
        
        P[<array_max_1033@221:1>](<array_max_1033@221:0>:int,<array_max_1033@221:1>:int),
        ((<array_max_1033@221:1> <> 1) && (<array_max_1033@221:1> >= <array_max_1033@221:0>)) |- bot
        
        P[<array_max_1033@198:1>](<array_max_1033@221:0>:int,(-1 + <array_max_1033@221:1>):int),
        P[<<<array_max_1033@198:2>@201:1>@217:0>](<array_max_1033@221:0>:int,(
                                                  -1 + <array_max_1033@221:1>):int,(
                                                  -1 + <array_max_1033@221:1>):int,<f_array_max_1480@219:4>:int),
        (<array_max_1033@221:1> < (1 + <array_max_1033@221:0>))
        |- P[<array_max_1033@221:1>](<array_max_1033@221:0>:int,<array_max_1033@221:1>:int)
        
        P[<<make_array_1030@203:2>@215:0>](<array_max_1033@198:0>:int,<<array_max_1033@198:2>@201:0>:int,<<<array_max_1033@198:2>@201:1>@217:0>:int),
        P[<array_max_1033@198:1>](<array_max_1033@198:0>:int,<array_max_1033@198:1>:int), (
        <array_max_1033@198:1> = 0)
        |- P[<<<array_max_1033@198:2>@201:1>@217:0>](<array_max_1033@198:0>:int,
                                                     <array_max_1033@198:1>:int,
                                                     <<array_max_1033@198:2>@201:0>:int,
                                                     <<<array_max_1033@198:2>@201:1>@217:0>:int)
        
        
        ((0 <= <make_array_1030@203:1>) &&
         ((<make_array_1030@203:1> < <make_array_1030@203:0>) &&
          (<<make_array_1030@203:2>@215:0> = <make_array_1030@203:1>)))
        |- P[<<make_array_1030@203:2>@215:0>](<make_array_1030@203:0>:int,
                                              <make_array_1030@203:1>:int,
                                              <<make_array_1030@203:2>@215:0>:int)
        
        P[<array_max_1033@198:1>](<array_max_1033@198:0>:int,<array_max_1033@198:1>:int),
        ((<array_max_1033@198:1> < <array_max_1033@198:0>) && (<<array_max_1033@198:2>@201:0> = <array_max_1033@198:1>))
        |- P[<<array_max_1033@198:2>@201:0>](<array_max_1033@198:0>:int,
                                             <array_max_1033@198:1>:int,
                                             <<array_max_1033@198:2>@201:0>:int)
        
         (<array_max_1033@198:1> = 0)
        |- P[<array_max_1033@198:1>](<array_max_1033@198:0>:int,<array_max_1033@198:1>:int)
      lower bounds:
        P[<<make_array_1030@203:2>@215:0>](<make_array_1030@203:0>:int,<make_array_1030@203:1>:int,<<make_array_1030@203:2>@215:0>:int) =
        ((0 <= <make_array_1030@203:1>) &&
         ((<make_array_1030@203:1> < <make_array_1030@203:0>) &&
          (<<make_array_1030@203:2>@215:0> = <make_array_1030@203:1>)))
        P[<array_max_1033@198:1>](<array_max_1033@198:0>:int,<array_max_1033@198:1>:int) = (<array_max_1033@198:1> = 0)
        P[<<<check_1148@237:3>@240:1>@256:0>](var737:int,var738:int,var739:int,var740:int,var741:int) = false
        P[<check_1148@237:2>](var742:int,var743:int,var744:int) = false
        P[<fail_1487@261:0>](<fail_1487@261:0>:bool) = false
        P[<<check_1148@237:3>@240:0>](<check_1148@237:0>:int,<check_1148@237:1>:int,<check_1148@237:2>:int,<<check_1148@237:3>@240:0>:int) =
        false
        P[<<<array_max_1033@198:2>@201:1>@217:0>](<array_max_1033@198:0>:int,<array_max_1033@198:1>:int,<<array_max_1033@198:2>@201:0>:int,<<<array_max_1033@198:2>@201:1>@217:0>:int) =
        ((<array_max_1033@198:1> = 0) &&
         ((0 <= <<array_max_1033@198:2>@201:0>) &&
          ((<<array_max_1033@198:2>@201:0> < <array_max_1033@198:0>) &&
           (<<<array_max_1033@198:2>@201:1>@217:0> = <<array_max_1033@198:2>@201:0>))))
        P[<<array_max_1033@198:2>@201:0>](<array_max_1033@198:0>:int,<array_max_1033@198:1>:int,<<array_max_1033@198:2>@201:0>:int) =
        ((<array_max_1033@198:1> = 0) &&
         ((<array_max_1033@198:1> < <array_max_1033@198:0>) &&
          (<<array_max_1033@198:2>@201:0> = <array_max_1033@198:1>)))
        P[<array_max_1033@221:1>](<array_max_1033@221:0>:int,<array_max_1033@221:1>:int) =
        ((<array_max_1033@221:1> = 1) && (<array_max_1033@221:1> < (1 + <array_max_1033@221:0>)))
      upper bounds:
        P[<array_max_1033@221:1>](var781:int,var782:int) = ((var782 = 1) || (var782 < var781))
        P[<array_max_1033@198:1>](var762:int,var763:int) = true
      begin GenHcSolver.classify_pids(362454)[4]
        output:
          [<array_max_1033@221:1>],[<array_max_1033@198:1>]
      end GenHcSolver.classify_pids(362454)[4] (0.000000 sec.)
      lb:((<array_max_1033@221:1> = 1) && (<array_max_1033@221:1> < (1 + <array_max_1033@221:0>)))
      nub:(not ((<array_max_1033@221:1> = 1) || (<array_max_1033@221:1> < <array_max_1033@221:0>)))
      begin ApronInterface.convex_hull_interpolate(362477)[4]
        lb:((<array_max_1033@221:1> = 1) && (<array_max_1033@221:1> < (1 + <array_max_1033@221:0>)))
        nub:(not ((<array_max_1033@221:1> = 1) || (<array_max_1033@221:1> < <array_max_1033@221:0>)))
        lb':((<array_max_1033@221:1> = 1) && (<array_max_1033@221:1> < (1 + <array_max_1033@221:0>)))
        nub':(not ((<array_max_1033@221:1> = 1) || (<array_max_1033@221:1> < <array_max_1033@221:0>)))
        begin InterpProver.interpolate(362478)[5]
          begin InterpProver.interpolate_fresh(362479)[6]
            begin InterpProver.interpolate_log(362480)[7]
              input1: ((<array_max_1033@221:1> = 1) && (<array_max_1033@221:1> < (1 + <array_max_1033@221:0>)))
              input2: (not ((<array_max_1033@221:1> = 1) || (<array_max_1033@221:1> < <array_max_1033@221:0>)))
              begin InterpProver.interpolate_check(362481)[8]
                begin InterpProver.interpolate_simplify(362482)[9]
                  begin InterpProver.interpolate_quick(362551)[10]
                    begin CsisatInterface.interpolate_csisat_wrap(362560)[11]
                      begin CsisatInterface.interpolate_csisat_post_process(362561)[12]
                        begin CsisatInterface.interpolate_csisat_log(362562)[13]
                          input1: (1 = v_sep_array_max_1033_sep_221_sep_1 & (1 + v_sep_array_max_1033_sep_221_sep_1) <= (1 + v_sep_array_max_1033_sep_221_sep_0))
                          input2: (not 1 = v_sep_array_max_1033_sep_221_sep_1 & v_sep_array_max_1033_sep_221_sep_0 <= v_sep_array_max_1033_sep_221_sep_1)
                          begin CsisatInterface.interpolate_csisat_raw(362563)[14]
                            
                          end CsisatInterface.interpolate_csisat_raw(362563)[14] (0.000000 sec.)
                          output: 1 = v_sep_array_max_1033_sep_221_sep_1
                          
                        end CsisatInterface.interpolate_csisat_log(362562)[13] (0.000000 sec.)
                        after simplification: 1 = v_sep_array_max_1033_sep_221_sep_1
                        after dnf conversion: ((1 = v_sep_array_max_1033_sep_221_sep_1))
                        
                      end CsisatInterface.interpolate_csisat_post_process(362561)[12] (0.000000 sec.)
                      
                    end CsisatInterface.interpolate_csisat_wrap(362560)[11] (0.000000 sec.)
                    
                  end InterpProver.interpolate_quick(362551)[10] (0.001000 sec.)
                  
                end InterpProver.interpolate_simplify(362482)[9] (0.001000 sec.)
                
              end InterpProver.interpolate_check(362481)[8] (0.001000 sec.)
              output: (1 = <array_max_1033@221:1>)
            end InterpProver.interpolate_log(362480)[7] (0.002000 sec.)
            
          end InterpProver.interpolate_fresh(362479)[6] (0.002000 sec.)
          
        end InterpProver.interpolate(362478)[5] (0.002000 sec.)
        output:
          P[<array_max_1033@221:1>](<array_max_1033@221:0>:int,<array_max_1033@221:1>:int) =
          (1 = <array_max_1033@221:1>)
      end ApronInterface.convex_hull_interpolate(362477)[4] (0.002000 sec.)
      Horn clauses:
        P[<fail_1487@261:0>](<fail_1487@261:0>:bool)|- bot
        
        P[<check_1148@237:2>](<f_check_1482@258:2>:int,<f_check_1482@258:0>:int,<f_check_1482@258:1>:int),
        P[<<<check_1148@237:3>@240:1>@256:0>](<f_check_1482@258:2>:int,<f_check_1482@258:0>:int,<f_check_1482@258:1>:int,<f_check_1482@258:0>:int,<f_check_1482@258:5>:int),
        ((<f_check_1482@258:5> > <f_check_1482@258:1>) &&
         ((<f_check_1482@258:0> < <f_check_1482@258:2>) && <fail_1487@261:0>))
        |- P[<fail_1487@261:0>](<fail_1487@261:0>:bool)
        
        P[<check_1148@237:2>](<check_1148@237:0>:int,<check_1148@237:1>:int,<check_1148@237:2>:int),
        ((<check_1148@237:1> < <check_1148@237:0>) && (<<check_1148@237:3>@240:0> = <check_1148@237:1>))
        |- P[<<check_1148@237:3>@240:0>](<check_1148@237:0>:int,<check_1148@237:1>:int,
                                         <check_1148@237:2>:int,<<check_1148@237:3>@240:0>:int)
        
        P[<array_max_1033@198:1>](<array_max_1033@198:0>:int,0:int),
        P[<<<array_max_1033@198:2>@201:1>@217:0>](<array_max_1033@198:0>:int,0:int,0:int,<<array_max_1033@198:3>@233:0>:int),
        ((0 < <<array_max_1033@198:3>@233:0>) && (0 < <array_max_1033@198:0>)) |- bot
        
        P[<array_max_1033@198:1>](<array_max_1033@221:0>:int,(-1 + <array_max_1033@221:1>):int),
        P[<<<array_max_1033@198:2>@201:1>@217:0>](<array_max_1033@221:0>:int,(
                                                  -1 + <array_max_1033@221:1>):int,(
                                                  -1 + <array_max_1033@221:1>):int,<f_array_max_1480@219:4>:int),
        ((<array_max_1033@221:1> < (1 + <array_max_1033@221:0>)) && (1 <> <array_max_1033@221:1>)) |- bot
        
        P[<<make_array_1030@203:2>@215:0>](<array_max_1033@198:0>:int,<<array_max_1033@198:2>@201:0>:int,<<<array_max_1033@198:2>@201:1>@217:0>:int),
        P[<array_max_1033@198:1>](<array_max_1033@198:0>:int,<array_max_1033@198:1>:int), (
        <array_max_1033@198:1> = 0)
        |- P[<<<array_max_1033@198:2>@201:1>@217:0>](<array_max_1033@198:0>:int,
                                                     <array_max_1033@198:1>:int,
                                                     <<array_max_1033@198:2>@201:0>:int,
                                                     <<<array_max_1033@198:2>@201:1>@217:0>:int)
        
        
        ((0 <= <make_array_1030@203:1>) &&
         ((<make_array_1030@203:1> < <make_array_1030@203:0>) &&
          (<<make_array_1030@203:2>@215:0> = <make_array_1030@203:1>)))
        |- P[<<make_array_1030@203:2>@215:0>](<make_array_1030@203:0>:int,
                                              <make_array_1030@203:1>:int,
                                              <<make_array_1030@203:2>@215:0>:int)
        
        P[<array_max_1033@198:1>](<array_max_1033@198:0>:int,<array_max_1033@198:1>:int),
        ((<array_max_1033@198:1> < <array_max_1033@198:0>) && (<<array_max_1033@198:2>@201:0> = <array_max_1033@198:1>))
        |- P[<<array_max_1033@198:2>@201:0>](<array_max_1033@198:0>:int,
                                             <array_max_1033@198:1>:int,
                                             <<array_max_1033@198:2>@201:0>:int)
        
         (<array_max_1033@198:1> = 0)
        |- P[<array_max_1033@198:1>](<array_max_1033@198:0>:int,<array_max_1033@198:1>:int)
      lower bounds:
        P[<<make_array_1030@203:2>@215:0>](<make_array_1030@203:0>:int,<make_array_1030@203:1>:int,<<make_array_1030@203:2>@215:0>:int) =
        ((0 <= <make_array_1030@203:1>) &&
         ((<make_array_1030@203:1> < <make_array_1030@203:0>) &&
          (<<make_array_1030@203:2>@215:0> = <make_array_1030@203:1>)))
        P[<array_max_1033@198:1>](<array_max_1033@198:0>:int,<array_max_1033@198:1>:int) = (<array_max_1033@198:1> = 0)
        P[<<<check_1148@237:3>@240:1>@256:0>](var791:int,var792:int,var793:int,var794:int,var795:int) = false
        P[<check_1148@237:2>](var796:int,var797:int,var798:int) = false
        P[<fail_1487@261:0>](<fail_1487@261:0>:bool) = false
        P[<<check_1148@237:3>@240:0>](<check_1148@237:0>:int,<check_1148@237:1>:int,<check_1148@237:2>:int,<<check_1148@237:3>@240:0>:int) =
        false
        P[<<<array_max_1033@198:2>@201:1>@217:0>](<array_max_1033@198:0>:int,<array_max_1033@198:1>:int,<<array_max_1033@198:2>@201:0>:int,<<<array_max_1033@198:2>@201:1>@217:0>:int) =
        ((<array_max_1033@198:1> = 0) &&
         ((0 <= <<array_max_1033@198:2>@201:0>) &&
          ((<<array_max_1033@198:2>@201:0> < <array_max_1033@198:0>) &&
           (<<<array_max_1033@198:2>@201:1>@217:0> = <<array_max_1033@198:2>@201:0>))))
        P[<<array_max_1033@198:2>@201:0>](<array_max_1033@198:0>:int,<array_max_1033@198:1>:int,<<array_max_1033@198:2>@201:0>:int) =
        ((<array_max_1033@198:1> = 0) &&
         ((<array_max_1033@198:1> < <array_max_1033@198:0>) &&
          (<<array_max_1033@198:2>@201:0> = <array_max_1033@198:1>)))
      upper bounds:
        P[<<check_1148@237:3>@240:0>](var816:int,var817:int,var818:int,var819:int) = true
      begin GenHcSolver.classify_pids(366602)[4]
        output:
          [<<check_1148@237:3>@240:0>]
      end GenHcSolver.classify_pids(366602)[4] (0.000000 sec.)
      lb:false
      nub:false
      begin ApronInterface.convex_hull_interpolate(366605)[4]
        lb:false
        nub:false
        lb':false
        nub':false
        begin InterpProver.interpolate(366606)[5]
          begin InterpProver.interpolate_fresh(366607)[6]
            begin InterpProver.interpolate_log(366608)[7]
              input1: false
              input2: false
              begin InterpProver.interpolate_check(366609)[8]
                begin InterpProver.interpolate_simplify(366610)[9]
                  begin InterpProver.interpolate_quick(366623)[10]
                    
                  end InterpProver.interpolate_quick(366623)[10] (0.000000 sec.)
                  begin minimizing # of disjunctions(366627)[10]
                    input: false
                    output: false
                  end minimizing # of disjunctions(366627)[10] (0.000000 sec.)
                  
                end InterpProver.interpolate_simplify(366610)[9] (0.000000 sec.)
                
              end InterpProver.interpolate_check(366609)[8] (0.000000 sec.)
              output: false
            end InterpProver.interpolate_log(366608)[7] (0.000000 sec.)
            
          end InterpProver.interpolate_fresh(366607)[6] (0.000000 sec.)
          
        end InterpProver.interpolate(366606)[5] (0.000000 sec.)
        output:
          P[<<check_1148@237:3>@240:0>](<check_1148@237:0>:int,<check_1148@237:1>:int,<check_1148@237:2>:int,<<check_1148@237:3>@240:0>:int) =
          false
      end ApronInterface.convex_hull_interpolate(366605)[4] (0.001000 sec.)
      Horn clauses:
        P[<fail_1487@261:0>](<fail_1487@261:0>:bool)|- bot
        
        P[<check_1148@237:2>](<f_check_1482@258:2>:int,<f_check_1482@258:0>:int,<f_check_1482@258:1>:int),
        P[<<<check_1148@237:3>@240:1>@256:0>](<f_check_1482@258:2>:int,<f_check_1482@258:0>:int,<f_check_1482@258:1>:int,<f_check_1482@258:0>:int,<f_check_1482@258:5>:int),
        ((<f_check_1482@258:5> > <f_check_1482@258:1>) &&
         ((<f_check_1482@258:0> < <f_check_1482@258:2>) && <fail_1487@261:0>))
        |- P[<fail_1487@261:0>](<fail_1487@261:0>:bool)
        
        P[<check_1148@237:2>](<check_1148@237:0>:int,<<check_1148@237:3>@240:0>:int,<check_1148@237:2>:int),
        (<<check_1148@237:3>@240:0> < <check_1148@237:0>) |- bot
        
        P[<array_max_1033@198:1>](<array_max_1033@198:0>:int,0:int),
        P[<<<array_max_1033@198:2>@201:1>@217:0>](<array_max_1033@198:0>:int,0:int,0:int,<<array_max_1033@198:3>@233:0>:int),
        ((0 < <<array_max_1033@198:3>@233:0>) && (0 < <array_max_1033@198:0>)) |- bot
        
        P[<array_max_1033@198:1>](<array_max_1033@221:0>:int,(-1 + <array_max_1033@221:1>):int),
        P[<<<array_max_1033@198:2>@201:1>@217:0>](<array_max_1033@221:0>:int,(
                                                  -1 + <array_max_1033@221:1>):int,(
                                                  -1 + <array_max_1033@221:1>):int,<f_array_max_1480@219:4>:int),
        ((<array_max_1033@221:1> < (1 + <array_max_1033@221:0>)) && (1 <> <array_max_1033@221:1>)) |- bot
        
        P[<<make_array_1030@203:2>@215:0>](<array_max_1033@198:0>:int,<<array_max_1033@198:2>@201:0>:int,<<<array_max_1033@198:2>@201:1>@217:0>:int),
        P[<array_max_1033@198:1>](<array_max_1033@198:0>:int,<array_max_1033@198:1>:int), (
        <array_max_1033@198:1> = 0)
        |- P[<<<array_max_1033@198:2>@201:1>@217:0>](<array_max_1033@198:0>:int,
                                                     <array_max_1033@198:1>:int,
                                                     <<array_max_1033@198:2>@201:0>:int,
                                                     <<<array_max_1033@198:2>@201:1>@217:0>:int)
        
        
        ((0 <= <make_array_1030@203:1>) &&
         ((<make_array_1030@203:1> < <make_array_1030@203:0>) &&
          (<<make_array_1030@203:2>@215:0> = <make_array_1030@203:1>)))
        |- P[<<make_array_1030@203:2>@215:0>](<make_array_1030@203:0>:int,
                                              <make_array_1030@203:1>:int,
                                              <<make_array_1030@203:2>@215:0>:int)
        
        P[<array_max_1033@198:1>](<array_max_1033@198:0>:int,<array_max_1033@198:1>:int),
        ((<array_max_1033@198:1> < <array_max_1033@198:0>) && (<<array_max_1033@198:2>@201:0> = <array_max_1033@198:1>))
        |- P[<<array_max_1033@198:2>@201:0>](<array_max_1033@198:0>:int,
                                             <array_max_1033@198:1>:int,
                                             <<array_max_1033@198:2>@201:0>:int)
        
         (<array_max_1033@198:1> = 0)
        |- P[<array_max_1033@198:1>](<array_max_1033@198:0>:int,<array_max_1033@198:1>:int)
      lower bounds:
        P[<<make_array_1030@203:2>@215:0>](<make_array_1030@203:0>:int,<make_array_1030@203:1>:int,<<make_array_1030@203:2>@215:0>:int) =
        ((0 <= <make_array_1030@203:1>) &&
         ((<make_array_1030@203:1> < <make_array_1030@203:0>) &&
          (<<make_array_1030@203:2>@215:0> = <make_array_1030@203:1>)))
        P[<array_max_1033@198:1>](<array_max_1033@198:0>:int,<array_max_1033@198:1>:int) = (<array_max_1033@198:1> = 0)
        P[<<<check_1148@237:3>@240:1>@256:0>](var828:int,var829:int,var830:int,var831:int,var832:int) = false
        P[<check_1148@237:2>](var833:int,var834:int,var835:int) = false
        P[<fail_1487@261:0>](<fail_1487@261:0>:bool) = false
        P[<<<array_max_1033@198:2>@201:1>@217:0>](<array_max_1033@198:0>:int,<array_max_1033@198:1>:int,<<array_max_1033@198:2>@201:0>:int,<<<array_max_1033@198:2>@201:1>@217:0>:int) =
        ((<array_max_1033@198:1> = 0) &&
         ((0 <= <<array_max_1033@198:2>@201:0>) &&
          ((<<array_max_1033@198:2>@201:0> < <array_max_1033@198:0>) &&
           (<<<array_max_1033@198:2>@201:1>@217:0> = <<array_max_1033@198:2>@201:0>))))
        P[<<array_max_1033@198:2>@201:0>](<array_max_1033@198:0>:int,<array_max_1033@198:1>:int,<<array_max_1033@198:2>@201:0>:int) =
        ((<array_max_1033@198:1> = 0) &&
         ((<array_max_1033@198:1> < <array_max_1033@198:0>) &&
          (<<array_max_1033@198:2>@201:0> = <array_max_1033@198:1>)))
      upper bounds:
        P[<<array_max_1033@198:2>@201:0>](var853:int,var854:int,var855:int) = true
      begin GenHcSolver.classify_pids(370702)[4]
        output:
          [<<array_max_1033@198:2>@201:0>]
      end GenHcSolver.classify_pids(370702)[4] (0.000000 sec.)
      lb:((<array_max_1033@198:1> = 0) &&
          ((<array_max_1033@198:1> < <array_max_1033@198:0>) &&
           (<<array_max_1033@198:2>@201:0> = <array_max_1033@198:1>)))
      nub:false
      begin ApronInterface.convex_hull_interpolate(370705)[4]
        lb:((<array_max_1033@198:1> = 0) &&
            ((<array_max_1033@198:1> < <array_max_1033@198:0>) &&
             (<<array_max_1033@198:2>@201:0> = <array_max_1033@198:1>)))
        nub:false
        lb':((<array_max_1033@198:1> = 0) &&
             ((<array_max_1033@198:1> < <array_max_1033@198:0>) &&
              (<<array_max_1033@198:2>@201:0> = <array_max_1033@198:1>)))
        nub':false
        begin InterpProver.interpolate(370706)[5]
          begin InterpProver.interpolate_fresh(370707)[6]
            begin InterpProver.interpolate_log(370708)[7]
              input1: ((<array_max_1033@198:1> = 0) &&
                       ((<array_max_1033@198:1> < <array_max_1033@198:0>) &&
                        (<<array_max_1033@198:2>@201:0> = <array_max_1033@198:1>)))
              input2: false
              begin InterpProver.interpolate_check(370709)[8]
                begin InterpProver.interpolate_simplify(370710)[9]
                  begin InterpProver.interpolate_quick(370766)[10]
                    
                  end InterpProver.interpolate_quick(370766)[10] (0.000000 sec.)
                  
                end InterpProver.interpolate_simplify(370710)[9] (0.000000 sec.)
                
              end InterpProver.interpolate_check(370709)[8] (0.000000 sec.)
              output: true
            end InterpProver.interpolate_log(370708)[7] (0.000000 sec.)
            
          end InterpProver.interpolate_fresh(370707)[6] (0.000000 sec.)
          
        end InterpProver.interpolate(370706)[5] (0.000000 sec.)
        output:
          P[<<array_max_1033@198:2>@201:0>](<array_max_1033@198:0>:int,<array_max_1033@198:1>:int,<<array_max_1033@198:2>@201:0>:int) =
          true
      end ApronInterface.convex_hull_interpolate(370705)[4] (0.000000 sec.)
      Horn clauses:
        P[<fail_1487@261:0>](<fail_1487@261:0>:bool)|- bot
        
        P[<check_1148@237:2>](<f_check_1482@258:2>:int,<f_check_1482@258:0>:int,<f_check_1482@258:1>:int),
        P[<<<check_1148@237:3>@240:1>@256:0>](<f_check_1482@258:2>:int,<f_check_1482@258:0>:int,<f_check_1482@258:1>:int,<f_check_1482@258:0>:int,<f_check_1482@258:5>:int),
        ((<f_check_1482@258:5> > <f_check_1482@258:1>) &&
         ((<f_check_1482@258:0> < <f_check_1482@258:2>) && <fail_1487@261:0>))
        |- P[<fail_1487@261:0>](<fail_1487@261:0>:bool)
        
        P[<check_1148@237:2>](<check_1148@237:0>:int,<<check_1148@237:3>@240:0>:int,<check_1148@237:2>:int),
        (<<check_1148@237:3>@240:0> < <check_1148@237:0>) |- bot
        
        P[<array_max_1033@198:1>](<array_max_1033@198:0>:int,0:int),
        P[<<<array_max_1033@198:2>@201:1>@217:0>](<array_max_1033@198:0>:int,0:int,0:int,<<array_max_1033@198:3>@233:0>:int),
        ((0 < <<array_max_1033@198:3>@233:0>) && (0 < <array_max_1033@198:0>)) |- bot
        
        P[<array_max_1033@198:1>](<array_max_1033@221:0>:int,(-1 + <array_max_1033@221:1>):int),
        P[<<<array_max_1033@198:2>@201:1>@217:0>](<array_max_1033@221:0>:int,(
                                                  -1 + <array_max_1033@221:1>):int,(
                                                  -1 + <array_max_1033@221:1>):int,<f_array_max_1480@219:4>:int),
        ((<array_max_1033@221:1> < (1 + <array_max_1033@221:0>)) && (1 <> <array_max_1033@221:1>)) |- bot
        
        P[<<make_array_1030@203:2>@215:0>](<array_max_1033@198:0>:int,<<array_max_1033@198:2>@201:0>:int,<<<array_max_1033@198:2>@201:1>@217:0>:int),
        P[<array_max_1033@198:1>](<array_max_1033@198:0>:int,<array_max_1033@198:1>:int), (
        <array_max_1033@198:1> = 0)
        |- P[<<<array_max_1033@198:2>@201:1>@217:0>](<array_max_1033@198:0>:int,
                                                     <array_max_1033@198:1>:int,
                                                     <<array_max_1033@198:2>@201:0>:int,
                                                     <<<array_max_1033@198:2>@201:1>@217:0>:int)
        
        
        ((0 <= <make_array_1030@203:1>) &&
         ((<make_array_1030@203:1> < <make_array_1030@203:0>) &&
          (<<make_array_1030@203:2>@215:0> = <make_array_1030@203:1>)))
        |- P[<<make_array_1030@203:2>@215:0>](<make_array_1030@203:0>:int,
                                              <make_array_1030@203:1>:int,
                                              <<make_array_1030@203:2>@215:0>:int)
        
         (<array_max_1033@198:1> = 0)
        |- P[<array_max_1033@198:1>](<array_max_1033@198:0>:int,<array_max_1033@198:1>:int)
      lower bounds:
        P[<<make_array_1030@203:2>@215:0>](<make_array_1030@203:0>:int,<make_array_1030@203:1>:int,<<make_array_1030@203:2>@215:0>:int) =
        ((0 <= <make_array_1030@203:1>) &&
         ((<make_array_1030@203:1> < <make_array_1030@203:0>) &&
          (<<make_array_1030@203:2>@215:0> = <make_array_1030@203:1>)))
        P[<array_max_1033@198:1>](<array_max_1033@198:0>:int,<array_max_1033@198:1>:int) = (<array_max_1033@198:1> = 0)
        P[<<<check_1148@237:3>@240:1>@256:0>](var864:int,var865:int,var866:int,var867:int,var868:int) = false
        P[<check_1148@237:2>](var869:int,var870:int,var871:int) = false
        P[<fail_1487@261:0>](<fail_1487@261:0>:bool) = false
        P[<<<array_max_1033@198:2>@201:1>@217:0>](<array_max_1033@198:0>:int,<array_max_1033@198:1>:int,<<array_max_1033@198:2>@201:0>:int,<<<array_max_1033@198:2>@201:1>@217:0>:int) =
        ((<array_max_1033@198:1> = 0) &&
         ((0 <= <<array_max_1033@198:2>@201:0>) &&
          ((<<array_max_1033@198:2>@201:0> < <array_max_1033@198:0>) &&
           (<<<array_max_1033@198:2>@201:1>@217:0> = <<array_max_1033@198:2>@201:0>))))
      upper bounds:
        P[<fail_1487@261:0>](var889:bool) = true
      begin GenHcSolver.classify_pids(374125)[4]
        output:
          [<fail_1487@261:0>]
      end GenHcSolver.classify_pids(374125)[4] (0.000000 sec.)
      lb:false
      nub:false
      begin ApronInterface.convex_hull_interpolate(374128)[4]
        lb:false
        nub:false
        lb':false
        nub':false
        begin InterpProver.interpolate(374129)[5]
          begin InterpProver.interpolate_fresh(374130)[6]
            begin InterpProver.interpolate_log(374131)[7]
              input1: false
              input2: false
              begin InterpProver.interpolate_check(374132)[8]
                begin InterpProver.interpolate_simplify(374133)[9]
                  begin InterpProver.interpolate_quick(374146)[10]
                    
                  end InterpProver.interpolate_quick(374146)[10] (0.000000 sec.)
                  begin minimizing # of disjunctions(374150)[10]
                    input: false
                    output: false
                  end minimizing # of disjunctions(374150)[10] (0.000000 sec.)
                  
                end InterpProver.interpolate_simplify(374133)[9] (0.000000 sec.)
                
              end InterpProver.interpolate_check(374132)[8] (0.000000 sec.)
              output: false
            end InterpProver.interpolate_log(374131)[7] (0.000000 sec.)
            
          end InterpProver.interpolate_fresh(374130)[6] (0.000000 sec.)
          
        end InterpProver.interpolate(374129)[5] (0.000000 sec.)
        output:
          P[<fail_1487@261:0>](<fail_1487@261:0>:bool) = false
      end ApronInterface.convex_hull_interpolate(374128)[4] (0.000000 sec.)
      Horn clauses:
        P[<check_1148@237:2>](<f_check_1482@258:2>:int,<f_check_1482@258:0>:int,<f_check_1482@258:1>:int),
        P[<<<check_1148@237:3>@240:1>@256:0>](<f_check_1482@258:2>:int,<f_check_1482@258:0>:int,<f_check_1482@258:1>:int,<f_check_1482@258:0>:int,<f_check_1482@258:5>:int),
        ((<f_check_1482@258:0> < <f_check_1482@258:2>) && (<f_check_1482@258:5> > <f_check_1482@258:1>)) |- bot
        
        P[<check_1148@237:2>](<check_1148@237:0>:int,<<check_1148@237:3>@240:0>:int,<check_1148@237:2>:int),
        (<<check_1148@237:3>@240:0> < <check_1148@237:0>) |- bot
        
        P[<array_max_1033@198:1>](<array_max_1033@198:0>:int,0:int),
        P[<<<array_max_1033@198:2>@201:1>@217:0>](<array_max_1033@198:0>:int,0:int,0:int,<<array_max_1033@198:3>@233:0>:int),
        ((0 < <<array_max_1033@198:3>@233:0>) && (0 < <array_max_1033@198:0>)) |- bot
        
        P[<array_max_1033@198:1>](<array_max_1033@221:0>:int,(-1 + <array_max_1033@221:1>):int),
        P[<<<array_max_1033@198:2>@201:1>@217:0>](<array_max_1033@221:0>:int,(
                                                  -1 + <array_max_1033@221:1>):int,(
                                                  -1 + <array_max_1033@221:1>):int,<f_array_max_1480@219:4>:int),
        ((<array_max_1033@221:1> < (1 + <array_max_1033@221:0>)) && (1 <> <array_max_1033@221:1>)) |- bot
        
        P[<<make_array_1030@203:2>@215:0>](<array_max_1033@198:0>:int,<<array_max_1033@198:2>@201:0>:int,<<<array_max_1033@198:2>@201:1>@217:0>:int),
        P[<array_max_1033@198:1>](<array_max_1033@198:0>:int,<array_max_1033@198:1>:int), (
        <array_max_1033@198:1> = 0)
        |- P[<<<array_max_1033@198:2>@201:1>@217:0>](<array_max_1033@198:0>:int,
                                                     <array_max_1033@198:1>:int,
                                                     <<array_max_1033@198:2>@201:0>:int,
                                                     <<<array_max_1033@198:2>@201:1>@217:0>:int)
        
        
        ((0 <= <make_array_1030@203:1>) &&
         ((<make_array_1030@203:1> < <make_array_1030@203:0>) &&
          (<<make_array_1030@203:2>@215:0> = <make_array_1030@203:1>)))
        |- P[<<make_array_1030@203:2>@215:0>](<make_array_1030@203:0>:int,
                                              <make_array_1030@203:1>:int,
                                              <<make_array_1030@203:2>@215:0>:int)
        
         (<array_max_1033@198:1> = 0)
        |- P[<array_max_1033@198:1>](<array_max_1033@198:0>:int,<array_max_1033@198:1>:int)
      lower bounds:
        P[<<make_array_1030@203:2>@215:0>](<make_array_1030@203:0>:int,<make_array_1030@203:1>:int,<<make_array_1030@203:2>@215:0>:int) =
        ((0 <= <make_array_1030@203:1>) &&
         ((<make_array_1030@203:1> < <make_array_1030@203:0>) &&
          (<<make_array_1030@203:2>@215:0> = <make_array_1030@203:1>)))
        P[<array_max_1033@198:1>](<array_max_1033@198:0>:int,<array_max_1033@198:1>:int) = (<array_max_1033@198:1> = 0)
        P[<<<check_1148@237:3>@240:1>@256:0>](var898:int,var899:int,var900:int,var901:int,var902:int) = false
        P[<check_1148@237:2>](var903:int,var904:int,var905:int) = false
        P[<<<array_max_1033@198:2>@201:1>@217:0>](<array_max_1033@198:0>:int,<array_max_1033@198:1>:int,<<array_max_1033@198:2>@201:0>:int,<<<array_max_1033@198:2>@201:1>@217:0>:int) =
        ((<array_max_1033@198:1> = 0) &&
         ((0 <= <<array_max_1033@198:2>@201:0>) &&
          ((<<array_max_1033@198:2>@201:0> < <array_max_1033@198:0>) &&
           (<<<array_max_1033@198:2>@201:1>@217:0> = <<array_max_1033@198:2>@201:0>))))
      upper bounds:
        P[<<<check_1148@237:3>@240:1>@256:0>](var922:int,var923:int,var924:int,var925:int,var926:int) = true
      begin GenHcSolver.classify_pids(377397)[4]
        output:
          [<<<check_1148@237:3>@240:1>@256:0>]
      end GenHcSolver.classify_pids(377397)[4] (0.000000 sec.)
      lb:false
      nub:false
      begin ApronInterface.convex_hull_interpolate(377400)[4]
        lb:false
        nub:false
        lb':false
        nub':false
        begin InterpProver.interpolate(377401)[5]
          begin InterpProver.interpolate_fresh(377402)[6]
            begin InterpProver.interpolate_log(377403)[7]
              input1: false
              input2: false
              begin InterpProver.interpolate_check(377404)[8]
                begin InterpProver.interpolate_simplify(377405)[9]
                  begin InterpProver.interpolate_quick(377418)[10]
                    
                  end InterpProver.interpolate_quick(377418)[10] (0.000000 sec.)
                  begin minimizing # of disjunctions(377422)[10]
                    input: false
                    output: false
                  end minimizing # of disjunctions(377422)[10] (0.000000 sec.)
                  
                end InterpProver.interpolate_simplify(377405)[9] (0.000000 sec.)
                
              end InterpProver.interpolate_check(377404)[8] (0.000000 sec.)
              output: false
            end InterpProver.interpolate_log(377403)[7] (0.000000 sec.)
            
          end InterpProver.interpolate_fresh(377402)[6] (0.000000 sec.)
          
        end InterpProver.interpolate(377401)[5] (0.000000 sec.)
        output:
          P[<<<check_1148@237:3>@240:1>@256:0>](var898:int,var899:int,var900:int,var901:int,var902:int) = false
      end ApronInterface.convex_hull_interpolate(377400)[4] (0.000000 sec.)
      Horn clauses:
        P[<check_1148@237:2>](<check_1148@237:0>:int,<<check_1148@237:3>@240:0>:int,<check_1148@237:2>:int),
        (<<check_1148@237:3>@240:0> < <check_1148@237:0>) |- bot
        
        P[<array_max_1033@198:1>](<array_max_1033@198:0>:int,0:int),
        P[<<<array_max_1033@198:2>@201:1>@217:0>](<array_max_1033@198:0>:int,0:int,0:int,<<array_max_1033@198:3>@233:0>:int),
        ((0 < <<array_max_1033@198:3>@233:0>) && (0 < <array_max_1033@198:0>)) |- bot
        
        P[<array_max_1033@198:1>](<array_max_1033@221:0>:int,(-1 + <array_max_1033@221:1>):int),
        P[<<<array_max_1033@198:2>@201:1>@217:0>](<array_max_1033@221:0>:int,(
                                                  -1 + <array_max_1033@221:1>):int,(
                                                  -1 + <array_max_1033@221:1>):int,<f_array_max_1480@219:4>:int),
        ((<array_max_1033@221:1> < (1 + <array_max_1033@221:0>)) && (1 <> <array_max_1033@221:1>)) |- bot
        
        P[<<make_array_1030@203:2>@215:0>](<array_max_1033@198:0>:int,<<array_max_1033@198:2>@201:0>:int,<<<array_max_1033@198:2>@201:1>@217:0>:int),
        P[<array_max_1033@198:1>](<array_max_1033@198:0>:int,<array_max_1033@198:1>:int), (
        <array_max_1033@198:1> = 0)
        |- P[<<<array_max_1033@198:2>@201:1>@217:0>](<array_max_1033@198:0>:int,
                                                     <array_max_1033@198:1>:int,
                                                     <<array_max_1033@198:2>@201:0>:int,
                                                     <<<array_max_1033@198:2>@201:1>@217:0>:int)
        
        
        ((0 <= <make_array_1030@203:1>) &&
         ((<make_array_1030@203:1> < <make_array_1030@203:0>) &&
          (<<make_array_1030@203:2>@215:0> = <make_array_1030@203:1>)))
        |- P[<<make_array_1030@203:2>@215:0>](<make_array_1030@203:0>:int,
                                              <make_array_1030@203:1>:int,
                                              <<make_array_1030@203:2>@215:0>:int)
        
         (<array_max_1033@198:1> = 0)
        |- P[<array_max_1033@198:1>](<array_max_1033@198:0>:int,<array_max_1033@198:1>:int)
      lower bounds:
        P[<<make_array_1030@203:2>@215:0>](<make_array_1030@203:0>:int,<make_array_1030@203:1>:int,<<make_array_1030@203:2>@215:0>:int) =
        ((0 <= <make_array_1030@203:1>) &&
         ((<make_array_1030@203:1> < <make_array_1030@203:0>) &&
          (<<make_array_1030@203:2>@215:0> = <make_array_1030@203:1>)))
        P[<array_max_1033@198:1>](<array_max_1033@198:0>:int,<array_max_1033@198:1>:int) = (<array_max_1033@198:1> = 0)
        P[<check_1148@237:2>](var930:int,var931:int,var932:int) = false
        P[<<<array_max_1033@198:2>@201:1>@217:0>](<array_max_1033@198:0>:int,<array_max_1033@198:1>:int,<<array_max_1033@198:2>@201:0>:int,<<<array_max_1033@198:2>@201:1>@217:0>:int) =
        ((<array_max_1033@198:1> = 0) &&
         ((0 <= <<array_max_1033@198:2>@201:0>) &&
          ((<<array_max_1033@198:2>@201:0> < <array_max_1033@198:0>) &&
           (<<<array_max_1033@198:2>@201:1>@217:0> = <<array_max_1033@198:2>@201:0>))))
      upper bounds:
        P[<check_1148@237:2>](var939:int,var940:int,var941:int) = true
      begin GenHcSolver.classify_pids(380255)[4]
        output:
          [<check_1148@237:2>]
      end GenHcSolver.classify_pids(380255)[4] (0.000000 sec.)
      lb:false
      nub:false
      begin ApronInterface.convex_hull_interpolate(380258)[4]
        lb:false
        nub:false
        lb':false
        nub':false
        begin InterpProver.interpolate(380259)[5]
          begin InterpProver.interpolate_fresh(380260)[6]
            begin InterpProver.interpolate_log(380261)[7]
              input1: false
              input2: false
              begin InterpProver.interpolate_check(380262)[8]
                begin InterpProver.interpolate_simplify(380263)[9]
                  begin InterpProver.interpolate_quick(380276)[10]
                    
                  end InterpProver.interpolate_quick(380276)[10] (0.000000 sec.)
                  begin minimizing # of disjunctions(380280)[10]
                    input: false
                    output: false
                  end minimizing # of disjunctions(380280)[10] (0.000000 sec.)
                  
                end InterpProver.interpolate_simplify(380263)[9] (0.000000 sec.)
                
              end InterpProver.interpolate_check(380262)[8] (0.001000 sec.)
              output: false
            end InterpProver.interpolate_log(380261)[7] (0.001000 sec.)
            
          end InterpProver.interpolate_fresh(380260)[6] (0.001000 sec.)
          
        end InterpProver.interpolate(380259)[5] (0.001000 sec.)
        output:
          P[<check_1148@237:2>](var930:int,var931:int,var932:int) = false
      end ApronInterface.convex_hull_interpolate(380258)[4] (0.001000 sec.)
      Horn clauses:
        P[<array_max_1033@198:1>](<array_max_1033@198:0>:int,0:int),
        P[<<<array_max_1033@198:2>@201:1>@217:0>](<array_max_1033@198:0>:int,0:int,0:int,<<array_max_1033@198:3>@233:0>:int),
        ((0 < <<array_max_1033@198:3>@233:0>) && (0 < <array_max_1033@198:0>)) |- bot
        
        P[<array_max_1033@198:1>](<array_max_1033@221:0>:int,(-1 + <array_max_1033@221:1>):int),
        P[<<<array_max_1033@198:2>@201:1>@217:0>](<array_max_1033@221:0>:int,(
                                                  -1 + <array_max_1033@221:1>):int,(
                                                  -1 + <array_max_1033@221:1>):int,<f_array_max_1480@219:4>:int),
        ((<array_max_1033@221:1> < (1 + <array_max_1033@221:0>)) && (1 <> <array_max_1033@221:1>)) |- bot
        
        P[<<make_array_1030@203:2>@215:0>](<array_max_1033@198:0>:int,<<array_max_1033@198:2>@201:0>:int,<<<array_max_1033@198:2>@201:1>@217:0>:int),
        P[<array_max_1033@198:1>](<array_max_1033@198:0>:int,<array_max_1033@198:1>:int), (
        <array_max_1033@198:1> = 0)
        |- P[<<<array_max_1033@198:2>@201:1>@217:0>](<array_max_1033@198:0>:int,
                                                     <array_max_1033@198:1>:int,
                                                     <<array_max_1033@198:2>@201:0>:int,
                                                     <<<array_max_1033@198:2>@201:1>@217:0>:int)
        
        
        ((0 <= <make_array_1030@203:1>) &&
         ((<make_array_1030@203:1> < <make_array_1030@203:0>) &&
          (<<make_array_1030@203:2>@215:0> = <make_array_1030@203:1>)))
        |- P[<<make_array_1030@203:2>@215:0>](<make_array_1030@203:0>:int,
                                              <make_array_1030@203:1>:int,
                                              <<make_array_1030@203:2>@215:0>:int)
        
         (<array_max_1033@198:1> = 0)
        |- P[<array_max_1033@198:1>](<array_max_1033@198:0>:int,<array_max_1033@198:1>:int)
      lower bounds:
        P[<<make_array_1030@203:2>@215:0>](<make_array_1030@203:0>:int,<make_array_1030@203:1>:int,<<make_array_1030@203:2>@215:0>:int) =
        ((0 <= <make_array_1030@203:1>) &&
         ((<make_array_1030@203:1> < <make_array_1030@203:0>) &&
          (<<make_array_1030@203:2>@215:0> = <make_array_1030@203:1>)))
        P[<array_max_1033@198:1>](<array_max_1033@198:0>:int,<array_max_1033@198:1>:int) = (<array_max_1033@198:1> = 0)
        P[<<<array_max_1033@198:2>@201:1>@217:0>](<array_max_1033@198:0>:int,<array_max_1033@198:1>:int,<<array_max_1033@198:2>@201:0>:int,<<<array_max_1033@198:2>@201:1>@217:0>:int) =
        ((<array_max_1033@198:1> = 0) &&
         ((0 <= <<array_max_1033@198:2>@201:0>) &&
          ((<<array_max_1033@198:2>@201:0> < <array_max_1033@198:0>) &&
           (<<<array_max_1033@198:2>@201:1>@217:0> = <<array_max_1033@198:2>@201:0>))))
      upper bounds:
        P[<<<array_max_1033@198:2>@201:1>@217:0>](var942:int,var943:int,var944:int,var945:int) =
        ((var943 <> 0) || ((var944 <> 0) || ((0 >= var945) || (0 >= var942))))
      begin GenHcSolver.classify_pids(383309)[4]
        output:
          [<<<array_max_1033@198:2>@201:1>@217:0>]
      end GenHcSolver.classify_pids(383309)[4] (0.000000 sec.)
      lb:((<array_max_1033@198:1> = 0) &&
          ((0 <= <<array_max_1033@198:2>@201:0>) &&
           ((<<array_max_1033@198:2>@201:0> < <array_max_1033@198:0>) &&
            (<<<array_max_1033@198:2>@201:1>@217:0> = <<array_max_1033@198:2>@201:0>))))
      nub:(not
             ((<array_max_1033@198:1> <> 0) ||
              ((<<array_max_1033@198:2>@201:0> <> 0) ||
               ((0 >= <<<array_max_1033@198:2>@201:1>@217:0>) || (0 >= <array_max_1033@198:0>)))))
      begin ApronInterface.convex_hull_interpolate(383312)[4]
        lb:((<array_max_1033@198:1> = 0) &&
            ((0 <= <<array_max_1033@198:2>@201:0>) &&
             ((<<array_max_1033@198:2>@201:0> < <array_max_1033@198:0>) &&
              (<<<array_max_1033@198:2>@201:1>@217:0> = <<array_max_1033@198:2>@201:0>))))
        nub:(not
               ((<array_max_1033@198:1> <> 0) ||
                ((<<array_max_1033@198:2>@201:0> <> 0) ||
                 ((0 >= <<<array_max_1033@198:2>@201:1>@217:0>) || (0 >= <array_max_1033@198:0>)))))
        lb':((<array_max_1033@198:1> = 0) &&
             ((0 <= <<array_max_1033@198:2>@201:0>) &&
              ((<<array_max_1033@198:2>@201:0> < <array_max_1033@198:0>) &&
               (<<<array_max_1033@198:2>@201:1>@217:0> = <<array_max_1033@198:2>@201:0>))))
        nub':(not
                ((<array_max_1033@198:1> <> 0) ||
                 ((<<array_max_1033@198:2>@201:0> <> 0) ||
                  ((0 >= <<<array_max_1033@198:2>@201:1>@217:0>) || (0 >= <array_max_1033@198:0>)))))
        begin InterpProver.interpolate(383313)[5]
          begin InterpProver.interpolate_fresh(383314)[6]
            begin InterpProver.interpolate_log(383315)[7]
              input1: ((<array_max_1033@198:1> = 0) &&
                       ((0 <= <<array_max_1033@198:2>@201:0>) &&
                        ((<<array_max_1033@198:2>@201:0> < <array_max_1033@198:0>) &&
                         (<<<array_max_1033@198:2>@201:1>@217:0> = <<array_max_1033@198:2>@201:0>))))
              input2: (not
                         ((<array_max_1033@198:1> <> 0) ||
                          ((<<array_max_1033@198:2>@201:0> <> 0) ||
                           ((0 >= <<<array_max_1033@198:2>@201:1>@217:0>) || (0 >= <array_max_1033@198:0>)))))
              begin InterpProver.interpolate_check(383316)[8]
                begin InterpProver.interpolate_simplify(383317)[9]
                  begin InterpProver.interpolate_quick(383478)[10]
                    begin CsisatInterface.interpolate_csisat_wrap(383487)[11]
                      begin CsisatInterface.interpolate_csisat_post_process(383488)[12]
                        begin CsisatInterface.interpolate_csisat_log(383489)[13]
                          input1: (0 = v_sep_array_max_1033_sep_198_sep_1 & v_sep_array_max_1033_sep_198_sep_2_sep_201_sep_0 = v_sep_array_max_1033_sep_198_sep_2_sep_201_sep_1_sep_217_sep_0 & 0 <= v_sep_array_max_1033_sep_198_sep_2_sep_201_sep_0 & (1 + v_sep_array_max_1033_sep_198_sep_2_sep_201_sep_0) <= v_sep_array_max_1033_sep_198_sep_0)
                          input2: (0 = v_sep_array_max_1033_sep_198_sep_1 & 0 = v_sep_array_max_1033_sep_198_sep_2_sep_201_sep_0 & 1 <= v_sep_array_max_1033_sep_198_sep_0 & 1 <= v_sep_array_max_1033_sep_198_sep_2_sep_201_sep_1_sep_217_sep_0)
                          begin CsisatInterface.interpolate_csisat_raw(383490)[14]
                            
                          end CsisatInterface.interpolate_csisat_raw(383490)[14] (0.000000 sec.)
                          output: (-2*v_sep_array_max_1033_sep_198_sep_2_sep_201_sep_0 + 2*v_sep_array_max_1033_sep_198_sep_2_sep_201_sep_1_sep_217_sep_0) <= 0
                          
                        end CsisatInterface.interpolate_csisat_log(383489)[13] (0.000000 sec.)
                        after simplification: (-2*v_sep_array_max_1033_sep_198_sep_2_sep_201_sep_0 + 2*v_sep_array_max_1033_sep_198_sep_2_sep_201_sep_1_sep_217_sep_0) <= 0
                        after dnf conversion: (((-2*v_sep_array_max_1033_sep_198_sep_2_sep_201_sep_0 + 2*v_sep_array_max_1033_sep_198_sep_2_sep_201_sep_1_sep_217_sep_0) <= 0))
                        
                      end CsisatInterface.interpolate_csisat_post_process(383488)[12] (0.000000 sec.)
                      
                    end CsisatInterface.interpolate_csisat_wrap(383487)[11] (0.000000 sec.)
                    
                  end InterpProver.interpolate_quick(383478)[10] (0.001000 sec.)
                  
                end InterpProver.interpolate_simplify(383317)[9] (0.003000 sec.)
                
              end InterpProver.interpolate_check(383316)[8] (0.003999 sec.)
              output: (<<<array_max_1033@198:2>@201:1>@217:0> <= <<array_max_1033@198:2>@201:0>)
            end InterpProver.interpolate_log(383315)[7] (0.003999 sec.)
            
          end InterpProver.interpolate_fresh(383314)[6] (0.003999 sec.)
          
        end InterpProver.interpolate(383313)[5] (0.003999 sec.)
        output:
          P[<<<array_max_1033@198:2>@201:1>@217:0>](<array_max_1033@198:0>:int,<array_max_1033@198:1>:int,<<array_max_1033@198:2>@201:0>:int,<<<array_max_1033@198:2>@201:1>@217:0>:int) =
          (<<<array_max_1033@198:2>@201:1>@217:0> <= <<array_max_1033@198:2>@201:0>)
      end ApronInterface.convex_hull_interpolate(383312)[4] (0.003999 sec.)
      Horn clauses:
        P[<array_max_1033@198:1>](<array_max_1033@221:0>:int,(-1 + <array_max_1033@221:1>):int),
        ((<array_max_1033@221:1> < (1 + <array_max_1033@221:0>)) && (1 <> <array_max_1033@221:1>)) |- bot
        
        P[<<make_array_1030@203:2>@215:0>](<array_max_1033@198:0>:int,<<array_max_1033@198:2>@201:0>:int,<<<array_max_1033@198:2>@201:1>@217:0>:int),
        P[<array_max_1033@198:1>](<array_max_1033@198:0>:int,0:int),
        (<<<array_max_1033@198:2>@201:1>@217:0> > <<array_max_1033@198:2>@201:0>) |- bot
        
        
        ((0 <= <make_array_1030@203:1>) &&
         ((<make_array_1030@203:1> < <make_array_1030@203:0>) &&
          (<<make_array_1030@203:2>@215:0> = <make_array_1030@203:1>)))
        |- P[<<make_array_1030@203:2>@215:0>](<make_array_1030@203:0>:int,
                                              <make_array_1030@203:1>:int,
                                              <<make_array_1030@203:2>@215:0>:int)
        
         (<array_max_1033@198:1> = 0)
        |- P[<array_max_1033@198:1>](<array_max_1033@198:0>:int,<array_max_1033@198:1>:int)
      lower bounds:
        P[<<make_array_1030@203:2>@215:0>](<make_array_1030@203:0>:int,<make_array_1030@203:1>:int,<<make_array_1030@203:2>@215:0>:int) =
        ((0 <= <make_array_1030@203:1>) &&
         ((<make_array_1030@203:1> < <make_array_1030@203:0>) &&
          (<<make_array_1030@203:2>@215:0> = <make_array_1030@203:1>)))
        P[<array_max_1033@198:1>](<array_max_1033@198:0>:int,<array_max_1033@198:1>:int) = (<array_max_1033@198:1> = 0)
      upper bounds:
        P[<<make_array_1030@203:2>@215:0>](var946:int,var947:int,var948:int) = (var948 <= var947)
      begin GenHcSolver.classify_pids(385481)[4]
        output:
          [<<make_array_1030@203:2>@215:0>]
      end GenHcSolver.classify_pids(385481)[4] (0.000000 sec.)
      lb:((0 <= <make_array_1030@203:1>) &&
          ((<make_array_1030@203:1> < <make_array_1030@203:0>) &&
           (<<make_array_1030@203:2>@215:0> = <make_array_1030@203:1>)))
      nub:(not (<<make_array_1030@203:2>@215:0> <= <make_array_1030@203:1>))
      begin ApronInterface.convex_hull_interpolate(385484)[4]
        lb:((0 <= <make_array_1030@203:1>) &&
            ((<make_array_1030@203:1> < <make_array_1030@203:0>) &&
             (<<make_array_1030@203:2>@215:0> = <make_array_1030@203:1>)))
        nub:(not (<<make_array_1030@203:2>@215:0> <= <make_array_1030@203:1>))
        lb':((0 <= <make_array_1030@203:1>) &&
             ((<make_array_1030@203:1> < <make_array_1030@203:0>) &&
              (<<make_array_1030@203:2>@215:0> = <make_array_1030@203:1>)))
        nub':(not (<<make_array_1030@203:2>@215:0> <= <make_array_1030@203:1>))
        begin InterpProver.interpolate(385485)[5]
          begin InterpProver.interpolate_fresh(385486)[6]
            begin InterpProver.interpolate_log(385487)[7]
              input1: ((0 <= <make_array_1030@203:1>) &&
                       ((<make_array_1030@203:1> < <make_array_1030@203:0>) &&
                        (<<make_array_1030@203:2>@215:0> = <make_array_1030@203:1>)))
              input2: (not (<<make_array_1030@203:2>@215:0> <= <make_array_1030@203:1>))
              begin InterpProver.interpolate_check(385488)[8]
                begin InterpProver.interpolate_simplify(385489)[9]
                  begin InterpProver.interpolate_quick(385566)[10]
                    begin CsisatInterface.interpolate_csisat_wrap(385575)[11]
                      begin CsisatInterface.interpolate_csisat_post_process(385576)[12]
                        begin CsisatInterface.interpolate_csisat_log(385577)[13]
                          input1: (v_sep_make_array_1030_sep_203_sep_1 = v_sep_make_array_1030_sep_203_sep_2_sep_215_sep_0 & 0 <= v_sep_make_array_1030_sep_203_sep_1 & (1 + v_sep_make_array_1030_sep_203_sep_1) <= v_sep_make_array_1030_sep_203_sep_0)
                          input2: (1 + v_sep_make_array_1030_sep_203_sep_1) <= v_sep_make_array_1030_sep_203_sep_2_sep_215_sep_0
                          begin CsisatInterface.interpolate_csisat_raw(385578)[14]
                            
                          end CsisatInterface.interpolate_csisat_raw(385578)[14] (0.000000 sec.)
                          output: (-2*v_sep_make_array_1030_sep_203_sep_1 + 2*v_sep_make_array_1030_sep_203_sep_2_sep_215_sep_0) <= 0
                          
                        end CsisatInterface.interpolate_csisat_log(385577)[13] (0.000000 sec.)
                        after simplification: (-2*v_sep_make_array_1030_sep_203_sep_1 + 2*v_sep_make_array_1030_sep_203_sep_2_sep_215_sep_0) <= 0
                        after dnf conversion: (((-2*v_sep_make_array_1030_sep_203_sep_1 + 2*v_sep_make_array_1030_sep_203_sep_2_sep_215_sep_0) <= 0))
                        
                      end CsisatInterface.interpolate_csisat_post_process(385576)[12] (0.000000 sec.)
                      
                    end CsisatInterface.interpolate_csisat_wrap(385575)[11] (0.000000 sec.)
                    
                  end InterpProver.interpolate_quick(385566)[10] (0.000000 sec.)
                  
                end InterpProver.interpolate_simplify(385489)[9] (0.000000 sec.)
                
              end InterpProver.interpolate_check(385488)[8] (0.000000 sec.)
              output: (<<make_array_1030@203:2>@215:0> <= <make_array_1030@203:1>)
            end InterpProver.interpolate_log(385487)[7] (0.000000 sec.)
            
          end InterpProver.interpolate_fresh(385486)[6] (0.000000 sec.)
          
        end InterpProver.interpolate(385485)[5] (0.000000 sec.)
        output:
          P[<<make_array_1030@203:2>@215:0>](<make_array_1030@203:0>:int,<make_array_1030@203:1>:int,<<make_array_1030@203:2>@215:0>:int) =
          (<<make_array_1030@203:2>@215:0> <= <make_array_1030@203:1>)
      end ApronInterface.convex_hull_interpolate(385484)[4] (0.000000 sec.)
      Horn clauses:
        P[<array_max_1033@198:1>](<array_max_1033@221:0>:int,(-1 + <array_max_1033@221:1>):int),
        ((<array_max_1033@221:1> < (1 + <array_max_1033@221:0>)) && (1 <> <array_max_1033@221:1>)) |- bot
        
         (<array_max_1033@198:1> = 0)
        |- P[<array_max_1033@198:1>](<array_max_1033@198:0>:int,<array_max_1033@198:1>:int)
      lower bounds:
        P[<array_max_1033@198:1>](<array_max_1033@198:0>:int,<array_max_1033@198:1>:int) = (<array_max_1033@198:1> = 0)
      upper bounds:
        P[<array_max_1033@198:1>](var949:int,var950:int) = ((0 = var950) || (var950 >= var949))
      begin GenHcSolver.classify_pids(386666)[4]
        output:
          [<array_max_1033@198:1>]
      end GenHcSolver.classify_pids(386666)[4] (0.000000 sec.)
      lb:(<array_max_1033@198:1> = 0)
      nub:(not ((0 = <array_max_1033@198:1>) || (<array_max_1033@198:1> >= <array_max_1033@198:0>)))
      begin ApronInterface.convex_hull_interpolate(386669)[4]
        lb:(<array_max_1033@198:1> = 0)
        nub:(not ((0 = <array_max_1033@198:1>) || (<array_max_1033@198:1> >= <array_max_1033@198:0>)))
        lb':(<array_max_1033@198:1> = 0)
        nub':(not ((0 = <array_max_1033@198:1>) || (<array_max_1033@198:1> >= <array_max_1033@198:0>)))
        begin InterpProver.interpolate(386670)[5]
          begin InterpProver.interpolate_fresh(386671)[6]
            begin InterpProver.interpolate_log(386672)[7]
              input1: (<array_max_1033@198:1> = 0)
              input2: (not ((0 = <array_max_1033@198:1>) || (<array_max_1033@198:1> >= <array_max_1033@198:0>)))
              begin InterpProver.interpolate_check(386673)[8]
                begin InterpProver.interpolate_simplify(386674)[9]
                  begin InterpProver.interpolate_quick(386713)[10]
                    begin CsisatInterface.interpolate_csisat_wrap(386722)[11]
                      begin CsisatInterface.interpolate_csisat_post_process(386723)[12]
                        begin CsisatInterface.interpolate_csisat_log(386724)[13]
                          input1: 0 = v_sep_array_max_1033_sep_198_sep_1
                          input2: (not 0 = v_sep_array_max_1033_sep_198_sep_1 & (1 + v_sep_array_max_1033_sep_198_sep_1) <= v_sep_array_max_1033_sep_198_sep_0)
                          begin CsisatInterface.interpolate_csisat_raw(386725)[14]
                            
                          end CsisatInterface.interpolate_csisat_raw(386725)[14] (0.000000 sec.)
                          output: 0 = v_sep_array_max_1033_sep_198_sep_1
                          
                        end CsisatInterface.interpolate_csisat_log(386724)[13] (0.000000 sec.)
                        after simplification: 0 = v_sep_array_max_1033_sep_198_sep_1
                        after dnf conversion: ((0 = v_sep_array_max_1033_sep_198_sep_1))
                        
                      end CsisatInterface.interpolate_csisat_post_process(386723)[12] (0.000000 sec.)
                      
                    end CsisatInterface.interpolate_csisat_wrap(386722)[11] (0.000000 sec.)
                    
                  end InterpProver.interpolate_quick(386713)[10] (0.000999 sec.)
                  
                end InterpProver.interpolate_simplify(386674)[9] (0.000999 sec.)
                
              end InterpProver.interpolate_check(386673)[8] (0.000999 sec.)
              output: (0 = <array_max_1033@198:1>)
            end InterpProver.interpolate_log(386672)[7] (0.000999 sec.)
            
          end InterpProver.interpolate_fresh(386671)[6] (0.000999 sec.)
          
        end InterpProver.interpolate(386670)[5] (0.000999 sec.)
        output:
          P[<array_max_1033@198:1>](<array_max_1033@198:0>:int,<array_max_1033@198:1>:int) =
          (0 = <array_max_1033@198:1>)
      end ApronInterface.convex_hull_interpolate(386669)[4] (0.000999 sec.)
      begin HcSolver.check_validity(386844)[4]
        input:
          P[<fail_1487@261:0>](<fail_1487@261:0>:bool)|- bot
          
          P[<check_1148@237:2>](<f_check_1482@258:2>:int,<f_check_1482@258:0>:int,<f_check_1482@258:1>:int),
          P[<<<check_1148@237:3>@240:1>@256:0>](<f_check_1482@258:2>:int,<f_check_1482@258:0>:int,<f_check_1482@258:1>:int,<f_check_1482@258:0>:int,<f_check_1482@258:5>:int),
          ((<f_check_1482@258:5> > <f_check_1482@258:1>) &&
           ((<f_check_1482@258:0> < <f_check_1482@258:2>) && <fail_1487@261:0>))
          |- P[<fail_1487@261:0>](<fail_1487@261:0>:bool)
          
          P[<<array_max_1033@198:3>@233:0>](<check_1148@237:0>:int,0:int,<check_1148@237:2>:int),
          P[<<make_array_1030@242:2>@254:0>](<check_1148@237:0>:int,<<check_1148@237:3>@240:0>:int,<<<check_1148@237:3>@240:1>@256:0>:int),
          P[<check_1148@237:2>](<check_1148@237:0>:int,<check_1148@237:1>:int,<check_1148@237:2>:int),
          (<check_1148@237:1> = 0)
          |- P[<<<check_1148@237:3>@240:1>@256:0>](<check_1148@237:0>:int,
                                                   <check_1148@237:1>:int,
                                                   <check_1148@237:2>:int,
                                                   <<check_1148@237:3>@240:0>:int,
                                                   <<<check_1148@237:3>@240:1>@256:0>:int)
          
          P[<make_array_1030@242:1>](<make_array_1030@242:0>:int,<make_array_1030@242:1>:int),
          ((0 <= <make_array_1030@242:1>) &&
           ((<make_array_1030@242:1> < <make_array_1030@242:0>) &&
            (<<make_array_1030@242:2>@254:0> = <make_array_1030@242:1>)))
          |- P[<<make_array_1030@242:2>@254:0>](<make_array_1030@242:0>:int,
                                                <make_array_1030@242:1>:int,
                                                <<make_array_1030@242:2>@254:0>:int)
          
          P[<<array_max_1033@198:3>@233:0>](<make_array_1030@242:0>:int,0:int,<check_1148@237:2>:int),
          P[<<check_1148@237:3>@240:0>](<make_array_1030@242:0>:int,0:int,<check_1148@237:2>:int,<make_array_1030@242:1>:int)|- P[<make_array_1030@242:1>](
          <make_array_1030@242:0>:int,<make_array_1030@242:1>:int)
          
          P[<check_1148@237:2>](<check_1148@237:0>:int,<check_1148@237:1>:int,<check_1148@237:2>:int),
          ((<check_1148@237:1> < <check_1148@237:0>) && (<<check_1148@237:3>@240:0> = <check_1148@237:1>))
          |- P[<<check_1148@237:3>@240:0>](<check_1148@237:0>:int,<check_1148@237:1>:int,
                                           <check_1148@237:2>:int,<<check_1148@237:3>@240:0>:int)
          
          P[<<array_max_1033@198:3>@233:0>](<check_1148@237:0>:int,0:int,<check_1148@237:2>:int),
          (<check_1148@237:1> = 0)
          |- P[<check_1148@237:2>](<check_1148@237:0>:int,<check_1148@237:1>:int,
                                   <check_1148@237:2>:int)
          
          P[<array_max_1033@198:1>](<array_max_1033@198:0>:int,<array_max_1033@198:1>:int),
          P[<<<array_max_1033@198:2>@201:1>@217:0>](<array_max_1033@198:0>:int,<array_max_1033@198:1>:int,<array_max_1033@198:1>:int,<<array_max_1033@198:3>@233:0>:int),
          P[<<array_max_1033@221:3>@224:0>](<array_max_1033@198:0>:int,(
                                            1 + <array_max_1033@198:1>):int,var676:int),
          ((<<array_max_1033@198:3>@233:0> > var676) && (<array_max_1033@198:1> < <array_max_1033@198:0>))
          |- P[<<array_max_1033@198:3>@233:0>](<array_max_1033@198:0>:int,
                                               <array_max_1033@198:1>:int,
                                               <<array_max_1033@198:3>@233:0>:int)
          
          P[<array_max_1033@221:1>](<array_max_1033@221:0>:int,<array_max_1033@221:1>:int),
          ((<<array_max_1033@221:3>@224:0> = 0) && (<array_max_1033@221:1> >= <array_max_1033@221:0>))
          |- P[<<array_max_1033@221:3>@224:0>](<array_max_1033@221:0>:int,
                                               <array_max_1033@221:1>:int,
                                               <<array_max_1033@221:3>@224:0>:int)
          
          P[<array_max_1033@198:1>](<array_max_1033@221:0>:int,(-1 + <array_max_1033@221:1>):int),
          P[<<<array_max_1033@198:2>@201:1>@217:0>](<array_max_1033@221:0>:int,(
                                                    -1 + <array_max_1033@221:1>):int,(
                                                    -1 + <array_max_1033@221:1>):int,<f_array_max_1480@219:4>:int),
          (<array_max_1033@221:1> < (1 + <array_max_1033@221:0>))
          |- P[<array_max_1033@221:1>](<array_max_1033@221:0>:int,<array_max_1033@221:1>:int)
          
          P[<<make_array_1030@203:2>@215:0>](<array_max_1033@198:0>:int,<<array_max_1033@198:2>@201:0>:int,<<<array_max_1033@198:2>@201:1>@217:0>:int),
          P[<array_max_1033@198:1>](<array_max_1033@198:0>:int,<array_max_1033@198:1>:int),
          (<array_max_1033@198:1> = 0)
          |- P[<<<array_max_1033@198:2>@201:1>@217:0>](<array_max_1033@198:0>:int,
                                                       <array_max_1033@198:1>:int,
                                                       <<array_max_1033@198:2>@201:0>:int,
                                                       <<<array_max_1033@198:2>@201:1>@217:0>:int)
          
          P[<make_array_1030@203:1>](<make_array_1030@203:0>:int,<make_array_1030@203:1>:int),
          ((0 <= <make_array_1030@203:1>) &&
           ((<make_array_1030@203:1> < <make_array_1030@203:0>) &&
            (<<make_array_1030@203:2>@215:0> = <make_array_1030@203:1>)))
          |- P[<<make_array_1030@203:2>@215:0>](<make_array_1030@203:0>:int,
                                                <make_array_1030@203:1>:int,
                                                <<make_array_1030@203:2>@215:0>:int)
          
          P[<<array_max_1033@198:2>@201:0>](<make_array_1030@203:0>:int,0:int,<make_array_1030@203:1>:int)|- P[<make_array_1030@203:1>](
          <make_array_1030@203:0>:int,<make_array_1030@203:1>:int)
          
          P[<array_max_1033@198:1>](<array_max_1033@198:0>:int,<array_max_1033@198:1>:int),
          ((<array_max_1033@198:1> < <array_max_1033@198:0>) &&
           (<<array_max_1033@198:2>@201:0> = <array_max_1033@198:1>))
          |- P[<<array_max_1033@198:2>@201:0>](<array_max_1033@198:0>:int,
                                               <array_max_1033@198:1>:int,
                                               <<array_max_1033@198:2>@201:0>:int)
          
           (<array_max_1033@198:1> = 0)
          |- P[<array_max_1033@198:1>](<array_max_1033@198:0>:int,<array_max_1033@198:1>:int)
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        
      end HcSolver.check_validity(386844)[4] (0.009999 sec.)
      solution:
        P[<fail_1487@261:0>](<fail_1487@261:0>:bool) = false
        P[<<<check_1148@237:3>@240:1>@256:0>](var898:int,var899:int,var900:int,var901:int,var902:int) = false
        P[<<make_array_1030@242:2>@254:0>](<make_array_1030@203:0>:int,<make_array_1030@203:1>:int,<<make_array_1030@203:2>@215:0>:int) =
        true
        P[<make_array_1030@242:1>](<make_array_1030@203:0>:int,<make_array_1030@203:1>:int) = true
        P[<<check_1148@237:3>@240:0>](<check_1148@237:0>:int,<check_1148@237:1>:int,<check_1148@237:2>:int,<<check_1148@237:3>@240:0>:int) =
        false
        P[<check_1148@237:2>](var930:int,var931:int,var932:int) = false
        P[<<array_max_1033@198:3>@233:0>](<array_max_1033@221:0>:int,<array_max_1033@221:1>:int,<<array_max_1033@221:3>@224:0>:int) =
        ((0 <= <<array_max_1033@221:3>@224:0>) && (<array_max_1033@221:1> = 1))
        P[<<array_max_1033@221:3>@224:0>](<array_max_1033@221:0>:int,<array_max_1033@221:1>:int,<<array_max_1033@221:3>@224:0>:int) =
        ((0 <= <<array_max_1033@221:3>@224:0>) && (<array_max_1033@221:1> = 1))
        P[<array_max_1033@221:1>](<array_max_1033@221:0>:int,<array_max_1033@221:1>:int) = (1 = <array_max_1033@221:1>)
        P[<<<array_max_1033@198:2>@201:1>@217:0>](<array_max_1033@198:0>:int,<array_max_1033@198:1>:int,<<array_max_1033@198:2>@201:0>:int,<<<array_max_1033@198:2>@201:1>@217:0>:int) =
        (<<<array_max_1033@198:2>@201:1>@217:0> <= <<array_max_1033@198:2>@201:0>)
        P[<<make_array_1030@203:2>@215:0>](<make_array_1030@203:0>:int,<make_array_1030@203:1>:int,<<make_array_1030@203:2>@215:0>:int) =
        (<<make_array_1030@203:2>@215:0> <= <make_array_1030@203:1>)
        P[<make_array_1030@203:1>](<make_array_1030@203:0>:int,<make_array_1030@203:1>:int) = true
        P[<<array_max_1033@198:2>@201:0>](<array_max_1033@198:0>:int,<array_max_1033@198:1>:int,<<array_max_1033@198:2>@201:0>:int) =
        true
        P[<array_max_1033@198:1>](<array_max_1033@198:0>:int,<array_max_1033@198:1>:int) = (0 = <array_max_1033@198:1>)
    end GenHcSolver.solve(305738)[3] (0.432935 sec.)
    begin GenHcSolver.solve(388598)[3]
      Horn clauses:
        P[<fail_1487@261:0>](<fail_1487@261:0>:bool)|- bot
        
        P[<check_1148@237:2>](<f_check_1482@258:2>:int,<f_check_1482@258:0>:int,<f_check_1482@258:1>:int),
        P[<<<check_1148@237:3>@240:1>@256:0>](<f_check_1482@258:2>:int,<f_check_1482@258:0>:int,<f_check_1482@258:1>:int,<f_check_1482@258:0>:int,<f_check_1482@258:5>:int),
        ((<f_check_1482@258:5> > <f_check_1482@258:1>) &&
         ((<f_check_1482@258:0> < <f_check_1482@258:2>) && <fail_1487@261:0>))
        |- P[<fail_1487@261:0>](<fail_1487@261:0>:bool)
        
        P[<<array_max_1033@198:3>@233:0>](<check_1148@237:0>:int,0:int,<check_1148@237:2>:int),
        P[<<make_array_1030@242:2>@254:0>](<check_1148@237:0>:int,<<check_1148@237:3>@240:0>:int,<<<check_1148@237:3>@240:1>@256:0>:int),
        P[<check_1148@237:2>](<check_1148@237:0>:int,<check_1148@237:1>:int,<check_1148@237:2>:int),
        (<check_1148@237:1> = 0)
        |- P[<<<check_1148@237:3>@240:1>@256:0>](<check_1148@237:0>:int,
                                                 <check_1148@237:1>:int,
                                                 <check_1148@237:2>:int,
                                                 <<check_1148@237:3>@240:0>:int,
                                                 <<<check_1148@237:3>@240:1>@256:0>:int)
        
        P[<make_array_1030@242:1>](<make_array_1030@242:0>:int,<make_array_1030@242:1>:int),
        ((0 <= <make_array_1030@242:1>) &&
         ((<make_array_1030@242:1> < <make_array_1030@242:0>) &&
          (<<make_array_1030@242:2>@254:0> = <make_array_1030@242:1>)))
        |- P[<<make_array_1030@242:2>@254:0>](<make_array_1030@242:0>:int,
                                              <make_array_1030@242:1>:int,
                                              <<make_array_1030@242:2>@254:0>:int)
        
        P[<<array_max_1033@198:3>@233:0>](<make_array_1030@242:0>:int,0:int,<check_1148@237:2>:int),
        P[<<check_1148@237:3>@240:0>](<make_array_1030@242:0>:int,0:int,<check_1148@237:2>:int,<make_array_1030@242:1>:int)|- P[<make_array_1030@242:1>](
        <make_array_1030@242:0>:int,<make_array_1030@242:1>:int)
        
        P[<check_1148@237:2>](<check_1148@237:0>:int,<check_1148@237:1>:int,<check_1148@237:2>:int),
        ((<check_1148@237:1> < <check_1148@237:0>) && (<<check_1148@237:3>@240:0> = <check_1148@237:1>))
        |- P[<<check_1148@237:3>@240:0>](<check_1148@237:0>:int,<check_1148@237:1>:int,
                                         <check_1148@237:2>:int,<<check_1148@237:3>@240:0>:int)
        
        P[<<array_max_1033@198:3>@233:0>](<check_1148@237:0>:int,0:int,<check_1148@237:2>:int),
        (<check_1148@237:1> = 0)
        |- P[<check_1148@237:2>](<check_1148@237:0>:int,<check_1148@237:1>:int,
                                 <check_1148@237:2>:int)
        
        P[<array_max_1033@198:1>](<array_max_1033@198:0>:int,<array_max_1033@198:1>:int),
        P[<<<array_max_1033@198:2>@201:1>@217:0>](<array_max_1033@198:0>:int,<array_max_1033@198:1>:int,<array_max_1033@198:1>:int,<<array_max_1033@198:3>@233:0>:int),
        P[<<array_max_1033@221:3>@224:0>](<array_max_1033@198:0>:int,(
                                          1 + <array_max_1033@198:1>):int,var676:int),
        ((<<array_max_1033@198:3>@233:0> > var676) && (<array_max_1033@198:1> < <array_max_1033@198:0>))
        |- P[<<array_max_1033@198:3>@233:0>](<array_max_1033@198:0>:int,
                                             <array_max_1033@198:1>:int,
                                             <<array_max_1033@198:3>@233:0>:int)
        
        P[<array_max_1033@221:1>](<array_max_1033@221:0>:int,<array_max_1033@221:1>:int),
        ((<<array_max_1033@221:3>@224:0> = 0) && (<array_max_1033@221:1> >= <array_max_1033@221:0>))
        |- P[<<array_max_1033@221:3>@224:0>](<array_max_1033@221:0>:int,
                                             <array_max_1033@221:1>:int,
                                             <<array_max_1033@221:3>@224:0>:int)
        
        P[<array_max_1033@198:1>](<array_max_1033@221:0>:int,(-1 + <array_max_1033@221:1>):int),
        P[<<<array_max_1033@198:2>@201:1>@217:0>](<array_max_1033@221:0>:int,(
                                                  -1 + <array_max_1033@221:1>):int,(
                                                  -1 + <array_max_1033@221:1>):int,<f_array_max_1480@219:4>:int),
        (<array_max_1033@221:1> < (1 + <array_max_1033@221:0>))
        |- P[<array_max_1033@221:1>](<array_max_1033@221:0>:int,<array_max_1033@221:1>:int)
        
        P[<<make_array_1030@203:2>@215:0>](<array_max_1033@198:0>:int,<<array_max_1033@198:2>@201:0>:int,<<<array_max_1033@198:2>@201:1>@217:0>:int),
        P[<array_max_1033@198:1>](<array_max_1033@198:0>:int,<array_max_1033@198:1>:int), (
        <array_max_1033@198:1> = 0)
        |- P[<<<array_max_1033@198:2>@201:1>@217:0>](<array_max_1033@198:0>:int,
                                                     <array_max_1033@198:1>:int,
                                                     <<array_max_1033@198:2>@201:0>:int,
                                                     <<<array_max_1033@198:2>@201:1>@217:0>:int)
        
        P[<make_array_1030@203:1>](<make_array_1030@203:0>:int,<make_array_1030@203:1>:int),
        ((0 <= <make_array_1030@203:1>) &&
         ((<make_array_1030@203:1> < <make_array_1030@203:0>) &&
          (<<make_array_1030@203:2>@215:0> = <make_array_1030@203:1>)))
        |- P[<<make_array_1030@203:2>@215:0>](<make_array_1030@203:0>:int,
                                              <make_array_1030@203:1>:int,
                                              <<make_array_1030@203:2>@215:0>:int)
        
        P[<<array_max_1033@198:2>@201:0>](<make_array_1030@203:0>:int,0:int,<make_array_1030@203:1>:int)|- P[<make_array_1030@203:1>](
        <make_array_1030@203:0>:int,<make_array_1030@203:1>:int)
        
        P[<array_max_1033@198:1>](<array_max_1033@198:0>:int,<array_max_1033@198:1>:int),
        ((<array_max_1033@198:1> < <array_max_1033@198:0>) && (<<array_max_1033@198:2>@201:0> = <array_max_1033@198:1>))
        |- P[<<array_max_1033@198:2>@201:0>](<array_max_1033@198:0>:int,
                                             <array_max_1033@198:1>:int,
                                             <<array_max_1033@198:2>@201:0>:int)
        
         (<array_max_1033@198:1> = 0)
        |- P[<array_max_1033@198:1>](<array_max_1033@198:0>:int,<array_max_1033@198:1>:int)
      lower bounds:
        P[<array_max_1033@198:1>](<array_max_1033@198:0>:int,<array_max_1033@198:1>:int) = (<array_max_1033@198:1> = 0)
        P[<<array_max_1033@198:2>@201:0>](<array_max_1033@198:0>:int,<array_max_1033@198:1>:int,<<array_max_1033@198:2>@201:0>:int) =
        ((<array_max_1033@198:1> = 0) &&
         ((<array_max_1033@198:1> < <array_max_1033@198:0>) &&
          (<<array_max_1033@198:2>@201:0> = <array_max_1033@198:1>)))
        P[<make_array_1030@203:1>](<make_array_1030@203:0>:int,<make_array_1030@203:1>:int) =
        ((<make_array_1030@203:1> = 0) && (0 < <make_array_1030@203:0>))
        P[<<make_array_1030@203:2>@215:0>](<make_array_1030@203:0>:int,<make_array_1030@203:1>:int,<<make_array_1030@203:2>@215:0>:int) =
        ((<make_array_1030@203:1> = 0) &&
         ((<make_array_1030@203:1> < <make_array_1030@203:0>) &&
          ((0 < <make_array_1030@203:0>) && (<<make_array_1030@203:2>@215:0> = <make_array_1030@203:1>))))
        P[<<<array_max_1033@198:2>@201:1>@217:0>](<array_max_1033@198:0>:int,<array_max_1033@198:1>:int,<<array_max_1033@198:2>@201:0>:int,<<<array_max_1033@198:2>@201:1>@217:0>:int) =
        ((<<array_max_1033@198:2>@201:0> = 0) &&
         ((<array_max_1033@198:1> = 0) &&
          ((<<array_max_1033@198:2>@201:0> < <array_max_1033@198:0>) &&
           ((0 < <array_max_1033@198:0>) && (<<<array_max_1033@198:2>@201:1>@217:0> = <<array_max_1033@198:2>@201:0>)))))
        P[<array_max_1033@221:1>](<array_max_1033@221:0>:int,<array_max_1033@221:1>:int) =
        ((<array_max_1033@221:1> = 1) &&
         ((0 < <array_max_1033@221:0>) && (<array_max_1033@221:1> < (1 + <array_max_1033@221:0>))))
        P[<<array_max_1033@221:3>@224:0>](<array_max_1033@221:0>:int,<array_max_1033@221:1>:int,<<array_max_1033@221:3>@224:0>:int) =
        ((<<array_max_1033@221:3>@224:0> = 0) &&
         ((<array_max_1033@221:1> = 1) &&
          ((0 < <array_max_1033@221:0>) && (<array_max_1033@221:1> = <array_max_1033@221:0>))))
        P[<<array_max_1033@198:3>@233:0>](<array_max_1033@198:0>:int,<array_max_1033@198:1>:int,<<array_max_1033@198:3>@233:0>:int) =
        ((<array_max_1033@198:1> = 0) &&
         ((<<array_max_1033@198:3>@233:0> = <array_max_1033@198:1>) &&
          ((0 < <array_max_1033@198:0>) &&
           (((1 + <array_max_1033@198:1>) = <array_max_1033@198:0>) && (<<array_max_1033@198:3>@233:0> > 0)))))
        P[<check_1148@237:2>](<check_1148@237:0>:int,<check_1148@237:1>:int,<check_1148@237:2>:int) = false
        P[<<check_1148@237:3>@240:0>](<check_1148@237:0>:int,<check_1148@237:1>:int,<check_1148@237:2>:int,<<check_1148@237:3>@240:0>:int) =
        false
        P[<make_array_1030@242:1>](<make_array_1030@242:0>:int,<make_array_1030@242:1>:int) = false
        P[<<make_array_1030@242:2>@254:0>](<make_array_1030@242:0>:int,<make_array_1030@242:1>:int,<<make_array_1030@242:2>@254:0>:int) =
        false
        P[<<<check_1148@237:3>@240:1>@256:0>](<check_1148@237:0>:int,<check_1148@237:1>:int,<check_1148@237:2>:int,<<check_1148@237:3>@240:0>:int,<<<check_1148@237:3>@240:1>@256:0>:int) =
        false
        P[<fail_1487@261:0>](<fail_1487@261:0>:bool) = false
      upper bounds:
        P[<<make_array_1030@242:2>@254:0>](var963:int,var964:int,var965:int) = true
        P[<<make_array_1030@203:2>@215:0>](var957:int,var958:int,var959:int) = true
      begin GenHcSolver.classify_pids(401434)[4]
        output:
          [<<make_array_1030@203:2>@215:0>;<<make_array_1030@242:2>@254:0>]
      end GenHcSolver.classify_pids(401434)[4] (0.001000 sec.)
      begin ApronInterface.convex_hull_interpolate(401445)[4]
        lb:((<make_array_1030@203:1> = 0) &&
            ((<make_array_1030@203:1> < <make_array_1030@203:0>) &&
             ((0 < <make_array_1030@203:0>) && (<<make_array_1030@203:2>@215:0> = <make_array_1030@203:1>))))
        nub:false
        begin ExtFormula.Formula.case_analysis_boolean(401490)[5]
          ts: ((<make_array_1030@203:1> = 0) &&
               ((<make_array_1030@203:1> < <make_array_1030@203:0>) &&
                ((0 < <make_array_1030@203:0>) && (<<make_array_1030@203:2>@215:0> = <make_array_1030@203:1>))))
          
        end ExtFormula.Formula.case_analysis_boolean(401490)[5] (0.001000 sec.)
        begin ExtFormula.Formula.case_analysis_boolean(401501)[5]
          ts: false
          
        end ExtFormula.Formula.case_analysis_boolean(401501)[5] (0.000000 sec.)
        lb':((<<make_array_1030@203:2>@215:0> = 0) &&
             ((<make_array_1030@203:1> = 0) && ((-1 + <make_array_1030@203:0>) >= 0)))
        nub':(-1 >= 0)
        begin InterpProver.interpolate(401504)[5]
          begin InterpProver.interpolate_fresh(401505)[6]
            begin InterpProver.interpolate_log(401506)[7]
              input1: ((<<make_array_1030@203:2>@215:0> = 0) &&
                       ((<make_array_1030@203:1> = 0) && ((-1 + <make_array_1030@203:0>) >= 0)))
              input2: (-1 >= 0)
              begin InterpProver.interpolate_check(401507)[8]
                begin InterpProver.interpolate_simplify(401508)[9]
                  begin InterpProver.interpolate_quick(401566)[10]
                    
                  end InterpProver.interpolate_quick(401566)[10] (0.000000 sec.)
                  
                end InterpProver.interpolate_simplify(401508)[9] (0.000000 sec.)
                
              end InterpProver.interpolate_check(401507)[8] (0.000000 sec.)
              output: true
            end InterpProver.interpolate_log(401506)[7] (0.000000 sec.)
            
          end InterpProver.interpolate_fresh(401505)[6] (0.000000 sec.)
          
        end InterpProver.interpolate(401504)[5] (0.000000 sec.)
        output:
          P[<<make_array_1030@203:2>@215:0>](<make_array_1030@203:0>:int,<make_array_1030@203:1>:int,<<make_array_1030@203:2>@215:0>:int) =
          true
          P[<<make_array_1030@242:2>@254:0>](<make_array_1030@203:0>:int,<make_array_1030@203:1>:int,<<make_array_1030@203:2>@215:0>:int) =
          true
      end ApronInterface.convex_hull_interpolate(401445)[4] (0.001000 sec.)
      Horn clauses:
        P[<fail_1487@261:0>](<fail_1487@261:0>:bool)|- bot
        
        P[<check_1148@237:2>](<f_check_1482@258:2>:int,<f_check_1482@258:0>:int,<f_check_1482@258:1>:int),
        P[<<<check_1148@237:3>@240:1>@256:0>](<f_check_1482@258:2>:int,<f_check_1482@258:0>:int,<f_check_1482@258:1>:int,<f_check_1482@258:0>:int,<f_check_1482@258:5>:int),
        ((<f_check_1482@258:5> > <f_check_1482@258:1>) &&
         ((<f_check_1482@258:0> < <f_check_1482@258:2>) && <fail_1487@261:0>))
        |- P[<fail_1487@261:0>](<fail_1487@261:0>:bool)
        
        P[<<array_max_1033@198:3>@233:0>](<check_1148@237:0>:int,0:int,<check_1148@237:2>:int),
        P[<check_1148@237:2>](<check_1148@237:0>:int,<check_1148@237:1>:int,<check_1148@237:2>:int),
        (<check_1148@237:1> = 0)
        |- P[<<<check_1148@237:3>@240:1>@256:0>](<check_1148@237:0>:int,
                                                 <check_1148@237:1>:int,
                                                 <check_1148@237:2>:int,
                                                 <<check_1148@237:3>@240:0>:int,
                                                 <<<check_1148@237:3>@240:1>@256:0>:int)
        
        P[<<array_max_1033@198:3>@233:0>](<make_array_1030@242:0>:int,0:int,<check_1148@237:2>:int),
        P[<<check_1148@237:3>@240:0>](<make_array_1030@242:0>:int,0:int,<check_1148@237:2>:int,<make_array_1030@242:1>:int)|- P[<make_array_1030@242:1>](
        <make_array_1030@242:0>:int,<make_array_1030@242:1>:int)
        
        P[<check_1148@237:2>](<check_1148@237:0>:int,<check_1148@237:1>:int,<check_1148@237:2>:int),
        ((<check_1148@237:1> < <check_1148@237:0>) && (<<check_1148@237:3>@240:0> = <check_1148@237:1>))
        |- P[<<check_1148@237:3>@240:0>](<check_1148@237:0>:int,<check_1148@237:1>:int,
                                         <check_1148@237:2>:int,<<check_1148@237:3>@240:0>:int)
        
        P[<<array_max_1033@198:3>@233:0>](<check_1148@237:0>:int,0:int,<check_1148@237:2>:int),
        (<check_1148@237:1> = 0)
        |- P[<check_1148@237:2>](<check_1148@237:0>:int,<check_1148@237:1>:int,
                                 <check_1148@237:2>:int)
        
        P[<array_max_1033@198:1>](<array_max_1033@198:0>:int,<array_max_1033@198:1>:int),
        P[<<<array_max_1033@198:2>@201:1>@217:0>](<array_max_1033@198:0>:int,<array_max_1033@198:1>:int,<array_max_1033@198:1>:int,<<array_max_1033@198:3>@233:0>:int),
        P[<<array_max_1033@221:3>@224:0>](<array_max_1033@198:0>:int,(
                                          1 + <array_max_1033@198:1>):int,var676:int),
        ((<<array_max_1033@198:3>@233:0> > var676) && (<array_max_1033@198:1> < <array_max_1033@198:0>))
        |- P[<<array_max_1033@198:3>@233:0>](<array_max_1033@198:0>:int,
                                             <array_max_1033@198:1>:int,
                                             <<array_max_1033@198:3>@233:0>:int)
        
        P[<array_max_1033@221:1>](<array_max_1033@221:0>:int,<array_max_1033@221:1>:int),
        ((<<array_max_1033@221:3>@224:0> = 0) && (<array_max_1033@221:1> >= <array_max_1033@221:0>))
        |- P[<<array_max_1033@221:3>@224:0>](<array_max_1033@221:0>:int,
                                             <array_max_1033@221:1>:int,
                                             <<array_max_1033@221:3>@224:0>:int)
        
        P[<array_max_1033@198:1>](<array_max_1033@221:0>:int,(-1 + <array_max_1033@221:1>):int),
        P[<<<array_max_1033@198:2>@201:1>@217:0>](<array_max_1033@221:0>:int,(
                                                  -1 + <array_max_1033@221:1>):int,(
                                                  -1 + <array_max_1033@221:1>):int,<f_array_max_1480@219:4>:int),
        (<array_max_1033@221:1> < (1 + <array_max_1033@221:0>))
        |- P[<array_max_1033@221:1>](<array_max_1033@221:0>:int,<array_max_1033@221:1>:int)
        
        P[<<make_array_1030@203:2>@215:0>](<array_max_1033@198:0>:int,<<array_max_1033@198:2>@201:0>:int,<<<array_max_1033@198:2>@201:1>@217:0>:int),
        P[<array_max_1033@198:1>](<array_max_1033@198:0>:int,<array_max_1033@198:1>:int), (
        <array_max_1033@198:1> = 0)
        |- P[<<<array_max_1033@198:2>@201:1>@217:0>](<array_max_1033@198:0>:int,
                                                     <array_max_1033@198:1>:int,
                                                     <<array_max_1033@198:2>@201:0>:int,
                                                     <<<array_max_1033@198:2>@201:1>@217:0>:int)
        
        P[<make_array_1030@203:1>](<make_array_1030@203:0>:int,<make_array_1030@203:1>:int),
        ((0 <= <make_array_1030@203:1>) &&
         ((<make_array_1030@203:1> < <make_array_1030@203:0>) &&
          (<<make_array_1030@203:2>@215:0> = <make_array_1030@203:1>)))
        |- P[<<make_array_1030@203:2>@215:0>](<make_array_1030@203:0>:int,
                                              <make_array_1030@203:1>:int,
                                              <<make_array_1030@203:2>@215:0>:int)
        
        P[<<array_max_1033@198:2>@201:0>](<make_array_1030@203:0>:int,0:int,<make_array_1030@203:1>:int)|- P[<make_array_1030@203:1>](
        <make_array_1030@203:0>:int,<make_array_1030@203:1>:int)
        
        P[<array_max_1033@198:1>](<array_max_1033@198:0>:int,<array_max_1033@198:1>:int),
        ((<array_max_1033@198:1> < <array_max_1033@198:0>) && (<<array_max_1033@198:2>@201:0> = <array_max_1033@198:1>))
        |- P[<<array_max_1033@198:2>@201:0>](<array_max_1033@198:0>:int,
                                             <array_max_1033@198:1>:int,
                                             <<array_max_1033@198:2>@201:0>:int)
        
         (<array_max_1033@198:1> = 0)
        |- P[<array_max_1033@198:1>](<array_max_1033@198:0>:int,<array_max_1033@198:1>:int)
      lower bounds:
        P[<array_max_1033@198:1>](<array_max_1033@198:0>:int,<array_max_1033@198:1>:int) = (<array_max_1033@198:1> = 0)
        P[<<array_max_1033@198:2>@201:0>](<array_max_1033@198:0>:int,<array_max_1033@198:1>:int,<<array_max_1033@198:2>@201:0>:int) =
        ((<array_max_1033@198:1> = 0) &&
         ((<array_max_1033@198:1> < <array_max_1033@198:0>) &&
          (<<array_max_1033@198:2>@201:0> = <array_max_1033@198:1>)))
        P[<make_array_1030@203:1>](<make_array_1030@203:0>:int,<make_array_1030@203:1>:int) =
        ((<make_array_1030@203:1> = 0) && (0 < <make_array_1030@203:0>))
        P[<<make_array_1030@203:2>@215:0>](<make_array_1030@203:0>:int,<make_array_1030@203:1>:int,<<make_array_1030@203:2>@215:0>:int) =
        ((<make_array_1030@203:1> = 0) &&
         ((<make_array_1030@203:1> < <make_array_1030@203:0>) &&
          ((0 < <make_array_1030@203:0>) && (<<make_array_1030@203:2>@215:0> = <make_array_1030@203:1>))))
        P[<<<array_max_1033@198:2>@201:1>@217:0>](<array_max_1033@198:0>:int,<array_max_1033@198:1>:int,<<array_max_1033@198:2>@201:0>:int,<<<array_max_1033@198:2>@201:1>@217:0>:int) =
        ((<<array_max_1033@198:2>@201:0> = 0) &&
         ((<array_max_1033@198:1> = 0) &&
          ((<<array_max_1033@198:2>@201:0> < <array_max_1033@198:0>) &&
           ((0 < <array_max_1033@198:0>) && (<<<array_max_1033@198:2>@201:1>@217:0> = <<array_max_1033@198:2>@201:0>)))))
        P[<array_max_1033@221:1>](<array_max_1033@221:0>:int,<array_max_1033@221:1>:int) =
        ((<array_max_1033@221:1> = 1) &&
         ((0 < <array_max_1033@221:0>) && (<array_max_1033@221:1> < (1 + <array_max_1033@221:0>))))
        P[<<array_max_1033@221:3>@224:0>](<array_max_1033@221:0>:int,<array_max_1033@221:1>:int,<<array_max_1033@221:3>@224:0>:int) =
        ((<<array_max_1033@221:3>@224:0> = 0) &&
         ((<array_max_1033@221:1> = 1) &&
          ((0 < <array_max_1033@221:0>) && (<array_max_1033@221:1> = <array_max_1033@221:0>))))
        P[<<array_max_1033@198:3>@233:0>](<array_max_1033@198:0>:int,<array_max_1033@198:1>:int,<<array_max_1033@198:3>@233:0>:int) =
        ((<array_max_1033@198:1> = 0) &&
         ((<<array_max_1033@198:3>@233:0> = <array_max_1033@198:1>) &&
          ((0 < <array_max_1033@198:0>) &&
           (((1 + <array_max_1033@198:1>) = <array_max_1033@198:0>) && (<<array_max_1033@198:3>@233:0> > 0)))))
        P[<check_1148@237:2>](<check_1148@237:0>:int,<check_1148@237:1>:int,<check_1148@237:2>:int) = false
        P[<<<check_1148@237:3>@240:1>@256:0>](<check_1148@237:0>:int,<check_1148@237:1>:int,<check_1148@237:2>:int,<<check_1148@237:3>@240:0>:int,<<<check_1148@237:3>@240:1>@256:0>:int) =
        false
        P[<<check_1148@237:3>@240:0>](<check_1148@237:0>:int,<check_1148@237:1>:int,<check_1148@237:2>:int,<<check_1148@237:3>@240:0>:int) =
        false
        P[<fail_1487@261:0>](<fail_1487@261:0>:bool) = false
        P[<make_array_1030@242:1>](<make_array_1030@242:0>:int,<make_array_1030@242:1>:int) = false
      upper bounds:
        P[<make_array_1030@242:1>](var969:int,var970:int) = true
        P[<make_array_1030@203:1>](var967:int,var968:int) = true
      begin GenHcSolver.classify_pids(418365)[4]
        output:
          [<make_array_1030@203:1>;<make_array_1030@242:1>]
      end GenHcSolver.classify_pids(418365)[4] (0.000000 sec.)
      begin ApronInterface.convex_hull_interpolate(418376)[4]
        lb:((<make_array_1030@203:1> = 0) && (0 < <make_array_1030@203:0>))
        nub:false
        begin ExtFormula.Formula.case_analysis_boolean(418386)[5]
          ts: ((<make_array_1030@203:1> = 0) && (0 < <make_array_1030@203:0>))
          
        end ExtFormula.Formula.case_analysis_boolean(418386)[5] (0.000000 sec.)
        begin ExtFormula.Formula.case_analysis_boolean(418393)[5]
          ts: false
          
        end ExtFormula.Formula.case_analysis_boolean(418393)[5] (0.000000 sec.)
        lb':((<make_array_1030@203:1> = 0) && ((-1 + <make_array_1030@203:0>) >= 0))
        nub':(-1 >= 0)
        begin InterpProver.interpolate(418396)[5]
          begin InterpProver.interpolate_fresh(418397)[6]
            begin InterpProver.interpolate_log(418398)[7]
              input1: ((<make_array_1030@203:1> = 0) && ((-1 + <make_array_1030@203:0>) >= 0))
              input2: (-1 >= 0)
              begin InterpProver.interpolate_check(418399)[8]
                begin InterpProver.interpolate_simplify(418400)[9]
                  begin InterpProver.interpolate_quick(418440)[10]
                    
                  end InterpProver.interpolate_quick(418440)[10] (0.000000 sec.)
                  
                end InterpProver.interpolate_simplify(418400)[9] (0.000000 sec.)
                
              end InterpProver.interpolate_check(418399)[8] (0.000000 sec.)
              output: true
            end InterpProver.interpolate_log(418398)[7] (0.000000 sec.)
            
          end InterpProver.interpolate_fresh(418397)[6] (0.000000 sec.)
          
        end InterpProver.interpolate(418396)[5] (0.000000 sec.)
        output:
          P[<make_array_1030@203:1>](<make_array_1030@203:0>:int,<make_array_1030@203:1>:int) = true
          P[<make_array_1030@242:1>](<make_array_1030@203:0>:int,<make_array_1030@203:1>:int) = true
      end ApronInterface.convex_hull_interpolate(418376)[4] (0.000000 sec.)
      Horn clauses:
        P[<fail_1487@261:0>](<fail_1487@261:0>:bool)|- bot
        
        P[<check_1148@237:2>](<f_check_1482@258:2>:int,<f_check_1482@258:0>:int,<f_check_1482@258:1>:int),
        P[<<<check_1148@237:3>@240:1>@256:0>](<f_check_1482@258:2>:int,<f_check_1482@258:0>:int,<f_check_1482@258:1>:int,<f_check_1482@258:0>:int,<f_check_1482@258:5>:int),
        ((<f_check_1482@258:5> > <f_check_1482@258:1>) &&
         ((<f_check_1482@258:0> < <f_check_1482@258:2>) && <fail_1487@261:0>))
        |- P[<fail_1487@261:0>](<fail_1487@261:0>:bool)
        
        P[<<array_max_1033@198:3>@233:0>](<check_1148@237:0>:int,0:int,<check_1148@237:2>:int),
        P[<check_1148@237:2>](<check_1148@237:0>:int,<check_1148@237:1>:int,<check_1148@237:2>:int),
        (<check_1148@237:1> = 0)
        |- P[<<<check_1148@237:3>@240:1>@256:0>](<check_1148@237:0>:int,
                                                 <check_1148@237:1>:int,
                                                 <check_1148@237:2>:int,
                                                 <<check_1148@237:3>@240:0>:int,
                                                 <<<check_1148@237:3>@240:1>@256:0>:int)
        
        P[<check_1148@237:2>](<check_1148@237:0>:int,<check_1148@237:1>:int,<check_1148@237:2>:int),
        ((<check_1148@237:1> < <check_1148@237:0>) && (<<check_1148@237:3>@240:0> = <check_1148@237:1>))
        |- P[<<check_1148@237:3>@240:0>](<check_1148@237:0>:int,<check_1148@237:1>:int,
                                         <check_1148@237:2>:int,<<check_1148@237:3>@240:0>:int)
        
        P[<<array_max_1033@198:3>@233:0>](<check_1148@237:0>:int,0:int,<check_1148@237:2>:int),
        (<check_1148@237:1> = 0)
        |- P[<check_1148@237:2>](<check_1148@237:0>:int,<check_1148@237:1>:int,
                                 <check_1148@237:2>:int)
        
        P[<array_max_1033@198:1>](<array_max_1033@198:0>:int,<array_max_1033@198:1>:int),
        P[<<<array_max_1033@198:2>@201:1>@217:0>](<array_max_1033@198:0>:int,<array_max_1033@198:1>:int,<array_max_1033@198:1>:int,<<array_max_1033@198:3>@233:0>:int),
        P[<<array_max_1033@221:3>@224:0>](<array_max_1033@198:0>:int,(
                                          1 + <array_max_1033@198:1>):int,var676:int),
        ((<<array_max_1033@198:3>@233:0> > var676) && (<array_max_1033@198:1> < <array_max_1033@198:0>))
        |- P[<<array_max_1033@198:3>@233:0>](<array_max_1033@198:0>:int,
                                             <array_max_1033@198:1>:int,
                                             <<array_max_1033@198:3>@233:0>:int)
        
        P[<array_max_1033@221:1>](<array_max_1033@221:0>:int,<array_max_1033@221:1>:int),
        ((<<array_max_1033@221:3>@224:0> = 0) && (<array_max_1033@221:1> >= <array_max_1033@221:0>))
        |- P[<<array_max_1033@221:3>@224:0>](<array_max_1033@221:0>:int,
                                             <array_max_1033@221:1>:int,
                                             <<array_max_1033@221:3>@224:0>:int)
        
        P[<array_max_1033@198:1>](<array_max_1033@221:0>:int,(-1 + <array_max_1033@221:1>):int),
        P[<<<array_max_1033@198:2>@201:1>@217:0>](<array_max_1033@221:0>:int,(
                                                  -1 + <array_max_1033@221:1>):int,(
                                                  -1 + <array_max_1033@221:1>):int,<f_array_max_1480@219:4>:int),
        (<array_max_1033@221:1> < (1 + <array_max_1033@221:0>))
        |- P[<array_max_1033@221:1>](<array_max_1033@221:0>:int,<array_max_1033@221:1>:int)
        
        P[<<make_array_1030@203:2>@215:0>](<array_max_1033@198:0>:int,<<array_max_1033@198:2>@201:0>:int,<<<array_max_1033@198:2>@201:1>@217:0>:int),
        P[<array_max_1033@198:1>](<array_max_1033@198:0>:int,<array_max_1033@198:1>:int), (
        <array_max_1033@198:1> = 0)
        |- P[<<<array_max_1033@198:2>@201:1>@217:0>](<array_max_1033@198:0>:int,
                                                     <array_max_1033@198:1>:int,
                                                     <<array_max_1033@198:2>@201:0>:int,
                                                     <<<array_max_1033@198:2>@201:1>@217:0>:int)
        
        
        ((0 <= <make_array_1030@203:1>) &&
         ((<make_array_1030@203:1> < <make_array_1030@203:0>) &&
          (<<make_array_1030@203:2>@215:0> = <make_array_1030@203:1>)))
        |- P[<<make_array_1030@203:2>@215:0>](<make_array_1030@203:0>:int,
                                              <make_array_1030@203:1>:int,
                                              <<make_array_1030@203:2>@215:0>:int)
        
        P[<array_max_1033@198:1>](<array_max_1033@198:0>:int,<array_max_1033@198:1>:int),
        ((<array_max_1033@198:1> < <array_max_1033@198:0>) && (<<array_max_1033@198:2>@201:0> = <array_max_1033@198:1>))
        |- P[<<array_max_1033@198:2>@201:0>](<array_max_1033@198:0>:int,
                                             <array_max_1033@198:1>:int,
                                             <<array_max_1033@198:2>@201:0>:int)
        
         (<array_max_1033@198:1> = 0)
        |- P[<array_max_1033@198:1>](<array_max_1033@198:0>:int,<array_max_1033@198:1>:int)
      lower bounds:
        P[<<make_array_1030@203:2>@215:0>](<make_array_1030@203:0>:int,<make_array_1030@203:1>:int,<<make_array_1030@203:2>@215:0>:int) =
        ((0 <= <make_array_1030@203:1>) &&
         ((<make_array_1030@203:1> < <make_array_1030@203:0>) &&
          (<<make_array_1030@203:2>@215:0> = <make_array_1030@203:1>)))
        P[<array_max_1033@198:1>](<array_max_1033@198:0>:int,<array_max_1033@198:1>:int) = (<array_max_1033@198:1> = 0)
        P[<<<array_max_1033@198:2>@201:1>@217:0>](<array_max_1033@198:0>:int,<array_max_1033@198:1>:int,<<array_max_1033@198:2>@201:0>:int,<<<array_max_1033@198:2>@201:1>@217:0>:int) =
        ((<array_max_1033@198:1> = 0) &&
         ((0 <= <<array_max_1033@198:2>@201:0>) &&
          ((<<array_max_1033@198:2>@201:0> < <array_max_1033@198:0>) &&
           (<<<array_max_1033@198:2>@201:1>@217:0> = <<array_max_1033@198:2>@201:0>))))
        P[<<array_max_1033@198:2>@201:0>](<array_max_1033@198:0>:int,<array_max_1033@198:1>:int,<<array_max_1033@198:2>@201:0>:int) =
        ((<array_max_1033@198:1> = 0) &&
         ((<array_max_1033@198:1> < <array_max_1033@198:0>) &&
          (<<array_max_1033@198:2>@201:0> = <array_max_1033@198:1>)))
        P[<array_max_1033@221:1>](<array_max_1033@221:0>:int,<array_max_1033@221:1>:int) =
        ((<array_max_1033@221:1> = 1) && (<array_max_1033@221:1> < (1 + <array_max_1033@221:0>)))
        P[<<array_max_1033@221:3>@224:0>](<array_max_1033@221:0>:int,<array_max_1033@221:1>:int,<<array_max_1033@221:3>@224:0>:int) =
        ((<<array_max_1033@221:3>@224:0> = 0) &&
         ((<array_max_1033@221:1> = 1) && (<array_max_1033@221:1> = <array_max_1033@221:0>)))
        P[<<array_max_1033@198:3>@233:0>](<array_max_1033@198:0>:int,<array_max_1033@198:1>:int,<<array_max_1033@198:3>@233:0>:int) =
        ((<array_max_1033@198:1> = 0) &&
         ((<<array_max_1033@198:3>@233:0> = <array_max_1033@198:1>) &&
          (((1 + <array_max_1033@198:1>) = <array_max_1033@198:0>) && (<<array_max_1033@198:3>@233:0> > 0))))
        P[<check_1148@237:2>](<check_1148@237:0>:int,<check_1148@237:1>:int,<check_1148@237:2>:int) = false
        P[<<<check_1148@237:3>@240:1>@256:0>](<check_1148@237:0>:int,<check_1148@237:1>:int,<check_1148@237:2>:int,<<check_1148@237:3>@240:0>:int,<<<check_1148@237:3>@240:1>@256:0>:int) =
        false
        P[<<check_1148@237:3>@240:0>](<check_1148@237:0>:int,<check_1148@237:1>:int,<check_1148@237:2>:int,<<check_1148@237:3>@240:0>:int) =
        false
        P[<fail_1487@261:0>](<fail_1487@261:0>:bool) = false
      upper bounds:
        P[<<array_max_1033@198:3>@233:0>](var984:int,var985:int,var986:int) = ((var985 <> 0) || (0 >= var984))
        P[<<array_max_1033@221:3>@224:0>](var979:int,var980:int,var981:int) =
        ((var980 <> 1) || ((0 >= var979) || (0 <= var981)))
      begin GenHcSolver.classify_pids(434424)[4]
        output:
          [<<array_max_1033@221:3>@224:0>;<<array_max_1033@198:3>@233:0>]
      end GenHcSolver.classify_pids(434424)[4] (0.000000 sec.)
      begin ApronInterface.convex_hull_interpolate(434501)[4]
        lb:(((<<array_max_1033@221:3>@224:0> = 0) &&
             ((<array_max_1033@221:1> = 1) && (<array_max_1033@221:1> = <array_max_1033@221:0>))) ||
            ((<array_max_1033@221:1> = 0) &&
             ((<<array_max_1033@221:3>@224:0> = <array_max_1033@221:1>) &&
              (((1 + <array_max_1033@221:1>) = <array_max_1033@221:0>) && (<<array_max_1033@221:3>@224:0> > 0)))))
        nub:((not
                ((<array_max_1033@221:1> <> 1) ||
                 ((0 >= <array_max_1033@221:0>) || (0 <= <<array_max_1033@221:3>@224:0>)))) ||
             (not ((<array_max_1033@221:1> <> 0) || (0 >= <array_max_1033@221:0>))))
        begin ExtFormula.Formula.case_analysis_boolean(434576)[5]
          ts: (((<<array_max_1033@221:3>@224:0> = 0) &&
                ((<array_max_1033@221:1> = 1) && (<array_max_1033@221:1> = <array_max_1033@221:0>))) ||
               ((<array_max_1033@221:1> = 0) &&
                ((<<array_max_1033@221:3>@224:0> = <array_max_1033@221:1>) &&
                 (((1 + <array_max_1033@221:1>) = <array_max_1033@221:0>) && (<<array_max_1033@221:3>@224:0> > 0)))))
          
        end ExtFormula.Formula.case_analysis_boolean(434576)[5] (0.001000 sec.)
        begin ExtFormula.Formula.case_analysis_boolean(434637)[5]
          ts: ((0 < <array_max_1033@221:0>) &&
               ((<array_max_1033@221:1> = 0) || ((<array_max_1033@221:1> = 1) && (0 > <<array_max_1033@221:3>@224:0>))))
          
        end ExtFormula.Formula.case_analysis_boolean(434637)[5] (0.001000 sec.)
        lb':((<<array_max_1033@221:3>@224:0> = 0) &&
             (((-1 + <array_max_1033@221:1>) = 0) && ((-1 + <array_max_1033@221:0>) = 0)))
        nub':(((1 + (-1 * <array_max_1033@221:1>)) >= 0) &&
              ((<array_max_1033@221:1> >= 0) && ((-1 + <array_max_1033@221:0>) >= 0)))
        begin InterpProver.interpolate(434646)[5]
          begin InterpProver.interpolate_fresh(434647)[6]
            begin InterpProver.interpolate_log(434648)[7]
              input1: ((<<array_max_1033@221:3>@224:0> = 0) &&
                       (((-1 + <array_max_1033@221:1>) = 0) && ((-1 + <array_max_1033@221:0>) = 0)))
              input2: (((1 + (-1 * <array_max_1033@221:1>)) >= 0) &&
                       ((<array_max_1033@221:1> >= 0) && ((-1 + <array_max_1033@221:0>) >= 0)))
              begin InterpProver.interpolate_check(434649)[8]
                begin InterpProver.interpolate_simplify(434650)[9]
                  begin InterpProver.interpolate_quick(434766)[10]
                    begin CsisatInterface.interpolate_csisat_wrap(434775)[11]
                      begin CsisatInterface.interpolate_csisat_post_process(434776)[12]
                        begin CsisatInterface.interpolate_csisat_log(434777)[13]
                          input1: (1 = v_sep_array_max_1033_sep_221_sep_0 & 1 = v_sep_array_max_1033_sep_221_sep_1)
                          input2: (0 <= v_sep_array_max_1033_sep_221_sep_1 & 1 <= v_sep_array_max_1033_sep_221_sep_0 & v_sep_array_max_1033_sep_221_sep_1 <= 1)
                          begin CsisatInterface.interpolate_csisat_raw(434778)[14]
                            
                          end CsisatInterface.interpolate_csisat_raw(434778)[14] (0.000000 sec.)
                          
                        end CsisatInterface.interpolate_csisat_log(434777)[13] (0.000000 sec.)
                        
                      end CsisatInterface.interpolate_csisat_post_process(434776)[12] (0.000000 sec.)
                      
                    end CsisatInterface.interpolate_csisat_wrap(434775)[11] (0.000000 sec.)
                    
                  end InterpProver.interpolate_quick(434766)[10] (0.001000 sec.)
                  
                end InterpProver.interpolate_simplify(434650)[9] (0.001000 sec.)
                
              end InterpProver.interpolate_check(434649)[8] (0.002000 sec.)
              there is no interpolant
            end InterpProver.interpolate_log(434648)[7] (0.003000 sec.)
            
          end InterpProver.interpolate_fresh(434647)[6] (0.003000 sec.)
          
        end InterpProver.interpolate(434646)[5] (0.003000 sec.)
        begin InterpProver.interpolate(434801)[5]
          begin InterpProver.interpolate_fresh(434802)[6]
            begin InterpProver.interpolate_log(434803)[7]
              input1: ((<<array_max_1033@221:3>@224:0> = 0) &&
                       (((-1 + <array_max_1033@221:1>) = 0) && ((-1 + <array_max_1033@221:0>) = 0)))
              input2: (not ((<array_max_1033@221:1> <> 0) || (0 >= <array_max_1033@221:0>)))
              begin InterpProver.interpolate_check(434804)[8]
                begin InterpProver.interpolate_simplify(434805)[9]
                  begin InterpProver.interpolate_quick(434877)[10]
                    begin CsisatInterface.interpolate_csisat_wrap(434886)[11]
                      begin CsisatInterface.interpolate_csisat_post_process(434887)[12]
                        begin CsisatInterface.interpolate_csisat_log(434888)[13]
                          input1: (1 = v_sep_array_max_1033_sep_221_sep_0 & 1 = v_sep_array_max_1033_sep_221_sep_1)
                          input2: (0 = v_sep_array_max_1033_sep_221_sep_1 & 1 <= v_sep_array_max_1033_sep_221_sep_0)
                          begin CsisatInterface.interpolate_csisat_raw(434889)[14]
                            
                          end CsisatInterface.interpolate_csisat_raw(434889)[14] (0.000999 sec.)
                          output: -2*v_sep_array_max_1033_sep_221_sep_1 <= -2
                          
                        end CsisatInterface.interpolate_csisat_log(434888)[13] (0.000999 sec.)
                        after simplification: -2*v_sep_array_max_1033_sep_221_sep_1 <= -2
                        after dnf conversion: ((-2*v_sep_array_max_1033_sep_221_sep_1 <= -2))
                        
                      end CsisatInterface.interpolate_csisat_post_process(434887)[12] (0.000999 sec.)
                      
                    end CsisatInterface.interpolate_csisat_wrap(434886)[11] (0.000999 sec.)
                    
                  end InterpProver.interpolate_quick(434877)[10] (0.000999 sec.)
                  
                end InterpProver.interpolate_simplify(434805)[9] (0.000999 sec.)
                
              end InterpProver.interpolate_check(434804)[8] (0.000999 sec.)
              output: (1 <= <array_max_1033@221:1>)
            end InterpProver.interpolate_log(434803)[7] (0.000999 sec.)
            
          end InterpProver.interpolate_fresh(434802)[6] (0.000999 sec.)
          
        end InterpProver.interpolate(434801)[5] (0.000999 sec.)
        begin InterpProver.interpolate(434917)[5]
          begin InterpProver.interpolate_fresh(434918)[6]
            begin InterpProver.interpolate_log(434919)[7]
              input1: ((<<array_max_1033@221:3>@224:0> = 0) &&
                       (((-1 + <array_max_1033@221:1>) = 0) && ((-1 + <array_max_1033@221:0>) = 0)))
              input2: (not
                         ((<array_max_1033@221:1> <> 1) ||
                          ((0 >= <array_max_1033@221:0>) || (0 <= <<array_max_1033@221:3>@224:0>))))
              begin InterpProver.interpolate_check(434920)[8]
                begin InterpProver.interpolate_simplify(434921)[9]
                  begin InterpProver.interpolate_quick(435006)[10]
                    begin CsisatInterface.interpolate_csisat_wrap(435015)[11]
                      begin CsisatInterface.interpolate_csisat_post_process(435016)[12]
                        begin CsisatInterface.interpolate_csisat_log(435017)[13]
                          input1: (0 = v_sep_array_max_1033_sep_221_sep_3_sep_224_sep_0 & 1 = v_sep_array_max_1033_sep_221_sep_0 & 1 = v_sep_array_max_1033_sep_221_sep_1)
                          input2: (1 = v_sep_array_max_1033_sep_221_sep_1 & 1 <= v_sep_array_max_1033_sep_221_sep_0 & (1 + v_sep_array_max_1033_sep_221_sep_3_sep_224_sep_0) <= 0)
                          begin CsisatInterface.interpolate_csisat_raw(435018)[14]
                            
                          end CsisatInterface.interpolate_csisat_raw(435018)[14] (0.001000 sec.)
                          output: -2*v_sep_array_max_1033_sep_221_sep_3_sep_224_sep_0 <= 0
                          
                        end CsisatInterface.interpolate_csisat_log(435017)[13] (0.001000 sec.)
                        after simplification: -2*v_sep_array_max_1033_sep_221_sep_3_sep_224_sep_0 <= 0
                        after dnf conversion: ((-2*v_sep_array_max_1033_sep_221_sep_3_sep_224_sep_0 <= 0))
                        
                      end CsisatInterface.interpolate_csisat_post_process(435016)[12] (0.001000 sec.)
                      
                    end CsisatInterface.interpolate_csisat_wrap(435015)[11] (0.001000 sec.)
                    
                  end InterpProver.interpolate_quick(435006)[10] (0.001000 sec.)
                  
                end InterpProver.interpolate_simplify(434921)[9] (0.002000 sec.)
                
              end InterpProver.interpolate_check(434920)[8] (0.002000 sec.)
              output: (0 <= <<array_max_1033@221:3>@224:0>)
            end InterpProver.interpolate_log(434919)[7] (0.002000 sec.)
            
          end InterpProver.interpolate_fresh(434918)[6] (0.002000 sec.)
          
        end InterpProver.interpolate(434917)[5] (0.002000 sec.)
        output:
          P[<<array_max_1033@221:3>@224:0>](<array_max_1033@221:0>:int,<array_max_1033@221:1>:int,<<array_max_1033@221:3>@224:0>:int) =
          (0 <= <<array_max_1033@221:3>@224:0>)
          P[<<array_max_1033@198:3>@233:0>](<array_max_1033@221:0>:int,<array_max_1033@221:1>:int,<<array_max_1033@221:3>@224:0>:int) =
          (1 <= <array_max_1033@221:1>)
      end ApronInterface.convex_hull_interpolate(434501)[4] (0.008999 sec.)
      Horn clauses:
        P[<fail_1487@261:0>](<fail_1487@261:0>:bool)|- bot
        
        P[<check_1148@237:2>](<f_check_1482@258:2>:int,<f_check_1482@258:0>:int,<f_check_1482@258:1>:int),
        P[<<<check_1148@237:3>@240:1>@256:0>](<f_check_1482@258:2>:int,<f_check_1482@258:0>:int,<f_check_1482@258:1>:int,<f_check_1482@258:0>:int,<f_check_1482@258:5>:int),
        ((<f_check_1482@258:5> > <f_check_1482@258:1>) &&
         ((<f_check_1482@258:0> < <f_check_1482@258:2>) && <fail_1487@261:0>))
        |- P[<fail_1487@261:0>](<fail_1487@261:0>:bool)
        
        P[<check_1148@237:2>](<check_1148@237:0>:int,<check_1148@237:1>:int,<check_1148@237:2>:int),
        ((<check_1148@237:1> < <check_1148@237:0>) && (<<check_1148@237:3>@240:0> = <check_1148@237:1>))
        |- P[<<check_1148@237:3>@240:0>](<check_1148@237:0>:int,<check_1148@237:1>:int,
                                         <check_1148@237:2>:int,<<check_1148@237:3>@240:0>:int)
        
        P[<array_max_1033@198:1>](<array_max_1033@198:0>:int,<array_max_1033@198:1>:int),
        P[<<<array_max_1033@198:2>@201:1>@217:0>](<array_max_1033@198:0>:int,<array_max_1033@198:1>:int,<array_max_1033@198:1>:int,<<array_max_1033@198:3>@233:0>:int),
        ((<array_max_1033@198:1> < <array_max_1033@198:0>) &&
         ((1 > <array_max_1033@198:1>) && (0 < <<array_max_1033@198:3>@233:0>))) |- bot
        
        P[<array_max_1033@198:1>](<array_max_1033@221:0>:int,(-1 + <array_max_1033@221:1>):int),
        P[<<<array_max_1033@198:2>@201:1>@217:0>](<array_max_1033@221:0>:int,(
                                                  -1 + <array_max_1033@221:1>):int,(
                                                  -1 + <array_max_1033@221:1>):int,<f_array_max_1480@219:4>:int),
        (<array_max_1033@221:1> < (1 + <array_max_1033@221:0>))
        |- P[<array_max_1033@221:1>](<array_max_1033@221:0>:int,<array_max_1033@221:1>:int)
        
        P[<<make_array_1030@203:2>@215:0>](<array_max_1033@198:0>:int,<<array_max_1033@198:2>@201:0>:int,<<<array_max_1033@198:2>@201:1>@217:0>:int),
        P[<array_max_1033@198:1>](<array_max_1033@198:0>:int,<array_max_1033@198:1>:int), (
        <array_max_1033@198:1> = 0)
        |- P[<<<array_max_1033@198:2>@201:1>@217:0>](<array_max_1033@198:0>:int,
                                                     <array_max_1033@198:1>:int,
                                                     <<array_max_1033@198:2>@201:0>:int,
                                                     <<<array_max_1033@198:2>@201:1>@217:0>:int)
        
        
        ((0 <= <make_array_1030@203:1>) &&
         ((<make_array_1030@203:1> < <make_array_1030@203:0>) &&
          (<<make_array_1030@203:2>@215:0> = <make_array_1030@203:1>)))
        |- P[<<make_array_1030@203:2>@215:0>](<make_array_1030@203:0>:int,
                                              <make_array_1030@203:1>:int,
                                              <<make_array_1030@203:2>@215:0>:int)
        
        P[<array_max_1033@198:1>](<array_max_1033@198:0>:int,<array_max_1033@198:1>:int),
        ((<array_max_1033@198:1> < <array_max_1033@198:0>) && (<<array_max_1033@198:2>@201:0> = <array_max_1033@198:1>))
        |- P[<<array_max_1033@198:2>@201:0>](<array_max_1033@198:0>:int,
                                             <array_max_1033@198:1>:int,
                                             <<array_max_1033@198:2>@201:0>:int)
        
         (<array_max_1033@198:1> = 0)
        |- P[<array_max_1033@198:1>](<array_max_1033@198:0>:int,<array_max_1033@198:1>:int)
      lower bounds:
        P[<<make_array_1030@203:2>@215:0>](<make_array_1030@203:0>:int,<make_array_1030@203:1>:int,<<make_array_1030@203:2>@215:0>:int) =
        ((0 <= <make_array_1030@203:1>) &&
         ((<make_array_1030@203:1> < <make_array_1030@203:0>) &&
          (<<make_array_1030@203:2>@215:0> = <make_array_1030@203:1>)))
        P[<array_max_1033@198:1>](<array_max_1033@198:0>:int,<array_max_1033@198:1>:int) = (<array_max_1033@198:1> = 0)
        P[<<<check_1148@237:3>@240:1>@256:0>](var1011:int,var1012:int,var1013:int,var1014:int,var1015:int) = false
        P[<check_1148@237:2>](var1016:int,var1017:int,var1018:int) = false
        P[<fail_1487@261:0>](<fail_1487@261:0>:bool) = false
        P[<<check_1148@237:3>@240:0>](<check_1148@237:0>:int,<check_1148@237:1>:int,<check_1148@237:2>:int,<<check_1148@237:3>@240:0>:int) =
        false
        P[<<<array_max_1033@198:2>@201:1>@217:0>](<array_max_1033@198:0>:int,<array_max_1033@198:1>:int,<<array_max_1033@198:2>@201:0>:int,<<<array_max_1033@198:2>@201:1>@217:0>:int) =
        ((<array_max_1033@198:1> = 0) &&
         ((0 <= <<array_max_1033@198:2>@201:0>) &&
          ((<<array_max_1033@198:2>@201:0> < <array_max_1033@198:0>) &&
           (<<<array_max_1033@198:2>@201:1>@217:0> = <<array_max_1033@198:2>@201:0>))))
        P[<<array_max_1033@198:2>@201:0>](<array_max_1033@198:0>:int,<array_max_1033@198:1>:int,<<array_max_1033@198:2>@201:0>:int) =
        ((<array_max_1033@198:1> = 0) &&
         ((<array_max_1033@198:1> < <array_max_1033@198:0>) &&
          (<<array_max_1033@198:2>@201:0> = <array_max_1033@198:1>)))
        P[<array_max_1033@221:1>](<array_max_1033@221:0>:int,<array_max_1033@221:1>:int) =
        ((<array_max_1033@221:1> = 1) && (<array_max_1033@221:1> < (1 + <array_max_1033@221:0>)))
      upper bounds:
        P[<array_max_1033@221:1>](var1055:int,var1056:int) = true
        P[<array_max_1033@198:1>](var1036:int,var1037:int) = true
      begin GenHcSolver.classify_pids(444879)[4]
        output:
          [<array_max_1033@198:1>;<array_max_1033@221:1>]
      end GenHcSolver.classify_pids(444879)[4] (0.000000 sec.)
      begin ApronInterface.convex_hull_interpolate(444890)[4]
        lb:((<array_max_1033@198:1> = 0) ||
            ((<array_max_1033@198:1> = 1) && (<array_max_1033@198:1> < (1 + <array_max_1033@198:0>))))
        nub:false
        begin ExtFormula.Formula.case_analysis_boolean(444909)[5]
          ts: ((<array_max_1033@198:1> = 0) ||
               ((<array_max_1033@198:1> = 1) && (<array_max_1033@198:1> < (1 + <array_max_1033@198:0>))))
          
        end ExtFormula.Formula.case_analysis_boolean(444909)[5] (0.000000 sec.)
        begin ExtFormula.Formula.case_analysis_boolean(444920)[5]
          ts: false
          
        end ExtFormula.Formula.case_analysis_boolean(444920)[5] (0.000000 sec.)
        lb':(((1 + (-1 * <array_max_1033@198:1>)) >= 0) && (<array_max_1033@198:1> >= 0))
        nub':(-1 >= 0)
        begin InterpProver.interpolate(444923)[5]
          begin InterpProver.interpolate_fresh(444924)[6]
            begin InterpProver.interpolate_log(444925)[7]
              input1: (((1 + (-1 * <array_max_1033@198:1>)) >= 0) && (<array_max_1033@198:1> >= 0))
              input2: (-1 >= 0)
              begin InterpProver.interpolate_check(444926)[8]
                begin InterpProver.interpolate_simplify(444927)[9]
                  begin InterpProver.interpolate_quick(444965)[10]
                    
                  end InterpProver.interpolate_quick(444965)[10] (0.001000 sec.)
                  
                end InterpProver.interpolate_simplify(444927)[9] (0.001000 sec.)
                
              end InterpProver.interpolate_check(444926)[8] (0.001000 sec.)
              output: true
            end InterpProver.interpolate_log(444925)[7] (0.001000 sec.)
            
          end InterpProver.interpolate_fresh(444924)[6] (0.001000 sec.)
          
        end InterpProver.interpolate(444923)[5] (0.001000 sec.)
        output:
          P[<array_max_1033@198:1>](<array_max_1033@198:0>:int,<array_max_1033@198:1>:int) = true
          P[<array_max_1033@221:1>](<array_max_1033@198:0>:int,<array_max_1033@198:1>:int) = true
      end ApronInterface.convex_hull_interpolate(444890)[4] (0.002000 sec.)
      Horn clauses:
        P[<fail_1487@261:0>](<fail_1487@261:0>:bool)|- bot
        
        P[<check_1148@237:2>](<f_check_1482@258:2>:int,<f_check_1482@258:0>:int,<f_check_1482@258:1>:int),
        P[<<<check_1148@237:3>@240:1>@256:0>](<f_check_1482@258:2>:int,<f_check_1482@258:0>:int,<f_check_1482@258:1>:int,<f_check_1482@258:0>:int,<f_check_1482@258:5>:int),
        ((<f_check_1482@258:5> > <f_check_1482@258:1>) &&
         ((<f_check_1482@258:0> < <f_check_1482@258:2>) && <fail_1487@261:0>))
        |- P[<fail_1487@261:0>](<fail_1487@261:0>:bool)
        
        P[<check_1148@237:2>](<check_1148@237:0>:int,<check_1148@237:1>:int,<check_1148@237:2>:int),
        ((<check_1148@237:1> < <check_1148@237:0>) && (<<check_1148@237:3>@240:0> = <check_1148@237:1>))
        |- P[<<check_1148@237:3>@240:0>](<check_1148@237:0>:int,<check_1148@237:1>:int,
                                         <check_1148@237:2>:int,<<check_1148@237:3>@240:0>:int)
        
        P[<<<array_max_1033@198:2>@201:1>@217:0>](<array_max_1033@198:0>:int,<array_max_1033@198:1>:int,<array_max_1033@198:1>:int,<<array_max_1033@198:3>@233:0>:int),
        ((<array_max_1033@198:1> < <array_max_1033@198:0>) &&
         ((1 > <array_max_1033@198:1>) && (0 < <<array_max_1033@198:3>@233:0>))) |- bot
        
        P[<<make_array_1030@203:2>@215:0>](<array_max_1033@198:0>:int,<<array_max_1033@198:2>@201:0>:int,<<<array_max_1033@198:2>@201:1>@217:0>:int),
        (<array_max_1033@198:1> = 0)
        |- P[<<<array_max_1033@198:2>@201:1>@217:0>](<array_max_1033@198:0>:int,
                                                     <array_max_1033@198:1>:int,
                                                     <<array_max_1033@198:2>@201:0>:int,
                                                     <<<array_max_1033@198:2>@201:1>@217:0>:int)
        
        
        ((0 <= <make_array_1030@203:1>) &&
         ((<make_array_1030@203:1> < <make_array_1030@203:0>) &&
          (<<make_array_1030@203:2>@215:0> = <make_array_1030@203:1>)))
        |- P[<<make_array_1030@203:2>@215:0>](<make_array_1030@203:0>:int,
                                              <make_array_1030@203:1>:int,
                                              <<make_array_1030@203:2>@215:0>:int)
        
        
        ((<array_max_1033@198:1> < <array_max_1033@198:0>) && (<<array_max_1033@198:2>@201:0> = <array_max_1033@198:1>))
        |- P[<<array_max_1033@198:2>@201:0>](<array_max_1033@198:0>:int,
                                             <array_max_1033@198:1>:int,
                                             <<array_max_1033@198:2>@201:0>:int)
      lower bounds:
        P[<<make_array_1030@203:2>@215:0>](<make_array_1030@203:0>:int,<make_array_1030@203:1>:int,<<make_array_1030@203:2>@215:0>:int) =
        ((0 <= <make_array_1030@203:1>) &&
         ((<make_array_1030@203:1> < <make_array_1030@203:0>) &&
          (<<make_array_1030@203:2>@215:0> = <make_array_1030@203:1>)))
        P[<<array_max_1033@198:2>@201:0>](<array_max_1033@198:0>:int,<array_max_1033@198:1>:int,<<array_max_1033@198:2>@201:0>:int) =
        ((<array_max_1033@198:1> < <array_max_1033@198:0>) && (<<array_max_1033@198:2>@201:0> = <array_max_1033@198:1>))
        P[<<<check_1148@237:3>@240:1>@256:0>](var1081:int,var1082:int,var1083:int,var1084:int,var1085:int) = false
        P[<check_1148@237:2>](var1086:int,var1087:int,var1088:int) = false
        P[<fail_1487@261:0>](<fail_1487@261:0>:bool) = false
        P[<<check_1148@237:3>@240:0>](<check_1148@237:0>:int,<check_1148@237:1>:int,<check_1148@237:2>:int,<<check_1148@237:3>@240:0>:int) =
        false
        P[<<<array_max_1033@198:2>@201:1>@217:0>](<array_max_1033@198:0>:int,<array_max_1033@198:1>:int,<<array_max_1033@198:2>@201:0>:int,<<<array_max_1033@198:2>@201:1>@217:0>:int) =
        ((<array_max_1033@198:1> = 0) &&
         ((0 <= <<array_max_1033@198:2>@201:0>) &&
          ((<<array_max_1033@198:2>@201:0> < <array_max_1033@198:0>) &&
           (<<<array_max_1033@198:2>@201:1>@217:0> = <<array_max_1033@198:2>@201:0>))))
      upper bounds:
        P[<<check_1148@237:3>@240:0>](var1106:int,var1107:int,var1108:int,var1109:int) = true
      begin GenHcSolver.classify_pids(450485)[4]
        output:
          [<<check_1148@237:3>@240:0>]
      end GenHcSolver.classify_pids(450485)[4] (0.000000 sec.)
      lb:false
      nub:false
      begin ApronInterface.convex_hull_interpolate(450488)[4]
        lb:false
        nub:false
        begin ExtFormula.Formula.case_analysis_boolean(450491)[5]
          ts: false
          
        end ExtFormula.Formula.case_analysis_boolean(450491)[5] (0.000000 sec.)
        begin ExtFormula.Formula.case_analysis_boolean(450496)[5]
          ts: false
          
        end ExtFormula.Formula.case_analysis_boolean(450496)[5] (0.000000 sec.)
        lb':(-1 >= 0)
        nub':(-1 >= 0)
        begin InterpProver.interpolate(450499)[5]
          begin InterpProver.interpolate_fresh(450500)[6]
            begin InterpProver.interpolate_log(450501)[7]
              input1: (-1 >= 0)
              input2: (-1 >= 0)
              begin InterpProver.interpolate_check(450502)[8]
                begin InterpProver.interpolate_simplify(450503)[9]
                  begin InterpProver.interpolate_quick(450518)[10]
                    
                  end InterpProver.interpolate_quick(450518)[10] (0.000000 sec.)
                  begin minimizing # of disjunctions(450522)[10]
                    input: false
                    output: false
                  end minimizing # of disjunctions(450522)[10] (0.000000 sec.)
                  
                end InterpProver.interpolate_simplify(450503)[9] (0.000000 sec.)
                
              end InterpProver.interpolate_check(450502)[8] (0.001000 sec.)
              output: false
            end InterpProver.interpolate_log(450501)[7] (0.001000 sec.)
            
          end InterpProver.interpolate_fresh(450500)[6] (0.001000 sec.)
          
        end InterpProver.interpolate(450499)[5] (0.001000 sec.)
        output:
          P[<<check_1148@237:3>@240:0>](<check_1148@237:0>:int,<check_1148@237:1>:int,<check_1148@237:2>:int,<<check_1148@237:3>@240:0>:int) =
          false
      end ApronInterface.convex_hull_interpolate(450488)[4] (0.001000 sec.)
      Horn clauses:
        P[<fail_1487@261:0>](<fail_1487@261:0>:bool)|- bot
        
        P[<check_1148@237:2>](<f_check_1482@258:2>:int,<f_check_1482@258:0>:int,<f_check_1482@258:1>:int),
        P[<<<check_1148@237:3>@240:1>@256:0>](<f_check_1482@258:2>:int,<f_check_1482@258:0>:int,<f_check_1482@258:1>:int,<f_check_1482@258:0>:int,<f_check_1482@258:5>:int),
        ((<f_check_1482@258:5> > <f_check_1482@258:1>) &&
         ((<f_check_1482@258:0> < <f_check_1482@258:2>) && <fail_1487@261:0>))
        |- P[<fail_1487@261:0>](<fail_1487@261:0>:bool)
        
        P[<check_1148@237:2>](<check_1148@237:0>:int,<<check_1148@237:3>@240:0>:int,<check_1148@237:2>:int),
        (<<check_1148@237:3>@240:0> < <check_1148@237:0>) |- bot
        
        P[<<<array_max_1033@198:2>@201:1>@217:0>](<array_max_1033@198:0>:int,<array_max_1033@198:1>:int,<array_max_1033@198:1>:int,<<array_max_1033@198:3>@233:0>:int),
        ((<array_max_1033@198:1> < <array_max_1033@198:0>) &&
         ((1 > <array_max_1033@198:1>) && (0 < <<array_max_1033@198:3>@233:0>))) |- bot
        
        P[<<make_array_1030@203:2>@215:0>](<array_max_1033@198:0>:int,<<array_max_1033@198:2>@201:0>:int,<<<array_max_1033@198:2>@201:1>@217:0>:int),
        (<array_max_1033@198:1> = 0)
        |- P[<<<array_max_1033@198:2>@201:1>@217:0>](<array_max_1033@198:0>:int,
                                                     <array_max_1033@198:1>:int,
                                                     <<array_max_1033@198:2>@201:0>:int,
                                                     <<<array_max_1033@198:2>@201:1>@217:0>:int)
        
        
        ((0 <= <make_array_1030@203:1>) &&
         ((<make_array_1030@203:1> < <make_array_1030@203:0>) &&
          (<<make_array_1030@203:2>@215:0> = <make_array_1030@203:1>)))
        |- P[<<make_array_1030@203:2>@215:0>](<make_array_1030@203:0>:int,
                                              <make_array_1030@203:1>:int,
                                              <<make_array_1030@203:2>@215:0>:int)
        
        
        ((<array_max_1033@198:1> < <array_max_1033@198:0>) && (<<array_max_1033@198:2>@201:0> = <array_max_1033@198:1>))
        |- P[<<array_max_1033@198:2>@201:0>](<array_max_1033@198:0>:int,
                                             <array_max_1033@198:1>:int,
                                             <<array_max_1033@198:2>@201:0>:int)
      lower bounds:
        P[<<make_array_1030@203:2>@215:0>](<make_array_1030@203:0>:int,<make_array_1030@203:1>:int,<<make_array_1030@203:2>@215:0>:int) =
        ((0 <= <make_array_1030@203:1>) &&
         ((<make_array_1030@203:1> < <make_array_1030@203:0>) &&
          (<<make_array_1030@203:2>@215:0> = <make_array_1030@203:1>)))
        P[<<array_max_1033@198:2>@201:0>](<array_max_1033@198:0>:int,<array_max_1033@198:1>:int,<<array_max_1033@198:2>@201:0>:int) =
        ((<array_max_1033@198:1> < <array_max_1033@198:0>) && (<<array_max_1033@198:2>@201:0> = <array_max_1033@198:1>))
        P[<<<check_1148@237:3>@240:1>@256:0>](var1118:int,var1119:int,var1120:int,var1121:int,var1122:int) = false
        P[<check_1148@237:2>](var1123:int,var1124:int,var1125:int) = false
        P[<fail_1487@261:0>](<fail_1487@261:0>:bool) = false
        P[<<<array_max_1033@198:2>@201:1>@217:0>](<array_max_1033@198:0>:int,<array_max_1033@198:1>:int,<<array_max_1033@198:2>@201:0>:int,<<<array_max_1033@198:2>@201:1>@217:0>:int) =
        ((<array_max_1033@198:1> = 0) &&
         ((0 <= <<array_max_1033@198:2>@201:0>) &&
          ((<<array_max_1033@198:2>@201:0> < <array_max_1033@198:0>) &&
           (<<<array_max_1033@198:2>@201:1>@217:0> = <<array_max_1033@198:2>@201:0>))))
      upper bounds:
        P[<<array_max_1033@198:2>@201:0>](var1143:int,var1144:int,var1145:int) = true
      begin GenHcSolver.classify_pids(454059)[4]
        output:
          [<<array_max_1033@198:2>@201:0>]
      end GenHcSolver.classify_pids(454059)[4] (0.000000 sec.)
      lb:((<array_max_1033@198:1> < <array_max_1033@198:0>) &&
          (<<array_max_1033@198:2>@201:0> = <array_max_1033@198:1>))
      nub:false
      begin ApronInterface.convex_hull_interpolate(454062)[4]
        lb:((<array_max_1033@198:1> < <array_max_1033@198:0>) &&
            (<<array_max_1033@198:2>@201:0> = <array_max_1033@198:1>))
        nub:false
        begin ExtFormula.Formula.case_analysis_boolean(454080)[5]
          ts: ((<array_max_1033@198:1> < <array_max_1033@198:0>) &&
               (<<array_max_1033@198:2>@201:0> = <array_max_1033@198:1>))
          
        end ExtFormula.Formula.case_analysis_boolean(454080)[5] (0.000000 sec.)
        begin ExtFormula.Formula.case_analysis_boolean(454089)[5]
          ts: false
          
        end ExtFormula.Formula.case_analysis_boolean(454089)[5] (0.000000 sec.)
        lb':(((<<array_max_1033@198:2>@201:0> + (-1 * <array_max_1033@198:1>)) = 0) &&
             (((-1 + (-1 * <array_max_1033@198:1>)) + <array_max_1033@198:0>) >= 0))
        nub':(-1 >= 0)
        begin InterpProver.interpolate(454092)[5]
          begin InterpProver.interpolate_fresh(454093)[6]
            begin InterpProver.interpolate_log(454094)[7]
              input1: (((<<array_max_1033@198:2>@201:0> + (-1 * <array_max_1033@198:1>)) = 0) &&
                       (((-1 + (-1 * <array_max_1033@198:1>)) + <array_max_1033@198:0>) >= 0))
              input2: (-1 >= 0)
              begin InterpProver.interpolate_check(454095)[8]
                begin InterpProver.interpolate_simplify(454096)[9]
                  begin InterpProver.interpolate_quick(454131)[10]
                    
                  end InterpProver.interpolate_quick(454131)[10] (0.000000 sec.)
                  
                end InterpProver.interpolate_simplify(454096)[9] (0.000999 sec.)
                
              end InterpProver.interpolate_check(454095)[8] (0.000999 sec.)
              output: true
            end InterpProver.interpolate_log(454094)[7] (0.000999 sec.)
            
          end InterpProver.interpolate_fresh(454093)[6] (0.000999 sec.)
          
        end InterpProver.interpolate(454092)[5] (0.000999 sec.)
        output:
          P[<<array_max_1033@198:2>@201:0>](<array_max_1033@198:0>:int,<array_max_1033@198:1>:int,<<array_max_1033@198:2>@201:0>:int) =
          true
      end ApronInterface.convex_hull_interpolate(454062)[4] (0.001999 sec.)
      Horn clauses:
        P[<fail_1487@261:0>](<fail_1487@261:0>:bool)|- bot
        
        P[<check_1148@237:2>](<f_check_1482@258:2>:int,<f_check_1482@258:0>:int,<f_check_1482@258:1>:int),
        P[<<<check_1148@237:3>@240:1>@256:0>](<f_check_1482@258:2>:int,<f_check_1482@258:0>:int,<f_check_1482@258:1>:int,<f_check_1482@258:0>:int,<f_check_1482@258:5>:int),
        ((<f_check_1482@258:5> > <f_check_1482@258:1>) &&
         ((<f_check_1482@258:0> < <f_check_1482@258:2>) && <fail_1487@261:0>))
        |- P[<fail_1487@261:0>](<fail_1487@261:0>:bool)
        
        P[<check_1148@237:2>](<check_1148@237:0>:int,<<check_1148@237:3>@240:0>:int,<check_1148@237:2>:int),
        (<<check_1148@237:3>@240:0> < <check_1148@237:0>) |- bot
        
        P[<<<array_max_1033@198:2>@201:1>@217:0>](<array_max_1033@198:0>:int,<array_max_1033@198:1>:int,<array_max_1033@198:1>:int,<<array_max_1033@198:3>@233:0>:int),
        ((<array_max_1033@198:1> < <array_max_1033@198:0>) &&
         ((1 > <array_max_1033@198:1>) && (0 < <<array_max_1033@198:3>@233:0>))) |- bot
        
        P[<<make_array_1030@203:2>@215:0>](<array_max_1033@198:0>:int,<<array_max_1033@198:2>@201:0>:int,<<<array_max_1033@198:2>@201:1>@217:0>:int),
        (<array_max_1033@198:1> = 0)
        |- P[<<<array_max_1033@198:2>@201:1>@217:0>](<array_max_1033@198:0>:int,
                                                     <array_max_1033@198:1>:int,
                                                     <<array_max_1033@198:2>@201:0>:int,
                                                     <<<array_max_1033@198:2>@201:1>@217:0>:int)
        
        
        ((0 <= <make_array_1030@203:1>) &&
         ((<make_array_1030@203:1> < <make_array_1030@203:0>) &&
          (<<make_array_1030@203:2>@215:0> = <make_array_1030@203:1>)))
        |- P[<<make_array_1030@203:2>@215:0>](<make_array_1030@203:0>:int,
                                              <make_array_1030@203:1>:int,
                                              <<make_array_1030@203:2>@215:0>:int)
      lower bounds:
        P[<<make_array_1030@203:2>@215:0>](<make_array_1030@203:0>:int,<make_array_1030@203:1>:int,<<make_array_1030@203:2>@215:0>:int) =
        ((0 <= <make_array_1030@203:1>) &&
         ((<make_array_1030@203:1> < <make_array_1030@203:0>) &&
          (<<make_array_1030@203:2>@215:0> = <make_array_1030@203:1>)))
        P[<<<check_1148@237:3>@240:1>@256:0>](var1154:int,var1155:int,var1156:int,var1157:int,var1158:int) = false
        P[<check_1148@237:2>](var1159:int,var1160:int,var1161:int) = false
        P[<fail_1487@261:0>](<fail_1487@261:0>:bool) = false
        P[<<<array_max_1033@198:2>@201:1>@217:0>](<array_max_1033@198:0>:int,<array_max_1033@198:1>:int,<<array_max_1033@198:2>@201:0>:int,<<<array_max_1033@198:2>@201:1>@217:0>:int) =
        ((<array_max_1033@198:1> = 0) &&
         ((0 <= <<array_max_1033@198:2>@201:0>) &&
          ((<<array_max_1033@198:2>@201:0> < <array_max_1033@198:0>) &&
           (<<<array_max_1033@198:2>@201:1>@217:0> = <<array_max_1033@198:2>@201:0>))))
      upper bounds:
        P[<fail_1487@261:0>](var1179:bool) = true
      begin GenHcSolver.classify_pids(457111)[4]
        output:
          [<fail_1487@261:0>]
      end GenHcSolver.classify_pids(457111)[4] (0.000000 sec.)
      lb:false
      nub:false
      begin ApronInterface.convex_hull_interpolate(457114)[4]
        lb:false
        nub:false
        begin ExtFormula.Formula.case_analysis_boolean(457117)[5]
          ts: false
          
        end ExtFormula.Formula.case_analysis_boolean(457117)[5] (0.000000 sec.)
        begin ExtFormula.Formula.case_analysis_boolean(457122)[5]
          ts: false
          
        end ExtFormula.Formula.case_analysis_boolean(457122)[5] (0.000000 sec.)
        lb':(-1 >= 0)
        nub':(-1 >= 0)
        begin InterpProver.interpolate(457125)[5]
          begin InterpProver.interpolate_fresh(457126)[6]
            begin InterpProver.interpolate_log(457127)[7]
              input1: (-1 >= 0)
              input2: (-1 >= 0)
              begin InterpProver.interpolate_check(457128)[8]
                begin InterpProver.interpolate_simplify(457129)[9]
                  begin InterpProver.interpolate_quick(457144)[10]
                    
                  end InterpProver.interpolate_quick(457144)[10] (0.000000 sec.)
                  begin minimizing # of disjunctions(457148)[10]
                    input: false
                    output: false
                  end minimizing # of disjunctions(457148)[10] (0.000000 sec.)
                  
                end InterpProver.interpolate_simplify(457129)[9] (0.000000 sec.)
                
              end InterpProver.interpolate_check(457128)[8] (0.000999 sec.)
              output: false
            end InterpProver.interpolate_log(457127)[7] (0.000999 sec.)
            
          end InterpProver.interpolate_fresh(457126)[6] (0.000999 sec.)
          
        end InterpProver.interpolate(457125)[5] (0.000999 sec.)
        output:
          P[<fail_1487@261:0>](<fail_1487@261:0>:bool) = false
      end ApronInterface.convex_hull_interpolate(457114)[4] (0.000999 sec.)
      Horn clauses:
        P[<check_1148@237:2>](<f_check_1482@258:2>:int,<f_check_1482@258:0>:int,<f_check_1482@258:1>:int),
        P[<<<check_1148@237:3>@240:1>@256:0>](<f_check_1482@258:2>:int,<f_check_1482@258:0>:int,<f_check_1482@258:1>:int,<f_check_1482@258:0>:int,<f_check_1482@258:5>:int),
        ((<f_check_1482@258:0> < <f_check_1482@258:2>) && (<f_check_1482@258:5> > <f_check_1482@258:1>)) |- bot
        
        P[<check_1148@237:2>](<check_1148@237:0>:int,<<check_1148@237:3>@240:0>:int,<check_1148@237:2>:int),
        (<<check_1148@237:3>@240:0> < <check_1148@237:0>) |- bot
        
        P[<<<array_max_1033@198:2>@201:1>@217:0>](<array_max_1033@198:0>:int,<array_max_1033@198:1>:int,<array_max_1033@198:1>:int,<<array_max_1033@198:3>@233:0>:int),
        ((<array_max_1033@198:1> < <array_max_1033@198:0>) &&
         ((1 > <array_max_1033@198:1>) && (0 < <<array_max_1033@198:3>@233:0>))) |- bot
        
        P[<<make_array_1030@203:2>@215:0>](<array_max_1033@198:0>:int,<<array_max_1033@198:2>@201:0>:int,<<<array_max_1033@198:2>@201:1>@217:0>:int),
        (<array_max_1033@198:1> = 0)
        |- P[<<<array_max_1033@198:2>@201:1>@217:0>](<array_max_1033@198:0>:int,
                                                     <array_max_1033@198:1>:int,
                                                     <<array_max_1033@198:2>@201:0>:int,
                                                     <<<array_max_1033@198:2>@201:1>@217:0>:int)
        
        
        ((0 <= <make_array_1030@203:1>) &&
         ((<make_array_1030@203:1> < <make_array_1030@203:0>) &&
          (<<make_array_1030@203:2>@215:0> = <make_array_1030@203:1>)))
        |- P[<<make_array_1030@203:2>@215:0>](<make_array_1030@203:0>:int,
                                              <make_array_1030@203:1>:int,
                                              <<make_array_1030@203:2>@215:0>:int)
      lower bounds:
        P[<<make_array_1030@203:2>@215:0>](<make_array_1030@203:0>:int,<make_array_1030@203:1>:int,<<make_array_1030@203:2>@215:0>:int) =
        ((0 <= <make_array_1030@203:1>) &&
         ((<make_array_1030@203:1> < <make_array_1030@203:0>) &&
          (<<make_array_1030@203:2>@215:0> = <make_array_1030@203:1>)))
        P[<<<check_1148@237:3>@240:1>@256:0>](var1188:int,var1189:int,var1190:int,var1191:int,var1192:int) = false
        P[<check_1148@237:2>](var1193:int,var1194:int,var1195:int) = false
        P[<<<array_max_1033@198:2>@201:1>@217:0>](<array_max_1033@198:0>:int,<array_max_1033@198:1>:int,<<array_max_1033@198:2>@201:0>:int,<<<array_max_1033@198:2>@201:1>@217:0>:int) =
        ((<array_max_1033@198:1> = 0) &&
         ((0 <= <<array_max_1033@198:2>@201:0>) &&
          ((<<array_max_1033@198:2>@201:0> < <array_max_1033@198:0>) &&
           (<<<array_max_1033@198:2>@201:1>@217:0> = <<array_max_1033@198:2>@201:0>))))
      upper bounds:
        P[<<<check_1148@237:3>@240:1>@256:0>](var1212:int,var1213:int,var1214:int,var1215:int,var1216:int) = true
      begin GenHcSolver.classify_pids(460022)[4]
        output:
          [<<<check_1148@237:3>@240:1>@256:0>]
      end GenHcSolver.classify_pids(460022)[4] (0.000000 sec.)
      lb:false
      nub:false
      begin ApronInterface.convex_hull_interpolate(460025)[4]
        lb:false
        nub:false
        begin ExtFormula.Formula.case_analysis_boolean(460028)[5]
          ts: false
          
        end ExtFormula.Formula.case_analysis_boolean(460028)[5] (0.000999 sec.)
        begin ExtFormula.Formula.case_analysis_boolean(460033)[5]
          ts: false
          
        end ExtFormula.Formula.case_analysis_boolean(460033)[5] (0.000000 sec.)
        lb':(-1 >= 0)
        nub':(-1 >= 0)
        begin InterpProver.interpolate(460036)[5]
          begin InterpProver.interpolate_fresh(460037)[6]
            begin InterpProver.interpolate_log(460038)[7]
              input1: (-1 >= 0)
              input2: (-1 >= 0)
              begin InterpProver.interpolate_check(460039)[8]
                begin InterpProver.interpolate_simplify(460040)[9]
                  begin InterpProver.interpolate_quick(460055)[10]
                    
                  end InterpProver.interpolate_quick(460055)[10] (0.000000 sec.)
                  begin minimizing # of disjunctions(460059)[10]
                    input: false
                    output: false
                  end minimizing # of disjunctions(460059)[10] (0.000000 sec.)
                  
                end InterpProver.interpolate_simplify(460040)[9] (0.000000 sec.)
                
              end InterpProver.interpolate_check(460039)[8] (0.000000 sec.)
              output: false
            end InterpProver.interpolate_log(460038)[7] (0.000000 sec.)
            
          end InterpProver.interpolate_fresh(460037)[6] (0.000000 sec.)
          
        end InterpProver.interpolate(460036)[5] (0.000000 sec.)
        output:
          P[<<<check_1148@237:3>@240:1>@256:0>](var1188:int,var1189:int,var1190:int,var1191:int,var1192:int) = false
      end ApronInterface.convex_hull_interpolate(460025)[4] (0.000999 sec.)
      Horn clauses:
        P[<check_1148@237:2>](<check_1148@237:0>:int,<<check_1148@237:3>@240:0>:int,<check_1148@237:2>:int),
        (<<check_1148@237:3>@240:0> < <check_1148@237:0>) |- bot
        
        P[<<<array_max_1033@198:2>@201:1>@217:0>](<array_max_1033@198:0>:int,<array_max_1033@198:1>:int,<array_max_1033@198:1>:int,<<array_max_1033@198:3>@233:0>:int),
        ((<array_max_1033@198:1> < <array_max_1033@198:0>) &&
         ((1 > <array_max_1033@198:1>) && (0 < <<array_max_1033@198:3>@233:0>))) |- bot
        
        P[<<make_array_1030@203:2>@215:0>](<array_max_1033@198:0>:int,<<array_max_1033@198:2>@201:0>:int,<<<array_max_1033@198:2>@201:1>@217:0>:int),
        (<array_max_1033@198:1> = 0)
        |- P[<<<array_max_1033@198:2>@201:1>@217:0>](<array_max_1033@198:0>:int,
                                                     <array_max_1033@198:1>:int,
                                                     <<array_max_1033@198:2>@201:0>:int,
                                                     <<<array_max_1033@198:2>@201:1>@217:0>:int)
        
        
        ((0 <= <make_array_1030@203:1>) &&
         ((<make_array_1030@203:1> < <make_array_1030@203:0>) &&
          (<<make_array_1030@203:2>@215:0> = <make_array_1030@203:1>)))
        |- P[<<make_array_1030@203:2>@215:0>](<make_array_1030@203:0>:int,
                                              <make_array_1030@203:1>:int,
                                              <<make_array_1030@203:2>@215:0>:int)
      lower bounds:
        P[<<make_array_1030@203:2>@215:0>](<make_array_1030@203:0>:int,<make_array_1030@203:1>:int,<<make_array_1030@203:2>@215:0>:int) =
        ((0 <= <make_array_1030@203:1>) &&
         ((<make_array_1030@203:1> < <make_array_1030@203:0>) &&
          (<<make_array_1030@203:2>@215:0> = <make_array_1030@203:1>)))
        P[<check_1148@237:2>](var1220:int,var1221:int,var1222:int) = false
        P[<<<array_max_1033@198:2>@201:1>@217:0>](<array_max_1033@198:0>:int,<array_max_1033@198:1>:int,<<array_max_1033@198:2>@201:0>:int,<<<array_max_1033@198:2>@201:1>@217:0>:int) =
        ((<array_max_1033@198:1> = 0) &&
         ((0 <= <<array_max_1033@198:2>@201:0>) &&
          ((<<array_max_1033@198:2>@201:0> < <array_max_1033@198:0>) &&
           (<<<array_max_1033@198:2>@201:1>@217:0> = <<array_max_1033@198:2>@201:0>))))
      upper bounds:
        P[<check_1148@237:2>](var1229:int,var1230:int,var1231:int) = true
      begin GenHcSolver.classify_pids(462519)[4]
        output:
          [<check_1148@237:2>]
      end GenHcSolver.classify_pids(462519)[4] (0.000000 sec.)
      lb:false
      nub:false
      begin ApronInterface.convex_hull_interpolate(462522)[4]
        lb:false
        nub:false
        begin ExtFormula.Formula.case_analysis_boolean(462525)[5]
          ts: false
          
        end ExtFormula.Formula.case_analysis_boolean(462525)[5] (0.000000 sec.)
        begin ExtFormula.Formula.case_analysis_boolean(462530)[5]
          ts: false
          
        end ExtFormula.Formula.case_analysis_boolean(462530)[5] (0.001000 sec.)
        lb':(-1 >= 0)
        nub':(-1 >= 0)
        begin InterpProver.interpolate(462533)[5]
          begin InterpProver.interpolate_fresh(462534)[6]
            begin InterpProver.interpolate_log(462535)[7]
              input1: (-1 >= 0)
              input2: (-1 >= 0)
              begin InterpProver.interpolate_check(462536)[8]
                begin InterpProver.interpolate_simplify(462537)[9]
                  begin InterpProver.interpolate_quick(462552)[10]
                    
                  end InterpProver.interpolate_quick(462552)[10] (0.000000 sec.)
                  begin minimizing # of disjunctions(462556)[10]
                    input: false
                    output: false
                  end minimizing # of disjunctions(462556)[10] (0.000000 sec.)
                  
                end InterpProver.interpolate_simplify(462537)[9] (0.000000 sec.)
                
              end InterpProver.interpolate_check(462536)[8] (0.001000 sec.)
              output: false
            end InterpProver.interpolate_log(462535)[7] (0.001000 sec.)
            
          end InterpProver.interpolate_fresh(462534)[6] (0.001000 sec.)
          
        end InterpProver.interpolate(462533)[5] (0.001000 sec.)
        output:
          P[<check_1148@237:2>](var1220:int,var1221:int,var1222:int) = false
      end ApronInterface.convex_hull_interpolate(462522)[4] (0.002000 sec.)
      Horn clauses:
        P[<<<array_max_1033@198:2>@201:1>@217:0>](<array_max_1033@198:0>:int,<array_max_1033@198:1>:int,<array_max_1033@198:1>:int,<<array_max_1033@198:3>@233:0>:int),
        ((<array_max_1033@198:1> < <array_max_1033@198:0>) &&
         ((1 > <array_max_1033@198:1>) && (0 < <<array_max_1033@198:3>@233:0>))) |- bot
        
        P[<<make_array_1030@203:2>@215:0>](<array_max_1033@198:0>:int,<<array_max_1033@198:2>@201:0>:int,<<<array_max_1033@198:2>@201:1>@217:0>:int),
        (<array_max_1033@198:1> = 0)
        |- P[<<<array_max_1033@198:2>@201:1>@217:0>](<array_max_1033@198:0>:int,
                                                     <array_max_1033@198:1>:int,
                                                     <<array_max_1033@198:2>@201:0>:int,
                                                     <<<array_max_1033@198:2>@201:1>@217:0>:int)
        
        
        ((0 <= <make_array_1030@203:1>) &&
         ((<make_array_1030@203:1> < <make_array_1030@203:0>) &&
          (<<make_array_1030@203:2>@215:0> = <make_array_1030@203:1>)))
        |- P[<<make_array_1030@203:2>@215:0>](<make_array_1030@203:0>:int,
                                              <make_array_1030@203:1>:int,
                                              <<make_array_1030@203:2>@215:0>:int)
      lower bounds:
        P[<<make_array_1030@203:2>@215:0>](<make_array_1030@203:0>:int,<make_array_1030@203:1>:int,<<make_array_1030@203:2>@215:0>:int) =
        ((0 <= <make_array_1030@203:1>) &&
         ((<make_array_1030@203:1> < <make_array_1030@203:0>) &&
          (<<make_array_1030@203:2>@215:0> = <make_array_1030@203:1>)))
        P[<<<array_max_1033@198:2>@201:1>@217:0>](<array_max_1033@198:0>:int,<array_max_1033@198:1>:int,<<array_max_1033@198:2>@201:0>:int,<<<array_max_1033@198:2>@201:1>@217:0>:int) =
        ((<array_max_1033@198:1> = 0) &&
         ((0 <= <<array_max_1033@198:2>@201:0>) &&
          ((<<array_max_1033@198:2>@201:0> < <array_max_1033@198:0>) &&
           (<<<array_max_1033@198:2>@201:1>@217:0> = <<array_max_1033@198:2>@201:0>))))
      upper bounds:
        P[<<<array_max_1033@198:2>@201:1>@217:0>](var1232:int,var1233:int,var1234:int,var1235:int) =
        ((var1233 >= var1232) || ((1 <= var1233) || ((0 >= var1235) || (var1233 <> var1234))))
      begin GenHcSolver.classify_pids(465523)[4]
        output:
          [<<<array_max_1033@198:2>@201:1>@217:0>]
      end GenHcSolver.classify_pids(465523)[4] (0.000000 sec.)
      lb:((<array_max_1033@198:1> = 0) &&
          ((0 <= <<array_max_1033@198:2>@201:0>) &&
           ((<<array_max_1033@198:2>@201:0> < <array_max_1033@198:0>) &&
            (<<<array_max_1033@198:2>@201:1>@217:0> = <<array_max_1033@198:2>@201:0>))))
      nub:(not
             ((<array_max_1033@198:1> >= <array_max_1033@198:0>) ||
              ((1 <= <array_max_1033@198:1>) ||
               ((0 >= <<<array_max_1033@198:2>@201:1>@217:0>) ||
                (<array_max_1033@198:1> <> <<array_max_1033@198:2>@201:0>)))))
      begin ApronInterface.convex_hull_interpolate(465526)[4]
        lb:((<array_max_1033@198:1> = 0) &&
            ((0 <= <<array_max_1033@198:2>@201:0>) &&
             ((<<array_max_1033@198:2>@201:0> < <array_max_1033@198:0>) &&
              (<<<array_max_1033@198:2>@201:1>@217:0> = <<array_max_1033@198:2>@201:0>))))
        nub:(not
               ((<array_max_1033@198:1> >= <array_max_1033@198:0>) ||
                ((1 <= <array_max_1033@198:1>) ||
                 ((0 >= <<<array_max_1033@198:2>@201:1>@217:0>) ||
                  (<array_max_1033@198:1> <> <<array_max_1033@198:2>@201:0>)))))
        begin ExtFormula.Formula.case_analysis_boolean(465575)[5]
          ts: ((<array_max_1033@198:1> = 0) &&
               ((0 <= <<array_max_1033@198:2>@201:0>) &&
                ((<<array_max_1033@198:2>@201:0> < <array_max_1033@198:0>) &&
                 (<<<array_max_1033@198:2>@201:1>@217:0> = <<array_max_1033@198:2>@201:0>))))
          
        end ExtFormula.Formula.case_analysis_boolean(465575)[5] (0.000000 sec.)
        begin ExtFormula.Formula.case_analysis_boolean(465635)[5]
          ts: ((<array_max_1033@198:1> < <array_max_1033@198:0>) &&
               ((1 > <array_max_1033@198:1>) &&
                ((0 < <<<array_max_1033@198:2>@201:1>@217:0>) &&
                 (<array_max_1033@198:1> = <<array_max_1033@198:2>@201:0>))))
          
        end ExtFormula.Formula.case_analysis_boolean(465635)[5] (0.001000 sec.)
        lb':(((<<<array_max_1033@198:2>@201:1>@217:0> + (-1 * <<array_max_1033@198:2>@201:0>)) = 0) &&
             ((<array_max_1033@198:1> = 0) &&
              ((<<array_max_1033@198:2>@201:0> >= 0) &&
               (((-1 + (-1 * <<array_max_1033@198:2>@201:0>)) + <array_max_1033@198:0>) >= 0))))
        nub':(((<<array_max_1033@198:2>@201:0> + (-1 * <array_max_1033@198:1>)) = 0) &&
              (((-1 * <array_max_1033@198:1>) >= 0) &&
               (((-1 + <<<array_max_1033@198:2>@201:1>@217:0>) >= 0) &&
                (((-1 + (-1 * <array_max_1033@198:1>)) + <array_max_1033@198:0>) >= 0))))
        begin InterpProver.interpolate(465645)[5]
          begin InterpProver.interpolate_fresh(465646)[6]
            begin InterpProver.interpolate_log(465647)[7]
              input1: (((<<<array_max_1033@198:2>@201:1>@217:0> + (-1 * <<array_max_1033@198:2>@201:0>)) = 0) &&
                       ((<array_max_1033@198:1> = 0) &&
                        ((<<array_max_1033@198:2>@201:0> >= 0) &&
                         (((-1 + (-1 * <<array_max_1033@198:2>@201:0>)) + <array_max_1033@198:0>) >= 0))))
              input2: (((<<array_max_1033@198:2>@201:0> + (-1 * <array_max_1033@198:1>)) = 0) &&
                       (((-1 * <array_max_1033@198:1>) >= 0) &&
                        (((-1 + <<<array_max_1033@198:2>@201:1>@217:0>) >= 0) &&
                         (((-1 + (-1 * <array_max_1033@198:1>)) + <array_max_1033@198:0>) >= 0))))
              begin InterpProver.interpolate_check(465648)[8]
                begin InterpProver.interpolate_simplify(465649)[9]
                  begin InterpProver.interpolate_quick(465880)[10]
                    begin CsisatInterface.interpolate_csisat_wrap(465889)[11]
                      begin CsisatInterface.interpolate_csisat_post_process(465890)[12]
                        begin CsisatInterface.interpolate_csisat_log(465891)[13]
                          input1: (0 = v_sep_array_max_1033_sep_198_sep_1 & v_sep_array_max_1033_sep_198_sep_2_sep_201_sep_0 = v_sep_array_max_1033_sep_198_sep_2_sep_201_sep_1_sep_217_sep_0 & 0 <= v_sep_array_max_1033_sep_198_sep_2_sep_201_sep_0 & (1 + v_sep_array_max_1033_sep_198_sep_2_sep_201_sep_0) <= v_sep_array_max_1033_sep_198_sep_0)
                          input2: (v_sep_array_max_1033_sep_198_sep_1 = v_sep_array_max_1033_sep_198_sep_2_sep_201_sep_0 & 1 <= v_sep_array_max_1033_sep_198_sep_2_sep_201_sep_1_sep_217_sep_0 & v_sep_array_max_1033_sep_198_sep_1 <= 0 & (1 + v_sep_array_max_1033_sep_198_sep_1) <= v_sep_array_max_1033_sep_198_sep_0)
                          begin CsisatInterface.interpolate_csisat_raw(465892)[14]
                            
                          end CsisatInterface.interpolate_csisat_raw(465892)[14] (0.000000 sec.)
                          output: (-2*v_sep_array_max_1033_sep_198_sep_2_sep_201_sep_0 + 2*v_sep_array_max_1033_sep_198_sep_1 + 2*v_sep_array_max_1033_sep_198_sep_2_sep_201_sep_1_sep_217_sep_0) <= 0
                          
                        end CsisatInterface.interpolate_csisat_log(465891)[13] (0.000000 sec.)
                        after simplification: (-2*v_sep_array_max_1033_sep_198_sep_2_sep_201_sep_0 + 2*v_sep_array_max_1033_sep_198_sep_1 + 2*v_sep_array_max_1033_sep_198_sep_2_sep_201_sep_1_sep_217_sep_0) <= 0
                        after dnf conversion: (((-2*v_sep_array_max_1033_sep_198_sep_2_sep_201_sep_0 + 2*v_sep_array_max_1033_sep_198_sep_1 + 2*v_sep_array_max_1033_sep_198_sep_2_sep_201_sep_1_sep_217_sep_0) <= 0))
                        
                      end CsisatInterface.interpolate_csisat_post_process(465890)[12] (0.000000 sec.)
                      
                    end CsisatInterface.interpolate_csisat_wrap(465889)[11] (0.000000 sec.)
                    
                  end InterpProver.interpolate_quick(465880)[10] (0.001000 sec.)
                  
                end InterpProver.interpolate_simplify(465649)[9] (0.001999 sec.)
                
              end InterpProver.interpolate_check(465648)[8] (0.002999 sec.)
              output: ((<array_max_1033@198:1> + <<<array_max_1033@198:2>@201:1>@217:0>) <=
                       <<array_max_1033@198:2>@201:0>)
            end InterpProver.interpolate_log(465647)[7] (0.002999 sec.)
            
          end InterpProver.interpolate_fresh(465646)[6] (0.002999 sec.)
          
        end InterpProver.interpolate(465645)[5] (0.002999 sec.)
        output:
          P[<<<array_max_1033@198:2>@201:1>@217:0>](<array_max_1033@198:0>:int,<array_max_1033@198:1>:int,<<array_max_1033@198:2>@201:0>:int,<<<array_max_1033@198:2>@201:1>@217:0>:int) =
          ((<array_max_1033@198:1> + <<<array_max_1033@198:2>@201:1>@217:0>) <= <<array_max_1033@198:2>@201:0>)
      end ApronInterface.convex_hull_interpolate(465526)[4] (0.004999 sec.)
      Horn clauses:
        P[<<make_array_1030@203:2>@215:0>](<array_max_1033@198:0>:int,<<array_max_1033@198:2>@201:0>:int,<<<array_max_1033@198:2>@201:1>@217:0>:int),
        (<<<array_max_1033@198:2>@201:1>@217:0> > <<array_max_1033@198:2>@201:0>) |- bot
        
        
        ((0 <= <make_array_1030@203:1>) &&
         ((<make_array_1030@203:1> < <make_array_1030@203:0>) &&
          (<<make_array_1030@203:2>@215:0> = <make_array_1030@203:1>)))
        |- P[<<make_array_1030@203:2>@215:0>](<make_array_1030@203:0>:int,
                                              <make_array_1030@203:1>:int,
                                              <<make_array_1030@203:2>@215:0>:int)
      lower bounds:
        P[<<make_array_1030@203:2>@215:0>](<make_array_1030@203:0>:int,<make_array_1030@203:1>:int,<<make_array_1030@203:2>@215:0>:int) =
        ((0 <= <make_array_1030@203:1>) &&
         ((<make_array_1030@203:1> < <make_array_1030@203:0>) &&
          (<<make_array_1030@203:2>@215:0> = <make_array_1030@203:1>)))
      upper bounds:
        P[<<make_array_1030@203:2>@215:0>](var1236:int,var1237:int,var1238:int) = (var1238 <= var1237)
      begin GenHcSolver.classify_pids(467355)[4]
        output:
          [<<make_array_1030@203:2>@215:0>]
      end GenHcSolver.classify_pids(467355)[4] (0.000000 sec.)
      lb:((0 <= <make_array_1030@203:1>) &&
          ((<make_array_1030@203:1> < <make_array_1030@203:0>) &&
           (<<make_array_1030@203:2>@215:0> = <make_array_1030@203:1>)))
      nub:(not (<<make_array_1030@203:2>@215:0> <= <make_array_1030@203:1>))
      begin ApronInterface.convex_hull_interpolate(467358)[4]
        lb:((0 <= <make_array_1030@203:1>) &&
            ((<make_array_1030@203:1> < <make_array_1030@203:0>) &&
             (<<make_array_1030@203:2>@215:0> = <make_array_1030@203:1>)))
        nub:(not (<<make_array_1030@203:2>@215:0> <= <make_array_1030@203:1>))
        begin ExtFormula.Formula.case_analysis_boolean(467391)[5]
          ts: ((0 <= <make_array_1030@203:1>) &&
               ((<make_array_1030@203:1> < <make_array_1030@203:0>) &&
                (<<make_array_1030@203:2>@215:0> = <make_array_1030@203:1>)))
          
        end ExtFormula.Formula.case_analysis_boolean(467391)[5] (0.001000 sec.)
        begin ExtFormula.Formula.case_analysis_boolean(467403)[5]
          ts: (<<make_array_1030@203:2>@215:0> > <make_array_1030@203:1>)
          
        end ExtFormula.Formula.case_analysis_boolean(467403)[5] (0.000000 sec.)
        lb':(((<<make_array_1030@203:2>@215:0> + (-1 * <make_array_1030@203:1>)) = 0) &&
             ((<make_array_1030@203:1> >= 0) &&
              (((-1 + (-1 * <make_array_1030@203:1>)) + <make_array_1030@203:0>) >= 0)))
        nub':(((-1 + <<make_array_1030@203:2>@215:0>) + (-1 * <make_array_1030@203:1>)) >= 0)
        begin InterpProver.interpolate(467408)[5]
          begin InterpProver.interpolate_fresh(467409)[6]
            begin InterpProver.interpolate_log(467410)[7]
              input1: (((<<make_array_1030@203:2>@215:0> + (-1 * <make_array_1030@203:1>)) = 0) &&
                       ((<make_array_1030@203:1> >= 0) &&
                        (((-1 + (-1 * <make_array_1030@203:1>)) + <make_array_1030@203:0>) >= 0)))
              input2: (((-1 + <<make_array_1030@203:2>@215:0>) + (-1 * <make_array_1030@203:1>)) >= 0)
              begin InterpProver.interpolate_check(467411)[8]
                begin InterpProver.interpolate_simplify(467412)[9]
                  begin InterpProver.interpolate_quick(467499)[10]
                    begin CsisatInterface.interpolate_csisat_wrap(467508)[11]
                      begin CsisatInterface.interpolate_csisat_post_process(467509)[12]
                        begin CsisatInterface.interpolate_csisat_log(467510)[13]
                          input1: (v_sep_make_array_1030_sep_203_sep_1 = v_sep_make_array_1030_sep_203_sep_2_sep_215_sep_0 & 0 <= v_sep_make_array_1030_sep_203_sep_1 & (1 + v_sep_make_array_1030_sep_203_sep_1) <= v_sep_make_array_1030_sep_203_sep_0)
                          input2: (1 + v_sep_make_array_1030_sep_203_sep_1) <= v_sep_make_array_1030_sep_203_sep_2_sep_215_sep_0
                          begin CsisatInterface.interpolate_csisat_raw(467511)[14]
                            
                          end CsisatInterface.interpolate_csisat_raw(467511)[14] (0.000000 sec.)
                          output: (-2*v_sep_make_array_1030_sep_203_sep_1 + 2*v_sep_make_array_1030_sep_203_sep_2_sep_215_sep_0) <= 0
                          
                        end CsisatInterface.interpolate_csisat_log(467510)[13] (0.000000 sec.)
                        after simplification: (-2*v_sep_make_array_1030_sep_203_sep_1 + 2*v_sep_make_array_1030_sep_203_sep_2_sep_215_sep_0) <= 0
                        after dnf conversion: (((-2*v_sep_make_array_1030_sep_203_sep_1 + 2*v_sep_make_array_1030_sep_203_sep_2_sep_215_sep_0) <= 0))
                        
                      end CsisatInterface.interpolate_csisat_post_process(467509)[12] (0.000000 sec.)
                      
                    end CsisatInterface.interpolate_csisat_wrap(467508)[11] (0.000000 sec.)
                    
                  end InterpProver.interpolate_quick(467499)[10] (0.001000 sec.)
                  
                end InterpProver.interpolate_simplify(467412)[9] (0.002000 sec.)
                
              end InterpProver.interpolate_check(467411)[8] (0.003000 sec.)
              output: (<<make_array_1030@203:2>@215:0> <= <make_array_1030@203:1>)
            end InterpProver.interpolate_log(467410)[7] (0.003000 sec.)
            
          end InterpProver.interpolate_fresh(467409)[6] (0.003000 sec.)
          
        end InterpProver.interpolate(467408)[5] (0.003000 sec.)
        output:
          P[<<make_array_1030@203:2>@215:0>](<make_array_1030@203:0>:int,<make_array_1030@203:1>:int,<<make_array_1030@203:2>@215:0>:int) =
          (<<make_array_1030@203:2>@215:0> <= <make_array_1030@203:1>)
      end ApronInterface.convex_hull_interpolate(467358)[4] (0.004000 sec.)
      begin HcSolver.check_validity(467776)[4]
        input:
          P[<fail_1487@261:0>](<fail_1487@261:0>:bool)|- bot
          
          P[<check_1148@237:2>](<f_check_1482@258:2>:int,<f_check_1482@258:0>:int,<f_check_1482@258:1>:int),
          P[<<<check_1148@237:3>@240:1>@256:0>](<f_check_1482@258:2>:int,<f_check_1482@258:0>:int,<f_check_1482@258:1>:int,<f_check_1482@258:0>:int,<f_check_1482@258:5>:int),
          ((<f_check_1482@258:5> > <f_check_1482@258:1>) &&
           ((<f_check_1482@258:0> < <f_check_1482@258:2>) && <fail_1487@261:0>))
          |- P[<fail_1487@261:0>](<fail_1487@261:0>:bool)
          
          P[<<array_max_1033@198:3>@233:0>](<check_1148@237:0>:int,0:int,<check_1148@237:2>:int),
          P[<<make_array_1030@242:2>@254:0>](<check_1148@237:0>:int,<<check_1148@237:3>@240:0>:int,<<<check_1148@237:3>@240:1>@256:0>:int),
          P[<check_1148@237:2>](<check_1148@237:0>:int,<check_1148@237:1>:int,<check_1148@237:2>:int),
          (<check_1148@237:1> = 0)
          |- P[<<<check_1148@237:3>@240:1>@256:0>](<check_1148@237:0>:int,
                                                   <check_1148@237:1>:int,
                                                   <check_1148@237:2>:int,
                                                   <<check_1148@237:3>@240:0>:int,
                                                   <<<check_1148@237:3>@240:1>@256:0>:int)
          
          P[<make_array_1030@242:1>](<make_array_1030@242:0>:int,<make_array_1030@242:1>:int),
          ((0 <= <make_array_1030@242:1>) &&
           ((<make_array_1030@242:1> < <make_array_1030@242:0>) &&
            (<<make_array_1030@242:2>@254:0> = <make_array_1030@242:1>)))
          |- P[<<make_array_1030@242:2>@254:0>](<make_array_1030@242:0>:int,
                                                <make_array_1030@242:1>:int,
                                                <<make_array_1030@242:2>@254:0>:int)
          
          P[<<array_max_1033@198:3>@233:0>](<make_array_1030@242:0>:int,0:int,<check_1148@237:2>:int),
          P[<<check_1148@237:3>@240:0>](<make_array_1030@242:0>:int,0:int,<check_1148@237:2>:int,<make_array_1030@242:1>:int)|- P[<make_array_1030@242:1>](
          <make_array_1030@242:0>:int,<make_array_1030@242:1>:int)
          
          P[<check_1148@237:2>](<check_1148@237:0>:int,<check_1148@237:1>:int,<check_1148@237:2>:int),
          ((<check_1148@237:1> < <check_1148@237:0>) && (<<check_1148@237:3>@240:0> = <check_1148@237:1>))
          |- P[<<check_1148@237:3>@240:0>](<check_1148@237:0>:int,<check_1148@237:1>:int,
                                           <check_1148@237:2>:int,<<check_1148@237:3>@240:0>:int)
          
          P[<<array_max_1033@198:3>@233:0>](<check_1148@237:0>:int,0:int,<check_1148@237:2>:int),
          (<check_1148@237:1> = 0)
          |- P[<check_1148@237:2>](<check_1148@237:0>:int,<check_1148@237:1>:int,
                                   <check_1148@237:2>:int)
          
          P[<array_max_1033@198:1>](<array_max_1033@198:0>:int,<array_max_1033@198:1>:int),
          P[<<<array_max_1033@198:2>@201:1>@217:0>](<array_max_1033@198:0>:int,<array_max_1033@198:1>:int,<array_max_1033@198:1>:int,<<array_max_1033@198:3>@233:0>:int),
          P[<<array_max_1033@221:3>@224:0>](<array_max_1033@198:0>:int,(
                                            1 + <array_max_1033@198:1>):int,var676:int),
          ((<<array_max_1033@198:3>@233:0> > var676) && (<array_max_1033@198:1> < <array_max_1033@198:0>))
          |- P[<<array_max_1033@198:3>@233:0>](<array_max_1033@198:0>:int,
                                               <array_max_1033@198:1>:int,
                                               <<array_max_1033@198:3>@233:0>:int)
          
          P[<array_max_1033@221:1>](<array_max_1033@221:0>:int,<array_max_1033@221:1>:int),
          ((<<array_max_1033@221:3>@224:0> = 0) && (<array_max_1033@221:1> >= <array_max_1033@221:0>))
          |- P[<<array_max_1033@221:3>@224:0>](<array_max_1033@221:0>:int,
                                               <array_max_1033@221:1>:int,
                                               <<array_max_1033@221:3>@224:0>:int)
          
          P[<array_max_1033@198:1>](<array_max_1033@221:0>:int,(-1 + <array_max_1033@221:1>):int),
          P[<<<array_max_1033@198:2>@201:1>@217:0>](<array_max_1033@221:0>:int,(
                                                    -1 + <array_max_1033@221:1>):int,(
                                                    -1 + <array_max_1033@221:1>):int,<f_array_max_1480@219:4>:int),
          (<array_max_1033@221:1> < (1 + <array_max_1033@221:0>))
          |- P[<array_max_1033@221:1>](<array_max_1033@221:0>:int,<array_max_1033@221:1>:int)
          
          P[<<make_array_1030@203:2>@215:0>](<array_max_1033@198:0>:int,<<array_max_1033@198:2>@201:0>:int,<<<array_max_1033@198:2>@201:1>@217:0>:int),
          P[<array_max_1033@198:1>](<array_max_1033@198:0>:int,<array_max_1033@198:1>:int),
          (<array_max_1033@198:1> = 0)
          |- P[<<<array_max_1033@198:2>@201:1>@217:0>](<array_max_1033@198:0>:int,
                                                       <array_max_1033@198:1>:int,
                                                       <<array_max_1033@198:2>@201:0>:int,
                                                       <<<array_max_1033@198:2>@201:1>@217:0>:int)
          
          P[<make_array_1030@203:1>](<make_array_1030@203:0>:int,<make_array_1030@203:1>:int),
          ((0 <= <make_array_1030@203:1>) &&
           ((<make_array_1030@203:1> < <make_array_1030@203:0>) &&
            (<<make_array_1030@203:2>@215:0> = <make_array_1030@203:1>)))
          |- P[<<make_array_1030@203:2>@215:0>](<make_array_1030@203:0>:int,
                                                <make_array_1030@203:1>:int,
                                                <<make_array_1030@203:2>@215:0>:int)
          
          P[<<array_max_1033@198:2>@201:0>](<make_array_1030@203:0>:int,0:int,<make_array_1030@203:1>:int)|- P[<make_array_1030@203:1>](
          <make_array_1030@203:0>:int,<make_array_1030@203:1>:int)
          
          P[<array_max_1033@198:1>](<array_max_1033@198:0>:int,<array_max_1033@198:1>:int),
          ((<array_max_1033@198:1> < <array_max_1033@198:0>) &&
           (<<array_max_1033@198:2>@201:0> = <array_max_1033@198:1>))
          |- P[<<array_max_1033@198:2>@201:0>](<array_max_1033@198:0>:int,
                                               <array_max_1033@198:1>:int,
                                               <<array_max_1033@198:2>@201:0>:int)
          
           (<array_max_1033@198:1> = 0)
          |- P[<array_max_1033@198:1>](<array_max_1033@198:0>:int,<array_max_1033@198:1>:int)
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        
      end HcSolver.check_validity(467776)[4] (0.007999 sec.)
      solution:
        P[<fail_1487@261:0>](<fail_1487@261:0>:bool) = false
        P[<<<check_1148@237:3>@240:1>@256:0>](var1188:int,var1189:int,var1190:int,var1191:int,var1192:int) = false
        P[<<make_array_1030@242:2>@254:0>](<make_array_1030@203:0>:int,<make_array_1030@203:1>:int,<<make_array_1030@203:2>@215:0>:int) =
        true
        P[<make_array_1030@242:1>](<make_array_1030@203:0>:int,<make_array_1030@203:1>:int) = true
        P[<<check_1148@237:3>@240:0>](<check_1148@237:0>:int,<check_1148@237:1>:int,<check_1148@237:2>:int,<<check_1148@237:3>@240:0>:int) =
        false
        P[<check_1148@237:2>](var1220:int,var1221:int,var1222:int) = false
        P[<<array_max_1033@198:3>@233:0>](<array_max_1033@221:0>:int,<array_max_1033@221:1>:int,<<array_max_1033@221:3>@224:0>:int) =
        (1 <= <array_max_1033@221:1>)
        P[<<array_max_1033@221:3>@224:0>](<array_max_1033@221:0>:int,<array_max_1033@221:1>:int,<<array_max_1033@221:3>@224:0>:int) =
        (0 <= <<array_max_1033@221:3>@224:0>)
        P[<array_max_1033@221:1>](<array_max_1033@198:0>:int,<array_max_1033@198:1>:int) = true
        P[<<<array_max_1033@198:2>@201:1>@217:0>](<array_max_1033@198:0>:int,<array_max_1033@198:1>:int,<<array_max_1033@198:2>@201:0>:int,<<<array_max_1033@198:2>@201:1>@217:0>:int) =
        ((<array_max_1033@198:1> + <<<array_max_1033@198:2>@201:1>@217:0>) <= <<array_max_1033@198:2>@201:0>)
        P[<<make_array_1030@203:2>@215:0>](<make_array_1030@203:0>:int,<make_array_1030@203:1>:int,<<make_array_1030@203:2>@215:0>:int) =
        (<<make_array_1030@203:2>@215:0> <= <make_array_1030@203:1>)
        P[<make_array_1030@203:1>](<make_array_1030@203:0>:int,<make_array_1030@203:1>:int) = true
        P[<<array_max_1033@198:2>@201:0>](<array_max_1033@198:0>:int,<array_max_1033@198:1>:int,<<array_max_1033@198:2>@201:0>:int) =
        true
        P[<array_max_1033@198:1>](<array_max_1033@198:0>:int,<array_max_1033@198:1>:int) = true
    end GenHcSolver.solve(388598)[3] (0.378942 sec.)
    begin YhornInterface.solve(469142)[3]
      begin HcSolver.solve_ub(469143)[4]
        encoded:
          P[<fail_1487@261:0>](<fail_1487@261:0>:int)|- bot
          
          P[<check_1148@237:2>](<f_check_1482@258:2>:int,<f_check_1482@258:0>:int,<f_check_1482@258:1>:int),
          P[<<<check_1148@237:3>@240:1>@256:0>](<f_check_1482@258:2>:int,<f_check_1482@258:0>:int,<f_check_1482@258:1>:int,<f_check_1482@258:0>:int,<f_check_1482@258:5>:int),
          ((<f_check_1482@258:5> > <f_check_1482@258:1>) &&
           ((<f_check_1482@258:0> < <f_check_1482@258:2>) && (<fail_1487@261:0> = 1)))
          |- P[<fail_1487@261:0>](<fail_1487@261:0>:int)
          
          P[<<array_max_1033@198:3>@233:0>](<check_1148@237:0>:int,0:int,<check_1148@237:2>:int),
          P[<<make_array_1030@242:2>@254:0>](<check_1148@237:0>:int,<<check_1148@237:3>@240:0>:int,<<<check_1148@237:3>@240:1>@256:0>:int),
          P[<check_1148@237:2>](<check_1148@237:0>:int,<check_1148@237:1>:int,<check_1148@237:2>:int),
          (<check_1148@237:1> = 0)
          |- P[<<<check_1148@237:3>@240:1>@256:0>](<check_1148@237:0>:int,
                                                   <check_1148@237:1>:int,
                                                   <check_1148@237:2>:int,
                                                   <<check_1148@237:3>@240:0>:int,
                                                   <<<check_1148@237:3>@240:1>@256:0>:int)
          
          P[<make_array_1030@242:1>](<make_array_1030@242:0>:int,<make_array_1030@242:1>:int),
          ((0 <= <make_array_1030@242:1>) &&
           ((<make_array_1030@242:1> < <make_array_1030@242:0>) &&
            (<<make_array_1030@242:2>@254:0> = <make_array_1030@242:1>)))
          |- P[<<make_array_1030@242:2>@254:0>](<make_array_1030@242:0>:int,
                                                <make_array_1030@242:1>:int,
                                                <<make_array_1030@242:2>@254:0>:int)
          
          P[<<array_max_1033@198:3>@233:0>](<make_array_1030@242:0>:int,0:int,<check_1148@237:2>:int),
          P[<<check_1148@237:3>@240:0>](<make_array_1030@242:0>:int,0:int,<check_1148@237:2>:int,<make_array_1030@242:1>:int)|- P[<make_array_1030@242:1>](
          <make_array_1030@242:0>:int,<make_array_1030@242:1>:int)
          
          P[<check_1148@237:2>](<check_1148@237:0>:int,<check_1148@237:1>:int,<check_1148@237:2>:int),
          ((<check_1148@237:1> < <check_1148@237:0>) && (<<check_1148@237:3>@240:0> = <check_1148@237:1>))
          |- P[<<check_1148@237:3>@240:0>](<check_1148@237:0>:int,<check_1148@237:1>:int,
                                           <check_1148@237:2>:int,<<check_1148@237:3>@240:0>:int)
          
          P[<<array_max_1033@198:3>@233:0>](<check_1148@237:0>:int,0:int,<check_1148@237:2>:int),
          (<check_1148@237:1> = 0)
          |- P[<check_1148@237:2>](<check_1148@237:0>:int,<check_1148@237:1>:int,
                                   <check_1148@237:2>:int)
          
          P[<array_max_1033@198:1>](<array_max_1033@198:0>:int,<array_max_1033@198:1>:int),
          P[<<<array_max_1033@198:2>@201:1>@217:0>](<array_max_1033@198:0>:int,<array_max_1033@198:1>:int,<array_max_1033@198:1>:int,<<array_max_1033@198:3>@233:0>:int),
          P[<<array_max_1033@221:3>@224:0>](<array_max_1033@198:0>:int,(
                                            1 + <array_max_1033@198:1>):int,var676:int),
          ((<<array_max_1033@198:3>@233:0> > var676) && (<array_max_1033@198:1> < <array_max_1033@198:0>))
          |- P[<<array_max_1033@198:3>@233:0>](<array_max_1033@198:0>:int,
                                               <array_max_1033@198:1>:int,
                                               <<array_max_1033@198:3>@233:0>:int)
          
          P[<array_max_1033@221:1>](<array_max_1033@221:0>:int,<array_max_1033@221:1>:int),
          ((<<array_max_1033@221:3>@224:0> = 0) && (<array_max_1033@221:1> >= <array_max_1033@221:0>))
          |- P[<<array_max_1033@221:3>@224:0>](<array_max_1033@221:0>:int,
                                               <array_max_1033@221:1>:int,
                                               <<array_max_1033@221:3>@224:0>:int)
          
          P[<array_max_1033@198:1>](<array_max_1033@221:0>:int,(-1 + <array_max_1033@221:1>):int),
          P[<<<array_max_1033@198:2>@201:1>@217:0>](<array_max_1033@221:0>:int,(
                                                    -1 + <array_max_1033@221:1>):int,(
                                                    -1 + <array_max_1033@221:1>):int,<f_array_max_1480@219:4>:int),
          (<array_max_1033@221:1> < (1 + <array_max_1033@221:0>))
          |- P[<array_max_1033@221:1>](<array_max_1033@221:0>:int,<array_max_1033@221:1>:int)
          
          P[<<make_array_1030@203:2>@215:0>](<array_max_1033@198:0>:int,<<array_max_1033@198:2>@201:0>:int,<<<array_max_1033@198:2>@201:1>@217:0>:int),
          P[<array_max_1033@198:1>](<array_max_1033@198:0>:int,<array_max_1033@198:1>:int),
          (<array_max_1033@198:1> = 0)
          |- P[<<<array_max_1033@198:2>@201:1>@217:0>](<array_max_1033@198:0>:int,
                                                       <array_max_1033@198:1>:int,
                                                       <<array_max_1033@198:2>@201:0>:int,
                                                       <<<array_max_1033@198:2>@201:1>@217:0>:int)
          
          P[<make_array_1030@203:1>](<make_array_1030@203:0>:int,<make_array_1030@203:1>:int),
          ((0 <= <make_array_1030@203:1>) &&
           ((<make_array_1030@203:1> < <make_array_1030@203:0>) &&
            (<<make_array_1030@203:2>@215:0> = <make_array_1030@203:1>)))
          |- P[<<make_array_1030@203:2>@215:0>](<make_array_1030@203:0>:int,
                                                <make_array_1030@203:1>:int,
                                                <<make_array_1030@203:2>@215:0>:int)
          
          P[<<array_max_1033@198:2>@201:0>](<make_array_1030@203:0>:int,0:int,<make_array_1030@203:1>:int)|- P[<make_array_1030@203:1>](
          <make_array_1030@203:0>:int,<make_array_1030@203:1>:int)
          
          P[<array_max_1033@198:1>](<array_max_1033@198:0>:int,<array_max_1033@198:1>:int),
          ((<array_max_1033@198:1> < <array_max_1033@198:0>) &&
           (<<array_max_1033@198:2>@201:0> = <array_max_1033@198:1>))
          |- P[<<array_max_1033@198:2>@201:0>](<array_max_1033@198:0>:int,
                                               <array_max_1033@198:1>:int,
                                               <<array_max_1033@198:2>@201:0>:int)
          
           (<array_max_1033@198:1> = 0)
          |- P[<array_max_1033@198:1>](<array_max_1033@198:0>:int,<array_max_1033@198:1>:int)
        input to Yhorn:
          P[<fail_1487@261:0>](<fail_1487@261:0>:int)|- bot
          
          P[<check_1148@237:2>](<f_check_1482@258:2>:int,<f_check_1482@258:0>:int,<f_check_1482@258:1>:int),
          P[<<<check_1148@237:3>@240:1>@256:0>](<f_check_1482@258:2>:int,<f_check_1482@258:0>:int,<f_check_1482@258:1>:int,<f_check_1482@258:0>:int,<f_check_1482@258:5>:int),
          ((<f_check_1482@258:0> < <f_check_1482@258:2>) &&
           ((<f_check_1482@258:5> > <f_check_1482@258:1>) && (<fail_1487@261:0> = 1)))
          |- P[<fail_1487@261:0>](<fail_1487@261:0>:int)
          
          P[<<array_max_1033@198:3>@233:0>](<check_1148@237:0>:int,var1239:int,<check_1148@237:2>:int),
          P[<<make_array_1030@242:2>@254:0>](<check_1148@237:0>:int,<<check_1148@237:3>@240:0>:int,<<<check_1148@237:3>@240:1>@256:0>:int),
          P[<check_1148@237:2>](<check_1148@237:0>:int,<check_1148@237:1>:int,<check_1148@237:2>:int),
          ((var1239 = 0) && (<check_1148@237:1> = 0))
          |- P[<<<check_1148@237:3>@240:1>@256:0>](<check_1148@237:0>:int,
                                                   <check_1148@237:1>:int,
                                                   <check_1148@237:2>:int,
                                                   <<check_1148@237:3>@240:0>:int,
                                                   <<<check_1148@237:3>@240:1>@256:0>:int)
          
          P[<make_array_1030@242:1>](<make_array_1030@242:0>:int,<make_array_1030@242:1>:int),
          ((<<make_array_1030@242:2>@254:0> = <make_array_1030@242:1>) &&
           ((<make_array_1030@242:1> < <make_array_1030@242:0>) && (0 <= <make_array_1030@242:1>)))
          |- P[<<make_array_1030@242:2>@254:0>](<make_array_1030@242:0>:int,
                                                <make_array_1030@242:1>:int,
                                                <<make_array_1030@242:2>@254:0>:int)
          
          P[<<array_max_1033@198:3>@233:0>](<make_array_1030@242:0>:int,var1240:int,<check_1148@237:2>:int),
          P[<<check_1148@237:3>@240:0>](<make_array_1030@242:0>:int,var1241:int,<check_1148@237:2>:int,<make_array_1030@242:1>:int),
          ((var1241 = 0) && (var1240 = 0))
          |- P[<make_array_1030@242:1>](<make_array_1030@242:0>:int,<make_array_1030@242:1>:int)
          
          P[<check_1148@237:2>](<check_1148@237:0>:int,<check_1148@237:1>:int,<check_1148@237:2>:int),
          ((<<check_1148@237:3>@240:0> = <check_1148@237:1>) && (<check_1148@237:1> < <check_1148@237:0>))
          |- P[<<check_1148@237:3>@240:0>](<check_1148@237:0>:int,<check_1148@237:1>:int,
                                           <check_1148@237:2>:int,<<check_1148@237:3>@240:0>:int)
          
          P[<<array_max_1033@198:3>@233:0>](<check_1148@237:0>:int,var1242:int,<check_1148@237:2>:int),
          ((var1242 = 0) && (<check_1148@237:1> = 0))
          |- P[<check_1148@237:2>](<check_1148@237:0>:int,<check_1148@237:1>:int,
                                   <check_1148@237:2>:int)
          
          P[<array_max_1033@198:1>](<array_max_1033@198:0>:int,<array_max_1033@198:1>:int),
          P[<<<array_max_1033@198:2>@201:1>@217:0>](<array_max_1033@198:0>:int,<array_max_1033@198:1>:int,<array_max_1033@198:1>:int,<<array_max_1033@198:3>@233:0>:int),
          P[<<array_max_1033@221:3>@224:0>](<array_max_1033@198:0>:int,var1243:int,var676:int),
          ((var1243 = (1 + <array_max_1033@198:1>)) &&
           ((<array_max_1033@198:1> < <array_max_1033@198:0>) && (<<array_max_1033@198:3>@233:0> > var676)))
          |- P[<<array_max_1033@198:3>@233:0>](<array_max_1033@198:0>:int,
                                               <array_max_1033@198:1>:int,
                                               <<array_max_1033@198:3>@233:0>:int)
          
          P[<array_max_1033@221:1>](<array_max_1033@221:0>:int,<array_max_1033@221:1>:int),
          ((<array_max_1033@221:1> >= <array_max_1033@221:0>) && (<<array_max_1033@221:3>@224:0> = 0))
          |- P[<<array_max_1033@221:3>@224:0>](<array_max_1033@221:0>:int,
                                               <array_max_1033@221:1>:int,
                                               <<array_max_1033@221:3>@224:0>:int)
          
          P[<array_max_1033@198:1>](<array_max_1033@221:0>:int,var1244:int),
          P[<<<array_max_1033@198:2>@201:1>@217:0>](<array_max_1033@221:0>:int,var1245:int,var1246:int,<f_array_max_1480@219:4>:int),
          (((1 + var1246) = <array_max_1033@221:1>) &&
           (((1 + var1245) = <array_max_1033@221:1>) &&
            (((1 + var1244) = <array_max_1033@221:1>) && (<array_max_1033@221:1> < (1 + <array_max_1033@221:0>)))))
          |- P[<array_max_1033@221:1>](<array_max_1033@221:0>:int,<array_max_1033@221:1>:int)
          
          P[<<make_array_1030@203:2>@215:0>](<array_max_1033@198:0>:int,<<array_max_1033@198:2>@201:0>:int,<<<array_max_1033@198:2>@201:1>@217:0>:int),
          P[<array_max_1033@198:1>](<array_max_1033@198:0>:int,<array_max_1033@198:1>:int),
          (<array_max_1033@198:1> = 0)
          |- P[<<<array_max_1033@198:2>@201:1>@217:0>](<array_max_1033@198:0>:int,
                                                       <array_max_1033@198:1>:int,
                                                       <<array_max_1033@198:2>@201:0>:int,
                                                       <<<array_max_1033@198:2>@201:1>@217:0>:int)
          
          P[<make_array_1030@203:1>](<make_array_1030@203:0>:int,<make_array_1030@203:1>:int),
          ((<<make_array_1030@203:2>@215:0> = <make_array_1030@203:1>) &&
           ((<make_array_1030@203:1> < <make_array_1030@203:0>) && (0 <= <make_array_1030@203:1>)))
          |- P[<<make_array_1030@203:2>@215:0>](<make_array_1030@203:0>:int,
                                                <make_array_1030@203:1>:int,
                                                <<make_array_1030@203:2>@215:0>:int)
          
          P[<<array_max_1033@198:2>@201:0>](<make_array_1030@203:0>:int,var1247:int,<make_array_1030@203:1>:int),
          (var1247 = 0) |- P[<make_array_1030@203:1>](<make_array_1030@203:0>:int,
                                                      <make_array_1030@203:1>:int)
          
          P[<array_max_1033@198:1>](<array_max_1033@198:0>:int,<array_max_1033@198:1>:int),
          ((<<array_max_1033@198:2>@201:0> = <array_max_1033@198:1>) &&
           (<array_max_1033@198:1> < <array_max_1033@198:0>))
          |- P[<<array_max_1033@198:2>@201:0>](<array_max_1033@198:0>:int,
                                               <array_max_1033@198:1>:int,
                                               <<array_max_1033@198:2>@201:0>:int)
          
           (<array_max_1033@198:1> = 0)
          |- P[<array_max_1033@198:1>](<array_max_1033@198:0>:int,<array_max_1033@198:1>:int)Yhorn (Wed Sep 25 10:52:05 JST 2013)


(0=0) & (v_sep_fail_1487_sep_261_sep_0($1106)) -> 1=0.
(($1106-1=0) & ($1107-$1108>0) & ($1109-$1110<0)) & (v_sep_check_1148_sep_237_sep_3_sep_240_sep_1_sep_256_sep_0($1110,$1109,$1108,$1109,$1107)) & (v_sep_check_1148_sep_237_sep_2($1110,$1109,$1108)) -> v_sep_fail_1487_sep_261_sep_0($1106).
(($1111=0) & ($1112=0)) & (v_sep_check_1148_sep_237_sep_2($1113,$1111,$1114)) & (v_sep_make_array_1030_sep_242_sep_2_sep_254_sep_0($1113,$1115,$1116)) & (v_sep_array_max_1033_sep_198_sep_3_sep_233_sep_0($1113,$1112,$1114)) -> v_sep_check_1148_sep_237_sep_3_sep_240_sep_1_sep_256_sep_0($1113,$1111,$1114,$1115,$1116).
((-$1117<=0) & ($1117-$1118<0) & (-$1117+$1119=0)) & (v_sep_make_array_1030_sep_242_sep_1($1118,$1117)) -> v_sep_make_array_1030_sep_242_sep_2_sep_254_sep_0($1118,$1117,$1119).
(($1120=0) & ($1121=0)) & (v_sep_check_1148_sep_237_sep_3_sep_240_sep_0($1118,$1121,$1114,$1117)) & (v_sep_array_max_1033_sep_198_sep_3_sep_233_sep_0($1118,$1120,$1114)) -> v_sep_make_array_1030_sep_242_sep_1($1118,$1117).
(($1111-$1113<0) & (-$1111+$1115=0)) & (v_sep_check_1148_sep_237_sep_2($1113,$1111,$1114)) -> v_sep_check_1148_sep_237_sep_3_sep_240_sep_0($1113,$1111,$1114,$1115).
(($1111=0) & ($1122=0)) & (v_sep_array_max_1033_sep_198_sep_3_sep_233_sep_0($1113,$1122,$1114)) -> v_sep_check_1148_sep_237_sep_2($1113,$1111,$1114).
(($1123-$1124>0) & ($1125-$1126<0) & (-$1125+$1127-1=0)) & (v_sep_array_max_1033_sep_221_sep_3_sep_224_sep_0($1126,$1127,$1124)) & (v_sep_array_max_1033_sep_198_sep_2_sep_201_sep_1_sep_217_sep_0($1126,$1125,$1125,$1123)) & (v_sep_array_max_1033_sep_198_sep_1($1126,$1125)) -> v_sep_array_max_1033_sep_198_sep_3_sep_233_sep_0($1126,$1125,$1123).
(($1128=0) & ($1129-$1130>=0)) & (v_sep_array_max_1033_sep_221_sep_1($1130,$1129)) -> v_sep_array_max_1033_sep_221_sep_3_sep_224_sep_0($1130,$1129,$1128).
(($1129-$1130-1<0) & (-$1129+$1131+1=0) & (-$1129+$1132+1=0) & (-$1129+$1133+1=0)) & (v_sep_array_max_1033_sep_198_sep_2_sep_201_sep_1_sep_217_sep_0($1130,$1132,$1133,$1134)) & (v_sep_array_max_1033_sep_198_sep_1($1130,$1131)) -> v_sep_array_max_1033_sep_221_sep_1($1130,$1129).
($1125=0) & (v_sep_array_max_1033_sep_198_sep_1($1126,$1125)) & (v_sep_make_array_1030_sep_203_sep_2_sep_215_sep_0($1126,$1135,$1136)) -> v_sep_array_max_1033_sep_198_sep_2_sep_201_sep_1_sep_217_sep_0($1126,$1125,$1135,$1136).
((-$1137<=0) & ($1137-$1138<0) & (-$1137+$1139=0)) & (v_sep_make_array_1030_sep_203_sep_1($1138,$1137)) -> v_sep_make_array_1030_sep_203_sep_2_sep_215_sep_0($1138,$1137,$1139).
($1140=0) & (v_sep_array_max_1033_sep_198_sep_2_sep_201_sep_0($1138,$1140,$1137)) -> v_sep_make_array_1030_sep_203_sep_1($1138,$1137).
(($1125-$1126<0) & (-$1125+$1135=0)) & (v_sep_array_max_1033_sep_198_sep_1($1126,$1125)) -> v_sep_array_max_1033_sep_198_sep_2_sep_201_sep_0($1126,$1125,$1135).
$1125=0 -> v_sep_array_max_1033_sep_198_sep_1($1126,$1125).


v_sep_array_max_1033_sep_198_sep_1: X
v_sep_array_max_1033_sep_198_sep_2_sep_201_sep_0: X
v_sep_array_max_1033_sep_198_sep_2_sep_201_sep_1_sep_217_sep_0: X
v_sep_array_max_1033_sep_198_sep_3_sep_233_sep_0: X
v_sep_array_max_1033_sep_221_sep_1: X
v_sep_array_max_1033_sep_221_sep_3_sep_224_sep_0: X
v_sep_check_1148_sep_237_sep_2: X
v_sep_check_1148_sep_237_sep_3_sep_240_sep_0: X
v_sep_check_1148_sep_237_sep_3_sep_240_sep_1_sep_256_sep_0: X
v_sep_fail_1487_sep_261_sep_0: X
v_sep_make_array_1030_sep_203_sep_1: X
v_sep_make_array_1030_sep_203_sep_2_sep_215_sep_0: X
v_sep_make_array_1030_sep_242_sep_1: X
v_sep_make_array_1030_sep_242_sep_2_sep_254_sep_0: X
.......................
v_sep_array_max_1033_sep_198_sep_1: X
v_sep_array_max_1033_sep_198_sep_2_sep_201_sep_0: X
v_sep_array_max_1033_sep_198_sep_2_sep_201_sep_1_sep_217_sep_0: X
v_sep_array_max_1033_sep_198_sep_3_sep_233_sep_0: X
v_sep_array_max_1033_sep_221_sep_1: X
v_sep_array_max_1033_sep_221_sep_3_sep_224_sep_0: X
v_sep_check_1148_sep_237_sep_2: X
v_sep_check_1148_sep_237_sep_3_sep_240_sep_0: X
v_sep_check_1148_sep_237_sep_3_sep_240_sep_1_sep_256_sep_0: X
v_sep_fail_1487_sep_261_sep_0: X
v_sep_make_array_1030_sep_203_sep_1: X
v_sep_make_array_1030_sep_203_sep_2_sep_215_sep_0: X
v_sep_make_array_1030_sep_242_sep_1: X
v_sep_make_array_1030_sep_242_sep_2_sep_254_sep_0: X
....
v_sep_array_max_1033_sep_198_sep_1: X
v_sep_array_max_1033_sep_198_sep_2_sep_201_sep_0: X
v_sep_array_max_1033_sep_198_sep_2_sep_201_sep_1_sep_217_sep_0: X
v_sep_array_max_1033_sep_198_sep_3_sep_233_sep_0: X
v_sep_array_max_1033_sep_221_sep_1: X
v_sep_array_max_1033_sep_221_sep_3_sep_224_sep_0: X
v_sep_check_1148_sep_237_sep_2: X
v_sep_check_1148_sep_237_sep_3_sep_240_sep_0: X
v_sep_check_1148_sep_237_sep_3_sep_240_sep_1_sep_256_sep_0: X
v_sep_fail_1487_sep_261_sep_0: X
v_sep_make_array_1030_sep_203_sep_1: X
v_sep_make_array_1030_sep_203_sep_2_sep_215_sep_0: X
v_sep_make_array_1030_sep_242_sep_1: X
v_sep_make_array_1030_sep_242_sep_2_sep_254_sep_0: X
........
v_sep_array_max_1033_sep_198_sep_1: X
v_sep_array_max_1033_sep_198_sep_2_sep_201_sep_0: X
v_sep_array_max_1033_sep_198_sep_2_sep_201_sep_1_sep_217_sep_0: X
v_sep_array_max_1033_sep_198_sep_3_sep_233_sep_0: X
v_sep_array_max_1033_sep_221_sep_1: X
v_sep_array_max_1033_sep_221_sep_3_sep_224_sep_0: X
v_sep_check_1148_sep_237_sep_2: X
v_sep_check_1148_sep_237_sep_3_sep_240_sep_0: X
v_sep_check_1148_sep_237_sep_3_sep_240_sep_1_sep_256_sep_0: X
v_sep_fail_1487_sep_261_sep_0: X
v_sep_make_array_1030_sep_203_sep_1: X
v_sep_make_array_1030_sep_203_sep_2_sep_215_sep_0: X
v_sep_make_array_1030_sep_242_sep_1: X
v_sep_make_array_1030_sep_242_sep_2_sep_254_sep_0: X
............
v_sep_array_max_1033_sep_198_sep_1: X
v_sep_array_max_1033_sep_198_sep_2_sep_201_sep_0: X
v_sep_array_max_1033_sep_198_sep_2_sep_201_sep_1_sep_217_sep_0: X
v_sep_array_max_1033_sep_198_sep_3_sep_233_sep_0: X
v_sep_array_max_1033_sep_221_sep_1: X
v_sep_array_max_1033_sep_221_sep_3_sep_224_sep_0: X
v_sep_check_1148_sep_237_sep_2: X
v_sep_check_1148_sep_237_sep_3_sep_240_sep_0: X
v_sep_check_1148_sep_237_sep_3_sep_240_sep_1_sep_256_sep_0: X
v_sep_fail_1487_sep_261_sep_0: X
v_sep_make_array_1030_sep_203_sep_1: X
v_sep_make_array_1030_sep_203_sep_2_sep_215_sep_0: X
v_sep_make_array_1030_sep_242_sep_1: X
v_sep_make_array_1030_sep_242_sep_2_sep_254_sep_0: X
.................
v_sep_array_max_1033_sep_198_sep_1: X
v_sep_array_max_1033_sep_198_sep_2_sep_201_sep_0: X
v_sep_array_max_1033_sep_198_sep_2_sep_201_sep_1_sep_217_sep_0: X
v_sep_array_max_1033_sep_198_sep_3_sep_233_sep_0: X
v_sep_array_max_1033_sep_221_sep_1: X
v_sep_array_max_1033_sep_221_sep_3_sep_224_sep_0: X
v_sep_check_1148_sep_237_sep_2: X
v_sep_check_1148_sep_237_sep_3_sep_240_sep_0: X
v_sep_check_1148_sep_237_sep_3_sep_240_sep_1_sep_256_sep_0: X
v_sep_fail_1487_sep_261_sep_0: X
v_sep_make_array_1030_sep_203_sep_1: X
v_sep_make_array_1030_sep_203_sep_2_sep_215_sep_0: X
v_sep_make_array_1030_sep_242_sep_1: X
v_sep_make_array_1030_sep_242_sep_2_sep_254_sep_0: X
.....................Split conj [45] 3.74043
(Reconstrcut: 13 ***)
v_sep_array_max_1033_sep_198_sep_1: X
v_sep_array_max_1033_sep_198_sep_2_sep_201_sep_0: X
v_sep_array_max_1033_sep_198_sep_2_sep_201_sep_1_sep_217_sep_0: X
v_sep_array_max_1033_sep_198_sep_3_sep_233_sep_0: X
v_sep_array_max_1033_sep_221_sep_1: X
v_sep_array_max_1033_sep_221_sep_3_sep_224_sep_0: X
v_sep_check_1148_sep_237_sep_2: (X) & (X) & (X)
v_sep_check_1148_sep_237_sep_3_sep_240_sep_0: X
v_sep_check_1148_sep_237_sep_3_sep_240_sep_1_sep_256_sep_0: X
v_sep_fail_1487_sep_261_sep_0: X
v_sep_make_array_1030_sep_203_sep_1: X
v_sep_make_array_1030_sep_203_sep_2_sep_215_sep_0: X
v_sep_make_array_1030_sep_242_sep_1: X
v_sep_make_array_1030_sep_242_sep_2_sep_254_sep_0: X
..............
v_sep_array_max_1033_sep_198_sep_1: X
v_sep_array_max_1033_sep_198_sep_2_sep_201_sep_0: X
v_sep_array_max_1033_sep_198_sep_2_sep_201_sep_1_sep_217_sep_0: X
v_sep_array_max_1033_sep_198_sep_3_sep_233_sep_0: X
v_sep_array_max_1033_sep_221_sep_1: X
v_sep_array_max_1033_sep_221_sep_3_sep_224_sep_0: X
v_sep_check_1148_sep_237_sep_2: (X) & (X) & (X)
v_sep_check_1148_sep_237_sep_3_sep_240_sep_0: X
v_sep_check_1148_sep_237_sep_3_sep_240_sep_1_sep_256_sep_0: X
v_sep_fail_1487_sep_261_sep_0: X
v_sep_make_array_1030_sep_203_sep_1: X
v_sep_make_array_1030_sep_203_sep_2_sep_215_sep_0: X
v_sep_make_array_1030_sep_242_sep_1: X
v_sep_make_array_1030_sep_242_sep_2_sep_254_sep_0: X
....
v_sep_array_max_1033_sep_198_sep_1: X
v_sep_array_max_1033_sep_198_sep_2_sep_201_sep_0: X
v_sep_array_max_1033_sep_198_sep_2_sep_201_sep_1_sep_217_sep_0: X
v_sep_array_max_1033_sep_198_sep_3_sep_233_sep_0: X
v_sep_array_max_1033_sep_221_sep_1: X
v_sep_array_max_1033_sep_221_sep_3_sep_224_sep_0: X
v_sep_check_1148_sep_237_sep_2: (X) & (X) & (X)
v_sep_check_1148_sep_237_sep_3_sep_240_sep_0: X
v_sep_check_1148_sep_237_sep_3_sep_240_sep_1_sep_256_sep_0: X
v_sep_fail_1487_sep_261_sep_0: X
v_sep_make_array_1030_sep_203_sep_1: X
v_sep_make_array_1030_sep_203_sep_2_sep_215_sep_0: X
v_sep_make_array_1030_sep_242_sep_1: X
v_sep_make_array_1030_sep_242_sep_2_sep_254_sep_0: X
........
v_sep_array_max_1033_sep_198_sep_1: X
v_sep_array_max_1033_sep_198_sep_2_sep_201_sep_0: X
v_sep_array_max_1033_sep_198_sep_2_sep_201_sep_1_sep_217_sep_0: X
v_sep_array_max_1033_sep_198_sep_3_sep_233_sep_0: X
v_sep_array_max_1033_sep_221_sep_1: X
v_sep_array_max_1033_sep_221_sep_3_sep_224_sep_0: X
v_sep_check_1148_sep_237_sep_2: (X) & (X) & (X)
v_sep_check_1148_sep_237_sep_3_sep_240_sep_0: X
v_sep_check_1148_sep_237_sep_3_sep_240_sep_1_sep_256_sep_0: X
v_sep_fail_1487_sep_261_sep_0: X
v_sep_make_array_1030_sep_203_sep_1: X
v_sep_make_array_1030_sep_203_sep_2_sep_215_sep_0: X
v_sep_make_array_1030_sep_242_sep_1: X
v_sep_make_array_1030_sep_242_sep_2_sep_254_sep_0: X
.............
v_sep_array_max_1033_sep_198_sep_1: X
v_sep_array_max_1033_sep_198_sep_2_sep_201_sep_0: X
v_sep_array_max_1033_sep_198_sep_2_sep_201_sep_1_sep_217_sep_0: X
v_sep_array_max_1033_sep_198_sep_3_sep_233_sep_0: X
v_sep_array_max_1033_sep_221_sep_1: X
v_sep_array_max_1033_sep_221_sep_3_sep_224_sep_0: X
v_sep_check_1148_sep_237_sep_2: (X) & (X) & (X)
v_sep_check_1148_sep_237_sep_3_sep_240_sep_0: X
v_sep_check_1148_sep_237_sep_3_sep_240_sep_1_sep_256_sep_0: X
v_sep_fail_1487_sep_261_sep_0: X
v_sep_make_array_1030_sep_203_sep_1: X
v_sep_make_array_1030_sep_203_sep_2_sep_215_sep_0: X
v_sep_make_array_1030_sep_242_sep_1: X
v_sep_make_array_1030_sep_242_sep_2_sep_254_sep_0: X
..................
v_sep_array_max_1033_sep_198_sep_1: X
v_sep_array_max_1033_sep_198_sep_2_sep_201_sep_0: X
v_sep_array_max_1033_sep_198_sep_2_sep_201_sep_1_sep_217_sep_0: X
v_sep_array_max_1033_sep_198_sep_3_sep_233_sep_0: X
v_sep_array_max_1033_sep_221_sep_1: X
v_sep_array_max_1033_sep_221_sep_3_sep_224_sep_0: X
v_sep_check_1148_sep_237_sep_2: (X) & (X) & (X)
v_sep_check_1148_sep_237_sep_3_sep_240_sep_0: X
v_sep_check_1148_sep_237_sep_3_sep_240_sep_1_sep_256_sep_0: X
v_sep_fail_1487_sep_261_sep_0: X
v_sep_make_array_1030_sep_203_sep_1: X
v_sep_make_array_1030_sep_203_sep_2_sep_215_sep_0: X
v_sep_make_array_1030_sep_242_sep_1: X
v_sep_make_array_1030_sep_242_sep_2_sep_254_sep_0: X
......................Split conj [49] 3.839415
(Reconstrcut: 19 *****)
v_sep_array_max_1033_sep_198_sep_1: X
v_sep_array_max_1033_sep_198_sep_2_sep_201_sep_0: X
v_sep_array_max_1033_sep_198_sep_2_sep_201_sep_1_sep_217_sep_0: X
v_sep_array_max_1033_sep_198_sep_3_sep_233_sep_0: (X) & (X) & (X) & (X) & (X)
v_sep_array_max_1033_sep_221_sep_1: X
v_sep_array_max_1033_sep_221_sep_3_sep_224_sep_0: X
v_sep_check_1148_sep_237_sep_2: (X) & (X) & (X)
v_sep_check_1148_sep_237_sep_3_sep_240_sep_0: X
v_sep_check_1148_sep_237_sep_3_sep_240_sep_1_sep_256_sep_0: X
v_sep_fail_1487_sep_261_sep_0: X
v_sep_make_array_1030_sep_203_sep_1: X
v_sep_make_array_1030_sep_203_sep_2_sep_215_sep_0: X
v_sep_make_array_1030_sep_242_sep_1: X
v_sep_make_array_1030_sep_242_sep_2_sep_254_sep_0: X
.............................
v_sep_array_max_1033_sep_198_sep_1: X
v_sep_array_max_1033_sep_198_sep_2_sep_201_sep_0: X
v_sep_array_max_1033_sep_198_sep_2_sep_201_sep_1_sep_217_sep_0: X
v_sep_array_max_1033_sep_198_sep_3_sep_233_sep_0: (X) & (X) & (X) & (X) & (X)
v_sep_array_max_1033_sep_221_sep_1: X
v_sep_array_max_1033_sep_221_sep_3_sep_224_sep_0: X
v_sep_check_1148_sep_237_sep_2: (X) & (X) & (X)
v_sep_check_1148_sep_237_sep_3_sep_240_sep_0: X
v_sep_check_1148_sep_237_sep_3_sep_240_sep_1_sep_256_sep_0: X
v_sep_fail_1487_sep_261_sep_0: X
v_sep_make_array_1030_sep_203_sep_1: X
v_sep_make_array_1030_sep_203_sep_2_sep_215_sep_0: X
v_sep_make_array_1030_sep_242_sep_1: X
v_sep_make_array_1030_sep_242_sep_2_sep_254_sep_0: X
....
v_sep_array_max_1033_sep_198_sep_1: X
v_sep_array_max_1033_sep_198_sep_2_sep_201_sep_0: X
v_sep_array_max_1033_sep_198_sep_2_sep_201_sep_1_sep_217_sep_0: X
v_sep_array_max_1033_sep_198_sep_3_sep_233_sep_0: (X) & (X) & (X) & (X) & (X)
v_sep_array_max_1033_sep_221_sep_1: X
v_sep_array_max_1033_sep_221_sep_3_sep_224_sep_0: X
v_sep_check_1148_sep_237_sep_2: (X) & (X) & (X)
v_sep_check_1148_sep_237_sep_3_sep_240_sep_0: X
v_sep_check_1148_sep_237_sep_3_sep_240_sep_1_sep_256_sep_0: X
v_sep_fail_1487_sep_261_sep_0: X
v_sep_make_array_1030_sep_203_sep_1: X
v_sep_make_array_1030_sep_203_sep_2_sep_215_sep_0: X
v_sep_make_array_1030_sep_242_sep_1: X
v_sep_make_array_1030_sep_242_sep_2_sep_254_sep_0: X
........
v_sep_array_max_1033_sep_198_sep_1: X
v_sep_array_max_1033_sep_198_sep_2_sep_201_sep_0: X
v_sep_array_max_1033_sep_198_sep_2_sep_201_sep_1_sep_217_sep_0: X
v_sep_array_max_1033_sep_198_sep_3_sep_233_sep_0: (X) & (X) & (X) & (X) & (X)
v_sep_array_max_1033_sep_221_sep_1: X
v_sep_array_max_1033_sep_221_sep_3_sep_224_sep_0: X
v_sep_check_1148_sep_237_sep_2: (X) & (X) & (X)
v_sep_check_1148_sep_237_sep_3_sep_240_sep_0: X
v_sep_check_1148_sep_237_sep_3_sep_240_sep_1_sep_256_sep_0: X
v_sep_fail_1487_sep_261_sep_0: X
v_sep_make_array_1030_sep_203_sep_1: X
v_sep_make_array_1030_sep_203_sep_2_sep_215_sep_0: X
v_sep_make_array_1030_sep_242_sep_1: X
v_sep_make_array_1030_sep_242_sep_2_sep_254_sep_0: X
................
v_sep_array_max_1033_sep_198_sep_1: X
v_sep_array_max_1033_sep_198_sep_2_sep_201_sep_0: X
v_sep_array_max_1033_sep_198_sep_2_sep_201_sep_1_sep_217_sep_0: X
v_sep_array_max_1033_sep_198_sep_3_sep_233_sep_0: (X) & (X) & (X) & (X) & (X)
v_sep_array_max_1033_sep_221_sep_1: X
v_sep_array_max_1033_sep_221_sep_3_sep_224_sep_0: X
v_sep_check_1148_sep_237_sep_2: (X) & (X) & (X)
v_sep_check_1148_sep_237_sep_3_sep_240_sep_0: X
v_sep_check_1148_sep_237_sep_3_sep_240_sep_1_sep_256_sep_0: X
v_sep_fail_1487_sep_261_sep_0: X
v_sep_make_array_1030_sep_203_sep_1: X
v_sep_make_array_1030_sep_203_sep_2_sep_215_sep_0: X
v_sep_make_array_1030_sep_242_sep_1: X
v_sep_make_array_1030_sep_242_sep_2_sep_254_sep_0: X
........................
v_sep_array_max_1033_sep_198_sep_1: X
v_sep_array_max_1033_sep_198_sep_2_sep_201_sep_0: X
v_sep_array_max_1033_sep_198_sep_2_sep_201_sep_1_sep_217_sep_0: X
v_sep_array_max_1033_sep_198_sep_3_sep_233_sep_0: (X) & (X) & (X) & (X) & (X)
v_sep_array_max_1033_sep_221_sep_1: X
v_sep_array_max_1033_sep_221_sep_3_sep_224_sep_0: X
v_sep_check_1148_sep_237_sep_2: (X) & (X) & (X)
v_sep_check_1148_sep_237_sep_3_sep_240_sep_0: X
v_sep_check_1148_sep_237_sep_3_sep_240_sep_1_sep_256_sep_0: X
v_sep_fail_1487_sep_261_sep_0: X
v_sep_make_array_1030_sep_203_sep_1: X
v_sep_make_array_1030_sep_203_sep_2_sep_215_sep_0: X
v_sep_make_array_1030_sep_242_sep_1: X
v_sep_make_array_1030_sep_242_sep_2_sep_254_sep_0: X
...............................
v_sep_array_max_1033_sep_198_sep_1: X
v_sep_array_max_1033_sep_198_sep_2_sep_201_sep_0: X
v_sep_array_max_1033_sep_198_sep_2_sep_201_sep_1_sep_217_sep_0: X
v_sep_array_max_1033_sep_198_sep_3_sep_233_sep_0: (X) & (X) & (X) & (X) & (X)
v_sep_array_max_1033_sep_221_sep_1: X
v_sep_array_max_1033_sep_221_sep_3_sep_224_sep_0: X
v_sep_check_1148_sep_237_sep_2: (X) & (X) & (X)
v_sep_check_1148_sep_237_sep_3_sep_240_sep_0: X
v_sep_check_1148_sep_237_sep_3_sep_240_sep_1_sep_256_sep_0: X
v_sep_fail_1487_sep_261_sep_0: X
v_sep_make_array_1030_sep_203_sep_1: X
v_sep_make_array_1030_sep_203_sep_2_sep_215_sep_0: X
v_sep_make_array_1030_sep_242_sep_1: X
v_sep_make_array_1030_sep_242_sep_2_sep_254_sep_0: X
.................................
v_sep_array_max_1033_sep_198_sep_1: X
v_sep_array_max_1033_sep_198_sep_2_sep_201_sep_0: X
v_sep_array_max_1033_sep_198_sep_2_sep_201_sep_1_sep_217_sep_0: X
v_sep_array_max_1033_sep_198_sep_3_sep_233_sep_0: (X) & (X) & (X) & (X) & (X)
v_sep_array_max_1033_sep_221_sep_1: X
v_sep_array_max_1033_sep_221_sep_3_sep_224_sep_0: X
v_sep_check_1148_sep_237_sep_2: (X) & (X) & (X)
v_sep_check_1148_sep_237_sep_3_sep_240_sep_0: X
v_sep_check_1148_sep_237_sep_3_sep_240_sep_1_sep_256_sep_0: X
v_sep_fail_1487_sep_261_sep_0: X
v_sep_make_array_1030_sep_203_sep_1: X
v_sep_make_array_1030_sep_203_sep_2_sep_215_sep_0: X
v_sep_make_array_1030_sep_242_sep_1: X
v_sep_make_array_1030_sep_242_sep_2_sep_254_sep_0: X
.....................................Split conj [57] 3.979394
(Reconstrcut: 29 *****)
v_sep_array_max_1033_sep_198_sep_1: X
v_sep_array_max_1033_sep_198_sep_2_sep_201_sep_0: X
v_sep_array_max_1033_sep_198_sep_2_sep_201_sep_1_sep_217_sep_0: X
v_sep_array_max_1033_sep_198_sep_3_sep_233_sep_0: (X) & (X) & (X) & (X) & (X)
v_sep_array_max_1033_sep_221_sep_1: X
v_sep_array_max_1033_sep_221_sep_3_sep_224_sep_0: (X) & (X) & (X) & (X) & (X)
v_sep_check_1148_sep_237_sep_2: (X) & (X) & (X)
v_sep_check_1148_sep_237_sep_3_sep_240_sep_0: X
v_sep_check_1148_sep_237_sep_3_sep_240_sep_1_sep_256_sep_0: X
v_sep_fail_1487_sep_261_sep_0: X
v_sep_make_array_1030_sep_203_sep_1: X
v_sep_make_array_1030_sep_203_sep_2_sep_215_sep_0: X
v_sep_make_array_1030_sep_242_sep_1: X
v_sep_make_array_1030_sep_242_sep_2_sep_254_sep_0: X
..................................
v_sep_array_max_1033_sep_198_sep_1: X
v_sep_array_max_1033_sep_198_sep_2_sep_201_sep_0: X
v_sep_array_max_1033_sep_198_sep_2_sep_201_sep_1_sep_217_sep_0: X
v_sep_array_max_1033_sep_198_sep_3_sep_233_sep_0: (X) & (X) & (X) & (X) & (X)
v_sep_array_max_1033_sep_221_sep_1: X
v_sep_array_max_1033_sep_221_sep_3_sep_224_sep_0: (X) & (X) & (X) & (X) & (X)
v_sep_check_1148_sep_237_sep_2: (X) & (X) & (X)
v_sep_check_1148_sep_237_sep_3_sep_240_sep_0: X
v_sep_check_1148_sep_237_sep_3_sep_240_sep_1_sep_256_sep_0: X
v_sep_fail_1487_sep_261_sep_0: X
v_sep_make_array_1030_sep_203_sep_1: X
v_sep_make_array_1030_sep_203_sep_2_sep_215_sep_0: X
v_sep_make_array_1030_sep_242_sep_1: X
v_sep_make_array_1030_sep_242_sep_2_sep_254_sep_0: X
....
v_sep_array_max_1033_sep_198_sep_1: X
v_sep_array_max_1033_sep_198_sep_2_sep_201_sep_0: X
v_sep_array_max_1033_sep_198_sep_2_sep_201_sep_1_sep_217_sep_0: X
v_sep_array_max_1033_sep_198_sep_3_sep_233_sep_0: (X) & (X) & (X) & (X) & (X)
v_sep_array_max_1033_sep_221_sep_1: X
v_sep_array_max_1033_sep_221_sep_3_sep_224_sep_0: (X) & (X) & (X) & (X) & (X)
v_sep_check_1148_sep_237_sep_2: (X) & (X) & (X)
v_sep_check_1148_sep_237_sep_3_sep_240_sep_0: X
v_sep_check_1148_sep_237_sep_3_sep_240_sep_1_sep_256_sep_0: X
v_sep_fail_1487_sep_261_sep_0: X
v_sep_make_array_1030_sep_203_sep_1: X
v_sep_make_array_1030_sep_203_sep_2_sep_215_sep_0: X
v_sep_make_array_1030_sep_242_sep_1: X
v_sep_make_array_1030_sep_242_sep_2_sep_254_sep_0: X
........
v_sep_array_max_1033_sep_198_sep_1: X
v_sep_array_max_1033_sep_198_sep_2_sep_201_sep_0: X
v_sep_array_max_1033_sep_198_sep_2_sep_201_sep_1_sep_217_sep_0: X
v_sep_array_max_1033_sep_198_sep_3_sep_233_sep_0: (X) & (X) & (X) & (X) & (X)
v_sep_array_max_1033_sep_221_sep_1: X
v_sep_array_max_1033_sep_221_sep_3_sep_224_sep_0: (X) & (X) & (X) & (X) & (X)
v_sep_check_1148_sep_237_sep_2: (X) & (X) & (X)
v_sep_check_1148_sep_237_sep_3_sep_240_sep_0: X
v_sep_check_1148_sep_237_sep_3_sep_240_sep_1_sep_256_sep_0: X
v_sep_fail_1487_sep_261_sep_0: X
v_sep_make_array_1030_sep_203_sep_1: X
v_sep_make_array_1030_sep_203_sep_2_sep_215_sep_0: X
v_sep_make_array_1030_sep_242_sep_1: X
v_sep_make_array_1030_sep_242_sep_2_sep_254_sep_0: X
................
v_sep_array_max_1033_sep_198_sep_1: X
v_sep_array_max_1033_sep_198_sep_2_sep_201_sep_0: X
v_sep_array_max_1033_sep_198_sep_2_sep_201_sep_1_sep_217_sep_0: X
v_sep_array_max_1033_sep_198_sep_3_sep_233_sep_0: (X) & (X) & (X) & (X) & (X)
v_sep_array_max_1033_sep_221_sep_1: X
v_sep_array_max_1033_sep_221_sep_3_sep_224_sep_0: (X) & (X) & (X) & (X) & (X)
v_sep_check_1148_sep_237_sep_2: (X) & (X) & (X)
v_sep_check_1148_sep_237_sep_3_sep_240_sep_0: X
v_sep_check_1148_sep_237_sep_3_sep_240_sep_1_sep_256_sep_0: X
v_sep_fail_1487_sep_261_sep_0: X
v_sep_make_array_1030_sep_203_sep_1: X
v_sep_make_array_1030_sep_203_sep_2_sep_215_sep_0: X
v_sep_make_array_1030_sep_242_sep_1: X
v_sep_make_array_1030_sep_242_sep_2_sep_254_sep_0: X
.........................
v_sep_array_max_1033_sep_198_sep_1: X
v_sep_array_max_1033_sep_198_sep_2_sep_201_sep_0: X
v_sep_array_max_1033_sep_198_sep_2_sep_201_sep_1_sep_217_sep_0: X
v_sep_array_max_1033_sep_198_sep_3_sep_233_sep_0: (X) & (X) & (X) & (X) & (X)
v_sep_array_max_1033_sep_221_sep_1: X
v_sep_array_max_1033_sep_221_sep_3_sep_224_sep_0: (X) & (X) & (X) & (X) & (X)
v_sep_check_1148_sep_237_sep_2: (X) & (X) & (X)
v_sep_check_1148_sep_237_sep_3_sep_240_sep_0: X
v_sep_check_1148_sep_237_sep_3_sep_240_sep_1_sep_256_sep_0: X
v_sep_fail_1487_sep_261_sep_0: X
v_sep_make_array_1030_sep_203_sep_1: X
v_sep_make_array_1030_sep_203_sep_2_sep_215_sep_0: X
v_sep_make_array_1030_sep_242_sep_1: X
v_sep_make_array_1030_sep_242_sep_2_sep_254_sep_0: X
.................................
v_sep_array_max_1033_sep_198_sep_1: X
v_sep_array_max_1033_sep_198_sep_2_sep_201_sep_0: X
v_sep_array_max_1033_sep_198_sep_2_sep_201_sep_1_sep_217_sep_0: X
v_sep_array_max_1033_sep_198_sep_3_sep_233_sep_0: (X) & (X) & (X) & (X) & (X)
v_sep_array_max_1033_sep_221_sep_1: X
v_sep_array_max_1033_sep_221_sep_3_sep_224_sep_0: (X) & (X) & (X) & (X) & (X)
v_sep_check_1148_sep_237_sep_2: (X) & (X) & (X)
v_sep_check_1148_sep_237_sep_3_sep_240_sep_0: X
v_sep_check_1148_sep_237_sep_3_sep_240_sep_1_sep_256_sep_0: X
v_sep_fail_1487_sep_261_sep_0: X
v_sep_make_array_1030_sep_203_sep_1: X
v_sep_make_array_1030_sep_203_sep_2_sep_215_sep_0: X
v_sep_make_array_1030_sep_242_sep_1: X
v_sep_make_array_1030_sep_242_sep_2_sep_254_sep_0: X
....................................
v_sep_array_max_1033_sep_198_sep_1: X
v_sep_array_max_1033_sep_198_sep_2_sep_201_sep_0: X
v_sep_array_max_1033_sep_198_sep_2_sep_201_sep_1_sep_217_sep_0: X
v_sep_array_max_1033_sep_198_sep_3_sep_233_sep_0: (X) & (X) & (X) & (X) & (X)
v_sep_array_max_1033_sep_221_sep_1: X
v_sep_array_max_1033_sep_221_sep_3_sep_224_sep_0: (X) & (X) & (X) & (X) & (X)
v_sep_check_1148_sep_237_sep_2: (X) & (X) & (X)
v_sep_check_1148_sep_237_sep_3_sep_240_sep_0: X
v_sep_check_1148_sep_237_sep_3_sep_240_sep_1_sep_256_sep_0: X
v_sep_fail_1487_sep_261_sep_0: X
v_sep_make_array_1030_sep_203_sep_1: X
v_sep_make_array_1030_sep_203_sep_2_sep_215_sep_0: X
v_sep_make_array_1030_sep_242_sep_1: X
v_sep_make_array_1030_sep_242_sep_2_sep_254_sep_0: X
........................................
v_sep_array_max_1033_sep_198_sep_1: X
v_sep_array_max_1033_sep_198_sep_2_sep_201_sep_0: X
v_sep_array_max_1033_sep_198_sep_2_sep_201_sep_1_sep_217_sep_0: X
v_sep_array_max_1033_sep_198_sep_3_sep_233_sep_0: (X) & (X) & (X) & (X) & (X)
v_sep_array_max_1033_sep_221_sep_1: X
v_sep_array_max_1033_sep_221_sep_3_sep_224_sep_0: (X) & (X) & (X) & (X) & (X)
v_sep_check_1148_sep_237_sep_2: (X) & (X) & (X)
v_sep_check_1148_sep_237_sep_3_sep_240_sep_0: X
v_sep_check_1148_sep_237_sep_3_sep_240_sep_1_sep_256_sep_0: X
v_sep_fail_1487_sep_261_sep_0: X
v_sep_make_array_1030_sep_203_sep_1: X
v_sep_make_array_1030_sep_203_sep_2_sep_215_sep_0: X
v_sep_make_array_1030_sep_242_sep_1: X
v_sep_make_array_1030_sep_242_sep_2_sep_254_sep_0: X
.........................................(0=0) & (v_sep_fail_1487_sep_261_sep_0($1106)) -> 1=0.
(($1106-1=0) & ($1107-$1108>0) & ($1109-$1110<0)) & (v_sep_check_1148_sep_237_sep_3_sep_240_sep_1_sep_256_sep_0($1110,$1109,$1108,$1109,$1107)) & (v_sep_check_1148_sep_237_sep_2($1110,$1109,$1108)) -> v_sep_fail_1487_sep_261_sep_0($1106).
(($1111=0) & ($1112=0)) & (v_sep_check_1148_sep_237_sep_2($1113,$1111,$1114)) & (v_sep_make_array_1030_sep_242_sep_2_sep_254_sep_0($1113,$1115,$1116)) & (v_sep_array_max_1033_sep_198_sep_3_sep_233_sep_0($1113,$1112,$1114)) -> v_sep_check_1148_sep_237_sep_3_sep_240_sep_1_sep_256_sep_0($1113,$1111,$1114,$1115,$1116).
((-$1117<=0) & ($1117-$1118<0) & (-$1117+$1119=0)) & (v_sep_make_array_1030_sep_242_sep_1($1118,$1117)) -> v_sep_make_array_1030_sep_242_sep_2_sep_254_sep_0($1118,$1117,$1119).
(($1120=0) & ($1121=0)) & (v_sep_check_1148_sep_237_sep_3_sep_240_sep_0($1118,$1121,$1114,$1117)) & (v_sep_array_max_1033_sep_198_sep_3_sep_233_sep_0($1118,$1120,$1114)) -> v_sep_make_array_1030_sep_242_sep_1($1118,$1117).
(($1111-$1113<0) & (-$1111+$1115=0)) & (v_sep_check_1148_sep_237_sep_2($1113,$1111,$1114)) -> v_sep_check_1148_sep_237_sep_3_sep_240_sep_0($1113,$1111,$1114,$1115).
(($1111=0) & ($1122=0)) & (v_sep_array_max_1033_sep_198_sep_3_sep_233_sep_0($1113,$1122,$1114)) -> v_sep_check_1148_sep_237_sep_2($1113,$1111,$1114).
(($1123-$1124>0) & ($1125-$1126<0) & (-$1125+$1127-1=0)) & (v_sep_array_max_1033_sep_221_sep_3_sep_224_sep_0($1126,$1127,$1124)) & (v_sep_array_max_1033_sep_198_sep_2_sep_201_sep_1_sep_217_sep_0($1126,$1125,$1125,$1123)) & (v_sep_array_max_1033_sep_198_sep_1($1126,$1125)) -> v_sep_array_max_1033_sep_198_sep_3_sep_233_sep_0($1126,$1125,$1123).
(($1128=0) & ($1129-$1130>=0)) & (v_sep_array_max_1033_sep_221_sep_1($1130,$1129)) -> v_sep_array_max_1033_sep_221_sep_3_sep_224_sep_0($1130,$1129,$1128).
(($1129-$1130-1<0) & (-$1129+$1131+1=0) & (-$1129+$1132+1=0) & (-$1129+$1133+1=0)) & (v_sep_array_max_1033_sep_198_sep_2_sep_201_sep_1_sep_217_sep_0($1130,$1132,$1133,$1134)) & (v_sep_array_max_1033_sep_198_sep_1($1130,$1131)) -> v_sep_array_max_1033_sep_221_sep_1($1130,$1129).
($1125=0) & (v_sep_array_max_1033_sep_198_sep_1($1126,$1125)) & (v_sep_make_array_1030_sep_203_sep_2_sep_215_sep_0($1126,$1135,$1136)) -> v_sep_array_max_1033_sep_198_sep_2_sep_201_sep_1_sep_217_sep_0($1126,$1125,$1135,$1136).
((-$1137<=0) & ($1137-$1138<0) & (-$1137+$1139=0)) & (v_sep_make_array_1030_sep_203_sep_1($1138,$1137)) -> v_sep_make_array_1030_sep_203_sep_2_sep_215_sep_0($1138,$1137,$1139).
($1140=0) & (v_sep_array_max_1033_sep_198_sep_2_sep_201_sep_0($1138,$1140,$1137)) -> v_sep_make_array_1030_sep_203_sep_1($1138,$1137).
(($1125-$1126<0) & (-$1125+$1135=0)) & (v_sep_array_max_1033_sep_198_sep_1($1126,$1125)) -> v_sep_array_max_1033_sep_198_sep_2_sep_201_sep_0($1126,$1125,$1135).
$1125=0 -> v_sep_array_max_1033_sep_198_sep_1($1126,$1125).

        solution:
          P[<array_max_1033@198:1>]($1206:int,$1208:int) = true
          P[<<array_max_1033@198:2>@201:0>]($1228:int,$1230:int,$1232:int) = true
          P[<<<array_max_1033@198:2>@201:1>@217:0>]($1197:int,$1199:int,$1201:int,$1203:int) = true
          P[<<array_max_1033@198:3>@233:0>]($1169:int,$1171:int,$1173:int) = (1 <= $1173)
          P[<array_max_1033@221:1>]($1211:int,$1213:int) = true
          P[<<array_max_1033@221:3>@224:0>]($1190:int,$1192:int,$1194:int) = (0 <= $1194)
          P[<check_1148@237:2>]($1155:int,$1157:int,$1159:int) = ((1 + $1157) <= $1159)
          P[<<check_1148@237:3>@240:0>]($1181:int,$1183:int,$1185:int,$1187:int) = true
          P[<<<check_1148@237:3>@240:1>@256:0>]($1144:int,$1146:int,$1148:int,$1150:int,$1152:int) = ($1152 <= $1150)
          P[<fail_1487@261:0>]($1141:bool) = false
          P[<make_array_1030@203:1>]($1223:int,$1225:int) = true
          P[<<make_array_1030@203:2>@215:0>]($1216:int,$1218:int,$1220:int) = true
          P[<make_array_1030@242:1>]($1176:int,$1178:int) = true
          P[<<make_array_1030@242:2>@254:0>]($1162:int,$1164:int,$1166:int) = ($1166 <= $1164)
        
      end HcSolver.solve_ub(469143)[4] (0.500924 sec.)
      begin HcSolver.check_validity(470064)[4]
        input:
          P[<fail_1487@261:0>](<fail_1487@261:0>:bool)|- bot
          
          P[<check_1148@237:2>](<f_check_1482@258:2>:int,<f_check_1482@258:0>:int,<f_check_1482@258:1>:int),
          P[<<<check_1148@237:3>@240:1>@256:0>](<f_check_1482@258:2>:int,<f_check_1482@258:0>:int,<f_check_1482@258:1>:int,<f_check_1482@258:0>:int,<f_check_1482@258:5>:int),
          ((<f_check_1482@258:5> > <f_check_1482@258:1>) &&
           ((<f_check_1482@258:0> < <f_check_1482@258:2>) && <fail_1487@261:0>))
          |- P[<fail_1487@261:0>](<fail_1487@261:0>:bool)
          
          P[<<array_max_1033@198:3>@233:0>](<check_1148@237:0>:int,0:int,<check_1148@237:2>:int),
          P[<<make_array_1030@242:2>@254:0>](<check_1148@237:0>:int,<<check_1148@237:3>@240:0>:int,<<<check_1148@237:3>@240:1>@256:0>:int),
          P[<check_1148@237:2>](<check_1148@237:0>:int,<check_1148@237:1>:int,<check_1148@237:2>:int),
          (<check_1148@237:1> = 0)
          |- P[<<<check_1148@237:3>@240:1>@256:0>](<check_1148@237:0>:int,
                                                   <check_1148@237:1>:int,
                                                   <check_1148@237:2>:int,
                                                   <<check_1148@237:3>@240:0>:int,
                                                   <<<check_1148@237:3>@240:1>@256:0>:int)
          
          P[<make_array_1030@242:1>](<make_array_1030@242:0>:int,<make_array_1030@242:1>:int),
          ((0 <= <make_array_1030@242:1>) &&
           ((<make_array_1030@242:1> < <make_array_1030@242:0>) &&
            (<<make_array_1030@242:2>@254:0> = <make_array_1030@242:1>)))
          |- P[<<make_array_1030@242:2>@254:0>](<make_array_1030@242:0>:int,
                                                <make_array_1030@242:1>:int,
                                                <<make_array_1030@242:2>@254:0>:int)
          
          P[<<array_max_1033@198:3>@233:0>](<make_array_1030@242:0>:int,0:int,<check_1148@237:2>:int),
          P[<<check_1148@237:3>@240:0>](<make_array_1030@242:0>:int,0:int,<check_1148@237:2>:int,<make_array_1030@242:1>:int)|- P[<make_array_1030@242:1>](
          <make_array_1030@242:0>:int,<make_array_1030@242:1>:int)
          
          P[<check_1148@237:2>](<check_1148@237:0>:int,<check_1148@237:1>:int,<check_1148@237:2>:int),
          ((<check_1148@237:1> < <check_1148@237:0>) && (<<check_1148@237:3>@240:0> = <check_1148@237:1>))
          |- P[<<check_1148@237:3>@240:0>](<check_1148@237:0>:int,<check_1148@237:1>:int,
                                           <check_1148@237:2>:int,<<check_1148@237:3>@240:0>:int)
          
          P[<<array_max_1033@198:3>@233:0>](<check_1148@237:0>:int,0:int,<check_1148@237:2>:int),
          (<check_1148@237:1> = 0)
          |- P[<check_1148@237:2>](<check_1148@237:0>:int,<check_1148@237:1>:int,
                                   <check_1148@237:2>:int)
          
          P[<array_max_1033@198:1>](<array_max_1033@198:0>:int,<array_max_1033@198:1>:int),
          P[<<<array_max_1033@198:2>@201:1>@217:0>](<array_max_1033@198:0>:int,<array_max_1033@198:1>:int,<array_max_1033@198:1>:int,<<array_max_1033@198:3>@233:0>:int),
          P[<<array_max_1033@221:3>@224:0>](<array_max_1033@198:0>:int,(
                                            1 + <array_max_1033@198:1>):int,var676:int),
          ((<<array_max_1033@198:3>@233:0> > var676) && (<array_max_1033@198:1> < <array_max_1033@198:0>))
          |- P[<<array_max_1033@198:3>@233:0>](<array_max_1033@198:0>:int,
                                               <array_max_1033@198:1>:int,
                                               <<array_max_1033@198:3>@233:0>:int)
          
          P[<array_max_1033@221:1>](<array_max_1033@221:0>:int,<array_max_1033@221:1>:int),
          ((<<array_max_1033@221:3>@224:0> = 0) && (<array_max_1033@221:1> >= <array_max_1033@221:0>))
          |- P[<<array_max_1033@221:3>@224:0>](<array_max_1033@221:0>:int,
                                               <array_max_1033@221:1>:int,
                                               <<array_max_1033@221:3>@224:0>:int)
          
          P[<array_max_1033@198:1>](<array_max_1033@221:0>:int,(-1 + <array_max_1033@221:1>):int),
          P[<<<array_max_1033@198:2>@201:1>@217:0>](<array_max_1033@221:0>:int,(
                                                    -1 + <array_max_1033@221:1>):int,(
                                                    -1 + <array_max_1033@221:1>):int,<f_array_max_1480@219:4>:int),
          (<array_max_1033@221:1> < (1 + <array_max_1033@221:0>))
          |- P[<array_max_1033@221:1>](<array_max_1033@221:0>:int,<array_max_1033@221:1>:int)
          
          P[<<make_array_1030@203:2>@215:0>](<array_max_1033@198:0>:int,<<array_max_1033@198:2>@201:0>:int,<<<array_max_1033@198:2>@201:1>@217:0>:int),
          P[<array_max_1033@198:1>](<array_max_1033@198:0>:int,<array_max_1033@198:1>:int),
          (<array_max_1033@198:1> = 0)
          |- P[<<<array_max_1033@198:2>@201:1>@217:0>](<array_max_1033@198:0>:int,
                                                       <array_max_1033@198:1>:int,
                                                       <<array_max_1033@198:2>@201:0>:int,
                                                       <<<array_max_1033@198:2>@201:1>@217:0>:int)
          
          P[<make_array_1030@203:1>](<make_array_1030@203:0>:int,<make_array_1030@203:1>:int),
          ((0 <= <make_array_1030@203:1>) &&
           ((<make_array_1030@203:1> < <make_array_1030@203:0>) &&
            (<<make_array_1030@203:2>@215:0> = <make_array_1030@203:1>)))
          |- P[<<make_array_1030@203:2>@215:0>](<make_array_1030@203:0>:int,
                                                <make_array_1030@203:1>:int,
                                                <<make_array_1030@203:2>@215:0>:int)
          
          P[<<array_max_1033@198:2>@201:0>](<make_array_1030@203:0>:int,0:int,<make_array_1030@203:1>:int)|- P[<make_array_1030@203:1>](
          <make_array_1030@203:0>:int,<make_array_1030@203:1>:int)
          
          P[<array_max_1033@198:1>](<array_max_1033@198:0>:int,<array_max_1033@198:1>:int),
          ((<array_max_1033@198:1> < <array_max_1033@198:0>) &&
           (<<array_max_1033@198:2>@201:0> = <array_max_1033@198:1>))
          |- P[<<array_max_1033@198:2>@201:0>](<array_max_1033@198:0>:int,
                                               <array_max_1033@198:1>:int,
                                               <<array_max_1033@198:2>@201:0>:int)
          
           (<array_max_1033@198:1> = 0)
          |- P[<array_max_1033@198:1>](<array_max_1033@198:0>:int,<array_max_1033@198:1>:int)
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        
      end HcSolver.check_validity(470064)[4] (0.011998 sec.)
      solution:
        P[<array_max_1033@198:1>]($1206:int,$1208:int) = true
        P[<<array_max_1033@198:2>@201:0>]($1228:int,$1230:int,$1232:int) = true
        P[<<<array_max_1033@198:2>@201:1>@217:0>]($1197:int,$1199:int,$1201:int,$1203:int) = true
        P[<<array_max_1033@198:3>@233:0>]($1169:int,$1171:int,$1173:int) = (1 <= $1173)
        P[<array_max_1033@221:1>]($1211:int,$1213:int) = true
        P[<<array_max_1033@221:3>@224:0>]($1190:int,$1192:int,$1194:int) = (0 <= $1194)
        P[<check_1148@237:2>]($1155:int,$1157:int,$1159:int) = ((1 + $1157) <= $1159)
        P[<<check_1148@237:3>@240:0>]($1181:int,$1183:int,$1185:int,$1187:int) = true
        P[<<<check_1148@237:3>@240:1>@256:0>]($1144:int,$1146:int,$1148:int,$1150:int,$1152:int) = ($1152 <= $1150)
        P[<fail_1487@261:0>]($1141:bool) = false
        P[<make_array_1030@203:1>]($1223:int,$1225:int) = true
        P[<<make_array_1030@203:2>@215:0>]($1216:int,$1218:int,$1220:int) = true
        P[<make_array_1030@242:1>]($1176:int,$1178:int) = true
        P[<<make_array_1030@242:2>@254:0>]($1162:int,$1164:int,$1166:int) = ($1166 <= $1164)
    end YhornInterface.solve(469142)[3] (0.513922 sec.)
    
  end RefTypeInfer.infer_etrs(299233)[2] (1.889714 sec.)
  refinement types:
    main_1479: X
    f_1484: v1:int -> X
    main_1044: v1:int -> (v2:unit -> X) -> X
    array_max_1033: v1:int ->
                    v2:int ->
                    (v3:int -> (v4:{v4:int | ((v2 + v4) <= v3)} -> X) -> X) -> (v7:{v7:int | (1 <= v2)} -> X) -> X
    make_array_1030: v1:int -> v2:int -> (v3:{v3:int | (v3 <= v2)} -> X) -> X
    k_make_array_u_1182: v1:int -> v2:int -> (v3:int -> X) -> v5:bool -> X
    k_make_array_u_1193: v1:int -> v2:int -> (v3:int -> X) -> v5:unit -> X
    f_array_max_1480: v1:int -> v2:int -> (v3:int -> (v4:int -> X) -> X) -> (v7:int -> X) -> v9:int -> X
    array_max_1033: v1:int -> v2:int -> (v3:int -> (v4:int -> X) -> X) -> (v7:{v7:int | (0 <= v7)} -> X) -> X
    f_array_max_1481: v1:int -> v2:int -> v3:int -> (v4:int -> X) -> v6:int -> X
    f_main_1483: v1:int -> (v2:unit -> X) -> v4:int -> X
    check_1148: v1:int ->
                v2:int ->
                v3:{v3:int | false} -> (v4:{v4:int | false} -> (v5:{v5:int | false} -> X) -> X) -> (v8:unit -> X) -> X
    make_array_1030: v1:int -> v2:int -> (v3:int -> X) -> X
    k_make_array_u_1182: v1:int -> v2:int -> (v3:int -> X) -> v5:bool -> X
    k_make_array_u_1193: v1:int -> v2:int -> (v3:int -> X) -> v5:unit -> X
    f_check_1482: v1:int -> v2:int -> v3:int -> (v4:int -> (v5:int -> X) -> X) -> (v8:unit -> X) -> v10:int -> X
    fail_1487: v1:{v1:bool | false} -> (v2:unit -> X) -> X
    f_1485: var1272:int -> var1271:unit -> X
    fail_1486: var1276:bool -> (var1275:unit -> X) -> X
    k_check_u_1336: var1287:int ->
                    var1286:int ->
                    var1285:int -> (var1284:int -> (var1283:int -> X) -> X) -> (var1280:unit -> X) -> var1278:unit -> X
  abstraction types:
    main_1479: X
    f_1484: v1:int -> X
    main_1044: v1:int -> (v2:unit -> X) -> X
    array_max_1033: var1288:int ->
                    var1289:int ->
                    (var1290:int -> (var1291:int[var1291 -> ((var1289 + var1291) <= var1290)] -> X) -> X) ->
                    (var1294:int[var1294 -> (1 <= var1289),
                                 var1294 -> (0 <= var1294)] -> X) -> X
    make_array_1030: var1297:int -> var1298:int -> (var1299:int[var1299 -> (
                                                                var1299 <= var1298)] -> X) -> X
    k_make_array_u_1182: var1302:int -> var1303:int -> (var1304:int -> X) -> var1306:bool -> X
    k_make_array_u_1193: var1308:int -> var1309:int -> (var1310:int -> X) -> var1312:unit -> X
    f_array_max_1480: v1:int -> v2:int -> (v3:int -> (v4:int -> X) -> X) -> (v7:int -> X) -> v9:int -> X
    f_array_max_1481: v1:int -> v2:int -> v3:int -> (v4:int -> X) -> v6:int -> X
    f_main_1483: v1:int -> (v2:unit -> X) -> v4:int -> X
    check_1148: v1:int -> v2:int -> v3:int -> (v4:int -> (v5:int -> X) -> X) -> (v8:unit -> X) -> X
    f_check_1482: v1:int -> v2:int -> v3:int -> (v4:int -> (v5:int -> X) -> X) -> (v8:unit -> X) -> v10:int -> X
    fail_1487: v1:bool -> (v2:unit -> X) -> X
    f_1485: var1272:int -> var1271:unit -> X
    fail_1486: var1276:bool -> (var1275:unit -> X) -> X
    k_check_u_1336: var1287:int ->
                    var1286:int ->
                    var1285:int -> (var1284:int -> (var1283:int -> X) -> X) -> (var1280:unit -> X) -> var1278:unit -> X
  
end AbsTypeInfer.refine(299232)[1] (1.903711 sec.)
DONE!

Prefix of spurious counter-example::
0; 0; 0; 1; 0; 0; 0; 0; 0; 0

Program with abstraction types (CEGAR-cycle 6)::
Main: main_1479
  main_1479 -> (rand_int f_1484)
  array_max_1033 n_1034 i_1035 a_1036 k_array_max_1226 when (i_1035 >= n_1034) -> (k_array_max_1226 0)
  array_max_1033 n_1034 i_1035 a_1036 k_array_max_1226 when (not (i_1035 >= n_1034)) ->
      (a_1036 i_1035 (f_array_max_1480 i_1035 n_1034 a_1036 k_array_max_1226))
  check_1148 n_1040 i_1041 max_1042 a_1043 k_check_1309 when (i_1041 >= n_1040) -> (k_check_1309 ())
  check_1148 n_1040 i_1041 max_1042 a_1043 k_check_1309 when (not (i_1041 >= n_1040)) ->
      (a_1043 i_1041 (f_check_1482 i_1041 max_1042 n_1040 a_1043 k_check_1309))
  f_1484 x_1454 -> (main_1044 x_1454 (f_1485 x_1454))
  f_1485 x_1454 x_1451 -> end
  f_array_max_1480 i_1035 n_1034 a_1036 k_array_max_1226 x_1229 ->
      (array_max_1033 n_1034 (i_1035 + 1) a_1036 (f_array_max_1481 i_1035 n_1034 x_1229 k_array_max_1226))
  f_array_max_1481 i_1035 n_1034 x_1229 k_array_max_1226 x_1242 when (x_1229 > x_1242) -> (k_array_max_1226 x_1229)
  f_array_max_1481 i_1035 n_1034 x_1229 k_array_max_1226 x_1242 when (
      not (x_1229 > x_1242)) -> (k_array_max_1226 x_1242)
  f_check_1482 i_1041 max_1042 n_1040 a_1043 k_check_1309 x_1315 when (
      x_1315 <= max_1042) -> (k_check_u_1336 i_1041 max_1042 n_1040 a_1043 k_check_1309 ())
  f_check_1482 i_1041 max_1042 n_1040 a_1043 k_check_1309 x_1315 when (
      not (x_1315 <= max_1042)) -> (fail_1487 true (k_check_u_1336 i_1041 max_1042 n_1040 a_1043 k_check_1309))
  f_main_1483 n_1045 k_main_1380 x_1399 -> (check_1148 n_1045 0 x_1399 (make_array_1030 n_1045) k_main_1380)
  fail_1486 b k -> {fail} => (k ())
  fail_1487 b k -> {fail} => (k ())
  k_check_u_1336 i_1041 max_1042 n_1040 a_1043 k_check_1309 x_1312 ->
      (check_1148 n_1040 (i_1041 + 1) max_1042 a_1043 k_check_1309)
  k_make_array_u_1182 i_1032 n_1031 k_make_array_1176 b_1194 when b_1194 ->
      (k_make_array_u_1193 i_1032 n_1031 k_make_array_1176 ())
  k_make_array_u_1182 i_1032 n_1031 k_make_array_1176 b_1194 when (not b_1194) ->
      (fail_1486 true (k_make_array_u_1193 i_1032 n_1031 k_make_array_1176))
  k_make_array_u_1193 i_1032 n_1031 k_make_array_1176 x_1179 -> (k_make_array_1176 i_1032)
  main_1044 n_1045 k_main_1380 -> (array_max_1033 n_1045 0 (make_array_1030 n_1045) (f_main_1483 n_1045 k_main_1380))
  make_array_1030 n_1031 i_1032 k_make_array_1176 when (0 <= i_1032) ->
      (k_make_array_u_1182 i_1032 n_1031 k_make_array_1176 (i_1032 < n_1031))
  make_array_1030 n_1031 i_1032 k_make_array_1176 when (not (0 <= i_1032)) ->
      (k_make_array_u_1182 i_1032 n_1031 k_make_array_1176 false)
Types:
  main_1479 : X
  array_max_1033 : (x_1:int ->
                    x_2:int[x_2 <= 0; x_2 >= 0] ->
                    (x_4:int[x_1 >= x_4 + 1; x_4 >= 0] -> (x_6:int[x_2 <= x_4 - x_6] -> X) -> X) ->
                    (x_10:int[x_10 >= 0; x_2 >= 1; x_1 <= 0] -> X) -> X)
  check_1148 : (x_1:int ->
                x_2:int ->
                int[x_2 >= 0; x_1 <= x_2] -> (x_5:int[x_1 >= x_5 + 1; x_5 >= 0] -> (int -> X) -> X) -> (unit -> X) -> X)
  fail_1486 : (x_1:bool[x_1] -> (unit -> X) -> X)
  fail_1487 : (x_1:bool[x_1] -> (unit -> X) -> X)
  make_array_1030 : (x_1:int -> x_2:int[x_1 >= x_2 + 1; x_2 >= 0] -> (x_4:int[x_2 >= x_4] -> X) -> X)
  
(6-1) Abstracting ... DONE!

(6-2) Checking HORS ... DONE!

Error trace::
  main_1479 ... --> 
  f_1484 ... --> 
  main_1044 ... --> 
  array_max_1033 [2/2] ... --> 
  make_array_1030 [1/2] ... --> 
  k_make_array_u_1182 [1/2] ... --> 
  k_make_array_u_1193 ... --> 
  f_array_max_1480 ... --> 
  array_max_1033 [1/2] ... --> 
  f_array_max_1481 [2/2] ... --> 
  f_main_1483 ... --> 
  check_1148 [2/2] ... --> 
  make_array_1030 [1/2] ... --> 
  k_make_array_u_1182 [1/2] ... --> 
  k_make_array_u_1193 ... --> 
  f_check_1482 [2/2] ... --> 
  fail_1487 ... --> fail -->
  ERROR!

Spurious counter-example::
  0; 0; 0; 1; 0; 0; 0; 0; 0; 1; 0; 1; 0; 0; 0; 1; 0

(6-3) Checking counter-example ... DONE!

(6-4) Discovering predicates ... 
begin AbsTypeInfer.refine(478805)[1]
  program:
    main_1479  | true = ((Random.int 0) f_1484)
    array_max_1033 n_1034 i_1035 a_1036 k_array_max_1226 | (i_1035 >= n_1034) = (
    k_array_max_1226 0)
    array_max_1033 n_1034 i_1035 a_1036 k_array_max_1226 | (not (i_1035 >= n_1034)) = (
    a_1036 i_1035
           (f_array_max_1480 i_1035
                             n_1034
                             a_1036
                             k_array_max_1226))
    check_1148 n_1040 i_1041 max_1042 a_1043 k_check_1309 | (i_1041 >= n_1040) = (
    k_check_1309 ())
    check_1148 n_1040 i_1041 max_1042 a_1043 k_check_1309 | (not (i_1041 >= n_1040)) = (
    a_1043 i_1041
           (f_check_1482 i_1041
                         max_1042
                         n_1040
                         a_1043
                         k_check_1309))
    f_1484 x_1454 | true = (main_1044 x_1454
                                      (f_1485 x_1454))
    f_1485 x_1454 x_1451 | true = end
    f_array_max_1480 i_1035 n_1034 a_1036 k_array_max_1226 x_1229 | true = (
    array_max_1033 n_1034
                   (i_1035 + 1)
                   a_1036
                   (f_array_max_1481 i_1035
                                     n_1034
                                     x_1229
                                     k_array_max_1226))
    f_array_max_1481 i_1035 n_1034 x_1229 k_array_max_1226 x_1242 | (
    x_1229 > x_1242) = (k_array_max_1226 x_1229)
    f_array_max_1481 i_1035 n_1034 x_1229 k_array_max_1226 x_1242 | (
    not (x_1229 > x_1242)) = (k_array_max_1226 x_1242)
    f_check_1482 i_1041 max_1042 n_1040 a_1043 k_check_1309 x_1315 | (
    x_1315 <= max_1042) = (k_check_u_1336 i_1041
                                          max_1042
                                          n_1040
                                          a_1043
                                          k_check_1309
                                          ())
    f_check_1482 i_1041 max_1042 n_1040 a_1043 k_check_1309 x_1315 | (
    not (x_1315 <= max_1042)) = (fail_1487 true
                                           (k_check_u_1336 i_1041
                                                           max_1042
                                                           n_1040
                                                           a_1043
                                                           k_check_1309))
    f_main_1483 n_1045 k_main_1380 x_1399 | true = (check_1148 n_1045
                                                               0
                                                               x_1399
                                                               (make_array_1030 n_1045)
                                                               k_main_1380)
    fail_1486 b k | true = (fail ())
    fail_1487 b k | true = (fail ())
    k_check_u_1336 i_1041 max_1042 n_1040 a_1043 k_check_1309 x_1312 | true = (
    check_1148 n_1040
               (i_1041 + 1)
               max_1042
               a_1043
               k_check_1309)
    k_make_array_u_1182 i_1032 n_1031 k_make_array_1176 b_1194 | b_1194 = (
    k_make_array_u_1193 i_1032
                        n_1031
                        k_make_array_1176
                        ())
    k_make_array_u_1182 i_1032 n_1031 k_make_array_1176 b_1194 | (not b_1194) = (
    fail_1486 true
              (k_make_array_u_1193 i_1032
                                   n_1031
                                   k_make_array_1176))
    k_make_array_u_1193 i_1032 n_1031 k_make_array_1176 x_1179 | true = (
    k_make_array_1176 i_1032)
    main_1044 n_1045 k_main_1380 | true = (array_max_1033
                                             n_1045
                                             0
                                             (make_array_1030 n_1045)
                                             (f_main_1483 n_1045
                                                          k_main_1380))
    make_array_1030 n_1031 i_1032 k_make_array_1176 | (0 <= i_1032) = (
    k_make_array_u_1182 i_1032
                        n_1031
                        k_make_array_1176
                        (i_1032 < n_1031))
    make_array_1030 n_1031 i_1032 k_make_array_1176 | (not (0 <= i_1032)) = (
    k_make_array_u_1182 i_1032
                        n_1031
                        k_make_array_1176
                        false)
    main_1479:X
    array_max_1033:int -> int -> (int -> (int -> X) -> X) -> (int -> X) -> X
    check_1148:int -> int -> int -> (int -> (int -> X) -> X) -> (unit -> X) -> X
    f_1484:int -> X
    f_1485:int -> unit -> X
    f_array_max_1480:int -> int -> (int -> (int -> X) -> X) -> (int -> X) -> int -> X
    f_array_max_1481:int -> int -> int -> (int -> X) -> int -> X
    f_check_1482:int -> int -> int -> (int -> (int -> X) -> X) -> (unit -> X) -> int -> X
    f_main_1483:int -> (unit -> X) -> int -> X
    fail_1486:bool -> (unit -> X) -> X
    fail_1487:bool -> (unit -> X) -> X
    k_check_u_1336:int -> int -> int -> (int -> (int -> X) -> X) -> (unit -> X) -> unit -> X
    k_make_array_u_1182:int -> int -> (int -> X) -> bool -> X
    k_make_array_u_1193:int -> int -> (int -> X) -> unit -> X
    main_1044:int -> (unit -> X) -> X
    make_array_1030:int -> int -> (int -> X) -> X
  inlined functions: f_1484,f_1485,f_array_max_1480,f_array_max_1481,f_check_1482,f_main_1483,k_check_u_1336,k_make_array_u_1182,k_make_array_u_1193,main_1044
  counterexample: 0:0:0:1:0:0:0:0:0:1:0:1:0:0:0:1:0
  error traces:
    [true.nop(<f_1484@267:0> = var1314)
     [true.(<main_1044@269:0> = <f_1484@267:0>)
      [true.((<array_max_1033@271:0> = <main_1044@269:0>) && (<array_max_1033@271:1> = 0))
       [(not (<array_max_1033@271:1> >= <array_max_1033@271:0>)).
        (<<array_max_1033@271:2>@274:0> = <array_max_1033@271:1>)
        [true.
         ((<make_array_1030@276:0> = <main_1044@269:0>) && (<make_array_1030@276:1> = <<array_max_1033@271:2>@274:0>))
         [(0 <= <make_array_1030@276:1>).
          ((<k_make_array_u_1182@279:0> = <make_array_1030@276:1>) &&
           ((<k_make_array_u_1182@279:1> = <make_array_1030@276:0>) &&
            (<k_make_array_u_1182@279:3> = (<make_array_1030@276:1> < <make_array_1030@276:0>))))
          [<k_make_array_u_1182@279:3>.
           ((<k_make_array_u_1193@282:0> = <k_make_array_u_1182@279:0>) &&
            ((<k_make_array_u_1193@282:1> = <k_make_array_u_1182@279:1>) && (<k_make_array_u_1193@282:3> = ())))
           [true.(<<k_make_array_u_1193@282:2>@284:0> = <k_make_array_u_1193@282:0>)
            [true.(<<k_make_array_u_1182@279:2>@286:0> = <<k_make_array_u_1193@282:2>@284:0>)
             [true.(<<make_array_1030@276:2>@288:0> = <<k_make_array_u_1182@279:2>@286:0>)
              [true.(<<<array_max_1033@271:2>@274:1>@290:0> = <<make_array_1030@276:2>@288:0>)
               [true.
                ((<f_array_max_1480@292:0> = <array_max_1033@271:1>) &&
                 ((<f_array_max_1480@292:1> = <array_max_1033@271:0>) &&
                  (<f_array_max_1480@292:4> = <<<array_max_1033@271:2>@274:1>@290:0>)))
                [true.
                 ((<array_max_1033@294:0> = <f_array_max_1480@292:1>) &&
                  (<array_max_1033@294:1> = (<f_array_max_1480@292:0> + 1)))
                 [(<array_max_1033@294:1> >= <array_max_1033@294:0>).(
                  <<array_max_1033@294:3>@297:0> = 0)
                  [true.
                   ((<f_array_max_1481@299:0> = <f_array_max_1480@292:0>) &&
                    ((<f_array_max_1481@299:1> = <f_array_max_1480@292:1>) &&
                     ((<f_array_max_1481@299:2> = <f_array_max_1480@292:4>) &&
                      (<f_array_max_1481@299:4> = <<array_max_1033@294:3>@297:0>))))
                   [(not (<f_array_max_1481@299:2> > <f_array_max_1481@299:4>)).
                    (<<f_array_max_1481@299:3>@302:0> = <f_array_max_1481@299:4>)
                    [true.(<<f_array_max_1480@292:3>@304:0> = <<f_array_max_1481@299:3>@302:0>)
                     [true.(<<array_max_1033@271:3>@306:0> = <<f_array_max_1480@292:3>@304:0>)
                      [true.
                       ((<f_main_1483@308:0> = <main_1044@269:0>) &&
                        (<f_main_1483@308:2> = <<array_max_1033@271:3>@306:0>))
                       [true.
                        ((<check_1148@310:0> = <f_main_1483@308:0>) &&
                         ((<check_1148@310:1> = 0) && (<check_1148@310:2> = <f_main_1483@308:2>)))
                        [(not (<check_1148@310:1> >= <check_1148@310:0>)).
                         (<<check_1148@310:3>@313:0> = <check_1148@310:1>)
                         [true.
                          ((<make_array_1030@315:0> = <f_main_1483@308:0>) &&
                           (<make_array_1030@315:1> = <<check_1148@310:3>@313:0>))
                          [(0 <= <make_array_1030@315:1>).
                           ((<k_make_array_u_1182@318:0> = <make_array_1030@315:1>) &&
                            ((<k_make_array_u_1182@318:1> = <make_array_1030@315:0>) &&
                             (<k_make_array_u_1182@318:3> = (<make_array_1030@315:1> < <make_array_1030@315:0>))))
                           [<k_make_array_u_1182@318:3>.
                            ((<k_make_array_u_1193@321:0> = <k_make_array_u_1182@318:0>) &&
                             ((<k_make_array_u_1193@321:1> = <k_make_array_u_1182@318:1>) &&
                              (<k_make_array_u_1193@321:3> = ())))
                            [true.(<<k_make_array_u_1193@321:2>@323:0> = <k_make_array_u_1193@321:0>)
                             [true.(<<k_make_array_u_1182@318:2>@325:0> = <<k_make_array_u_1193@321:2>@323:0>)
                              [true.(<<make_array_1030@315:2>@327:0> = <<k_make_array_u_1182@318:2>@325:0>)
                               [true.(<<<check_1148@310:3>@313:1>@329:0> = <<make_array_1030@315:2>@327:0>)
                                [true.
                                 ((<f_check_1482@331:0> = <check_1148@310:1>) &&
                                  ((<f_check_1482@331:1> = <check_1148@310:2>) &&
                                   ((<f_check_1482@331:2> = <check_1148@310:0>) &&
                                    (<f_check_1482@331:5> = <<<check_1148@310:3>@313:1>@329:0>))))
                                 [(not (<f_check_1482@331:5> <= <f_check_1482@331:1>)).(
                                  <fail_1487@334:0> = true)[true.error
  begin RefTypeInfer.infer_etrs(478806)[2]
    horn clauses:
      P[<fail_1487@334:0>](<fail_1487@334:0>:bool)|- bot
      
      P[<f_check_1482@331:5>](<f_check_1482@331:0>:int,<f_check_1482@331:1>:int,<f_check_1482@331:2>:int,<f_check_1482@331:5>:int),
      ((<f_check_1482@331:5> > <f_check_1482@331:1>) && <fail_1487@334:0>)
      |- P[<fail_1487@334:0>](<fail_1487@334:0>:bool)
      
      P[<check_1148@310:2>](<f_check_1482@331:2>:int,<f_check_1482@331:0>:int,<f_check_1482@331:1>:int),
      P[<<<check_1148@310:3>@313:1>@329:0>](<f_check_1482@331:2>:int,<f_check_1482@331:0>:int,<f_check_1482@331:1>:int,<f_check_1482@331:0>:int,<f_check_1482@331:5>:int),
      (<f_check_1482@331:0> < <f_check_1482@331:2>)
      |- P[<f_check_1482@331:5>](<f_check_1482@331:0>:int,<f_check_1482@331:1>:int,
                                 <f_check_1482@331:2>:int,<f_check_1482@331:5>:int)
      
      P[<f_main_1483@308:2>](<check_1148@310:0>:int,<check_1148@310:2>:int),
      P[<<make_array_1030@315:2>@327:0>](<check_1148@310:0>:int,<<check_1148@310:3>@313:0>:int,<<<check_1148@310:3>@313:1>@329:0>:int),
      P[<check_1148@310:2>](<check_1148@310:0>:int,<check_1148@310:1>:int,<check_1148@310:2>:int),
      (<check_1148@310:1> = 0)
      |- P[<<<check_1148@310:3>@313:1>@329:0>](<check_1148@310:0>:int,
                                               <check_1148@310:1>:int,
                                               <check_1148@310:2>:int,
                                               <<check_1148@310:3>@313:0>:int,
                                               <<<check_1148@310:3>@313:1>@329:0>:int)
      
      P[<make_array_1030@315:1>](<make_array_1030@315:0>:int,<make_array_1030@315:1>:int),
      P[<<k_make_array_u_1182@318:2>@325:0>](<make_array_1030@315:1>:int,<make_array_1030@315:0>:int,<<make_array_1030@315:2>@327:0>:int),
      (0 <= <make_array_1030@315:1>)
      |- P[<<make_array_1030@315:2>@327:0>](<make_array_1030@315:0>:int,
                                            <make_array_1030@315:1>:int,
                                            <<make_array_1030@315:2>@327:0>:int)
      
      P[<k_make_array_u_1182@318:3>](<k_make_array_u_1182@318:0>:int,<k_make_array_u_1182@318:1>:int,true:bool),
      P[<<k_make_array_u_1193@321:2>@323:0>](<k_make_array_u_1182@318:0>:int,<k_make_array_u_1182@318:1>:int,<<k_make_array_u_1182@318:2>@325:0>:int)|- P[<<k_make_array_u_1182@318:2>@325:0>](
      <k_make_array_u_1182@318:0>:int,<k_make_array_u_1182@318:1>:int,
      <<k_make_array_u_1182@318:2>@325:0>:int)
      
      P[<k_make_array_u_1193@321:3>](<k_make_array_u_1193@321:0>:int,<k_make_array_u_1193@321:1>:int,<k_make_array_u_1193@321:3>:unit),
      (<<k_make_array_u_1193@321:2>@323:0> = <k_make_array_u_1193@321:0>)
      |- P[<<k_make_array_u_1193@321:2>@323:0>](<k_make_array_u_1193@321:0>:int,
                                                <k_make_array_u_1193@321:1>:int,
                                                <<k_make_array_u_1193@321:2>@323:0>:int)
      
      P[<k_make_array_u_1182@318:3>](<k_make_array_u_1193@321:0>:int,<k_make_array_u_1193@321:1>:int,true:bool)|- P[<k_make_array_u_1193@321:3>](
      <k_make_array_u_1193@321:0>:int,<k_make_array_u_1193@321:1>:int,
      <k_make_array_u_1193@321:3>:unit)
      
      P[<make_array_1030@315:1>](<k_make_array_u_1182@318:1>:int,<k_make_array_u_1182@318:0>:int),
      ((0 <= <k_make_array_u_1182@318:0>) &&
       (<k_make_array_u_1182@318:3> = (<k_make_array_u_1182@318:0> < <k_make_array_u_1182@318:1>)))
      |- P[<k_make_array_u_1182@318:3>](<k_make_array_u_1182@318:0>:int,
                                        <k_make_array_u_1182@318:1>:int,
                                        <k_make_array_u_1182@318:3>:bool)
      
      P[<f_main_1483@308:2>](<make_array_1030@315:0>:int,<check_1148@310:2>:int),
      P[<<check_1148@310:3>@313:0>](<make_array_1030@315:0>:int,0:int,<check_1148@310:2>:int,<make_array_1030@315:1>:int)|- P[<make_array_1030@315:1>](
      <make_array_1030@315:0>:int,<make_array_1030@315:1>:int)
      
      P[<check_1148@310:2>](<check_1148@310:0>:int,<check_1148@310:1>:int,<check_1148@310:2>:int),
      ((<check_1148@310:1> < <check_1148@310:0>) && (<<check_1148@310:3>@313:0> = <check_1148@310:1>))
      |- P[<<check_1148@310:3>@313:0>](<check_1148@310:0>:int,<check_1148@310:1>:int,
                                       <check_1148@310:2>:int,<<check_1148@310:3>@313:0>:int)
      
      P[<f_main_1483@308:2>](<check_1148@310:0>:int,<check_1148@310:2>:int), (
      <check_1148@310:1> = 0)
      |- P[<check_1148@310:2>](<check_1148@310:0>:int,<check_1148@310:1>:int,
                               <check_1148@310:2>:int)
      
      P[<main_1044@269:0>](<f_main_1483@308:0>:int),
      P[<<array_max_1033@271:3>@306:0>](<f_main_1483@308:0>:int,0:int,<f_main_1483@308:2>:int)|- P[<f_main_1483@308:2>](
      <f_main_1483@308:0>:int,<f_main_1483@308:2>:int)
      
      P[<array_max_1033@271:1>](<array_max_1033@271:0>:int,<array_max_1033@271:1>:int),
      P[<<f_array_max_1480@292:3>@304:0>](<array_max_1033@271:1>:int,<array_max_1033@271:0>:int,<<array_max_1033@271:3>@306:0>:int),
      (<array_max_1033@271:1> < <array_max_1033@271:0>)
      |- P[<<array_max_1033@271:3>@306:0>](<array_max_1033@271:0>:int,
                                           <array_max_1033@271:1>:int,
                                           <<array_max_1033@271:3>@306:0>:int)
      
      P[<f_array_max_1480@292:4>](<f_array_max_1480@292:0>:int,<f_array_max_1480@292:1>:int,<f_array_max_1481@299:2>:int),
      P[<<f_array_max_1481@299:3>@302:0>](<f_array_max_1480@292:0>:int,<f_array_max_1480@292:1>:int,<f_array_max_1481@299:2>:int,<<f_array_max_1480@292:3>@304:0>:int)|- P[<<f_array_max_1480@292:3>@304:0>](
      <f_array_max_1480@292:0>:int,<f_array_max_1480@292:1>:int,<<f_array_max_1480@292:3>@304:0>:int)
      
      P[<f_array_max_1481@299:4>](<f_array_max_1481@299:0>:int,<f_array_max_1481@299:1>:int,<f_array_max_1481@299:2>:int,<<f_array_max_1481@299:3>@302:0>:int),
      (<f_array_max_1481@299:2> <= <<f_array_max_1481@299:3>@302:0>)
      |- P[<<f_array_max_1481@299:3>@302:0>](<f_array_max_1481@299:0>:int,
                                             <f_array_max_1481@299:1>:int,
                                             <f_array_max_1481@299:2>:int,
                                             <<f_array_max_1481@299:3>@302:0>:int)
      
      P[<f_array_max_1480@292:4>](<f_array_max_1481@299:0>:int,<f_array_max_1481@299:1>:int,<f_array_max_1481@299:2>:int),
      P[<<array_max_1033@294:3>@297:0>](<f_array_max_1481@299:1>:int,(
                                        1 + <f_array_max_1481@299:0>):int,<f_array_max_1481@299:4>:int)|- P[<f_array_max_1481@299:4>](
      <f_array_max_1481@299:0>:int,<f_array_max_1481@299:1>:int,<f_array_max_1481@299:2>:int,
      <f_array_max_1481@299:4>:int)
      
      P[<array_max_1033@294:1>](<array_max_1033@294:0>:int,<array_max_1033@294:1>:int),
      ((<<array_max_1033@294:3>@297:0> = 0) && (<array_max_1033@294:1> >= <array_max_1033@294:0>))
      |- P[<<array_max_1033@294:3>@297:0>](<array_max_1033@294:0>:int,
                                           <array_max_1033@294:1>:int,
                                           <<array_max_1033@294:3>@297:0>:int)
      
      P[<f_array_max_1480@292:4>]((-1 + <array_max_1033@294:1>):int,<array_max_1033@294:0>:int,<f_array_max_1480@292:4>:int)|- P[<array_max_1033@294:1>](
      <array_max_1033@294:0>:int,<array_max_1033@294:1>:int)
      
      P[<array_max_1033@271:1>](<f_array_max_1480@292:1>:int,<f_array_max_1480@292:0>:int),
      P[<<<array_max_1033@271:2>@274:1>@290:0>](<f_array_max_1480@292:1>:int,<f_array_max_1480@292:0>:int,<f_array_max_1480@292:0>:int,<f_array_max_1480@292:4>:int),
      (<f_array_max_1480@292:0> < <f_array_max_1480@292:1>)
      |- P[<f_array_max_1480@292:4>](<f_array_max_1480@292:0>:int,<f_array_max_1480@292:1>:int,
                                     <f_array_max_1480@292:4>:int)
      
      P[<main_1044@269:0>](<array_max_1033@271:0>:int),
      P[<<make_array_1030@276:2>@288:0>](<array_max_1033@271:0>:int,<<array_max_1033@271:2>@274:0>:int,<<<array_max_1033@271:2>@274:1>@290:0>:int),
      P[<array_max_1033@271:1>](<array_max_1033@271:0>:int,<array_max_1033@271:1>:int), (
      <array_max_1033@271:1> = 0)
      |- P[<<<array_max_1033@271:2>@274:1>@290:0>](<array_max_1033@271:0>:int,
                                                   <array_max_1033@271:1>:int,
                                                   <<array_max_1033@271:2>@274:0>:int,
                                                   <<<array_max_1033@271:2>@274:1>@290:0>:int)
      
      P[<make_array_1030@276:1>](<make_array_1030@276:0>:int,<make_array_1030@276:1>:int),
      P[<<k_make_array_u_1182@279:2>@286:0>](<make_array_1030@276:1>:int,<make_array_1030@276:0>:int,<<make_array_1030@276:2>@288:0>:int),
      (0 <= <make_array_1030@276:1>)
      |- P[<<make_array_1030@276:2>@288:0>](<make_array_1030@276:0>:int,
                                            <make_array_1030@276:1>:int,
                                            <<make_array_1030@276:2>@288:0>:int)
      
      P[<k_make_array_u_1182@279:3>](<k_make_array_u_1182@279:0>:int,<k_make_array_u_1182@279:1>:int,true:bool),
      P[<<k_make_array_u_1193@282:2>@284:0>](<k_make_array_u_1182@279:0>:int,<k_make_array_u_1182@279:1>:int,<<k_make_array_u_1182@279:2>@286:0>:int)|- P[<<k_make_array_u_1182@279:2>@286:0>](
      <k_make_array_u_1182@279:0>:int,<k_make_array_u_1182@279:1>:int,
      <<k_make_array_u_1182@279:2>@286:0>:int)
      
      P[<k_make_array_u_1193@282:3>](<k_make_array_u_1193@282:0>:int,<k_make_array_u_1193@282:1>:int,<k_make_array_u_1193@282:3>:unit),
      (<<k_make_array_u_1193@282:2>@284:0> = <k_make_array_u_1193@282:0>)
      |- P[<<k_make_array_u_1193@282:2>@284:0>](<k_make_array_u_1193@282:0>:int,
                                                <k_make_array_u_1193@282:1>:int,
                                                <<k_make_array_u_1193@282:2>@284:0>:int)
      
      P[<k_make_array_u_1182@279:3>](<k_make_array_u_1193@282:0>:int,<k_make_array_u_1193@282:1>:int,true:bool)|- P[<k_make_array_u_1193@282:3>](
      <k_make_array_u_1193@282:0>:int,<k_make_array_u_1193@282:1>:int,
      <k_make_array_u_1193@282:3>:unit)
      
      P[<make_array_1030@276:1>](<k_make_array_u_1182@279:1>:int,<k_make_array_u_1182@279:0>:int),
      ((0 <= <k_make_array_u_1182@279:0>) &&
       (<k_make_array_u_1182@279:3> = (<k_make_array_u_1182@279:0> < <k_make_array_u_1182@279:1>)))
      |- P[<k_make_array_u_1182@279:3>](<k_make_array_u_1182@279:0>:int,
                                        <k_make_array_u_1182@279:1>:int,
                                        <k_make_array_u_1182@279:3>:bool)
      
      P[<main_1044@269:0>](<make_array_1030@276:0>:int),
      P[<<array_max_1033@271:2>@274:0>](<make_array_1030@276:0>:int,0:int,<make_array_1030@276:1>:int)|- P[<make_array_1030@276:1>](
      <make_array_1030@276:0>:int,<make_array_1030@276:1>:int)
      
      P[<array_max_1033@271:1>](<array_max_1033@271:0>:int,<array_max_1033@271:1>:int),
      ((<array_max_1033@271:1> < <array_max_1033@271:0>) && (<<array_max_1033@271:2>@274:0> = <array_max_1033@271:1>))
      |- P[<<array_max_1033@271:2>@274:0>](<array_max_1033@271:0>:int,
                                           <array_max_1033@271:1>:int,
                                           <<array_max_1033@271:2>@274:0>:int)
      
      P[<main_1044@269:0>](<array_max_1033@271:0>:int), (<array_max_1033@271:1> = 0)
      |- P[<array_max_1033@271:1>](<array_max_1033@271:0>:int,<array_max_1033@271:1>:int)
      
      P[<f_1484@267:0>](<main_1044@269:0>:int)|- P[<main_1044@269:0>](<main_1044@269:0>:int)
      
      |- P[<f_1484@267:0>](<f_1484@267:0>:int)
    call trees:
      <main_1479@264>
        <f_1484@267>
          <main_1044@269>
            <array_max_1033@271>
            </<array_max_1033@271:2>@274>
            <make_array_1030@276>
              <k_make_array_u_1182@279>
                <k_make_array_u_1193@282>
                </<k_make_array_u_1193@282:2>@284>
              </<k_make_array_u_1182@279:2>@286>
            </<make_array_1030@276:2>@288>
            <<<array_max_1033@271:2>@274:1>@290>
              <f_array_max_1480@292>
                <array_max_1033@294>
                </<array_max_1033@294:3>@297>
                <f_array_max_1481@299>
                </<f_array_max_1481@299:3>@302>
              </<f_array_max_1480@292:3>@304>
            </<array_max_1033@271:3>@306>
            <f_main_1483@308>
              <check_1148@310>
              </<check_1148@310:3>@313>
              <make_array_1030@315>
                <k_make_array_u_1182@318>
                  <k_make_array_u_1193@321>
                  </<k_make_array_u_1193@321:2>@323>
                </<k_make_array_u_1182@318:2>@325>
              </<make_array_1030@315:2>@327>
              <<<check_1148@310:3>@313:1>@329>
                <f_check_1482@331>
                  <fail_1487@334>
    inlined horn clauses:
      P[<fail_1487@334:0>](<fail_1487@334:0>:bool)|- bot
      
      P[<check_1148@310:2>](<f_check_1482@331:2>:int,<f_check_1482@331:0>:int,<f_check_1482@331:1>:int),
      P[<<<check_1148@310:3>@313:1>@329:0>](<f_check_1482@331:2>:int,<f_check_1482@331:0>:int,<f_check_1482@331:1>:int,<f_check_1482@331:0>:int,<f_check_1482@331:5>:int),
      ((<f_check_1482@331:5> > <f_check_1482@331:1>) &&
       ((<f_check_1482@331:0> < <f_check_1482@331:2>) && <fail_1487@334:0>))
      |- P[<fail_1487@334:0>](<fail_1487@334:0>:bool)
      
      P[<<array_max_1033@271:3>@306:0>](<check_1148@310:0>:int,0:int,<check_1148@310:2>:int),
      P[<<make_array_1030@315:2>@327:0>](<check_1148@310:0>:int,<<check_1148@310:3>@313:0>:int,<<<check_1148@310:3>@313:1>@329:0>:int),
      P[<check_1148@310:2>](<check_1148@310:0>:int,<check_1148@310:1>:int,<check_1148@310:2>:int),
      (<check_1148@310:1> = 0)
      |- P[<<<check_1148@310:3>@313:1>@329:0>](<check_1148@310:0>:int,
                                               <check_1148@310:1>:int,
                                               <check_1148@310:2>:int,
                                               <<check_1148@310:3>@313:0>:int,
                                               <<<check_1148@310:3>@313:1>@329:0>:int)
      
      P[<make_array_1030@315:1>](<make_array_1030@315:0>:int,<make_array_1030@315:1>:int),
      ((0 <= <make_array_1030@315:1>) &&
       ((<make_array_1030@315:1> < <make_array_1030@315:0>) &&
        (<<make_array_1030@315:2>@327:0> = <make_array_1030@315:1>)))
      |- P[<<make_array_1030@315:2>@327:0>](<make_array_1030@315:0>:int,
                                            <make_array_1030@315:1>:int,
                                            <<make_array_1030@315:2>@327:0>:int)
      
      P[<<array_max_1033@271:3>@306:0>](<make_array_1030@315:0>:int,0:int,<check_1148@310:2>:int),
      P[<<check_1148@310:3>@313:0>](<make_array_1030@315:0>:int,0:int,<check_1148@310:2>:int,<make_array_1030@315:1>:int)|- P[<make_array_1030@315:1>](
      <make_array_1030@315:0>:int,<make_array_1030@315:1>:int)
      
      P[<check_1148@310:2>](<check_1148@310:0>:int,<check_1148@310:1>:int,<check_1148@310:2>:int),
      ((<check_1148@310:1> < <check_1148@310:0>) && (<<check_1148@310:3>@313:0> = <check_1148@310:1>))
      |- P[<<check_1148@310:3>@313:0>](<check_1148@310:0>:int,<check_1148@310:1>:int,
                                       <check_1148@310:2>:int,<<check_1148@310:3>@313:0>:int)
      
      P[<<array_max_1033@271:3>@306:0>](<check_1148@310:0>:int,0:int,<check_1148@310:2>:int), (
      <check_1148@310:1> = 0)
      |- P[<check_1148@310:2>](<check_1148@310:0>:int,<check_1148@310:1>:int,
                               <check_1148@310:2>:int)
      
      P[<array_max_1033@271:1>](<array_max_1033@271:0>:int,<array_max_1033@271:1>:int),
      P[<<<array_max_1033@271:2>@274:1>@290:0>](<array_max_1033@271:0>:int,<array_max_1033@271:1>:int,<array_max_1033@271:1>:int,var1315:int),
      P[<<array_max_1033@294:3>@297:0>](<array_max_1033@271:0>:int,(1 + <array_max_1033@271:1>):int,<<array_max_1033@271:3>@306:0>:int),
      ((var1315 <= <<array_max_1033@271:3>@306:0>) && (<array_max_1033@271:1> < <array_max_1033@271:0>))
      |- P[<<array_max_1033@271:3>@306:0>](<array_max_1033@271:0>:int,
                                           <array_max_1033@271:1>:int,
                                           <<array_max_1033@271:3>@306:0>:int)
      
      P[<array_max_1033@294:1>](<array_max_1033@294:0>:int,<array_max_1033@294:1>:int),
      ((<<array_max_1033@294:3>@297:0> = 0) && (<array_max_1033@294:1> >= <array_max_1033@294:0>))
      |- P[<<array_max_1033@294:3>@297:0>](<array_max_1033@294:0>:int,
                                           <array_max_1033@294:1>:int,
                                           <<array_max_1033@294:3>@297:0>:int)
      
      P[<array_max_1033@271:1>](<array_max_1033@294:0>:int,(-1 + <array_max_1033@294:1>):int),
      P[<<<array_max_1033@271:2>@274:1>@290:0>](<array_max_1033@294:0>:int,(
                                                -1 + <array_max_1033@294:1>):int,(
                                                -1 + <array_max_1033@294:1>):int,<f_array_max_1480@292:4>:int),
      (<array_max_1033@294:1> < (1 + <array_max_1033@294:0>))
      |- P[<array_max_1033@294:1>](<array_max_1033@294:0>:int,<array_max_1033@294:1>:int)
      
      P[<<make_array_1030@276:2>@288:0>](<array_max_1033@271:0>:int,<<array_max_1033@271:2>@274:0>:int,<<<array_max_1033@271:2>@274:1>@290:0>:int),
      P[<array_max_1033@271:1>](<array_max_1033@271:0>:int,<array_max_1033@271:1>:int), (
      <array_max_1033@271:1> = 0)
      |- P[<<<array_max_1033@271:2>@274:1>@290:0>](<array_max_1033@271:0>:int,
                                                   <array_max_1033@271:1>:int,
                                                   <<array_max_1033@271:2>@274:0>:int,
                                                   <<<array_max_1033@271:2>@274:1>@290:0>:int)
      
      P[<make_array_1030@276:1>](<make_array_1030@276:0>:int,<make_array_1030@276:1>:int),
      ((0 <= <make_array_1030@276:1>) &&
       ((<make_array_1030@276:1> < <make_array_1030@276:0>) &&
        (<<make_array_1030@276:2>@288:0> = <make_array_1030@276:1>)))
      |- P[<<make_array_1030@276:2>@288:0>](<make_array_1030@276:0>:int,
                                            <make_array_1030@276:1>:int,
                                            <<make_array_1030@276:2>@288:0>:int)
      
      P[<<array_max_1033@271:2>@274:0>](<make_array_1030@276:0>:int,0:int,<make_array_1030@276:1>:int)|- P[<make_array_1030@276:1>](
      <make_array_1030@276:0>:int,<make_array_1030@276:1>:int)
      
      P[<array_max_1033@271:1>](<array_max_1033@271:0>:int,<array_max_1033@271:1>:int),
      ((<array_max_1033@271:1> < <array_max_1033@271:0>) && (<<array_max_1033@271:2>@274:0> = <array_max_1033@271:1>))
      |- P[<<array_max_1033@271:2>@274:0>](<array_max_1033@271:0>:int,
                                           <array_max_1033@271:1>:int,
                                           <<array_max_1033@271:2>@274:0>:int)
      
       (<array_max_1033@271:1> = 0) |- P[<array_max_1033@271:1>](<array_max_1033@271:0>:int,
                                                                 <array_max_1033@271:1>:int)
    begin ParamSubstInfer.infer(484202)[3]
      
    end ParamSubstInfer.infer(484202)[3] (1.906710 sec.)
    inferred extra parameters:
      
    begin RefTypeInfer.elim_coeffs(484204)[3]
      
    end RefTypeInfer.elim_coeffs(484204)[3] (0.003999 sec.)
    begin GenHcSolver.solve(485129)[3]
      Horn clauses:
        P[<fail_1487@334:0>](<fail_1487@334:0>:bool)|- bot
        
        P[<check_1148@310:2>](<f_check_1482@331:2>:int,<f_check_1482@331:0>:int,<f_check_1482@331:1>:int),
        P[<<<check_1148@310:3>@313:1>@329:0>](<f_check_1482@331:2>:int,<f_check_1482@331:0>:int,<f_check_1482@331:1>:int,<f_check_1482@331:0>:int,<f_check_1482@331:5>:int),
        ((<f_check_1482@331:5> > <f_check_1482@331:1>) &&
         ((<f_check_1482@331:0> < <f_check_1482@331:2>) && <fail_1487@334:0>))
        |- P[<fail_1487@334:0>](<fail_1487@334:0>:bool)
        
        P[<<array_max_1033@271:3>@306:0>](<check_1148@310:0>:int,0:int,<check_1148@310:2>:int),
        P[<<make_array_1030@315:2>@327:0>](<check_1148@310:0>:int,<<check_1148@310:3>@313:0>:int,<<<check_1148@310:3>@313:1>@329:0>:int),
        P[<check_1148@310:2>](<check_1148@310:0>:int,<check_1148@310:1>:int,<check_1148@310:2>:int),
        (<check_1148@310:1> = 0)
        |- P[<<<check_1148@310:3>@313:1>@329:0>](<check_1148@310:0>:int,
                                                 <check_1148@310:1>:int,
                                                 <check_1148@310:2>:int,
                                                 <<check_1148@310:3>@313:0>:int,
                                                 <<<check_1148@310:3>@313:1>@329:0>:int)
        
        P[<make_array_1030@315:1>](<make_array_1030@315:0>:int,<make_array_1030@315:1>:int),
        ((0 <= <make_array_1030@315:1>) &&
         ((<make_array_1030@315:1> < <make_array_1030@315:0>) &&
          (<<make_array_1030@315:2>@327:0> = <make_array_1030@315:1>)))
        |- P[<<make_array_1030@315:2>@327:0>](<make_array_1030@315:0>:int,
                                              <make_array_1030@315:1>:int,
                                              <<make_array_1030@315:2>@327:0>:int)
        
        P[<<array_max_1033@271:3>@306:0>](<make_array_1030@315:0>:int,0:int,<check_1148@310:2>:int),
        P[<<check_1148@310:3>@313:0>](<make_array_1030@315:0>:int,0:int,<check_1148@310:2>:int,<make_array_1030@315:1>:int)|- P[<make_array_1030@315:1>](
        <make_array_1030@315:0>:int,<make_array_1030@315:1>:int)
        
        P[<check_1148@310:2>](<check_1148@310:0>:int,<check_1148@310:1>:int,<check_1148@310:2>:int),
        ((<check_1148@310:1> < <check_1148@310:0>) && (<<check_1148@310:3>@313:0> = <check_1148@310:1>))
        |- P[<<check_1148@310:3>@313:0>](<check_1148@310:0>:int,<check_1148@310:1>:int,
                                         <check_1148@310:2>:int,<<check_1148@310:3>@313:0>:int)
        
        P[<<array_max_1033@271:3>@306:0>](<check_1148@310:0>:int,0:int,<check_1148@310:2>:int),
        (<check_1148@310:1> = 0)
        |- P[<check_1148@310:2>](<check_1148@310:0>:int,<check_1148@310:1>:int,
                                 <check_1148@310:2>:int)
        
        P[<array_max_1033@271:1>](<array_max_1033@271:0>:int,<array_max_1033@271:1>:int),
        P[<<<array_max_1033@271:2>@274:1>@290:0>](<array_max_1033@271:0>:int,<array_max_1033@271:1>:int,<array_max_1033@271:1>:int,var1315:int),
        P[<<array_max_1033@294:3>@297:0>](<array_max_1033@271:0>:int,(
                                          1 + <array_max_1033@271:1>):int,<<array_max_1033@271:3>@306:0>:int),
        ((var1315 <= <<array_max_1033@271:3>@306:0>) && (<array_max_1033@271:1> < <array_max_1033@271:0>))
        |- P[<<array_max_1033@271:3>@306:0>](<array_max_1033@271:0>:int,
                                             <array_max_1033@271:1>:int,
                                             <<array_max_1033@271:3>@306:0>:int)
        
        P[<array_max_1033@294:1>](<array_max_1033@294:0>:int,<array_max_1033@294:1>:int),
        ((<<array_max_1033@294:3>@297:0> = 0) && (<array_max_1033@294:1> >= <array_max_1033@294:0>))
        |- P[<<array_max_1033@294:3>@297:0>](<array_max_1033@294:0>:int,
                                             <array_max_1033@294:1>:int,
                                             <<array_max_1033@294:3>@297:0>:int)
        
        P[<array_max_1033@271:1>](<array_max_1033@294:0>:int,(-1 + <array_max_1033@294:1>):int),
        P[<<<array_max_1033@271:2>@274:1>@290:0>](<array_max_1033@294:0>:int,(
                                                  -1 + <array_max_1033@294:1>):int,(
                                                  -1 + <array_max_1033@294:1>):int,<f_array_max_1480@292:4>:int),
        (<array_max_1033@294:1> < (1 + <array_max_1033@294:0>))
        |- P[<array_max_1033@294:1>](<array_max_1033@294:0>:int,<array_max_1033@294:1>:int)
        
        P[<<make_array_1030@276:2>@288:0>](<array_max_1033@271:0>:int,<<array_max_1033@271:2>@274:0>:int,<<<array_max_1033@271:2>@274:1>@290:0>:int),
        P[<array_max_1033@271:1>](<array_max_1033@271:0>:int,<array_max_1033@271:1>:int), (
        <array_max_1033@271:1> = 0)
        |- P[<<<array_max_1033@271:2>@274:1>@290:0>](<array_max_1033@271:0>:int,
                                                     <array_max_1033@271:1>:int,
                                                     <<array_max_1033@271:2>@274:0>:int,
                                                     <<<array_max_1033@271:2>@274:1>@290:0>:int)
        
        P[<make_array_1030@276:1>](<make_array_1030@276:0>:int,<make_array_1030@276:1>:int),
        ((0 <= <make_array_1030@276:1>) &&
         ((<make_array_1030@276:1> < <make_array_1030@276:0>) &&
          (<<make_array_1030@276:2>@288:0> = <make_array_1030@276:1>)))
        |- P[<<make_array_1030@276:2>@288:0>](<make_array_1030@276:0>:int,
                                              <make_array_1030@276:1>:int,
                                              <<make_array_1030@276:2>@288:0>:int)
        
        P[<<array_max_1033@271:2>@274:0>](<make_array_1030@276:0>:int,0:int,<make_array_1030@276:1>:int)|- P[<make_array_1030@276:1>](
        <make_array_1030@276:0>:int,<make_array_1030@276:1>:int)
        
        P[<array_max_1033@271:1>](<array_max_1033@271:0>:int,<array_max_1033@271:1>:int),
        ((<array_max_1033@271:1> < <array_max_1033@271:0>) && (<<array_max_1033@271:2>@274:0> = <array_max_1033@271:1>))
        |- P[<<array_max_1033@271:2>@274:0>](<array_max_1033@271:0>:int,
                                             <array_max_1033@271:1>:int,
                                             <<array_max_1033@271:2>@274:0>:int)
        
         (<array_max_1033@271:1> = 0)
        |- P[<array_max_1033@271:1>](<array_max_1033@271:0>:int,<array_max_1033@271:1>:int)
      lower bounds:
        P[<array_max_1033@271:1>](<array_max_1033@271:0>:int,<array_max_1033@271:1>:int) = (<array_max_1033@271:1> = 0)
        P[<<array_max_1033@271:2>@274:0>](<array_max_1033@271:0>:int,<array_max_1033@271:1>:int,<<array_max_1033@271:2>@274:0>:int) =
        ((<array_max_1033@271:1> = 0) &&
         ((<array_max_1033@271:1> < <array_max_1033@271:0>) &&
          (<<array_max_1033@271:2>@274:0> = <array_max_1033@271:1>)))
        P[<make_array_1030@276:1>](<make_array_1030@276:0>:int,<make_array_1030@276:1>:int) =
        ((<make_array_1030@276:1> = 0) && (0 < <make_array_1030@276:0>))
        P[<<make_array_1030@276:2>@288:0>](<make_array_1030@276:0>:int,<make_array_1030@276:1>:int,<<make_array_1030@276:2>@288:0>:int) =
        ((<make_array_1030@276:1> = 0) &&
         ((<make_array_1030@276:1> < <make_array_1030@276:0>) &&
          ((0 < <make_array_1030@276:0>) && (<<make_array_1030@276:2>@288:0> = <make_array_1030@276:1>))))
        P[<<<array_max_1033@271:2>@274:1>@290:0>](<array_max_1033@271:0>:int,<array_max_1033@271:1>:int,<<array_max_1033@271:2>@274:0>:int,<<<array_max_1033@271:2>@274:1>@290:0>:int) =
        ((<<array_max_1033@271:2>@274:0> = 0) &&
         ((<array_max_1033@271:1> = 0) &&
          ((<<array_max_1033@271:2>@274:0> < <array_max_1033@271:0>) &&
           ((0 < <array_max_1033@271:0>) && (<<<array_max_1033@271:2>@274:1>@290:0> = <<array_max_1033@271:2>@274:0>)))))
        P[<array_max_1033@294:1>](<array_max_1033@294:0>:int,<array_max_1033@294:1>:int) =
        ((<array_max_1033@294:1> = 1) &&
         ((0 < <array_max_1033@294:0>) && (<array_max_1033@294:1> < (1 + <array_max_1033@294:0>))))
        P[<<array_max_1033@294:3>@297:0>](<array_max_1033@294:0>:int,<array_max_1033@294:1>:int,<<array_max_1033@294:3>@297:0>:int) =
        ((<<array_max_1033@294:3>@297:0> = 0) &&
         ((<array_max_1033@294:1> = 1) &&
          ((0 < <array_max_1033@294:0>) && (<array_max_1033@294:1> = <array_max_1033@294:0>))))
        P[<<array_max_1033@271:3>@306:0>](<array_max_1033@271:0>:int,<array_max_1033@271:1>:int,<<array_max_1033@271:3>@306:0>:int) =
        ((<<array_max_1033@271:3>@306:0> = 0) &&
         ((<array_max_1033@271:1> = 0) &&
          (((1 + <array_max_1033@271:1>) = <array_max_1033@271:0>) && (0 < <array_max_1033@271:0>))))
        P[<check_1148@310:2>](<check_1148@310:0>:int,<check_1148@310:1>:int,<check_1148@310:2>:int) =
        ((<check_1148@310:1> = 0) && ((<check_1148@310:2> = 0) && (<check_1148@310:0> = 1)))
        P[<<check_1148@310:3>@313:0>](<check_1148@310:0>:int,<check_1148@310:1>:int,<check_1148@310:2>:int,<<check_1148@310:3>@313:0>:int) =
        ((<check_1148@310:1> = 0) &&
         ((<check_1148@310:2> = 0) && ((<check_1148@310:0> = 1) && (<<check_1148@310:3>@313:0> = <check_1148@310:1>))))
        P[<make_array_1030@315:1>](<make_array_1030@315:0>:int,<make_array_1030@315:1>:int) =
        ((<make_array_1030@315:1> = 0) && (<make_array_1030@315:0> = 1))
        P[<<make_array_1030@315:2>@327:0>](<make_array_1030@315:0>:int,<make_array_1030@315:1>:int,<<make_array_1030@315:2>@327:0>:int) =
        ((<make_array_1030@315:1> = 0) &&
         ((<make_array_1030@315:0> = 1) && (<<make_array_1030@315:2>@327:0> = <make_array_1030@315:1>)))
        P[<<<check_1148@310:3>@313:1>@329:0>](<check_1148@310:0>:int,<check_1148@310:1>:int,<check_1148@310:2>:int,<<check_1148@310:3>@313:0>:int,<<<check_1148@310:3>@313:1>@329:0>:int) =
        ((<check_1148@310:0> = 1) &&
         ((<<check_1148@310:3>@313:0> = 0) &&
          ((<check_1148@310:1> = 0) &&
           ((<check_1148@310:2> = 0) && (<<<check_1148@310:3>@313:1>@329:0> = <<check_1148@310:3>@313:0>)))))
        P[<fail_1487@334:0>](<fail_1487@334:0>:bool) = false
      upper bounds:
        P[<<make_array_1030@315:2>@327:0>](var1334:int,var1335:int,var1336:int) =
        ((var1334 <> 1) || ((var1335 <> 0) || (var1336 <= 0)))
        P[<<make_array_1030@276:2>@288:0>](var1330:int,var1331:int,var1332:int) = true
      begin GenHcSolver.classify_pids(500369)[4]
        output:
          [<<make_array_1030@276:2>@288:0>;<<make_array_1030@315:2>@327:0>]
      end GenHcSolver.classify_pids(500369)[4] (0.000000 sec.)
      begin ApronInterface.convex_hull_interpolate(500397)[4]
        lb:(((<make_array_1030@276:1> = 0) &&
             ((<make_array_1030@276:1> < <make_array_1030@276:0>) &&
              ((0 < <make_array_1030@276:0>) && (<<make_array_1030@276:2>@288:0> = <make_array_1030@276:1>)))) ||
            ((<make_array_1030@276:1> = 0) &&
             ((<make_array_1030@276:0> = 1) && (<<make_array_1030@276:2>@288:0> = <make_array_1030@276:1>))))
        nub:(not
               ((<make_array_1030@276:0> <> 1) ||
                ((<make_array_1030@276:1> <> 0) || (<<make_array_1030@276:2>@288:0> <= 0))))
        lb':(((<make_array_1030@276:1> = 0) &&
              ((<make_array_1030@276:1> < <make_array_1030@276:0>) &&
               ((0 < <make_array_1030@276:0>) && (<<make_array_1030@276:2>@288:0> = <make_array_1030@276:1>)))) ||
             ((<make_array_1030@276:1> = 0) &&
              ((<make_array_1030@276:0> = 1) && (<<make_array_1030@276:2>@288:0> = <make_array_1030@276:1>))))
        nub':(not
                ((<make_array_1030@276:0> <> 1) ||
                 ((<make_array_1030@276:1> <> 0) || (<<make_array_1030@276:2>@288:0> <= 0))))
        begin InterpProver.interpolate(500398)[5]
          begin InterpProver.interpolate_fresh(500399)[6]
            begin InterpProver.interpolate_log(500400)[7]
              input1: (((<make_array_1030@276:1> = 0) &&
                        ((<make_array_1030@276:1> < <make_array_1030@276:0>) &&
                         ((0 < <make_array_1030@276:0>) && (<<make_array_1030@276:2>@288:0> = <make_array_1030@276:1>)))) ||
                       ((<make_array_1030@276:1> = 0) &&
                        ((<make_array_1030@276:0> = 1) && (<<make_array_1030@276:2>@288:0> = <make_array_1030@276:1>))))
              input2: (not
                         ((<make_array_1030@276:0> <> 1) ||
                          ((<make_array_1030@276:1> <> 0) || (<<make_array_1030@276:2>@288:0> <= 0))))
              begin InterpProver.interpolate_check(500401)[8]
                begin InterpProver.interpolate_simplify(500402)[9]
                  begin InterpProver.interpolate_quick(500603)[10]
                    begin CsisatInterface.interpolate_csisat_wrap(500612)[11]
                      begin CsisatInterface.interpolate_csisat_post_process(500613)[12]
                        begin CsisatInterface.interpolate_csisat_log(500614)[13]
                          input1: (((1 <= v_sep_make_array_1030_sep_276_sep_0 & (1 + v_sep_make_array_1030_sep_276_sep_1) <= v_sep_make_array_1030_sep_276_sep_0) | 1 = v_sep_make_array_1030_sep_276_sep_0) & 0 = v_sep_make_array_1030_sep_276_sep_1 & v_sep_make_array_1030_sep_276_sep_1 = v_sep_make_array_1030_sep_276_sep_2_sep_288_sep_0)
                          input2: (0 = v_sep_make_array_1030_sep_276_sep_1 & 1 = v_sep_make_array_1030_sep_276_sep_0 & 1 <= v_sep_make_array_1030_sep_276_sep_2_sep_288_sep_0)
                          begin CsisatInterface.interpolate_csisat_raw(500615)[14]
                            
                          end CsisatInterface.interpolate_csisat_raw(500615)[14] (0.001000 sec.)
                          output: (not 0 = v_sep_make_array_1030_sep_276_sep_1 | not 1 = v_sep_make_array_1030_sep_276_sep_0 | 2*v_sep_make_array_1030_sep_276_sep_2_sep_288_sep_0 <= 0)
                          
                        end CsisatInterface.interpolate_csisat_log(500614)[13] (0.001000 sec.)
                        after simplification: (not 0 = v_sep_make_array_1030_sep_276_sep_1 | not 1 = v_sep_make_array_1030_sep_276_sep_0 | 2*v_sep_make_array_1030_sep_276_sep_2_sep_288_sep_0 <= 0)
                        after dnf conversion: ((not 0 = v_sep_make_array_1030_sep_276_sep_1) | (not 1 = v_sep_make_array_1030_sep_276_sep_0) | (2*v_sep_make_array_1030_sep_276_sep_2_sep_288_sep_0 <= 0))
                        
                      end CsisatInterface.interpolate_csisat_post_process(500613)[12] (0.001000 sec.)
                      
                    end CsisatInterface.interpolate_csisat_wrap(500612)[11] (0.001000 sec.)
                    
                  end InterpProver.interpolate_quick(500603)[10] (0.001000 sec.)
                  begin minimizing # of disjunctions(500631)[10]
                    input: ((0 <> <make_array_1030@276:1>) ||
                            ((1 <> <make_array_1030@276:0>) || (<<make_array_1030@276:2>@288:0> <= 0)))
                    output: (<<make_array_1030@276:2>@288:0> <= 0)
                  end minimizing # of disjunctions(500631)[10] (0.001000 sec.)
                  
                end InterpProver.interpolate_simplify(500402)[9] (0.002000 sec.)
                
              end InterpProver.interpolate_check(500401)[8] (0.002000 sec.)
              output: (<<make_array_1030@276:2>@288:0> <= 0)
            end InterpProver.interpolate_log(500400)[7] (0.002000 sec.)
            
          end InterpProver.interpolate_fresh(500399)[6] (0.002000 sec.)
          
        end InterpProver.interpolate(500398)[5] (0.002000 sec.)
        output:
          P[<<make_array_1030@276:2>@288:0>](<make_array_1030@276:0>:int,<make_array_1030@276:1>:int,<<make_array_1030@276:2>@288:0>:int) =
          (<<make_array_1030@276:2>@288:0> <= 0)
          P[<<make_array_1030@315:2>@327:0>](<make_array_1030@276:0>:int,<make_array_1030@276:1>:int,<<make_array_1030@276:2>@288:0>:int) =
          (<<make_array_1030@276:2>@288:0> <= 0)
      end ApronInterface.convex_hull_interpolate(500397)[4] (0.003000 sec.)
      Horn clauses:
        P[<fail_1487@334:0>](<fail_1487@334:0>:bool)|- bot
        
        P[<check_1148@310:2>](<f_check_1482@331:2>:int,<f_check_1482@331:0>:int,<f_check_1482@331:1>:int),
        P[<<<check_1148@310:3>@313:1>@329:0>](<f_check_1482@331:2>:int,<f_check_1482@331:0>:int,<f_check_1482@331:1>:int,<f_check_1482@331:0>:int,<f_check_1482@331:5>:int),
        ((<f_check_1482@331:5> > <f_check_1482@331:1>) &&
         ((<f_check_1482@331:0> < <f_check_1482@331:2>) && <fail_1487@334:0>))
        |- P[<fail_1487@334:0>](<fail_1487@334:0>:bool)
        
        P[<<array_max_1033@271:3>@306:0>](<check_1148@310:0>:int,0:int,<check_1148@310:2>:int),
        P[<check_1148@310:2>](<check_1148@310:0>:int,<check_1148@310:1>:int,<check_1148@310:2>:int),
        ((<check_1148@310:1> = 0) && (<<<check_1148@310:3>@313:1>@329:0> <= 0))
        |- P[<<<check_1148@310:3>@313:1>@329:0>](<check_1148@310:0>:int,
                                                 <check_1148@310:1>:int,
                                                 <check_1148@310:2>:int,
                                                 <<check_1148@310:3>@313:0>:int,
                                                 <<<check_1148@310:3>@313:1>@329:0>:int)
        
        P[<make_array_1030@315:1>](<make_array_1030@315:0>:int,<<make_array_1030@315:2>@327:0>:int),
        ((0 < <<make_array_1030@315:2>@327:0>) && (<<make_array_1030@315:2>@327:0> < <make_array_1030@315:0>)) |- bot
        
        P[<<array_max_1033@271:3>@306:0>](<make_array_1030@315:0>:int,0:int,<check_1148@310:2>:int),
        P[<<check_1148@310:3>@313:0>](<make_array_1030@315:0>:int,0:int,<check_1148@310:2>:int,<make_array_1030@315:1>:int)|- P[<make_array_1030@315:1>](
        <make_array_1030@315:0>:int,<make_array_1030@315:1>:int)
        
        P[<check_1148@310:2>](<check_1148@310:0>:int,<check_1148@310:1>:int,<check_1148@310:2>:int),
        ((<check_1148@310:1> < <check_1148@310:0>) && (<<check_1148@310:3>@313:0> = <check_1148@310:1>))
        |- P[<<check_1148@310:3>@313:0>](<check_1148@310:0>:int,<check_1148@310:1>:int,
                                         <check_1148@310:2>:int,<<check_1148@310:3>@313:0>:int)
        
        P[<<array_max_1033@271:3>@306:0>](<check_1148@310:0>:int,0:int,<check_1148@310:2>:int),
        (<check_1148@310:1> = 0)
        |- P[<check_1148@310:2>](<check_1148@310:0>:int,<check_1148@310:1>:int,
                                 <check_1148@310:2>:int)
        
        P[<array_max_1033@271:1>](<array_max_1033@271:0>:int,<array_max_1033@271:1>:int),
        P[<<<array_max_1033@271:2>@274:1>@290:0>](<array_max_1033@271:0>:int,<array_max_1033@271:1>:int,<array_max_1033@271:1>:int,var1315:int),
        P[<<array_max_1033@294:3>@297:0>](<array_max_1033@271:0>:int,(
                                          1 + <array_max_1033@271:1>):int,<<array_max_1033@271:3>@306:0>:int),
        ((var1315 <= <<array_max_1033@271:3>@306:0>) && (<array_max_1033@271:1> < <array_max_1033@271:0>))
        |- P[<<array_max_1033@271:3>@306:0>](<array_max_1033@271:0>:int,
                                             <array_max_1033@271:1>:int,
                                             <<array_max_1033@271:3>@306:0>:int)
        
        P[<array_max_1033@294:1>](<array_max_1033@294:0>:int,<array_max_1033@294:1>:int),
        ((<<array_max_1033@294:3>@297:0> = 0) && (<array_max_1033@294:1> >= <array_max_1033@294:0>))
        |- P[<<array_max_1033@294:3>@297:0>](<array_max_1033@294:0>:int,
                                             <array_max_1033@294:1>:int,
                                             <<array_max_1033@294:3>@297:0>:int)
        
        P[<array_max_1033@271:1>](<array_max_1033@294:0>:int,(-1 + <array_max_1033@294:1>):int),
        P[<<<array_max_1033@271:2>@274:1>@290:0>](<array_max_1033@294:0>:int,(
                                                  -1 + <array_max_1033@294:1>):int,(
                                                  -1 + <array_max_1033@294:1>):int,<f_array_max_1480@292:4>:int),
        (<array_max_1033@294:1> < (1 + <array_max_1033@294:0>))
        |- P[<array_max_1033@294:1>](<array_max_1033@294:0>:int,<array_max_1033@294:1>:int)
        
        P[<array_max_1033@271:1>](<array_max_1033@271:0>:int,<array_max_1033@271:1>:int),
        ((<array_max_1033@271:1> = 0) && (<<<array_max_1033@271:2>@274:1>@290:0> <= 0))
        |- P[<<<array_max_1033@271:2>@274:1>@290:0>](<array_max_1033@271:0>:int,
                                                     <array_max_1033@271:1>:int,
                                                     <<array_max_1033@271:2>@274:0>:int,
                                                     <<<array_max_1033@271:2>@274:1>@290:0>:int)
        
        P[<make_array_1030@276:1>](<make_array_1030@276:0>:int,<<make_array_1030@276:2>@288:0>:int),
        ((0 < <<make_array_1030@276:2>@288:0>) && (<<make_array_1030@276:2>@288:0> < <make_array_1030@276:0>)) |- bot
        
        P[<<array_max_1033@271:2>@274:0>](<make_array_1030@276:0>:int,0:int,<make_array_1030@276:1>:int)|- P[<make_array_1030@276:1>](
        <make_array_1030@276:0>:int,<make_array_1030@276:1>:int)
        
        P[<array_max_1033@271:1>](<array_max_1033@271:0>:int,<array_max_1033@271:1>:int),
        ((<array_max_1033@271:1> < <array_max_1033@271:0>) && (<<array_max_1033@271:2>@274:0> = <array_max_1033@271:1>))
        |- P[<<array_max_1033@271:2>@274:0>](<array_max_1033@271:0>:int,
                                             <array_max_1033@271:1>:int,
                                             <<array_max_1033@271:2>@274:0>:int)
        
         (<array_max_1033@271:1> = 0)
        |- P[<array_max_1033@271:1>](<array_max_1033@271:0>:int,<array_max_1033@271:1>:int)
      lower bounds:
        P[<array_max_1033@271:1>](<array_max_1033@271:0>:int,<array_max_1033@271:1>:int) = (<array_max_1033@271:1> = 0)
        P[<<<array_max_1033@271:2>@274:1>@290:0>](<array_max_1033@271:0>:int,<array_max_1033@271:1>:int,<<array_max_1033@271:2>@274:0>:int,<<<array_max_1033@271:2>@274:1>@290:0>:int) =
        ((<array_max_1033@271:1> = 0) && (<<<array_max_1033@271:2>@274:1>@290:0> <= 0))
        P[<<array_max_1033@271:2>@274:0>](<array_max_1033@271:0>:int,<array_max_1033@271:1>:int,<<array_max_1033@271:2>@274:0>:int) =
        ((<array_max_1033@271:1> = 0) &&
         ((<array_max_1033@271:1> < <array_max_1033@271:0>) &&
          (<<array_max_1033@271:2>@274:0> = <array_max_1033@271:1>)))
        P[<array_max_1033@294:1>](<array_max_1033@294:0>:int,<array_max_1033@294:1>:int) =
        ((<array_max_1033@294:1> = 1) && (<array_max_1033@294:1> < (1 + <array_max_1033@294:0>)))
        P[<make_array_1030@276:1>](<make_array_1030@276:0>:int,<make_array_1030@276:1>:int) =
        ((<make_array_1030@276:1> = 0) && (0 < <make_array_1030@276:0>))
        P[<<array_max_1033@294:3>@297:0>](<array_max_1033@294:0>:int,<array_max_1033@294:1>:int,<<array_max_1033@294:3>@297:0>:int) =
        ((<<array_max_1033@294:3>@297:0> = 0) &&
         ((<array_max_1033@294:1> = 1) && (<array_max_1033@294:1> = <array_max_1033@294:0>)))
        P[<<array_max_1033@271:3>@306:0>](<array_max_1033@271:0>:int,<array_max_1033@271:1>:int,<<array_max_1033@271:3>@306:0>:int) =
        ((<<array_max_1033@271:3>@306:0> = 0) &&
         ((<array_max_1033@271:1> = 0) && ((1 + <array_max_1033@271:1>) = <array_max_1033@271:0>)))
        P[<check_1148@310:2>](<check_1148@310:0>:int,<check_1148@310:1>:int,<check_1148@310:2>:int) =
        ((<check_1148@310:1> = 0) && ((<check_1148@310:2> = 0) && (<check_1148@310:0> = 1)))
        P[<<<check_1148@310:3>@313:1>@329:0>](<check_1148@310:0>:int,<check_1148@310:1>:int,<check_1148@310:2>:int,<<check_1148@310:3>@313:0>:int,<<<check_1148@310:3>@313:1>@329:0>:int) =
        ((<check_1148@310:0> = 1) &&
         ((<check_1148@310:1> = 0) && ((<check_1148@310:2> = 0) && (<<<check_1148@310:3>@313:1>@329:0> <= 0))))
        P[<<check_1148@310:3>@313:0>](<check_1148@310:0>:int,<check_1148@310:1>:int,<check_1148@310:2>:int,<<check_1148@310:3>@313:0>:int) =
        ((<check_1148@310:1> = 0) &&
         ((<check_1148@310:2> = 0) && ((<check_1148@310:0> = 1) && (<<check_1148@310:3>@313:0> = <check_1148@310:1>))))
        P[<fail_1487@334:0>](<fail_1487@334:0>:bool) = false
        P[<make_array_1030@315:1>](<make_array_1030@315:0>:int,<make_array_1030@315:1>:int) =
        ((<make_array_1030@315:1> = 0) && (<make_array_1030@315:0> = 1))
      upper bounds:
        P[<make_array_1030@315:1>](var1339:int,var1340:int) = ((0 >= var1340) || (var1340 >= var1339))
        P[<make_array_1030@276:1>](var1337:int,var1338:int) = ((0 >= var1338) || (var1338 >= var1337))
      begin GenHcSolver.classify_pids(516945)[4]
        output:
          [<make_array_1030@276:1>;<make_array_1030@315:1>]
      end GenHcSolver.classify_pids(516945)[4] (0.000000 sec.)
      begin ApronInterface.convex_hull_interpolate(516968)[4]
        lb:(((<make_array_1030@276:1> = 0) && (0 < <make_array_1030@276:0>)) ||
            ((<make_array_1030@276:1> = 0) && (<make_array_1030@276:0> = 1)))
        nub:(not ((0 >= <make_array_1030@276:1>) || (<make_array_1030@276:1> >= <make_array_1030@276:0>)))
        lb':(((<make_array_1030@276:1> = 0) && (0 < <make_array_1030@276:0>)) ||
             ((<make_array_1030@276:1> = 0) && (<make_array_1030@276:0> = 1)))
        nub':(not ((0 >= <make_array_1030@276:1>) || (<make_array_1030@276:1> >= <make_array_1030@276:0>)))
        begin InterpProver.interpolate(516969)[5]
          begin InterpProver.interpolate_fresh(516970)[6]
            begin InterpProver.interpolate_log(516971)[7]
              input1: (((<make_array_1030@276:1> = 0) && (0 < <make_array_1030@276:0>)) ||
                       ((<make_array_1030@276:1> = 0) && (<make_array_1030@276:0> = 1)))
              input2: (not ((0 >= <make_array_1030@276:1>) || (<make_array_1030@276:1> >= <make_array_1030@276:0>)))
              begin InterpProver.interpolate_check(516972)[8]
                begin InterpProver.interpolate_simplify(516973)[9]
                  begin InterpProver.interpolate_quick(517043)[10]
                    begin CsisatInterface.interpolate_csisat_wrap(517052)[11]
                      begin CsisatInterface.interpolate_csisat_post_process(517053)[12]
                        begin CsisatInterface.interpolate_csisat_log(517054)[13]
                          input1: (0 = v_sep_make_array_1030_sep_276_sep_1 & 1 <= v_sep_make_array_1030_sep_276_sep_0)
                          input2: (1 <= v_sep_make_array_1030_sep_276_sep_1 & (1 + v_sep_make_array_1030_sep_276_sep_1) <= v_sep_make_array_1030_sep_276_sep_0)
                          begin CsisatInterface.interpolate_csisat_raw(517055)[14]
                            
                          end CsisatInterface.interpolate_csisat_raw(517055)[14] (0.000000 sec.)
                          output: 2*v_sep_make_array_1030_sep_276_sep_1 <= 0
                          
                        end CsisatInterface.interpolate_csisat_log(517054)[13] (0.000000 sec.)
                        after simplification: 2*v_sep_make_array_1030_sep_276_sep_1 <= 0
                        after dnf conversion: ((2*v_sep_make_array_1030_sep_276_sep_1 <= 0))
                        
                      end CsisatInterface.interpolate_csisat_post_process(517053)[12] (0.000000 sec.)
                      
                    end CsisatInterface.interpolate_csisat_wrap(517052)[11] (0.000000 sec.)
                    
                  end InterpProver.interpolate_quick(517043)[10] (0.000000 sec.)
                  
                end InterpProver.interpolate_simplify(516973)[9] (0.000000 sec.)
                
              end InterpProver.interpolate_check(516972)[8] (0.001000 sec.)
              output: (<make_array_1030@276:1> <= 0)
            end InterpProver.interpolate_log(516971)[7] (0.001000 sec.)
            
          end InterpProver.interpolate_fresh(516970)[6] (0.002000 sec.)
          
        end InterpProver.interpolate(516969)[5] (0.002000 sec.)
        output:
          P[<make_array_1030@276:1>](<make_array_1030@276:0>:int,<make_array_1030@276:1>:int) =
          (<make_array_1030@276:1> <= 0)
          P[<make_array_1030@315:1>](<make_array_1030@276:0>:int,<make_array_1030@276:1>:int) =
          (<make_array_1030@276:1> <= 0)
      end ApronInterface.convex_hull_interpolate(516968)[4] (0.002000 sec.)
      Horn clauses:
        P[<fail_1487@334:0>](<fail_1487@334:0>:bool)|- bot
        
        P[<check_1148@310:2>](<f_check_1482@331:2>:int,<f_check_1482@331:0>:int,<f_check_1482@331:1>:int),
        P[<<<check_1148@310:3>@313:1>@329:0>](<f_check_1482@331:2>:int,<f_check_1482@331:0>:int,<f_check_1482@331:1>:int,<f_check_1482@331:0>:int,<f_check_1482@331:5>:int),
        ((<f_check_1482@331:5> > <f_check_1482@331:1>) &&
         ((<f_check_1482@331:0> < <f_check_1482@331:2>) && <fail_1487@334:0>))
        |- P[<fail_1487@334:0>](<fail_1487@334:0>:bool)
        
        P[<<array_max_1033@271:3>@306:0>](<check_1148@310:0>:int,0:int,<check_1148@310:2>:int),
        P[<check_1148@310:2>](<check_1148@310:0>:int,<check_1148@310:1>:int,<check_1148@310:2>:int),
        ((<check_1148@310:1> = 0) && (<<<check_1148@310:3>@313:1>@329:0> <= 0))
        |- P[<<<check_1148@310:3>@313:1>@329:0>](<check_1148@310:0>:int,
                                                 <check_1148@310:1>:int,
                                                 <check_1148@310:2>:int,
                                                 <<check_1148@310:3>@313:0>:int,
                                                 <<<check_1148@310:3>@313:1>@329:0>:int)
        
        P[<<array_max_1033@271:3>@306:0>](<make_array_1030@315:0>:int,0:int,<check_1148@310:2>:int),
        P[<<check_1148@310:3>@313:0>](<make_array_1030@315:0>:int,0:int,<check_1148@310:2>:int,<make_array_1030@315:1>:int),
        (<make_array_1030@315:1> > 0) |- bot
        
        P[<check_1148@310:2>](<check_1148@310:0>:int,<check_1148@310:1>:int,<check_1148@310:2>:int),
        ((<check_1148@310:1> < <check_1148@310:0>) && (<<check_1148@310:3>@313:0> = <check_1148@310:1>))
        |- P[<<check_1148@310:3>@313:0>](<check_1148@310:0>:int,<check_1148@310:1>:int,
                                         <check_1148@310:2>:int,<<check_1148@310:3>@313:0>:int)
        
        P[<<array_max_1033@271:3>@306:0>](<check_1148@310:0>:int,0:int,<check_1148@310:2>:int),
        (<check_1148@310:1> = 0)
        |- P[<check_1148@310:2>](<check_1148@310:0>:int,<check_1148@310:1>:int,
                                 <check_1148@310:2>:int)
        
        P[<array_max_1033@271:1>](<array_max_1033@271:0>:int,<array_max_1033@271:1>:int),
        P[<<<array_max_1033@271:2>@274:1>@290:0>](<array_max_1033@271:0>:int,<array_max_1033@271:1>:int,<array_max_1033@271:1>:int,var1315:int),
        P[<<array_max_1033@294:3>@297:0>](<array_max_1033@271:0>:int,(
                                          1 + <array_max_1033@271:1>):int,<<array_max_1033@271:3>@306:0>:int),
        ((var1315 <= <<array_max_1033@271:3>@306:0>) && (<array_max_1033@271:1> < <array_max_1033@271:0>))
        |- P[<<array_max_1033@271:3>@306:0>](<array_max_1033@271:0>:int,
                                             <array_max_1033@271:1>:int,
                                             <<array_max_1033@271:3>@306:0>:int)
        
        P[<array_max_1033@294:1>](<array_max_1033@294:0>:int,<array_max_1033@294:1>:int),
        ((<<array_max_1033@294:3>@297:0> = 0) && (<array_max_1033@294:1> >= <array_max_1033@294:0>))
        |- P[<<array_max_1033@294:3>@297:0>](<array_max_1033@294:0>:int,
                                             <array_max_1033@294:1>:int,
                                             <<array_max_1033@294:3>@297:0>:int)
        
        P[<array_max_1033@271:1>](<array_max_1033@294:0>:int,(-1 + <array_max_1033@294:1>):int),
        P[<<<array_max_1033@271:2>@274:1>@290:0>](<array_max_1033@294:0>:int,(
                                                  -1 + <array_max_1033@294:1>):int,(
                                                  -1 + <array_max_1033@294:1>):int,<f_array_max_1480@292:4>:int),
        (<array_max_1033@294:1> < (1 + <array_max_1033@294:0>))
        |- P[<array_max_1033@294:1>](<array_max_1033@294:0>:int,<array_max_1033@294:1>:int)
        
        P[<array_max_1033@271:1>](<array_max_1033@271:0>:int,<array_max_1033@271:1>:int),
        ((<array_max_1033@271:1> = 0) && (<<<array_max_1033@271:2>@274:1>@290:0> <= 0))
        |- P[<<<array_max_1033@271:2>@274:1>@290:0>](<array_max_1033@271:0>:int,
                                                     <array_max_1033@271:1>:int,
                                                     <<array_max_1033@271:2>@274:0>:int,
                                                     <<<array_max_1033@271:2>@274:1>@290:0>:int)
        
        P[<<array_max_1033@271:2>@274:0>](<make_array_1030@276:0>:int,0:int,<make_array_1030@276:1>:int),
        (<make_array_1030@276:1> > 0) |- bot
        
        P[<array_max_1033@271:1>](<array_max_1033@271:0>:int,<array_max_1033@271:1>:int),
        ((<array_max_1033@271:1> < <array_max_1033@271:0>) && (<<array_max_1033@271:2>@274:0> = <array_max_1033@271:1>))
        |- P[<<array_max_1033@271:2>@274:0>](<array_max_1033@271:0>:int,
                                             <array_max_1033@271:1>:int,
                                             <<array_max_1033@271:2>@274:0>:int)
        
         (<array_max_1033@271:1> = 0)
        |- P[<array_max_1033@271:1>](<array_max_1033@271:0>:int,<array_max_1033@271:1>:int)
      lower bounds:
        P[<array_max_1033@271:1>](<array_max_1033@271:0>:int,<array_max_1033@271:1>:int) = (<array_max_1033@271:1> = 0)
        P[<<<array_max_1033@271:2>@274:1>@290:0>](<array_max_1033@271:0>:int,<array_max_1033@271:1>:int,<<array_max_1033@271:2>@274:0>:int,<<<array_max_1033@271:2>@274:1>@290:0>:int) =
        ((<array_max_1033@271:1> = 0) && (<<<array_max_1033@271:2>@274:1>@290:0> <= 0))
        P[<<array_max_1033@271:2>@274:0>](<array_max_1033@271:0>:int,<array_max_1033@271:1>:int,<<array_max_1033@271:2>@274:0>:int) =
        ((<array_max_1033@271:1> = 0) &&
         ((<array_max_1033@271:1> < <array_max_1033@271:0>) &&
          (<<array_max_1033@271:2>@274:0> = <array_max_1033@271:1>)))
        P[<array_max_1033@294:1>](<array_max_1033@294:0>:int,<array_max_1033@294:1>:int) =
        ((<array_max_1033@294:1> = 1) && (<array_max_1033@294:1> < (1 + <array_max_1033@294:0>)))
        P[<<array_max_1033@294:3>@297:0>](<array_max_1033@294:0>:int,<array_max_1033@294:1>:int,<<array_max_1033@294:3>@297:0>:int) =
        ((<<array_max_1033@294:3>@297:0> = 0) &&
         ((<array_max_1033@294:1> = 1) && (<array_max_1033@294:1> = <array_max_1033@294:0>)))
        P[<<array_max_1033@271:3>@306:0>](<array_max_1033@271:0>:int,<array_max_1033@271:1>:int,<<array_max_1033@271:3>@306:0>:int) =
        ((<<array_max_1033@271:3>@306:0> = 0) &&
         ((<array_max_1033@271:1> = 0) && ((1 + <array_max_1033@271:1>) = <array_max_1033@271:0>)))
        P[<check_1148@310:2>](<check_1148@310:0>:int,<check_1148@310:1>:int,<check_1148@310:2>:int) =
        ((<check_1148@310:1> = 0) && ((<check_1148@310:2> = 0) && (<check_1148@310:0> = 1)))
        P[<<<check_1148@310:3>@313:1>@329:0>](<check_1148@310:0>:int,<check_1148@310:1>:int,<check_1148@310:2>:int,<<check_1148@310:3>@313:0>:int,<<<check_1148@310:3>@313:1>@329:0>:int) =
        ((<check_1148@310:0> = 1) &&
         ((<check_1148@310:1> = 0) && ((<check_1148@310:2> = 0) && (<<<check_1148@310:3>@313:1>@329:0> <= 0))))
        P[<<check_1148@310:3>@313:0>](<check_1148@310:0>:int,<check_1148@310:1>:int,<check_1148@310:2>:int,<<check_1148@310:3>@313:0>:int) =
        ((<check_1148@310:1> = 0) &&
         ((<check_1148@310:2> = 0) && ((<check_1148@310:0> = 1) && (<<check_1148@310:3>@313:0> = <check_1148@310:1>))))
        P[<fail_1487@334:0>](<fail_1487@334:0>:bool) = false
      upper bounds:
        P[<<array_max_1033@271:3>@306:0>](var1348:int,var1349:int,var1350:int) =
        ((var1349 <> 0) || ((var1350 >= 0) || (0 >= var1348)))
        P[<<array_max_1033@294:3>@297:0>](var1343:int,var1344:int,var1345:int) =
        ((var1344 <> 1) || ((var1345 >= 0) || (0 >= var1343)))
      begin GenHcSolver.classify_pids(531132)[4]
        output:
          [<<array_max_1033@294:3>@297:0>;<<array_max_1033@271:3>@306:0>]
      end GenHcSolver.classify_pids(531132)[4] (0.001000 sec.)
      begin ApronInterface.convex_hull_interpolate(531215)[4]
        lb:(((<<array_max_1033@294:3>@297:0> = 0) &&
             ((<array_max_1033@294:1> = 1) && (<array_max_1033@294:1> = <array_max_1033@294:0>))) ||
            ((<<array_max_1033@294:3>@297:0> = 0) &&
             ((<array_max_1033@294:1> = 0) && ((1 + <array_max_1033@294:1>) = <array_max_1033@294:0>))))
        nub:((not
                ((<array_max_1033@294:1> <> 1) ||
                 ((<<array_max_1033@294:3>@297:0> >= 0) || (0 >= <array_max_1033@294:0>)))) ||
             (not
                ((<array_max_1033@294:1> <> 0) ||
                 ((<<array_max_1033@294:3>@297:0> >= 0) || (0 >= <array_max_1033@294:0>)))))
        lb':(((<<array_max_1033@294:3>@297:0> = 0) &&
              ((<array_max_1033@294:1> = 1) && (<array_max_1033@294:1> = <array_max_1033@294:0>))) ||
             ((<<array_max_1033@294:3>@297:0> = 0) &&
              ((<array_max_1033@294:1> = 0) && ((1 + <array_max_1033@294:1>) = <array_max_1033@294:0>))))
        nub':((not
                 ((<array_max_1033@294:1> <> 1) ||
                  ((<<array_max_1033@294:3>@297:0> >= 0) || (0 >= <array_max_1033@294:0>)))) ||
              (not
                 ((<array_max_1033@294:1> <> 0) ||
                  ((<<array_max_1033@294:3>@297:0> >= 0) || (0 >= <array_max_1033@294:0>)))))
        begin InterpProver.interpolate(531216)[5]
          begin InterpProver.interpolate_fresh(531217)[6]
            begin InterpProver.interpolate_log(531218)[7]
              input1: (((<<array_max_1033@294:3>@297:0> = 0) &&
                        ((<array_max_1033@294:1> = 1) && (<array_max_1033@294:1> = <array_max_1033@294:0>))) ||
                       ((<<array_max_1033@294:3>@297:0> = 0) &&
                        ((<array_max_1033@294:1> = 0) && ((1 + <array_max_1033@294:1>) = <array_max_1033@294:0>))))
              input2: ((not
                          ((<array_max_1033@294:1> <> 1) ||
                           ((<<array_max_1033@294:3>@297:0> >= 0) || (0 >= <array_max_1033@294:0>)))) ||
                       (not
                          ((<array_max_1033@294:1> <> 0) ||
                           ((<<array_max_1033@294:3>@297:0> >= 0) || (0 >= <array_max_1033@294:0>)))))
              begin InterpProver.interpolate_check(531219)[8]
                begin InterpProver.interpolate_simplify(531220)[9]
                  begin InterpProver.interpolate_quick(531455)[10]
                    begin CsisatInterface.interpolate_csisat_wrap(531464)[11]
                      begin CsisatInterface.interpolate_csisat_post_process(531465)[12]
                        begin CsisatInterface.interpolate_csisat_log(531466)[13]
                          input1: (((0 = v_sep_array_max_1033_sep_294_sep_1 & v_sep_array_max_1033_sep_294_sep_0 = (1 + v_sep_array_max_1033_sep_294_sep_1)) | (1 = v_sep_array_max_1033_sep_294_sep_1 & v_sep_array_max_1033_sep_294_sep_0 = v_sep_array_max_1033_sep_294_sep_1)) & 0 = v_sep_array_max_1033_sep_294_sep_3_sep_297_sep_0)
                          input2: ((0 = v_sep_array_max_1033_sep_294_sep_1 | 1 = v_sep_array_max_1033_sep_294_sep_1) & 1 <= v_sep_array_max_1033_sep_294_sep_0 & (1 + v_sep_array_max_1033_sep_294_sep_3_sep_297_sep_0) <= 0)
                          begin CsisatInterface.interpolate_csisat_raw(531467)[14]
                            
                          end CsisatInterface.interpolate_csisat_raw(531467)[14] (0.002000 sec.)
                          output: ((not 1 = v_sep_array_max_1033_sep_294_sep_1 | -2*v_sep_array_max_1033_sep_294_sep_3_sep_297_sep_0 <= 0) & (1 = v_sep_array_max_1033_sep_294_sep_1 | -2*v_sep_array_max_1033_sep_294_sep_3_sep_297_sep_0 <= 0))
                          
                        end CsisatInterface.interpolate_csisat_log(531466)[13] (0.002000 sec.)
                        after simplification: ((not 1 = v_sep_array_max_1033_sep_294_sep_1 | -2*v_sep_array_max_1033_sep_294_sep_3_sep_297_sep_0 <= 0) & (1 = v_sep_array_max_1033_sep_294_sep_1 | -2*v_sep_array_max_1033_sep_294_sep_3_sep_297_sep_0 <= 0))
                        after dnf conversion: ((not 1 = v_sep_array_max_1033_sep_294_sep_1 & 1 = v_sep_array_max_1033_sep_294_sep_1) | (not 1 = v_sep_array_max_1033_sep_294_sep_1 & -2*v_sep_array_max_1033_sep_294_sep_3_sep_297_sep_0 <= 0) | (-2*v_sep_array_max_1033_sep_294_sep_3_sep_297_sep_0 <= 0 & 1 = v_sep_array_max_1033_sep_294_sep_1) | (-2*v_sep_array_max_1033_sep_294_sep_3_sep_297_sep_0 <= 0 & -2*v_sep_array_max_1033_sep_294_sep_3_sep_297_sep_0 <= 0))
                        
                      end CsisatInterface.interpolate_csisat_post_process(531465)[12] (0.002000 sec.)
                      
                    end CsisatInterface.interpolate_csisat_wrap(531464)[11] (0.002000 sec.)
                    
                  end InterpProver.interpolate_quick(531455)[10] (0.002000 sec.)
                  
                end InterpProver.interpolate_simplify(531220)[9] (0.003000 sec.)
                
              end InterpProver.interpolate_check(531219)[8] (0.005000 sec.)
              output: (0 <= <<array_max_1033@294:3>@297:0>)
            end InterpProver.interpolate_log(531218)[7] (0.005999 sec.)
            
          end InterpProver.interpolate_fresh(531217)[6] (0.005999 sec.)
          
        end InterpProver.interpolate(531216)[5] (0.005999 sec.)
        output:
          P[<<array_max_1033@294:3>@297:0>](<array_max_1033@294:0>:int,<array_max_1033@294:1>:int,<<array_max_1033@294:3>@297:0>:int) =
          (0 <= <<array_max_1033@294:3>@297:0>)
          P[<<array_max_1033@271:3>@306:0>](<array_max_1033@294:0>:int,<array_max_1033@294:1>:int,<<array_max_1033@294:3>@297:0>:int) =
          (0 <= <<array_max_1033@294:3>@297:0>)
      end ApronInterface.convex_hull_interpolate(531215)[4] (0.005999 sec.)
      Horn clauses:
        P[<fail_1487@334:0>](<fail_1487@334:0>:bool)|- bot
        
        P[<check_1148@310:2>](<f_check_1482@331:2>:int,<f_check_1482@331:0>:int,<f_check_1482@331:1>:int),
        P[<<<check_1148@310:3>@313:1>@329:0>](<f_check_1482@331:2>:int,<f_check_1482@331:0>:int,<f_check_1482@331:1>:int,<f_check_1482@331:0>:int,<f_check_1482@331:5>:int),
        ((<f_check_1482@331:5> > <f_check_1482@331:1>) &&
         ((<f_check_1482@331:0> < <f_check_1482@331:2>) && <fail_1487@334:0>))
        |- P[<fail_1487@334:0>](<fail_1487@334:0>:bool)
        
        P[<check_1148@310:2>](<check_1148@310:0>:int,<check_1148@310:1>:int,<check_1148@310:2>:int),
        ((<check_1148@310:1> = 0) && ((<<<check_1148@310:3>@313:1>@329:0> <= 0) && (0 <= <check_1148@310:2>)))
        |- P[<<<check_1148@310:3>@313:1>@329:0>](<check_1148@310:0>:int,
                                                 <check_1148@310:1>:int,
                                                 <check_1148@310:2>:int,
                                                 <<check_1148@310:3>@313:0>:int,
                                                 <<<check_1148@310:3>@313:1>@329:0>:int)
        
        P[<<check_1148@310:3>@313:0>](<make_array_1030@315:0>:int,0:int,<check_1148@310:2>:int,<make_array_1030@315:1>:int),
        ((<make_array_1030@315:1> > 0) && (0 <= <check_1148@310:2>)) |- bot
        
        P[<check_1148@310:2>](<check_1148@310:0>:int,<check_1148@310:1>:int,<check_1148@310:2>:int),
        ((<check_1148@310:1> < <check_1148@310:0>) && (<<check_1148@310:3>@313:0> = <check_1148@310:1>))
        |- P[<<check_1148@310:3>@313:0>](<check_1148@310:0>:int,<check_1148@310:1>:int,
                                         <check_1148@310:2>:int,<<check_1148@310:3>@313:0>:int)
        
         ((<check_1148@310:1> = 0) && (0 <= <check_1148@310:2>))
        |- P[<check_1148@310:2>](<check_1148@310:0>:int,<check_1148@310:1>:int,
                                 <check_1148@310:2>:int)
        
        P[<array_max_1033@271:1>](<array_max_1033@294:0>:int,(-1 + <array_max_1033@294:1>):int),
        P[<<<array_max_1033@271:2>@274:1>@290:0>](<array_max_1033@294:0>:int,(
                                                  -1 + <array_max_1033@294:1>):int,(
                                                  -1 + <array_max_1033@294:1>):int,<f_array_max_1480@292:4>:int),
        (<array_max_1033@294:1> < (1 + <array_max_1033@294:0>))
        |- P[<array_max_1033@294:1>](<array_max_1033@294:0>:int,<array_max_1033@294:1>:int)
        
        P[<array_max_1033@271:1>](<array_max_1033@271:0>:int,<array_max_1033@271:1>:int),
        ((<array_max_1033@271:1> = 0) && (<<<array_max_1033@271:2>@274:1>@290:0> <= 0))
        |- P[<<<array_max_1033@271:2>@274:1>@290:0>](<array_max_1033@271:0>:int,
                                                     <array_max_1033@271:1>:int,
                                                     <<array_max_1033@271:2>@274:0>:int,
                                                     <<<array_max_1033@271:2>@274:1>@290:0>:int)
        
        P[<<array_max_1033@271:2>@274:0>](<make_array_1030@276:0>:int,0:int,<make_array_1030@276:1>:int),
        (<make_array_1030@276:1> > 0) |- bot
        
        P[<array_max_1033@271:1>](<array_max_1033@271:0>:int,<array_max_1033@271:1>:int),
        ((<array_max_1033@271:1> < <array_max_1033@271:0>) && (<<array_max_1033@271:2>@274:0> = <array_max_1033@271:1>))
        |- P[<<array_max_1033@271:2>@274:0>](<array_max_1033@271:0>:int,
                                             <array_max_1033@271:1>:int,
                                             <<array_max_1033@271:2>@274:0>:int)
        
         (<array_max_1033@271:1> = 0)
        |- P[<array_max_1033@271:1>](<array_max_1033@271:0>:int,<array_max_1033@271:1>:int)
      lower bounds:
        P[<check_1148@310:2>](<check_1148@310:0>:int,<check_1148@310:1>:int,<check_1148@310:2>:int) =
        ((<check_1148@310:1> = 0) && (0 <= <check_1148@310:2>))
        P[<array_max_1033@271:1>](<array_max_1033@271:0>:int,<array_max_1033@271:1>:int) = (<array_max_1033@271:1> = 0)
        P[<<<check_1148@310:3>@313:1>@329:0>](<check_1148@310:0>:int,<check_1148@310:1>:int,<check_1148@310:2>:int,<<check_1148@310:3>@313:0>:int,<<<check_1148@310:3>@313:1>@329:0>:int) =
        ((<check_1148@310:1> = 0) && ((<<<check_1148@310:3>@313:1>@329:0> <= 0) && (0 <= <check_1148@310:2>)))
        P[<<check_1148@310:3>@313:0>](<check_1148@310:0>:int,<check_1148@310:1>:int,<check_1148@310:2>:int,<<check_1148@310:3>@313:0>:int) =
        ((<check_1148@310:1> = 0) &&
         ((<check_1148@310:1> < <check_1148@310:0>) &&
          ((0 <= <check_1148@310:2>) && (<<check_1148@310:3>@313:0> = <check_1148@310:1>))))
        P[<<<array_max_1033@271:2>@274:1>@290:0>](<array_max_1033@271:0>:int,<array_max_1033@271:1>:int,<<array_max_1033@271:2>@274:0>:int,<<<array_max_1033@271:2>@274:1>@290:0>:int) =
        ((<array_max_1033@271:1> = 0) && (<<<array_max_1033@271:2>@274:1>@290:0> <= 0))
        P[<<array_max_1033@271:2>@274:0>](<array_max_1033@271:0>:int,<array_max_1033@271:1>:int,<<array_max_1033@271:2>@274:0>:int) =
        ((<array_max_1033@271:1> = 0) &&
         ((<array_max_1033@271:1> < <array_max_1033@271:0>) &&
          (<<array_max_1033@271:2>@274:0> = <array_max_1033@271:1>)))
        P[<fail_1487@334:0>](<fail_1487@334:0>:bool) = false
        P[<array_max_1033@294:1>](<array_max_1033@294:0>:int,<array_max_1033@294:1>:int) =
        ((<array_max_1033@294:1> = 1) && (<array_max_1033@294:1> < (1 + <array_max_1033@294:0>)))
      upper bounds:
        P[<array_max_1033@294:1>](var1353:int,var1354:int) = true
        P[<array_max_1033@271:1>](var1351:int,var1352:int) = true
      begin GenHcSolver.classify_pids(543213)[4]
        output:
          [<array_max_1033@271:1>;<array_max_1033@294:1>]
      end GenHcSolver.classify_pids(543213)[4] (0.000000 sec.)
      begin ApronInterface.convex_hull_interpolate(543224)[4]
        lb:((<array_max_1033@271:1> = 0) ||
            ((<array_max_1033@271:1> = 1) && (<array_max_1033@271:1> < (1 + <array_max_1033@271:0>))))
        nub:false
        lb':((<array_max_1033@271:1> = 0) ||
             ((<array_max_1033@271:1> = 1) && (<array_max_1033@271:1> < (1 + <array_max_1033@271:0>))))
        nub':false
        begin InterpProver.interpolate(543225)[5]
          begin InterpProver.interpolate_fresh(543226)[6]
            begin InterpProver.interpolate_log(543227)[7]
              input1: ((<array_max_1033@271:1> = 0) ||
                       ((<array_max_1033@271:1> = 1) && (<array_max_1033@271:1> < (1 + <array_max_1033@271:0>))))
              input2: false
              begin InterpProver.interpolate_check(543228)[8]
                begin InterpProver.interpolate_simplify(543229)[9]
                  begin InterpProver.interpolate_quick(543274)[10]
                    
                  end InterpProver.interpolate_quick(543274)[10] (0.001000 sec.)
                  
                end InterpProver.interpolate_simplify(543229)[9] (0.001000 sec.)
                
              end InterpProver.interpolate_check(543228)[8] (0.001000 sec.)
              output: true
            end InterpProver.interpolate_log(543227)[7] (0.001000 sec.)
            
          end InterpProver.interpolate_fresh(543226)[6] (0.001000 sec.)
          
        end InterpProver.interpolate(543225)[5] (0.001000 sec.)
        output:
          P[<array_max_1033@271:1>](<array_max_1033@271:0>:int,<array_max_1033@271:1>:int) = true
          P[<array_max_1033@294:1>](<array_max_1033@271:0>:int,<array_max_1033@271:1>:int) = true
      end ApronInterface.convex_hull_interpolate(543224)[4] (0.001000 sec.)
      Horn clauses:
        P[<fail_1487@334:0>](<fail_1487@334:0>:bool)|- bot
        
        P[<check_1148@310:2>](<f_check_1482@331:2>:int,<f_check_1482@331:0>:int,<f_check_1482@331:1>:int),
        P[<<<check_1148@310:3>@313:1>@329:0>](<f_check_1482@331:2>:int,<f_check_1482@331:0>:int,<f_check_1482@331:1>:int,<f_check_1482@331:0>:int,<f_check_1482@331:5>:int),
        ((<f_check_1482@331:5> > <f_check_1482@331:1>) &&
         ((<f_check_1482@331:0> < <f_check_1482@331:2>) && <fail_1487@334:0>))
        |- P[<fail_1487@334:0>](<fail_1487@334:0>:bool)
        
        P[<check_1148@310:2>](<check_1148@310:0>:int,<check_1148@310:1>:int,<check_1148@310:2>:int),
        ((<check_1148@310:1> = 0) && ((<<<check_1148@310:3>@313:1>@329:0> <= 0) && (0 <= <check_1148@310:2>)))
        |- P[<<<check_1148@310:3>@313:1>@329:0>](<check_1148@310:0>:int,
                                                 <check_1148@310:1>:int,
                                                 <check_1148@310:2>:int,
                                                 <<check_1148@310:3>@313:0>:int,
                                                 <<<check_1148@310:3>@313:1>@329:0>:int)
        
        P[<<check_1148@310:3>@313:0>](<make_array_1030@315:0>:int,0:int,<check_1148@310:2>:int,<make_array_1030@315:1>:int),
        ((<make_array_1030@315:1> > 0) && (0 <= <check_1148@310:2>)) |- bot
        
        P[<check_1148@310:2>](<check_1148@310:0>:int,<check_1148@310:1>:int,<check_1148@310:2>:int),
        ((<check_1148@310:1> < <check_1148@310:0>) && (<<check_1148@310:3>@313:0> = <check_1148@310:1>))
        |- P[<<check_1148@310:3>@313:0>](<check_1148@310:0>:int,<check_1148@310:1>:int,
                                         <check_1148@310:2>:int,<<check_1148@310:3>@313:0>:int)
        
         ((<check_1148@310:1> = 0) && (0 <= <check_1148@310:2>))
        |- P[<check_1148@310:2>](<check_1148@310:0>:int,<check_1148@310:1>:int,
                                 <check_1148@310:2>:int)
        
         ((<array_max_1033@271:1> = 0) && (<<<array_max_1033@271:2>@274:1>@290:0> <= 0))
        |- P[<<<array_max_1033@271:2>@274:1>@290:0>](<array_max_1033@271:0>:int,
                                                     <array_max_1033@271:1>:int,
                                                     <<array_max_1033@271:2>@274:0>:int,
                                                     <<<array_max_1033@271:2>@274:1>@290:0>:int)
        
        P[<<array_max_1033@271:2>@274:0>](<make_array_1030@276:0>:int,0:int,<make_array_1030@276:1>:int),
        (<make_array_1030@276:1> > 0) |- bot
        
        
        ((<array_max_1033@271:1> < <array_max_1033@271:0>) && (<<array_max_1033@271:2>@274:0> = <array_max_1033@271:1>))
        |- P[<<array_max_1033@271:2>@274:0>](<array_max_1033@271:0>:int,
                                             <array_max_1033@271:1>:int,
                                             <<array_max_1033@271:2>@274:0>:int)
      lower bounds:
        P[<check_1148@310:2>](<check_1148@310:0>:int,<check_1148@310:1>:int,<check_1148@310:2>:int) =
        ((<check_1148@310:1> = 0) && (0 <= <check_1148@310:2>))
        P[<<<array_max_1033@271:2>@274:1>@290:0>](<array_max_1033@271:0>:int,<array_max_1033@271:1>:int,<<array_max_1033@271:2>@274:0>:int,<<<array_max_1033@271:2>@274:1>@290:0>:int) =
        ((<array_max_1033@271:1> = 0) && (<<<array_max_1033@271:2>@274:1>@290:0> <= 0))
        P[<<array_max_1033@271:2>@274:0>](<array_max_1033@271:0>:int,<array_max_1033@271:1>:int,<<array_max_1033@271:2>@274:0>:int) =
        ((<array_max_1033@271:1> < <array_max_1033@271:0>) && (<<array_max_1033@271:2>@274:0> = <array_max_1033@271:1>))
        P[<<<check_1148@310:3>@313:1>@329:0>](<check_1148@310:0>:int,<check_1148@310:1>:int,<check_1148@310:2>:int,<<check_1148@310:3>@313:0>:int,<<<check_1148@310:3>@313:1>@329:0>:int) =
        ((<check_1148@310:1> = 0) && ((<<<check_1148@310:3>@313:1>@329:0> <= 0) && (0 <= <check_1148@310:2>)))
        P[<<check_1148@310:3>@313:0>](<check_1148@310:0>:int,<check_1148@310:1>:int,<check_1148@310:2>:int,<<check_1148@310:3>@313:0>:int) =
        ((<check_1148@310:1> = 0) &&
         ((<check_1148@310:1> < <check_1148@310:0>) &&
          ((0 <= <check_1148@310:2>) && (<<check_1148@310:3>@313:0> = <check_1148@310:1>))))
        P[<fail_1487@334:0>](<fail_1487@334:0>:bool) = false
      upper bounds:
        P[<<<array_max_1033@271:2>@274:1>@290:0>](var1355:int,var1356:int,var1357:int,var1358:int) = true
      begin GenHcSolver.classify_pids(550447)[4]
        output:
          [<<<array_max_1033@271:2>@274:1>@290:0>]
      end GenHcSolver.classify_pids(550447)[4] (0.000000 sec.)
      lb:((<array_max_1033@271:1> = 0) && (<<<array_max_1033@271:2>@274:1>@290:0> <= 0))
      nub:false
      begin ApronInterface.convex_hull_interpolate(550450)[4]
        lb:((<array_max_1033@271:1> = 0) && (<<<array_max_1033@271:2>@274:1>@290:0> <= 0))
        nub:false
        lb':((<array_max_1033@271:1> = 0) && (<<<array_max_1033@271:2>@274:1>@290:0> <= 0))
        nub':false
        begin InterpProver.interpolate(550451)[5]
          begin InterpProver.interpolate_fresh(550452)[6]
            begin InterpProver.interpolate_log(550453)[7]
              input1: ((<array_max_1033@271:1> = 0) && (<<<array_max_1033@271:2>@274:1>@290:0> <= 0))
              input2: false
              begin InterpProver.interpolate_check(550454)[8]
                begin InterpProver.interpolate_simplify(550455)[9]
                  begin InterpProver.interpolate_quick(550487)[10]
                    
                  end InterpProver.interpolate_quick(550487)[10] (0.000999 sec.)
                  
                end InterpProver.interpolate_simplify(550455)[9] (0.000999 sec.)
                
              end InterpProver.interpolate_check(550454)[8] (0.000999 sec.)
              output: true
            end InterpProver.interpolate_log(550453)[7] (0.000999 sec.)
            
          end InterpProver.interpolate_fresh(550452)[6] (0.000999 sec.)
          
        end InterpProver.interpolate(550451)[5] (0.000999 sec.)
        output:
          P[<<<array_max_1033@271:2>@274:1>@290:0>](<array_max_1033@271:0>:int,<array_max_1033@271:1>:int,<<array_max_1033@271:2>@274:0>:int,<<<array_max_1033@271:2>@274:1>@290:0>:int) =
          true
      end ApronInterface.convex_hull_interpolate(550450)[4] (0.001999 sec.)
      Horn clauses:
        P[<fail_1487@334:0>](<fail_1487@334:0>:bool)|- bot
        
        P[<check_1148@310:2>](<f_check_1482@331:2>:int,<f_check_1482@331:0>:int,<f_check_1482@331:1>:int),
        P[<<<check_1148@310:3>@313:1>@329:0>](<f_check_1482@331:2>:int,<f_check_1482@331:0>:int,<f_check_1482@331:1>:int,<f_check_1482@331:0>:int,<f_check_1482@331:5>:int),
        ((<f_check_1482@331:5> > <f_check_1482@331:1>) &&
         ((<f_check_1482@331:0> < <f_check_1482@331:2>) && <fail_1487@334:0>))
        |- P[<fail_1487@334:0>](<fail_1487@334:0>:bool)
        
        P[<check_1148@310:2>](<check_1148@310:0>:int,<check_1148@310:1>:int,<check_1148@310:2>:int),
        ((<check_1148@310:1> = 0) && ((<<<check_1148@310:3>@313:1>@329:0> <= 0) && (0 <= <check_1148@310:2>)))
        |- P[<<<check_1148@310:3>@313:1>@329:0>](<check_1148@310:0>:int,
                                                 <check_1148@310:1>:int,
                                                 <check_1148@310:2>:int,
                                                 <<check_1148@310:3>@313:0>:int,
                                                 <<<check_1148@310:3>@313:1>@329:0>:int)
        
        P[<<check_1148@310:3>@313:0>](<make_array_1030@315:0>:int,0:int,<check_1148@310:2>:int,<make_array_1030@315:1>:int),
        ((<make_array_1030@315:1> > 0) && (0 <= <check_1148@310:2>)) |- bot
        
        P[<check_1148@310:2>](<check_1148@310:0>:int,<check_1148@310:1>:int,<check_1148@310:2>:int),
        ((<check_1148@310:1> < <check_1148@310:0>) && (<<check_1148@310:3>@313:0> = <check_1148@310:1>))
        |- P[<<check_1148@310:3>@313:0>](<check_1148@310:0>:int,<check_1148@310:1>:int,
                                         <check_1148@310:2>:int,<<check_1148@310:3>@313:0>:int)
        
         ((<check_1148@310:1> = 0) && (0 <= <check_1148@310:2>))
        |- P[<check_1148@310:2>](<check_1148@310:0>:int,<check_1148@310:1>:int,
                                 <check_1148@310:2>:int)
        
        P[<<array_max_1033@271:2>@274:0>](<make_array_1030@276:0>:int,0:int,<make_array_1030@276:1>:int),
        (<make_array_1030@276:1> > 0) |- bot
        
        
        ((<array_max_1033@271:1> < <array_max_1033@271:0>) && (<<array_max_1033@271:2>@274:0> = <array_max_1033@271:1>))
        |- P[<<array_max_1033@271:2>@274:0>](<array_max_1033@271:0>:int,
                                             <array_max_1033@271:1>:int,
                                             <<array_max_1033@271:2>@274:0>:int)
      lower bounds:
        P[<check_1148@310:2>](<check_1148@310:0>:int,<check_1148@310:1>:int,<check_1148@310:2>:int) =
        ((<check_1148@310:1> = 0) && (0 <= <check_1148@310:2>))
        P[<<array_max_1033@271:2>@274:0>](<array_max_1033@271:0>:int,<array_max_1033@271:1>:int,<<array_max_1033@271:2>@274:0>:int) =
        ((<array_max_1033@271:1> < <array_max_1033@271:0>) && (<<array_max_1033@271:2>@274:0> = <array_max_1033@271:1>))
        P[<<<check_1148@310:3>@313:1>@329:0>](<check_1148@310:0>:int,<check_1148@310:1>:int,<check_1148@310:2>:int,<<check_1148@310:3>@313:0>:int,<<<check_1148@310:3>@313:1>@329:0>:int) =
        ((<check_1148@310:1> = 0) && ((<<<check_1148@310:3>@313:1>@329:0> <= 0) && (0 <= <check_1148@310:2>)))
        P[<<check_1148@310:3>@313:0>](<check_1148@310:0>:int,<check_1148@310:1>:int,<check_1148@310:2>:int,<<check_1148@310:3>@313:0>:int) =
        ((<check_1148@310:1> = 0) &&
         ((<check_1148@310:1> < <check_1148@310:0>) &&
          ((0 <= <check_1148@310:2>) && (<<check_1148@310:3>@313:0> = <check_1148@310:1>))))
        P[<fail_1487@334:0>](<fail_1487@334:0>:bool) = false
      upper bounds:
        P[<fail_1487@334:0>](var1360:bool) = true
      begin GenHcSolver.classify_pids(554849)[4]
        output:
          [<fail_1487@334:0>]
      end GenHcSolver.classify_pids(554849)[4] (0.000000 sec.)
      lb:false
      nub:false
      begin ApronInterface.convex_hull_interpolate(554852)[4]
        lb:false
        nub:false
        lb':false
        nub':false
        begin InterpProver.interpolate(554853)[5]
          begin InterpProver.interpolate_fresh(554854)[6]
            begin InterpProver.interpolate_log(554855)[7]
              input1: false
              input2: false
              begin InterpProver.interpolate_check(554856)[8]
                begin InterpProver.interpolate_simplify(554857)[9]
                  begin InterpProver.interpolate_quick(554870)[10]
                    
                  end InterpProver.interpolate_quick(554870)[10] (0.000000 sec.)
                  begin minimizing # of disjunctions(554874)[10]
                    input: false
                    output: false
                  end minimizing # of disjunctions(554874)[10] (0.000000 sec.)
                  
                end InterpProver.interpolate_simplify(554857)[9] (0.000000 sec.)
                
              end InterpProver.interpolate_check(554856)[8] (0.000000 sec.)
              output: false
            end InterpProver.interpolate_log(554855)[7] (0.000000 sec.)
            
          end InterpProver.interpolate_fresh(554854)[6] (0.000000 sec.)
          
        end InterpProver.interpolate(554853)[5] (0.000000 sec.)
        output:
          P[<fail_1487@334:0>](<fail_1487@334:0>:bool) = false
      end ApronInterface.convex_hull_interpolate(554852)[4] (0.000000 sec.)
      Horn clauses:
        P[<check_1148@310:2>](<f_check_1482@331:2>:int,<f_check_1482@331:0>:int,<f_check_1482@331:1>:int),
        P[<<<check_1148@310:3>@313:1>@329:0>](<f_check_1482@331:2>:int,<f_check_1482@331:0>:int,<f_check_1482@331:1>:int,<f_check_1482@331:0>:int,<f_check_1482@331:5>:int),
        ((<f_check_1482@331:0> < <f_check_1482@331:2>) && (<f_check_1482@331:5> > <f_check_1482@331:1>)) |- bot
        
        P[<check_1148@310:2>](<check_1148@310:0>:int,<check_1148@310:1>:int,<check_1148@310:2>:int),
        ((<check_1148@310:1> = 0) && ((<<<check_1148@310:3>@313:1>@329:0> <= 0) && (0 <= <check_1148@310:2>)))
        |- P[<<<check_1148@310:3>@313:1>@329:0>](<check_1148@310:0>:int,
                                                 <check_1148@310:1>:int,
                                                 <check_1148@310:2>:int,
                                                 <<check_1148@310:3>@313:0>:int,
                                                 <<<check_1148@310:3>@313:1>@329:0>:int)
        
        P[<<check_1148@310:3>@313:0>](<make_array_1030@315:0>:int,0:int,<check_1148@310:2>:int,<make_array_1030@315:1>:int),
        ((<make_array_1030@315:1> > 0) && (0 <= <check_1148@310:2>)) |- bot
        
        P[<check_1148@310:2>](<check_1148@310:0>:int,<check_1148@310:1>:int,<check_1148@310:2>:int),
        ((<check_1148@310:1> < <check_1148@310:0>) && (<<check_1148@310:3>@313:0> = <check_1148@310:1>))
        |- P[<<check_1148@310:3>@313:0>](<check_1148@310:0>:int,<check_1148@310:1>:int,
                                         <check_1148@310:2>:int,<<check_1148@310:3>@313:0>:int)
        
         ((<check_1148@310:1> = 0) && (0 <= <check_1148@310:2>))
        |- P[<check_1148@310:2>](<check_1148@310:0>:int,<check_1148@310:1>:int,
                                 <check_1148@310:2>:int)
        
        P[<<array_max_1033@271:2>@274:0>](<make_array_1030@276:0>:int,0:int,<make_array_1030@276:1>:int),
        (<make_array_1030@276:1> > 0) |- bot
        
        
        ((<array_max_1033@271:1> < <array_max_1033@271:0>) && (<<array_max_1033@271:2>@274:0> = <array_max_1033@271:1>))
        |- P[<<array_max_1033@271:2>@274:0>](<array_max_1033@271:0>:int,
                                             <array_max_1033@271:1>:int,
                                             <<array_max_1033@271:2>@274:0>:int)
      lower bounds:
        P[<check_1148@310:2>](<check_1148@310:0>:int,<check_1148@310:1>:int,<check_1148@310:2>:int) =
        ((<check_1148@310:1> = 0) && (0 <= <check_1148@310:2>))
        P[<<array_max_1033@271:2>@274:0>](<array_max_1033@271:0>:int,<array_max_1033@271:1>:int,<<array_max_1033@271:2>@274:0>:int) =
        ((<array_max_1033@271:1> < <array_max_1033@271:0>) && (<<array_max_1033@271:2>@274:0> = <array_max_1033@271:1>))
        P[<<<check_1148@310:3>@313:1>@329:0>](<check_1148@310:0>:int,<check_1148@310:1>:int,<check_1148@310:2>:int,<<check_1148@310:3>@313:0>:int,<<<check_1148@310:3>@313:1>@329:0>:int) =
        ((<check_1148@310:1> = 0) && ((<<<check_1148@310:3>@313:1>@329:0> <= 0) && (0 <= <check_1148@310:2>)))
        P[<<check_1148@310:3>@313:0>](<check_1148@310:0>:int,<check_1148@310:1>:int,<check_1148@310:2>:int,<<check_1148@310:3>@313:0>:int) =
        ((<check_1148@310:1> = 0) &&
         ((<check_1148@310:1> < <check_1148@310:0>) &&
          ((0 <= <check_1148@310:2>) && (<<check_1148@310:3>@313:0> = <check_1148@310:1>))))
      upper bounds:
        P[<<<check_1148@310:3>@313:1>@329:0>](var1361:int,var1362:int,var1363:int,var1364:int,var1365:int) =
        ((var1362 <> 0) || ((var1364 <> 0) || ((0 > var1363) || ((var1365 <= var1363) || (0 >= var1361)))))
      begin GenHcSolver.classify_pids(559130)[4]
        output:
          [<<<check_1148@310:3>@313:1>@329:0>]
      end GenHcSolver.classify_pids(559130)[4] (0.000000 sec.)
      lb:((<check_1148@310:1> = 0) && ((<<<check_1148@310:3>@313:1>@329:0> <= 0) && (0 <= <check_1148@310:2>)))
      nub:(not
             ((<check_1148@310:1> <> 0) ||
              ((<<check_1148@310:3>@313:0> <> 0) ||
               ((0 > <check_1148@310:2>) ||
                ((<<<check_1148@310:3>@313:1>@329:0> <= <check_1148@310:2>) || (0 >= <check_1148@310:0>))))))
      begin ApronInterface.convex_hull_interpolate(559133)[4]
        lb:((<check_1148@310:1> = 0) && ((<<<check_1148@310:3>@313:1>@329:0> <= 0) && (0 <= <check_1148@310:2>)))
        nub:(not
               ((<check_1148@310:1> <> 0) ||
                ((<<check_1148@310:3>@313:0> <> 0) ||
                 ((0 > <check_1148@310:2>) ||
                  ((<<<check_1148@310:3>@313:1>@329:0> <= <check_1148@310:2>) || (0 >= <check_1148@310:0>))))))
        lb':((<check_1148@310:1> = 0) && ((<<<check_1148@310:3>@313:1>@329:0> <= 0) && (0 <= <check_1148@310:2>)))
        nub':(not
                ((<check_1148@310:1> <> 0) ||
                 ((<<check_1148@310:3>@313:0> <> 0) ||
                  ((0 > <check_1148@310:2>) ||
                   ((<<<check_1148@310:3>@313:1>@329:0> <= <check_1148@310:2>) || (0 >= <check_1148@310:0>))))))
        begin InterpProver.interpolate(559134)[5]
          begin InterpProver.interpolate_fresh(559135)[6]
            begin InterpProver.interpolate_log(559136)[7]
              input1: ((<check_1148@310:1> = 0) &&
                       ((<<<check_1148@310:3>@313:1>@329:0> <= 0) && (0 <= <check_1148@310:2>)))
              input2: (not
                         ((<check_1148@310:1> <> 0) ||
                          ((<<check_1148@310:3>@313:0> <> 0) ||
                           ((0 > <check_1148@310:2>) ||
                            ((<<<check_1148@310:3>@313:1>@329:0> <= <check_1148@310:2>) || (0 >= <check_1148@310:0>))))))
              begin InterpProver.interpolate_check(559137)[8]
                begin InterpProver.interpolate_simplify(559138)[9]
                  begin InterpProver.interpolate_quick(559373)[10]
                    begin CsisatInterface.interpolate_csisat_wrap(559382)[11]
                      begin CsisatInterface.interpolate_csisat_post_process(559383)[12]
                        begin CsisatInterface.interpolate_csisat_log(559384)[13]
                          input1: (0 = v_sep_check_1148_sep_310_sep_1 & 0 <= v_sep_check_1148_sep_310_sep_2 & v_sep_check_1148_sep_310_sep_3_sep_313_sep_1_sep_329_sep_0 <= 0)
                          input2: (0 = v_sep_check_1148_sep_310_sep_1 & 0 <= v_sep_check_1148_sep_310_sep_2 & 1 <= v_sep_check_1148_sep_310_sep_0 & (1 + v_sep_check_1148_sep_310_sep_2) <= v_sep_check_1148_sep_310_sep_3_sep_313_sep_1_sep_329_sep_0)
                          begin CsisatInterface.interpolate_csisat_raw(559385)[14]
                            
                          end CsisatInterface.interpolate_csisat_raw(559385)[14] (0.001000 sec.)
                          output: (-2*v_sep_check_1148_sep_310_sep_2 + 2*v_sep_check_1148_sep_310_sep_3_sep_313_sep_1_sep_329_sep_0) <= 0
                          
                        end CsisatInterface.interpolate_csisat_log(559384)[13] (0.001000 sec.)
                        after simplification: (-2*v_sep_check_1148_sep_310_sep_2 + 2*v_sep_check_1148_sep_310_sep_3_sep_313_sep_1_sep_329_sep_0) <= 0
                        after dnf conversion: (((-2*v_sep_check_1148_sep_310_sep_2 + 2*v_sep_check_1148_sep_310_sep_3_sep_313_sep_1_sep_329_sep_0) <= 0))
                        
                      end CsisatInterface.interpolate_csisat_post_process(559383)[12] (0.001000 sec.)
                      
                    end CsisatInterface.interpolate_csisat_wrap(559382)[11] (0.001000 sec.)
                    
                  end InterpProver.interpolate_quick(559373)[10] (0.001000 sec.)
                  
                end InterpProver.interpolate_simplify(559138)[9] (0.002000 sec.)
                
              end InterpProver.interpolate_check(559137)[8] (0.002000 sec.)
              output: (<<<check_1148@310:3>@313:1>@329:0> <= <check_1148@310:2>)
            end InterpProver.interpolate_log(559136)[7] (0.002000 sec.)
            
          end InterpProver.interpolate_fresh(559135)[6] (0.002000 sec.)
          
        end InterpProver.interpolate(559134)[5] (0.002000 sec.)
        output:
          P[<<<check_1148@310:3>@313:1>@329:0>](<check_1148@310:0>:int,<check_1148@310:1>:int,<check_1148@310:2>:int,<<check_1148@310:3>@313:0>:int,<<<check_1148@310:3>@313:1>@329:0>:int) =
          (<<<check_1148@310:3>@313:1>@329:0> <= <check_1148@310:2>)
      end ApronInterface.convex_hull_interpolate(559133)[4] (0.002000 sec.)
      Horn clauses:
        P[<<check_1148@310:3>@313:0>](<make_array_1030@315:0>:int,0:int,<check_1148@310:2>:int,<make_array_1030@315:1>:int),
        ((<make_array_1030@315:1> > 0) && (0 <= <check_1148@310:2>)) |- bot
        
        P[<check_1148@310:2>](<check_1148@310:0>:int,<check_1148@310:1>:int,<check_1148@310:2>:int),
        ((<check_1148@310:1> < <check_1148@310:0>) && (<<check_1148@310:3>@313:0> = <check_1148@310:1>))
        |- P[<<check_1148@310:3>@313:0>](<check_1148@310:0>:int,<check_1148@310:1>:int,
                                         <check_1148@310:2>:int,<<check_1148@310:3>@313:0>:int)
        
         ((<check_1148@310:1> = 0) && (0 <= <check_1148@310:2>))
        |- P[<check_1148@310:2>](<check_1148@310:0>:int,<check_1148@310:1>:int,
                                 <check_1148@310:2>:int)
        
        P[<<array_max_1033@271:2>@274:0>](<make_array_1030@276:0>:int,0:int,<make_array_1030@276:1>:int),
        (<make_array_1030@276:1> > 0) |- bot
        
        
        ((<array_max_1033@271:1> < <array_max_1033@271:0>) && (<<array_max_1033@271:2>@274:0> = <array_max_1033@271:1>))
        |- P[<<array_max_1033@271:2>@274:0>](<array_max_1033@271:0>:int,
                                             <array_max_1033@271:1>:int,
                                             <<array_max_1033@271:2>@274:0>:int)
      lower bounds:
        P[<check_1148@310:2>](<check_1148@310:0>:int,<check_1148@310:1>:int,<check_1148@310:2>:int) =
        ((<check_1148@310:1> = 0) && (0 <= <check_1148@310:2>))
        P[<<array_max_1033@271:2>@274:0>](<array_max_1033@271:0>:int,<array_max_1033@271:1>:int,<<array_max_1033@271:2>@274:0>:int) =
        ((<array_max_1033@271:1> < <array_max_1033@271:0>) && (<<array_max_1033@271:2>@274:0> = <array_max_1033@271:1>))
        P[<<check_1148@310:3>@313:0>](<check_1148@310:0>:int,<check_1148@310:1>:int,<check_1148@310:2>:int,<<check_1148@310:3>@313:0>:int) =
        ((<check_1148@310:1> = 0) &&
         ((<check_1148@310:1> < <check_1148@310:0>) &&
          ((0 <= <check_1148@310:2>) && (<<check_1148@310:3>@313:0> = <check_1148@310:1>))))
      upper bounds:
        P[<<check_1148@310:3>@313:0>](var1366:int,var1367:int,var1368:int,var1369:int) =
        ((var1367 <> 0) || ((var1369 <= 0) || (0 > var1368)))
      begin GenHcSolver.classify_pids(562205)[4]
        output:
          [<<check_1148@310:3>@313:0>]
      end GenHcSolver.classify_pids(562205)[4] (0.000000 sec.)
      lb:((<check_1148@310:1> = 0) &&
          ((<check_1148@310:1> < <check_1148@310:0>) &&
           ((0 <= <check_1148@310:2>) && (<<check_1148@310:3>@313:0> = <check_1148@310:1>))))
      nub:(not ((<check_1148@310:1> <> 0) || ((<<check_1148@310:3>@313:0> <= 0) || (0 > <check_1148@310:2>))))
      begin ApronInterface.convex_hull_interpolate(562208)[4]
        lb:((<check_1148@310:1> = 0) &&
            ((<check_1148@310:1> < <check_1148@310:0>) &&
             ((0 <= <check_1148@310:2>) && (<<check_1148@310:3>@313:0> = <check_1148@310:1>))))
        nub:(not ((<check_1148@310:1> <> 0) || ((<<check_1148@310:3>@313:0> <= 0) || (0 > <check_1148@310:2>))))
        lb':((<check_1148@310:1> = 0) &&
             ((<check_1148@310:1> < <check_1148@310:0>) &&
              ((0 <= <check_1148@310:2>) && (<<check_1148@310:3>@313:0> = <check_1148@310:1>))))
        nub':(not ((<check_1148@310:1> <> 0) || ((<<check_1148@310:3>@313:0> <= 0) || (0 > <check_1148@310:2>))))
        begin InterpProver.interpolate(562209)[5]
          begin InterpProver.interpolate_fresh(562210)[6]
            begin InterpProver.interpolate_log(562211)[7]
              input1: ((<check_1148@310:1> = 0) &&
                       ((<check_1148@310:1> < <check_1148@310:0>) &&
                        ((0 <= <check_1148@310:2>) && (<<check_1148@310:3>@313:0> = <check_1148@310:1>))))
              input2: (not
                         ((<check_1148@310:1> <> 0) || ((<<check_1148@310:3>@313:0> <= 0) || (0 > <check_1148@310:2>))))
              begin InterpProver.interpolate_check(562212)[8]
                begin InterpProver.interpolate_simplify(562213)[9]
                  begin InterpProver.interpolate_quick(562346)[10]
                    begin CsisatInterface.interpolate_csisat_wrap(562355)[11]
                      begin CsisatInterface.interpolate_csisat_post_process(562356)[12]
                        begin CsisatInterface.interpolate_csisat_log(562357)[13]
                          input1: (0 = v_sep_check_1148_sep_310_sep_1 & v_sep_check_1148_sep_310_sep_1 = v_sep_check_1148_sep_310_sep_3_sep_313_sep_0 & 0 <= v_sep_check_1148_sep_310_sep_2 & (1 + v_sep_check_1148_sep_310_sep_1) <= v_sep_check_1148_sep_310_sep_0)
                          input2: (0 = v_sep_check_1148_sep_310_sep_1 & 0 <= v_sep_check_1148_sep_310_sep_2 & 1 <= v_sep_check_1148_sep_310_sep_3_sep_313_sep_0)
                          begin CsisatInterface.interpolate_csisat_raw(562358)[14]
                            
                          end CsisatInterface.interpolate_csisat_raw(562358)[14] (0.000000 sec.)
                          output: 2*v_sep_check_1148_sep_310_sep_3_sep_313_sep_0 <= 0
                          
                        end CsisatInterface.interpolate_csisat_log(562357)[13] (0.000000 sec.)
                        after simplification: 2*v_sep_check_1148_sep_310_sep_3_sep_313_sep_0 <= 0
                        after dnf conversion: ((2*v_sep_check_1148_sep_310_sep_3_sep_313_sep_0 <= 0))
                        
                      end CsisatInterface.interpolate_csisat_post_process(562356)[12] (0.000000 sec.)
                      
                    end CsisatInterface.interpolate_csisat_wrap(562355)[11] (0.000000 sec.)
                    
                  end InterpProver.interpolate_quick(562346)[10] (0.001000 sec.)
                  
                end InterpProver.interpolate_simplify(562213)[9] (0.001000 sec.)
                
              end InterpProver.interpolate_check(562212)[8] (0.002000 sec.)
              output: (<<check_1148@310:3>@313:0> <= 0)
            end InterpProver.interpolate_log(562211)[7] (0.002999 sec.)
            
          end InterpProver.interpolate_fresh(562210)[6] (0.002999 sec.)
          
        end InterpProver.interpolate(562209)[5] (0.002999 sec.)
        output:
          P[<<check_1148@310:3>@313:0>](<check_1148@310:0>:int,<check_1148@310:1>:int,<check_1148@310:2>:int,<<check_1148@310:3>@313:0>:int) =
          (<<check_1148@310:3>@313:0> <= 0)
      end ApronInterface.convex_hull_interpolate(562208)[4] (0.002999 sec.)
      Horn clauses:
        P[<check_1148@310:2>](<check_1148@310:0>:int,<<check_1148@310:3>@313:0>:int,<check_1148@310:2>:int),
        ((<<check_1148@310:3>@313:0> < <check_1148@310:0>) && (<<check_1148@310:3>@313:0> > 0)) |- bot
        
         ((<check_1148@310:1> = 0) && (0 <= <check_1148@310:2>))
        |- P[<check_1148@310:2>](<check_1148@310:0>:int,<check_1148@310:1>:int,
                                 <check_1148@310:2>:int)
        
        P[<<array_max_1033@271:2>@274:0>](<make_array_1030@276:0>:int,0:int,<make_array_1030@276:1>:int),
        (<make_array_1030@276:1> > 0) |- bot
        
        
        ((<array_max_1033@271:1> < <array_max_1033@271:0>) && (<<array_max_1033@271:2>@274:0> = <array_max_1033@271:1>))
        |- P[<<array_max_1033@271:2>@274:0>](<array_max_1033@271:0>:int,
                                             <array_max_1033@271:1>:int,
                                             <<array_max_1033@271:2>@274:0>:int)
      lower bounds:
        P[<check_1148@310:2>](<check_1148@310:0>:int,<check_1148@310:1>:int,<check_1148@310:2>:int) =
        ((<check_1148@310:1> = 0) && (0 <= <check_1148@310:2>))
        P[<<array_max_1033@271:2>@274:0>](<array_max_1033@271:0>:int,<array_max_1033@271:1>:int,<<array_max_1033@271:2>@274:0>:int) =
        ((<array_max_1033@271:1> < <array_max_1033@271:0>) && (<<array_max_1033@271:2>@274:0> = <array_max_1033@271:1>))
      upper bounds:
        P[<check_1148@310:2>](var1370:int,var1371:int,var1372:int) = ((var1371 >= var1370) || (var1371 <= 0))
      begin GenHcSolver.classify_pids(564009)[4]
        output:
          [<check_1148@310:2>]
      end GenHcSolver.classify_pids(564009)[4] (0.000000 sec.)
      lb:((<check_1148@310:1> = 0) && (0 <= <check_1148@310:2>))
      nub:(not ((<check_1148@310:1> >= <check_1148@310:0>) || (<check_1148@310:1> <= 0)))
      begin ApronInterface.convex_hull_interpolate(564012)[4]
        lb:((<check_1148@310:1> = 0) && (0 <= <check_1148@310:2>))
        nub:(not ((<check_1148@310:1> >= <check_1148@310:0>) || (<check_1148@310:1> <= 0)))
        lb':((<check_1148@310:1> = 0) && (0 <= <check_1148@310:2>))
        nub':(not ((<check_1148@310:1> >= <check_1148@310:0>) || (<check_1148@310:1> <= 0)))
        begin InterpProver.interpolate(564013)[5]
          begin InterpProver.interpolate_fresh(564014)[6]
            begin InterpProver.interpolate_log(564015)[7]
              input1: ((<check_1148@310:1> = 0) && (0 <= <check_1148@310:2>))
              input2: (not ((<check_1148@310:1> >= <check_1148@310:0>) || (<check_1148@310:1> <= 0)))
              begin InterpProver.interpolate_check(564016)[8]
                begin InterpProver.interpolate_simplify(564017)[9]
                  begin InterpProver.interpolate_quick(564068)[10]
                    begin CsisatInterface.interpolate_csisat_wrap(564077)[11]
                      begin CsisatInterface.interpolate_csisat_post_process(564078)[12]
                        begin CsisatInterface.interpolate_csisat_log(564079)[13]
                          input1: (0 = v_sep_check_1148_sep_310_sep_1 & 0 <= v_sep_check_1148_sep_310_sep_2)
                          input2: (1 <= v_sep_check_1148_sep_310_sep_1 & (1 + v_sep_check_1148_sep_310_sep_1) <= v_sep_check_1148_sep_310_sep_0)
                          begin CsisatInterface.interpolate_csisat_raw(564080)[14]
                            
                          end CsisatInterface.interpolate_csisat_raw(564080)[14] (0.000000 sec.)
                          output: 2*v_sep_check_1148_sep_310_sep_1 <= 0
                          
                        end CsisatInterface.interpolate_csisat_log(564079)[13] (0.000000 sec.)
                        after simplification: 2*v_sep_check_1148_sep_310_sep_1 <= 0
                        after dnf conversion: ((2*v_sep_check_1148_sep_310_sep_1 <= 0))
                        
                      end CsisatInterface.interpolate_csisat_post_process(564078)[12] (0.000000 sec.)
                      
                    end CsisatInterface.interpolate_csisat_wrap(564077)[11] (0.000000 sec.)
                    
                  end InterpProver.interpolate_quick(564068)[10] (0.000000 sec.)
                  
                end InterpProver.interpolate_simplify(564017)[9] (0.001000 sec.)
                
              end InterpProver.interpolate_check(564016)[8] (0.002000 sec.)
              output: (<check_1148@310:1> <= 0)
            end InterpProver.interpolate_log(564015)[7] (0.002000 sec.)
            
          end InterpProver.interpolate_fresh(564014)[6] (0.002000 sec.)
          
        end InterpProver.interpolate(564013)[5] (0.002000 sec.)
        output:
          P[<check_1148@310:2>](<check_1148@310:0>:int,<check_1148@310:1>:int,<check_1148@310:2>:int) =
          (<check_1148@310:1> <= 0)
      end ApronInterface.convex_hull_interpolate(564012)[4] (0.002000 sec.)
      Horn clauses:
        P[<<array_max_1033@271:2>@274:0>](<make_array_1030@276:0>:int,0:int,<make_array_1030@276:1>:int),
        (<make_array_1030@276:1> > 0) |- bot
        
        
        ((<array_max_1033@271:1> < <array_max_1033@271:0>) && (<<array_max_1033@271:2>@274:0> = <array_max_1033@271:1>))
        |- P[<<array_max_1033@271:2>@274:0>](<array_max_1033@271:0>:int,
                                             <array_max_1033@271:1>:int,
                                             <<array_max_1033@271:2>@274:0>:int)
      lower bounds:
        P[<<array_max_1033@271:2>@274:0>](<array_max_1033@271:0>:int,<array_max_1033@271:1>:int,<<array_max_1033@271:2>@274:0>:int) =
        ((<array_max_1033@271:1> < <array_max_1033@271:0>) && (<<array_max_1033@271:2>@274:0> = <array_max_1033@271:1>))
      upper bounds:
        P[<<array_max_1033@271:2>@274:0>](var1373:int,var1374:int,var1375:int) = ((var1374 <> 0) || (var1375 <= 0))
      begin GenHcSolver.classify_pids(565077)[4]
        output:
          [<<array_max_1033@271:2>@274:0>]
      end GenHcSolver.classify_pids(565077)[4] (0.000000 sec.)
      lb:((<array_max_1033@271:1> < <array_max_1033@271:0>) &&
          (<<array_max_1033@271:2>@274:0> = <array_max_1033@271:1>))
      nub:(not ((<array_max_1033@271:1> <> 0) || (<<array_max_1033@271:2>@274:0> <= 0)))
      begin ApronInterface.convex_hull_interpolate(565080)[4]
        lb:((<array_max_1033@271:1> < <array_max_1033@271:0>) &&
            (<<array_max_1033@271:2>@274:0> = <array_max_1033@271:1>))
        nub:(not ((<array_max_1033@271:1> <> 0) || (<<array_max_1033@271:2>@274:0> <= 0)))
        lb':((<array_max_1033@271:1> < <array_max_1033@271:0>) &&
             (<<array_max_1033@271:2>@274:0> = <array_max_1033@271:1>))
        nub':(not ((<array_max_1033@271:1> <> 0) || (<<array_max_1033@271:2>@274:0> <= 0)))
        begin InterpProver.interpolate(565081)[5]
          begin InterpProver.interpolate_fresh(565082)[6]
            begin InterpProver.interpolate_log(565083)[7]
              input1: ((<array_max_1033@271:1> < <array_max_1033@271:0>) &&
                       (<<array_max_1033@271:2>@274:0> = <array_max_1033@271:1>))
              input2: (not ((<array_max_1033@271:1> <> 0) || (<<array_max_1033@271:2>@274:0> <= 0)))
              begin InterpProver.interpolate_check(565084)[8]
                begin InterpProver.interpolate_simplify(565085)[9]
                  begin InterpProver.interpolate_quick(565142)[10]
                    begin CsisatInterface.interpolate_csisat_wrap(565151)[11]
                      begin CsisatInterface.interpolate_csisat_post_process(565152)[12]
                        begin CsisatInterface.interpolate_csisat_log(565153)[13]
                          input1: (v_sep_array_max_1033_sep_271_sep_1 = v_sep_array_max_1033_sep_271_sep_2_sep_274_sep_0 & (1 + v_sep_array_max_1033_sep_271_sep_1) <= v_sep_array_max_1033_sep_271_sep_0)
                          input2: (0 = v_sep_array_max_1033_sep_271_sep_1 & 1 <= v_sep_array_max_1033_sep_271_sep_2_sep_274_sep_0)
                          begin CsisatInterface.interpolate_csisat_raw(565154)[14]
                            
                          end CsisatInterface.interpolate_csisat_raw(565154)[14] (0.001000 sec.)
                          output: (-2*v_sep_array_max_1033_sep_271_sep_1 + 2*v_sep_array_max_1033_sep_271_sep_2_sep_274_sep_0) <= 0
                          
                        end CsisatInterface.interpolate_csisat_log(565153)[13] (0.001000 sec.)
                        after simplification: (-2*v_sep_array_max_1033_sep_271_sep_1 + 2*v_sep_array_max_1033_sep_271_sep_2_sep_274_sep_0) <= 0
                        after dnf conversion: (((-2*v_sep_array_max_1033_sep_271_sep_1 + 2*v_sep_array_max_1033_sep_271_sep_2_sep_274_sep_0) <= 0))
                        
                      end CsisatInterface.interpolate_csisat_post_process(565152)[12] (0.001000 sec.)
                      
                    end CsisatInterface.interpolate_csisat_wrap(565151)[11] (0.001000 sec.)
                    
                  end InterpProver.interpolate_quick(565142)[10] (0.002000 sec.)
                  
                end InterpProver.interpolate_simplify(565085)[9] (0.002000 sec.)
                
              end InterpProver.interpolate_check(565084)[8] (0.002000 sec.)
              output: (<<array_max_1033@271:2>@274:0> <= <array_max_1033@271:1>)
            end InterpProver.interpolate_log(565083)[7] (0.002000 sec.)
            
          end InterpProver.interpolate_fresh(565082)[6] (0.002000 sec.)
          
        end InterpProver.interpolate(565081)[5] (0.002000 sec.)
        output:
          P[<<array_max_1033@271:2>@274:0>](<array_max_1033@271:0>:int,<array_max_1033@271:1>:int,<<array_max_1033@271:2>@274:0>:int) =
          (<<array_max_1033@271:2>@274:0> <= <array_max_1033@271:1>)
      end ApronInterface.convex_hull_interpolate(565080)[4] (0.002000 sec.)
      begin HcSolver.check_validity(565339)[4]
        input:
          P[<fail_1487@334:0>](<fail_1487@334:0>:bool)|- bot
          
          P[<check_1148@310:2>](<f_check_1482@331:2>:int,<f_check_1482@331:0>:int,<f_check_1482@331:1>:int),
          P[<<<check_1148@310:3>@313:1>@329:0>](<f_check_1482@331:2>:int,<f_check_1482@331:0>:int,<f_check_1482@331:1>:int,<f_check_1482@331:0>:int,<f_check_1482@331:5>:int),
          ((<f_check_1482@331:5> > <f_check_1482@331:1>) &&
           ((<f_check_1482@331:0> < <f_check_1482@331:2>) && <fail_1487@334:0>))
          |- P[<fail_1487@334:0>](<fail_1487@334:0>:bool)
          
          P[<<array_max_1033@271:3>@306:0>](<check_1148@310:0>:int,0:int,<check_1148@310:2>:int),
          P[<<make_array_1030@315:2>@327:0>](<check_1148@310:0>:int,<<check_1148@310:3>@313:0>:int,<<<check_1148@310:3>@313:1>@329:0>:int),
          P[<check_1148@310:2>](<check_1148@310:0>:int,<check_1148@310:1>:int,<check_1148@310:2>:int),
          (<check_1148@310:1> = 0)
          |- P[<<<check_1148@310:3>@313:1>@329:0>](<check_1148@310:0>:int,
                                                   <check_1148@310:1>:int,
                                                   <check_1148@310:2>:int,
                                                   <<check_1148@310:3>@313:0>:int,
                                                   <<<check_1148@310:3>@313:1>@329:0>:int)
          
          P[<make_array_1030@315:1>](<make_array_1030@315:0>:int,<make_array_1030@315:1>:int),
          ((0 <= <make_array_1030@315:1>) &&
           ((<make_array_1030@315:1> < <make_array_1030@315:0>) &&
            (<<make_array_1030@315:2>@327:0> = <make_array_1030@315:1>)))
          |- P[<<make_array_1030@315:2>@327:0>](<make_array_1030@315:0>:int,
                                                <make_array_1030@315:1>:int,
                                                <<make_array_1030@315:2>@327:0>:int)
          
          P[<<array_max_1033@271:3>@306:0>](<make_array_1030@315:0>:int,0:int,<check_1148@310:2>:int),
          P[<<check_1148@310:3>@313:0>](<make_array_1030@315:0>:int,0:int,<check_1148@310:2>:int,<make_array_1030@315:1>:int)|- P[<make_array_1030@315:1>](
          <make_array_1030@315:0>:int,<make_array_1030@315:1>:int)
          
          P[<check_1148@310:2>](<check_1148@310:0>:int,<check_1148@310:1>:int,<check_1148@310:2>:int),
          ((<check_1148@310:1> < <check_1148@310:0>) && (<<check_1148@310:3>@313:0> = <check_1148@310:1>))
          |- P[<<check_1148@310:3>@313:0>](<check_1148@310:0>:int,<check_1148@310:1>:int,
                                           <check_1148@310:2>:int,<<check_1148@310:3>@313:0>:int)
          
          P[<<array_max_1033@271:3>@306:0>](<check_1148@310:0>:int,0:int,<check_1148@310:2>:int),
          (<check_1148@310:1> = 0)
          |- P[<check_1148@310:2>](<check_1148@310:0>:int,<check_1148@310:1>:int,
                                   <check_1148@310:2>:int)
          
          P[<array_max_1033@271:1>](<array_max_1033@271:0>:int,<array_max_1033@271:1>:int),
          P[<<<array_max_1033@271:2>@274:1>@290:0>](<array_max_1033@271:0>:int,<array_max_1033@271:1>:int,<array_max_1033@271:1>:int,var1315:int),
          P[<<array_max_1033@294:3>@297:0>](<array_max_1033@271:0>:int,(
                                            1 + <array_max_1033@271:1>):int,<<array_max_1033@271:3>@306:0>:int),
          ((var1315 <= <<array_max_1033@271:3>@306:0>) && (<array_max_1033@271:1> < <array_max_1033@271:0>))
          |- P[<<array_max_1033@271:3>@306:0>](<array_max_1033@271:0>:int,
                                               <array_max_1033@271:1>:int,
                                               <<array_max_1033@271:3>@306:0>:int)
          
          P[<array_max_1033@294:1>](<array_max_1033@294:0>:int,<array_max_1033@294:1>:int),
          ((<<array_max_1033@294:3>@297:0> = 0) && (<array_max_1033@294:1> >= <array_max_1033@294:0>))
          |- P[<<array_max_1033@294:3>@297:0>](<array_max_1033@294:0>:int,
                                               <array_max_1033@294:1>:int,
                                               <<array_max_1033@294:3>@297:0>:int)
          
          P[<array_max_1033@271:1>](<array_max_1033@294:0>:int,(-1 + <array_max_1033@294:1>):int),
          P[<<<array_max_1033@271:2>@274:1>@290:0>](<array_max_1033@294:0>:int,(
                                                    -1 + <array_max_1033@294:1>):int,(
                                                    -1 + <array_max_1033@294:1>):int,<f_array_max_1480@292:4>:int),
          (<array_max_1033@294:1> < (1 + <array_max_1033@294:0>))
          |- P[<array_max_1033@294:1>](<array_max_1033@294:0>:int,<array_max_1033@294:1>:int)
          
          P[<<make_array_1030@276:2>@288:0>](<array_max_1033@271:0>:int,<<array_max_1033@271:2>@274:0>:int,<<<array_max_1033@271:2>@274:1>@290:0>:int),
          P[<array_max_1033@271:1>](<array_max_1033@271:0>:int,<array_max_1033@271:1>:int),
          (<array_max_1033@271:1> = 0)
          |- P[<<<array_max_1033@271:2>@274:1>@290:0>](<array_max_1033@271:0>:int,
                                                       <array_max_1033@271:1>:int,
                                                       <<array_max_1033@271:2>@274:0>:int,
                                                       <<<array_max_1033@271:2>@274:1>@290:0>:int)
          
          P[<make_array_1030@276:1>](<make_array_1030@276:0>:int,<make_array_1030@276:1>:int),
          ((0 <= <make_array_1030@276:1>) &&
           ((<make_array_1030@276:1> < <make_array_1030@276:0>) &&
            (<<make_array_1030@276:2>@288:0> = <make_array_1030@276:1>)))
          |- P[<<make_array_1030@276:2>@288:0>](<make_array_1030@276:0>:int,
                                                <make_array_1030@276:1>:int,
                                                <<make_array_1030@276:2>@288:0>:int)
          
          P[<<array_max_1033@271:2>@274:0>](<make_array_1030@276:0>:int,0:int,<make_array_1030@276:1>:int)|- P[<make_array_1030@276:1>](
          <make_array_1030@276:0>:int,<make_array_1030@276:1>:int)
          
          P[<array_max_1033@271:1>](<array_max_1033@271:0>:int,<array_max_1033@271:1>:int),
          ((<array_max_1033@271:1> < <array_max_1033@271:0>) &&
           (<<array_max_1033@271:2>@274:0> = <array_max_1033@271:1>))
          |- P[<<array_max_1033@271:2>@274:0>](<array_max_1033@271:0>:int,
                                               <array_max_1033@271:1>:int,
                                               <<array_max_1033@271:2>@274:0>:int)
          
           (<array_max_1033@271:1> = 0)
          |- P[<array_max_1033@271:1>](<array_max_1033@271:0>:int,<array_max_1033@271:1>:int)
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        
      end HcSolver.check_validity(565339)[4] (0.008999 sec.)
      solution:
        P[<fail_1487@334:0>](<fail_1487@334:0>:bool) = false
        P[<<<check_1148@310:3>@313:1>@329:0>](<check_1148@310:0>:int,<check_1148@310:1>:int,<check_1148@310:2>:int,<<check_1148@310:3>@313:0>:int,<<<check_1148@310:3>@313:1>@329:0>:int) =
        (<<<check_1148@310:3>@313:1>@329:0> <= <check_1148@310:2>)
        P[<<make_array_1030@315:2>@327:0>](<make_array_1030@276:0>:int,<make_array_1030@276:1>:int,<<make_array_1030@276:2>@288:0>:int) =
        (<<make_array_1030@276:2>@288:0> <= 0)
        P[<make_array_1030@315:1>](<make_array_1030@276:0>:int,<make_array_1030@276:1>:int) =
        (<make_array_1030@276:1> <= 0)
        P[<<check_1148@310:3>@313:0>](<check_1148@310:0>:int,<check_1148@310:1>:int,<check_1148@310:2>:int,<<check_1148@310:3>@313:0>:int) =
        (<<check_1148@310:3>@313:0> <= 0)
        P[<check_1148@310:2>](<check_1148@310:0>:int,<check_1148@310:1>:int,<check_1148@310:2>:int) =
        (<check_1148@310:1> <= 0)
        P[<<array_max_1033@271:3>@306:0>](<array_max_1033@294:0>:int,<array_max_1033@294:1>:int,<<array_max_1033@294:3>@297:0>:int) =
        (0 <= <<array_max_1033@294:3>@297:0>)
        P[<<array_max_1033@294:3>@297:0>](<array_max_1033@294:0>:int,<array_max_1033@294:1>:int,<<array_max_1033@294:3>@297:0>:int) =
        (0 <= <<array_max_1033@294:3>@297:0>)
        P[<array_max_1033@294:1>](<array_max_1033@271:0>:int,<array_max_1033@271:1>:int) = true
        P[<<<array_max_1033@271:2>@274:1>@290:0>](<array_max_1033@271:0>:int,<array_max_1033@271:1>:int,<<array_max_1033@271:2>@274:0>:int,<<<array_max_1033@271:2>@274:1>@290:0>:int) =
        true
        P[<<make_array_1030@276:2>@288:0>](<make_array_1030@276:0>:int,<make_array_1030@276:1>:int,<<make_array_1030@276:2>@288:0>:int) =
        (<<make_array_1030@276:2>@288:0> <= 0)
        P[<make_array_1030@276:1>](<make_array_1030@276:0>:int,<make_array_1030@276:1>:int) =
        (<make_array_1030@276:1> <= 0)
        P[<<array_max_1033@271:2>@274:0>](<array_max_1033@271:0>:int,<array_max_1033@271:1>:int,<<array_max_1033@271:2>@274:0>:int) =
        (<<array_max_1033@271:2>@274:0> <= <array_max_1033@271:1>)
        P[<array_max_1033@271:1>](<array_max_1033@271:0>:int,<array_max_1033@271:1>:int) = true
    end GenHcSolver.solve(485129)[3] (0.452931 sec.)
    begin GenHcSolver.solve(567082)[3]
      Horn clauses:
        P[<fail_1487@334:0>](<fail_1487@334:0>:bool)|- bot
        
        P[<check_1148@310:2>](<f_check_1482@331:2>:int,<f_check_1482@331:0>:int,<f_check_1482@331:1>:int),
        P[<<<check_1148@310:3>@313:1>@329:0>](<f_check_1482@331:2>:int,<f_check_1482@331:0>:int,<f_check_1482@331:1>:int,<f_check_1482@331:0>:int,<f_check_1482@331:5>:int),
        ((<f_check_1482@331:5> > <f_check_1482@331:1>) &&
         ((<f_check_1482@331:0> < <f_check_1482@331:2>) && <fail_1487@334:0>))
        |- P[<fail_1487@334:0>](<fail_1487@334:0>:bool)
        
        P[<<array_max_1033@271:3>@306:0>](<check_1148@310:0>:int,0:int,<check_1148@310:2>:int),
        P[<<make_array_1030@315:2>@327:0>](<check_1148@310:0>:int,<<check_1148@310:3>@313:0>:int,<<<check_1148@310:3>@313:1>@329:0>:int),
        P[<check_1148@310:2>](<check_1148@310:0>:int,<check_1148@310:1>:int,<check_1148@310:2>:int),
        (<check_1148@310:1> = 0)
        |- P[<<<check_1148@310:3>@313:1>@329:0>](<check_1148@310:0>:int,
                                                 <check_1148@310:1>:int,
                                                 <check_1148@310:2>:int,
                                                 <<check_1148@310:3>@313:0>:int,
                                                 <<<check_1148@310:3>@313:1>@329:0>:int)
        
        P[<make_array_1030@315:1>](<make_array_1030@315:0>:int,<make_array_1030@315:1>:int),
        ((0 <= <make_array_1030@315:1>) &&
         ((<make_array_1030@315:1> < <make_array_1030@315:0>) &&
          (<<make_array_1030@315:2>@327:0> = <make_array_1030@315:1>)))
        |- P[<<make_array_1030@315:2>@327:0>](<make_array_1030@315:0>:int,
                                              <make_array_1030@315:1>:int,
                                              <<make_array_1030@315:2>@327:0>:int)
        
        P[<<array_max_1033@271:3>@306:0>](<make_array_1030@315:0>:int,0:int,<check_1148@310:2>:int),
        P[<<check_1148@310:3>@313:0>](<make_array_1030@315:0>:int,0:int,<check_1148@310:2>:int,<make_array_1030@315:1>:int)|- P[<make_array_1030@315:1>](
        <make_array_1030@315:0>:int,<make_array_1030@315:1>:int)
        
        P[<check_1148@310:2>](<check_1148@310:0>:int,<check_1148@310:1>:int,<check_1148@310:2>:int),
        ((<check_1148@310:1> < <check_1148@310:0>) && (<<check_1148@310:3>@313:0> = <check_1148@310:1>))
        |- P[<<check_1148@310:3>@313:0>](<check_1148@310:0>:int,<check_1148@310:1>:int,
                                         <check_1148@310:2>:int,<<check_1148@310:3>@313:0>:int)
        
        P[<<array_max_1033@271:3>@306:0>](<check_1148@310:0>:int,0:int,<check_1148@310:2>:int),
        (<check_1148@310:1> = 0)
        |- P[<check_1148@310:2>](<check_1148@310:0>:int,<check_1148@310:1>:int,
                                 <check_1148@310:2>:int)
        
        P[<array_max_1033@271:1>](<array_max_1033@271:0>:int,<array_max_1033@271:1>:int),
        P[<<<array_max_1033@271:2>@274:1>@290:0>](<array_max_1033@271:0>:int,<array_max_1033@271:1>:int,<array_max_1033@271:1>:int,var1315:int),
        P[<<array_max_1033@294:3>@297:0>](<array_max_1033@271:0>:int,(
                                          1 + <array_max_1033@271:1>):int,<<array_max_1033@271:3>@306:0>:int),
        ((var1315 <= <<array_max_1033@271:3>@306:0>) && (<array_max_1033@271:1> < <array_max_1033@271:0>))
        |- P[<<array_max_1033@271:3>@306:0>](<array_max_1033@271:0>:int,
                                             <array_max_1033@271:1>:int,
                                             <<array_max_1033@271:3>@306:0>:int)
        
        P[<array_max_1033@294:1>](<array_max_1033@294:0>:int,<array_max_1033@294:1>:int),
        ((<<array_max_1033@294:3>@297:0> = 0) && (<array_max_1033@294:1> >= <array_max_1033@294:0>))
        |- P[<<array_max_1033@294:3>@297:0>](<array_max_1033@294:0>:int,
                                             <array_max_1033@294:1>:int,
                                             <<array_max_1033@294:3>@297:0>:int)
        
        P[<array_max_1033@271:1>](<array_max_1033@294:0>:int,(-1 + <array_max_1033@294:1>):int),
        P[<<<array_max_1033@271:2>@274:1>@290:0>](<array_max_1033@294:0>:int,(
                                                  -1 + <array_max_1033@294:1>):int,(
                                                  -1 + <array_max_1033@294:1>):int,<f_array_max_1480@292:4>:int),
        (<array_max_1033@294:1> < (1 + <array_max_1033@294:0>))
        |- P[<array_max_1033@294:1>](<array_max_1033@294:0>:int,<array_max_1033@294:1>:int)
        
        P[<<make_array_1030@276:2>@288:0>](<array_max_1033@271:0>:int,<<array_max_1033@271:2>@274:0>:int,<<<array_max_1033@271:2>@274:1>@290:0>:int),
        P[<array_max_1033@271:1>](<array_max_1033@271:0>:int,<array_max_1033@271:1>:int), (
        <array_max_1033@271:1> = 0)
        |- P[<<<array_max_1033@271:2>@274:1>@290:0>](<array_max_1033@271:0>:int,
                                                     <array_max_1033@271:1>:int,
                                                     <<array_max_1033@271:2>@274:0>:int,
                                                     <<<array_max_1033@271:2>@274:1>@290:0>:int)
        
        P[<make_array_1030@276:1>](<make_array_1030@276:0>:int,<make_array_1030@276:1>:int),
        ((0 <= <make_array_1030@276:1>) &&
         ((<make_array_1030@276:1> < <make_array_1030@276:0>) &&
          (<<make_array_1030@276:2>@288:0> = <make_array_1030@276:1>)))
        |- P[<<make_array_1030@276:2>@288:0>](<make_array_1030@276:0>:int,
                                              <make_array_1030@276:1>:int,
                                              <<make_array_1030@276:2>@288:0>:int)
        
        P[<<array_max_1033@271:2>@274:0>](<make_array_1030@276:0>:int,0:int,<make_array_1030@276:1>:int)|- P[<make_array_1030@276:1>](
        <make_array_1030@276:0>:int,<make_array_1030@276:1>:int)
        
        P[<array_max_1033@271:1>](<array_max_1033@271:0>:int,<array_max_1033@271:1>:int),
        ((<array_max_1033@271:1> < <array_max_1033@271:0>) && (<<array_max_1033@271:2>@274:0> = <array_max_1033@271:1>))
        |- P[<<array_max_1033@271:2>@274:0>](<array_max_1033@271:0>:int,
                                             <array_max_1033@271:1>:int,
                                             <<array_max_1033@271:2>@274:0>:int)
        
         (<array_max_1033@271:1> = 0)
        |- P[<array_max_1033@271:1>](<array_max_1033@271:0>:int,<array_max_1033@271:1>:int)
      lower bounds:
        P[<array_max_1033@271:1>](<array_max_1033@271:0>:int,<array_max_1033@271:1>:int) = (<array_max_1033@271:1> = 0)
        P[<<array_max_1033@271:2>@274:0>](<array_max_1033@271:0>:int,<array_max_1033@271:1>:int,<<array_max_1033@271:2>@274:0>:int) =
        ((<array_max_1033@271:1> = 0) &&
         ((<array_max_1033@271:1> < <array_max_1033@271:0>) &&
          (<<array_max_1033@271:2>@274:0> = <array_max_1033@271:1>)))
        P[<make_array_1030@276:1>](<make_array_1030@276:0>:int,<make_array_1030@276:1>:int) =
        ((<make_array_1030@276:1> = 0) && (0 < <make_array_1030@276:0>))
        P[<<make_array_1030@276:2>@288:0>](<make_array_1030@276:0>:int,<make_array_1030@276:1>:int,<<make_array_1030@276:2>@288:0>:int) =
        ((<make_array_1030@276:1> = 0) &&
         ((<make_array_1030@276:1> < <make_array_1030@276:0>) &&
          ((0 < <make_array_1030@276:0>) && (<<make_array_1030@276:2>@288:0> = <make_array_1030@276:1>))))
        P[<<<array_max_1033@271:2>@274:1>@290:0>](<array_max_1033@271:0>:int,<array_max_1033@271:1>:int,<<array_max_1033@271:2>@274:0>:int,<<<array_max_1033@271:2>@274:1>@290:0>:int) =
        ((<<array_max_1033@271:2>@274:0> = 0) &&
         ((<array_max_1033@271:1> = 0) &&
          ((<<array_max_1033@271:2>@274:0> < <array_max_1033@271:0>) &&
           ((0 < <array_max_1033@271:0>) && (<<<array_max_1033@271:2>@274:1>@290:0> = <<array_max_1033@271:2>@274:0>)))))
        P[<array_max_1033@294:1>](<array_max_1033@294:0>:int,<array_max_1033@294:1>:int) =
        ((<array_max_1033@294:1> = 1) &&
         ((0 < <array_max_1033@294:0>) && (<array_max_1033@294:1> < (1 + <array_max_1033@294:0>))))
        P[<<array_max_1033@294:3>@297:0>](<array_max_1033@294:0>:int,<array_max_1033@294:1>:int,<<array_max_1033@294:3>@297:0>:int) =
        ((<<array_max_1033@294:3>@297:0> = 0) &&
         ((<array_max_1033@294:1> = 1) &&
          ((0 < <array_max_1033@294:0>) && (<array_max_1033@294:1> = <array_max_1033@294:0>))))
        P[<<array_max_1033@271:3>@306:0>](<array_max_1033@271:0>:int,<array_max_1033@271:1>:int,<<array_max_1033@271:3>@306:0>:int) =
        ((<<array_max_1033@271:3>@306:0> = 0) &&
         ((<array_max_1033@271:1> = 0) &&
          (((1 + <array_max_1033@271:1>) = <array_max_1033@271:0>) && (0 < <array_max_1033@271:0>))))
        P[<check_1148@310:2>](<check_1148@310:0>:int,<check_1148@310:1>:int,<check_1148@310:2>:int) =
        ((<check_1148@310:1> = 0) && ((<check_1148@310:2> = 0) && (<check_1148@310:0> = 1)))
        P[<<check_1148@310:3>@313:0>](<check_1148@310:0>:int,<check_1148@310:1>:int,<check_1148@310:2>:int,<<check_1148@310:3>@313:0>:int) =
        ((<check_1148@310:1> = 0) &&
         ((<check_1148@310:2> = 0) && ((<check_1148@310:0> = 1) && (<<check_1148@310:3>@313:0> = <check_1148@310:1>))))
        P[<make_array_1030@315:1>](<make_array_1030@315:0>:int,<make_array_1030@315:1>:int) =
        ((<make_array_1030@315:1> = 0) && (<make_array_1030@315:0> = 1))
        P[<<make_array_1030@315:2>@327:0>](<make_array_1030@315:0>:int,<make_array_1030@315:1>:int,<<make_array_1030@315:2>@327:0>:int) =
        ((<make_array_1030@315:1> = 0) &&
         ((<make_array_1030@315:0> = 1) && (<<make_array_1030@315:2>@327:0> = <make_array_1030@315:1>)))
        P[<<<check_1148@310:3>@313:1>@329:0>](<check_1148@310:0>:int,<check_1148@310:1>:int,<check_1148@310:2>:int,<<check_1148@310:3>@313:0>:int,<<<check_1148@310:3>@313:1>@329:0>:int) =
        ((<check_1148@310:0> = 1) &&
         ((<<check_1148@310:3>@313:0> = 0) &&
          ((<check_1148@310:1> = 0) &&
           ((<check_1148@310:2> = 0) && (<<<check_1148@310:3>@313:1>@329:0> = <<check_1148@310:3>@313:0>)))))
        P[<fail_1487@334:0>](<fail_1487@334:0>:bool) = false
      upper bounds:
        P[<<make_array_1030@315:2>@327:0>](var1394:int,var1395:int,var1396:int) =
        ((var1394 <> 1) || ((var1395 <> 0) || (var1396 <= 0)))
        P[<<make_array_1030@276:2>@288:0>](var1390:int,var1391:int,var1392:int) = true
      begin GenHcSolver.classify_pids(582322)[4]
        output:
          [<<make_array_1030@276:2>@288:0>;<<make_array_1030@315:2>@327:0>]
      end GenHcSolver.classify_pids(582322)[4] (0.000999 sec.)
      begin ApronInterface.convex_hull_interpolate(582350)[4]
        lb:(((<make_array_1030@276:1> = 0) &&
             ((<make_array_1030@276:1> < <make_array_1030@276:0>) &&
              ((0 < <make_array_1030@276:0>) && (<<make_array_1030@276:2>@288:0> = <make_array_1030@276:1>)))) ||
            ((<make_array_1030@276:1> = 0) &&
             ((<make_array_1030@276:0> = 1) && (<<make_array_1030@276:2>@288:0> = <make_array_1030@276:1>))))
        nub:(not
               ((<make_array_1030@276:0> <> 1) ||
                ((<make_array_1030@276:1> <> 0) || (<<make_array_1030@276:2>@288:0> <= 0))))
        begin ExtFormula.Formula.case_analysis_boolean(582446)[5]
          ts: (((<make_array_1030@276:1> = 0) && (<<make_array_1030@276:2>@288:0> = <make_array_1030@276:1>)) &&
               ((<make_array_1030@276:0> = 1) ||
                ((<make_array_1030@276:1> < <make_array_1030@276:0>) && (0 < <make_array_1030@276:0>))))
          
        end ExtFormula.Formula.case_analysis_boolean(582446)[5] (0.001000 sec.)
        begin ExtFormula.Formula.case_analysis_boolean(582478)[5]
          ts: ((<make_array_1030@276:0> = 1) &&
               ((<make_array_1030@276:1> = 0) && (<<make_array_1030@276:2>@288:0> > 0)))
          
        end ExtFormula.Formula.case_analysis_boolean(582478)[5] (0.000000 sec.)
        lb':((<<make_array_1030@276:2>@288:0> = 0) &&
             ((<make_array_1030@276:1> = 0) && ((-1 + <make_array_1030@276:0>) >= 0)))
        nub':((<make_array_1030@276:1> = 0) &&
              (((-1 + <make_array_1030@276:0>) = 0) && ((-1 + <<make_array_1030@276:2>@288:0>) >= 0)))
        begin InterpProver.interpolate(582485)[5]
          begin InterpProver.interpolate_fresh(582486)[6]
            begin InterpProver.interpolate_log(582487)[7]
              input1: ((<<make_array_1030@276:2>@288:0> = 0) &&
                       ((<make_array_1030@276:1> = 0) && ((-1 + <make_array_1030@276:0>) >= 0)))
              input2: ((<make_array_1030@276:1> = 0) &&
                       (((-1 + <make_array_1030@276:0>) = 0) && ((-1 + <<make_array_1030@276:2>@288:0>) >= 0)))
              begin InterpProver.interpolate_check(582488)[8]
                begin InterpProver.interpolate_simplify(582489)[9]
                  begin InterpProver.interpolate_quick(582584)[10]
                    begin CsisatInterface.interpolate_csisat_wrap(582593)[11]
                      begin CsisatInterface.interpolate_csisat_post_process(582594)[12]
                        begin CsisatInterface.interpolate_csisat_log(582595)[13]
                          input1: (0 = v_sep_make_array_1030_sep_276_sep_1 & 0 = v_sep_make_array_1030_sep_276_sep_2_sep_288_sep_0 & 1 <= v_sep_make_array_1030_sep_276_sep_0)
                          input2: (0 = v_sep_make_array_1030_sep_276_sep_1 & 1 = v_sep_make_array_1030_sep_276_sep_0 & 1 <= v_sep_make_array_1030_sep_276_sep_2_sep_288_sep_0)
                          begin CsisatInterface.interpolate_csisat_raw(582596)[14]
                            
                          end CsisatInterface.interpolate_csisat_raw(582596)[14] (0.000000 sec.)
                          output: 2*v_sep_make_array_1030_sep_276_sep_2_sep_288_sep_0 <= 0
                          
                        end CsisatInterface.interpolate_csisat_log(582595)[13] (0.000000 sec.)
                        after simplification: 2*v_sep_make_array_1030_sep_276_sep_2_sep_288_sep_0 <= 0
                        after dnf conversion: ((2*v_sep_make_array_1030_sep_276_sep_2_sep_288_sep_0 <= 0))
                        
                      end CsisatInterface.interpolate_csisat_post_process(582594)[12] (0.000000 sec.)
                      
                    end CsisatInterface.interpolate_csisat_wrap(582593)[11] (0.000000 sec.)
                    
                  end InterpProver.interpolate_quick(582584)[10] (0.001000 sec.)
                  
                end InterpProver.interpolate_simplify(582489)[9] (0.002000 sec.)
                
              end InterpProver.interpolate_check(582488)[8] (0.002000 sec.)
              output: (<<make_array_1030@276:2>@288:0> <= 0)
            end InterpProver.interpolate_log(582487)[7] (0.003000 sec.)
            
          end InterpProver.interpolate_fresh(582486)[6] (0.003000 sec.)
          
        end InterpProver.interpolate(582485)[5] (0.003000 sec.)
        output:
          P[<<make_array_1030@276:2>@288:0>](<make_array_1030@276:0>:int,<make_array_1030@276:1>:int,<<make_array_1030@276:2>@288:0>:int) =
          (<<make_array_1030@276:2>@288:0> <= 0)
          P[<<make_array_1030@315:2>@327:0>](<make_array_1030@276:0>:int,<make_array_1030@276:1>:int,<<make_array_1030@276:2>@288:0>:int) =
          (<<make_array_1030@276:2>@288:0> <= 0)
      end ApronInterface.convex_hull_interpolate(582350)[4] (0.004000 sec.)
      Horn clauses:
        P[<fail_1487@334:0>](<fail_1487@334:0>:bool)|- bot
        
        P[<check_1148@310:2>](<f_check_1482@331:2>:int,<f_check_1482@331:0>:int,<f_check_1482@331:1>:int),
        P[<<<check_1148@310:3>@313:1>@329:0>](<f_check_1482@331:2>:int,<f_check_1482@331:0>:int,<f_check_1482@331:1>:int,<f_check_1482@331:0>:int,<f_check_1482@331:5>:int),
        ((<f_check_1482@331:5> > <f_check_1482@331:1>) &&
         ((<f_check_1482@331:0> < <f_check_1482@331:2>) && <fail_1487@334:0>))
        |- P[<fail_1487@334:0>](<fail_1487@334:0>:bool)
        
        P[<<array_max_1033@271:3>@306:0>](<check_1148@310:0>:int,0:int,<check_1148@310:2>:int),
        P[<check_1148@310:2>](<check_1148@310:0>:int,<check_1148@310:1>:int,<check_1148@310:2>:int),
        ((<check_1148@310:1> = 0) && (<<<check_1148@310:3>@313:1>@329:0> <= 0))
        |- P[<<<check_1148@310:3>@313:1>@329:0>](<check_1148@310:0>:int,
                                                 <check_1148@310:1>:int,
                                                 <check_1148@310:2>:int,
                                                 <<check_1148@310:3>@313:0>:int,
                                                 <<<check_1148@310:3>@313:1>@329:0>:int)
        
        P[<make_array_1030@315:1>](<make_array_1030@315:0>:int,<<make_array_1030@315:2>@327:0>:int),
        ((0 < <<make_array_1030@315:2>@327:0>) && (<<make_array_1030@315:2>@327:0> < <make_array_1030@315:0>)) |- bot
        
        P[<<array_max_1033@271:3>@306:0>](<make_array_1030@315:0>:int,0:int,<check_1148@310:2>:int),
        P[<<check_1148@310:3>@313:0>](<make_array_1030@315:0>:int,0:int,<check_1148@310:2>:int,<make_array_1030@315:1>:int)|- P[<make_array_1030@315:1>](
        <make_array_1030@315:0>:int,<make_array_1030@315:1>:int)
        
        P[<check_1148@310:2>](<check_1148@310:0>:int,<check_1148@310:1>:int,<check_1148@310:2>:int),
        ((<check_1148@310:1> < <check_1148@310:0>) && (<<check_1148@310:3>@313:0> = <check_1148@310:1>))
        |- P[<<check_1148@310:3>@313:0>](<check_1148@310:0>:int,<check_1148@310:1>:int,
                                         <check_1148@310:2>:int,<<check_1148@310:3>@313:0>:int)
        
        P[<<array_max_1033@271:3>@306:0>](<check_1148@310:0>:int,0:int,<check_1148@310:2>:int),
        (<check_1148@310:1> = 0)
        |- P[<check_1148@310:2>](<check_1148@310:0>:int,<check_1148@310:1>:int,
                                 <check_1148@310:2>:int)
        
        P[<array_max_1033@271:1>](<array_max_1033@271:0>:int,<array_max_1033@271:1>:int),
        P[<<<array_max_1033@271:2>@274:1>@290:0>](<array_max_1033@271:0>:int,<array_max_1033@271:1>:int,<array_max_1033@271:1>:int,var1315:int),
        P[<<array_max_1033@294:3>@297:0>](<array_max_1033@271:0>:int,(
                                          1 + <array_max_1033@271:1>):int,<<array_max_1033@271:3>@306:0>:int),
        ((var1315 <= <<array_max_1033@271:3>@306:0>) && (<array_max_1033@271:1> < <array_max_1033@271:0>))
        |- P[<<array_max_1033@271:3>@306:0>](<array_max_1033@271:0>:int,
                                             <array_max_1033@271:1>:int,
                                             <<array_max_1033@271:3>@306:0>:int)
        
        P[<array_max_1033@294:1>](<array_max_1033@294:0>:int,<array_max_1033@294:1>:int),
        ((<<array_max_1033@294:3>@297:0> = 0) && (<array_max_1033@294:1> >= <array_max_1033@294:0>))
        |- P[<<array_max_1033@294:3>@297:0>](<array_max_1033@294:0>:int,
                                             <array_max_1033@294:1>:int,
                                             <<array_max_1033@294:3>@297:0>:int)
        
        P[<array_max_1033@271:1>](<array_max_1033@294:0>:int,(-1 + <array_max_1033@294:1>):int),
        P[<<<array_max_1033@271:2>@274:1>@290:0>](<array_max_1033@294:0>:int,(
                                                  -1 + <array_max_1033@294:1>):int,(
                                                  -1 + <array_max_1033@294:1>):int,<f_array_max_1480@292:4>:int),
        (<array_max_1033@294:1> < (1 + <array_max_1033@294:0>))
        |- P[<array_max_1033@294:1>](<array_max_1033@294:0>:int,<array_max_1033@294:1>:int)
        
        P[<array_max_1033@271:1>](<array_max_1033@271:0>:int,<array_max_1033@271:1>:int),
        ((<array_max_1033@271:1> = 0) && (<<<array_max_1033@271:2>@274:1>@290:0> <= 0))
        |- P[<<<array_max_1033@271:2>@274:1>@290:0>](<array_max_1033@271:0>:int,
                                                     <array_max_1033@271:1>:int,
                                                     <<array_max_1033@271:2>@274:0>:int,
                                                     <<<array_max_1033@271:2>@274:1>@290:0>:int)
        
        P[<make_array_1030@276:1>](<make_array_1030@276:0>:int,<<make_array_1030@276:2>@288:0>:int),
        ((0 < <<make_array_1030@276:2>@288:0>) && (<<make_array_1030@276:2>@288:0> < <make_array_1030@276:0>)) |- bot
        
        P[<<array_max_1033@271:2>@274:0>](<make_array_1030@276:0>:int,0:int,<make_array_1030@276:1>:int)|- P[<make_array_1030@276:1>](
        <make_array_1030@276:0>:int,<make_array_1030@276:1>:int)
        
        P[<array_max_1033@271:1>](<array_max_1033@271:0>:int,<array_max_1033@271:1>:int),
        ((<array_max_1033@271:1> < <array_max_1033@271:0>) && (<<array_max_1033@271:2>@274:0> = <array_max_1033@271:1>))
        |- P[<<array_max_1033@271:2>@274:0>](<array_max_1033@271:0>:int,
                                             <array_max_1033@271:1>:int,
                                             <<array_max_1033@271:2>@274:0>:int)
        
         (<array_max_1033@271:1> = 0)
        |- P[<array_max_1033@271:1>](<array_max_1033@271:0>:int,<array_max_1033@271:1>:int)
      lower bounds:
        P[<array_max_1033@271:1>](<array_max_1033@271:0>:int,<array_max_1033@271:1>:int) = (<array_max_1033@271:1> = 0)
        P[<<<array_max_1033@271:2>@274:1>@290:0>](<array_max_1033@271:0>:int,<array_max_1033@271:1>:int,<<array_max_1033@271:2>@274:0>:int,<<<array_max_1033@271:2>@274:1>@290:0>:int) =
        ((<array_max_1033@271:1> = 0) && (<<<array_max_1033@271:2>@274:1>@290:0> <= 0))
        P[<<array_max_1033@271:2>@274:0>](<array_max_1033@271:0>:int,<array_max_1033@271:1>:int,<<array_max_1033@271:2>@274:0>:int) =
        ((<array_max_1033@271:1> = 0) &&
         ((<array_max_1033@271:1> < <array_max_1033@271:0>) &&
          (<<array_max_1033@271:2>@274:0> = <array_max_1033@271:1>)))
        P[<array_max_1033@294:1>](<array_max_1033@294:0>:int,<array_max_1033@294:1>:int) =
        ((<array_max_1033@294:1> = 1) && (<array_max_1033@294:1> < (1 + <array_max_1033@294:0>)))
        P[<make_array_1030@276:1>](<make_array_1030@276:0>:int,<make_array_1030@276:1>:int) =
        ((<make_array_1030@276:1> = 0) && (0 < <make_array_1030@276:0>))
        P[<<array_max_1033@294:3>@297:0>](<array_max_1033@294:0>:int,<array_max_1033@294:1>:int,<<array_max_1033@294:3>@297:0>:int) =
        ((<<array_max_1033@294:3>@297:0> = 0) &&
         ((<array_max_1033@294:1> = 1) && (<array_max_1033@294:1> = <array_max_1033@294:0>)))
        P[<<array_max_1033@271:3>@306:0>](<array_max_1033@271:0>:int,<array_max_1033@271:1>:int,<<array_max_1033@271:3>@306:0>:int) =
        ((<<array_max_1033@271:3>@306:0> = 0) &&
         ((<array_max_1033@271:1> = 0) && ((1 + <array_max_1033@271:1>) = <array_max_1033@271:0>)))
        P[<check_1148@310:2>](<check_1148@310:0>:int,<check_1148@310:1>:int,<check_1148@310:2>:int) =
        ((<check_1148@310:1> = 0) && ((<check_1148@310:2> = 0) && (<check_1148@310:0> = 1)))
        P[<<<check_1148@310:3>@313:1>@329:0>](<check_1148@310:0>:int,<check_1148@310:1>:int,<check_1148@310:2>:int,<<check_1148@310:3>@313:0>:int,<<<check_1148@310:3>@313:1>@329:0>:int) =
        ((<check_1148@310:0> = 1) &&
         ((<check_1148@310:1> = 0) && ((<check_1148@310:2> = 0) && (<<<check_1148@310:3>@313:1>@329:0> <= 0))))
        P[<<check_1148@310:3>@313:0>](<check_1148@310:0>:int,<check_1148@310:1>:int,<check_1148@310:2>:int,<<check_1148@310:3>@313:0>:int) =
        ((<check_1148@310:1> = 0) &&
         ((<check_1148@310:2> = 0) && ((<check_1148@310:0> = 1) && (<<check_1148@310:3>@313:0> = <check_1148@310:1>))))
        P[<fail_1487@334:0>](<fail_1487@334:0>:bool) = false
        P[<make_array_1030@315:1>](<make_array_1030@315:0>:int,<make_array_1030@315:1>:int) =
        ((<make_array_1030@315:1> = 0) && (<make_array_1030@315:0> = 1))
      upper bounds:
        P[<make_array_1030@315:1>](var1399:int,var1400:int) = ((0 >= var1400) || (var1400 >= var1399))
        P[<make_array_1030@276:1>](var1397:int,var1398:int) = ((0 >= var1398) || (var1398 >= var1397))
      begin GenHcSolver.classify_pids(598887)[4]
        output:
          [<make_array_1030@276:1>;<make_array_1030@315:1>]
      end GenHcSolver.classify_pids(598887)[4] (0.001000 sec.)
      begin ApronInterface.convex_hull_interpolate(598910)[4]
        lb:(((<make_array_1030@276:1> = 0) && (0 < <make_array_1030@276:0>)) ||
            ((<make_array_1030@276:1> = 0) && (<make_array_1030@276:0> = 1)))
        nub:(not ((0 >= <make_array_1030@276:1>) || (<make_array_1030@276:1> >= <make_array_1030@276:0>)))
        begin ExtFormula.Formula.case_analysis_boolean(598939)[5]
          ts: ((<make_array_1030@276:1> = 0) && (0 < <make_array_1030@276:0>))
          
        end ExtFormula.Formula.case_analysis_boolean(598939)[5] (0.000000 sec.)
        begin ExtFormula.Formula.case_analysis_boolean(598958)[5]
          ts: ((0 < <make_array_1030@276:1>) && (<make_array_1030@276:1> < <make_array_1030@276:0>))
          
        end ExtFormula.Formula.case_analysis_boolean(598958)[5] (0.000000 sec.)
        lb':((<make_array_1030@276:1> = 0) && ((-1 + <make_array_1030@276:0>) >= 0))
        nub':(((-1 + <make_array_1030@276:1>) >= 0) &&
              (((-1 + (-1 * <make_array_1030@276:1>)) + <make_array_1030@276:0>) >= 0))
        begin InterpProver.interpolate(598964)[5]
          begin InterpProver.interpolate_fresh(598965)[6]
            begin InterpProver.interpolate_log(598966)[7]
              input1: ((<make_array_1030@276:1> = 0) && ((-1 + <make_array_1030@276:0>) >= 0))
              input2: (((-1 + <make_array_1030@276:1>) >= 0) &&
                       (((-1 + (-1 * <make_array_1030@276:1>)) + <make_array_1030@276:0>) >= 0))
              begin InterpProver.interpolate_check(598967)[8]
                begin InterpProver.interpolate_simplify(598968)[9]
                  begin InterpProver.interpolate_quick(599037)[10]
                    begin CsisatInterface.interpolate_csisat_wrap(599046)[11]
                      begin CsisatInterface.interpolate_csisat_post_process(599047)[12]
                        begin CsisatInterface.interpolate_csisat_log(599048)[13]
                          input1: (0 = v_sep_make_array_1030_sep_276_sep_1 & 1 <= v_sep_make_array_1030_sep_276_sep_0)
                          input2: (1 <= v_sep_make_array_1030_sep_276_sep_1 & (1 + v_sep_make_array_1030_sep_276_sep_1) <= v_sep_make_array_1030_sep_276_sep_0)
                          begin CsisatInterface.interpolate_csisat_raw(599049)[14]
                            
                          end CsisatInterface.interpolate_csisat_raw(599049)[14] (0.000000 sec.)
                          output: 2*v_sep_make_array_1030_sep_276_sep_1 <= 0
                          
                        end CsisatInterface.interpolate_csisat_log(599048)[13] (0.000000 sec.)
                        after simplification: 2*v_sep_make_array_1030_sep_276_sep_1 <= 0
                        after dnf conversion: ((2*v_sep_make_array_1030_sep_276_sep_1 <= 0))
                        
                      end CsisatInterface.interpolate_csisat_post_process(599047)[12] (0.000000 sec.)
                      
                    end CsisatInterface.interpolate_csisat_wrap(599046)[11] (0.000000 sec.)
                    
                  end InterpProver.interpolate_quick(599037)[10] (0.001000 sec.)
                  
                end InterpProver.interpolate_simplify(598968)[9] (0.002000 sec.)
                
              end InterpProver.interpolate_check(598967)[8] (0.002000 sec.)
              output: (<make_array_1030@276:1> <= 0)
            end InterpProver.interpolate_log(598966)[7] (0.002000 sec.)
            
          end InterpProver.interpolate_fresh(598965)[6] (0.002000 sec.)
          
        end InterpProver.interpolate(598964)[5] (0.002000 sec.)
        output:
          P[<make_array_1030@276:1>](<make_array_1030@276:0>:int,<make_array_1030@276:1>:int) =
          (<make_array_1030@276:1> <= 0)
          P[<make_array_1030@315:1>](<make_array_1030@276:0>:int,<make_array_1030@276:1>:int) =
          (<make_array_1030@276:1> <= 0)
      end ApronInterface.convex_hull_interpolate(598910)[4] (0.002000 sec.)
      Horn clauses:
        P[<fail_1487@334:0>](<fail_1487@334:0>:bool)|- bot
        
        P[<check_1148@310:2>](<f_check_1482@331:2>:int,<f_check_1482@331:0>:int,<f_check_1482@331:1>:int),
        P[<<<check_1148@310:3>@313:1>@329:0>](<f_check_1482@331:2>:int,<f_check_1482@331:0>:int,<f_check_1482@331:1>:int,<f_check_1482@331:0>:int,<f_check_1482@331:5>:int),
        ((<f_check_1482@331:5> > <f_check_1482@331:1>) &&
         ((<f_check_1482@331:0> < <f_check_1482@331:2>) && <fail_1487@334:0>))
        |- P[<fail_1487@334:0>](<fail_1487@334:0>:bool)
        
        P[<<array_max_1033@271:3>@306:0>](<check_1148@310:0>:int,0:int,<check_1148@310:2>:int),
        P[<check_1148@310:2>](<check_1148@310:0>:int,<check_1148@310:1>:int,<check_1148@310:2>:int),
        ((<check_1148@310:1> = 0) && (<<<check_1148@310:3>@313:1>@329:0> <= 0))
        |- P[<<<check_1148@310:3>@313:1>@329:0>](<check_1148@310:0>:int,
                                                 <check_1148@310:1>:int,
                                                 <check_1148@310:2>:int,
                                                 <<check_1148@310:3>@313:0>:int,
                                                 <<<check_1148@310:3>@313:1>@329:0>:int)
        
        P[<<array_max_1033@271:3>@306:0>](<make_array_1030@315:0>:int,0:int,<check_1148@310:2>:int),
        P[<<check_1148@310:3>@313:0>](<make_array_1030@315:0>:int,0:int,<check_1148@310:2>:int,<make_array_1030@315:1>:int),
        (<make_array_1030@315:1> > 0) |- bot
        
        P[<check_1148@310:2>](<check_1148@310:0>:int,<check_1148@310:1>:int,<check_1148@310:2>:int),
        ((<check_1148@310:1> < <check_1148@310:0>) && (<<check_1148@310:3>@313:0> = <check_1148@310:1>))
        |- P[<<check_1148@310:3>@313:0>](<check_1148@310:0>:int,<check_1148@310:1>:int,
                                         <check_1148@310:2>:int,<<check_1148@310:3>@313:0>:int)
        
        P[<<array_max_1033@271:3>@306:0>](<check_1148@310:0>:int,0:int,<check_1148@310:2>:int),
        (<check_1148@310:1> = 0)
        |- P[<check_1148@310:2>](<check_1148@310:0>:int,<check_1148@310:1>:int,
                                 <check_1148@310:2>:int)
        
        P[<array_max_1033@271:1>](<array_max_1033@271:0>:int,<array_max_1033@271:1>:int),
        P[<<<array_max_1033@271:2>@274:1>@290:0>](<array_max_1033@271:0>:int,<array_max_1033@271:1>:int,<array_max_1033@271:1>:int,var1315:int),
        P[<<array_max_1033@294:3>@297:0>](<array_max_1033@271:0>:int,(
                                          1 + <array_max_1033@271:1>):int,<<array_max_1033@271:3>@306:0>:int),
        ((var1315 <= <<array_max_1033@271:3>@306:0>) && (<array_max_1033@271:1> < <array_max_1033@271:0>))
        |- P[<<array_max_1033@271:3>@306:0>](<array_max_1033@271:0>:int,
                                             <array_max_1033@271:1>:int,
                                             <<array_max_1033@271:3>@306:0>:int)
        
        P[<array_max_1033@294:1>](<array_max_1033@294:0>:int,<array_max_1033@294:1>:int),
        ((<<array_max_1033@294:3>@297:0> = 0) && (<array_max_1033@294:1> >= <array_max_1033@294:0>))
        |- P[<<array_max_1033@294:3>@297:0>](<array_max_1033@294:0>:int,
                                             <array_max_1033@294:1>:int,
                                             <<array_max_1033@294:3>@297:0>:int)
        
        P[<array_max_1033@271:1>](<array_max_1033@294:0>:int,(-1 + <array_max_1033@294:1>):int),
        P[<<<array_max_1033@271:2>@274:1>@290:0>](<array_max_1033@294:0>:int,(
                                                  -1 + <array_max_1033@294:1>):int,(
                                                  -1 + <array_max_1033@294:1>):int,<f_array_max_1480@292:4>:int),
        (<array_max_1033@294:1> < (1 + <array_max_1033@294:0>))
        |- P[<array_max_1033@294:1>](<array_max_1033@294:0>:int,<array_max_1033@294:1>:int)
        
        P[<array_max_1033@271:1>](<array_max_1033@271:0>:int,<array_max_1033@271:1>:int),
        ((<array_max_1033@271:1> = 0) && (<<<array_max_1033@271:2>@274:1>@290:0> <= 0))
        |- P[<<<array_max_1033@271:2>@274:1>@290:0>](<array_max_1033@271:0>:int,
                                                     <array_max_1033@271:1>:int,
                                                     <<array_max_1033@271:2>@274:0>:int,
                                                     <<<array_max_1033@271:2>@274:1>@290:0>:int)
        
        P[<<array_max_1033@271:2>@274:0>](<make_array_1030@276:0>:int,0:int,<make_array_1030@276:1>:int),
        (<make_array_1030@276:1> > 0) |- bot
        
        P[<array_max_1033@271:1>](<array_max_1033@271:0>:int,<array_max_1033@271:1>:int),
        ((<array_max_1033@271:1> < <array_max_1033@271:0>) && (<<array_max_1033@271:2>@274:0> = <array_max_1033@271:1>))
        |- P[<<array_max_1033@271:2>@274:0>](<array_max_1033@271:0>:int,
                                             <array_max_1033@271:1>:int,
                                             <<array_max_1033@271:2>@274:0>:int)
        
         (<array_max_1033@271:1> = 0)
        |- P[<array_max_1033@271:1>](<array_max_1033@271:0>:int,<array_max_1033@271:1>:int)
      lower bounds:
        P[<array_max_1033@271:1>](<array_max_1033@271:0>:int,<array_max_1033@271:1>:int) = (<array_max_1033@271:1> = 0)
        P[<<<array_max_1033@271:2>@274:1>@290:0>](<array_max_1033@271:0>:int,<array_max_1033@271:1>:int,<<array_max_1033@271:2>@274:0>:int,<<<array_max_1033@271:2>@274:1>@290:0>:int) =
        ((<array_max_1033@271:1> = 0) && (<<<array_max_1033@271:2>@274:1>@290:0> <= 0))
        P[<<array_max_1033@271:2>@274:0>](<array_max_1033@271:0>:int,<array_max_1033@271:1>:int,<<array_max_1033@271:2>@274:0>:int) =
        ((<array_max_1033@271:1> = 0) &&
         ((<array_max_1033@271:1> < <array_max_1033@271:0>) &&
          (<<array_max_1033@271:2>@274:0> = <array_max_1033@271:1>)))
        P[<array_max_1033@294:1>](<array_max_1033@294:0>:int,<array_max_1033@294:1>:int) =
        ((<array_max_1033@294:1> = 1) && (<array_max_1033@294:1> < (1 + <array_max_1033@294:0>)))
        P[<<array_max_1033@294:3>@297:0>](<array_max_1033@294:0>:int,<array_max_1033@294:1>:int,<<array_max_1033@294:3>@297:0>:int) =
        ((<<array_max_1033@294:3>@297:0> = 0) &&
         ((<array_max_1033@294:1> = 1) && (<array_max_1033@294:1> = <array_max_1033@294:0>)))
        P[<<array_max_1033@271:3>@306:0>](<array_max_1033@271:0>:int,<array_max_1033@271:1>:int,<<array_max_1033@271:3>@306:0>:int) =
        ((<<array_max_1033@271:3>@306:0> = 0) &&
         ((<array_max_1033@271:1> = 0) && ((1 + <array_max_1033@271:1>) = <array_max_1033@271:0>)))
        P[<check_1148@310:2>](<check_1148@310:0>:int,<check_1148@310:1>:int,<check_1148@310:2>:int) =
        ((<check_1148@310:1> = 0) && ((<check_1148@310:2> = 0) && (<check_1148@310:0> = 1)))
        P[<<<check_1148@310:3>@313:1>@329:0>](<check_1148@310:0>:int,<check_1148@310:1>:int,<check_1148@310:2>:int,<<check_1148@310:3>@313:0>:int,<<<check_1148@310:3>@313:1>@329:0>:int) =
        ((<check_1148@310:0> = 1) &&
         ((<check_1148@310:1> = 0) && ((<check_1148@310:2> = 0) && (<<<check_1148@310:3>@313:1>@329:0> <= 0))))
        P[<<check_1148@310:3>@313:0>](<check_1148@310:0>:int,<check_1148@310:1>:int,<check_1148@310:2>:int,<<check_1148@310:3>@313:0>:int) =
        ((<check_1148@310:1> = 0) &&
         ((<check_1148@310:2> = 0) && ((<check_1148@310:0> = 1) && (<<check_1148@310:3>@313:0> = <check_1148@310:1>))))
        P[<fail_1487@334:0>](<fail_1487@334:0>:bool) = false
      upper bounds:
        P[<<array_max_1033@271:3>@306:0>](var1408:int,var1409:int,var1410:int) =
        ((var1409 <> 0) || ((var1410 >= 0) || (0 >= var1408)))
        P[<<array_max_1033@294:3>@297:0>](var1403:int,var1404:int,var1405:int) =
        ((var1404 <> 1) || ((var1405 >= 0) || (0 >= var1403)))
      begin GenHcSolver.classify_pids(613130)[4]
        output:
          [<<array_max_1033@294:3>@297:0>;<<array_max_1033@271:3>@306:0>]
      end GenHcSolver.classify_pids(613130)[4] (0.000000 sec.)
      begin ApronInterface.convex_hull_interpolate(613213)[4]
        lb:(((<<array_max_1033@294:3>@297:0> = 0) &&
             ((<array_max_1033@294:1> = 1) && (<array_max_1033@294:1> = <array_max_1033@294:0>))) ||
            ((<<array_max_1033@294:3>@297:0> = 0) &&
             ((<array_max_1033@294:1> = 0) && ((1 + <array_max_1033@294:1>) = <array_max_1033@294:0>))))
        nub:((not
                ((<array_max_1033@294:1> <> 1) ||
                 ((<<array_max_1033@294:3>@297:0> >= 0) || (0 >= <array_max_1033@294:0>)))) ||
             (not
                ((<array_max_1033@294:1> <> 0) ||
                 ((<<array_max_1033@294:3>@297:0> >= 0) || (0 >= <array_max_1033@294:0>)))))
        begin ExtFormula.Formula.case_analysis_boolean(613290)[5]
          ts: ((<<array_max_1033@294:3>@297:0> = 0) &&
               (((<array_max_1033@294:1> = 1) && (<array_max_1033@294:1> = <array_max_1033@294:0>)) ||
                ((<array_max_1033@294:1> = 0) && ((1 + <array_max_1033@294:1>) = <array_max_1033@294:0>))))
          
        end ExtFormula.Formula.case_analysis_boolean(613290)[5] (0.001000 sec.)
        begin ExtFormula.Formula.case_analysis_boolean(613363)[5]
          ts: (((<<array_max_1033@294:3>@297:0> < 0) && (0 < <array_max_1033@294:0>)) &&
               ((<array_max_1033@294:1> = 0) || (<array_max_1033@294:1> = 1)))
          
        end ExtFormula.Formula.case_analysis_boolean(613363)[5] (0.001000 sec.)
        lb':((<<array_max_1033@294:3>@297:0> = 0) &&
             (((-1 + <array_max_1033@294:0>) = 0) &&
              (((1 + (-1 * <array_max_1033@294:1>)) >= 0) && (<array_max_1033@294:1> >= 0))))
        nub':(((1 + (-1 * <array_max_1033@294:1>)) >= 0) &&
              (((-1 + (-1 * <<array_max_1033@294:3>@297:0>)) >= 0) &&
               ((<array_max_1033@294:1> >= 0) && ((-1 + <array_max_1033@294:0>) >= 0))))
        begin InterpProver.interpolate(613373)[5]
          begin InterpProver.interpolate_fresh(613374)[6]
            begin InterpProver.interpolate_log(613375)[7]
              input1: ((<<array_max_1033@294:3>@297:0> = 0) &&
                       (((-1 + <array_max_1033@294:0>) = 0) &&
                        (((1 + (-1 * <array_max_1033@294:1>)) >= 0) && (<array_max_1033@294:1> >= 0))))
              input2: (((1 + (-1 * <array_max_1033@294:1>)) >= 0) &&
                       (((-1 + (-1 * <<array_max_1033@294:3>@297:0>)) >= 0) &&
                        ((<array_max_1033@294:1> >= 0) && ((-1 + <array_max_1033@294:0>) >= 0))))
              begin InterpProver.interpolate_check(613376)[8]
                begin InterpProver.interpolate_simplify(613377)[9]
                  begin InterpProver.interpolate_quick(613568)[10]
                    begin CsisatInterface.interpolate_csisat_wrap(613577)[11]
                      begin CsisatInterface.interpolate_csisat_post_process(613578)[12]
                        begin CsisatInterface.interpolate_csisat_log(613579)[13]
                          input1: (0 = v_sep_array_max_1033_sep_294_sep_3_sep_297_sep_0 & 1 = v_sep_array_max_1033_sep_294_sep_0 & 0 <= v_sep_array_max_1033_sep_294_sep_1 & v_sep_array_max_1033_sep_294_sep_1 <= 1)
                          input2: (0 <= v_sep_array_max_1033_sep_294_sep_1 & 1 <= v_sep_array_max_1033_sep_294_sep_0 & v_sep_array_max_1033_sep_294_sep_1 <= 1 & (1 + v_sep_array_max_1033_sep_294_sep_3_sep_297_sep_0) <= 0)
                          begin CsisatInterface.interpolate_csisat_raw(613580)[14]
                            
                          end CsisatInterface.interpolate_csisat_raw(613580)[14] (0.000000 sec.)
                          output: -2*v_sep_array_max_1033_sep_294_sep_3_sep_297_sep_0 <= 0
                          
                        end CsisatInterface.interpolate_csisat_log(613579)[13] (0.000000 sec.)
                        after simplification: -2*v_sep_array_max_1033_sep_294_sep_3_sep_297_sep_0 <= 0
                        after dnf conversion: ((-2*v_sep_array_max_1033_sep_294_sep_3_sep_297_sep_0 <= 0))
                        
                      end CsisatInterface.interpolate_csisat_post_process(613578)[12] (0.000000 sec.)
                      
                    end CsisatInterface.interpolate_csisat_wrap(613577)[11] (0.000000 sec.)
                    
                  end InterpProver.interpolate_quick(613568)[10] (0.000000 sec.)
                  
                end InterpProver.interpolate_simplify(613377)[9] (0.001000 sec.)
                
              end InterpProver.interpolate_check(613376)[8] (0.001999 sec.)
              output: (0 <= <<array_max_1033@294:3>@297:0>)
            end InterpProver.interpolate_log(613375)[7] (0.001999 sec.)
            
          end InterpProver.interpolate_fresh(613374)[6] (0.001999 sec.)
          
        end InterpProver.interpolate(613373)[5] (0.001999 sec.)
        output:
          P[<<array_max_1033@294:3>@297:0>](<array_max_1033@294:0>:int,<array_max_1033@294:1>:int,<<array_max_1033@294:3>@297:0>:int) =
          (0 <= <<array_max_1033@294:3>@297:0>)
          P[<<array_max_1033@271:3>@306:0>](<array_max_1033@294:0>:int,<array_max_1033@294:1>:int,<<array_max_1033@294:3>@297:0>:int) =
          (0 <= <<array_max_1033@294:3>@297:0>)
      end ApronInterface.convex_hull_interpolate(613213)[4] (0.003999 sec.)
      Horn clauses:
        P[<fail_1487@334:0>](<fail_1487@334:0>:bool)|- bot
        
        P[<check_1148@310:2>](<f_check_1482@331:2>:int,<f_check_1482@331:0>:int,<f_check_1482@331:1>:int),
        P[<<<check_1148@310:3>@313:1>@329:0>](<f_check_1482@331:2>:int,<f_check_1482@331:0>:int,<f_check_1482@331:1>:int,<f_check_1482@331:0>:int,<f_check_1482@331:5>:int),
        ((<f_check_1482@331:5> > <f_check_1482@331:1>) &&
         ((<f_check_1482@331:0> < <f_check_1482@331:2>) && <fail_1487@334:0>))
        |- P[<fail_1487@334:0>](<fail_1487@334:0>:bool)
        
        P[<check_1148@310:2>](<check_1148@310:0>:int,<check_1148@310:1>:int,<check_1148@310:2>:int),
        ((<check_1148@310:1> = 0) && ((<<<check_1148@310:3>@313:1>@329:0> <= 0) && (0 <= <check_1148@310:2>)))
        |- P[<<<check_1148@310:3>@313:1>@329:0>](<check_1148@310:0>:int,
                                                 <check_1148@310:1>:int,
                                                 <check_1148@310:2>:int,
                                                 <<check_1148@310:3>@313:0>:int,
                                                 <<<check_1148@310:3>@313:1>@329:0>:int)
        
        P[<<check_1148@310:3>@313:0>](<make_array_1030@315:0>:int,0:int,<check_1148@310:2>:int,<make_array_1030@315:1>:int),
        ((<make_array_1030@315:1> > 0) && (0 <= <check_1148@310:2>)) |- bot
        
        P[<check_1148@310:2>](<check_1148@310:0>:int,<check_1148@310:1>:int,<check_1148@310:2>:int),
        ((<check_1148@310:1> < <check_1148@310:0>) && (<<check_1148@310:3>@313:0> = <check_1148@310:1>))
        |- P[<<check_1148@310:3>@313:0>](<check_1148@310:0>:int,<check_1148@310:1>:int,
                                         <check_1148@310:2>:int,<<check_1148@310:3>@313:0>:int)
        
         ((<check_1148@310:1> = 0) && (0 <= <check_1148@310:2>))
        |- P[<check_1148@310:2>](<check_1148@310:0>:int,<check_1148@310:1>:int,
                                 <check_1148@310:2>:int)
        
        P[<array_max_1033@271:1>](<array_max_1033@294:0>:int,(-1 + <array_max_1033@294:1>):int),
        P[<<<array_max_1033@271:2>@274:1>@290:0>](<array_max_1033@294:0>:int,(
                                                  -1 + <array_max_1033@294:1>):int,(
                                                  -1 + <array_max_1033@294:1>):int,<f_array_max_1480@292:4>:int),
        (<array_max_1033@294:1> < (1 + <array_max_1033@294:0>))
        |- P[<array_max_1033@294:1>](<array_max_1033@294:0>:int,<array_max_1033@294:1>:int)
        
        P[<array_max_1033@271:1>](<array_max_1033@271:0>:int,<array_max_1033@271:1>:int),
        ((<array_max_1033@271:1> = 0) && (<<<array_max_1033@271:2>@274:1>@290:0> <= 0))
        |- P[<<<array_max_1033@271:2>@274:1>@290:0>](<array_max_1033@271:0>:int,
                                                     <array_max_1033@271:1>:int,
                                                     <<array_max_1033@271:2>@274:0>:int,
                                                     <<<array_max_1033@271:2>@274:1>@290:0>:int)
        
        P[<<array_max_1033@271:2>@274:0>](<make_array_1030@276:0>:int,0:int,<make_array_1030@276:1>:int),
        (<make_array_1030@276:1> > 0) |- bot
        
        P[<array_max_1033@271:1>](<array_max_1033@271:0>:int,<array_max_1033@271:1>:int),
        ((<array_max_1033@271:1> < <array_max_1033@271:0>) && (<<array_max_1033@271:2>@274:0> = <array_max_1033@271:1>))
        |- P[<<array_max_1033@271:2>@274:0>](<array_max_1033@271:0>:int,
                                             <array_max_1033@271:1>:int,
                                             <<array_max_1033@271:2>@274:0>:int)
        
         (<array_max_1033@271:1> = 0)
        |- P[<array_max_1033@271:1>](<array_max_1033@271:0>:int,<array_max_1033@271:1>:int)
      lower bounds:
        P[<check_1148@310:2>](<check_1148@310:0>:int,<check_1148@310:1>:int,<check_1148@310:2>:int) =
        ((<check_1148@310:1> = 0) && (0 <= <check_1148@310:2>))
        P[<array_max_1033@271:1>](<array_max_1033@271:0>:int,<array_max_1033@271:1>:int) = (<array_max_1033@271:1> = 0)
        P[<<<check_1148@310:3>@313:1>@329:0>](<check_1148@310:0>:int,<check_1148@310:1>:int,<check_1148@310:2>:int,<<check_1148@310:3>@313:0>:int,<<<check_1148@310:3>@313:1>@329:0>:int) =
        ((<check_1148@310:1> = 0) && ((<<<check_1148@310:3>@313:1>@329:0> <= 0) && (0 <= <check_1148@310:2>)))
        P[<<check_1148@310:3>@313:0>](<check_1148@310:0>:int,<check_1148@310:1>:int,<check_1148@310:2>:int,<<check_1148@310:3>@313:0>:int) =
        ((<check_1148@310:1> = 0) &&
         ((<check_1148@310:1> < <check_1148@310:0>) &&
          ((0 <= <check_1148@310:2>) && (<<check_1148@310:3>@313:0> = <check_1148@310:1>))))
        P[<<<array_max_1033@271:2>@274:1>@290:0>](<array_max_1033@271:0>:int,<array_max_1033@271:1>:int,<<array_max_1033@271:2>@274:0>:int,<<<array_max_1033@271:2>@274:1>@290:0>:int) =
        ((<array_max_1033@271:1> = 0) && (<<<array_max_1033@271:2>@274:1>@290:0> <= 0))
        P[<<array_max_1033@271:2>@274:0>](<array_max_1033@271:0>:int,<array_max_1033@271:1>:int,<<array_max_1033@271:2>@274:0>:int) =
        ((<array_max_1033@271:1> = 0) &&
         ((<array_max_1033@271:1> < <array_max_1033@271:0>) &&
          (<<array_max_1033@271:2>@274:0> = <array_max_1033@271:1>)))
        P[<fail_1487@334:0>](<fail_1487@334:0>:bool) = false
        P[<array_max_1033@294:1>](<array_max_1033@294:0>:int,<array_max_1033@294:1>:int) =
        ((<array_max_1033@294:1> = 1) && (<array_max_1033@294:1> < (1 + <array_max_1033@294:0>)))
      upper bounds:
        P[<array_max_1033@294:1>](var1413:int,var1414:int) = true
        P[<array_max_1033@271:1>](var1411:int,var1412:int) = true
      begin GenHcSolver.classify_pids(625233)[4]
        output:
          [<array_max_1033@271:1>;<array_max_1033@294:1>]
      end GenHcSolver.classify_pids(625233)[4] (0.000000 sec.)
      begin ApronInterface.convex_hull_interpolate(625244)[4]
        lb:((<array_max_1033@271:1> = 0) ||
            ((<array_max_1033@271:1> = 1) && (<array_max_1033@271:1> < (1 + <array_max_1033@271:0>))))
        nub:false
        begin ExtFormula.Formula.case_analysis_boolean(625263)[5]
          ts: ((<array_max_1033@271:1> = 0) ||
               ((<array_max_1033@271:1> = 1) && (<array_max_1033@271:1> < (1 + <array_max_1033@271:0>))))
          
        end ExtFormula.Formula.case_analysis_boolean(625263)[5] (0.000999 sec.)
        begin ExtFormula.Formula.case_analysis_boolean(625274)[5]
          ts: false
          
        end ExtFormula.Formula.case_analysis_boolean(625274)[5] (0.000000 sec.)
        lb':(((1 + (-1 * <array_max_1033@271:1>)) >= 0) && (<array_max_1033@271:1> >= 0))
        nub':(-1 >= 0)
        begin InterpProver.interpolate(625277)[5]
          begin InterpProver.interpolate_fresh(625278)[6]
            begin InterpProver.interpolate_log(625279)[7]
              input1: (((1 + (-1 * <array_max_1033@271:1>)) >= 0) && (<array_max_1033@271:1> >= 0))
              input2: (-1 >= 0)
              begin InterpProver.interpolate_check(625280)[8]
                begin InterpProver.interpolate_simplify(625281)[9]
                  begin InterpProver.interpolate_quick(625319)[10]
                    
                  end InterpProver.interpolate_quick(625319)[10] (0.000000 sec.)
                  
                end InterpProver.interpolate_simplify(625281)[9] (0.001000 sec.)
                
              end InterpProver.interpolate_check(625280)[8] (0.001000 sec.)
              output: true
            end InterpProver.interpolate_log(625279)[7] (0.001000 sec.)
            
          end InterpProver.interpolate_fresh(625278)[6] (0.001000 sec.)
          
        end InterpProver.interpolate(625277)[5] (0.001000 sec.)
        output:
          P[<array_max_1033@271:1>](<array_max_1033@271:0>:int,<array_max_1033@271:1>:int) = true
          P[<array_max_1033@294:1>](<array_max_1033@271:0>:int,<array_max_1033@271:1>:int) = true
      end ApronInterface.convex_hull_interpolate(625244)[4] (0.001999 sec.)
      Horn clauses:
        P[<fail_1487@334:0>](<fail_1487@334:0>:bool)|- bot
        
        P[<check_1148@310:2>](<f_check_1482@331:2>:int,<f_check_1482@331:0>:int,<f_check_1482@331:1>:int),
        P[<<<check_1148@310:3>@313:1>@329:0>](<f_check_1482@331:2>:int,<f_check_1482@331:0>:int,<f_check_1482@331:1>:int,<f_check_1482@331:0>:int,<f_check_1482@331:5>:int),
        ((<f_check_1482@331:5> > <f_check_1482@331:1>) &&
         ((<f_check_1482@331:0> < <f_check_1482@331:2>) && <fail_1487@334:0>))
        |- P[<fail_1487@334:0>](<fail_1487@334:0>:bool)
        
        P[<check_1148@310:2>](<check_1148@310:0>:int,<check_1148@310:1>:int,<check_1148@310:2>:int),
        ((<check_1148@310:1> = 0) && ((<<<check_1148@310:3>@313:1>@329:0> <= 0) && (0 <= <check_1148@310:2>)))
        |- P[<<<check_1148@310:3>@313:1>@329:0>](<check_1148@310:0>:int,
                                                 <check_1148@310:1>:int,
                                                 <check_1148@310:2>:int,
                                                 <<check_1148@310:3>@313:0>:int,
                                                 <<<check_1148@310:3>@313:1>@329:0>:int)
        
        P[<<check_1148@310:3>@313:0>](<make_array_1030@315:0>:int,0:int,<check_1148@310:2>:int,<make_array_1030@315:1>:int),
        ((<make_array_1030@315:1> > 0) && (0 <= <check_1148@310:2>)) |- bot
        
        P[<check_1148@310:2>](<check_1148@310:0>:int,<check_1148@310:1>:int,<check_1148@310:2>:int),
        ((<check_1148@310:1> < <check_1148@310:0>) && (<<check_1148@310:3>@313:0> = <check_1148@310:1>))
        |- P[<<check_1148@310:3>@313:0>](<check_1148@310:0>:int,<check_1148@310:1>:int,
                                         <check_1148@310:2>:int,<<check_1148@310:3>@313:0>:int)
        
         ((<check_1148@310:1> = 0) && (0 <= <check_1148@310:2>))
        |- P[<check_1148@310:2>](<check_1148@310:0>:int,<check_1148@310:1>:int,
                                 <check_1148@310:2>:int)
        
         ((<array_max_1033@271:1> = 0) && (<<<array_max_1033@271:2>@274:1>@290:0> <= 0))
        |- P[<<<array_max_1033@271:2>@274:1>@290:0>](<array_max_1033@271:0>:int,
                                                     <array_max_1033@271:1>:int,
                                                     <<array_max_1033@271:2>@274:0>:int,
                                                     <<<array_max_1033@271:2>@274:1>@290:0>:int)
        
        P[<<array_max_1033@271:2>@274:0>](<make_array_1030@276:0>:int,0:int,<make_array_1030@276:1>:int),
        (<make_array_1030@276:1> > 0) |- bot
        
        
        ((<array_max_1033@271:1> < <array_max_1033@271:0>) && (<<array_max_1033@271:2>@274:0> = <array_max_1033@271:1>))
        |- P[<<array_max_1033@271:2>@274:0>](<array_max_1033@271:0>:int,
                                             <array_max_1033@271:1>:int,
                                             <<array_max_1033@271:2>@274:0>:int)
      lower bounds:
        P[<check_1148@310:2>](<check_1148@310:0>:int,<check_1148@310:1>:int,<check_1148@310:2>:int) =
        ((<check_1148@310:1> = 0) && (0 <= <check_1148@310:2>))
        P[<<<array_max_1033@271:2>@274:1>@290:0>](<array_max_1033@271:0>:int,<array_max_1033@271:1>:int,<<array_max_1033@271:2>@274:0>:int,<<<array_max_1033@271:2>@274:1>@290:0>:int) =
        ((<array_max_1033@271:1> = 0) && (<<<array_max_1033@271:2>@274:1>@290:0> <= 0))
        P[<<array_max_1033@271:2>@274:0>](<array_max_1033@271:0>:int,<array_max_1033@271:1>:int,<<array_max_1033@271:2>@274:0>:int) =
        ((<array_max_1033@271:1> < <array_max_1033@271:0>) && (<<array_max_1033@271:2>@274:0> = <array_max_1033@271:1>))
        P[<<<check_1148@310:3>@313:1>@329:0>](<check_1148@310:0>:int,<check_1148@310:1>:int,<check_1148@310:2>:int,<<check_1148@310:3>@313:0>:int,<<<check_1148@310:3>@313:1>@329:0>:int) =
        ((<check_1148@310:1> = 0) && ((<<<check_1148@310:3>@313:1>@329:0> <= 0) && (0 <= <check_1148@310:2>)))
        P[<<check_1148@310:3>@313:0>](<check_1148@310:0>:int,<check_1148@310:1>:int,<check_1148@310:2>:int,<<check_1148@310:3>@313:0>:int) =
        ((<check_1148@310:1> = 0) &&
         ((<check_1148@310:1> < <check_1148@310:0>) &&
          ((0 <= <check_1148@310:2>) && (<<check_1148@310:3>@313:0> = <check_1148@310:1>))))
        P[<fail_1487@334:0>](<fail_1487@334:0>:bool) = false
      upper bounds:
        P[<<<array_max_1033@271:2>@274:1>@290:0>](var1415:int,var1416:int,var1417:int,var1418:int) = true
      begin GenHcSolver.classify_pids(632494)[4]
        output:
          [<<<array_max_1033@271:2>@274:1>@290:0>]
      end GenHcSolver.classify_pids(632494)[4] (0.000000 sec.)
      lb:((<array_max_1033@271:1> = 0) && (<<<array_max_1033@271:2>@274:1>@290:0> <= 0))
      nub:false
      begin ApronInterface.convex_hull_interpolate(632497)[4]
        lb:((<array_max_1033@271:1> = 0) && (<<<array_max_1033@271:2>@274:1>@290:0> <= 0))
        nub:false
        begin ExtFormula.Formula.case_analysis_boolean(632507)[5]
          ts: ((<array_max_1033@271:1> = 0) && (<<<array_max_1033@271:2>@274:1>@290:0> <= 0))
          
        end ExtFormula.Formula.case_analysis_boolean(632507)[5] (0.000000 sec.)
        begin ExtFormula.Formula.case_analysis_boolean(632514)[5]
          ts: false
          
        end ExtFormula.Formula.case_analysis_boolean(632514)[5] (0.000000 sec.)
        lb':((<array_max_1033@271:1> = 0) && ((-1 * <<<array_max_1033@271:2>@274:1>@290:0>) >= 0))
        nub':(-1 >= 0)
        begin InterpProver.interpolate(632517)[5]
          begin InterpProver.interpolate_fresh(632518)[6]
            begin InterpProver.interpolate_log(632519)[7]
              input1: ((<array_max_1033@271:1> = 0) && ((-1 * <<<array_max_1033@271:2>@274:1>@290:0>) >= 0))
              input2: (-1 >= 0)
              begin InterpProver.interpolate_check(632520)[8]
                begin InterpProver.interpolate_simplify(632521)[9]
                  begin InterpProver.interpolate_quick(632554)[10]
                    
                  end InterpProver.interpolate_quick(632554)[10] (0.000000 sec.)
                  
                end InterpProver.interpolate_simplify(632521)[9] (0.000000 sec.)
                
              end InterpProver.interpolate_check(632520)[8] (0.000000 sec.)
              output: true
            end InterpProver.interpolate_log(632519)[7] (0.001000 sec.)
            
          end InterpProver.interpolate_fresh(632518)[6] (0.001000 sec.)
          
        end InterpProver.interpolate(632517)[5] (0.001000 sec.)
        output:
          P[<<<array_max_1033@271:2>@274:1>@290:0>](<array_max_1033@271:0>:int,<array_max_1033@271:1>:int,<<array_max_1033@271:2>@274:0>:int,<<<array_max_1033@271:2>@274:1>@290:0>:int) =
          true
      end ApronInterface.convex_hull_interpolate(632497)[4] (0.001000 sec.)
      Horn clauses:
        P[<fail_1487@334:0>](<fail_1487@334:0>:bool)|- bot
        
        P[<check_1148@310:2>](<f_check_1482@331:2>:int,<f_check_1482@331:0>:int,<f_check_1482@331:1>:int),
        P[<<<check_1148@310:3>@313:1>@329:0>](<f_check_1482@331:2>:int,<f_check_1482@331:0>:int,<f_check_1482@331:1>:int,<f_check_1482@331:0>:int,<f_check_1482@331:5>:int),
        ((<f_check_1482@331:5> > <f_check_1482@331:1>) &&
         ((<f_check_1482@331:0> < <f_check_1482@331:2>) && <fail_1487@334:0>))
        |- P[<fail_1487@334:0>](<fail_1487@334:0>:bool)
        
        P[<check_1148@310:2>](<check_1148@310:0>:int,<check_1148@310:1>:int,<check_1148@310:2>:int),
        ((<check_1148@310:1> = 0) && ((<<<check_1148@310:3>@313:1>@329:0> <= 0) && (0 <= <check_1148@310:2>)))
        |- P[<<<check_1148@310:3>@313:1>@329:0>](<check_1148@310:0>:int,
                                                 <check_1148@310:1>:int,
                                                 <check_1148@310:2>:int,
                                                 <<check_1148@310:3>@313:0>:int,
                                                 <<<check_1148@310:3>@313:1>@329:0>:int)
        
        P[<<check_1148@310:3>@313:0>](<make_array_1030@315:0>:int,0:int,<check_1148@310:2>:int,<make_array_1030@315:1>:int),
        ((<make_array_1030@315:1> > 0) && (0 <= <check_1148@310:2>)) |- bot
        
        P[<check_1148@310:2>](<check_1148@310:0>:int,<check_1148@310:1>:int,<check_1148@310:2>:int),
        ((<check_1148@310:1> < <check_1148@310:0>) && (<<check_1148@310:3>@313:0> = <check_1148@310:1>))
        |- P[<<check_1148@310:3>@313:0>](<check_1148@310:0>:int,<check_1148@310:1>:int,
                                         <check_1148@310:2>:int,<<check_1148@310:3>@313:0>:int)
        
         ((<check_1148@310:1> = 0) && (0 <= <check_1148@310:2>))
        |- P[<check_1148@310:2>](<check_1148@310:0>:int,<check_1148@310:1>:int,
                                 <check_1148@310:2>:int)
        
        P[<<array_max_1033@271:2>@274:0>](<make_array_1030@276:0>:int,0:int,<make_array_1030@276:1>:int),
        (<make_array_1030@276:1> > 0) |- bot
        
        
        ((<array_max_1033@271:1> < <array_max_1033@271:0>) && (<<array_max_1033@271:2>@274:0> = <array_max_1033@271:1>))
        |- P[<<array_max_1033@271:2>@274:0>](<array_max_1033@271:0>:int,
                                             <array_max_1033@271:1>:int,
                                             <<array_max_1033@271:2>@274:0>:int)
      lower bounds:
        P[<check_1148@310:2>](<check_1148@310:0>:int,<check_1148@310:1>:int,<check_1148@310:2>:int) =
        ((<check_1148@310:1> = 0) && (0 <= <check_1148@310:2>))
        P[<<array_max_1033@271:2>@274:0>](<array_max_1033@271:0>:int,<array_max_1033@271:1>:int,<<array_max_1033@271:2>@274:0>:int) =
        ((<array_max_1033@271:1> < <array_max_1033@271:0>) && (<<array_max_1033@271:2>@274:0> = <array_max_1033@271:1>))
        P[<<<check_1148@310:3>@313:1>@329:0>](<check_1148@310:0>:int,<check_1148@310:1>:int,<check_1148@310:2>:int,<<check_1148@310:3>@313:0>:int,<<<check_1148@310:3>@313:1>@329:0>:int) =
        ((<check_1148@310:1> = 0) && ((<<<check_1148@310:3>@313:1>@329:0> <= 0) && (0 <= <check_1148@310:2>)))
        P[<<check_1148@310:3>@313:0>](<check_1148@310:0>:int,<check_1148@310:1>:int,<check_1148@310:2>:int,<<check_1148@310:3>@313:0>:int) =
        ((<check_1148@310:1> = 0) &&
         ((<check_1148@310:1> < <check_1148@310:0>) &&
          ((0 <= <check_1148@310:2>) && (<<check_1148@310:3>@313:0> = <check_1148@310:1>))))
        P[<fail_1487@334:0>](<fail_1487@334:0>:bool) = false
      upper bounds:
        P[<fail_1487@334:0>](var1420:bool) = true
      begin GenHcSolver.classify_pids(636918)[4]
        output:
          [<fail_1487@334:0>]
      end GenHcSolver.classify_pids(636918)[4] (0.000000 sec.)
      lb:false
      nub:false
      begin ApronInterface.convex_hull_interpolate(636921)[4]
        lb:false
        nub:false
        begin ExtFormula.Formula.case_analysis_boolean(636924)[5]
          ts: false
          
        end ExtFormula.Formula.case_analysis_boolean(636924)[5] (0.000000 sec.)
        begin ExtFormula.Formula.case_analysis_boolean(636929)[5]
          ts: false
          
        end ExtFormula.Formula.case_analysis_boolean(636929)[5] (0.000000 sec.)
        lb':(-1 >= 0)
        nub':(-1 >= 0)
        begin InterpProver.interpolate(636932)[5]
          begin InterpProver.interpolate_fresh(636933)[6]
            begin InterpProver.interpolate_log(636934)[7]
              input1: (-1 >= 0)
              input2: (-1 >= 0)
              begin InterpProver.interpolate_check(636935)[8]
                begin InterpProver.interpolate_simplify(636936)[9]
                  begin InterpProver.interpolate_quick(636951)[10]
                    
                  end InterpProver.interpolate_quick(636951)[10] (0.000000 sec.)
                  begin minimizing # of disjunctions(636955)[10]
                    input: false
                    output: false
                  end minimizing # of disjunctions(636955)[10] (0.000000 sec.)
                  
                end InterpProver.interpolate_simplify(636936)[9] (0.001000 sec.)
                
              end InterpProver.interpolate_check(636935)[8] (0.002000 sec.)
              output: false
            end InterpProver.interpolate_log(636934)[7] (0.002000 sec.)
            
          end InterpProver.interpolate_fresh(636933)[6] (0.002000 sec.)
          
        end InterpProver.interpolate(636932)[5] (0.002000 sec.)
        output:
          P[<fail_1487@334:0>](<fail_1487@334:0>:bool) = false
      end ApronInterface.convex_hull_interpolate(636921)[4] (0.002000 sec.)
      Horn clauses:
        P[<check_1148@310:2>](<f_check_1482@331:2>:int,<f_check_1482@331:0>:int,<f_check_1482@331:1>:int),
        P[<<<check_1148@310:3>@313:1>@329:0>](<f_check_1482@331:2>:int,<f_check_1482@331:0>:int,<f_check_1482@331:1>:int,<f_check_1482@331:0>:int,<f_check_1482@331:5>:int),
        ((<f_check_1482@331:0> < <f_check_1482@331:2>) && (<f_check_1482@331:5> > <f_check_1482@331:1>)) |- bot
        
        P[<check_1148@310:2>](<check_1148@310:0>:int,<check_1148@310:1>:int,<check_1148@310:2>:int),
        ((<check_1148@310:1> = 0) && ((<<<check_1148@310:3>@313:1>@329:0> <= 0) && (0 <= <check_1148@310:2>)))
        |- P[<<<check_1148@310:3>@313:1>@329:0>](<check_1148@310:0>:int,
                                                 <check_1148@310:1>:int,
                                                 <check_1148@310:2>:int,
                                                 <<check_1148@310:3>@313:0>:int,
                                                 <<<check_1148@310:3>@313:1>@329:0>:int)
        
        P[<<check_1148@310:3>@313:0>](<make_array_1030@315:0>:int,0:int,<check_1148@310:2>:int,<make_array_1030@315:1>:int),
        ((<make_array_1030@315:1> > 0) && (0 <= <check_1148@310:2>)) |- bot
        
        P[<check_1148@310:2>](<check_1148@310:0>:int,<check_1148@310:1>:int,<check_1148@310:2>:int),
        ((<check_1148@310:1> < <check_1148@310:0>) && (<<check_1148@310:3>@313:0> = <check_1148@310:1>))
        |- P[<<check_1148@310:3>@313:0>](<check_1148@310:0>:int,<check_1148@310:1>:int,
                                         <check_1148@310:2>:int,<<check_1148@310:3>@313:0>:int)
        
         ((<check_1148@310:1> = 0) && (0 <= <check_1148@310:2>))
        |- P[<check_1148@310:2>](<check_1148@310:0>:int,<check_1148@310:1>:int,
                                 <check_1148@310:2>:int)
        
        P[<<array_max_1033@271:2>@274:0>](<make_array_1030@276:0>:int,0:int,<make_array_1030@276:1>:int),
        (<make_array_1030@276:1> > 0) |- bot
        
        
        ((<array_max_1033@271:1> < <array_max_1033@271:0>) && (<<array_max_1033@271:2>@274:0> = <array_max_1033@271:1>))
        |- P[<<array_max_1033@271:2>@274:0>](<array_max_1033@271:0>:int,
                                             <array_max_1033@271:1>:int,
                                             <<array_max_1033@271:2>@274:0>:int)
      lower bounds:
        P[<check_1148@310:2>](<check_1148@310:0>:int,<check_1148@310:1>:int,<check_1148@310:2>:int) =
        ((<check_1148@310:1> = 0) && (0 <= <check_1148@310:2>))
        P[<<array_max_1033@271:2>@274:0>](<array_max_1033@271:0>:int,<array_max_1033@271:1>:int,<<array_max_1033@271:2>@274:0>:int) =
        ((<array_max_1033@271:1> < <array_max_1033@271:0>) && (<<array_max_1033@271:2>@274:0> = <array_max_1033@271:1>))
        P[<<<check_1148@310:3>@313:1>@329:0>](<check_1148@310:0>:int,<check_1148@310:1>:int,<check_1148@310:2>:int,<<check_1148@310:3>@313:0>:int,<<<check_1148@310:3>@313:1>@329:0>:int) =
        ((<check_1148@310:1> = 0) && ((<<<check_1148@310:3>@313:1>@329:0> <= 0) && (0 <= <check_1148@310:2>)))
        P[<<check_1148@310:3>@313:0>](<check_1148@310:0>:int,<check_1148@310:1>:int,<check_1148@310:2>:int,<<check_1148@310:3>@313:0>:int) =
        ((<check_1148@310:1> = 0) &&
         ((<check_1148@310:1> < <check_1148@310:0>) &&
          ((0 <= <check_1148@310:2>) && (<<check_1148@310:3>@313:0> = <check_1148@310:1>))))
      upper bounds:
        P[<<<check_1148@310:3>@313:1>@329:0>](var1421:int,var1422:int,var1423:int,var1424:int,var1425:int) =
        ((var1422 <> 0) || ((var1424 <> 0) || ((0 > var1423) || ((var1425 <= var1423) || (0 >= var1421)))))
      begin GenHcSolver.classify_pids(641218)[4]
        output:
          [<<<check_1148@310:3>@313:1>@329:0>]
      end GenHcSolver.classify_pids(641218)[4] (0.000000 sec.)
      lb:((<check_1148@310:1> = 0) && ((<<<check_1148@310:3>@313:1>@329:0> <= 0) && (0 <= <check_1148@310:2>)))
      nub:(not
             ((<check_1148@310:1> <> 0) ||
              ((<<check_1148@310:3>@313:0> <> 0) ||
               ((0 > <check_1148@310:2>) ||
                ((<<<check_1148@310:3>@313:1>@329:0> <= <check_1148@310:2>) || (0 >= <check_1148@310:0>))))))
      begin ApronInterface.convex_hull_interpolate(641221)[4]
        lb:((<check_1148@310:1> = 0) && ((<<<check_1148@310:3>@313:1>@329:0> <= 0) && (0 <= <check_1148@310:2>)))
        nub:(not
               ((<check_1148@310:1> <> 0) ||
                ((<<check_1148@310:3>@313:0> <> 0) ||
                 ((0 > <check_1148@310:2>) ||
                  ((<<<check_1148@310:3>@313:1>@329:0> <= <check_1148@310:2>) || (0 >= <check_1148@310:0>))))))
        begin ExtFormula.Formula.case_analysis_boolean(641242)[5]
          ts: ((<check_1148@310:1> = 0) && ((<<<check_1148@310:3>@313:1>@329:0> <= 0) && (0 <= <check_1148@310:2>)))
          
        end ExtFormula.Formula.case_analysis_boolean(641242)[5] (0.000000 sec.)
        begin ExtFormula.Formula.case_analysis_boolean(641304)[5]
          ts: ((<check_1148@310:1> = 0) &&
               ((<<check_1148@310:3>@313:0> = 0) &&
                ((0 <= <check_1148@310:2>) &&
                 ((<<<check_1148@310:3>@313:1>@329:0> > <check_1148@310:2>) && (0 < <check_1148@310:0>)))))
          
        end ExtFormula.Formula.case_analysis_boolean(641304)[5] (0.001000 sec.)
        lb':((<check_1148@310:1> = 0) &&
             (((-1 * <<<check_1148@310:3>@313:1>@329:0>) >= 0) && (<check_1148@310:2> >= 0)))
        nub':((<<check_1148@310:3>@313:0> = 0) &&
              ((<check_1148@310:1> = 0) &&
               ((((-1 + <<<check_1148@310:3>@313:1>@329:0>) + (-1 * <check_1148@310:2>)) >= 0) &&
                ((<check_1148@310:2> >= 0) && ((-1 + <check_1148@310:0>) >= 0)))))
        begin InterpProver.interpolate(641313)[5]
          begin InterpProver.interpolate_fresh(641314)[6]
            begin InterpProver.interpolate_log(641315)[7]
              input1: ((<check_1148@310:1> = 0) &&
                       (((-1 * <<<check_1148@310:3>@313:1>@329:0>) >= 0) && (<check_1148@310:2> >= 0)))
              input2: ((<<check_1148@310:3>@313:0> = 0) &&
                       ((<check_1148@310:1> = 0) &&
                        ((((-1 + <<<check_1148@310:3>@313:1>@329:0>) + (-1 * <check_1148@310:2>)) >= 0) &&
                         ((<check_1148@310:2> >= 0) && ((-1 + <check_1148@310:0>) >= 0)))))
              begin InterpProver.interpolate_check(641316)[8]
                begin InterpProver.interpolate_simplify(641317)[9]
                  begin InterpProver.interpolate_quick(641604)[10]
                    begin CsisatInterface.interpolate_csisat_wrap(641613)[11]
                      begin CsisatInterface.interpolate_csisat_post_process(641614)[12]
                        begin CsisatInterface.interpolate_csisat_log(641615)[13]
                          input1: (0 = v_sep_check_1148_sep_310_sep_1 & 0 <= v_sep_check_1148_sep_310_sep_2 & v_sep_check_1148_sep_310_sep_3_sep_313_sep_1_sep_329_sep_0 <= 0)
                          input2: (0 = v_sep_check_1148_sep_310_sep_1 & 0 <= v_sep_check_1148_sep_310_sep_2 & 1 <= v_sep_check_1148_sep_310_sep_0 & (1 + v_sep_check_1148_sep_310_sep_2) <= v_sep_check_1148_sep_310_sep_3_sep_313_sep_1_sep_329_sep_0)
                          begin CsisatInterface.interpolate_csisat_raw(641616)[14]
                            
                          end CsisatInterface.interpolate_csisat_raw(641616)[14] (0.000000 sec.)
                          output: (-2*v_sep_check_1148_sep_310_sep_2 + 2*v_sep_check_1148_sep_310_sep_3_sep_313_sep_1_sep_329_sep_0) <= 0
                          
                        end CsisatInterface.interpolate_csisat_log(641615)[13] (0.000000 sec.)
                        after simplification: (-2*v_sep_check_1148_sep_310_sep_2 + 2*v_sep_check_1148_sep_310_sep_3_sep_313_sep_1_sep_329_sep_0) <= 0
                        after dnf conversion: (((-2*v_sep_check_1148_sep_310_sep_2 + 2*v_sep_check_1148_sep_310_sep_3_sep_313_sep_1_sep_329_sep_0) <= 0))
                        
                      end CsisatInterface.interpolate_csisat_post_process(641614)[12] (0.000000 sec.)
                      
                    end CsisatInterface.interpolate_csisat_wrap(641613)[11] (0.000000 sec.)
                    
                  end InterpProver.interpolate_quick(641604)[10] (0.000000 sec.)
                  
                end InterpProver.interpolate_simplify(641317)[9] (0.002999 sec.)
                
              end InterpProver.interpolate_check(641316)[8] (0.002999 sec.)
              output: (<<<check_1148@310:3>@313:1>@329:0> <= <check_1148@310:2>)
            end InterpProver.interpolate_log(641315)[7] (0.002999 sec.)
            
          end InterpProver.interpolate_fresh(641314)[6] (0.002999 sec.)
          
        end InterpProver.interpolate(641313)[5] (0.002999 sec.)
        output:
          P[<<<check_1148@310:3>@313:1>@329:0>](<check_1148@310:0>:int,<check_1148@310:1>:int,<check_1148@310:2>:int,<<check_1148@310:3>@313:0>:int,<<<check_1148@310:3>@313:1>@329:0>:int) =
          (<<<check_1148@310:3>@313:1>@329:0> <= <check_1148@310:2>)
      end ApronInterface.convex_hull_interpolate(641221)[4] (0.004999 sec.)
      Horn clauses:
        P[<<check_1148@310:3>@313:0>](<make_array_1030@315:0>:int,0:int,<check_1148@310:2>:int,<make_array_1030@315:1>:int),
        ((<make_array_1030@315:1> > 0) && (0 <= <check_1148@310:2>)) |- bot
        
        P[<check_1148@310:2>](<check_1148@310:0>:int,<check_1148@310:1>:int,<check_1148@310:2>:int),
        ((<check_1148@310:1> < <check_1148@310:0>) && (<<check_1148@310:3>@313:0> = <check_1148@310:1>))
        |- P[<<check_1148@310:3>@313:0>](<check_1148@310:0>:int,<check_1148@310:1>:int,
                                         <check_1148@310:2>:int,<<check_1148@310:3>@313:0>:int)
        
         ((<check_1148@310:1> = 0) && (0 <= <check_1148@310:2>))
        |- P[<check_1148@310:2>](<check_1148@310:0>:int,<check_1148@310:1>:int,
                                 <check_1148@310:2>:int)
        
        P[<<array_max_1033@271:2>@274:0>](<make_array_1030@276:0>:int,0:int,<make_array_1030@276:1>:int),
        (<make_array_1030@276:1> > 0) |- bot
        
        
        ((<array_max_1033@271:1> < <array_max_1033@271:0>) && (<<array_max_1033@271:2>@274:0> = <array_max_1033@271:1>))
        |- P[<<array_max_1033@271:2>@274:0>](<array_max_1033@271:0>:int,
                                             <array_max_1033@271:1>:int,
                                             <<array_max_1033@271:2>@274:0>:int)
      lower bounds:
        P[<check_1148@310:2>](<check_1148@310:0>:int,<check_1148@310:1>:int,<check_1148@310:2>:int) =
        ((<check_1148@310:1> = 0) && (0 <= <check_1148@310:2>))
        P[<<array_max_1033@271:2>@274:0>](<array_max_1033@271:0>:int,<array_max_1033@271:1>:int,<<array_max_1033@271:2>@274:0>:int) =
        ((<array_max_1033@271:1> < <array_max_1033@271:0>) && (<<array_max_1033@271:2>@274:0> = <array_max_1033@271:1>))
        P[<<check_1148@310:3>@313:0>](<check_1148@310:0>:int,<check_1148@310:1>:int,<check_1148@310:2>:int,<<check_1148@310:3>@313:0>:int) =
        ((<check_1148@310:1> = 0) &&
         ((<check_1148@310:1> < <check_1148@310:0>) &&
          ((0 <= <check_1148@310:2>) && (<<check_1148@310:3>@313:0> = <check_1148@310:1>))))
      upper bounds:
        P[<<check_1148@310:3>@313:0>](var1426:int,var1427:int,var1428:int,var1429:int) =
        ((var1427 <> 0) || ((var1429 <= 0) || (0 > var1428)))
      begin GenHcSolver.classify_pids(644444)[4]
        output:
          [<<check_1148@310:3>@313:0>]
      end GenHcSolver.classify_pids(644444)[4] (0.000000 sec.)
      lb:((<check_1148@310:1> = 0) &&
          ((<check_1148@310:1> < <check_1148@310:0>) &&
           ((0 <= <check_1148@310:2>) && (<<check_1148@310:3>@313:0> = <check_1148@310:1>))))
      nub:(not ((<check_1148@310:1> <> 0) || ((<<check_1148@310:3>@313:0> <= 0) || (0 > <check_1148@310:2>))))
      begin ApronInterface.convex_hull_interpolate(644447)[4]
        lb:((<check_1148@310:1> = 0) &&
            ((<check_1148@310:1> < <check_1148@310:0>) &&
             ((0 <= <check_1148@310:2>) && (<<check_1148@310:3>@313:0> = <check_1148@310:1>))))
        nub:(not ((<check_1148@310:1> <> 0) || ((<<check_1148@310:3>@313:0> <= 0) || (0 > <check_1148@310:2>))))
        begin ExtFormula.Formula.case_analysis_boolean(644492)[5]
          ts: ((<check_1148@310:1> = 0) &&
               ((<check_1148@310:1> < <check_1148@310:0>) &&
                ((0 <= <check_1148@310:2>) && (<<check_1148@310:3>@313:0> = <check_1148@310:1>))))
          
        end ExtFormula.Formula.case_analysis_boolean(644492)[5] (0.001000 sec.)
        begin ExtFormula.Formula.case_analysis_boolean(644521)[5]
          ts: ((<check_1148@310:1> = 0) && ((<<check_1148@310:3>@313:0> > 0) && (0 <= <check_1148@310:2>)))
          
        end ExtFormula.Formula.case_analysis_boolean(644521)[5] (0.000000 sec.)
        lb':((<<check_1148@310:3>@313:0> = 0) &&
             ((<check_1148@310:1> = 0) && ((<check_1148@310:2> >= 0) && ((-1 + <check_1148@310:0>) >= 0))))
        nub':((<check_1148@310:1> = 0) && (((-1 + <<check_1148@310:3>@313:0>) >= 0) && (<check_1148@310:2> >= 0)))
        begin InterpProver.interpolate(644527)[5]
          begin InterpProver.interpolate_fresh(644528)[6]
            begin InterpProver.interpolate_log(644529)[7]
              input1: ((<<check_1148@310:3>@313:0> = 0) &&
                       ((<check_1148@310:1> = 0) && ((<check_1148@310:2> >= 0) && ((-1 + <check_1148@310:0>) >= 0))))
              input2: ((<check_1148@310:1> = 0) &&
                       (((-1 + <<check_1148@310:3>@313:0>) >= 0) && (<check_1148@310:2> >= 0)))
              begin InterpProver.interpolate_check(644530)[8]
                begin InterpProver.interpolate_simplify(644531)[9]
                  begin InterpProver.interpolate_quick(644660)[10]
                    begin CsisatInterface.interpolate_csisat_wrap(644669)[11]
                      begin CsisatInterface.interpolate_csisat_post_process(644670)[12]
                        begin CsisatInterface.interpolate_csisat_log(644671)[13]
                          input1: (0 = v_sep_check_1148_sep_310_sep_1 & 0 = v_sep_check_1148_sep_310_sep_3_sep_313_sep_0 & 0 <= v_sep_check_1148_sep_310_sep_2 & 1 <= v_sep_check_1148_sep_310_sep_0)
                          input2: (0 = v_sep_check_1148_sep_310_sep_1 & 0 <= v_sep_check_1148_sep_310_sep_2 & 1 <= v_sep_check_1148_sep_310_sep_3_sep_313_sep_0)
                          begin CsisatInterface.interpolate_csisat_raw(644672)[14]
                            
                          end CsisatInterface.interpolate_csisat_raw(644672)[14] (0.000000 sec.)
                          output: 2*v_sep_check_1148_sep_310_sep_3_sep_313_sep_0 <= 0
                          
                        end CsisatInterface.interpolate_csisat_log(644671)[13] (0.000000 sec.)
                        after simplification: 2*v_sep_check_1148_sep_310_sep_3_sep_313_sep_0 <= 0
                        after dnf conversion: ((2*v_sep_check_1148_sep_310_sep_3_sep_313_sep_0 <= 0))
                        
                      end CsisatInterface.interpolate_csisat_post_process(644670)[12] (0.000000 sec.)
                      
                    end CsisatInterface.interpolate_csisat_wrap(644669)[11] (0.000000 sec.)
                    
                  end InterpProver.interpolate_quick(644660)[10] (0.001000 sec.)
                  
                end InterpProver.interpolate_simplify(644531)[9] (0.002000 sec.)
                
              end InterpProver.interpolate_check(644530)[8] (0.003000 sec.)
              output: (<<check_1148@310:3>@313:0> <= 0)
            end InterpProver.interpolate_log(644529)[7] (0.003000 sec.)
            
          end InterpProver.interpolate_fresh(644528)[6] (0.003000 sec.)
          
        end InterpProver.interpolate(644527)[5] (0.003000 sec.)
        output:
          P[<<check_1148@310:3>@313:0>](<check_1148@310:0>:int,<check_1148@310:1>:int,<check_1148@310:2>:int,<<check_1148@310:3>@313:0>:int) =
          (<<check_1148@310:3>@313:0> <= 0)
      end ApronInterface.convex_hull_interpolate(644447)[4] (0.004000 sec.)
      Horn clauses:
        P[<check_1148@310:2>](<check_1148@310:0>:int,<<check_1148@310:3>@313:0>:int,<check_1148@310:2>:int),
        ((<<check_1148@310:3>@313:0> < <check_1148@310:0>) && (<<check_1148@310:3>@313:0> > 0)) |- bot
        
         ((<check_1148@310:1> = 0) && (0 <= <check_1148@310:2>))
        |- P[<check_1148@310:2>](<check_1148@310:0>:int,<check_1148@310:1>:int,
                                 <check_1148@310:2>:int)
        
        P[<<array_max_1033@271:2>@274:0>](<make_array_1030@276:0>:int,0:int,<make_array_1030@276:1>:int),
        (<make_array_1030@276:1> > 0) |- bot
        
        
        ((<array_max_1033@271:1> < <array_max_1033@271:0>) && (<<array_max_1033@271:2>@274:0> = <array_max_1033@271:1>))
        |- P[<<array_max_1033@271:2>@274:0>](<array_max_1033@271:0>:int,
                                             <array_max_1033@271:1>:int,
                                             <<array_max_1033@271:2>@274:0>:int)
      lower bounds:
        P[<check_1148@310:2>](<check_1148@310:0>:int,<check_1148@310:1>:int,<check_1148@310:2>:int) =
        ((<check_1148@310:1> = 0) && (0 <= <check_1148@310:2>))
        P[<<array_max_1033@271:2>@274:0>](<array_max_1033@271:0>:int,<array_max_1033@271:1>:int,<<array_max_1033@271:2>@274:0>:int) =
        ((<array_max_1033@271:1> < <array_max_1033@271:0>) && (<<array_max_1033@271:2>@274:0> = <array_max_1033@271:1>))
      upper bounds:
        P[<check_1148@310:2>](var1430:int,var1431:int,var1432:int) = ((var1431 >= var1430) || (var1431 <= 0))
      begin GenHcSolver.classify_pids(646326)[4]
        output:
          [<check_1148@310:2>]
      end GenHcSolver.classify_pids(646326)[4] (0.000000 sec.)
      lb:((<check_1148@310:1> = 0) && (0 <= <check_1148@310:2>))
      nub:(not ((<check_1148@310:1> >= <check_1148@310:0>) || (<check_1148@310:1> <= 0)))
      begin ApronInterface.convex_hull_interpolate(646329)[4]
        lb:((<check_1148@310:1> = 0) && (0 <= <check_1148@310:2>))
        nub:(not ((<check_1148@310:1> >= <check_1148@310:0>) || (<check_1148@310:1> <= 0)))
        begin ExtFormula.Formula.case_analysis_boolean(646339)[5]
          ts: ((<check_1148@310:1> = 0) && (0 <= <check_1148@310:2>))
          
        end ExtFormula.Formula.case_analysis_boolean(646339)[5] (0.000000 sec.)
        begin ExtFormula.Formula.case_analysis_boolean(646358)[5]
          ts: ((<check_1148@310:1> < <check_1148@310:0>) && (<check_1148@310:1> > 0))
          
        end ExtFormula.Formula.case_analysis_boolean(646358)[5] (0.000000 sec.)
        lb':((<check_1148@310:1> = 0) && (<check_1148@310:2> >= 0))
        nub':(((-1 + <check_1148@310:1>) >= 0) && (((-1 + (-1 * <check_1148@310:1>)) + <check_1148@310:0>) >= 0))
        begin InterpProver.interpolate(646364)[5]
          begin InterpProver.interpolate_fresh(646365)[6]
            begin InterpProver.interpolate_log(646366)[7]
              input1: ((<check_1148@310:1> = 0) && (<check_1148@310:2> >= 0))
              input2: (((-1 + <check_1148@310:1>) >= 0) &&
                       (((-1 + (-1 * <check_1148@310:1>)) + <check_1148@310:0>) >= 0))
              begin InterpProver.interpolate_check(646367)[8]
                begin InterpProver.interpolate_simplify(646368)[9]
                  begin InterpProver.interpolate_quick(646431)[10]
                    begin CsisatInterface.interpolate_csisat_wrap(646440)[11]
                      begin CsisatInterface.interpolate_csisat_post_process(646441)[12]
                        begin CsisatInterface.interpolate_csisat_log(646442)[13]
                          input1: (0 = v_sep_check_1148_sep_310_sep_1 & 0 <= v_sep_check_1148_sep_310_sep_2)
                          input2: (1 <= v_sep_check_1148_sep_310_sep_1 & (1 + v_sep_check_1148_sep_310_sep_1) <= v_sep_check_1148_sep_310_sep_0)
                          begin CsisatInterface.interpolate_csisat_raw(646443)[14]
                            
                          end CsisatInterface.interpolate_csisat_raw(646443)[14] (0.000000 sec.)
                          output: 2*v_sep_check_1148_sep_310_sep_1 <= 0
                          
                        end CsisatInterface.interpolate_csisat_log(646442)[13] (0.000000 sec.)
                        after simplification: 2*v_sep_check_1148_sep_310_sep_1 <= 0
                        after dnf conversion: ((2*v_sep_check_1148_sep_310_sep_1 <= 0))
                        
                      end CsisatInterface.interpolate_csisat_post_process(646441)[12] (0.000000 sec.)
                      
                    end CsisatInterface.interpolate_csisat_wrap(646440)[11] (0.000000 sec.)
                    
                  end InterpProver.interpolate_quick(646431)[10] (0.001000 sec.)
                  
                end InterpProver.interpolate_simplify(646368)[9] (0.002000 sec.)
                
              end InterpProver.interpolate_check(646367)[8] (0.002000 sec.)
              output: (<check_1148@310:1> <= 0)
            end InterpProver.interpolate_log(646366)[7] (0.002000 sec.)
            
          end InterpProver.interpolate_fresh(646365)[6] (0.002000 sec.)
          
        end InterpProver.interpolate(646364)[5] (0.002000 sec.)
        output:
          P[<check_1148@310:2>](<check_1148@310:0>:int,<check_1148@310:1>:int,<check_1148@310:2>:int) =
          (<check_1148@310:1> <= 0)
      end ApronInterface.convex_hull_interpolate(646329)[4] (0.002000 sec.)
      Horn clauses:
        P[<<array_max_1033@271:2>@274:0>](<make_array_1030@276:0>:int,0:int,<make_array_1030@276:1>:int),
        (<make_array_1030@276:1> > 0) |- bot
        
        
        ((<array_max_1033@271:1> < <array_max_1033@271:0>) && (<<array_max_1033@271:2>@274:0> = <array_max_1033@271:1>))
        |- P[<<array_max_1033@271:2>@274:0>](<array_max_1033@271:0>:int,
                                             <array_max_1033@271:1>:int,
                                             <<array_max_1033@271:2>@274:0>:int)
      lower bounds:
        P[<<array_max_1033@271:2>@274:0>](<array_max_1033@271:0>:int,<array_max_1033@271:1>:int,<<array_max_1033@271:2>@274:0>:int) =
        ((<array_max_1033@271:1> < <array_max_1033@271:0>) && (<<array_max_1033@271:2>@274:0> = <array_max_1033@271:1>))
      upper bounds:
        P[<<array_max_1033@271:2>@274:0>](var1433:int,var1434:int,var1435:int) = ((var1434 <> 0) || (var1435 <= 0))
      begin GenHcSolver.classify_pids(647444)[4]
        output:
          [<<array_max_1033@271:2>@274:0>]
      end GenHcSolver.classify_pids(647444)[4] (0.000000 sec.)
      lb:((<array_max_1033@271:1> < <array_max_1033@271:0>) &&
          (<<array_max_1033@271:2>@274:0> = <array_max_1033@271:1>))
      nub:(not ((<array_max_1033@271:1> <> 0) || (<<array_max_1033@271:2>@274:0> <= 0)))
      begin ApronInterface.convex_hull_interpolate(647447)[4]
        lb:((<array_max_1033@271:1> < <array_max_1033@271:0>) &&
            (<<array_max_1033@271:2>@274:0> = <array_max_1033@271:1>))
        nub:(not ((<array_max_1033@271:1> <> 0) || (<<array_max_1033@271:2>@274:0> <= 0)))
        begin ExtFormula.Formula.case_analysis_boolean(647465)[5]
          ts: ((<array_max_1033@271:1> < <array_max_1033@271:0>) &&
               (<<array_max_1033@271:2>@274:0> = <array_max_1033@271:1>))
          
        end ExtFormula.Formula.case_analysis_boolean(647465)[5] (0.000000 sec.)
        begin ExtFormula.Formula.case_analysis_boolean(647481)[5]
          ts: ((<array_max_1033@271:1> = 0) && (<<array_max_1033@271:2>@274:0> > 0))
          
        end ExtFormula.Formula.case_analysis_boolean(647481)[5] (0.000000 sec.)
        lb':(((<<array_max_1033@271:2>@274:0> + (-1 * <array_max_1033@271:1>)) = 0) &&
             (((-1 + (-1 * <array_max_1033@271:1>)) + <array_max_1033@271:0>) >= 0))
        nub':((<array_max_1033@271:1> = 0) && ((-1 + <<array_max_1033@271:2>@274:0>) >= 0))
        begin InterpProver.interpolate(647486)[5]
          begin InterpProver.interpolate_fresh(647487)[6]
            begin InterpProver.interpolate_log(647488)[7]
              input1: (((<<array_max_1033@271:2>@274:0> + (-1 * <array_max_1033@271:1>)) = 0) &&
                       (((-1 + (-1 * <array_max_1033@271:1>)) + <array_max_1033@271:0>) >= 0))
              input2: ((<array_max_1033@271:1> = 0) && ((-1 + <<array_max_1033@271:2>@274:0>) >= 0))
              begin InterpProver.interpolate_check(647489)[8]
                begin InterpProver.interpolate_simplify(647490)[9]
                  begin InterpProver.interpolate_quick(647559)[10]
                    begin CsisatInterface.interpolate_csisat_wrap(647568)[11]
                      begin CsisatInterface.interpolate_csisat_post_process(647569)[12]
                        begin CsisatInterface.interpolate_csisat_log(647570)[13]
                          input1: (v_sep_array_max_1033_sep_271_sep_1 = v_sep_array_max_1033_sep_271_sep_2_sep_274_sep_0 & (1 + v_sep_array_max_1033_sep_271_sep_1) <= v_sep_array_max_1033_sep_271_sep_0)
                          input2: (0 = v_sep_array_max_1033_sep_271_sep_1 & 1 <= v_sep_array_max_1033_sep_271_sep_2_sep_274_sep_0)
                          begin CsisatInterface.interpolate_csisat_raw(647571)[14]
                            
                          end CsisatInterface.interpolate_csisat_raw(647571)[14] (0.000000 sec.)
                          output: (-2*v_sep_array_max_1033_sep_271_sep_1 + 2*v_sep_array_max_1033_sep_271_sep_2_sep_274_sep_0) <= 0
                          
                        end CsisatInterface.interpolate_csisat_log(647570)[13] (0.000000 sec.)
                        after simplification: (-2*v_sep_array_max_1033_sep_271_sep_1 + 2*v_sep_array_max_1033_sep_271_sep_2_sep_274_sep_0) <= 0
                        after dnf conversion: (((-2*v_sep_array_max_1033_sep_271_sep_1 + 2*v_sep_array_max_1033_sep_271_sep_2_sep_274_sep_0) <= 0))
                        
                      end CsisatInterface.interpolate_csisat_post_process(647569)[12] (0.000000 sec.)
                      
                    end CsisatInterface.interpolate_csisat_wrap(647568)[11] (0.000000 sec.)
                    
                  end InterpProver.interpolate_quick(647559)[10] (0.001000 sec.)
                  
                end InterpProver.interpolate_simplify(647490)[9] (0.001000 sec.)
                
              end InterpProver.interpolate_check(647489)[8] (0.001000 sec.)
              output: (<<array_max_1033@271:2>@274:0> <= <array_max_1033@271:1>)
            end InterpProver.interpolate_log(647488)[7] (0.002000 sec.)
            
          end InterpProver.interpolate_fresh(647487)[6] (0.002000 sec.)
          
        end InterpProver.interpolate(647486)[5] (0.002000 sec.)
        output:
          P[<<array_max_1033@271:2>@274:0>](<array_max_1033@271:0>:int,<array_max_1033@271:1>:int,<<array_max_1033@271:2>@274:0>:int) =
          (<<array_max_1033@271:2>@274:0> <= <array_max_1033@271:1>)
      end ApronInterface.convex_hull_interpolate(647447)[4] (0.002000 sec.)
      begin HcSolver.check_validity(647758)[4]
        input:
          P[<fail_1487@334:0>](<fail_1487@334:0>:bool)|- bot
          
          P[<check_1148@310:2>](<f_check_1482@331:2>:int,<f_check_1482@331:0>:int,<f_check_1482@331:1>:int),
          P[<<<check_1148@310:3>@313:1>@329:0>](<f_check_1482@331:2>:int,<f_check_1482@331:0>:int,<f_check_1482@331:1>:int,<f_check_1482@331:0>:int,<f_check_1482@331:5>:int),
          ((<f_check_1482@331:5> > <f_check_1482@331:1>) &&
           ((<f_check_1482@331:0> < <f_check_1482@331:2>) && <fail_1487@334:0>))
          |- P[<fail_1487@334:0>](<fail_1487@334:0>:bool)
          
          P[<<array_max_1033@271:3>@306:0>](<check_1148@310:0>:int,0:int,<check_1148@310:2>:int),
          P[<<make_array_1030@315:2>@327:0>](<check_1148@310:0>:int,<<check_1148@310:3>@313:0>:int,<<<check_1148@310:3>@313:1>@329:0>:int),
          P[<check_1148@310:2>](<check_1148@310:0>:int,<check_1148@310:1>:int,<check_1148@310:2>:int),
          (<check_1148@310:1> = 0)
          |- P[<<<check_1148@310:3>@313:1>@329:0>](<check_1148@310:0>:int,
                                                   <check_1148@310:1>:int,
                                                   <check_1148@310:2>:int,
                                                   <<check_1148@310:3>@313:0>:int,
                                                   <<<check_1148@310:3>@313:1>@329:0>:int)
          
          P[<make_array_1030@315:1>](<make_array_1030@315:0>:int,<make_array_1030@315:1>:int),
          ((0 <= <make_array_1030@315:1>) &&
           ((<make_array_1030@315:1> < <make_array_1030@315:0>) &&
            (<<make_array_1030@315:2>@327:0> = <make_array_1030@315:1>)))
          |- P[<<make_array_1030@315:2>@327:0>](<make_array_1030@315:0>:int,
                                                <make_array_1030@315:1>:int,
                                                <<make_array_1030@315:2>@327:0>:int)
          
          P[<<array_max_1033@271:3>@306:0>](<make_array_1030@315:0>:int,0:int,<check_1148@310:2>:int),
          P[<<check_1148@310:3>@313:0>](<make_array_1030@315:0>:int,0:int,<check_1148@310:2>:int,<make_array_1030@315:1>:int)|- P[<make_array_1030@315:1>](
          <make_array_1030@315:0>:int,<make_array_1030@315:1>:int)
          
          P[<check_1148@310:2>](<check_1148@310:0>:int,<check_1148@310:1>:int,<check_1148@310:2>:int),
          ((<check_1148@310:1> < <check_1148@310:0>) && (<<check_1148@310:3>@313:0> = <check_1148@310:1>))
          |- P[<<check_1148@310:3>@313:0>](<check_1148@310:0>:int,<check_1148@310:1>:int,
                                           <check_1148@310:2>:int,<<check_1148@310:3>@313:0>:int)
          
          P[<<array_max_1033@271:3>@306:0>](<check_1148@310:0>:int,0:int,<check_1148@310:2>:int),
          (<check_1148@310:1> = 0)
          |- P[<check_1148@310:2>](<check_1148@310:0>:int,<check_1148@310:1>:int,
                                   <check_1148@310:2>:int)
          
          P[<array_max_1033@271:1>](<array_max_1033@271:0>:int,<array_max_1033@271:1>:int),
          P[<<<array_max_1033@271:2>@274:1>@290:0>](<array_max_1033@271:0>:int,<array_max_1033@271:1>:int,<array_max_1033@271:1>:int,var1315:int),
          P[<<array_max_1033@294:3>@297:0>](<array_max_1033@271:0>:int,(
                                            1 + <array_max_1033@271:1>):int,<<array_max_1033@271:3>@306:0>:int),
          ((var1315 <= <<array_max_1033@271:3>@306:0>) && (<array_max_1033@271:1> < <array_max_1033@271:0>))
          |- P[<<array_max_1033@271:3>@306:0>](<array_max_1033@271:0>:int,
                                               <array_max_1033@271:1>:int,
                                               <<array_max_1033@271:3>@306:0>:int)
          
          P[<array_max_1033@294:1>](<array_max_1033@294:0>:int,<array_max_1033@294:1>:int),
          ((<<array_max_1033@294:3>@297:0> = 0) && (<array_max_1033@294:1> >= <array_max_1033@294:0>))
          |- P[<<array_max_1033@294:3>@297:0>](<array_max_1033@294:0>:int,
                                               <array_max_1033@294:1>:int,
                                               <<array_max_1033@294:3>@297:0>:int)
          
          P[<array_max_1033@271:1>](<array_max_1033@294:0>:int,(-1 + <array_max_1033@294:1>):int),
          P[<<<array_max_1033@271:2>@274:1>@290:0>](<array_max_1033@294:0>:int,(
                                                    -1 + <array_max_1033@294:1>):int,(
                                                    -1 + <array_max_1033@294:1>):int,<f_array_max_1480@292:4>:int),
          (<array_max_1033@294:1> < (1 + <array_max_1033@294:0>))
          |- P[<array_max_1033@294:1>](<array_max_1033@294:0>:int,<array_max_1033@294:1>:int)
          
          P[<<make_array_1030@276:2>@288:0>](<array_max_1033@271:0>:int,<<array_max_1033@271:2>@274:0>:int,<<<array_max_1033@271:2>@274:1>@290:0>:int),
          P[<array_max_1033@271:1>](<array_max_1033@271:0>:int,<array_max_1033@271:1>:int),
          (<array_max_1033@271:1> = 0)
          |- P[<<<array_max_1033@271:2>@274:1>@290:0>](<array_max_1033@271:0>:int,
                                                       <array_max_1033@271:1>:int,
                                                       <<array_max_1033@271:2>@274:0>:int,
                                                       <<<array_max_1033@271:2>@274:1>@290:0>:int)
          
          P[<make_array_1030@276:1>](<make_array_1030@276:0>:int,<make_array_1030@276:1>:int),
          ((0 <= <make_array_1030@276:1>) &&
           ((<make_array_1030@276:1> < <make_array_1030@276:0>) &&
            (<<make_array_1030@276:2>@288:0> = <make_array_1030@276:1>)))
          |- P[<<make_array_1030@276:2>@288:0>](<make_array_1030@276:0>:int,
                                                <make_array_1030@276:1>:int,
                                                <<make_array_1030@276:2>@288:0>:int)
          
          P[<<array_max_1033@271:2>@274:0>](<make_array_1030@276:0>:int,0:int,<make_array_1030@276:1>:int)|- P[<make_array_1030@276:1>](
          <make_array_1030@276:0>:int,<make_array_1030@276:1>:int)
          
          P[<array_max_1033@271:1>](<array_max_1033@271:0>:int,<array_max_1033@271:1>:int),
          ((<array_max_1033@271:1> < <array_max_1033@271:0>) &&
           (<<array_max_1033@271:2>@274:0> = <array_max_1033@271:1>))
          |- P[<<array_max_1033@271:2>@274:0>](<array_max_1033@271:0>:int,
                                               <array_max_1033@271:1>:int,
                                               <<array_max_1033@271:2>@274:0>:int)
          
           (<array_max_1033@271:1> = 0)
          |- P[<array_max_1033@271:1>](<array_max_1033@271:0>:int,<array_max_1033@271:1>:int)
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        
      end HcSolver.check_validity(647758)[4] (0.009998 sec.)
      solution:
        P[<fail_1487@334:0>](<fail_1487@334:0>:bool) = false
        P[<<<check_1148@310:3>@313:1>@329:0>](<check_1148@310:0>:int,<check_1148@310:1>:int,<check_1148@310:2>:int,<<check_1148@310:3>@313:0>:int,<<<check_1148@310:3>@313:1>@329:0>:int) =
        (<<<check_1148@310:3>@313:1>@329:0> <= <check_1148@310:2>)
        P[<<make_array_1030@315:2>@327:0>](<make_array_1030@276:0>:int,<make_array_1030@276:1>:int,<<make_array_1030@276:2>@288:0>:int) =
        (<<make_array_1030@276:2>@288:0> <= 0)
        P[<make_array_1030@315:1>](<make_array_1030@276:0>:int,<make_array_1030@276:1>:int) =
        (<make_array_1030@276:1> <= 0)
        P[<<check_1148@310:3>@313:0>](<check_1148@310:0>:int,<check_1148@310:1>:int,<check_1148@310:2>:int,<<check_1148@310:3>@313:0>:int) =
        (<<check_1148@310:3>@313:0> <= 0)
        P[<check_1148@310:2>](<check_1148@310:0>:int,<check_1148@310:1>:int,<check_1148@310:2>:int) =
        (<check_1148@310:1> <= 0)
        P[<<array_max_1033@271:3>@306:0>](<array_max_1033@294:0>:int,<array_max_1033@294:1>:int,<<array_max_1033@294:3>@297:0>:int) =
        (0 <= <<array_max_1033@294:3>@297:0>)
        P[<<array_max_1033@294:3>@297:0>](<array_max_1033@294:0>:int,<array_max_1033@294:1>:int,<<array_max_1033@294:3>@297:0>:int) =
        (0 <= <<array_max_1033@294:3>@297:0>)
        P[<array_max_1033@294:1>](<array_max_1033@271:0>:int,<array_max_1033@271:1>:int) = true
        P[<<<array_max_1033@271:2>@274:1>@290:0>](<array_max_1033@271:0>:int,<array_max_1033@271:1>:int,<<array_max_1033@271:2>@274:0>:int,<<<array_max_1033@271:2>@274:1>@290:0>:int) =
        true
        P[<<make_array_1030@276:2>@288:0>](<make_array_1030@276:0>:int,<make_array_1030@276:1>:int,<<make_array_1030@276:2>@288:0>:int) =
        (<<make_array_1030@276:2>@288:0> <= 0)
        P[<make_array_1030@276:1>](<make_array_1030@276:0>:int,<make_array_1030@276:1>:int) =
        (<make_array_1030@276:1> <= 0)
        P[<<array_max_1033@271:2>@274:0>](<array_max_1033@271:0>:int,<array_max_1033@271:1>:int,<<array_max_1033@271:2>@274:0>:int) =
        (<<array_max_1033@271:2>@274:0> <= <array_max_1033@271:1>)
        P[<array_max_1033@271:1>](<array_max_1033@271:0>:int,<array_max_1033@271:1>:int) = true
    end GenHcSolver.solve(567082)[3] (0.462930 sec.)
    begin YhornInterface.solve(649501)[3]
      begin HcSolver.solve_ub(649502)[4]
        encoded:
          P[<fail_1487@334:0>](<fail_1487@334:0>:int)|- bot
          
          P[<check_1148@310:2>](<f_check_1482@331:2>:int,<f_check_1482@331:0>:int,<f_check_1482@331:1>:int),
          P[<<<check_1148@310:3>@313:1>@329:0>](<f_check_1482@331:2>:int,<f_check_1482@331:0>:int,<f_check_1482@331:1>:int,<f_check_1482@331:0>:int,<f_check_1482@331:5>:int),
          ((<f_check_1482@331:5> > <f_check_1482@331:1>) &&
           ((<f_check_1482@331:0> < <f_check_1482@331:2>) && (<fail_1487@334:0> = 1)))
          |- P[<fail_1487@334:0>](<fail_1487@334:0>:int)
          
          P[<<array_max_1033@271:3>@306:0>](<check_1148@310:0>:int,0:int,<check_1148@310:2>:int),
          P[<<make_array_1030@315:2>@327:0>](<check_1148@310:0>:int,<<check_1148@310:3>@313:0>:int,<<<check_1148@310:3>@313:1>@329:0>:int),
          P[<check_1148@310:2>](<check_1148@310:0>:int,<check_1148@310:1>:int,<check_1148@310:2>:int),
          (<check_1148@310:1> = 0)
          |- P[<<<check_1148@310:3>@313:1>@329:0>](<check_1148@310:0>:int,
                                                   <check_1148@310:1>:int,
                                                   <check_1148@310:2>:int,
                                                   <<check_1148@310:3>@313:0>:int,
                                                   <<<check_1148@310:3>@313:1>@329:0>:int)
          
          P[<make_array_1030@315:1>](<make_array_1030@315:0>:int,<make_array_1030@315:1>:int),
          ((0 <= <make_array_1030@315:1>) &&
           ((<make_array_1030@315:1> < <make_array_1030@315:0>) &&
            (<<make_array_1030@315:2>@327:0> = <make_array_1030@315:1>)))
          |- P[<<make_array_1030@315:2>@327:0>](<make_array_1030@315:0>:int,
                                                <make_array_1030@315:1>:int,
                                                <<make_array_1030@315:2>@327:0>:int)
          
          P[<<array_max_1033@271:3>@306:0>](<make_array_1030@315:0>:int,0:int,<check_1148@310:2>:int),
          P[<<check_1148@310:3>@313:0>](<make_array_1030@315:0>:int,0:int,<check_1148@310:2>:int,<make_array_1030@315:1>:int)|- P[<make_array_1030@315:1>](
          <make_array_1030@315:0>:int,<make_array_1030@315:1>:int)
          
          P[<check_1148@310:2>](<check_1148@310:0>:int,<check_1148@310:1>:int,<check_1148@310:2>:int),
          ((<check_1148@310:1> < <check_1148@310:0>) && (<<check_1148@310:3>@313:0> = <check_1148@310:1>))
          |- P[<<check_1148@310:3>@313:0>](<check_1148@310:0>:int,<check_1148@310:1>:int,
                                           <check_1148@310:2>:int,<<check_1148@310:3>@313:0>:int)
          
          P[<<array_max_1033@271:3>@306:0>](<check_1148@310:0>:int,0:int,<check_1148@310:2>:int),
          (<check_1148@310:1> = 0)
          |- P[<check_1148@310:2>](<check_1148@310:0>:int,<check_1148@310:1>:int,
                                   <check_1148@310:2>:int)
          
          P[<array_max_1033@271:1>](<array_max_1033@271:0>:int,<array_max_1033@271:1>:int),
          P[<<<array_max_1033@271:2>@274:1>@290:0>](<array_max_1033@271:0>:int,<array_max_1033@271:1>:int,<array_max_1033@271:1>:int,var1315:int),
          P[<<array_max_1033@294:3>@297:0>](<array_max_1033@271:0>:int,(
                                            1 + <array_max_1033@271:1>):int,<<array_max_1033@271:3>@306:0>:int),
          ((var1315 <= <<array_max_1033@271:3>@306:0>) && (<array_max_1033@271:1> < <array_max_1033@271:0>))
          |- P[<<array_max_1033@271:3>@306:0>](<array_max_1033@271:0>:int,
                                               <array_max_1033@271:1>:int,
                                               <<array_max_1033@271:3>@306:0>:int)
          
          P[<array_max_1033@294:1>](<array_max_1033@294:0>:int,<array_max_1033@294:1>:int),
          ((<<array_max_1033@294:3>@297:0> = 0) && (<array_max_1033@294:1> >= <array_max_1033@294:0>))
          |- P[<<array_max_1033@294:3>@297:0>](<array_max_1033@294:0>:int,
                                               <array_max_1033@294:1>:int,
                                               <<array_max_1033@294:3>@297:0>:int)
          
          P[<array_max_1033@271:1>](<array_max_1033@294:0>:int,(-1 + <array_max_1033@294:1>):int),
          P[<<<array_max_1033@271:2>@274:1>@290:0>](<array_max_1033@294:0>:int,(
                                                    -1 + <array_max_1033@294:1>):int,(
                                                    -1 + <array_max_1033@294:1>):int,<f_array_max_1480@292:4>:int),
          (<array_max_1033@294:1> < (1 + <array_max_1033@294:0>))
          |- P[<array_max_1033@294:1>](<array_max_1033@294:0>:int,<array_max_1033@294:1>:int)
          
          P[<<make_array_1030@276:2>@288:0>](<array_max_1033@271:0>:int,<<array_max_1033@271:2>@274:0>:int,<<<array_max_1033@271:2>@274:1>@290:0>:int),
          P[<array_max_1033@271:1>](<array_max_1033@271:0>:int,<array_max_1033@271:1>:int),
          (<array_max_1033@271:1> = 0)
          |- P[<<<array_max_1033@271:2>@274:1>@290:0>](<array_max_1033@271:0>:int,
                                                       <array_max_1033@271:1>:int,
                                                       <<array_max_1033@271:2>@274:0>:int,
                                                       <<<array_max_1033@271:2>@274:1>@290:0>:int)
          
          P[<make_array_1030@276:1>](<make_array_1030@276:0>:int,<make_array_1030@276:1>:int),
          ((0 <= <make_array_1030@276:1>) &&
           ((<make_array_1030@276:1> < <make_array_1030@276:0>) &&
            (<<make_array_1030@276:2>@288:0> = <make_array_1030@276:1>)))
          |- P[<<make_array_1030@276:2>@288:0>](<make_array_1030@276:0>:int,
                                                <make_array_1030@276:1>:int,
                                                <<make_array_1030@276:2>@288:0>:int)
          
          P[<<array_max_1033@271:2>@274:0>](<make_array_1030@276:0>:int,0:int,<make_array_1030@276:1>:int)|- P[<make_array_1030@276:1>](
          <make_array_1030@276:0>:int,<make_array_1030@276:1>:int)
          
          P[<array_max_1033@271:1>](<array_max_1033@271:0>:int,<array_max_1033@271:1>:int),
          ((<array_max_1033@271:1> < <array_max_1033@271:0>) &&
           (<<array_max_1033@271:2>@274:0> = <array_max_1033@271:1>))
          |- P[<<array_max_1033@271:2>@274:0>](<array_max_1033@271:0>:int,
                                               <array_max_1033@271:1>:int,
                                               <<array_max_1033@271:2>@274:0>:int)
          
           (<array_max_1033@271:1> = 0)
          |- P[<array_max_1033@271:1>](<array_max_1033@271:0>:int,<array_max_1033@271:1>:int)
        input to Yhorn:
          P[<fail_1487@334:0>](<fail_1487@334:0>:int)|- bot
          
          P[<check_1148@310:2>](<f_check_1482@331:2>:int,<f_check_1482@331:0>:int,<f_check_1482@331:1>:int),
          P[<<<check_1148@310:3>@313:1>@329:0>](<f_check_1482@331:2>:int,<f_check_1482@331:0>:int,<f_check_1482@331:1>:int,<f_check_1482@331:0>:int,<f_check_1482@331:5>:int),
          ((<f_check_1482@331:0> < <f_check_1482@331:2>) &&
           ((<f_check_1482@331:5> > <f_check_1482@331:1>) && (<fail_1487@334:0> = 1)))
          |- P[<fail_1487@334:0>](<fail_1487@334:0>:int)
          
          P[<<array_max_1033@271:3>@306:0>](<check_1148@310:0>:int,var1436:int,<check_1148@310:2>:int),
          P[<<make_array_1030@315:2>@327:0>](<check_1148@310:0>:int,<<check_1148@310:3>@313:0>:int,<<<check_1148@310:3>@313:1>@329:0>:int),
          P[<check_1148@310:2>](<check_1148@310:0>:int,<check_1148@310:1>:int,<check_1148@310:2>:int),
          ((var1436 = 0) && (<check_1148@310:1> = 0))
          |- P[<<<check_1148@310:3>@313:1>@329:0>](<check_1148@310:0>:int,
                                                   <check_1148@310:1>:int,
                                                   <check_1148@310:2>:int,
                                                   <<check_1148@310:3>@313:0>:int,
                                                   <<<check_1148@310:3>@313:1>@329:0>:int)
          
          P[<make_array_1030@315:1>](<make_array_1030@315:0>:int,<make_array_1030@315:1>:int),
          ((<<make_array_1030@315:2>@327:0> = <make_array_1030@315:1>) &&
           ((<make_array_1030@315:1> < <make_array_1030@315:0>) && (0 <= <make_array_1030@315:1>)))
          |- P[<<make_array_1030@315:2>@327:0>](<make_array_1030@315:0>:int,
                                                <make_array_1030@315:1>:int,
                                                <<make_array_1030@315:2>@327:0>:int)
          
          P[<<array_max_1033@271:3>@306:0>](<make_array_1030@315:0>:int,var1437:int,<check_1148@310:2>:int),
          P[<<check_1148@310:3>@313:0>](<make_array_1030@315:0>:int,var1438:int,<check_1148@310:2>:int,<make_array_1030@315:1>:int),
          ((var1438 = 0) && (var1437 = 0))
          |- P[<make_array_1030@315:1>](<make_array_1030@315:0>:int,<make_array_1030@315:1>:int)
          
          P[<check_1148@310:2>](<check_1148@310:0>:int,<check_1148@310:1>:int,<check_1148@310:2>:int),
          ((<<check_1148@310:3>@313:0> = <check_1148@310:1>) && (<check_1148@310:1> < <check_1148@310:0>))
          |- P[<<check_1148@310:3>@313:0>](<check_1148@310:0>:int,<check_1148@310:1>:int,
                                           <check_1148@310:2>:int,<<check_1148@310:3>@313:0>:int)
          
          P[<<array_max_1033@271:3>@306:0>](<check_1148@310:0>:int,var1439:int,<check_1148@310:2>:int),
          ((var1439 = 0) && (<check_1148@310:1> = 0))
          |- P[<check_1148@310:2>](<check_1148@310:0>:int,<check_1148@310:1>:int,
                                   <check_1148@310:2>:int)
          
          P[<array_max_1033@271:1>](<array_max_1033@271:0>:int,<array_max_1033@271:1>:int),
          P[<<<array_max_1033@271:2>@274:1>@290:0>](<array_max_1033@271:0>:int,<array_max_1033@271:1>:int,<array_max_1033@271:1>:int,var1315:int),
          P[<<array_max_1033@294:3>@297:0>](<array_max_1033@271:0>:int,var1440:int,<<array_max_1033@271:3>@306:0>:int),
          ((var1440 = (1 + <array_max_1033@271:1>)) &&
           ((<array_max_1033@271:1> < <array_max_1033@271:0>) && (var1315 <= <<array_max_1033@271:3>@306:0>)))
          |- P[<<array_max_1033@271:3>@306:0>](<array_max_1033@271:0>:int,
                                               <array_max_1033@271:1>:int,
                                               <<array_max_1033@271:3>@306:0>:int)
          
          P[<array_max_1033@294:1>](<array_max_1033@294:0>:int,<array_max_1033@294:1>:int),
          ((<array_max_1033@294:1> >= <array_max_1033@294:0>) && (<<array_max_1033@294:3>@297:0> = 0))
          |- P[<<array_max_1033@294:3>@297:0>](<array_max_1033@294:0>:int,
                                               <array_max_1033@294:1>:int,
                                               <<array_max_1033@294:3>@297:0>:int)
          
          P[<array_max_1033@271:1>](<array_max_1033@294:0>:int,var1441:int),
          P[<<<array_max_1033@271:2>@274:1>@290:0>](<array_max_1033@294:0>:int,var1442:int,var1443:int,<f_array_max_1480@292:4>:int),
          (((1 + var1443) = <array_max_1033@294:1>) &&
           (((1 + var1442) = <array_max_1033@294:1>) &&
            (((1 + var1441) = <array_max_1033@294:1>) && (<array_max_1033@294:1> < (1 + <array_max_1033@294:0>)))))
          |- P[<array_max_1033@294:1>](<array_max_1033@294:0>:int,<array_max_1033@294:1>:int)
          
          P[<<make_array_1030@276:2>@288:0>](<array_max_1033@271:0>:int,<<array_max_1033@271:2>@274:0>:int,<<<array_max_1033@271:2>@274:1>@290:0>:int),
          P[<array_max_1033@271:1>](<array_max_1033@271:0>:int,<array_max_1033@271:1>:int),
          (<array_max_1033@271:1> = 0)
          |- P[<<<array_max_1033@271:2>@274:1>@290:0>](<array_max_1033@271:0>:int,
                                                       <array_max_1033@271:1>:int,
                                                       <<array_max_1033@271:2>@274:0>:int,
                                                       <<<array_max_1033@271:2>@274:1>@290:0>:int)
          
          P[<make_array_1030@276:1>](<make_array_1030@276:0>:int,<make_array_1030@276:1>:int),
          ((<<make_array_1030@276:2>@288:0> = <make_array_1030@276:1>) &&
           ((<make_array_1030@276:1> < <make_array_1030@276:0>) && (0 <= <make_array_1030@276:1>)))
          |- P[<<make_array_1030@276:2>@288:0>](<make_array_1030@276:0>:int,
                                                <make_array_1030@276:1>:int,
                                                <<make_array_1030@276:2>@288:0>:int)
          
          P[<<array_max_1033@271:2>@274:0>](<make_array_1030@276:0>:int,var1444:int,<make_array_1030@276:1>:int),
          (var1444 = 0) |- P[<make_array_1030@276:1>](<make_array_1030@276:0>:int,
                                                      <make_array_1030@276:1>:int)
          
          P[<array_max_1033@271:1>](<array_max_1033@271:0>:int,<array_max_1033@271:1>:int),
          ((<<array_max_1033@271:2>@274:0> = <array_max_1033@271:1>) &&
           (<array_max_1033@271:1> < <array_max_1033@271:0>))
          |- P[<<array_max_1033@271:2>@274:0>](<array_max_1033@271:0>:int,
                                               <array_max_1033@271:1>:int,
                                               <<array_max_1033@271:2>@274:0>:int)
          
           (<array_max_1033@271:1> = 0)
          |- P[<array_max_1033@271:1>](<array_max_1033@271:0>:int,<array_max_1033@271:1>:int)Yhorn (Wed Sep 25 10:52:05 JST 2013)


(0=0) & (v_sep_fail_1487_sep_334_sep_0($3858)) -> 1=0.
(($3858-1=0) & ($3859-$3860>0) & ($3861-$3862<0)) & (v_sep_check_1148_sep_310_sep_3_sep_313_sep_1_sep_329_sep_0($3862,$3861,$3860,$3861,$3859)) & (v_sep_check_1148_sep_310_sep_2($3862,$3861,$3860)) -> v_sep_fail_1487_sep_334_sep_0($3858).
(($3863=0) & ($3864=0)) & (v_sep_check_1148_sep_310_sep_2($3865,$3863,$3866)) & (v_sep_make_array_1030_sep_315_sep_2_sep_327_sep_0($3865,$3867,$3868)) & (v_sep_array_max_1033_sep_271_sep_3_sep_306_sep_0($3865,$3864,$3866)) -> v_sep_check_1148_sep_310_sep_3_sep_313_sep_1_sep_329_sep_0($3865,$3863,$3866,$3867,$3868).
((-$3869<=0) & ($3869-$3870<0) & (-$3869+$3871=0)) & (v_sep_make_array_1030_sep_315_sep_1($3870,$3869)) -> v_sep_make_array_1030_sep_315_sep_2_sep_327_sep_0($3870,$3869,$3871).
(($3872=0) & ($3873=0)) & (v_sep_check_1148_sep_310_sep_3_sep_313_sep_0($3870,$3873,$3866,$3869)) & (v_sep_array_max_1033_sep_271_sep_3_sep_306_sep_0($3870,$3872,$3866)) -> v_sep_make_array_1030_sep_315_sep_1($3870,$3869).
(($3863-$3865<0) & (-$3863+$3867=0)) & (v_sep_check_1148_sep_310_sep_2($3865,$3863,$3866)) -> v_sep_check_1148_sep_310_sep_3_sep_313_sep_0($3865,$3863,$3866,$3867).
(($3863=0) & ($3874=0)) & (v_sep_array_max_1033_sep_271_sep_3_sep_306_sep_0($3865,$3874,$3866)) -> v_sep_check_1148_sep_310_sep_2($3865,$3863,$3866).
(($3875-$3876<=0) & ($3877-$3878<0) & (-$3877+$3879-1=0)) & (v_sep_array_max_1033_sep_294_sep_3_sep_297_sep_0($3878,$3879,$3876)) & (v_sep_array_max_1033_sep_271_sep_2_sep_274_sep_1_sep_290_sep_0($3878,$3877,$3877,$3875)) & (v_sep_array_max_1033_sep_271_sep_1($3878,$3877)) -> v_sep_array_max_1033_sep_271_sep_3_sep_306_sep_0($3878,$3877,$3876).
(($3880=0) & ($3881-$3882>=0)) & (v_sep_array_max_1033_sep_294_sep_1($3882,$3881)) -> v_sep_array_max_1033_sep_294_sep_3_sep_297_sep_0($3882,$3881,$3880).
(($3881-$3882-1<0) & (-$3881+$3883+1=0) & (-$3881+$3884+1=0) & (-$3881+$3885+1=0)) & (v_sep_array_max_1033_sep_271_sep_2_sep_274_sep_1_sep_290_sep_0($3882,$3884,$3885,$3886)) & (v_sep_array_max_1033_sep_271_sep_1($3882,$3883)) -> v_sep_array_max_1033_sep_294_sep_1($3882,$3881).
($3877=0) & (v_sep_array_max_1033_sep_271_sep_1($3878,$3877)) & (v_sep_make_array_1030_sep_276_sep_2_sep_288_sep_0($3878,$3887,$3888)) -> v_sep_array_max_1033_sep_271_sep_2_sep_274_sep_1_sep_290_sep_0($3878,$3877,$3887,$3888).
((-$3889<=0) & ($3889-$3890<0) & (-$3889+$3891=0)) & (v_sep_make_array_1030_sep_276_sep_1($3890,$3889)) -> v_sep_make_array_1030_sep_276_sep_2_sep_288_sep_0($3890,$3889,$3891).
($3892=0) & (v_sep_array_max_1033_sep_271_sep_2_sep_274_sep_0($3890,$3892,$3889)) -> v_sep_make_array_1030_sep_276_sep_1($3890,$3889).
(($3877-$3878<0) & (-$3877+$3887=0)) & (v_sep_array_max_1033_sep_271_sep_1($3878,$3877)) -> v_sep_array_max_1033_sep_271_sep_2_sep_274_sep_0($3878,$3877,$3887).
$3877=0 -> v_sep_array_max_1033_sep_271_sep_1($3878,$3877).


v_sep_array_max_1033_sep_271_sep_1: X
v_sep_array_max_1033_sep_271_sep_2_sep_274_sep_0: X
v_sep_array_max_1033_sep_271_sep_2_sep_274_sep_1_sep_290_sep_0: X
v_sep_array_max_1033_sep_271_sep_3_sep_306_sep_0: X
v_sep_array_max_1033_sep_294_sep_1: X
v_sep_array_max_1033_sep_294_sep_3_sep_297_sep_0: X
v_sep_check_1148_sep_310_sep_2: X
v_sep_check_1148_sep_310_sep_3_sep_313_sep_0: X
v_sep_check_1148_sep_310_sep_3_sep_313_sep_1_sep_329_sep_0: X
v_sep_fail_1487_sep_334_sep_0: X
v_sep_make_array_1030_sep_276_sep_1: X
v_sep_make_array_1030_sep_276_sep_2_sep_288_sep_0: X
v_sep_make_array_1030_sep_315_sep_1: X
v_sep_make_array_1030_sep_315_sep_2_sep_327_sep_0: X
.......................
v_sep_array_max_1033_sep_271_sep_1: X
v_sep_array_max_1033_sep_271_sep_2_sep_274_sep_0: X
v_sep_array_max_1033_sep_271_sep_2_sep_274_sep_1_sep_290_sep_0: X
v_sep_array_max_1033_sep_271_sep_3_sep_306_sep_0: X
v_sep_array_max_1033_sep_294_sep_1: X
v_sep_array_max_1033_sep_294_sep_3_sep_297_sep_0: X
v_sep_check_1148_sep_310_sep_2: X
v_sep_check_1148_sep_310_sep_3_sep_313_sep_0: X
v_sep_check_1148_sep_310_sep_3_sep_313_sep_1_sep_329_sep_0: X
v_sep_fail_1487_sep_334_sep_0: X
v_sep_make_array_1030_sep_276_sep_1: X
v_sep_make_array_1030_sep_276_sep_2_sep_288_sep_0: X
v_sep_make_array_1030_sep_315_sep_1: X
v_sep_make_array_1030_sep_315_sep_2_sep_327_sep_0: X
....
v_sep_array_max_1033_sep_271_sep_1: X
v_sep_array_max_1033_sep_271_sep_2_sep_274_sep_0: X
v_sep_array_max_1033_sep_271_sep_2_sep_274_sep_1_sep_290_sep_0: X
v_sep_array_max_1033_sep_271_sep_3_sep_306_sep_0: X
v_sep_array_max_1033_sep_294_sep_1: X
v_sep_array_max_1033_sep_294_sep_3_sep_297_sep_0: X
v_sep_check_1148_sep_310_sep_2: X
v_sep_check_1148_sep_310_sep_3_sep_313_sep_0: X
v_sep_check_1148_sep_310_sep_3_sep_313_sep_1_sep_329_sep_0: X
v_sep_fail_1487_sep_334_sep_0: X
v_sep_make_array_1030_sep_276_sep_1: X
v_sep_make_array_1030_sep_276_sep_2_sep_288_sep_0: X
v_sep_make_array_1030_sep_315_sep_1: X
v_sep_make_array_1030_sep_315_sep_2_sep_327_sep_0: X
........
v_sep_array_max_1033_sep_271_sep_1: X
v_sep_array_max_1033_sep_271_sep_2_sep_274_sep_0: X
v_sep_array_max_1033_sep_271_sep_2_sep_274_sep_1_sep_290_sep_0: X
v_sep_array_max_1033_sep_271_sep_3_sep_306_sep_0: X
v_sep_array_max_1033_sep_294_sep_1: X
v_sep_array_max_1033_sep_294_sep_3_sep_297_sep_0: X
v_sep_check_1148_sep_310_sep_2: X
v_sep_check_1148_sep_310_sep_3_sep_313_sep_0: X
v_sep_check_1148_sep_310_sep_3_sep_313_sep_1_sep_329_sep_0: X
v_sep_fail_1487_sep_334_sep_0: X
v_sep_make_array_1030_sep_276_sep_1: X
v_sep_make_array_1030_sep_276_sep_2_sep_288_sep_0: X
v_sep_make_array_1030_sep_315_sep_1: X
v_sep_make_array_1030_sep_315_sep_2_sep_327_sep_0: X
............
v_sep_array_max_1033_sep_271_sep_1: X
v_sep_array_max_1033_sep_271_sep_2_sep_274_sep_0: X
v_sep_array_max_1033_sep_271_sep_2_sep_274_sep_1_sep_290_sep_0: X
v_sep_array_max_1033_sep_271_sep_3_sep_306_sep_0: X
v_sep_array_max_1033_sep_294_sep_1: X
v_sep_array_max_1033_sep_294_sep_3_sep_297_sep_0: X
v_sep_check_1148_sep_310_sep_2: X
v_sep_check_1148_sep_310_sep_3_sep_313_sep_0: X
v_sep_check_1148_sep_310_sep_3_sep_313_sep_1_sep_329_sep_0: X
v_sep_fail_1487_sep_334_sep_0: X
v_sep_make_array_1030_sep_276_sep_1: X
v_sep_make_array_1030_sep_276_sep_2_sep_288_sep_0: X
v_sep_make_array_1030_sep_315_sep_1: X
v_sep_make_array_1030_sep_315_sep_2_sep_327_sep_0: X
.................
v_sep_array_max_1033_sep_271_sep_1: X
v_sep_array_max_1033_sep_271_sep_2_sep_274_sep_0: X
v_sep_array_max_1033_sep_271_sep_2_sep_274_sep_1_sep_290_sep_0: X
v_sep_array_max_1033_sep_271_sep_3_sep_306_sep_0: X
v_sep_array_max_1033_sep_294_sep_1: X
v_sep_array_max_1033_sep_294_sep_3_sep_297_sep_0: X
v_sep_check_1148_sep_310_sep_2: X
v_sep_check_1148_sep_310_sep_3_sep_313_sep_0: X
v_sep_check_1148_sep_310_sep_3_sep_313_sep_1_sep_329_sep_0: X
v_sep_fail_1487_sep_334_sep_0: X
v_sep_make_array_1030_sep_276_sep_1: X
v_sep_make_array_1030_sep_276_sep_2_sep_288_sep_0: X
v_sep_make_array_1030_sep_315_sep_1: X
v_sep_make_array_1030_sep_315_sep_2_sep_327_sep_0: X
.....................Split conj [45] 5.648141
(Reconstrcut: 13 ***)
v_sep_array_max_1033_sep_271_sep_1: X
v_sep_array_max_1033_sep_271_sep_2_sep_274_sep_0: X
v_sep_array_max_1033_sep_271_sep_2_sep_274_sep_1_sep_290_sep_0: X
v_sep_array_max_1033_sep_271_sep_3_sep_306_sep_0: X
v_sep_array_max_1033_sep_294_sep_1: X
v_sep_array_max_1033_sep_294_sep_3_sep_297_sep_0: X
v_sep_check_1148_sep_310_sep_2: (X) & (X) & (X)
v_sep_check_1148_sep_310_sep_3_sep_313_sep_0: X
v_sep_check_1148_sep_310_sep_3_sep_313_sep_1_sep_329_sep_0: X
v_sep_fail_1487_sep_334_sep_0: X
v_sep_make_array_1030_sep_276_sep_1: X
v_sep_make_array_1030_sep_276_sep_2_sep_288_sep_0: X
v_sep_make_array_1030_sep_315_sep_1: X
v_sep_make_array_1030_sep_315_sep_2_sep_327_sep_0: X
..............
v_sep_array_max_1033_sep_271_sep_1: X
v_sep_array_max_1033_sep_271_sep_2_sep_274_sep_0: X
v_sep_array_max_1033_sep_271_sep_2_sep_274_sep_1_sep_290_sep_0: X
v_sep_array_max_1033_sep_271_sep_3_sep_306_sep_0: X
v_sep_array_max_1033_sep_294_sep_1: X
v_sep_array_max_1033_sep_294_sep_3_sep_297_sep_0: X
v_sep_check_1148_sep_310_sep_2: (X) & (X) & (X)
v_sep_check_1148_sep_310_sep_3_sep_313_sep_0: X
v_sep_check_1148_sep_310_sep_3_sep_313_sep_1_sep_329_sep_0: X
v_sep_fail_1487_sep_334_sep_0: X
v_sep_make_array_1030_sep_276_sep_1: X
v_sep_make_array_1030_sep_276_sep_2_sep_288_sep_0: X
v_sep_make_array_1030_sep_315_sep_1: X
v_sep_make_array_1030_sep_315_sep_2_sep_327_sep_0: X
....
v_sep_array_max_1033_sep_271_sep_1: X
v_sep_array_max_1033_sep_271_sep_2_sep_274_sep_0: X
v_sep_array_max_1033_sep_271_sep_2_sep_274_sep_1_sep_290_sep_0: X
v_sep_array_max_1033_sep_271_sep_3_sep_306_sep_0: X
v_sep_array_max_1033_sep_294_sep_1: X
v_sep_array_max_1033_sep_294_sep_3_sep_297_sep_0: X
v_sep_check_1148_sep_310_sep_2: (X) & (X) & (X)
v_sep_check_1148_sep_310_sep_3_sep_313_sep_0: X
v_sep_check_1148_sep_310_sep_3_sep_313_sep_1_sep_329_sep_0: X
v_sep_fail_1487_sep_334_sep_0: X
v_sep_make_array_1030_sep_276_sep_1: X
v_sep_make_array_1030_sep_276_sep_2_sep_288_sep_0: X
v_sep_make_array_1030_sep_315_sep_1: X
v_sep_make_array_1030_sep_315_sep_2_sep_327_sep_0: X
........
v_sep_array_max_1033_sep_271_sep_1: X
v_sep_array_max_1033_sep_271_sep_2_sep_274_sep_0: X
v_sep_array_max_1033_sep_271_sep_2_sep_274_sep_1_sep_290_sep_0: X
v_sep_array_max_1033_sep_271_sep_3_sep_306_sep_0: X
v_sep_array_max_1033_sep_294_sep_1: X
v_sep_array_max_1033_sep_294_sep_3_sep_297_sep_0: X
v_sep_check_1148_sep_310_sep_2: (X) & (X) & (X)
v_sep_check_1148_sep_310_sep_3_sep_313_sep_0: X
v_sep_check_1148_sep_310_sep_3_sep_313_sep_1_sep_329_sep_0: X
v_sep_fail_1487_sep_334_sep_0: X
v_sep_make_array_1030_sep_276_sep_1: X
v_sep_make_array_1030_sep_276_sep_2_sep_288_sep_0: X
v_sep_make_array_1030_sep_315_sep_1: X
v_sep_make_array_1030_sep_315_sep_2_sep_327_sep_0: X
.............
v_sep_array_max_1033_sep_271_sep_1: X
v_sep_array_max_1033_sep_271_sep_2_sep_274_sep_0: X
v_sep_array_max_1033_sep_271_sep_2_sep_274_sep_1_sep_290_sep_0: X
v_sep_array_max_1033_sep_271_sep_3_sep_306_sep_0: X
v_sep_array_max_1033_sep_294_sep_1: X
v_sep_array_max_1033_sep_294_sep_3_sep_297_sep_0: X
v_sep_check_1148_sep_310_sep_2: (X) & (X) & (X)
v_sep_check_1148_sep_310_sep_3_sep_313_sep_0: X
v_sep_check_1148_sep_310_sep_3_sep_313_sep_1_sep_329_sep_0: X
v_sep_fail_1487_sep_334_sep_0: X
v_sep_make_array_1030_sep_276_sep_1: X
v_sep_make_array_1030_sep_276_sep_2_sep_288_sep_0: X
v_sep_make_array_1030_sep_315_sep_1: X
v_sep_make_array_1030_sep_315_sep_2_sep_327_sep_0: X
..................
v_sep_array_max_1033_sep_271_sep_1: X
v_sep_array_max_1033_sep_271_sep_2_sep_274_sep_0: X
v_sep_array_max_1033_sep_271_sep_2_sep_274_sep_1_sep_290_sep_0: X
v_sep_array_max_1033_sep_271_sep_3_sep_306_sep_0: X
v_sep_array_max_1033_sep_294_sep_1: X
v_sep_array_max_1033_sep_294_sep_3_sep_297_sep_0: X
v_sep_check_1148_sep_310_sep_2: (X) & (X) & (X)
v_sep_check_1148_sep_310_sep_3_sep_313_sep_0: X
v_sep_check_1148_sep_310_sep_3_sep_313_sep_1_sep_329_sep_0: X
v_sep_fail_1487_sep_334_sep_0: X
v_sep_make_array_1030_sep_276_sep_1: X
v_sep_make_array_1030_sep_276_sep_2_sep_288_sep_0: X
v_sep_make_array_1030_sep_315_sep_1: X
v_sep_make_array_1030_sep_315_sep_2_sep_327_sep_0: X
......................
v_sep_array_max_1033_sep_271_sep_1: X
v_sep_array_max_1033_sep_271_sep_2_sep_274_sep_0: X
v_sep_array_max_1033_sep_271_sep_2_sep_274_sep_1_sep_290_sep_0: X
v_sep_array_max_1033_sep_271_sep_3_sep_306_sep_0: X
v_sep_array_max_1033_sep_294_sep_1: X
v_sep_array_max_1033_sep_294_sep_3_sep_297_sep_0: X
v_sep_check_1148_sep_310_sep_2: (X) & (X) & (X)
v_sep_check_1148_sep_310_sep_3_sep_313_sep_0: X
v_sep_check_1148_sep_310_sep_3_sep_313_sep_1_sep_329_sep_0: X
v_sep_fail_1487_sep_334_sep_0: X
v_sep_make_array_1030_sep_276_sep_1: X
v_sep_make_array_1030_sep_276_sep_2_sep_288_sep_0: X
v_sep_make_array_1030_sep_315_sep_1: X
v_sep_make_array_1030_sep_315_sep_2_sep_327_sep_0: X
........................Split conj [49] 5.778121
(Reconstrcut: 19 *****)
v_sep_array_max_1033_sep_271_sep_1: X
v_sep_array_max_1033_sep_271_sep_2_sep_274_sep_0: X
v_sep_array_max_1033_sep_271_sep_2_sep_274_sep_1_sep_290_sep_0: X
v_sep_array_max_1033_sep_271_sep_3_sep_306_sep_0: (X) & (X) & (X) & (X) & (X)
v_sep_array_max_1033_sep_294_sep_1: X
v_sep_array_max_1033_sep_294_sep_3_sep_297_sep_0: X
v_sep_check_1148_sep_310_sep_2: (X) & (X) & (X)
v_sep_check_1148_sep_310_sep_3_sep_313_sep_0: X
v_sep_check_1148_sep_310_sep_3_sep_313_sep_1_sep_329_sep_0: X
v_sep_fail_1487_sep_334_sep_0: X
v_sep_make_array_1030_sep_276_sep_1: X
v_sep_make_array_1030_sep_276_sep_2_sep_288_sep_0: X
v_sep_make_array_1030_sep_315_sep_1: X
v_sep_make_array_1030_sep_315_sep_2_sep_327_sep_0: X
.............................
v_sep_array_max_1033_sep_271_sep_1: X
v_sep_array_max_1033_sep_271_sep_2_sep_274_sep_0: X
v_sep_array_max_1033_sep_271_sep_2_sep_274_sep_1_sep_290_sep_0: X
v_sep_array_max_1033_sep_271_sep_3_sep_306_sep_0: (X) & (X) & (X) & (X) & (X)
v_sep_array_max_1033_sep_294_sep_1: X
v_sep_array_max_1033_sep_294_sep_3_sep_297_sep_0: X
v_sep_check_1148_sep_310_sep_2: (X) & (X) & (X)
v_sep_check_1148_sep_310_sep_3_sep_313_sep_0: X
v_sep_check_1148_sep_310_sep_3_sep_313_sep_1_sep_329_sep_0: X
v_sep_fail_1487_sep_334_sep_0: X
v_sep_make_array_1030_sep_276_sep_1: X
v_sep_make_array_1030_sep_276_sep_2_sep_288_sep_0: X
v_sep_make_array_1030_sep_315_sep_1: X
v_sep_make_array_1030_sep_315_sep_2_sep_327_sep_0: X
....
v_sep_array_max_1033_sep_271_sep_1: X
v_sep_array_max_1033_sep_271_sep_2_sep_274_sep_0: X
v_sep_array_max_1033_sep_271_sep_2_sep_274_sep_1_sep_290_sep_0: X
v_sep_array_max_1033_sep_271_sep_3_sep_306_sep_0: (X) & (X) & (X) & (X) & (X)
v_sep_array_max_1033_sep_294_sep_1: X
v_sep_array_max_1033_sep_294_sep_3_sep_297_sep_0: X
v_sep_check_1148_sep_310_sep_2: (X) & (X) & (X)
v_sep_check_1148_sep_310_sep_3_sep_313_sep_0: X
v_sep_check_1148_sep_310_sep_3_sep_313_sep_1_sep_329_sep_0: X
v_sep_fail_1487_sep_334_sep_0: X
v_sep_make_array_1030_sep_276_sep_1: X
v_sep_make_array_1030_sep_276_sep_2_sep_288_sep_0: X
v_sep_make_array_1030_sep_315_sep_1: X
v_sep_make_array_1030_sep_315_sep_2_sep_327_sep_0: X
........
v_sep_array_max_1033_sep_271_sep_1: X
v_sep_array_max_1033_sep_271_sep_2_sep_274_sep_0: X
v_sep_array_max_1033_sep_271_sep_2_sep_274_sep_1_sep_290_sep_0: X
v_sep_array_max_1033_sep_271_sep_3_sep_306_sep_0: (X) & (X) & (X) & (X) & (X)
v_sep_array_max_1033_sep_294_sep_1: X
v_sep_array_max_1033_sep_294_sep_3_sep_297_sep_0: X
v_sep_check_1148_sep_310_sep_2: (X) & (X) & (X)
v_sep_check_1148_sep_310_sep_3_sep_313_sep_0: X
v_sep_check_1148_sep_310_sep_3_sep_313_sep_1_sep_329_sep_0: X
v_sep_fail_1487_sep_334_sep_0: X
v_sep_make_array_1030_sep_276_sep_1: X
v_sep_make_array_1030_sep_276_sep_2_sep_288_sep_0: X
v_sep_make_array_1030_sep_315_sep_1: X
v_sep_make_array_1030_sep_315_sep_2_sep_327_sep_0: X
................
v_sep_array_max_1033_sep_271_sep_1: X
v_sep_array_max_1033_sep_271_sep_2_sep_274_sep_0: X
v_sep_array_max_1033_sep_271_sep_2_sep_274_sep_1_sep_290_sep_0: X
v_sep_array_max_1033_sep_271_sep_3_sep_306_sep_0: (X) & (X) & (X) & (X) & (X)
v_sep_array_max_1033_sep_294_sep_1: X
v_sep_array_max_1033_sep_294_sep_3_sep_297_sep_0: X
v_sep_check_1148_sep_310_sep_2: (X) & (X) & (X)
v_sep_check_1148_sep_310_sep_3_sep_313_sep_0: X
v_sep_check_1148_sep_310_sep_3_sep_313_sep_1_sep_329_sep_0: X
v_sep_fail_1487_sep_334_sep_0: X
v_sep_make_array_1030_sep_276_sep_1: X
v_sep_make_array_1030_sep_276_sep_2_sep_288_sep_0: X
v_sep_make_array_1030_sep_315_sep_1: X
v_sep_make_array_1030_sep_315_sep_2_sep_327_sep_0: X
........................
v_sep_array_max_1033_sep_271_sep_1: X
v_sep_array_max_1033_sep_271_sep_2_sep_274_sep_0: X
v_sep_array_max_1033_sep_271_sep_2_sep_274_sep_1_sep_290_sep_0: X
v_sep_array_max_1033_sep_271_sep_3_sep_306_sep_0: (X) & (X) & (X) & (X) & (X)
v_sep_array_max_1033_sep_294_sep_1: X
v_sep_array_max_1033_sep_294_sep_3_sep_297_sep_0: X
v_sep_check_1148_sep_310_sep_2: (X) & (X) & (X)
v_sep_check_1148_sep_310_sep_3_sep_313_sep_0: X
v_sep_check_1148_sep_310_sep_3_sep_313_sep_1_sep_329_sep_0: X
v_sep_fail_1487_sep_334_sep_0: X
v_sep_make_array_1030_sep_276_sep_1: X
v_sep_make_array_1030_sep_276_sep_2_sep_288_sep_0: X
v_sep_make_array_1030_sep_315_sep_1: X
v_sep_make_array_1030_sep_315_sep_2_sep_327_sep_0: X
...............................
v_sep_array_max_1033_sep_271_sep_1: X
v_sep_array_max_1033_sep_271_sep_2_sep_274_sep_0: X
v_sep_array_max_1033_sep_271_sep_2_sep_274_sep_1_sep_290_sep_0: X
v_sep_array_max_1033_sep_271_sep_3_sep_306_sep_0: (X) & (X) & (X) & (X) & (X)
v_sep_array_max_1033_sep_294_sep_1: X
v_sep_array_max_1033_sep_294_sep_3_sep_297_sep_0: X
v_sep_check_1148_sep_310_sep_2: (X) & (X) & (X)
v_sep_check_1148_sep_310_sep_3_sep_313_sep_0: X
v_sep_check_1148_sep_310_sep_3_sep_313_sep_1_sep_329_sep_0: X
v_sep_fail_1487_sep_334_sep_0: X
v_sep_make_array_1030_sep_276_sep_1: X
v_sep_make_array_1030_sep_276_sep_2_sep_288_sep_0: X
v_sep_make_array_1030_sep_315_sep_1: X
v_sep_make_array_1030_sep_315_sep_2_sep_327_sep_0: X
.................................
v_sep_array_max_1033_sep_271_sep_1: X
v_sep_array_max_1033_sep_271_sep_2_sep_274_sep_0: X
v_sep_array_max_1033_sep_271_sep_2_sep_274_sep_1_sep_290_sep_0: X
v_sep_array_max_1033_sep_271_sep_3_sep_306_sep_0: (X) & (X) & (X) & (X) & (X)
v_sep_array_max_1033_sep_294_sep_1: X
v_sep_array_max_1033_sep_294_sep_3_sep_297_sep_0: X
v_sep_check_1148_sep_310_sep_2: (X) & (X) & (X)
v_sep_check_1148_sep_310_sep_3_sep_313_sep_0: X
v_sep_check_1148_sep_310_sep_3_sep_313_sep_1_sep_329_sep_0: X
v_sep_fail_1487_sep_334_sep_0: X
v_sep_make_array_1030_sep_276_sep_1: X
v_sep_make_array_1030_sep_276_sep_2_sep_288_sep_0: X
v_sep_make_array_1030_sep_315_sep_1: X
v_sep_make_array_1030_sep_315_sep_2_sep_327_sep_0: X
.....................................Split conj [57] 5.968091
(Reconstrcut: 29 *****)
v_sep_array_max_1033_sep_271_sep_1: X
v_sep_array_max_1033_sep_271_sep_2_sep_274_sep_0: X
v_sep_array_max_1033_sep_271_sep_2_sep_274_sep_1_sep_290_sep_0: X
v_sep_array_max_1033_sep_271_sep_3_sep_306_sep_0: (X) & (X) & (X) & (X) & (X)
v_sep_array_max_1033_sep_294_sep_1: X
v_sep_array_max_1033_sep_294_sep_3_sep_297_sep_0: (X) & (X) & (X) & (X) & (X)
v_sep_check_1148_sep_310_sep_2: (X) & (X) & (X)
v_sep_check_1148_sep_310_sep_3_sep_313_sep_0: X
v_sep_check_1148_sep_310_sep_3_sep_313_sep_1_sep_329_sep_0: X
v_sep_fail_1487_sep_334_sep_0: X
v_sep_make_array_1030_sep_276_sep_1: X
v_sep_make_array_1030_sep_276_sep_2_sep_288_sep_0: X
v_sep_make_array_1030_sep_315_sep_1: X
v_sep_make_array_1030_sep_315_sep_2_sep_327_sep_0: X
..................................
v_sep_array_max_1033_sep_271_sep_1: X
v_sep_array_max_1033_sep_271_sep_2_sep_274_sep_0: X
v_sep_array_max_1033_sep_271_sep_2_sep_274_sep_1_sep_290_sep_0: X
v_sep_array_max_1033_sep_271_sep_3_sep_306_sep_0: (X) & (X) & (X) & (X) & (X)
v_sep_array_max_1033_sep_294_sep_1: X
v_sep_array_max_1033_sep_294_sep_3_sep_297_sep_0: (X) & (X) & (X) & (X) & (X)
v_sep_check_1148_sep_310_sep_2: (X) & (X) & (X)
v_sep_check_1148_sep_310_sep_3_sep_313_sep_0: X
v_sep_check_1148_sep_310_sep_3_sep_313_sep_1_sep_329_sep_0: X
v_sep_fail_1487_sep_334_sep_0: X
v_sep_make_array_1030_sep_276_sep_1: X
v_sep_make_array_1030_sep_276_sep_2_sep_288_sep_0: X
v_sep_make_array_1030_sep_315_sep_1: X
v_sep_make_array_1030_sep_315_sep_2_sep_327_sep_0: X
....
v_sep_array_max_1033_sep_271_sep_1: X
v_sep_array_max_1033_sep_271_sep_2_sep_274_sep_0: X
v_sep_array_max_1033_sep_271_sep_2_sep_274_sep_1_sep_290_sep_0: X
v_sep_array_max_1033_sep_271_sep_3_sep_306_sep_0: (X) & (X) & (X) & (X) & (X)
v_sep_array_max_1033_sep_294_sep_1: X
v_sep_array_max_1033_sep_294_sep_3_sep_297_sep_0: (X) & (X) & (X) & (X) & (X)
v_sep_check_1148_sep_310_sep_2: (X) & (X) & (X)
v_sep_check_1148_sep_310_sep_3_sep_313_sep_0: X
v_sep_check_1148_sep_310_sep_3_sep_313_sep_1_sep_329_sep_0: X
v_sep_fail_1487_sep_334_sep_0: X
v_sep_make_array_1030_sep_276_sep_1: X
v_sep_make_array_1030_sep_276_sep_2_sep_288_sep_0: X
v_sep_make_array_1030_sep_315_sep_1: X
v_sep_make_array_1030_sep_315_sep_2_sep_327_sep_0: X
........
v_sep_array_max_1033_sep_271_sep_1: X
v_sep_array_max_1033_sep_271_sep_2_sep_274_sep_0: X
v_sep_array_max_1033_sep_271_sep_2_sep_274_sep_1_sep_290_sep_0: X
v_sep_array_max_1033_sep_271_sep_3_sep_306_sep_0: (X) & (X) & (X) & (X) & (X)
v_sep_array_max_1033_sep_294_sep_1: X
v_sep_array_max_1033_sep_294_sep_3_sep_297_sep_0: (X) & (X) & (X) & (X) & (X)
v_sep_check_1148_sep_310_sep_2: (X) & (X) & (X)
v_sep_check_1148_sep_310_sep_3_sep_313_sep_0: X
v_sep_check_1148_sep_310_sep_3_sep_313_sep_1_sep_329_sep_0: X
v_sep_fail_1487_sep_334_sep_0: X
v_sep_make_array_1030_sep_276_sep_1: X
v_sep_make_array_1030_sep_276_sep_2_sep_288_sep_0: X
v_sep_make_array_1030_sep_315_sep_1: X
v_sep_make_array_1030_sep_315_sep_2_sep_327_sep_0: X
................
v_sep_array_max_1033_sep_271_sep_1: X
v_sep_array_max_1033_sep_271_sep_2_sep_274_sep_0: X
v_sep_array_max_1033_sep_271_sep_2_sep_274_sep_1_sep_290_sep_0: X
v_sep_array_max_1033_sep_271_sep_3_sep_306_sep_0: (X) & (X) & (X) & (X) & (X)
v_sep_array_max_1033_sep_294_sep_1: X
v_sep_array_max_1033_sep_294_sep_3_sep_297_sep_0: (X) & (X) & (X) & (X) & (X)
v_sep_check_1148_sep_310_sep_2: (X) & (X) & (X)
v_sep_check_1148_sep_310_sep_3_sep_313_sep_0: X
v_sep_check_1148_sep_310_sep_3_sep_313_sep_1_sep_329_sep_0: X
v_sep_fail_1487_sep_334_sep_0: X
v_sep_make_array_1030_sep_276_sep_1: X
v_sep_make_array_1030_sep_276_sep_2_sep_288_sep_0: X
v_sep_make_array_1030_sep_315_sep_1: X
v_sep_make_array_1030_sep_315_sep_2_sep_327_sep_0: X
.........................
v_sep_array_max_1033_sep_271_sep_1: X
v_sep_array_max_1033_sep_271_sep_2_sep_274_sep_0: X
v_sep_array_max_1033_sep_271_sep_2_sep_274_sep_1_sep_290_sep_0: X
v_sep_array_max_1033_sep_271_sep_3_sep_306_sep_0: (X) & (X) & (X) & (X) & (X)
v_sep_array_max_1033_sep_294_sep_1: X
v_sep_array_max_1033_sep_294_sep_3_sep_297_sep_0: (X) & (X) & (X) & (X) & (X)
v_sep_check_1148_sep_310_sep_2: (X) & (X) & (X)
v_sep_check_1148_sep_310_sep_3_sep_313_sep_0: X
v_sep_check_1148_sep_310_sep_3_sep_313_sep_1_sep_329_sep_0: X
v_sep_fail_1487_sep_334_sep_0: X
v_sep_make_array_1030_sep_276_sep_1: X
v_sep_make_array_1030_sep_276_sep_2_sep_288_sep_0: X
v_sep_make_array_1030_sep_315_sep_1: X
v_sep_make_array_1030_sep_315_sep_2_sep_327_sep_0: X
.................................
v_sep_array_max_1033_sep_271_sep_1: X
v_sep_array_max_1033_sep_271_sep_2_sep_274_sep_0: X
v_sep_array_max_1033_sep_271_sep_2_sep_274_sep_1_sep_290_sep_0: X
v_sep_array_max_1033_sep_271_sep_3_sep_306_sep_0: (X) & (X) & (X) & (X) & (X)
v_sep_array_max_1033_sep_294_sep_1: X
v_sep_array_max_1033_sep_294_sep_3_sep_297_sep_0: (X) & (X) & (X) & (X) & (X)
v_sep_check_1148_sep_310_sep_2: (X) & (X) & (X)
v_sep_check_1148_sep_310_sep_3_sep_313_sep_0: X
v_sep_check_1148_sep_310_sep_3_sep_313_sep_1_sep_329_sep_0: X
v_sep_fail_1487_sep_334_sep_0: X
v_sep_make_array_1030_sep_276_sep_1: X
v_sep_make_array_1030_sep_276_sep_2_sep_288_sep_0: X
v_sep_make_array_1030_sep_315_sep_1: X
v_sep_make_array_1030_sep_315_sep_2_sep_327_sep_0: X
....................................
v_sep_array_max_1033_sep_271_sep_1: X
v_sep_array_max_1033_sep_271_sep_2_sep_274_sep_0: X
v_sep_array_max_1033_sep_271_sep_2_sep_274_sep_1_sep_290_sep_0: X
v_sep_array_max_1033_sep_271_sep_3_sep_306_sep_0: (X) & (X) & (X) & (X) & (X)
v_sep_array_max_1033_sep_294_sep_1: X
v_sep_array_max_1033_sep_294_sep_3_sep_297_sep_0: (X) & (X) & (X) & (X) & (X)
v_sep_check_1148_sep_310_sep_2: (X) & (X) & (X)
v_sep_check_1148_sep_310_sep_3_sep_313_sep_0: X
v_sep_check_1148_sep_310_sep_3_sep_313_sep_1_sep_329_sep_0: X
v_sep_fail_1487_sep_334_sep_0: X
v_sep_make_array_1030_sep_276_sep_1: X
v_sep_make_array_1030_sep_276_sep_2_sep_288_sep_0: X
v_sep_make_array_1030_sep_315_sep_1: X
v_sep_make_array_1030_sep_315_sep_2_sep_327_sep_0: X
........................................
v_sep_array_max_1033_sep_271_sep_1: X
v_sep_array_max_1033_sep_271_sep_2_sep_274_sep_0: X
v_sep_array_max_1033_sep_271_sep_2_sep_274_sep_1_sep_290_sep_0: X
v_sep_array_max_1033_sep_271_sep_3_sep_306_sep_0: (X) & (X) & (X) & (X) & (X)
v_sep_array_max_1033_sep_294_sep_1: X
v_sep_array_max_1033_sep_294_sep_3_sep_297_sep_0: (X) & (X) & (X) & (X) & (X)
v_sep_check_1148_sep_310_sep_2: (X) & (X) & (X)
v_sep_check_1148_sep_310_sep_3_sep_313_sep_0: X
v_sep_check_1148_sep_310_sep_3_sep_313_sep_1_sep_329_sep_0: X
v_sep_fail_1487_sep_334_sep_0: X
v_sep_make_array_1030_sep_276_sep_1: X
v_sep_make_array_1030_sep_276_sep_2_sep_288_sep_0: X
v_sep_make_array_1030_sep_315_sep_1: X
v_sep_make_array_1030_sep_315_sep_2_sep_327_sep_0: X
.........................................(0=0) & (v_sep_fail_1487_sep_334_sep_0($3858)) -> 1=0.
(($3858-1=0) & ($3859-$3860>0) & ($3861-$3862<0)) & (v_sep_check_1148_sep_310_sep_3_sep_313_sep_1_sep_329_sep_0($3862,$3861,$3860,$3861,$3859)) & (v_sep_check_1148_sep_310_sep_2($3862,$3861,$3860)) -> v_sep_fail_1487_sep_334_sep_0($3858).
(($3863=0) & ($3864=0)) & (v_sep_check_1148_sep_310_sep_2($3865,$3863,$3866)) & (v_sep_make_array_1030_sep_315_sep_2_sep_327_sep_0($3865,$3867,$3868)) & (v_sep_array_max_1033_sep_271_sep_3_sep_306_sep_0($3865,$3864,$3866)) -> v_sep_check_1148_sep_310_sep_3_sep_313_sep_1_sep_329_sep_0($3865,$3863,$3866,$3867,$3868).
((-$3869<=0) & ($3869-$3870<0) & (-$3869+$3871=0)) & (v_sep_make_array_1030_sep_315_sep_1($3870,$3869)) -> v_sep_make_array_1030_sep_315_sep_2_sep_327_sep_0($3870,$3869,$3871).
(($3872=0) & ($3873=0)) & (v_sep_check_1148_sep_310_sep_3_sep_313_sep_0($3870,$3873,$3866,$3869)) & (v_sep_array_max_1033_sep_271_sep_3_sep_306_sep_0($3870,$3872,$3866)) -> v_sep_make_array_1030_sep_315_sep_1($3870,$3869).
(($3863-$3865<0) & (-$3863+$3867=0)) & (v_sep_check_1148_sep_310_sep_2($3865,$3863,$3866)) -> v_sep_check_1148_sep_310_sep_3_sep_313_sep_0($3865,$3863,$3866,$3867).
(($3863=0) & ($3874=0)) & (v_sep_array_max_1033_sep_271_sep_3_sep_306_sep_0($3865,$3874,$3866)) -> v_sep_check_1148_sep_310_sep_2($3865,$3863,$3866).
(($3875-$3876<=0) & ($3877-$3878<0) & (-$3877+$3879-1=0)) & (v_sep_array_max_1033_sep_294_sep_3_sep_297_sep_0($3878,$3879,$3876)) & (v_sep_array_max_1033_sep_271_sep_2_sep_274_sep_1_sep_290_sep_0($3878,$3877,$3877,$3875)) & (v_sep_array_max_1033_sep_271_sep_1($3878,$3877)) -> v_sep_array_max_1033_sep_271_sep_3_sep_306_sep_0($3878,$3877,$3876).
(($3880=0) & ($3881-$3882>=0)) & (v_sep_array_max_1033_sep_294_sep_1($3882,$3881)) -> v_sep_array_max_1033_sep_294_sep_3_sep_297_sep_0($3882,$3881,$3880).
(($3881-$3882-1<0) & (-$3881+$3883+1=0) & (-$3881+$3884+1=0) & (-$3881+$3885+1=0)) & (v_sep_array_max_1033_sep_271_sep_2_sep_274_sep_1_sep_290_sep_0($3882,$3884,$3885,$3886)) & (v_sep_array_max_1033_sep_271_sep_1($3882,$3883)) -> v_sep_array_max_1033_sep_294_sep_1($3882,$3881).
($3877=0) & (v_sep_array_max_1033_sep_271_sep_1($3878,$3877)) & (v_sep_make_array_1030_sep_276_sep_2_sep_288_sep_0($3878,$3887,$3888)) -> v_sep_array_max_1033_sep_271_sep_2_sep_274_sep_1_sep_290_sep_0($3878,$3877,$3887,$3888).
((-$3889<=0) & ($3889-$3890<0) & (-$3889+$3891=0)) & (v_sep_make_array_1030_sep_276_sep_1($3890,$3889)) -> v_sep_make_array_1030_sep_276_sep_2_sep_288_sep_0($3890,$3889,$3891).
($3892=0) & (v_sep_array_max_1033_sep_271_sep_2_sep_274_sep_0($3890,$3892,$3889)) -> v_sep_make_array_1030_sep_276_sep_1($3890,$3889).
(($3877-$3878<0) & (-$3877+$3887=0)) & (v_sep_array_max_1033_sep_271_sep_1($3878,$3877)) -> v_sep_array_max_1033_sep_271_sep_2_sep_274_sep_0($3878,$3877,$3887).
$3877=0 -> v_sep_array_max_1033_sep_271_sep_1($3878,$3877).

        solution:
          P[<array_max_1033@271:1>]($3958:int,$3960:int) = true
          P[<<array_max_1033@271:2>@274:0>]($3980:int,$3982:int,$3984:int) = true
          P[<<<array_max_1033@271:2>@274:1>@290:0>]($3949:int,$3951:int,$3953:int,$3955:int) = true
          P[<<array_max_1033@271:3>@306:0>]($3921:int,$3923:int,$3925:int) = (0 <= $3925)
          P[<array_max_1033@294:1>]($3963:int,$3965:int) = true
          P[<<array_max_1033@294:3>@297:0>]($3942:int,$3944:int,$3946:int) = (0 <= $3946)
          P[<check_1148@310:2>]($3907:int,$3909:int,$3911:int) = true
          P[<<check_1148@310:3>@313:0>]($3933:int,$3935:int,$3937:int,$3939:int) = true
          P[<<<check_1148@310:3>@313:1>@329:0>]($3896:int,$3898:int,$3900:int,$3902:int,$3904:int) =
          (($3904 + $3898) <= ($3902 + $3900))
          P[<fail_1487@334:0>]($3893:bool) = false
          P[<make_array_1030@276:1>]($3975:int,$3977:int) = true
          P[<<make_array_1030@276:2>@288:0>]($3968:int,$3970:int,$3972:int) = true
          P[<make_array_1030@315:1>]($3928:int,$3930:int) = true
          P[<<make_array_1030@315:2>@327:0>]($3914:int,$3916:int,$3918:int) = ($3918 <= $3916)
        
      end HcSolver.solve_ub(649502)[4] (0.603908 sec.)
      begin HcSolver.check_validity(650405)[4]
        input:
          P[<fail_1487@334:0>](<fail_1487@334:0>:bool)|- bot
          
          P[<check_1148@310:2>](<f_check_1482@331:2>:int,<f_check_1482@331:0>:int,<f_check_1482@331:1>:int),
          P[<<<check_1148@310:3>@313:1>@329:0>](<f_check_1482@331:2>:int,<f_check_1482@331:0>:int,<f_check_1482@331:1>:int,<f_check_1482@331:0>:int,<f_check_1482@331:5>:int),
          ((<f_check_1482@331:5> > <f_check_1482@331:1>) &&
           ((<f_check_1482@331:0> < <f_check_1482@331:2>) && <fail_1487@334:0>))
          |- P[<fail_1487@334:0>](<fail_1487@334:0>:bool)
          
          P[<<array_max_1033@271:3>@306:0>](<check_1148@310:0>:int,0:int,<check_1148@310:2>:int),
          P[<<make_array_1030@315:2>@327:0>](<check_1148@310:0>:int,<<check_1148@310:3>@313:0>:int,<<<check_1148@310:3>@313:1>@329:0>:int),
          P[<check_1148@310:2>](<check_1148@310:0>:int,<check_1148@310:1>:int,<check_1148@310:2>:int),
          (<check_1148@310:1> = 0)
          |- P[<<<check_1148@310:3>@313:1>@329:0>](<check_1148@310:0>:int,
                                                   <check_1148@310:1>:int,
                                                   <check_1148@310:2>:int,
                                                   <<check_1148@310:3>@313:0>:int,
                                                   <<<check_1148@310:3>@313:1>@329:0>:int)
          
          P[<make_array_1030@315:1>](<make_array_1030@315:0>:int,<make_array_1030@315:1>:int),
          ((0 <= <make_array_1030@315:1>) &&
           ((<make_array_1030@315:1> < <make_array_1030@315:0>) &&
            (<<make_array_1030@315:2>@327:0> = <make_array_1030@315:1>)))
          |- P[<<make_array_1030@315:2>@327:0>](<make_array_1030@315:0>:int,
                                                <make_array_1030@315:1>:int,
                                                <<make_array_1030@315:2>@327:0>:int)
          
          P[<<array_max_1033@271:3>@306:0>](<make_array_1030@315:0>:int,0:int,<check_1148@310:2>:int),
          P[<<check_1148@310:3>@313:0>](<make_array_1030@315:0>:int,0:int,<check_1148@310:2>:int,<make_array_1030@315:1>:int)|- P[<make_array_1030@315:1>](
          <make_array_1030@315:0>:int,<make_array_1030@315:1>:int)
          
          P[<check_1148@310:2>](<check_1148@310:0>:int,<check_1148@310:1>:int,<check_1148@310:2>:int),
          ((<check_1148@310:1> < <check_1148@310:0>) && (<<check_1148@310:3>@313:0> = <check_1148@310:1>))
          |- P[<<check_1148@310:3>@313:0>](<check_1148@310:0>:int,<check_1148@310:1>:int,
                                           <check_1148@310:2>:int,<<check_1148@310:3>@313:0>:int)
          
          P[<<array_max_1033@271:3>@306:0>](<check_1148@310:0>:int,0:int,<check_1148@310:2>:int),
          (<check_1148@310:1> = 0)
          |- P[<check_1148@310:2>](<check_1148@310:0>:int,<check_1148@310:1>:int,
                                   <check_1148@310:2>:int)
          
          P[<array_max_1033@271:1>](<array_max_1033@271:0>:int,<array_max_1033@271:1>:int),
          P[<<<array_max_1033@271:2>@274:1>@290:0>](<array_max_1033@271:0>:int,<array_max_1033@271:1>:int,<array_max_1033@271:1>:int,var1315:int),
          P[<<array_max_1033@294:3>@297:0>](<array_max_1033@271:0>:int,(
                                            1 + <array_max_1033@271:1>):int,<<array_max_1033@271:3>@306:0>:int),
          ((var1315 <= <<array_max_1033@271:3>@306:0>) && (<array_max_1033@271:1> < <array_max_1033@271:0>))
          |- P[<<array_max_1033@271:3>@306:0>](<array_max_1033@271:0>:int,
                                               <array_max_1033@271:1>:int,
                                               <<array_max_1033@271:3>@306:0>:int)
          
          P[<array_max_1033@294:1>](<array_max_1033@294:0>:int,<array_max_1033@294:1>:int),
          ((<<array_max_1033@294:3>@297:0> = 0) && (<array_max_1033@294:1> >= <array_max_1033@294:0>))
          |- P[<<array_max_1033@294:3>@297:0>](<array_max_1033@294:0>:int,
                                               <array_max_1033@294:1>:int,
                                               <<array_max_1033@294:3>@297:0>:int)
          
          P[<array_max_1033@271:1>](<array_max_1033@294:0>:int,(-1 + <array_max_1033@294:1>):int),
          P[<<<array_max_1033@271:2>@274:1>@290:0>](<array_max_1033@294:0>:int,(
                                                    -1 + <array_max_1033@294:1>):int,(
                                                    -1 + <array_max_1033@294:1>):int,<f_array_max_1480@292:4>:int),
          (<array_max_1033@294:1> < (1 + <array_max_1033@294:0>))
          |- P[<array_max_1033@294:1>](<array_max_1033@294:0>:int,<array_max_1033@294:1>:int)
          
          P[<<make_array_1030@276:2>@288:0>](<array_max_1033@271:0>:int,<<array_max_1033@271:2>@274:0>:int,<<<array_max_1033@271:2>@274:1>@290:0>:int),
          P[<array_max_1033@271:1>](<array_max_1033@271:0>:int,<array_max_1033@271:1>:int),
          (<array_max_1033@271:1> = 0)
          |- P[<<<array_max_1033@271:2>@274:1>@290:0>](<array_max_1033@271:0>:int,
                                                       <array_max_1033@271:1>:int,
                                                       <<array_max_1033@271:2>@274:0>:int,
                                                       <<<array_max_1033@271:2>@274:1>@290:0>:int)
          
          P[<make_array_1030@276:1>](<make_array_1030@276:0>:int,<make_array_1030@276:1>:int),
          ((0 <= <make_array_1030@276:1>) &&
           ((<make_array_1030@276:1> < <make_array_1030@276:0>) &&
            (<<make_array_1030@276:2>@288:0> = <make_array_1030@276:1>)))
          |- P[<<make_array_1030@276:2>@288:0>](<make_array_1030@276:0>:int,
                                                <make_array_1030@276:1>:int,
                                                <<make_array_1030@276:2>@288:0>:int)
          
          P[<<array_max_1033@271:2>@274:0>](<make_array_1030@276:0>:int,0:int,<make_array_1030@276:1>:int)|- P[<make_array_1030@276:1>](
          <make_array_1030@276:0>:int,<make_array_1030@276:1>:int)
          
          P[<array_max_1033@271:1>](<array_max_1033@271:0>:int,<array_max_1033@271:1>:int),
          ((<array_max_1033@271:1> < <array_max_1033@271:0>) &&
           (<<array_max_1033@271:2>@274:0> = <array_max_1033@271:1>))
          |- P[<<array_max_1033@271:2>@274:0>](<array_max_1033@271:0>:int,
                                               <array_max_1033@271:1>:int,
                                               <<array_max_1033@271:2>@274:0>:int)
          
           (<array_max_1033@271:1> = 0)
          |- P[<array_max_1033@271:1>](<array_max_1033@271:0>:int,<array_max_1033@271:1>:int)
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        
      end HcSolver.check_validity(650405)[4] (0.021997 sec.)
      solution:
        P[<array_max_1033@271:1>]($3958:int,$3960:int) = true
        P[<<array_max_1033@271:2>@274:0>]($3980:int,$3982:int,$3984:int) = true
        P[<<<array_max_1033@271:2>@274:1>@290:0>]($3949:int,$3951:int,$3953:int,$3955:int) = true
        P[<<array_max_1033@271:3>@306:0>]($3921:int,$3923:int,$3925:int) = (0 <= $3925)
        P[<array_max_1033@294:1>]($3963:int,$3965:int) = true
        P[<<array_max_1033@294:3>@297:0>]($3942:int,$3944:int,$3946:int) = (0 <= $3946)
        P[<check_1148@310:2>]($3907:int,$3909:int,$3911:int) = true
        P[<<check_1148@310:3>@313:0>]($3933:int,$3935:int,$3937:int,$3939:int) = true
        P[<<<check_1148@310:3>@313:1>@329:0>]($3896:int,$3898:int,$3900:int,$3902:int,$3904:int) =
        (($3904 + $3898) <= ($3902 + $3900))
        P[<fail_1487@334:0>]($3893:bool) = false
        P[<make_array_1030@276:1>]($3975:int,$3977:int) = true
        P[<<make_array_1030@276:2>@288:0>]($3968:int,$3970:int,$3972:int) = true
        P[<make_array_1030@315:1>]($3928:int,$3930:int) = true
        P[<<make_array_1030@315:2>@327:0>]($3914:int,$3916:int,$3918:int) = ($3918 <= $3916)
    end YhornInterface.solve(649501)[3] (0.626905 sec.)
    
  end RefTypeInfer.infer_etrs(478806)[2] (3.490470 sec.)
  refinement types:
    main_1479: X
    f_1484: v1:int -> X
    main_1044: v1:int -> (v2:unit -> X) -> X
    array_max_1033: v1:int ->
                    v2:int -> (v3:{v3:int | (v3 <= v2)} -> (v4:int -> X) -> X) -> (v7:{v7:int | (0 <= v7)} -> X) -> X
    make_array_1030: v1:int -> v2:{v2:int | (v2 <= 0)} -> (v3:{v3:int | (v3 <= 0)} -> X) -> X
    k_make_array_u_1182: v1:int -> v2:int -> (v3:int -> X) -> v5:bool -> X
    k_make_array_u_1193: v1:int -> v2:int -> (v3:int -> X) -> v5:unit -> X
    f_array_max_1480: v1:int -> v2:int -> (v3:int -> (v4:int -> X) -> X) -> (v7:int -> X) -> v9:int -> X
    array_max_1033: v1:int -> v2:int -> (v3:int -> (v4:int -> X) -> X) -> (v7:{v7:int | (0 <= v7)} -> X) -> X
    f_array_max_1481: v1:int -> v2:int -> v3:int -> (v4:int -> X) -> v6:int -> X
    f_main_1483: v1:int -> (v2:unit -> X) -> v4:int -> X
    check_1148: v1:int ->
                v2:int ->
                v3:{v3:int | (v2 <= 0)} ->
                (v4:{v4:int | (v4 <= 0)} -> (v5:{v5:int | (v5 <= v3)} -> X) -> X) -> (v8:unit -> X) -> X
    make_array_1030: v1:int -> v2:{v2:int | (v2 <= 0)} -> (v3:{v3:int | (v3 <= 0)} -> X) -> X
    k_make_array_u_1182: v1:int -> v2:int -> (v3:int -> X) -> v5:bool -> X
    k_make_array_u_1193: v1:int -> v2:int -> (v3:int -> X) -> v5:unit -> X
    f_check_1482: v1:int -> v2:int -> v3:int -> (v4:int -> (v5:int -> X) -> X) -> (v8:unit -> X) -> v10:int -> X
    fail_1487: v1:{v1:bool | false} -> (v2:unit -> X) -> X
    f_1485: var1469:int -> var1468:unit -> X
    fail_1486: var1473:bool -> (var1472:unit -> X) -> X
    k_check_u_1336: var1484:int ->
                    var1483:int ->
                    var1482:int -> (var1481:int -> (var1480:int -> X) -> X) -> (var1477:unit -> X) -> var1475:unit -> X
  abstraction types:
    main_1479: X
    f_1484: v1:int -> X
    main_1044: v1:int -> (v2:unit -> X) -> X
    array_max_1033: var1485:int ->
                    var1486:int ->
                    (var1487:int[var1487 -> (var1487 <= var1486)] -> (var1488:int -> X) -> X) ->
                    (var1491:int[var1491 -> (0 <= var1491)] -> X) -> X
    make_array_1030: var1494:int ->
                     var1495:int[var1495 -> (var1495 <= 0)] -> (var1496:int[var1496 -> (
                                                                    var1496 <= 0)] -> X) -> X
    k_make_array_u_1182: var1499:int -> var1500:int -> (var1501:int -> X) -> var1503:bool -> X
    k_make_array_u_1193: var1505:int -> var1506:int -> (var1507:int -> X) -> var1509:unit -> X
    f_array_max_1480: v1:int -> v2:int -> (v3:int -> (v4:int -> X) -> X) -> (v7:int -> X) -> v9:int -> X
    f_array_max_1481: v1:int -> v2:int -> v3:int -> (v4:int -> X) -> v6:int -> X
    f_main_1483: v1:int -> (v2:unit -> X) -> v4:int -> X
    check_1148: v1:int ->
                v2:int ->
                v3:int[v3 -> (v2 <= 0)] ->
                (v4:int[v4 -> (v4 <= 0)] -> (v5:int[v5 -> (v5 <= v3)] -> X) -> X) -> (v8:unit -> X) -> X
    f_check_1482: v1:int -> v2:int -> v3:int -> (v4:int -> (v5:int -> X) -> X) -> (v8:unit -> X) -> v10:int -> X
    fail_1487: v1:bool -> (v2:unit -> X) -> X
    f_1485: var1469:int -> var1468:unit -> X
    fail_1486: var1473:bool -> (var1472:unit -> X) -> X
    k_check_u_1336: var1484:int ->
                    var1483:int ->
                    var1482:int -> (var1481:int -> (var1480:int -> X) -> X) -> (var1477:unit -> X) -> var1475:unit -> X
  
end AbsTypeInfer.refine(478805)[1] (3.496468 sec.)
DONE!

Prefix of spurious counter-example::
0; 0; 0; 1; 0; 0; 0; 0; 0; 1; 0; 1; 0; 0; 0; 1

Program with abstraction types (CEGAR-cycle 7)::
Main: main_1479
  main_1479 -> (rand_int f_1484)
  array_max_1033 n_1034 i_1035 a_1036 k_array_max_1226 when (i_1035 >= n_1034) -> (k_array_max_1226 0)
  array_max_1033 n_1034 i_1035 a_1036 k_array_max_1226 when (not (i_1035 >= n_1034)) ->
      (a_1036 i_1035 (f_array_max_1480 i_1035 n_1034 a_1036 k_array_max_1226))
  check_1148 n_1040 i_1041 max_1042 a_1043 k_check_1309 when (i_1041 >= n_1040) -> (k_check_1309 ())
  check_1148 n_1040 i_1041 max_1042 a_1043 k_check_1309 when (not (i_1041 >= n_1040)) ->
      (a_1043 i_1041 (f_check_1482 i_1041 max_1042 n_1040 a_1043 k_check_1309))
  f_1484 x_1454 -> (main_1044 x_1454 (f_1485 x_1454))
  f_1485 x_1454 x_1451 -> end
  f_array_max_1480 i_1035 n_1034 a_1036 k_array_max_1226 x_1229 ->
      (array_max_1033 n_1034 (i_1035 + 1) a_1036 (f_array_max_1481 i_1035 n_1034 x_1229 k_array_max_1226))
  f_array_max_1481 i_1035 n_1034 x_1229 k_array_max_1226 x_1242 when (x_1229 > x_1242) -> (k_array_max_1226 x_1229)
  f_array_max_1481 i_1035 n_1034 x_1229 k_array_max_1226 x_1242 when (
      not (x_1229 > x_1242)) -> (k_array_max_1226 x_1242)
  f_check_1482 i_1041 max_1042 n_1040 a_1043 k_check_1309 x_1315 when (
      x_1315 <= max_1042) -> (k_check_u_1336 i_1041 max_1042 n_1040 a_1043 k_check_1309 ())
  f_check_1482 i_1041 max_1042 n_1040 a_1043 k_check_1309 x_1315 when (
      not (x_1315 <= max_1042)) -> (fail_1487 true (k_check_u_1336 i_1041 max_1042 n_1040 a_1043 k_check_1309))
  f_main_1483 n_1045 k_main_1380 x_1399 -> (check_1148 n_1045 0 x_1399 (make_array_1030 n_1045) k_main_1380)
  fail_1486 b k -> {fail} => (k ())
  fail_1487 b k -> {fail} => (k ())
  k_check_u_1336 i_1041 max_1042 n_1040 a_1043 k_check_1309 x_1312 ->
      (check_1148 n_1040 (i_1041 + 1) max_1042 a_1043 k_check_1309)
  k_make_array_u_1182 i_1032 n_1031 k_make_array_1176 b_1194 when b_1194 ->
      (k_make_array_u_1193 i_1032 n_1031 k_make_array_1176 ())
  k_make_array_u_1182 i_1032 n_1031 k_make_array_1176 b_1194 when (not b_1194) ->
      (fail_1486 true (k_make_array_u_1193 i_1032 n_1031 k_make_array_1176))
  k_make_array_u_1193 i_1032 n_1031 k_make_array_1176 x_1179 -> (k_make_array_1176 i_1032)
  main_1044 n_1045 k_main_1380 -> (array_max_1033 n_1045 0 (make_array_1030 n_1045) (f_main_1483 n_1045 k_main_1380))
  make_array_1030 n_1031 i_1032 k_make_array_1176 when (0 <= i_1032) ->
      (k_make_array_u_1182 i_1032 n_1031 k_make_array_1176 (i_1032 < n_1031))
  make_array_1030 n_1031 i_1032 k_make_array_1176 when (not (0 <= i_1032)) ->
      (k_make_array_u_1182 i_1032 n_1031 k_make_array_1176 false)
Types:
  main_1479 : X
  array_max_1033 : (x_1:int ->
                    x_2:int[x_2 <= 0; x_2 >= 0] ->
                    (x_4:int[x_2 >= x_4; x_1 >= x_4 + 1; x_4 >= 0] -> (x_6:int[x_2 <= x_4 - x_6] -> X) -> X) ->
                    (x_10:int[x_10 >= 0; x_2 >= 1; x_1 <= 0] -> X) -> X)
  check_1148 : (x_1:int ->
                x_2:int ->
                x_3:int[x_2 <= 0; x_2 >= 0; x_1 <= x_2] ->
                (x_5:int[x_5 <= 0; x_1 >= x_5 + 1; x_5 >= 0] -> (x_7:int[x_3 >= x_7] -> X) -> X) -> (unit -> X) -> X)
  fail_1486 : (x_1:bool[x_1] -> (unit -> X) -> X)
  fail_1487 : (x_1:bool[x_1] -> (unit -> X) -> X)
  make_array_1030 : (x_1:int ->
                     x_2:int[x_2 <= 0; x_1 >= x_2 + 1; x_2 >= 0] -> (x_4:int[x_4 <= 0; x_2 >= x_4] -> X) -> X)
  
(7-1) Abstracting ... DONE!

(7-2) Checking HORS ... DONE!

Error trace::
  main_1479 ... --> 
  f_1484 ... --> 
  main_1044 ... --> 
  array_max_1033 [2/2] ... --> 
  make_array_1030 [1/2] ... --> 
  k_make_array_u_1182 [1/2] ... --> 
  k_make_array_u_1193 ... --> 
  f_array_max_1480 ... --> 
  array_max_1033 [1/2] ... --> 
  f_array_max_1481 [2/2] ... --> 
  f_main_1483 ... --> 
  check_1148 [2/2] ... --> 
  make_array_1030 [1/2] ... --> 
  k_make_array_u_1182 [1/2] ... --> 
  k_make_array_u_1193 ... --> 
  f_check_1482 [1/2] ... --> 
  k_check_u_1336 ... --> 
  check_1148 [2/2] ... --> 
  make_array_1030 [1/2] ... --> 
  k_make_array_u_1182 [1/2] ... --> 
  k_make_array_u_1193 ... --> 
  f_check_1482 [2/2] ... --> 
  fail_1487 ... --> fail -->
  ERROR!

Spurious counter-example::
  0; 0; 0; 1; 0; 0; 0; 0; 0; 1; 0; 1; 0; 0; 0; 0; 0; 1; 0; 0; 0; 1; 0

(7-3) Checking counter-example ... DONE!

(7-4) Discovering predicates ... 
begin AbsTypeInfer.refine(664912)[1]
  program:
    main_1479  | true = ((Random.int 0) f_1484)
    array_max_1033 n_1034 i_1035 a_1036 k_array_max_1226 | (i_1035 >= n_1034) = (
    k_array_max_1226 0)
    array_max_1033 n_1034 i_1035 a_1036 k_array_max_1226 | (not (i_1035 >= n_1034)) = (
    a_1036 i_1035
           (f_array_max_1480 i_1035
                             n_1034
                             a_1036
                             k_array_max_1226))
    check_1148 n_1040 i_1041 max_1042 a_1043 k_check_1309 | (i_1041 >= n_1040) = (
    k_check_1309 ())
    check_1148 n_1040 i_1041 max_1042 a_1043 k_check_1309 | (not (i_1041 >= n_1040)) = (
    a_1043 i_1041
           (f_check_1482 i_1041
                         max_1042
                         n_1040
                         a_1043
                         k_check_1309))
    f_1484 x_1454 | true = (main_1044 x_1454
                                      (f_1485 x_1454))
    f_1485 x_1454 x_1451 | true = end
    f_array_max_1480 i_1035 n_1034 a_1036 k_array_max_1226 x_1229 | true = (
    array_max_1033 n_1034
                   (i_1035 + 1)
                   a_1036
                   (f_array_max_1481 i_1035
                                     n_1034
                                     x_1229
                                     k_array_max_1226))
    f_array_max_1481 i_1035 n_1034 x_1229 k_array_max_1226 x_1242 | (
    x_1229 > x_1242) = (k_array_max_1226 x_1229)
    f_array_max_1481 i_1035 n_1034 x_1229 k_array_max_1226 x_1242 | (
    not (x_1229 > x_1242)) = (k_array_max_1226 x_1242)
    f_check_1482 i_1041 max_1042 n_1040 a_1043 k_check_1309 x_1315 | (
    x_1315 <= max_1042) = (k_check_u_1336 i_1041
                                          max_1042
                                          n_1040
                                          a_1043
                                          k_check_1309
                                          ())
    f_check_1482 i_1041 max_1042 n_1040 a_1043 k_check_1309 x_1315 | (
    not (x_1315 <= max_1042)) = (fail_1487 true
                                           (k_check_u_1336 i_1041
                                                           max_1042
                                                           n_1040
                                                           a_1043
                                                           k_check_1309))
    f_main_1483 n_1045 k_main_1380 x_1399 | true = (check_1148 n_1045
                                                               0
                                                               x_1399
                                                               (make_array_1030 n_1045)
                                                               k_main_1380)
    fail_1486 b k | true = (fail ())
    fail_1487 b k | true = (fail ())
    k_check_u_1336 i_1041 max_1042 n_1040 a_1043 k_check_1309 x_1312 | true = (
    check_1148 n_1040
               (i_1041 + 1)
               max_1042
               a_1043
               k_check_1309)
    k_make_array_u_1182 i_1032 n_1031 k_make_array_1176 b_1194 | b_1194 = (
    k_make_array_u_1193 i_1032
                        n_1031
                        k_make_array_1176
                        ())
    k_make_array_u_1182 i_1032 n_1031 k_make_array_1176 b_1194 | (not b_1194) = (
    fail_1486 true
              (k_make_array_u_1193 i_1032
                                   n_1031
                                   k_make_array_1176))
    k_make_array_u_1193 i_1032 n_1031 k_make_array_1176 x_1179 | true = (
    k_make_array_1176 i_1032)
    main_1044 n_1045 k_main_1380 | true = (array_max_1033
                                             n_1045
                                             0
                                             (make_array_1030 n_1045)
                                             (f_main_1483 n_1045
                                                          k_main_1380))
    make_array_1030 n_1031 i_1032 k_make_array_1176 | (0 <= i_1032) = (
    k_make_array_u_1182 i_1032
                        n_1031
                        k_make_array_1176
                        (i_1032 < n_1031))
    make_array_1030 n_1031 i_1032 k_make_array_1176 | (not (0 <= i_1032)) = (
    k_make_array_u_1182 i_1032
                        n_1031
                        k_make_array_1176
                        false)
    main_1479:X
    array_max_1033:int -> int -> (int -> (int -> X) -> X) -> (int -> X) -> X
    check_1148:int -> int -> int -> (int -> (int -> X) -> X) -> (unit -> X) -> X
    f_1484:int -> X
    f_1485:int -> unit -> X
    f_array_max_1480:int -> int -> (int -> (int -> X) -> X) -> (int -> X) -> int -> X
    f_array_max_1481:int -> int -> int -> (int -> X) -> int -> X
    f_check_1482:int -> int -> int -> (int -> (int -> X) -> X) -> (unit -> X) -> int -> X
    f_main_1483:int -> (unit -> X) -> int -> X
    fail_1486:bool -> (unit -> X) -> X
    fail_1487:bool -> (unit -> X) -> X
    k_check_u_1336:int -> int -> int -> (int -> (int -> X) -> X) -> (unit -> X) -> unit -> X
    k_make_array_u_1182:int -> int -> (int -> X) -> bool -> X
    k_make_array_u_1193:int -> int -> (int -> X) -> unit -> X
    main_1044:int -> (unit -> X) -> X
    make_array_1030:int -> int -> (int -> X) -> X
  inlined functions: f_1484,f_1485,f_array_max_1480,f_array_max_1481,f_check_1482,f_main_1483,k_check_u_1336,k_make_array_u_1182,k_make_array_u_1193,main_1044
  counterexample: 0:0:0:1:0:0:0:0:0:1:0:1:0:0:0:0:0:1:0:0:0:1:0
  error traces:
    [true.nop(<f_1484@340:0> = var1511)
     [true.(<main_1044@342:0> = <f_1484@340:0>)
      [true.((<array_max_1033@344:0> = <main_1044@342:0>) && (<array_max_1033@344:1> = 0))
       [(not (<array_max_1033@344:1> >= <array_max_1033@344:0>)).
        (<<array_max_1033@344:2>@347:0> = <array_max_1033@344:1>)
        [true.
         ((<make_array_1030@349:0> = <main_1044@342:0>) && (<make_array_1030@349:1> = <<array_max_1033@344:2>@347:0>))
         [(0 <= <make_array_1030@349:1>).
          ((<k_make_array_u_1182@352:0> = <make_array_1030@349:1>) &&
           ((<k_make_array_u_1182@352:1> = <make_array_1030@349:0>) &&
            (<k_make_array_u_1182@352:3> = (<make_array_1030@349:1> < <make_array_1030@349:0>))))
          [<k_make_array_u_1182@352:3>.
           ((<k_make_array_u_1193@355:0> = <k_make_array_u_1182@352:0>) &&
            ((<k_make_array_u_1193@355:1> = <k_make_array_u_1182@352:1>) && (<k_make_array_u_1193@355:3> = ())))
           [true.(<<k_make_array_u_1193@355:2>@357:0> = <k_make_array_u_1193@355:0>)
            [true.(<<k_make_array_u_1182@352:2>@359:0> = <<k_make_array_u_1193@355:2>@357:0>)
             [true.(<<make_array_1030@349:2>@361:0> = <<k_make_array_u_1182@352:2>@359:0>)
              [true.(<<<array_max_1033@344:2>@347:1>@363:0> = <<make_array_1030@349:2>@361:0>)
               [true.
                ((<f_array_max_1480@365:0> = <array_max_1033@344:1>) &&
                 ((<f_array_max_1480@365:1> = <array_max_1033@344:0>) &&
                  (<f_array_max_1480@365:4> = <<<array_max_1033@344:2>@347:1>@363:0>)))
                [true.
                 ((<array_max_1033@367:0> = <f_array_max_1480@365:1>) &&
                  (<array_max_1033@367:1> = (<f_array_max_1480@365:0> + 1)))
                 [(<array_max_1033@367:1> >= <array_max_1033@367:0>).(
                  <<array_max_1033@367:3>@370:0> = 0)
                  [true.
                   ((<f_array_max_1481@372:0> = <f_array_max_1480@365:0>) &&
                    ((<f_array_max_1481@372:1> = <f_array_max_1480@365:1>) &&
                     ((<f_array_max_1481@372:2> = <f_array_max_1480@365:4>) &&
                      (<f_array_max_1481@372:4> = <<array_max_1033@367:3>@370:0>))))
                   [(not (<f_array_max_1481@372:2> > <f_array_max_1481@372:4>)).
                    (<<f_array_max_1481@372:3>@375:0> = <f_array_max_1481@372:4>)
                    [true.(<<f_array_max_1480@365:3>@377:0> = <<f_array_max_1481@372:3>@375:0>)
                     [true.(<<array_max_1033@344:3>@379:0> = <<f_array_max_1480@365:3>@377:0>)
                      [true.
                       ((<f_main_1483@381:0> = <main_1044@342:0>) &&
                        (<f_main_1483@381:2> = <<array_max_1033@344:3>@379:0>))
                       [true.
                        ((<check_1148@383:0> = <f_main_1483@381:0>) &&
                         ((<check_1148@383:1> = 0) && (<check_1148@383:2> = <f_main_1483@381:2>)))
                        [(not (<check_1148@383:1> >= <check_1148@383:0>)).
                         (<<check_1148@383:3>@386:0> = <check_1148@383:1>)
                         [true.
                          ((<make_array_1030@388:0> = <f_main_1483@381:0>) &&
                           (<make_array_1030@388:1> = <<check_1148@383:3>@386:0>))
                          [(0 <= <make_array_1030@388:1>).
                           ((<k_make_array_u_1182@391:0> = <make_array_1030@388:1>) &&
                            ((<k_make_array_u_1182@391:1> = <make_array_1030@388:0>) &&
                             (<k_make_array_u_1182@391:3> = (<make_array_1030@388:1> < <make_array_1030@388:0>))))
                           [<k_make_array_u_1182@391:3>.
                            ((<k_make_array_u_1193@394:0> = <k_make_array_u_1182@391:0>) &&
                             ((<k_make_array_u_1193@394:1> = <k_make_array_u_1182@391:1>) &&
                              (<k_make_array_u_1193@394:3> = ())))
                            [true.(<<k_make_array_u_1193@394:2>@396:0> = <k_make_array_u_1193@394:0>)
                             [true.(<<k_make_array_u_1182@391:2>@398:0> = <<k_make_array_u_1193@394:2>@396:0>)
                              [true.(<<make_array_1030@388:2>@400:0> = <<k_make_array_u_1182@391:2>@398:0>)
                               [true.(<<<check_1148@383:3>@386:1>@402:0> = <<make_array_1030@388:2>@400:0>)
                                [true.
                                 ((<f_check_1482@404:0> = <check_1148@383:1>) &&
                                  ((<f_check_1482@404:1> = <check_1148@383:2>) &&
                                   ((<f_check_1482@404:2> = <check_1148@383:0>) &&
                                    (<f_check_1482@404:5> = <<<check_1148@383:3>@386:1>@402:0>))))
                                 [(<f_check_1482@404:5> <= <f_check_1482@404:1>).
                                  ((<k_check_u_1336@407:0> = <f_check_1482@404:0>) &&
                                   ((<k_check_u_1336@407:1> = <f_check_1482@404:1>) &&
                                    ((<k_check_u_1336@407:2> = <f_check_1482@404:2>) && (<k_check_u_1336@407:5> = ()))))
                                  [true.
                                   ((<check_1148@409:0> = <k_check_u_1336@407:2>) &&
                                    ((<check_1148@409:1> = (<k_check_u_1336@407:0> + 1)) &&
                                     (<check_1148@409:2> = <k_check_u_1336@407:1>)))
                                   [(not (<check_1148@409:1> >= <check_1148@409:0>)).
                                    (<<check_1148@409:3>@412:0> = <check_1148@409:1>)
                                    [true.(<<k_check_u_1336@407:3>@414:0> = <<check_1148@409:3>@412:0>)
                                     [true.(<<f_check_1482@404:3>@416:0> = <<k_check_u_1336@407:3>@414:0>)
                                      [true.(<<check_1148@383:3>@418:0> = <<f_check_1482@404:3>@416:0>)
                                       [true.
                                        ((<make_array_1030@420:0> = <f_main_1483@381:0>) &&
                                         (<make_array_1030@420:1> = <<check_1148@383:3>@418:0>))
                                        [(0 <= <make_array_1030@420:1>).
                                         ((<k_make_array_u_1182@423:0> = <make_array_1030@420:1>) &&
                                          ((<k_make_array_u_1182@423:1> = <make_array_1030@420:0>) &&
                                           (<k_make_array_u_1182@423:3> =
                                            (<make_array_1030@420:1> < <make_array_1030@420:0>))))
                                         [<k_make_array_u_1182@423:3>.
                                          ((<k_make_array_u_1193@426:0> = <k_make_array_u_1182@423:0>) &&
                                           ((<k_make_array_u_1193@426:1> = <k_make_array_u_1182@423:1>) &&
                                            (<k_make_array_u_1193@426:3> = ())))
                                          [true.(<<k_make_array_u_1193@426:2>@428:0> = <k_make_array_u_1193@426:0>)
                                           [true.
                                            (<<k_make_array_u_1182@423:2>@430:0> = <<k_make_array_u_1193@426:2>@428:0>)
                                            [true.
                                             (<<make_array_1030@420:2>@432:0> = <<k_make_array_u_1182@423:2>@430:0>)
                                             [true.
                                              (<<<check_1148@383:3>@418:1>@434:0> = <<make_array_1030@420:2>@432:0>)
                                              [true.
                                               (<<<f_check_1482@404:3>@416:1>@436:0> =
                                                <<<check_1148@383:3>@418:1>@434:0>)
                                               [true.
                                                (<<<k_check_u_1336@407:3>@414:1>@438:0> =
                                                 <<<f_check_1482@404:3>@416:1>@436:0>)
                                                [true.
                                                 (<<<check_1148@409:3>@412:1>@440:0> =
                                                  <<<k_check_u_1336@407:3>@414:1>@438:0>)
                                                 [true.
                                                  ((<f_check_1482@442:0> = <check_1148@409:1>) &&
                                                   ((<f_check_1482@442:1> = <check_1148@409:2>) &&
                                                    ((<f_check_1482@442:2> = <check_1148@409:0>) &&
                                                     (<f_check_1482@442:5> = <<<check_1148@409:3>@412:1>@440:0>))))
                                                  [(not (<f_check_1482@442:5> <= <f_check_1482@442:1>)).
                                                   (<fail_1487@445:0> = true)[
                                                   true.error
  begin RefTypeInfer.infer_etrs(664913)[2]
    horn clauses:
      P[<fail_1487@445:0>](<fail_1487@445:0>:bool)|- bot
      
      P[<f_check_1482@442:5>](<f_check_1482@442:0>:int,<f_check_1482@442:1>:int,<f_check_1482@442:2>:int,<f_check_1482@442:5>:int),
      ((<f_check_1482@442:5> > <f_check_1482@442:1>) && <fail_1487@445:0>)
      |- P[<fail_1487@445:0>](<fail_1487@445:0>:bool)
      
      P[<check_1148@409:2>](<f_check_1482@442:2>:int,<f_check_1482@442:0>:int,<f_check_1482@442:1>:int),
      P[<<<check_1148@409:3>@412:1>@440:0>](<f_check_1482@442:2>:int,<f_check_1482@442:0>:int,<f_check_1482@442:1>:int,<f_check_1482@442:0>:int,<f_check_1482@442:5>:int),
      (<f_check_1482@442:0> < <f_check_1482@442:2>)
      |- P[<f_check_1482@442:5>](<f_check_1482@442:0>:int,<f_check_1482@442:1>:int,
                                 <f_check_1482@442:2>:int,<f_check_1482@442:5>:int)
      
      P[<k_check_u_1336@407:5>]((-1 + <check_1148@409:1>):int,<check_1148@409:2>:int,<check_1148@409:0>:int,<k_check_u_1336@407:5>:unit),
      P[<<<k_check_u_1336@407:3>@414:1>@438:0>]((-1 + <check_1148@409:1>):int,<check_1148@409:2>:int,<check_1148@409:0>:int,<<check_1148@409:3>@412:0>:int,<<<check_1148@409:3>@412:1>@440:0>:int),
      P[<check_1148@409:2>](<check_1148@409:0>:int,<check_1148@409:1>:int,<check_1148@409:2>:int)|- P[<<<check_1148@409:3>@412:1>@440:0>](
      <check_1148@409:0>:int,<check_1148@409:1>:int,<check_1148@409:2>:int,
      <<check_1148@409:3>@412:0>:int,<<<check_1148@409:3>@412:1>@440:0>:int)
      
      P[<f_check_1482@404:5>](<k_check_u_1336@407:0>:int,<k_check_u_1336@407:1>:int,<k_check_u_1336@407:2>:int,<f_check_1482@404:5>:int),
      P[<<<f_check_1482@404:3>@416:1>@436:0>](<k_check_u_1336@407:0>:int,<k_check_u_1336@407:1>:int,<k_check_u_1336@407:2>:int,<<k_check_u_1336@407:3>@414:0>:int,<<<k_check_u_1336@407:3>@414:1>@438:0>:int),
      (<f_check_1482@404:5> <= <k_check_u_1336@407:1>)
      |- P[<<<k_check_u_1336@407:3>@414:1>@438:0>](<k_check_u_1336@407:0>:int,
                                                   <k_check_u_1336@407:1>:int,
                                                   <k_check_u_1336@407:2>:int,
                                                   <<k_check_u_1336@407:3>@414:0>:int,
                                                   <<<k_check_u_1336@407:3>@414:1>@438:0>:int)
      
      P[<check_1148@383:2>](<f_check_1482@404:2>:int,<f_check_1482@404:0>:int,<f_check_1482@404:1>:int),
      P[<<<check_1148@383:3>@418:1>@434:0>](<f_check_1482@404:2>:int,<f_check_1482@404:0>:int,<f_check_1482@404:1>:int,<<f_check_1482@404:3>@416:0>:int,<<<f_check_1482@404:3>@416:1>@436:0>:int),
      (<f_check_1482@404:0> < <f_check_1482@404:2>)
      |- P[<<<f_check_1482@404:3>@416:1>@436:0>](<f_check_1482@404:0>:int,
                                                 <f_check_1482@404:1>:int,
                                                 <f_check_1482@404:2>:int,
                                                 <<f_check_1482@404:3>@416:0>:int,
                                                 <<<f_check_1482@404:3>@416:1>@436:0>:int)
      
      P[<f_main_1483@381:2>](<check_1148@383:0>:int,<check_1148@383:2>:int),
      P[<<make_array_1030@420:2>@432:0>](<check_1148@383:0>:int,<<check_1148@383:3>@418:0>:int,<<<check_1148@383:3>@418:1>@434:0>:int),
      P[<check_1148@383:2>](<check_1148@383:0>:int,<check_1148@383:1>:int,<check_1148@383:2>:int),
      (<check_1148@383:1> = 0)
      |- P[<<<check_1148@383:3>@418:1>@434:0>](<check_1148@383:0>:int,
                                               <check_1148@383:1>:int,
                                               <check_1148@383:2>:int,
                                               <<check_1148@383:3>@418:0>:int,
                                               <<<check_1148@383:3>@418:1>@434:0>:int)
      
      P[<make_array_1030@420:1>](<make_array_1030@420:0>:int,<make_array_1030@420:1>:int),
      P[<<k_make_array_u_1182@423:2>@430:0>](<make_array_1030@420:1>:int,<make_array_1030@420:0>:int,<<make_array_1030@420:2>@432:0>:int),
      (0 <= <make_array_1030@420:1>)
      |- P[<<make_array_1030@420:2>@432:0>](<make_array_1030@420:0>:int,
                                            <make_array_1030@420:1>:int,
                                            <<make_array_1030@420:2>@432:0>:int)
      
      P[<k_make_array_u_1182@423:3>](<k_make_array_u_1182@423:0>:int,<k_make_array_u_1182@423:1>:int,true:bool),
      P[<<k_make_array_u_1193@426:2>@428:0>](<k_make_array_u_1182@423:0>:int,<k_make_array_u_1182@423:1>:int,<<k_make_array_u_1182@423:2>@430:0>:int)|- P[<<k_make_array_u_1182@423:2>@430:0>](
      <k_make_array_u_1182@423:0>:int,<k_make_array_u_1182@423:1>:int,
      <<k_make_array_u_1182@423:2>@430:0>:int)
      
      P[<k_make_array_u_1193@426:3>](<k_make_array_u_1193@426:0>:int,<k_make_array_u_1193@426:1>:int,<k_make_array_u_1193@426:3>:unit),
      (<<k_make_array_u_1193@426:2>@428:0> = <k_make_array_u_1193@426:0>)
      |- P[<<k_make_array_u_1193@426:2>@428:0>](<k_make_array_u_1193@426:0>:int,
                                                <k_make_array_u_1193@426:1>:int,
                                                <<k_make_array_u_1193@426:2>@428:0>:int)
      
      P[<k_make_array_u_1182@423:3>](<k_make_array_u_1193@426:0>:int,<k_make_array_u_1193@426:1>:int,true:bool)|- P[<k_make_array_u_1193@426:3>](
      <k_make_array_u_1193@426:0>:int,<k_make_array_u_1193@426:1>:int,
      <k_make_array_u_1193@426:3>:unit)
      
      P[<make_array_1030@420:1>](<k_make_array_u_1182@423:1>:int,<k_make_array_u_1182@423:0>:int),
      ((0 <= <k_make_array_u_1182@423:0>) &&
       (<k_make_array_u_1182@423:3> = (<k_make_array_u_1182@423:0> < <k_make_array_u_1182@423:1>)))
      |- P[<k_make_array_u_1182@423:3>](<k_make_array_u_1182@423:0>:int,
                                        <k_make_array_u_1182@423:1>:int,
                                        <k_make_array_u_1182@423:3>:bool)
      
      P[<f_main_1483@381:2>](<make_array_1030@420:0>:int,<check_1148@383:2>:int),
      P[<<check_1148@383:3>@418:0>](<make_array_1030@420:0>:int,0:int,<check_1148@383:2>:int,<make_array_1030@420:1>:int)|- P[<make_array_1030@420:1>](
      <make_array_1030@420:0>:int,<make_array_1030@420:1>:int)
      
      P[<check_1148@383:2>](<check_1148@383:0>:int,<check_1148@383:1>:int,<check_1148@383:2>:int),
      P[<<f_check_1482@404:3>@416:0>](<check_1148@383:1>:int,<check_1148@383:2>:int,<check_1148@383:0>:int,<<check_1148@383:3>@418:0>:int),
      (<check_1148@383:1> < <check_1148@383:0>)
      |- P[<<check_1148@383:3>@418:0>](<check_1148@383:0>:int,<check_1148@383:1>:int,
                                       <check_1148@383:2>:int,<<check_1148@383:3>@418:0>:int)
      
      P[<f_check_1482@404:5>](<f_check_1482@404:0>:int,<f_check_1482@404:1>:int,<f_check_1482@404:2>:int,<f_check_1482@404:5>:int),
      P[<<k_check_u_1336@407:3>@414:0>](<f_check_1482@404:0>:int,<f_check_1482@404:1>:int,<f_check_1482@404:2>:int,<<f_check_1482@404:3>@416:0>:int),
      (<f_check_1482@404:5> <= <f_check_1482@404:1>)
      |- P[<<f_check_1482@404:3>@416:0>](<f_check_1482@404:0>:int,<f_check_1482@404:1>:int,
                                         <f_check_1482@404:2>:int,<<f_check_1482@404:3>@416:0>:int)
      
      P[<k_check_u_1336@407:5>](<k_check_u_1336@407:0>:int,<k_check_u_1336@407:1>:int,<k_check_u_1336@407:2>:int,<k_check_u_1336@407:5>:unit),
      P[<<check_1148@409:3>@412:0>](<k_check_u_1336@407:2>:int,(1 + <k_check_u_1336@407:0>):int,<k_check_u_1336@407:1>:int,<<k_check_u_1336@407:3>@414:0>:int)|- P[<<k_check_u_1336@407:3>@414:0>](
      <k_check_u_1336@407:0>:int,<k_check_u_1336@407:1>:int,<k_check_u_1336@407:2>:int,
      <<k_check_u_1336@407:3>@414:0>:int)
      
      P[<check_1148@409:2>](<check_1148@409:0>:int,<check_1148@409:1>:int,<check_1148@409:2>:int),
      ((<check_1148@409:1> < <check_1148@409:0>) && (<<check_1148@409:3>@412:0> = <check_1148@409:1>))
      |- P[<<check_1148@409:3>@412:0>](<check_1148@409:0>:int,<check_1148@409:1>:int,
                                       <check_1148@409:2>:int,<<check_1148@409:3>@412:0>:int)
      
      P[<k_check_u_1336@407:5>]((-1 + <check_1148@409:1>):int,<check_1148@409:2>:int,<check_1148@409:0>:int,<k_check_u_1336@407:5>:unit)|- P[<check_1148@409:2>](
      <check_1148@409:0>:int,<check_1148@409:1>:int,<check_1148@409:2>:int)
      
      P[<f_check_1482@404:5>](<k_check_u_1336@407:0>:int,<k_check_u_1336@407:1>:int,<k_check_u_1336@407:2>:int,<f_check_1482@404:5>:int),
      (<f_check_1482@404:5> <= <k_check_u_1336@407:1>)
      |- P[<k_check_u_1336@407:5>](<k_check_u_1336@407:0>:int,<k_check_u_1336@407:1>:int,
                                   <k_check_u_1336@407:2>:int,<k_check_u_1336@407:5>:unit)
      
      P[<check_1148@383:2>](<f_check_1482@404:2>:int,<f_check_1482@404:0>:int,<f_check_1482@404:1>:int),
      P[<<<check_1148@383:3>@386:1>@402:0>](<f_check_1482@404:2>:int,<f_check_1482@404:0>:int,<f_check_1482@404:1>:int,<f_check_1482@404:0>:int,<f_check_1482@404:5>:int),
      (<f_check_1482@404:0> < <f_check_1482@404:2>)
      |- P[<f_check_1482@404:5>](<f_check_1482@404:0>:int,<f_check_1482@404:1>:int,
                                 <f_check_1482@404:2>:int,<f_check_1482@404:5>:int)
      
      P[<f_main_1483@381:2>](<check_1148@383:0>:int,<check_1148@383:2>:int),
      P[<<make_array_1030@388:2>@400:0>](<check_1148@383:0>:int,<<check_1148@383:3>@386:0>:int,<<<check_1148@383:3>@386:1>@402:0>:int),
      P[<check_1148@383:2>](<check_1148@383:0>:int,<check_1148@383:1>:int,<check_1148@383:2>:int),
      (<check_1148@383:1> = 0)
      |- P[<<<check_1148@383:3>@386:1>@402:0>](<check_1148@383:0>:int,
                                               <check_1148@383:1>:int,
                                               <check_1148@383:2>:int,
                                               <<check_1148@383:3>@386:0>:int,
                                               <<<check_1148@383:3>@386:1>@402:0>:int)
      
      P[<make_array_1030@388:1>](<make_array_1030@388:0>:int,<make_array_1030@388:1>:int),
      P[<<k_make_array_u_1182@391:2>@398:0>](<make_array_1030@388:1>:int,<make_array_1030@388:0>:int,<<make_array_1030@388:2>@400:0>:int),
      (0 <= <make_array_1030@388:1>)
      |- P[<<make_array_1030@388:2>@400:0>](<make_array_1030@388:0>:int,
                                            <make_array_1030@388:1>:int,
                                            <<make_array_1030@388:2>@400:0>:int)
      
      P[<k_make_array_u_1182@391:3>](<k_make_array_u_1182@391:0>:int,<k_make_array_u_1182@391:1>:int,true:bool),
      P[<<k_make_array_u_1193@394:2>@396:0>](<k_make_array_u_1182@391:0>:int,<k_make_array_u_1182@391:1>:int,<<k_make_array_u_1182@391:2>@398:0>:int)|- P[<<k_make_array_u_1182@391:2>@398:0>](
      <k_make_array_u_1182@391:0>:int,<k_make_array_u_1182@391:1>:int,
      <<k_make_array_u_1182@391:2>@398:0>:int)
      
      P[<k_make_array_u_1193@394:3>](<k_make_array_u_1193@394:0>:int,<k_make_array_u_1193@394:1>:int,<k_make_array_u_1193@394:3>:unit),
      (<<k_make_array_u_1193@394:2>@396:0> = <k_make_array_u_1193@394:0>)
      |- P[<<k_make_array_u_1193@394:2>@396:0>](<k_make_array_u_1193@394:0>:int,
                                                <k_make_array_u_1193@394:1>:int,
                                                <<k_make_array_u_1193@394:2>@396:0>:int)
      
      P[<k_make_array_u_1182@391:3>](<k_make_array_u_1193@394:0>:int,<k_make_array_u_1193@394:1>:int,true:bool)|- P[<k_make_array_u_1193@394:3>](
      <k_make_array_u_1193@394:0>:int,<k_make_array_u_1193@394:1>:int,
      <k_make_array_u_1193@394:3>:unit)
      
      P[<make_array_1030@388:1>](<k_make_array_u_1182@391:1>:int,<k_make_array_u_1182@391:0>:int),
      ((0 <= <k_make_array_u_1182@391:0>) &&
       (<k_make_array_u_1182@391:3> = (<k_make_array_u_1182@391:0> < <k_make_array_u_1182@391:1>)))
      |- P[<k_make_array_u_1182@391:3>](<k_make_array_u_1182@391:0>:int,
                                        <k_make_array_u_1182@391:1>:int,
                                        <k_make_array_u_1182@391:3>:bool)
      
      P[<f_main_1483@381:2>](<make_array_1030@388:0>:int,<check_1148@383:2>:int),
      P[<<check_1148@383:3>@386:0>](<make_array_1030@388:0>:int,0:int,<check_1148@383:2>:int,<make_array_1030@388:1>:int)|- P[<make_array_1030@388:1>](
      <make_array_1030@388:0>:int,<make_array_1030@388:1>:int)
      
      P[<check_1148@383:2>](<check_1148@383:0>:int,<check_1148@383:1>:int,<check_1148@383:2>:int),
      ((<check_1148@383:1> < <check_1148@383:0>) && (<<check_1148@383:3>@386:0> = <check_1148@383:1>))
      |- P[<<check_1148@383:3>@386:0>](<check_1148@383:0>:int,<check_1148@383:1>:int,
                                       <check_1148@383:2>:int,<<check_1148@383:3>@386:0>:int)
      
      P[<f_main_1483@381:2>](<check_1148@383:0>:int,<check_1148@383:2>:int), (
      <check_1148@383:1> = 0)
      |- P[<check_1148@383:2>](<check_1148@383:0>:int,<check_1148@383:1>:int,
                               <check_1148@383:2>:int)
      
      P[<main_1044@342:0>](<f_main_1483@381:0>:int),
      P[<<array_max_1033@344:3>@379:0>](<f_main_1483@381:0>:int,0:int,<f_main_1483@381:2>:int)|- P[<f_main_1483@381:2>](
      <f_main_1483@381:0>:int,<f_main_1483@381:2>:int)
      
      P[<array_max_1033@344:1>](<array_max_1033@344:0>:int,<array_max_1033@344:1>:int),
      P[<<f_array_max_1480@365:3>@377:0>](<array_max_1033@344:1>:int,<array_max_1033@344:0>:int,<<array_max_1033@344:3>@379:0>:int),
      (<array_max_1033@344:1> < <array_max_1033@344:0>)
      |- P[<<array_max_1033@344:3>@379:0>](<array_max_1033@344:0>:int,
                                           <array_max_1033@344:1>:int,
                                           <<array_max_1033@344:3>@379:0>:int)
      
      P[<f_array_max_1480@365:4>](<f_array_max_1480@365:0>:int,<f_array_max_1480@365:1>:int,<f_array_max_1481@372:2>:int),
      P[<<f_array_max_1481@372:3>@375:0>](<f_array_max_1480@365:0>:int,<f_array_max_1480@365:1>:int,<f_array_max_1481@372:2>:int,<<f_array_max_1480@365:3>@377:0>:int)|- P[<<f_array_max_1480@365:3>@377:0>](
      <f_array_max_1480@365:0>:int,<f_array_max_1480@365:1>:int,<<f_array_max_1480@365:3>@377:0>:int)
      
      P[<f_array_max_1481@372:4>](<f_array_max_1481@372:0>:int,<f_array_max_1481@372:1>:int,<f_array_max_1481@372:2>:int,<<f_array_max_1481@372:3>@375:0>:int),
      (<f_array_max_1481@372:2> <= <<f_array_max_1481@372:3>@375:0>)
      |- P[<<f_array_max_1481@372:3>@375:0>](<f_array_max_1481@372:0>:int,
                                             <f_array_max_1481@372:1>:int,
                                             <f_array_max_1481@372:2>:int,
                                             <<f_array_max_1481@372:3>@375:0>:int)
      
      P[<f_array_max_1480@365:4>](<f_array_max_1481@372:0>:int,<f_array_max_1481@372:1>:int,<f_array_max_1481@372:2>:int),
      P[<<array_max_1033@367:3>@370:0>](<f_array_max_1481@372:1>:int,(
                                        1 + <f_array_max_1481@372:0>):int,<f_array_max_1481@372:4>:int)|- P[<f_array_max_1481@372:4>](
      <f_array_max_1481@372:0>:int,<f_array_max_1481@372:1>:int,<f_array_max_1481@372:2>:int,
      <f_array_max_1481@372:4>:int)
      
      P[<array_max_1033@367:1>](<array_max_1033@367:0>:int,<array_max_1033@367:1>:int),
      ((<<array_max_1033@367:3>@370:0> = 0) && (<array_max_1033@367:1> >= <array_max_1033@367:0>))
      |- P[<<array_max_1033@367:3>@370:0>](<array_max_1033@367:0>:int,
                                           <array_max_1033@367:1>:int,
                                           <<array_max_1033@367:3>@370:0>:int)
      
      P[<f_array_max_1480@365:4>]((-1 + <array_max_1033@367:1>):int,<array_max_1033@367:0>:int,<f_array_max_1480@365:4>:int)|- P[<array_max_1033@367:1>](
      <array_max_1033@367:0>:int,<array_max_1033@367:1>:int)
      
      P[<array_max_1033@344:1>](<f_array_max_1480@365:1>:int,<f_array_max_1480@365:0>:int),
      P[<<<array_max_1033@344:2>@347:1>@363:0>](<f_array_max_1480@365:1>:int,<f_array_max_1480@365:0>:int,<f_array_max_1480@365:0>:int,<f_array_max_1480@365:4>:int),
      (<f_array_max_1480@365:0> < <f_array_max_1480@365:1>)
      |- P[<f_array_max_1480@365:4>](<f_array_max_1480@365:0>:int,<f_array_max_1480@365:1>:int,
                                     <f_array_max_1480@365:4>:int)
      
      P[<main_1044@342:0>](<array_max_1033@344:0>:int),
      P[<<make_array_1030@349:2>@361:0>](<array_max_1033@344:0>:int,<<array_max_1033@344:2>@347:0>:int,<<<array_max_1033@344:2>@347:1>@363:0>:int),
      P[<array_max_1033@344:1>](<array_max_1033@344:0>:int,<array_max_1033@344:1>:int), (
      <array_max_1033@344:1> = 0)
      |- P[<<<array_max_1033@344:2>@347:1>@363:0>](<array_max_1033@344:0>:int,
                                                   <array_max_1033@344:1>:int,
                                                   <<array_max_1033@344:2>@347:0>:int,
                                                   <<<array_max_1033@344:2>@347:1>@363:0>:int)
      
      P[<make_array_1030@349:1>](<make_array_1030@349:0>:int,<make_array_1030@349:1>:int),
      P[<<k_make_array_u_1182@352:2>@359:0>](<make_array_1030@349:1>:int,<make_array_1030@349:0>:int,<<make_array_1030@349:2>@361:0>:int),
      (0 <= <make_array_1030@349:1>)
      |- P[<<make_array_1030@349:2>@361:0>](<make_array_1030@349:0>:int,
                                            <make_array_1030@349:1>:int,
                                            <<make_array_1030@349:2>@361:0>:int)
      
      P[<k_make_array_u_1182@352:3>](<k_make_array_u_1182@352:0>:int,<k_make_array_u_1182@352:1>:int,true:bool),
      P[<<k_make_array_u_1193@355:2>@357:0>](<k_make_array_u_1182@352:0>:int,<k_make_array_u_1182@352:1>:int,<<k_make_array_u_1182@352:2>@359:0>:int)|- P[<<k_make_array_u_1182@352:2>@359:0>](
      <k_make_array_u_1182@352:0>:int,<k_make_array_u_1182@352:1>:int,
      <<k_make_array_u_1182@352:2>@359:0>:int)
      
      P[<k_make_array_u_1193@355:3>](<k_make_array_u_1193@355:0>:int,<k_make_array_u_1193@355:1>:int,<k_make_array_u_1193@355:3>:unit),
      (<<k_make_array_u_1193@355:2>@357:0> = <k_make_array_u_1193@355:0>)
      |- P[<<k_make_array_u_1193@355:2>@357:0>](<k_make_array_u_1193@355:0>:int,
                                                <k_make_array_u_1193@355:1>:int,
                                                <<k_make_array_u_1193@355:2>@357:0>:int)
      
      P[<k_make_array_u_1182@352:3>](<k_make_array_u_1193@355:0>:int,<k_make_array_u_1193@355:1>:int,true:bool)|- P[<k_make_array_u_1193@355:3>](
      <k_make_array_u_1193@355:0>:int,<k_make_array_u_1193@355:1>:int,
      <k_make_array_u_1193@355:3>:unit)
      
      P[<make_array_1030@349:1>](<k_make_array_u_1182@352:1>:int,<k_make_array_u_1182@352:0>:int),
      ((0 <= <k_make_array_u_1182@352:0>) &&
       (<k_make_array_u_1182@352:3> = (<k_make_array_u_1182@352:0> < <k_make_array_u_1182@352:1>)))
      |- P[<k_make_array_u_1182@352:3>](<k_make_array_u_1182@352:0>:int,
                                        <k_make_array_u_1182@352:1>:int,
                                        <k_make_array_u_1182@352:3>:bool)
      
      P[<main_1044@342:0>](<make_array_1030@349:0>:int),
      P[<<array_max_1033@344:2>@347:0>](<make_array_1030@349:0>:int,0:int,<make_array_1030@349:1>:int)|- P[<make_array_1030@349:1>](
      <make_array_1030@349:0>:int,<make_array_1030@349:1>:int)
      
      P[<array_max_1033@344:1>](<array_max_1033@344:0>:int,<array_max_1033@344:1>:int),
      ((<array_max_1033@344:1> < <array_max_1033@344:0>) && (<<array_max_1033@344:2>@347:0> = <array_max_1033@344:1>))
      |- P[<<array_max_1033@344:2>@347:0>](<array_max_1033@344:0>:int,
                                           <array_max_1033@344:1>:int,
                                           <<array_max_1033@344:2>@347:0>:int)
      
      P[<main_1044@342:0>](<array_max_1033@344:0>:int), (<array_max_1033@344:1> = 0)
      |- P[<array_max_1033@344:1>](<array_max_1033@344:0>:int,<array_max_1033@344:1>:int)
      
      P[<f_1484@340:0>](<main_1044@342:0>:int)|- P[<main_1044@342:0>](<main_1044@342:0>:int)
      
      |- P[<f_1484@340:0>](<f_1484@340:0>:int)
    call trees:
      <main_1479@337>
        <f_1484@340>
          <main_1044@342>
            <array_max_1033@344>
            </<array_max_1033@344:2>@347>
            <make_array_1030@349>
              <k_make_array_u_1182@352>
                <k_make_array_u_1193@355>
                </<k_make_array_u_1193@355:2>@357>
              </<k_make_array_u_1182@352:2>@359>
            </<make_array_1030@349:2>@361>
            <<<array_max_1033@344:2>@347:1>@363>
              <f_array_max_1480@365>
                <array_max_1033@367>
                </<array_max_1033@367:3>@370>
                <f_array_max_1481@372>
                </<f_array_max_1481@372:3>@375>
              </<f_array_max_1480@365:3>@377>
            </<array_max_1033@344:3>@379>
            <f_main_1483@381>
              <check_1148@383>
              </<check_1148@383:3>@386>
              <make_array_1030@388>
                <k_make_array_u_1182@391>
                  <k_make_array_u_1193@394>
                  </<k_make_array_u_1193@394:2>@396>
                </<k_make_array_u_1182@391:2>@398>
              </<make_array_1030@388:2>@400>
              <<<check_1148@383:3>@386:1>@402>
                <f_check_1482@404>
                  <k_check_u_1336@407>
                    <check_1148@409>
                    </<check_1148@409:3>@412>
                  </<k_check_u_1336@407:3>@414>
                </<f_check_1482@404:3>@416>
              </<check_1148@383:3>@418>
              <make_array_1030@420>
                <k_make_array_u_1182@423>
                  <k_make_array_u_1193@426>
                  </<k_make_array_u_1193@426:2>@428>
                </<k_make_array_u_1182@423:2>@430>
              </<make_array_1030@420:2>@432>
              <<<check_1148@383:3>@418:1>@434>
                <<<f_check_1482@404:3>@416:1>@436>
                  <<<k_check_u_1336@407:3>@414:1>@438>
                    <<<check_1148@409:3>@412:1>@440>
                      <f_check_1482@442>
                        <fail_1487@445>
    inlined horn clauses:
      P[<fail_1487@445:0>](<fail_1487@445:0>:bool)|- bot
      
      P[<check_1148@409:2>](<f_check_1482@442:2>:int,<f_check_1482@442:0>:int,<f_check_1482@442:1>:int),
      P[<<<check_1148@409:3>@412:1>@440:0>](<f_check_1482@442:2>:int,<f_check_1482@442:0>:int,<f_check_1482@442:1>:int,<f_check_1482@442:0>:int,<f_check_1482@442:5>:int),
      ((<f_check_1482@442:5> > <f_check_1482@442:1>) &&
       ((<f_check_1482@442:0> < <f_check_1482@442:2>) && <fail_1487@445:0>))
      |- P[<fail_1487@445:0>](<fail_1487@445:0>:bool)
      
      P[<<<check_1148@383:3>@386:1>@402:0>](<check_1148@409:0>:int,(-1 + <check_1148@409:1>):int,<check_1148@409:2>:int,(
                                            -1 + <check_1148@409:1>):int,var1515:int),
      P[<check_1148@383:2>](<check_1148@409:0>:int,(-1 + <check_1148@409:1>):int,<check_1148@409:2>:int),
      P[<<<check_1148@383:3>@418:1>@434:0>](<check_1148@409:0>:int,(-1 + <check_1148@409:1>):int,<check_1148@409:2>:int,<<check_1148@409:3>@412:0>:int,<<<check_1148@409:3>@412:1>@440:0>:int),
      P[<check_1148@409:2>](<check_1148@409:0>:int,<check_1148@409:1>:int,<check_1148@409:2>:int),
      ((var1515 <= <check_1148@409:2>) && (<check_1148@409:1> < (1 + <check_1148@409:0>)))
      |- P[<<<check_1148@409:3>@412:1>@440:0>](<check_1148@409:0>:int,
                                               <check_1148@409:1>:int,
                                               <check_1148@409:2>:int,
                                               <<check_1148@409:3>@412:0>:int,
                                               <<<check_1148@409:3>@412:1>@440:0>:int)
      
      P[<<array_max_1033@344:3>@379:0>](<check_1148@383:0>:int,0:int,<check_1148@383:2>:int),
      P[<<make_array_1030@420:2>@432:0>](<check_1148@383:0>:int,<<check_1148@383:3>@418:0>:int,<<<check_1148@383:3>@418:1>@434:0>:int),
      P[<check_1148@383:2>](<check_1148@383:0>:int,<check_1148@383:1>:int,<check_1148@383:2>:int),
      (<check_1148@383:1> = 0)
      |- P[<<<check_1148@383:3>@418:1>@434:0>](<check_1148@383:0>:int,
                                               <check_1148@383:1>:int,
                                               <check_1148@383:2>:int,
                                               <<check_1148@383:3>@418:0>:int,
                                               <<<check_1148@383:3>@418:1>@434:0>:int)
      
      P[<make_array_1030@420:1>](<make_array_1030@420:0>:int,<make_array_1030@420:1>:int),
      ((0 <= <make_array_1030@420:1>) &&
       ((<make_array_1030@420:1> < <make_array_1030@420:0>) &&
        (<<make_array_1030@420:2>@432:0> = <make_array_1030@420:1>)))
      |- P[<<make_array_1030@420:2>@432:0>](<make_array_1030@420:0>:int,
                                            <make_array_1030@420:1>:int,
                                            <<make_array_1030@420:2>@432:0>:int)
      
      P[<<array_max_1033@344:3>@379:0>](<make_array_1030@420:0>:int,0:int,<check_1148@383:2>:int),
      P[<<check_1148@383:3>@418:0>](<make_array_1030@420:0>:int,0:int,<check_1148@383:2>:int,<make_array_1030@420:1>:int)|- P[<make_array_1030@420:1>](
      <make_array_1030@420:0>:int,<make_array_1030@420:1>:int)
      
      P[<<<check_1148@383:3>@386:1>@402:0>](<check_1148@383:0>:int,<check_1148@383:1>:int,<check_1148@383:2>:int,<check_1148@383:1>:int,var1516:int),
      P[<check_1148@383:2>](<check_1148@383:0>:int,<check_1148@383:1>:int,<check_1148@383:2>:int),
      P[<<check_1148@409:3>@412:0>](<check_1148@383:0>:int,(1 + <check_1148@383:1>):int,<check_1148@383:2>:int,<<check_1148@383:3>@418:0>:int),
      ((var1516 <= <check_1148@383:2>) && (<check_1148@383:1> < <check_1148@383:0>))
      |- P[<<check_1148@383:3>@418:0>](<check_1148@383:0>:int,<check_1148@383:1>:int,
                                       <check_1148@383:2>:int,<<check_1148@383:3>@418:0>:int)
      
      P[<check_1148@409:2>](<check_1148@409:0>:int,<check_1148@409:1>:int,<check_1148@409:2>:int),
      ((<check_1148@409:1> < <check_1148@409:0>) && (<<check_1148@409:3>@412:0> = <check_1148@409:1>))
      |- P[<<check_1148@409:3>@412:0>](<check_1148@409:0>:int,<check_1148@409:1>:int,
                                       <check_1148@409:2>:int,<<check_1148@409:3>@412:0>:int)
      
      P[<check_1148@383:2>](<check_1148@409:0>:int,(-1 + <check_1148@409:1>):int,<check_1148@409:2>:int),
      P[<<<check_1148@383:3>@386:1>@402:0>](<check_1148@409:0>:int,(-1 + <check_1148@409:1>):int,<check_1148@409:2>:int,(
                                            -1 + <check_1148@409:1>):int,var1517:int),
      ((var1517 <= <check_1148@409:2>) && (<check_1148@409:1> < (1 + <check_1148@409:0>)))
      |- P[<check_1148@409:2>](<check_1148@409:0>:int,<check_1148@409:1>:int,
                               <check_1148@409:2>:int)
      
      P[<<array_max_1033@344:3>@379:0>](<check_1148@383:0>:int,0:int,<check_1148@383:2>:int),
      P[<<make_array_1030@388:2>@400:0>](<check_1148@383:0>:int,<<check_1148@383:3>@386:0>:int,<<<check_1148@383:3>@386:1>@402:0>:int),
      P[<check_1148@383:2>](<check_1148@383:0>:int,<check_1148@383:1>:int,<check_1148@383:2>:int),
      (<check_1148@383:1> = 0)
      |- P[<<<check_1148@383:3>@386:1>@402:0>](<check_1148@383:0>:int,
                                               <check_1148@383:1>:int,
                                               <check_1148@383:2>:int,
                                               <<check_1148@383:3>@386:0>:int,
                                               <<<check_1148@383:3>@386:1>@402:0>:int)
      
      P[<make_array_1030@388:1>](<make_array_1030@388:0>:int,<make_array_1030@388:1>:int),
      ((0 <= <make_array_1030@388:1>) &&
       ((<make_array_1030@388:1> < <make_array_1030@388:0>) &&
        (<<make_array_1030@388:2>@400:0> = <make_array_1030@388:1>)))
      |- P[<<make_array_1030@388:2>@400:0>](<make_array_1030@388:0>:int,
                                            <make_array_1030@388:1>:int,
                                            <<make_array_1030@388:2>@400:0>:int)
      
      P[<<array_max_1033@344:3>@379:0>](<make_array_1030@388:0>:int,0:int,<check_1148@383:2>:int),
      P[<<check_1148@383:3>@386:0>](<make_array_1030@388:0>:int,0:int,<check_1148@383:2>:int,<make_array_1030@388:1>:int)|- P[<make_array_1030@388:1>](
      <make_array_1030@388:0>:int,<make_array_1030@388:1>:int)
      
      P[<check_1148@383:2>](<check_1148@383:0>:int,<check_1148@383:1>:int,<check_1148@383:2>:int),
      ((<check_1148@383:1> < <check_1148@383:0>) && (<<check_1148@383:3>@386:0> = <check_1148@383:1>))
      |- P[<<check_1148@383:3>@386:0>](<check_1148@383:0>:int,<check_1148@383:1>:int,
                                       <check_1148@383:2>:int,<<check_1148@383:3>@386:0>:int)
      
      P[<<array_max_1033@344:3>@379:0>](<check_1148@383:0>:int,0:int,<check_1148@383:2>:int), (
      <check_1148@383:1> = 0)
      |- P[<check_1148@383:2>](<check_1148@383:0>:int,<check_1148@383:1>:int,
                               <check_1148@383:2>:int)
      
      P[<array_max_1033@344:1>](<array_max_1033@344:0>:int,<array_max_1033@344:1>:int),
      P[<<<array_max_1033@344:2>@347:1>@363:0>](<array_max_1033@344:0>:int,<array_max_1033@344:1>:int,<array_max_1033@344:1>:int,var1518:int),
      P[<<array_max_1033@367:3>@370:0>](<array_max_1033@344:0>:int,(1 + <array_max_1033@344:1>):int,<<array_max_1033@344:3>@379:0>:int),
      ((var1518 <= <<array_max_1033@344:3>@379:0>) && (<array_max_1033@344:1> < <array_max_1033@344:0>))
      |- P[<<array_max_1033@344:3>@379:0>](<array_max_1033@344:0>:int,
                                           <array_max_1033@344:1>:int,
                                           <<array_max_1033@344:3>@379:0>:int)
      
      P[<array_max_1033@367:1>](<array_max_1033@367:0>:int,<array_max_1033@367:1>:int),
      ((<<array_max_1033@367:3>@370:0> = 0) && (<array_max_1033@367:1> >= <array_max_1033@367:0>))
      |- P[<<array_max_1033@367:3>@370:0>](<array_max_1033@367:0>:int,
                                           <array_max_1033@367:1>:int,
                                           <<array_max_1033@367:3>@370:0>:int)
      
      P[<array_max_1033@344:1>](<array_max_1033@367:0>:int,(-1 + <array_max_1033@367:1>):int),
      P[<<<array_max_1033@344:2>@347:1>@363:0>](<array_max_1033@367:0>:int,(
                                                -1 + <array_max_1033@367:1>):int,(
                                                -1 + <array_max_1033@367:1>):int,<f_array_max_1480@365:4>:int),
      (<array_max_1033@367:1> < (1 + <array_max_1033@367:0>))
      |- P[<array_max_1033@367:1>](<array_max_1033@367:0>:int,<array_max_1033@367:1>:int)
      
      P[<<make_array_1030@349:2>@361:0>](<array_max_1033@344:0>:int,<<array_max_1033@344:2>@347:0>:int,<<<array_max_1033@344:2>@347:1>@363:0>:int),
      P[<array_max_1033@344:1>](<array_max_1033@344:0>:int,<array_max_1033@344:1>:int), (
      <array_max_1033@344:1> = 0)
      |- P[<<<array_max_1033@344:2>@347:1>@363:0>](<array_max_1033@344:0>:int,
                                                   <array_max_1033@344:1>:int,
                                                   <<array_max_1033@344:2>@347:0>:int,
                                                   <<<array_max_1033@344:2>@347:1>@363:0>:int)
      
      P[<make_array_1030@349:1>](<make_array_1030@349:0>:int,<make_array_1030@349:1>:int),
      ((0 <= <make_array_1030@349:1>) &&
       ((<make_array_1030@349:1> < <make_array_1030@349:0>) &&
        (<<make_array_1030@349:2>@361:0> = <make_array_1030@349:1>)))
      |- P[<<make_array_1030@349:2>@361:0>](<make_array_1030@349:0>:int,
                                            <make_array_1030@349:1>:int,
                                            <<make_array_1030@349:2>@361:0>:int)
      
      P[<<array_max_1033@344:2>@347:0>](<make_array_1030@349:0>:int,0:int,<make_array_1030@349:1>:int)|- P[<make_array_1030@349:1>](
      <make_array_1030@349:0>:int,<make_array_1030@349:1>:int)
      
      P[<array_max_1033@344:1>](<array_max_1033@344:0>:int,<array_max_1033@344:1>:int),
      ((<array_max_1033@344:1> < <array_max_1033@344:0>) && (<<array_max_1033@344:2>@347:0> = <array_max_1033@344:1>))
      |- P[<<array_max_1033@344:2>@347:0>](<array_max_1033@344:0>:int,
                                           <array_max_1033@344:1>:int,
                                           <<array_max_1033@344:2>@347:0>:int)
      
       (<array_max_1033@344:1> = 0) |- P[<array_max_1033@344:1>](<array_max_1033@344:0>:int,
                                                                 <array_max_1033@344:1>:int)
    begin ParamSubstInfer.infer(673674)[3]
      
    end ParamSubstInfer.infer(673674)[3] (3.613451 sec.)
    inferred extra parameters:
      
    begin RefTypeInfer.elim_coeffs(673676)[3]
      
    end RefTypeInfer.elim_coeffs(673676)[3] (0.005999 sec.)
    begin GenHcSolver.solve(675144)[3]
      Horn clauses:
        P[<fail_1487@445:0>](<fail_1487@445:0>:bool)|- bot
        
        P[<check_1148@409:2>](<f_check_1482@442:2>:int,<f_check_1482@442:0>:int,<f_check_1482@442:1>:int),
        P[<<<check_1148@409:3>@412:1>@440:0>](<f_check_1482@442:2>:int,<f_check_1482@442:0>:int,<f_check_1482@442:1>:int,<f_check_1482@442:0>:int,<f_check_1482@442:5>:int),
        ((<f_check_1482@442:5> > <f_check_1482@442:1>) &&
         ((<f_check_1482@442:0> < <f_check_1482@442:2>) && <fail_1487@445:0>))
        |- P[<fail_1487@445:0>](<fail_1487@445:0>:bool)
        
        P[<<<check_1148@383:3>@386:1>@402:0>](<check_1148@409:0>:int,(
                                              -1 + <check_1148@409:1>):int,<check_1148@409:2>:int,(
                                              -1 + <check_1148@409:1>):int,var1515:int),
        P[<check_1148@383:2>](<check_1148@409:0>:int,(-1 + <check_1148@409:1>):int,<check_1148@409:2>:int),
        P[<<<check_1148@383:3>@418:1>@434:0>](<check_1148@409:0>:int,(
                                              -1 + <check_1148@409:1>):int,<check_1148@409:2>:int,<<check_1148@409:3>@412:0>:int,<<<check_1148@409:3>@412:1>@440:0>:int),
        P[<check_1148@409:2>](<check_1148@409:0>:int,<check_1148@409:1>:int,<check_1148@409:2>:int),
        ((var1515 <= <check_1148@409:2>) && (<check_1148@409:1> < (1 + <check_1148@409:0>)))
        |- P[<<<check_1148@409:3>@412:1>@440:0>](<check_1148@409:0>:int,
                                                 <check_1148@409:1>:int,
                                                 <check_1148@409:2>:int,
                                                 <<check_1148@409:3>@412:0>:int,
                                                 <<<check_1148@409:3>@412:1>@440:0>:int)
        
        P[<<array_max_1033@344:3>@379:0>](<check_1148@383:0>:int,0:int,<check_1148@383:2>:int),
        P[<<make_array_1030@420:2>@432:0>](<check_1148@383:0>:int,<<check_1148@383:3>@418:0>:int,<<<check_1148@383:3>@418:1>@434:0>:int),
        P[<check_1148@383:2>](<check_1148@383:0>:int,<check_1148@383:1>:int,<check_1148@383:2>:int),
        (<check_1148@383:1> = 0)
        |- P[<<<check_1148@383:3>@418:1>@434:0>](<check_1148@383:0>:int,
                                                 <check_1148@383:1>:int,
                                                 <check_1148@383:2>:int,
                                                 <<check_1148@383:3>@418:0>:int,
                                                 <<<check_1148@383:3>@418:1>@434:0>:int)
        
        P[<make_array_1030@420:1>](<make_array_1030@420:0>:int,<make_array_1030@420:1>:int),
        ((0 <= <make_array_1030@420:1>) &&
         ((<make_array_1030@420:1> < <make_array_1030@420:0>) &&
          (<<make_array_1030@420:2>@432:0> = <make_array_1030@420:1>)))
        |- P[<<make_array_1030@420:2>@432:0>](<make_array_1030@420:0>:int,
                                              <make_array_1030@420:1>:int,
                                              <<make_array_1030@420:2>@432:0>:int)
        
        P[<<array_max_1033@344:3>@379:0>](<make_array_1030@420:0>:int,0:int,<check_1148@383:2>:int),
        P[<<check_1148@383:3>@418:0>](<make_array_1030@420:0>:int,0:int,<check_1148@383:2>:int,<make_array_1030@420:1>:int)|- P[<make_array_1030@420:1>](
        <make_array_1030@420:0>:int,<make_array_1030@420:1>:int)
        
        P[<<<check_1148@383:3>@386:1>@402:0>](<check_1148@383:0>:int,<check_1148@383:1>:int,<check_1148@383:2>:int,<check_1148@383:1>:int,var1516:int),
        P[<check_1148@383:2>](<check_1148@383:0>:int,<check_1148@383:1>:int,<check_1148@383:2>:int),
        P[<<check_1148@409:3>@412:0>](<check_1148@383:0>:int,(1 + <check_1148@383:1>):int,<check_1148@383:2>:int,<<check_1148@383:3>@418:0>:int),
        ((var1516 <= <check_1148@383:2>) && (<check_1148@383:1> < <check_1148@383:0>))
        |- P[<<check_1148@383:3>@418:0>](<check_1148@383:0>:int,<check_1148@383:1>:int,
                                         <check_1148@383:2>:int,<<check_1148@383:3>@418:0>:int)
        
        P[<check_1148@409:2>](<check_1148@409:0>:int,<check_1148@409:1>:int,<check_1148@409:2>:int),
        ((<check_1148@409:1> < <check_1148@409:0>) && (<<check_1148@409:3>@412:0> = <check_1148@409:1>))
        |- P[<<check_1148@409:3>@412:0>](<check_1148@409:0>:int,<check_1148@409:1>:int,
                                         <check_1148@409:2>:int,<<check_1148@409:3>@412:0>:int)
        
        P[<check_1148@383:2>](<check_1148@409:0>:int,(-1 + <check_1148@409:1>):int,<check_1148@409:2>:int),
        P[<<<check_1148@383:3>@386:1>@402:0>](<check_1148@409:0>:int,(
                                              -1 + <check_1148@409:1>):int,<check_1148@409:2>:int,(
                                              -1 + <check_1148@409:1>):int,var1517:int),
        ((var1517 <= <check_1148@409:2>) && (<check_1148@409:1> < (1 + <check_1148@409:0>)))
        |- P[<check_1148@409:2>](<check_1148@409:0>:int,<check_1148@409:1>:int,
                                 <check_1148@409:2>:int)
        
        P[<<array_max_1033@344:3>@379:0>](<check_1148@383:0>:int,0:int,<check_1148@383:2>:int),
        P[<<make_array_1030@388:2>@400:0>](<check_1148@383:0>:int,<<check_1148@383:3>@386:0>:int,<<<check_1148@383:3>@386:1>@402:0>:int),
        P[<check_1148@383:2>](<check_1148@383:0>:int,<check_1148@383:1>:int,<check_1148@383:2>:int),
        (<check_1148@383:1> = 0)
        |- P[<<<check_1148@383:3>@386:1>@402:0>](<check_1148@383:0>:int,
                                                 <check_1148@383:1>:int,
                                                 <check_1148@383:2>:int,
                                                 <<check_1148@383:3>@386:0>:int,
                                                 <<<check_1148@383:3>@386:1>@402:0>:int)
        
        P[<make_array_1030@388:1>](<make_array_1030@388:0>:int,<make_array_1030@388:1>:int),
        ((0 <= <make_array_1030@388:1>) &&
         ((<make_array_1030@388:1> < <make_array_1030@388:0>) &&
          (<<make_array_1030@388:2>@400:0> = <make_array_1030@388:1>)))
        |- P[<<make_array_1030@388:2>@400:0>](<make_array_1030@388:0>:int,
                                              <make_array_1030@388:1>:int,
                                              <<make_array_1030@388:2>@400:0>:int)
        
        P[<<array_max_1033@344:3>@379:0>](<make_array_1030@388:0>:int,0:int,<check_1148@383:2>:int),
        P[<<check_1148@383:3>@386:0>](<make_array_1030@388:0>:int,0:int,<check_1148@383:2>:int,<make_array_1030@388:1>:int)|- P[<make_array_1030@388:1>](
        <make_array_1030@388:0>:int,<make_array_1030@388:1>:int)
        
        P[<check_1148@383:2>](<check_1148@383:0>:int,<check_1148@383:1>:int,<check_1148@383:2>:int),
        ((<check_1148@383:1> < <check_1148@383:0>) && (<<check_1148@383:3>@386:0> = <check_1148@383:1>))
        |- P[<<check_1148@383:3>@386:0>](<check_1148@383:0>:int,<check_1148@383:1>:int,
                                         <check_1148@383:2>:int,<<check_1148@383:3>@386:0>:int)
        
        P[<<array_max_1033@344:3>@379:0>](<check_1148@383:0>:int,0:int,<check_1148@383:2>:int),
        (<check_1148@383:1> = 0)
        |- P[<check_1148@383:2>](<check_1148@383:0>:int,<check_1148@383:1>:int,
                                 <check_1148@383:2>:int)
        
        P[<array_max_1033@344:1>](<array_max_1033@344:0>:int,<array_max_1033@344:1>:int),
        P[<<<array_max_1033@344:2>@347:1>@363:0>](<array_max_1033@344:0>:int,<array_max_1033@344:1>:int,<array_max_1033@344:1>:int,var1518:int),
        P[<<array_max_1033@367:3>@370:0>](<array_max_1033@344:0>:int,(
                                          1 + <array_max_1033@344:1>):int,<<array_max_1033@344:3>@379:0>:int),
        ((var1518 <= <<array_max_1033@344:3>@379:0>) && (<array_max_1033@344:1> < <array_max_1033@344:0>))
        |- P[<<array_max_1033@344:3>@379:0>](<array_max_1033@344:0>:int,
                                             <array_max_1033@344:1>:int,
                                             <<array_max_1033@344:3>@379:0>:int)
        
        P[<array_max_1033@367:1>](<array_max_1033@367:0>:int,<array_max_1033@367:1>:int),
        ((<<array_max_1033@367:3>@370:0> = 0) && (<array_max_1033@367:1> >= <array_max_1033@367:0>))
        |- P[<<array_max_1033@367:3>@370:0>](<array_max_1033@367:0>:int,
                                             <array_max_1033@367:1>:int,
                                             <<array_max_1033@367:3>@370:0>:int)
        
        P[<array_max_1033@344:1>](<array_max_1033@367:0>:int,(-1 + <array_max_1033@367:1>):int),
        P[<<<array_max_1033@344:2>@347:1>@363:0>](<array_max_1033@367:0>:int,(
                                                  -1 + <array_max_1033@367:1>):int,(
                                                  -1 + <array_max_1033@367:1>):int,<f_array_max_1480@365:4>:int),
        (<array_max_1033@367:1> < (1 + <array_max_1033@367:0>))
        |- P[<array_max_1033@367:1>](<array_max_1033@367:0>:int,<array_max_1033@367:1>:int)
        
        P[<<make_array_1030@349:2>@361:0>](<array_max_1033@344:0>:int,<<array_max_1033@344:2>@347:0>:int,<<<array_max_1033@344:2>@347:1>@363:0>:int),
        P[<array_max_1033@344:1>](<array_max_1033@344:0>:int,<array_max_1033@344:1>:int), (
        <array_max_1033@344:1> = 0)
        |- P[<<<array_max_1033@344:2>@347:1>@363:0>](<array_max_1033@344:0>:int,
                                                     <array_max_1033@344:1>:int,
                                                     <<array_max_1033@344:2>@347:0>:int,
                                                     <<<array_max_1033@344:2>@347:1>@363:0>:int)
        
        P[<make_array_1030@349:1>](<make_array_1030@349:0>:int,<make_array_1030@349:1>:int),
        ((0 <= <make_array_1030@349:1>) &&
         ((<make_array_1030@349:1> < <make_array_1030@349:0>) &&
          (<<make_array_1030@349:2>@361:0> = <make_array_1030@349:1>)))
        |- P[<<make_array_1030@349:2>@361:0>](<make_array_1030@349:0>:int,
                                              <make_array_1030@349:1>:int,
                                              <<make_array_1030@349:2>@361:0>:int)
        
        P[<<array_max_1033@344:2>@347:0>](<make_array_1030@349:0>:int,0:int,<make_array_1030@349:1>:int)|- P[<make_array_1030@349:1>](
        <make_array_1030@349:0>:int,<make_array_1030@349:1>:int)
        
        P[<array_max_1033@344:1>](<array_max_1033@344:0>:int,<array_max_1033@344:1>:int),
        ((<array_max_1033@344:1> < <array_max_1033@344:0>) && (<<array_max_1033@344:2>@347:0> = <array_max_1033@344:1>))
        |- P[<<array_max_1033@344:2>@347:0>](<array_max_1033@344:0>:int,
                                             <array_max_1033@344:1>:int,
                                             <<array_max_1033@344:2>@347:0>:int)
        
         (<array_max_1033@344:1> = 0)
        |- P[<array_max_1033@344:1>](<array_max_1033@344:0>:int,<array_max_1033@344:1>:int)
      lower bounds:
        P[<array_max_1033@344:1>](<array_max_1033@344:0>:int,<array_max_1033@344:1>:int) = (<array_max_1033@344:1> = 0)
        P[<<array_max_1033@344:2>@347:0>](<array_max_1033@344:0>:int,<array_max_1033@344:1>:int,<<array_max_1033@344:2>@347:0>:int) =
        ((<array_max_1033@344:1> = 0) &&
         ((<array_max_1033@344:1> < <array_max_1033@344:0>) &&
          (<<array_max_1033@344:2>@347:0> = <array_max_1033@344:1>)))
        P[<make_array_1030@349:1>](<make_array_1030@349:0>:int,<make_array_1030@349:1>:int) =
        ((<make_array_1030@349:1> = 0) && (0 < <make_array_1030@349:0>))
        P[<<make_array_1030@349:2>@361:0>](<make_array_1030@349:0>:int,<make_array_1030@349:1>:int,<<make_array_1030@349:2>@361:0>:int) =
        ((<make_array_1030@349:1> = 0) &&
         ((<make_array_1030@349:1> < <make_array_1030@349:0>) &&
          ((0 < <make_array_1030@349:0>) && (<<make_array_1030@349:2>@361:0> = <make_array_1030@349:1>))))
        P[<<<array_max_1033@344:2>@347:1>@363:0>](<array_max_1033@344:0>:int,<array_max_1033@344:1>:int,<<array_max_1033@344:2>@347:0>:int,<<<array_max_1033@344:2>@347:1>@363:0>:int) =
        ((<<array_max_1033@344:2>@347:0> = 0) &&
         ((<array_max_1033@344:1> = 0) &&
          ((<<array_max_1033@344:2>@347:0> < <array_max_1033@344:0>) &&
           ((0 < <array_max_1033@344:0>) && (<<<array_max_1033@344:2>@347:1>@363:0> = <<array_max_1033@344:2>@347:0>)))))
        P[<array_max_1033@367:1>](<array_max_1033@367:0>:int,<array_max_1033@367:1>:int) =
        ((<array_max_1033@367:1> = 1) &&
         ((0 < <array_max_1033@367:0>) && (<array_max_1033@367:1> < (1 + <array_max_1033@367:0>))))
        P[<<array_max_1033@367:3>@370:0>](<array_max_1033@367:0>:int,<array_max_1033@367:1>:int,<<array_max_1033@367:3>@370:0>:int) =
        ((<<array_max_1033@367:3>@370:0> = 0) &&
         ((<array_max_1033@367:1> = 1) &&
          ((0 < <array_max_1033@367:0>) && (<array_max_1033@367:1> = <array_max_1033@367:0>))))
        P[<<array_max_1033@344:3>@379:0>](<array_max_1033@344:0>:int,<array_max_1033@344:1>:int,<<array_max_1033@344:3>@379:0>:int) =
        ((<<array_max_1033@344:3>@379:0> = 0) &&
         ((<array_max_1033@344:1> = 0) &&
          (((1 + <array_max_1033@344:1>) = <array_max_1033@344:0>) && (0 < <array_max_1033@344:0>))))
        P[<check_1148@383:2>](<check_1148@383:0>:int,<check_1148@383:1>:int,<check_1148@383:2>:int) =
        ((<check_1148@383:1> = 0) && ((<check_1148@383:2> = 0) && (<check_1148@383:0> = 1)))
        P[<<check_1148@383:3>@386:0>](<check_1148@383:0>:int,<check_1148@383:1>:int,<check_1148@383:2>:int,<<check_1148@383:3>@386:0>:int) =
        ((<check_1148@383:1> = 0) &&
         ((<check_1148@383:2> = 0) && ((<check_1148@383:0> = 1) && (<<check_1148@383:3>@386:0> = <check_1148@383:1>))))
        P[<make_array_1030@388:1>](<make_array_1030@388:0>:int,<make_array_1030@388:1>:int) =
        ((<make_array_1030@388:1> = 0) && (<make_array_1030@388:0> = 1))
        P[<<make_array_1030@388:2>@400:0>](<make_array_1030@388:0>:int,<make_array_1030@388:1>:int,<<make_array_1030@388:2>@400:0>:int) =
        ((<make_array_1030@388:1> = 0) &&
         ((<make_array_1030@388:0> = 1) && (<<make_array_1030@388:2>@400:0> = <make_array_1030@388:1>)))
        P[<<<check_1148@383:3>@386:1>@402:0>](<check_1148@383:0>:int,<check_1148@383:1>:int,<check_1148@383:2>:int,<<check_1148@383:3>@386:0>:int,<<<check_1148@383:3>@386:1>@402:0>:int) =
        ((<check_1148@383:0> = 1) &&
         ((<<check_1148@383:3>@386:0> = 0) &&
          ((<check_1148@383:1> = 0) &&
           ((<check_1148@383:2> = 0) && (<<<check_1148@383:3>@386:1>@402:0> = <<check_1148@383:3>@386:0>)))))
        P[<check_1148@409:2>](<check_1148@409:0>:int,<check_1148@409:1>:int,<check_1148@409:2>:int) =
        ((<check_1148@409:2> = 0) && ((<check_1148@409:1> = 1) && (<check_1148@409:0> = 1)))
        P[<<check_1148@409:3>@412:0>](<check_1148@409:0>:int,<check_1148@409:1>:int,<check_1148@409:2>:int,<<check_1148@409:3>@412:0>:int) =
        false
        P[<<check_1148@383:3>@418:0>](<check_1148@383:0>:int,<check_1148@383:1>:int,<check_1148@383:2>:int,<<check_1148@383:3>@418:0>:int) =
        false
        P[<make_array_1030@420:1>](<make_array_1030@420:0>:int,<make_array_1030@420:1>:int) = false
        P[<<make_array_1030@420:2>@432:0>](<make_array_1030@420:0>:int,<make_array_1030@420:1>:int,<<make_array_1030@420:2>@432:0>:int) =
        false
        P[<<<check_1148@383:3>@418:1>@434:0>](<check_1148@383:0>:int,<check_1148@383:1>:int,<check_1148@383:2>:int,<<check_1148@383:3>@418:0>:int,<<<check_1148@383:3>@418:1>@434:0>:int) =
        false
        P[<<<check_1148@409:3>@412:1>@440:0>](<check_1148@409:0>:int,<check_1148@409:1>:int,<check_1148@409:2>:int,<<check_1148@409:3>@412:0>:int,<<<check_1148@409:3>@412:1>@440:0>:int) =
        false
        P[<fail_1487@445:0>](<fail_1487@445:0>:bool) = false
      upper bounds:
        P[<<<check_1148@409:3>@412:1>@440:0>](var1553:int,var1554:int,var1555:int,var1556:int,var1557:int) = true
        P[<<<check_1148@383:3>@418:1>@434:0>](var1544:int,var1545:int,var1546:int,var1547:int,var1548:int) = true
        P[<<<check_1148@383:3>@386:1>@402:0>](var1535:int,var1536:int,var1537:int,var1538:int,var1539:int) = true
      begin GenHcSolver.classify_pids(700107)[4]
        output:
          [<<<check_1148@383:3>@386:1>@402:0>;<<<check_1148@383:3>@418:1>@434:0>;<<<check_1148@409:3>@412:1>@440:0>]
      end GenHcSolver.classify_pids(700107)[4] (0.000000 sec.)
      begin ApronInterface.convex_hull_interpolate(700128)[4]
        lb:((<check_1148@383:0> = 1) &&
            ((<<check_1148@383:3>@386:0> = 0) &&
             ((<check_1148@383:1> = 0) &&
              ((<check_1148@383:2> = 0) && (<<<check_1148@383:3>@386:1>@402:0> = <<check_1148@383:3>@386:0>)))))
        nub:false
        lb':((<check_1148@383:0> = 1) &&
             ((<<check_1148@383:3>@386:0> = 0) &&
              ((<check_1148@383:1> = 0) &&
               ((<check_1148@383:2> = 0) && (<<<check_1148@383:3>@386:1>@402:0> = <<check_1148@383:3>@386:0>)))))
        nub':false
        begin InterpProver.interpolate(700129)[5]
          begin InterpProver.interpolate_fresh(700130)[6]
            begin InterpProver.interpolate_log(700131)[7]
              input1: ((<check_1148@383:0> = 1) &&
                       ((<<check_1148@383:3>@386:0> = 0) &&
                        ((<check_1148@383:1> = 0) &&
                         ((<check_1148@383:2> = 0) && (<<<check_1148@383:3>@386:1>@402:0> = <<check_1148@383:3>@386:0>)))))
              input2: false
              begin InterpProver.interpolate_check(700132)[8]
                begin InterpProver.interpolate_simplify(700133)[9]
                  begin InterpProver.interpolate_quick(700208)[10]
                    
                  end InterpProver.interpolate_quick(700208)[10] (0.000000 sec.)
                  
                end InterpProver.interpolate_simplify(700133)[9] (0.000000 sec.)
                
              end InterpProver.interpolate_check(700132)[8] (0.000000 sec.)
              output: true
            end InterpProver.interpolate_log(700131)[7] (0.000000 sec.)
            
          end InterpProver.interpolate_fresh(700130)[6] (0.000000 sec.)
          
        end InterpProver.interpolate(700129)[5] (0.000000 sec.)
        output:
          P[<<<check_1148@383:3>@386:1>@402:0>](<check_1148@383:0>:int,<check_1148@383:1>:int,<check_1148@383:2>:int,<<check_1148@383:3>@386:0>:int,<<<check_1148@383:3>@386:1>@402:0>:int) =
          true
          P[<<<check_1148@383:3>@418:1>@434:0>](<check_1148@383:0>:int,<check_1148@383:1>:int,<check_1148@383:2>:int,<<check_1148@383:3>@386:0>:int,<<<check_1148@383:3>@386:1>@402:0>:int) =
          true
          P[<<<check_1148@409:3>@412:1>@440:0>](<check_1148@383:0>:int,<check_1148@383:1>:int,<check_1148@383:2>:int,<<check_1148@383:3>@386:0>:int,<<<check_1148@383:3>@386:1>@402:0>:int) =
          true
      end ApronInterface.convex_hull_interpolate(700128)[4] (0.001000 sec.)
      Horn clauses:
        P[<fail_1487@445:0>](<fail_1487@445:0>:bool)|- bot
        
        P[<check_1148@409:2>](<f_check_1482@442:2>:int,<f_check_1482@442:0>:int,<f_check_1482@442:1>:int),
        ((<f_check_1482@442:0> < <f_check_1482@442:2>) && <fail_1487@445:0>)
        |- P[<fail_1487@445:0>](<fail_1487@445:0>:bool)
        
        P[<make_array_1030@420:1>](<make_array_1030@420:0>:int,<make_array_1030@420:1>:int),
        ((0 <= <make_array_1030@420:1>) &&
         ((<make_array_1030@420:1> < <make_array_1030@420:0>) &&
          (<<make_array_1030@420:2>@432:0> = <make_array_1030@420:1>)))
        |- P[<<make_array_1030@420:2>@432:0>](<make_array_1030@420:0>:int,
                                              <make_array_1030@420:1>:int,
                                              <<make_array_1030@420:2>@432:0>:int)
        
        P[<<array_max_1033@344:3>@379:0>](<make_array_1030@420:0>:int,0:int,<check_1148@383:2>:int),
        P[<<check_1148@383:3>@418:0>](<make_array_1030@420:0>:int,0:int,<check_1148@383:2>:int,<make_array_1030@420:1>:int)|- P[<make_array_1030@420:1>](
        <make_array_1030@420:0>:int,<make_array_1030@420:1>:int)
        
        P[<check_1148@383:2>](<check_1148@383:0>:int,<check_1148@383:1>:int,<check_1148@383:2>:int),
        P[<<check_1148@409:3>@412:0>](<check_1148@383:0>:int,(1 + <check_1148@383:1>):int,<check_1148@383:2>:int,<<check_1148@383:3>@418:0>:int),
        (<check_1148@383:1> < <check_1148@383:0>)
        |- P[<<check_1148@383:3>@418:0>](<check_1148@383:0>:int,<check_1148@383:1>:int,
                                         <check_1148@383:2>:int,<<check_1148@383:3>@418:0>:int)
        
        P[<check_1148@409:2>](<check_1148@409:0>:int,<check_1148@409:1>:int,<check_1148@409:2>:int),
        ((<check_1148@409:1> < <check_1148@409:0>) && (<<check_1148@409:3>@412:0> = <check_1148@409:1>))
        |- P[<<check_1148@409:3>@412:0>](<check_1148@409:0>:int,<check_1148@409:1>:int,
                                         <check_1148@409:2>:int,<<check_1148@409:3>@412:0>:int)
        
        P[<check_1148@383:2>](<check_1148@409:0>:int,(-1 + <check_1148@409:1>):int,<check_1148@409:2>:int),
        (<check_1148@409:1> < (1 + <check_1148@409:0>))
        |- P[<check_1148@409:2>](<check_1148@409:0>:int,<check_1148@409:1>:int,
                                 <check_1148@409:2>:int)
        
        P[<make_array_1030@388:1>](<make_array_1030@388:0>:int,<make_array_1030@388:1>:int),
        ((0 <= <make_array_1030@388:1>) &&
         ((<make_array_1030@388:1> < <make_array_1030@388:0>) &&
          (<<make_array_1030@388:2>@400:0> = <make_array_1030@388:1>)))
        |- P[<<make_array_1030@388:2>@400:0>](<make_array_1030@388:0>:int,
                                              <make_array_1030@388:1>:int,
                                              <<make_array_1030@388:2>@400:0>:int)
        
        P[<<array_max_1033@344:3>@379:0>](<make_array_1030@388:0>:int,0:int,<check_1148@383:2>:int),
        P[<<check_1148@383:3>@386:0>](<make_array_1030@388:0>:int,0:int,<check_1148@383:2>:int,<make_array_1030@388:1>:int)|- P[<make_array_1030@388:1>](
        <make_array_1030@388:0>:int,<make_array_1030@388:1>:int)
        
        P[<check_1148@383:2>](<check_1148@383:0>:int,<check_1148@383:1>:int,<check_1148@383:2>:int),
        ((<check_1148@383:1> < <check_1148@383:0>) && (<<check_1148@383:3>@386:0> = <check_1148@383:1>))
        |- P[<<check_1148@383:3>@386:0>](<check_1148@383:0>:int,<check_1148@383:1>:int,
                                         <check_1148@383:2>:int,<<check_1148@383:3>@386:0>:int)
        
        P[<<array_max_1033@344:3>@379:0>](<check_1148@383:0>:int,0:int,<check_1148@383:2>:int),
        (<check_1148@383:1> = 0)
        |- P[<check_1148@383:2>](<check_1148@383:0>:int,<check_1148@383:1>:int,
                                 <check_1148@383:2>:int)
        
        P[<array_max_1033@344:1>](<array_max_1033@344:0>:int,<array_max_1033@344:1>:int),
        P[<<<array_max_1033@344:2>@347:1>@363:0>](<array_max_1033@344:0>:int,<array_max_1033@344:1>:int,<array_max_1033@344:1>:int,var1518:int),
        P[<<array_max_1033@367:3>@370:0>](<array_max_1033@344:0>:int,(
                                          1 + <array_max_1033@344:1>):int,<<array_max_1033@344:3>@379:0>:int),
        ((var1518 <= <<array_max_1033@344:3>@379:0>) && (<array_max_1033@344:1> < <array_max_1033@344:0>))
        |- P[<<array_max_1033@344:3>@379:0>](<array_max_1033@344:0>:int,
                                             <array_max_1033@344:1>:int,
                                             <<array_max_1033@344:3>@379:0>:int)
        
        P[<array_max_1033@367:1>](<array_max_1033@367:0>:int,<array_max_1033@367:1>:int),
        ((<<array_max_1033@367:3>@370:0> = 0) && (<array_max_1033@367:1> >= <array_max_1033@367:0>))
        |- P[<<array_max_1033@367:3>@370:0>](<array_max_1033@367:0>:int,
                                             <array_max_1033@367:1>:int,
                                             <<array_max_1033@367:3>@370:0>:int)
        
        P[<array_max_1033@344:1>](<array_max_1033@367:0>:int,(-1 + <array_max_1033@367:1>):int),
        P[<<<array_max_1033@344:2>@347:1>@363:0>](<array_max_1033@367:0>:int,(
                                                  -1 + <array_max_1033@367:1>):int,(
                                                  -1 + <array_max_1033@367:1>):int,<f_array_max_1480@365:4>:int),
        (<array_max_1033@367:1> < (1 + <array_max_1033@367:0>))
        |- P[<array_max_1033@367:1>](<array_max_1033@367:0>:int,<array_max_1033@367:1>:int)
        
        P[<<make_array_1030@349:2>@361:0>](<array_max_1033@344:0>:int,<<array_max_1033@344:2>@347:0>:int,<<<array_max_1033@344:2>@347:1>@363:0>:int),
        P[<array_max_1033@344:1>](<array_max_1033@344:0>:int,<array_max_1033@344:1>:int), (
        <array_max_1033@344:1> = 0)
        |- P[<<<array_max_1033@344:2>@347:1>@363:0>](<array_max_1033@344:0>:int,
                                                     <array_max_1033@344:1>:int,
                                                     <<array_max_1033@344:2>@347:0>:int,
                                                     <<<array_max_1033@344:2>@347:1>@363:0>:int)
        
        P[<make_array_1030@349:1>](<make_array_1030@349:0>:int,<make_array_1030@349:1>:int),
        ((0 <= <make_array_1030@349:1>) &&
         ((<make_array_1030@349:1> < <make_array_1030@349:0>) &&
          (<<make_array_1030@349:2>@361:0> = <make_array_1030@349:1>)))
        |- P[<<make_array_1030@349:2>@361:0>](<make_array_1030@349:0>:int,
                                              <make_array_1030@349:1>:int,
                                              <<make_array_1030@349:2>@361:0>:int)
        
        P[<<array_max_1033@344:2>@347:0>](<make_array_1030@349:0>:int,0:int,<make_array_1030@349:1>:int)|- P[<make_array_1030@349:1>](
        <make_array_1030@349:0>:int,<make_array_1030@349:1>:int)
        
        P[<array_max_1033@344:1>](<array_max_1033@344:0>:int,<array_max_1033@344:1>:int),
        ((<array_max_1033@344:1> < <array_max_1033@344:0>) && (<<array_max_1033@344:2>@347:0> = <array_max_1033@344:1>))
        |- P[<<array_max_1033@344:2>@347:0>](<array_max_1033@344:0>:int,
                                             <array_max_1033@344:1>:int,
                                             <<array_max_1033@344:2>@347:0>:int)
        
         (<array_max_1033@344:1> = 0)
        |- P[<array_max_1033@344:1>](<array_max_1033@344:0>:int,<array_max_1033@344:1>:int)
      lower bounds:
        P[<array_max_1033@344:1>](<array_max_1033@344:0>:int,<array_max_1033@344:1>:int) = (<array_max_1033@344:1> = 0)
        P[<<array_max_1033@344:2>@347:0>](<array_max_1033@344:0>:int,<array_max_1033@344:1>:int,<<array_max_1033@344:2>@347:0>:int) =
        ((<array_max_1033@344:1> = 0) &&
         ((<array_max_1033@344:1> < <array_max_1033@344:0>) &&
          (<<array_max_1033@344:2>@347:0> = <array_max_1033@344:1>)))
        P[<make_array_1030@349:1>](<make_array_1030@349:0>:int,<make_array_1030@349:1>:int) =
        ((<make_array_1030@349:1> = 0) && (0 < <make_array_1030@349:0>))
        P[<<make_array_1030@349:2>@361:0>](<make_array_1030@349:0>:int,<make_array_1030@349:1>:int,<<make_array_1030@349:2>@361:0>:int) =
        ((<make_array_1030@349:1> = 0) &&
         ((<make_array_1030@349:1> < <make_array_1030@349:0>) &&
          ((0 < <make_array_1030@349:0>) && (<<make_array_1030@349:2>@361:0> = <make_array_1030@349:1>))))
        P[<<<array_max_1033@344:2>@347:1>@363:0>](<array_max_1033@344:0>:int,<array_max_1033@344:1>:int,<<array_max_1033@344:2>@347:0>:int,<<<array_max_1033@344:2>@347:1>@363:0>:int) =
        ((<<array_max_1033@344:2>@347:0> = 0) &&
         ((<array_max_1033@344:1> = 0) &&
          ((<<array_max_1033@344:2>@347:0> < <array_max_1033@344:0>) &&
           ((0 < <array_max_1033@344:0>) && (<<<array_max_1033@344:2>@347:1>@363:0> = <<array_max_1033@344:2>@347:0>)))))
        P[<array_max_1033@367:1>](<array_max_1033@367:0>:int,<array_max_1033@367:1>:int) =
        ((<array_max_1033@367:1> = 1) &&
         ((0 < <array_max_1033@367:0>) && (<array_max_1033@367:1> < (1 + <array_max_1033@367:0>))))
        P[<<array_max_1033@367:3>@370:0>](<array_max_1033@367:0>:int,<array_max_1033@367:1>:int,<<array_max_1033@367:3>@370:0>:int) =
        ((<<array_max_1033@367:3>@370:0> = 0) &&
         ((<array_max_1033@367:1> = 1) &&
          ((0 < <array_max_1033@367:0>) && (<array_max_1033@367:1> = <array_max_1033@367:0>))))
        P[<<array_max_1033@344:3>@379:0>](<array_max_1033@344:0>:int,<array_max_1033@344:1>:int,<<array_max_1033@344:3>@379:0>:int) =
        ((<<array_max_1033@344:3>@379:0> = 0) &&
         ((<array_max_1033@344:1> = 0) &&
          (((1 + <array_max_1033@344:1>) = <array_max_1033@344:0>) && (0 < <array_max_1033@344:0>))))
        P[<check_1148@383:2>](<check_1148@383:0>:int,<check_1148@383:1>:int,<check_1148@383:2>:int) =
        ((<check_1148@383:1> = 0) && ((<check_1148@383:2> = 0) && (<check_1148@383:0> = 1)))
        P[<check_1148@409:2>](<check_1148@409:0>:int,<check_1148@409:1>:int,<check_1148@409:2>:int) =
        ((<check_1148@409:1> = 1) && ((<check_1148@409:2> = 0) && (<check_1148@409:0> = 1)))
        P[<<check_1148@383:3>@386:0>](<check_1148@383:0>:int,<check_1148@383:1>:int,<check_1148@383:2>:int,<<check_1148@383:3>@386:0>:int) =
        ((<check_1148@383:1> = 0) &&
         ((<check_1148@383:2> = 0) && ((<check_1148@383:0> = 1) && (<<check_1148@383:3>@386:0> = <check_1148@383:1>))))
        P[<fail_1487@445:0>](<fail_1487@445:0>:bool) = false
        P[<<check_1148@409:3>@412:0>](<check_1148@409:0>:int,<check_1148@409:1>:int,<check_1148@409:2>:int,<<check_1148@409:3>@412:0>:int) =
        false
        P[<make_array_1030@388:1>](<make_array_1030@388:0>:int,<make_array_1030@388:1>:int) =
        ((<make_array_1030@388:1> = 0) && (<make_array_1030@388:0> = 1))
        P[<<check_1148@383:3>@418:0>](<check_1148@383:0>:int,<check_1148@383:1>:int,<check_1148@383:2>:int,<<check_1148@383:3>@418:0>:int) =
        false
        P[<<make_array_1030@388:2>@400:0>](<make_array_1030@388:0>:int,<make_array_1030@388:1>:int,<<make_array_1030@388:2>@400:0>:int) =
        ((<make_array_1030@388:1> = 0) &&
         ((<make_array_1030@388:0> = 1) && (<<make_array_1030@388:2>@400:0> = <make_array_1030@388:1>)))
        P[<make_array_1030@420:1>](<make_array_1030@420:0>:int,<make_array_1030@420:1>:int) = false
        P[<<make_array_1030@420:2>@432:0>](<make_array_1030@420:0>:int,<make_array_1030@420:1>:int,<<make_array_1030@420:2>@432:0>:int) =
        false
      upper bounds:
        P[<<make_array_1030@420:2>@432:0>](var1581:int,var1582:int,var1583:int) = true
        P[<<make_array_1030@388:2>@400:0>](var1578:int,var1579:int,var1580:int) = true
        P[<<make_array_1030@349:2>@361:0>](var1575:int,var1576:int,var1577:int) = true
      begin GenHcSolver.classify_pids(732113)[4]
        output:
          [<<make_array_1030@349:2>@361:0>;<<make_array_1030@388:2>@400:0>;<<make_array_1030@420:2>@432:0>]
      end GenHcSolver.classify_pids(732113)[4] (0.000000 sec.)
      begin ApronInterface.convex_hull_interpolate(732134)[4]
        lb:(((<make_array_1030@349:1> = 0) &&
             ((<make_array_1030@349:1> < <make_array_1030@349:0>) &&
              ((0 < <make_array_1030@349:0>) && (<<make_array_1030@349:2>@361:0> = <make_array_1030@349:1>)))) ||
            ((<make_array_1030@349:1> = 0) &&
             ((<make_array_1030@349:0> = 1) && (<<make_array_1030@349:2>@361:0> = <make_array_1030@349:1>))))
        nub:false
        lb':(((<make_array_1030@349:1> = 0) &&
              ((<make_array_1030@349:1> < <make_array_1030@349:0>) &&
               ((0 < <make_array_1030@349:0>) && (<<make_array_1030@349:2>@361:0> = <make_array_1030@349:1>)))) ||
             ((<make_array_1030@349:1> = 0) &&
              ((<make_array_1030@349:0> = 1) && (<<make_array_1030@349:2>@361:0> = <make_array_1030@349:1>))))
        nub':false
        begin InterpProver.interpolate(732135)[5]
          begin InterpProver.interpolate_fresh(732136)[6]
            begin InterpProver.interpolate_log(732137)[7]
              input1: (((<make_array_1030@349:1> = 0) &&
                        ((<make_array_1030@349:1> < <make_array_1030@349:0>) &&
                         ((0 < <make_array_1030@349:0>) && (<<make_array_1030@349:2>@361:0> = <make_array_1030@349:1>)))) ||
                       ((<make_array_1030@349:1> = 0) &&
                        ((<make_array_1030@349:0> = 1) && (<<make_array_1030@349:2>@361:0> = <make_array_1030@349:1>))))
              input2: false
              begin InterpProver.interpolate_check(732138)[8]
                begin InterpProver.interpolate_simplify(732139)[9]
                  begin InterpProver.interpolate_quick(732297)[10]
                    
                  end InterpProver.interpolate_quick(732297)[10] (0.000000 sec.)
                  
                end InterpProver.interpolate_simplify(732139)[9] (0.000999 sec.)
                
              end InterpProver.interpolate_check(732138)[8] (0.000999 sec.)
              output: true
            end InterpProver.interpolate_log(732137)[7] (0.000999 sec.)
            
          end InterpProver.interpolate_fresh(732136)[6] (0.000999 sec.)
          
        end InterpProver.interpolate(732135)[5] (0.000999 sec.)
        output:
          P[<<make_array_1030@349:2>@361:0>](<make_array_1030@349:0>:int,<make_array_1030@349:1>:int,<<make_array_1030@349:2>@361:0>:int) =
          true
          P[<<make_array_1030@388:2>@400:0>](<make_array_1030@349:0>:int,<make_array_1030@349:1>:int,<<make_array_1030@349:2>@361:0>:int) =
          true
          P[<<make_array_1030@420:2>@432:0>](<make_array_1030@349:0>:int,<make_array_1030@349:1>:int,<<make_array_1030@349:2>@361:0>:int) =
          true
      end ApronInterface.convex_hull_interpolate(732134)[4] (0.001999 sec.)
      Horn clauses:
        P[<fail_1487@445:0>](<fail_1487@445:0>:bool)|- bot
        
        P[<check_1148@409:2>](<f_check_1482@442:2>:int,<f_check_1482@442:0>:int,<f_check_1482@442:1>:int),
        ((<f_check_1482@442:0> < <f_check_1482@442:2>) && <fail_1487@445:0>)
        |- P[<fail_1487@445:0>](<fail_1487@445:0>:bool)
        
        P[<<array_max_1033@344:3>@379:0>](<make_array_1030@420:0>:int,0:int,<check_1148@383:2>:int),
        P[<<check_1148@383:3>@418:0>](<make_array_1030@420:0>:int,0:int,<check_1148@383:2>:int,<make_array_1030@420:1>:int)|- P[<make_array_1030@420:1>](
        <make_array_1030@420:0>:int,<make_array_1030@420:1>:int)
        
        P[<check_1148@383:2>](<check_1148@383:0>:int,<check_1148@383:1>:int,<check_1148@383:2>:int),
        P[<<check_1148@409:3>@412:0>](<check_1148@383:0>:int,(1 + <check_1148@383:1>):int,<check_1148@383:2>:int,<<check_1148@383:3>@418:0>:int),
        (<check_1148@383:1> < <check_1148@383:0>)
        |- P[<<check_1148@383:3>@418:0>](<check_1148@383:0>:int,<check_1148@383:1>:int,
                                         <check_1148@383:2>:int,<<check_1148@383:3>@418:0>:int)
        
        P[<check_1148@409:2>](<check_1148@409:0>:int,<check_1148@409:1>:int,<check_1148@409:2>:int),
        ((<check_1148@409:1> < <check_1148@409:0>) && (<<check_1148@409:3>@412:0> = <check_1148@409:1>))
        |- P[<<check_1148@409:3>@412:0>](<check_1148@409:0>:int,<check_1148@409:1>:int,
                                         <check_1148@409:2>:int,<<check_1148@409:3>@412:0>:int)
        
        P[<check_1148@383:2>](<check_1148@409:0>:int,(-1 + <check_1148@409:1>):int,<check_1148@409:2>:int),
        (<check_1148@409:1> < (1 + <check_1148@409:0>))
        |- P[<check_1148@409:2>](<check_1148@409:0>:int,<check_1148@409:1>:int,
                                 <check_1148@409:2>:int)
        
        P[<<array_max_1033@344:3>@379:0>](<make_array_1030@388:0>:int,0:int,<check_1148@383:2>:int),
        P[<<check_1148@383:3>@386:0>](<make_array_1030@388:0>:int,0:int,<check_1148@383:2>:int,<make_array_1030@388:1>:int)|- P[<make_array_1030@388:1>](
        <make_array_1030@388:0>:int,<make_array_1030@388:1>:int)
        
        P[<check_1148@383:2>](<check_1148@383:0>:int,<check_1148@383:1>:int,<check_1148@383:2>:int),
        ((<check_1148@383:1> < <check_1148@383:0>) && (<<check_1148@383:3>@386:0> = <check_1148@383:1>))
        |- P[<<check_1148@383:3>@386:0>](<check_1148@383:0>:int,<check_1148@383:1>:int,
                                         <check_1148@383:2>:int,<<check_1148@383:3>@386:0>:int)
        
        P[<<array_max_1033@344:3>@379:0>](<check_1148@383:0>:int,0:int,<check_1148@383:2>:int),
        (<check_1148@383:1> = 0)
        |- P[<check_1148@383:2>](<check_1148@383:0>:int,<check_1148@383:1>:int,
                                 <check_1148@383:2>:int)
        
        P[<array_max_1033@344:1>](<array_max_1033@344:0>:int,<array_max_1033@344:1>:int),
        P[<<<array_max_1033@344:2>@347:1>@363:0>](<array_max_1033@344:0>:int,<array_max_1033@344:1>:int,<array_max_1033@344:1>:int,var1518:int),
        P[<<array_max_1033@367:3>@370:0>](<array_max_1033@344:0>:int,(
                                          1 + <array_max_1033@344:1>):int,<<array_max_1033@344:3>@379:0>:int),
        ((var1518 <= <<array_max_1033@344:3>@379:0>) && (<array_max_1033@344:1> < <array_max_1033@344:0>))
        |- P[<<array_max_1033@344:3>@379:0>](<array_max_1033@344:0>:int,
                                             <array_max_1033@344:1>:int,
                                             <<array_max_1033@344:3>@379:0>:int)
        
        P[<array_max_1033@367:1>](<array_max_1033@367:0>:int,<array_max_1033@367:1>:int),
        ((<<array_max_1033@367:3>@370:0> = 0) && (<array_max_1033@367:1> >= <array_max_1033@367:0>))
        |- P[<<array_max_1033@367:3>@370:0>](<array_max_1033@367:0>:int,
                                             <array_max_1033@367:1>:int,
                                             <<array_max_1033@367:3>@370:0>:int)
        
        P[<array_max_1033@344:1>](<array_max_1033@367:0>:int,(-1 + <array_max_1033@367:1>):int),
        P[<<<array_max_1033@344:2>@347:1>@363:0>](<array_max_1033@367:0>:int,(
                                                  -1 + <array_max_1033@367:1>):int,(
                                                  -1 + <array_max_1033@367:1>):int,<f_array_max_1480@365:4>:int),
        (<array_max_1033@367:1> < (1 + <array_max_1033@367:0>))
        |- P[<array_max_1033@367:1>](<array_max_1033@367:0>:int,<array_max_1033@367:1>:int)
        
        P[<array_max_1033@344:1>](<array_max_1033@344:0>:int,<array_max_1033@344:1>:int), (
        <array_max_1033@344:1> = 0)
        |- P[<<<array_max_1033@344:2>@347:1>@363:0>](<array_max_1033@344:0>:int,
                                                     <array_max_1033@344:1>:int,
                                                     <<array_max_1033@344:2>@347:0>:int,
                                                     <<<array_max_1033@344:2>@347:1>@363:0>:int)
        
        P[<<array_max_1033@344:2>@347:0>](<make_array_1030@349:0>:int,0:int,<make_array_1030@349:1>:int)|- P[<make_array_1030@349:1>](
        <make_array_1030@349:0>:int,<make_array_1030@349:1>:int)
        
        P[<array_max_1033@344:1>](<array_max_1033@344:0>:int,<array_max_1033@344:1>:int),
        ((<array_max_1033@344:1> < <array_max_1033@344:0>) && (<<array_max_1033@344:2>@347:0> = <array_max_1033@344:1>))
        |- P[<<array_max_1033@344:2>@347:0>](<array_max_1033@344:0>:int,
                                             <array_max_1033@344:1>:int,
                                             <<array_max_1033@344:2>@347:0>:int)
        
         (<array_max_1033@344:1> = 0)
        |- P[<array_max_1033@344:1>](<array_max_1033@344:0>:int,<array_max_1033@344:1>:int)
      lower bounds:
        P[<array_max_1033@344:1>](<array_max_1033@344:0>:int,<array_max_1033@344:1>:int) = (<array_max_1033@344:1> = 0)
        P[<<<array_max_1033@344:2>@347:1>@363:0>](<array_max_1033@344:0>:int,<array_max_1033@344:1>:int,<<array_max_1033@344:2>@347:0>:int,<<<array_max_1033@344:2>@347:1>@363:0>:int) =
        (<array_max_1033@344:1> = 0)
        P[<<array_max_1033@344:2>@347:0>](<array_max_1033@344:0>:int,<array_max_1033@344:1>:int,<<array_max_1033@344:2>@347:0>:int) =
        ((<array_max_1033@344:1> = 0) &&
         ((<array_max_1033@344:1> < <array_max_1033@344:0>) &&
          (<<array_max_1033@344:2>@347:0> = <array_max_1033@344:1>)))
        P[<array_max_1033@367:1>](<array_max_1033@367:0>:int,<array_max_1033@367:1>:int) =
        ((<array_max_1033@367:1> = 1) && (<array_max_1033@367:1> < (1 + <array_max_1033@367:0>)))
        P[<make_array_1030@349:1>](<make_array_1030@349:0>:int,<make_array_1030@349:1>:int) =
        ((<make_array_1030@349:1> = 0) && (0 < <make_array_1030@349:0>))
        P[<<array_max_1033@367:3>@370:0>](<array_max_1033@367:0>:int,<array_max_1033@367:1>:int,<<array_max_1033@367:3>@370:0>:int) =
        ((<<array_max_1033@367:3>@370:0> = 0) &&
         ((<array_max_1033@367:1> = 1) && (<array_max_1033@367:1> = <array_max_1033@367:0>)))
        P[<<array_max_1033@344:3>@379:0>](<array_max_1033@344:0>:int,<array_max_1033@344:1>:int,<<array_max_1033@344:3>@379:0>:int) =
        ((<<array_max_1033@344:3>@379:0> = 0) &&
         ((<array_max_1033@344:1> = 0) && ((1 + <array_max_1033@344:1>) = <array_max_1033@344:0>)))
        P[<check_1148@383:2>](<check_1148@383:0>:int,<check_1148@383:1>:int,<check_1148@383:2>:int) =
        ((<check_1148@383:1> = 0) && ((<check_1148@383:2> = 0) && (<check_1148@383:0> = 1)))
        P[<check_1148@409:2>](<check_1148@409:0>:int,<check_1148@409:1>:int,<check_1148@409:2>:int) =
        ((<check_1148@409:1> = 1) && ((<check_1148@409:2> = 0) && (<check_1148@409:0> = 1)))
        P[<<check_1148@383:3>@386:0>](<check_1148@383:0>:int,<check_1148@383:1>:int,<check_1148@383:2>:int,<<check_1148@383:3>@386:0>:int) =
        ((<check_1148@383:1> = 0) &&
         ((<check_1148@383:2> = 0) && ((<check_1148@383:0> = 1) && (<<check_1148@383:3>@386:0> = <check_1148@383:1>))))
        P[<fail_1487@445:0>](<fail_1487@445:0>:bool) = false
        P[<<check_1148@409:3>@412:0>](<check_1148@409:0>:int,<check_1148@409:1>:int,<check_1148@409:2>:int,<<check_1148@409:3>@412:0>:int) =
        false
        P[<make_array_1030@388:1>](<make_array_1030@388:0>:int,<make_array_1030@388:1>:int) =
        ((<make_array_1030@388:1> = 0) && (<make_array_1030@388:0> = 1))
        P[<<check_1148@383:3>@418:0>](<check_1148@383:0>:int,<check_1148@383:1>:int,<check_1148@383:2>:int,<<check_1148@383:3>@418:0>:int) =
        false
        P[<make_array_1030@420:1>](<make_array_1030@420:0>:int,<make_array_1030@420:1>:int) = false
      upper bounds:
        P[<make_array_1030@420:1>](var1588:int,var1589:int) = true
        P[<make_array_1030@388:1>](var1586:int,var1587:int) = true
        P[<make_array_1030@349:1>](var1584:int,var1585:int) = true
      begin GenHcSolver.classify_pids(752992)[4]
        output:
          [<make_array_1030@349:1>;<make_array_1030@388:1>;<make_array_1030@420:1>]
      end GenHcSolver.classify_pids(752992)[4] (0.000000 sec.)
      begin ApronInterface.convex_hull_interpolate(753013)[4]
        lb:(((<make_array_1030@349:1> = 0) && (0 < <make_array_1030@349:0>)) ||
            ((<make_array_1030@349:1> = 0) && (<make_array_1030@349:0> = 1)))
        nub:false
        lb':(((<make_array_1030@349:1> = 0) && (0 < <make_array_1030@349:0>)) ||
             ((<make_array_1030@349:1> = 0) && (<make_array_1030@349:0> = 1)))
        nub':false
        begin InterpProver.interpolate(753014)[5]
          begin InterpProver.interpolate_fresh(753015)[6]
            begin InterpProver.interpolate_log(753016)[7]
              input1: (((<make_array_1030@349:1> = 0) && (0 < <make_array_1030@349:0>)) ||
                       ((<make_array_1030@349:1> = 0) && (<make_array_1030@349:0> = 1)))
              input2: false
              begin InterpProver.interpolate_check(753017)[8]
                begin InterpProver.interpolate_simplify(753018)[9]
                  begin InterpProver.interpolate_quick(753069)[10]
                    
                  end InterpProver.interpolate_quick(753069)[10] (0.001000 sec.)
                  
                end InterpProver.interpolate_simplify(753018)[9] (0.001000 sec.)
                
              end InterpProver.interpolate_check(753017)[8] (0.001000 sec.)
              output: true
            end InterpProver.interpolate_log(753016)[7] (0.001000 sec.)
            
          end InterpProver.interpolate_fresh(753015)[6] (0.001000 sec.)
          
        end InterpProver.interpolate(753014)[5] (0.001000 sec.)
        output:
          P[<make_array_1030@349:1>](<make_array_1030@349:0>:int,<make_array_1030@349:1>:int) = true
          P[<make_array_1030@388:1>](<make_array_1030@349:0>:int,<make_array_1030@349:1>:int) = true
          P[<make_array_1030@420:1>](<make_array_1030@349:0>:int,<make_array_1030@349:1>:int) = true
      end ApronInterface.convex_hull_interpolate(753013)[4] (0.001000 sec.)
      Horn clauses:
        P[<fail_1487@445:0>](<fail_1487@445:0>:bool)|- bot
        
        P[<check_1148@409:2>](<f_check_1482@442:2>:int,<f_check_1482@442:0>:int,<f_check_1482@442:1>:int),
        ((<f_check_1482@442:0> < <f_check_1482@442:2>) && <fail_1487@445:0>)
        |- P[<fail_1487@445:0>](<fail_1487@445:0>:bool)
        
        P[<check_1148@383:2>](<check_1148@383:0>:int,<check_1148@383:1>:int,<check_1148@383:2>:int),
        P[<<check_1148@409:3>@412:0>](<check_1148@383:0>:int,(1 + <check_1148@383:1>):int,<check_1148@383:2>:int,<<check_1148@383:3>@418:0>:int),
        (<check_1148@383:1> < <check_1148@383:0>)
        |- P[<<check_1148@383:3>@418:0>](<check_1148@383:0>:int,<check_1148@383:1>:int,
                                         <check_1148@383:2>:int,<<check_1148@383:3>@418:0>:int)
        
        P[<check_1148@409:2>](<check_1148@409:0>:int,<check_1148@409:1>:int,<check_1148@409:2>:int),
        ((<check_1148@409:1> < <check_1148@409:0>) && (<<check_1148@409:3>@412:0> = <check_1148@409:1>))
        |- P[<<check_1148@409:3>@412:0>](<check_1148@409:0>:int,<check_1148@409:1>:int,
                                         <check_1148@409:2>:int,<<check_1148@409:3>@412:0>:int)
        
        P[<check_1148@383:2>](<check_1148@409:0>:int,(-1 + <check_1148@409:1>):int,<check_1148@409:2>:int),
        (<check_1148@409:1> < (1 + <check_1148@409:0>))
        |- P[<check_1148@409:2>](<check_1148@409:0>:int,<check_1148@409:1>:int,
                                 <check_1148@409:2>:int)
        
        P[<check_1148@383:2>](<check_1148@383:0>:int,<check_1148@383:1>:int,<check_1148@383:2>:int),
        ((<check_1148@383:1> < <check_1148@383:0>) && (<<check_1148@383:3>@386:0> = <check_1148@383:1>))
        |- P[<<check_1148@383:3>@386:0>](<check_1148@383:0>:int,<check_1148@383:1>:int,
                                         <check_1148@383:2>:int,<<check_1148@383:3>@386:0>:int)
        
        P[<<array_max_1033@344:3>@379:0>](<check_1148@383:0>:int,0:int,<check_1148@383:2>:int),
        (<check_1148@383:1> = 0)
        |- P[<check_1148@383:2>](<check_1148@383:0>:int,<check_1148@383:1>:int,
                                 <check_1148@383:2>:int)
        
        P[<array_max_1033@344:1>](<array_max_1033@344:0>:int,<array_max_1033@344:1>:int),
        P[<<<array_max_1033@344:2>@347:1>@363:0>](<array_max_1033@344:0>:int,<array_max_1033@344:1>:int,<array_max_1033@344:1>:int,var1518:int),
        P[<<array_max_1033@367:3>@370:0>](<array_max_1033@344:0>:int,(
                                          1 + <array_max_1033@344:1>):int,<<array_max_1033@344:3>@379:0>:int),
        ((var1518 <= <<array_max_1033@344:3>@379:0>) && (<array_max_1033@344:1> < <array_max_1033@344:0>))
        |- P[<<array_max_1033@344:3>@379:0>](<array_max_1033@344:0>:int,
                                             <array_max_1033@344:1>:int,
                                             <<array_max_1033@344:3>@379:0>:int)
        
        P[<array_max_1033@367:1>](<array_max_1033@367:0>:int,<array_max_1033@367:1>:int),
        ((<<array_max_1033@367:3>@370:0> = 0) && (<array_max_1033@367:1> >= <array_max_1033@367:0>))
        |- P[<<array_max_1033@367:3>@370:0>](<array_max_1033@367:0>:int,
                                             <array_max_1033@367:1>:int,
                                             <<array_max_1033@367:3>@370:0>:int)
        
        P[<array_max_1033@344:1>](<array_max_1033@367:0>:int,(-1 + <array_max_1033@367:1>):int),
        P[<<<array_max_1033@344:2>@347:1>@363:0>](<array_max_1033@367:0>:int,(
                                                  -1 + <array_max_1033@367:1>):int,(
                                                  -1 + <array_max_1033@367:1>):int,<f_array_max_1480@365:4>:int),
        (<array_max_1033@367:1> < (1 + <array_max_1033@367:0>))
        |- P[<array_max_1033@367:1>](<array_max_1033@367:0>:int,<array_max_1033@367:1>:int)
        
        P[<array_max_1033@344:1>](<array_max_1033@344:0>:int,<array_max_1033@344:1>:int), (
        <array_max_1033@344:1> = 0)
        |- P[<<<array_max_1033@344:2>@347:1>@363:0>](<array_max_1033@344:0>:int,
                                                     <array_max_1033@344:1>:int,
                                                     <<array_max_1033@344:2>@347:0>:int,
                                                     <<<array_max_1033@344:2>@347:1>@363:0>:int)
        
        P[<array_max_1033@344:1>](<array_max_1033@344:0>:int,<array_max_1033@344:1>:int),
        ((<array_max_1033@344:1> < <array_max_1033@344:0>) && (<<array_max_1033@344:2>@347:0> = <array_max_1033@344:1>))
        |- P[<<array_max_1033@344:2>@347:0>](<array_max_1033@344:0>:int,
                                             <array_max_1033@344:1>:int,
                                             <<array_max_1033@344:2>@347:0>:int)
        
         (<array_max_1033@344:1> = 0)
        |- P[<array_max_1033@344:1>](<array_max_1033@344:0>:int,<array_max_1033@344:1>:int)
      lower bounds:
        P[<array_max_1033@344:1>](<array_max_1033@344:0>:int,<array_max_1033@344:1>:int) = (<array_max_1033@344:1> = 0)
        P[<<<array_max_1033@344:2>@347:1>@363:0>](<array_max_1033@344:0>:int,<array_max_1033@344:1>:int,<<array_max_1033@344:2>@347:0>:int,<<<array_max_1033@344:2>@347:1>@363:0>:int) =
        (<array_max_1033@344:1> = 0)
        P[<<array_max_1033@344:2>@347:0>](<array_max_1033@344:0>:int,<array_max_1033@344:1>:int,<<array_max_1033@344:2>@347:0>:int) =
        ((<array_max_1033@344:1> = 0) &&
         ((<array_max_1033@344:1> < <array_max_1033@344:0>) &&
          (<<array_max_1033@344:2>@347:0> = <array_max_1033@344:1>)))
        P[<array_max_1033@367:1>](<array_max_1033@367:0>:int,<array_max_1033@367:1>:int) =
        ((<array_max_1033@367:1> = 1) && (<array_max_1033@367:1> < (1 + <array_max_1033@367:0>)))
        P[<<array_max_1033@367:3>@370:0>](<array_max_1033@367:0>:int,<array_max_1033@367:1>:int,<<array_max_1033@367:3>@370:0>:int) =
        ((<<array_max_1033@367:3>@370:0> = 0) &&
         ((<array_max_1033@367:1> = 1) && (<array_max_1033@367:1> = <array_max_1033@367:0>)))
        P[<<array_max_1033@344:3>@379:0>](<array_max_1033@344:0>:int,<array_max_1033@344:1>:int,<<array_max_1033@344:3>@379:0>:int) =
        ((<<array_max_1033@344:3>@379:0> = 0) &&
         ((<array_max_1033@344:1> = 0) && ((1 + <array_max_1033@344:1>) = <array_max_1033@344:0>)))
        P[<check_1148@383:2>](<check_1148@383:0>:int,<check_1148@383:1>:int,<check_1148@383:2>:int) =
        ((<check_1148@383:1> = 0) && ((<check_1148@383:2> = 0) && (<check_1148@383:0> = 1)))
        P[<check_1148@409:2>](<check_1148@409:0>:int,<check_1148@409:1>:int,<check_1148@409:2>:int) =
        ((<check_1148@409:1> = 1) && ((<check_1148@409:2> = 0) && (<check_1148@409:0> = 1)))
        P[<<check_1148@383:3>@386:0>](<check_1148@383:0>:int,<check_1148@383:1>:int,<check_1148@383:2>:int,<<check_1148@383:3>@386:0>:int) =
        ((<check_1148@383:1> = 0) &&
         ((<check_1148@383:2> = 0) && ((<check_1148@383:0> = 1) && (<<check_1148@383:3>@386:0> = <check_1148@383:1>))))
        P[<fail_1487@445:0>](<fail_1487@445:0>:bool) = false
        P[<<check_1148@409:3>@412:0>](<check_1148@409:0>:int,<check_1148@409:1>:int,<check_1148@409:2>:int,<<check_1148@409:3>@412:0>:int) =
        false
        P[<<check_1148@383:3>@418:0>](<check_1148@383:0>:int,<check_1148@383:1>:int,<check_1148@383:2>:int,<<check_1148@383:3>@418:0>:int) =
        false
      upper bounds:
        P[<<check_1148@383:3>@418:0>](var1598:int,var1599:int,var1600:int,var1601:int) = true
        P[<<check_1148@409:3>@412:0>](var1594:int,var1595:int,var1596:int,var1597:int) = true
        P[<<check_1148@383:3>@386:0>](var1590:int,var1591:int,var1592:int,var1593:int) = true
      begin GenHcSolver.classify_pids(769403)[4]
        output:
          [<<check_1148@409:3>@412:0>;<<check_1148@383:3>@386:0>;<<check_1148@383:3>@418:0>]
      end GenHcSolver.classify_pids(769403)[4] (0.000000 sec.)
      begin ApronInterface.convex_hull_interpolate(769424)[4]
        lb:((<check_1148@409:1> = 0) &&
            ((<check_1148@409:2> = 0) &&
             ((<check_1148@409:0> = 1) && (<<check_1148@409:3>@412:0> = <check_1148@409:1>))))
        nub:false
        lb':((<check_1148@409:1> = 0) &&
             ((<check_1148@409:2> = 0) &&
              ((<check_1148@409:0> = 1) && (<<check_1148@409:3>@412:0> = <check_1148@409:1>))))
        nub':false
        begin InterpProver.interpolate(769425)[5]
          begin InterpProver.interpolate_fresh(769426)[6]
            begin InterpProver.interpolate_log(769427)[7]
              input1: ((<check_1148@409:1> = 0) &&
                       ((<check_1148@409:2> = 0) &&
                        ((<check_1148@409:0> = 1) && (<<check_1148@409:3>@412:0> = <check_1148@409:1>))))
              input2: false
              begin InterpProver.interpolate_check(769428)[8]
                begin InterpProver.interpolate_simplify(769429)[9]
                  begin InterpProver.interpolate_quick(769491)[10]
                    
                  end InterpProver.interpolate_quick(769491)[10] (0.000000 sec.)
                  
                end InterpProver.interpolate_simplify(769429)[9] (0.000000 sec.)
                
              end InterpProver.interpolate_check(769428)[8] (0.000000 sec.)
              output: true
            end InterpProver.interpolate_log(769427)[7] (0.000000 sec.)
            
          end InterpProver.interpolate_fresh(769426)[6] (0.000000 sec.)
          
        end InterpProver.interpolate(769425)[5] (0.000000 sec.)
        output:
          P[<<check_1148@409:3>@412:0>](<check_1148@409:0>:int,<check_1148@409:1>:int,<check_1148@409:2>:int,<<check_1148@409:3>@412:0>:int) =
          true
          P[<<check_1148@383:3>@386:0>](<check_1148@409:0>:int,<check_1148@409:1>:int,<check_1148@409:2>:int,<<check_1148@409:3>@412:0>:int) =
          true
          P[<<check_1148@383:3>@418:0>](<check_1148@409:0>:int,<check_1148@409:1>:int,<check_1148@409:2>:int,<<check_1148@409:3>@412:0>:int) =
          true
      end ApronInterface.convex_hull_interpolate(769424)[4] (0.001000 sec.)
      Horn clauses:
        P[<fail_1487@445:0>](<fail_1487@445:0>:bool)|- bot
        
        P[<check_1148@409:2>](<f_check_1482@442:2>:int,<f_check_1482@442:0>:int,<f_check_1482@442:1>:int),
        ((<f_check_1482@442:0> < <f_check_1482@442:2>) && <fail_1487@445:0>)
        |- P[<fail_1487@445:0>](<fail_1487@445:0>:bool)
        
        P[<check_1148@383:2>](<check_1148@409:0>:int,(-1 + <check_1148@409:1>):int,<check_1148@409:2>:int),
        (<check_1148@409:1> < (1 + <check_1148@409:0>))
        |- P[<check_1148@409:2>](<check_1148@409:0>:int,<check_1148@409:1>:int,
                                 <check_1148@409:2>:int)
        
        P[<<array_max_1033@344:3>@379:0>](<check_1148@383:0>:int,0:int,<check_1148@383:2>:int),
        (<check_1148@383:1> = 0)
        |- P[<check_1148@383:2>](<check_1148@383:0>:int,<check_1148@383:1>:int,
                                 <check_1148@383:2>:int)
        
        P[<array_max_1033@344:1>](<array_max_1033@344:0>:int,<array_max_1033@344:1>:int),
        P[<<<array_max_1033@344:2>@347:1>@363:0>](<array_max_1033@344:0>:int,<array_max_1033@344:1>:int,<array_max_1033@344:1>:int,var1518:int),
        P[<<array_max_1033@367:3>@370:0>](<array_max_1033@344:0>:int,(
                                          1 + <array_max_1033@344:1>):int,<<array_max_1033@344:3>@379:0>:int),
        ((var1518 <= <<array_max_1033@344:3>@379:0>) && (<array_max_1033@344:1> < <array_max_1033@344:0>))
        |- P[<<array_max_1033@344:3>@379:0>](<array_max_1033@344:0>:int,
                                             <array_max_1033@344:1>:int,
                                             <<array_max_1033@344:3>@379:0>:int)
        
        P[<array_max_1033@367:1>](<array_max_1033@367:0>:int,<array_max_1033@367:1>:int),
        ((<<array_max_1033@367:3>@370:0> = 0) && (<array_max_1033@367:1> >= <array_max_1033@367:0>))
        |- P[<<array_max_1033@367:3>@370:0>](<array_max_1033@367:0>:int,
                                             <array_max_1033@367:1>:int,
                                             <<array_max_1033@367:3>@370:0>:int)
        
        P[<array_max_1033@344:1>](<array_max_1033@367:0>:int,(-1 + <array_max_1033@367:1>):int),
        P[<<<array_max_1033@344:2>@347:1>@363:0>](<array_max_1033@367:0>:int,(
                                                  -1 + <array_max_1033@367:1>):int,(
                                                  -1 + <array_max_1033@367:1>):int,<f_array_max_1480@365:4>:int),
        (<array_max_1033@367:1> < (1 + <array_max_1033@367:0>))
        |- P[<array_max_1033@367:1>](<array_max_1033@367:0>:int,<array_max_1033@367:1>:int)
        
        P[<array_max_1033@344:1>](<array_max_1033@344:0>:int,<array_max_1033@344:1>:int), (
        <array_max_1033@344:1> = 0)
        |- P[<<<array_max_1033@344:2>@347:1>@363:0>](<array_max_1033@344:0>:int,
                                                     <array_max_1033@344:1>:int,
                                                     <<array_max_1033@344:2>@347:0>:int,
                                                     <<<array_max_1033@344:2>@347:1>@363:0>:int)
        
        P[<array_max_1033@344:1>](<array_max_1033@344:0>:int,<array_max_1033@344:1>:int),
        ((<array_max_1033@344:1> < <array_max_1033@344:0>) && (<<array_max_1033@344:2>@347:0> = <array_max_1033@344:1>))
        |- P[<<array_max_1033@344:2>@347:0>](<array_max_1033@344:0>:int,
                                             <array_max_1033@344:1>:int,
                                             <<array_max_1033@344:2>@347:0>:int)
        
         (<array_max_1033@344:1> = 0)
        |- P[<array_max_1033@344:1>](<array_max_1033@344:0>:int,<array_max_1033@344:1>:int)
      lower bounds:
        P[<array_max_1033@344:1>](<array_max_1033@344:0>:int,<array_max_1033@344:1>:int) = (<array_max_1033@344:1> = 0)
        P[<<<array_max_1033@344:2>@347:1>@363:0>](<array_max_1033@344:0>:int,<array_max_1033@344:1>:int,<<array_max_1033@344:2>@347:0>:int,<<<array_max_1033@344:2>@347:1>@363:0>:int) =
        (<array_max_1033@344:1> = 0)
        P[<<array_max_1033@344:2>@347:0>](<array_max_1033@344:0>:int,<array_max_1033@344:1>:int,<<array_max_1033@344:2>@347:0>:int) =
        ((<array_max_1033@344:1> = 0) &&
         ((<array_max_1033@344:1> < <array_max_1033@344:0>) &&
          (<<array_max_1033@344:2>@347:0> = <array_max_1033@344:1>)))
        P[<array_max_1033@367:1>](<array_max_1033@367:0>:int,<array_max_1033@367:1>:int) =
        ((<array_max_1033@367:1> = 1) && (<array_max_1033@367:1> < (1 + <array_max_1033@367:0>)))
        P[<<array_max_1033@367:3>@370:0>](<array_max_1033@367:0>:int,<array_max_1033@367:1>:int,<<array_max_1033@367:3>@370:0>:int) =
        ((<<array_max_1033@367:3>@370:0> = 0) &&
         ((<array_max_1033@367:1> = 1) && (<array_max_1033@367:1> = <array_max_1033@367:0>)))
        P[<<array_max_1033@344:3>@379:0>](<array_max_1033@344:0>:int,<array_max_1033@344:1>:int,<<array_max_1033@344:3>@379:0>:int) =
        ((<<array_max_1033@344:3>@379:0> = 0) &&
         ((<array_max_1033@344:1> = 0) && ((1 + <array_max_1033@344:1>) = <array_max_1033@344:0>)))
        P[<check_1148@383:2>](<check_1148@383:0>:int,<check_1148@383:1>:int,<check_1148@383:2>:int) =
        ((<check_1148@383:1> = 0) && ((<check_1148@383:2> = 0) && (<check_1148@383:0> = 1)))
        P[<check_1148@409:2>](<check_1148@409:0>:int,<check_1148@409:1>:int,<check_1148@409:2>:int) =
        ((<check_1148@409:1> = 1) && ((<check_1148@409:2> = 0) && (<check_1148@409:0> = 1)))
        P[<fail_1487@445:0>](<fail_1487@445:0>:bool) = false
      upper bounds:
        P[<check_1148@409:2>](var1611:int,var1612:int,var1613:int) = (var1612 >= var1611)
        P[<check_1148@383:2>](var1605:int,var1606:int,var1607:int) = ((1 + var1606) >= var1605)
      begin GenHcSolver.classify_pids(780413)[4]
        output:
          [<check_1148@409:2>],[<check_1148@383:2>]
      end GenHcSolver.classify_pids(780413)[4] (0.001000 sec.)
      lb:((<check_1148@409:1> = 1) && ((<check_1148@409:2> = 0) && (<check_1148@409:0> = 1)))
      nub:(not (<check_1148@409:1> >= <check_1148@409:0>))
      begin ApronInterface.convex_hull_interpolate(780441)[4]
        lb:((<check_1148@409:1> = 1) && ((<check_1148@409:2> = 0) && (<check_1148@409:0> = 1)))
        nub:(not (<check_1148@409:1> >= <check_1148@409:0>))
        lb':((<check_1148@409:1> = 1) && ((<check_1148@409:2> = 0) && (<check_1148@409:0> = 1)))
        nub':(not (<check_1148@409:1> >= <check_1148@409:0>))
        begin InterpProver.interpolate(780442)[5]
          begin InterpProver.interpolate_fresh(780443)[6]
            begin InterpProver.interpolate_log(780444)[7]
              input1: ((<check_1148@409:1> = 1) && ((<check_1148@409:2> = 0) && (<check_1148@409:0> = 1)))
              input2: (not (<check_1148@409:1> >= <check_1148@409:0>))
              begin InterpProver.interpolate_check(780445)[8]
                begin InterpProver.interpolate_simplify(780446)[9]
                  begin InterpProver.interpolate_quick(780506)[10]
                    begin CsisatInterface.interpolate_csisat_wrap(780515)[11]
                      begin CsisatInterface.interpolate_csisat_post_process(780516)[12]
                        begin CsisatInterface.interpolate_csisat_log(780517)[13]
                          input1: (1 = v_sep_check_1148_sep_409_sep_0 & 1 = v_sep_check_1148_sep_409_sep_1)
                          input2: (1 + v_sep_check_1148_sep_409_sep_1) <= v_sep_check_1148_sep_409_sep_0
                          begin CsisatInterface.interpolate_csisat_raw(780518)[14]
                            
                          end CsisatInterface.interpolate_csisat_raw(780518)[14] (0.000000 sec.)
                          output: (-2*v_sep_check_1148_sep_409_sep_1 + 2*v_sep_check_1148_sep_409_sep_0) <= 0
                          
                        end CsisatInterface.interpolate_csisat_log(780517)[13] (0.000000 sec.)
                        after simplification: (-2*v_sep_check_1148_sep_409_sep_1 + 2*v_sep_check_1148_sep_409_sep_0) <= 0
                        after dnf conversion: (((-2*v_sep_check_1148_sep_409_sep_1 + 2*v_sep_check_1148_sep_409_sep_0) <= 0))
                        
                      end CsisatInterface.interpolate_csisat_post_process(780516)[12] (0.000000 sec.)
                      
                    end CsisatInterface.interpolate_csisat_wrap(780515)[11] (0.000000 sec.)
                    
                  end InterpProver.interpolate_quick(780506)[10] (0.001000 sec.)
                  
                end InterpProver.interpolate_simplify(780446)[9] (0.001000 sec.)
                
              end InterpProver.interpolate_check(780445)[8] (0.002000 sec.)
              output: (<check_1148@409:0> <= <check_1148@409:1>)
            end InterpProver.interpolate_log(780444)[7] (0.002000 sec.)
            
          end InterpProver.interpolate_fresh(780443)[6] (0.002000 sec.)
          
        end InterpProver.interpolate(780442)[5] (0.002000 sec.)
        output:
          P[<check_1148@409:2>](<check_1148@409:0>:int,<check_1148@409:1>:int,<check_1148@409:2>:int) =
          (<check_1148@409:0> <= <check_1148@409:1>)
      end ApronInterface.convex_hull_interpolate(780441)[4] (0.002000 sec.)
      Horn clauses:
        P[<fail_1487@445:0>](<fail_1487@445:0>:bool)|- bot
        
        P[<check_1148@383:2>](<check_1148@409:0>:int,(-1 + <check_1148@409:1>):int,<check_1148@409:2>:int),
        (<check_1148@409:1> < <check_1148@409:0>) |- bot
        
        P[<<array_max_1033@344:3>@379:0>](<check_1148@383:0>:int,0:int,<check_1148@383:2>:int),
        (<check_1148@383:1> = 0)
        |- P[<check_1148@383:2>](<check_1148@383:0>:int,<check_1148@383:1>:int,
                                 <check_1148@383:2>:int)
        
        P[<array_max_1033@344:1>](<array_max_1033@344:0>:int,<array_max_1033@344:1>:int),
        P[<<<array_max_1033@344:2>@347:1>@363:0>](<array_max_1033@344:0>:int,<array_max_1033@344:1>:int,<array_max_1033@344:1>:int,var1518:int),
        P[<<array_max_1033@367:3>@370:0>](<array_max_1033@344:0>:int,(
                                          1 + <array_max_1033@344:1>):int,<<array_max_1033@344:3>@379:0>:int),
        ((var1518 <= <<array_max_1033@344:3>@379:0>) && (<array_max_1033@344:1> < <array_max_1033@344:0>))
        |- P[<<array_max_1033@344:3>@379:0>](<array_max_1033@344:0>:int,
                                             <array_max_1033@344:1>:int,
                                             <<array_max_1033@344:3>@379:0>:int)
        
        P[<array_max_1033@367:1>](<array_max_1033@367:0>:int,<array_max_1033@367:1>:int),
        ((<<array_max_1033@367:3>@370:0> = 0) && (<array_max_1033@367:1> >= <array_max_1033@367:0>))
        |- P[<<array_max_1033@367:3>@370:0>](<array_max_1033@367:0>:int,
                                             <array_max_1033@367:1>:int,
                                             <<array_max_1033@367:3>@370:0>:int)
        
        P[<array_max_1033@344:1>](<array_max_1033@367:0>:int,(-1 + <array_max_1033@367:1>):int),
        P[<<<array_max_1033@344:2>@347:1>@363:0>](<array_max_1033@367:0>:int,(
                                                  -1 + <array_max_1033@367:1>):int,(
                                                  -1 + <array_max_1033@367:1>):int,<f_array_max_1480@365:4>:int),
        (<array_max_1033@367:1> < (1 + <array_max_1033@367:0>))
        |- P[<array_max_1033@367:1>](<array_max_1033@367:0>:int,<array_max_1033@367:1>:int)
        
        P[<array_max_1033@344:1>](<array_max_1033@344:0>:int,<array_max_1033@344:1>:int), (
        <array_max_1033@344:1> = 0)
        |- P[<<<array_max_1033@344:2>@347:1>@363:0>](<array_max_1033@344:0>:int,
                                                     <array_max_1033@344:1>:int,
                                                     <<array_max_1033@344:2>@347:0>:int,
                                                     <<<array_max_1033@344:2>@347:1>@363:0>:int)
        
        P[<array_max_1033@344:1>](<array_max_1033@344:0>:int,<array_max_1033@344:1>:int),
        ((<array_max_1033@344:1> < <array_max_1033@344:0>) && (<<array_max_1033@344:2>@347:0> = <array_max_1033@344:1>))
        |- P[<<array_max_1033@344:2>@347:0>](<array_max_1033@344:0>:int,
                                             <array_max_1033@344:1>:int,
                                             <<array_max_1033@344:2>@347:0>:int)
        
         (<array_max_1033@344:1> = 0)
        |- P[<array_max_1033@344:1>](<array_max_1033@344:0>:int,<array_max_1033@344:1>:int)
      lower bounds:
        P[<array_max_1033@344:1>](<array_max_1033@344:0>:int,<array_max_1033@344:1>:int) = (<array_max_1033@344:1> = 0)
        P[<fail_1487@445:0>](var1615:bool) = false
        P[<<<array_max_1033@344:2>@347:1>@363:0>](<array_max_1033@344:0>:int,<array_max_1033@344:1>:int,<<array_max_1033@344:2>@347:0>:int,<<<array_max_1033@344:2>@347:1>@363:0>:int) =
        (<array_max_1033@344:1> = 0)
        P[<<array_max_1033@344:2>@347:0>](<array_max_1033@344:0>:int,<array_max_1033@344:1>:int,<<array_max_1033@344:2>@347:0>:int) =
        ((<array_max_1033@344:1> = 0) &&
         ((<array_max_1033@344:1> < <array_max_1033@344:0>) &&
          (<<array_max_1033@344:2>@347:0> = <array_max_1033@344:1>)))
        P[<array_max_1033@367:1>](<array_max_1033@367:0>:int,<array_max_1033@367:1>:int) =
        ((<array_max_1033@367:1> = 1) && (<array_max_1033@367:1> < (1 + <array_max_1033@367:0>)))
        P[<<array_max_1033@367:3>@370:0>](<array_max_1033@367:0>:int,<array_max_1033@367:1>:int,<<array_max_1033@367:3>@370:0>:int) =
        ((<<array_max_1033@367:3>@370:0> = 0) &&
         ((<array_max_1033@367:1> = 1) && (<array_max_1033@367:1> = <array_max_1033@367:0>)))
        P[<<array_max_1033@344:3>@379:0>](<array_max_1033@344:0>:int,<array_max_1033@344:1>:int,<<array_max_1033@344:3>@379:0>:int) =
        ((<<array_max_1033@344:3>@379:0> = 0) &&
         ((<array_max_1033@344:1> = 0) && ((1 + <array_max_1033@344:1>) = <array_max_1033@344:0>)))
        P[<check_1148@383:2>](<check_1148@383:0>:int,<check_1148@383:1>:int,<check_1148@383:2>:int) =
        ((<check_1148@383:1> = 0) && ((<check_1148@383:2> = 0) && (<check_1148@383:0> = 1)))
      upper bounds:
        P[<<array_max_1033@344:3>@379:0>](var1623:int,var1624:int,var1625:int) = ((var1624 <> 0) || (1 >= var1623))
        P[<<array_max_1033@367:3>@370:0>](var1618:int,var1619:int,var1620:int) = ((var1619 <> 1) || (1 >= var1618))
      begin GenHcSolver.classify_pids(786323)[4]
        output:
          [<<array_max_1033@367:3>@370:0>;<<array_max_1033@344:3>@379:0>]
      end GenHcSolver.classify_pids(786323)[4] (0.000000 sec.)
      begin ApronInterface.convex_hull_interpolate(786391)[4]
        lb:(((<<array_max_1033@367:3>@370:0> = 0) &&
             ((<array_max_1033@367:1> = 1) && (<array_max_1033@367:1> = <array_max_1033@367:0>))) ||
            ((<<array_max_1033@367:3>@370:0> = 0) &&
             ((<array_max_1033@367:1> = 0) && ((1 + <array_max_1033@367:1>) = <array_max_1033@367:0>))))
        nub:((not ((<array_max_1033@367:1> <> 1) || (1 >= <array_max_1033@367:0>))) ||
             (not ((<array_max_1033@367:1> <> 0) || (1 >= <array_max_1033@367:0>))))
        lb':(((<<array_max_1033@367:3>@370:0> = 0) &&
              ((<array_max_1033@367:1> = 1) && (<array_max_1033@367:1> = <array_max_1033@367:0>))) ||
             ((<<array_max_1033@367:3>@370:0> = 0) &&
              ((<array_max_1033@367:1> = 0) && ((1 + <array_max_1033@367:1>) = <array_max_1033@367:0>))))
        nub':((not ((<array_max_1033@367:1> <> 1) || (1 >= <array_max_1033@367:0>))) ||
              (not ((<array_max_1033@367:1> <> 0) || (1 >= <array_max_1033@367:0>))))
        begin InterpProver.interpolate(786392)[5]
          begin InterpProver.interpolate_fresh(786393)[6]
            begin InterpProver.interpolate_log(786394)[7]
              input1: (((<<array_max_1033@367:3>@370:0> = 0) &&
                        ((<array_max_1033@367:1> = 1) && (<array_max_1033@367:1> = <array_max_1033@367:0>))) ||
                       ((<<array_max_1033@367:3>@370:0> = 0) &&
                        ((<array_max_1033@367:1> = 0) && ((1 + <array_max_1033@367:1>) = <array_max_1033@367:0>))))
              input2: ((not ((<array_max_1033@367:1> <> 1) || (1 >= <array_max_1033@367:0>))) ||
                       (not ((<array_max_1033@367:1> <> 0) || (1 >= <array_max_1033@367:0>))))
              begin InterpProver.interpolate_check(786395)[8]
                begin InterpProver.interpolate_simplify(786396)[9]
                  begin InterpProver.interpolate_quick(786624)[10]
                    begin CsisatInterface.interpolate_csisat_wrap(786633)[11]
                      begin CsisatInterface.interpolate_csisat_post_process(786634)[12]
                        begin CsisatInterface.interpolate_csisat_log(786635)[13]
                          input1: ((0 = v_sep_array_max_1033_sep_367_sep_1 & v_sep_array_max_1033_sep_367_sep_0 = (1 + v_sep_array_max_1033_sep_367_sep_1)) | (1 = v_sep_array_max_1033_sep_367_sep_1 & v_sep_array_max_1033_sep_367_sep_0 = v_sep_array_max_1033_sep_367_sep_1))
                          input2: ((0 = v_sep_array_max_1033_sep_367_sep_1 | 1 = v_sep_array_max_1033_sep_367_sep_1) & 2 <= v_sep_array_max_1033_sep_367_sep_0)
                          begin CsisatInterface.interpolate_csisat_raw(786636)[14]
                            
                          end CsisatInterface.interpolate_csisat_raw(786636)[14] (0.002000 sec.)
                          output: ((((not 0 = v_sep_array_max_1033_sep_367_sep_1 | 2*v_sep_array_max_1033_sep_367_sep_0 <= 2) & 0 = v_sep_array_max_1033_sep_367_sep_1) | 1 = v_sep_array_max_1033_sep_367_sep_1) & ((not 0 = v_sep_array_max_1033_sep_367_sep_1 & 0 = v_sep_array_max_1033_sep_367_sep_1) | not 1 = v_sep_array_max_1033_sep_367_sep_1 | 2*v_sep_array_max_1033_sep_367_sep_0 <= 2))
                          
                        end CsisatInterface.interpolate_csisat_log(786635)[13] (0.002000 sec.)
                        after simplification: ((((not 0 = v_sep_array_max_1033_sep_367_sep_1 | 2*v_sep_array_max_1033_sep_367_sep_0 <= 2) & 0 = v_sep_array_max_1033_sep_367_sep_1) | 1 = v_sep_array_max_1033_sep_367_sep_1) & ((not 0 = v_sep_array_max_1033_sep_367_sep_1 & 0 = v_sep_array_max_1033_sep_367_sep_1) | not 1 = v_sep_array_max_1033_sep_367_sep_1 | 2*v_sep_array_max_1033_sep_367_sep_0 <= 2))
                        after dnf conversion: ((2*v_sep_array_max_1033_sep_367_sep_0 <= 2 & 0 = v_sep_array_max_1033_sep_367_sep_1 & not 0 = v_sep_array_max_1033_sep_367_sep_1 & 0 = v_sep_array_max_1033_sep_367_sep_1) | (2*v_sep_array_max_1033_sep_367_sep_0 <= 2 & 0 = v_sep_array_max_1033_sep_367_sep_1 & not 1 = v_sep_array_max_1033_sep_367_sep_1) | (2*v_sep_array_max_1033_sep_367_sep_0 <= 2 & 0 = v_sep_array_max_1033_sep_367_sep_1 & 2*v_sep_array_max_1033_sep_367_sep_0 <= 2) | (not 0 = v_sep_array_max_1033_sep_367_sep_1 & 0 = v_sep_array_max_1033_sep_367_sep_1 & not 0 = v_sep_array_max_1033_sep_367_sep_1 & 0 = v_sep_array_max_1033_sep_367_sep_1) | (not 0 = v_sep_array_max_1033_sep_367_sep_1 & 0 = v_sep_array_max_1033_sep_367_sep_1 & not 1 = v_sep_array_max_1033_sep_367_sep_1) | (not 0 = v_sep_array_max_1033_sep_367_sep_1 & 0 = v_sep_array_max_1033_sep_367_sep_1 & 2*v_sep_array_max_1033_sep_367_sep_0 <= 2) | (1 = v_sep_array_max_1033_sep_367_sep_1 & not 0 = v_sep_array_max_1033_sep_367_sep_1 & 0 = v_sep_array_max_1033_sep_367_sep_1) | (1 = v_sep_array_max_1033_sep_367_sep_1 & not 1 = v_sep_array_max_1033_sep_367_sep_1) | (1 = v_sep_array_max_1033_sep_367_sep_1 & 2*v_sep_array_max_1033_sep_367_sep_0 <= 2))
                        
                      end CsisatInterface.interpolate_csisat_post_process(786634)[12] (0.002000 sec.)
                      
                    end CsisatInterface.interpolate_csisat_wrap(786633)[11] (0.002000 sec.)
                    
                  end InterpProver.interpolate_quick(786624)[10] (0.002000 sec.)
                  begin minimizing # of disjunctions(786780)[10]
                    input: (((<array_max_1033@367:0> <= 1) && (<array_max_1033@367:1> = 0)) ||
                            ((<array_max_1033@367:0> <= 1) && (<array_max_1033@367:1> = 1)))
                    output: (((<array_max_1033@367:0> <= 1) && (<array_max_1033@367:1> = 1)) ||
                             ((<array_max_1033@367:0> <= 1) && (<array_max_1033@367:1> = 0)))
                  end minimizing # of disjunctions(786780)[10] (0.001999 sec.)
                  begin minimizing # of conjunctions(786859)[10]
                    input: ((<array_max_1033@367:0> <= 1) && (<array_max_1033@367:1> = 1))
                    output: (<array_max_1033@367:0> <= 1)
                  end minimizing # of conjunctions(786859)[10] (0.001000 sec.)
                  begin minimizing # of conjunctions(786978)[10]
                    input: ((<array_max_1033@367:0> <= 1) && (<array_max_1033@367:1> = 0))
                    output: (<array_max_1033@367:0> <= 1)
                  end minimizing # of conjunctions(786978)[10] (0.001000 sec.)
                  
                end InterpProver.interpolate_simplify(786396)[9] (0.007999 sec.)
                
              end InterpProver.interpolate_check(786395)[8] (0.008999 sec.)
              output: (<array_max_1033@367:0> <= 1)
            end InterpProver.interpolate_log(786394)[7] (0.008999 sec.)
            
          end InterpProver.interpolate_fresh(786393)[6] (0.008999 sec.)
          
        end InterpProver.interpolate(786392)[5] (0.008999 sec.)
        output:
          P[<<array_max_1033@367:3>@370:0>](<array_max_1033@367:0>:int,<array_max_1033@367:1>:int,<<array_max_1033@367:3>@370:0>:int) =
          (<array_max_1033@367:0> <= 1)
          P[<<array_max_1033@344:3>@379:0>](<array_max_1033@367:0>:int,<array_max_1033@367:1>:int,<<array_max_1033@367:3>@370:0>:int) =
          (<array_max_1033@367:0> <= 1)
      end ApronInterface.convex_hull_interpolate(786391)[4] (0.009999 sec.)
      Horn clauses:
        P[<fail_1487@445:0>](<fail_1487@445:0>:bool)|- bot
        
        P[<check_1148@383:2>](<check_1148@409:0>:int,(-1 + <check_1148@409:1>):int,<check_1148@409:2>:int),
        (<check_1148@409:1> < <check_1148@409:0>) |- bot
        
         ((<check_1148@383:1> = 0) && (<check_1148@383:0> <= 1))
        |- P[<check_1148@383:2>](<check_1148@383:0>:int,<check_1148@383:1>:int,
                                 <check_1148@383:2>:int)
        
        P[<array_max_1033@367:1>](<array_max_1033@367:0>:int,<array_max_1033@367:1>:int),
        ((<array_max_1033@367:0> > 1) && (<array_max_1033@367:1> >= <array_max_1033@367:0>)) |- bot
        
        P[<array_max_1033@344:1>](<array_max_1033@367:0>:int,(-1 + <array_max_1033@367:1>):int),
        P[<<<array_max_1033@344:2>@347:1>@363:0>](<array_max_1033@367:0>:int,(
                                                  -1 + <array_max_1033@367:1>):int,(
                                                  -1 + <array_max_1033@367:1>):int,<f_array_max_1480@365:4>:int),
        (<array_max_1033@367:1> < (1 + <array_max_1033@367:0>))
        |- P[<array_max_1033@367:1>](<array_max_1033@367:0>:int,<array_max_1033@367:1>:int)
        
        P[<array_max_1033@344:1>](<array_max_1033@344:0>:int,<array_max_1033@344:1>:int), (
        <array_max_1033@344:1> = 0)
        |- P[<<<array_max_1033@344:2>@347:1>@363:0>](<array_max_1033@344:0>:int,
                                                     <array_max_1033@344:1>:int,
                                                     <<array_max_1033@344:2>@347:0>:int,
                                                     <<<array_max_1033@344:2>@347:1>@363:0>:int)
        
        P[<array_max_1033@344:1>](<array_max_1033@344:0>:int,<array_max_1033@344:1>:int),
        ((<array_max_1033@344:1> < <array_max_1033@344:0>) && (<<array_max_1033@344:2>@347:0> = <array_max_1033@344:1>))
        |- P[<<array_max_1033@344:2>@347:0>](<array_max_1033@344:0>:int,
                                             <array_max_1033@344:1>:int,
                                             <<array_max_1033@344:2>@347:0>:int)
        
         (<array_max_1033@344:1> = 0)
        |- P[<array_max_1033@344:1>](<array_max_1033@344:0>:int,<array_max_1033@344:1>:int)
      lower bounds:
        P[<check_1148@383:2>](<check_1148@383:0>:int,<check_1148@383:1>:int,<check_1148@383:2>:int) =
        ((<check_1148@383:1> = 0) && (<check_1148@383:0> <= 1))
        P[<array_max_1033@344:1>](<array_max_1033@344:0>:int,<array_max_1033@344:1>:int) = (<array_max_1033@344:1> = 0)
        P[<fail_1487@445:0>](var1629:bool) = false
        P[<<<array_max_1033@344:2>@347:1>@363:0>](<array_max_1033@344:0>:int,<array_max_1033@344:1>:int,<<array_max_1033@344:2>@347:0>:int,<<<array_max_1033@344:2>@347:1>@363:0>:int) =
        (<array_max_1033@344:1> = 0)
        P[<<array_max_1033@344:2>@347:0>](<array_max_1033@344:0>:int,<array_max_1033@344:1>:int,<<array_max_1033@344:2>@347:0>:int) =
        ((<array_max_1033@344:1> = 0) &&
         ((<array_max_1033@344:1> < <array_max_1033@344:0>) &&
          (<<array_max_1033@344:2>@347:0> = <array_max_1033@344:1>)))
        P[<array_max_1033@367:1>](<array_max_1033@367:0>:int,<array_max_1033@367:1>:int) =
        ((<array_max_1033@367:1> = 1) && (<array_max_1033@367:1> < (1 + <array_max_1033@367:0>)))
      upper bounds:
        P[<array_max_1033@367:1>](var1636:int,var1637:int) = ((var1636 <= 1) || (var1637 < var1636))
        P[<array_max_1033@344:1>](var1632:int,var1633:int) = true
      begin GenHcSolver.classify_pids(793529)[4]
        output:
          [<array_max_1033@344:1>;<array_max_1033@367:1>]
      end GenHcSolver.classify_pids(793529)[4] (0.000000 sec.)
      begin ApronInterface.convex_hull_interpolate(793554)[4]
        lb:((<array_max_1033@344:1> = 0) ||
            ((<array_max_1033@344:1> = 1) && (<array_max_1033@344:1> < (1 + <array_max_1033@344:0>))))
        nub:(not ((<array_max_1033@344:0> <= 1) || (<array_max_1033@344:1> < <array_max_1033@344:0>)))
        lb':((<array_max_1033@344:1> = 0) ||
             ((<array_max_1033@344:1> = 1) && (<array_max_1033@344:1> < (1 + <array_max_1033@344:0>))))
        nub':(not ((<array_max_1033@344:0> <= 1) || (<array_max_1033@344:1> < <array_max_1033@344:0>)))
        begin InterpProver.interpolate(793555)[5]
          begin InterpProver.interpolate_fresh(793556)[6]
            begin InterpProver.interpolate_log(793557)[7]
              input1: ((<array_max_1033@344:1> = 0) ||
                       ((<array_max_1033@344:1> = 1) && (<array_max_1033@344:1> < (1 + <array_max_1033@344:0>))))
              input2: (not ((<array_max_1033@344:0> <= 1) || (<array_max_1033@344:1> < <array_max_1033@344:0>)))
              begin InterpProver.interpolate_check(793558)[8]
                begin InterpProver.interpolate_simplify(793559)[9]
                  begin InterpProver.interpolate_quick(793634)[10]
                    begin CsisatInterface.interpolate_csisat_wrap(793643)[11]
                      begin CsisatInterface.interpolate_csisat_post_process(793644)[12]
                        begin CsisatInterface.interpolate_csisat_log(793645)[13]
                          input1: ((1 = v_sep_array_max_1033_sep_344_sep_1 & (1 + v_sep_array_max_1033_sep_344_sep_1) <= (1 + v_sep_array_max_1033_sep_344_sep_0)) | 0 = v_sep_array_max_1033_sep_344_sep_1)
                          input2: (2 <= v_sep_array_max_1033_sep_344_sep_0 & v_sep_array_max_1033_sep_344_sep_0 <= v_sep_array_max_1033_sep_344_sep_1)
                          begin CsisatInterface.interpolate_csisat_raw(793646)[14]
                            
                          end CsisatInterface.interpolate_csisat_raw(793646)[14] (0.001000 sec.)
                          output: (v_sep_array_max_1033_sep_344_sep_1 <= 0 | 2*v_sep_array_max_1033_sep_344_sep_1 <= 2)
                          
                        end CsisatInterface.interpolate_csisat_log(793645)[13] (0.001000 sec.)
                        after simplification: (v_sep_array_max_1033_sep_344_sep_1 <= 0 | 2*v_sep_array_max_1033_sep_344_sep_1 <= 2)
                        after dnf conversion: ((v_sep_array_max_1033_sep_344_sep_1 <= 0) | (2*v_sep_array_max_1033_sep_344_sep_1 <= 2))
                        
                      end CsisatInterface.interpolate_csisat_post_process(793644)[12] (0.001000 sec.)
                      
                    end CsisatInterface.interpolate_csisat_wrap(793643)[11] (0.001000 sec.)
                    
                  end InterpProver.interpolate_quick(793634)[10] (0.001000 sec.)
                  
                end InterpProver.interpolate_simplify(793559)[9] (0.001000 sec.)
                
              end InterpProver.interpolate_check(793558)[8] (0.002000 sec.)
              output: (<array_max_1033@344:1> <= 1)
            end InterpProver.interpolate_log(793557)[7] (0.002000 sec.)
            
          end InterpProver.interpolate_fresh(793556)[6] (0.002000 sec.)
          
        end InterpProver.interpolate(793555)[5] (0.002000 sec.)
        output:
          P[<array_max_1033@344:1>](<array_max_1033@344:0>:int,<array_max_1033@344:1>:int) =
          (<array_max_1033@344:1> <= 1)
          P[<array_max_1033@367:1>](<array_max_1033@344:0>:int,<array_max_1033@344:1>:int) =
          (<array_max_1033@344:1> <= 1)
      end ApronInterface.convex_hull_interpolate(793554)[4] (0.002000 sec.)
      Horn clauses:
        P[<fail_1487@445:0>](<fail_1487@445:0>:bool)|- bot
        
        P[<check_1148@383:2>](<check_1148@409:0>:int,(-1 + <check_1148@409:1>):int,<check_1148@409:2>:int),
        (<check_1148@409:1> < <check_1148@409:0>) |- bot
        
         ((<check_1148@383:1> = 0) && (<check_1148@383:0> <= 1))
        |- P[<check_1148@383:2>](<check_1148@383:0>:int,<check_1148@383:1>:int,
                                 <check_1148@383:2>:int)
        
        P[<<<array_max_1033@344:2>@347:1>@363:0>](<array_max_1033@367:0>:int,1:int,1:int,<f_array_max_1480@365:4>:int),
        (1 < <array_max_1033@367:0>) |- bot
        
         (<array_max_1033@344:1> = 0)
        |- P[<<<array_max_1033@344:2>@347:1>@363:0>](<array_max_1033@344:0>:int,
                                                     <array_max_1033@344:1>:int,
                                                     <<array_max_1033@344:2>@347:0>:int,
                                                     <<<array_max_1033@344:2>@347:1>@363:0>:int)
        
        
        ((<array_max_1033@344:1> < <array_max_1033@344:0>) &&
         ((<array_max_1033@344:1> <= 1) && (<<array_max_1033@344:2>@347:0> = <array_max_1033@344:1>)))
        |- P[<<array_max_1033@344:2>@347:0>](<array_max_1033@344:0>:int,
                                             <array_max_1033@344:1>:int,
                                             <<array_max_1033@344:2>@347:0>:int)
      lower bounds:
        P[<check_1148@383:2>](<check_1148@383:0>:int,<check_1148@383:1>:int,<check_1148@383:2>:int) =
        ((<check_1148@383:1> = 0) && (<check_1148@383:0> <= 1))
        P[<<<array_max_1033@344:2>@347:1>@363:0>](<array_max_1033@344:0>:int,<array_max_1033@344:1>:int,<<array_max_1033@344:2>@347:0>:int,<<<array_max_1033@344:2>@347:1>@363:0>:int) =
        (<array_max_1033@344:1> = 0)
        P[<<array_max_1033@344:2>@347:0>](<array_max_1033@344:0>:int,<array_max_1033@344:1>:int,<<array_max_1033@344:2>@347:0>:int) =
        ((<array_max_1033@344:1> < <array_max_1033@344:0>) &&
         ((<array_max_1033@344:1> <= 1) && (<<array_max_1033@344:2>@347:0> = <array_max_1033@344:1>)))
        P[<fail_1487@445:0>](var1641:bool) = false
      upper bounds:
        P[<<array_max_1033@344:2>@347:0>](var1644:int,var1645:int,var1646:int) = true
      begin GenHcSolver.classify_pids(797365)[4]
        output:
          [<<array_max_1033@344:2>@347:0>]
      end GenHcSolver.classify_pids(797365)[4] (0.000000 sec.)
      lb:((<array_max_1033@344:1> < <array_max_1033@344:0>) &&
          ((<array_max_1033@344:1> <= 1) && (<<array_max_1033@344:2>@347:0> = <array_max_1033@344:1>)))
      nub:false
      begin ApronInterface.convex_hull_interpolate(797368)[4]
        lb:((<array_max_1033@344:1> < <array_max_1033@344:0>) &&
            ((<array_max_1033@344:1> <= 1) && (<<array_max_1033@344:2>@347:0> = <array_max_1033@344:1>)))
        nub:false
        lb':((<array_max_1033@344:1> < <array_max_1033@344:0>) &&
             ((<array_max_1033@344:1> <= 1) && (<<array_max_1033@344:2>@347:0> = <array_max_1033@344:1>)))
        nub':false
        begin InterpProver.interpolate(797369)[5]
          begin InterpProver.interpolate_fresh(797370)[6]
            begin InterpProver.interpolate_log(797371)[7]
              input1: ((<array_max_1033@344:1> < <array_max_1033@344:0>) &&
                       ((<array_max_1033@344:1> <= 1) && (<<array_max_1033@344:2>@347:0> = <array_max_1033@344:1>)))
              input2: false
              begin InterpProver.interpolate_check(797372)[8]
                begin InterpProver.interpolate_simplify(797373)[9]
                  begin InterpProver.interpolate_quick(797434)[10]
                    
                  end InterpProver.interpolate_quick(797434)[10] (0.001000 sec.)
                  
                end InterpProver.interpolate_simplify(797373)[9] (0.002000 sec.)
                
              end InterpProver.interpolate_check(797372)[8] (0.002000 sec.)
              output: true
            end InterpProver.interpolate_log(797371)[7] (0.002000 sec.)
            
          end InterpProver.interpolate_fresh(797370)[6] (0.002000 sec.)
          
        end InterpProver.interpolate(797369)[5] (0.002000 sec.)
        output:
          P[<<array_max_1033@344:2>@347:0>](<array_max_1033@344:0>:int,<array_max_1033@344:1>:int,<<array_max_1033@344:2>@347:0>:int) =
          true
      end ApronInterface.convex_hull_interpolate(797368)[4] (0.002000 sec.)
      Horn clauses:
        P[<fail_1487@445:0>](<fail_1487@445:0>:bool)|- bot
        
        P[<check_1148@383:2>](<check_1148@409:0>:int,(-1 + <check_1148@409:1>):int,<check_1148@409:2>:int),
        (<check_1148@409:1> < <check_1148@409:0>) |- bot
        
         ((<check_1148@383:1> = 0) && (<check_1148@383:0> <= 1))
        |- P[<check_1148@383:2>](<check_1148@383:0>:int,<check_1148@383:1>:int,
                                 <check_1148@383:2>:int)
        
        P[<<<array_max_1033@344:2>@347:1>@363:0>](<array_max_1033@367:0>:int,1:int,1:int,<f_array_max_1480@365:4>:int),
        (1 < <array_max_1033@367:0>) |- bot
        
         (<array_max_1033@344:1> = 0)
        |- P[<<<array_max_1033@344:2>@347:1>@363:0>](<array_max_1033@344:0>:int,
                                                     <array_max_1033@344:1>:int,
                                                     <<array_max_1033@344:2>@347:0>:int,
                                                     <<<array_max_1033@344:2>@347:1>@363:0>:int)
      lower bounds:
        P[<check_1148@383:2>](<check_1148@383:0>:int,<check_1148@383:1>:int,<check_1148@383:2>:int) =
        ((<check_1148@383:1> = 0) && (<check_1148@383:0> <= 1))
        P[<<<array_max_1033@344:2>@347:1>@363:0>](<array_max_1033@344:0>:int,<array_max_1033@344:1>:int,<<array_max_1033@344:2>@347:0>:int,<<<array_max_1033@344:2>@347:1>@363:0>:int) =
        (<array_max_1033@344:1> = 0)
        P[<fail_1487@445:0>](var1648:bool) = false
      upper bounds:
        P[<fail_1487@445:0>](var1651:bool) = true
      begin GenHcSolver.classify_pids(798801)[4]
        output:
          [<fail_1487@445:0>]
      end GenHcSolver.classify_pids(798801)[4] (0.000000 sec.)
      lb:false
      nub:false
      begin ApronInterface.convex_hull_interpolate(798804)[4]
        lb:false
        nub:false
        lb':false
        nub':false
        begin InterpProver.interpolate(798805)[5]
          begin InterpProver.interpolate_fresh(798806)[6]
            begin InterpProver.interpolate_log(798807)[7]
              input1: false
              input2: false
              begin InterpProver.interpolate_check(798808)[8]
                begin InterpProver.interpolate_simplify(798809)[9]
                  begin InterpProver.interpolate_quick(798822)[10]
                    
                  end InterpProver.interpolate_quick(798822)[10] (0.000000 sec.)
                  begin minimizing # of disjunctions(798826)[10]
                    input: false
                    output: false
                  end minimizing # of disjunctions(798826)[10] (0.000000 sec.)
                  
                end InterpProver.interpolate_simplify(798809)[9] (0.000000 sec.)
                
              end InterpProver.interpolate_check(798808)[8] (0.000000 sec.)
              output: false
            end InterpProver.interpolate_log(798807)[7] (0.001000 sec.)
            
          end InterpProver.interpolate_fresh(798806)[6] (0.001000 sec.)
          
        end InterpProver.interpolate(798805)[5] (0.001000 sec.)
        output:
          P[<fail_1487@445:0>](var1648:bool) = false
      end ApronInterface.convex_hull_interpolate(798804)[4] (0.001000 sec.)
      Horn clauses:
        P[<check_1148@383:2>](<check_1148@409:0>:int,(-1 + <check_1148@409:1>):int,<check_1148@409:2>:int),
        (<check_1148@409:1> < <check_1148@409:0>) |- bot
        
         ((<check_1148@383:1> = 0) && (<check_1148@383:0> <= 1))
        |- P[<check_1148@383:2>](<check_1148@383:0>:int,<check_1148@383:1>:int,
                                 <check_1148@383:2>:int)
        
        P[<<<array_max_1033@344:2>@347:1>@363:0>](<array_max_1033@367:0>:int,1:int,1:int,<f_array_max_1480@365:4>:int),
        (1 < <array_max_1033@367:0>) |- bot
        
         (<array_max_1033@344:1> = 0)
        |- P[<<<array_max_1033@344:2>@347:1>@363:0>](<array_max_1033@344:0>:int,
                                                     <array_max_1033@344:1>:int,
                                                     <<array_max_1033@344:2>@347:0>:int,
                                                     <<<array_max_1033@344:2>@347:1>@363:0>:int)
      lower bounds:
        P[<check_1148@383:2>](<check_1148@383:0>:int,<check_1148@383:1>:int,<check_1148@383:2>:int) =
        ((<check_1148@383:1> = 0) && (<check_1148@383:0> <= 1))
        P[<<<array_max_1033@344:2>@347:1>@363:0>](<array_max_1033@344:0>:int,<array_max_1033@344:1>:int,<<array_max_1033@344:2>@347:0>:int,<<<array_max_1033@344:2>@347:1>@363:0>:int) =
        (<array_max_1033@344:1> = 0)
      upper bounds:
        P[<check_1148@383:2>](var1652:int,var1653:int,var1654:int) = ((1 + var1653) >= var1652)
      begin GenHcSolver.classify_pids(800005)[4]
        output:
          [<check_1148@383:2>]
      end GenHcSolver.classify_pids(800005)[4] (0.000000 sec.)
      lb:((<check_1148@383:1> = 0) && (<check_1148@383:0> <= 1))
      nub:(not ((1 + <check_1148@383:1>) >= <check_1148@383:0>))
      begin ApronInterface.convex_hull_interpolate(800008)[4]
        lb:((<check_1148@383:1> = 0) && (<check_1148@383:0> <= 1))
        nub:(not ((1 + <check_1148@383:1>) >= <check_1148@383:0>))
        lb':((<check_1148@383:1> = 0) && (<check_1148@383:0> <= 1))
        nub':(not ((1 + <check_1148@383:1>) >= <check_1148@383:0>))
        begin InterpProver.interpolate(800009)[5]
          begin InterpProver.interpolate_fresh(800010)[6]
            begin InterpProver.interpolate_log(800011)[7]
              input1: ((<check_1148@383:1> = 0) && (<check_1148@383:0> <= 1))
              input2: (not ((1 + <check_1148@383:1>) >= <check_1148@383:0>))
              begin InterpProver.interpolate_check(800012)[8]
                begin InterpProver.interpolate_simplify(800013)[9]
                  begin InterpProver.interpolate_quick(800052)[10]
                    begin CsisatInterface.interpolate_csisat_wrap(800061)[11]
                      begin CsisatInterface.interpolate_csisat_post_process(800062)[12]
                        begin CsisatInterface.interpolate_csisat_log(800063)[13]
                          input1: (0 = v_sep_check_1148_sep_383_sep_1 & v_sep_check_1148_sep_383_sep_0 <= 1)
                          input2: (2 + v_sep_check_1148_sep_383_sep_1) <= v_sep_check_1148_sep_383_sep_0
                          begin CsisatInterface.interpolate_csisat_raw(800064)[14]
                            
                          end CsisatInterface.interpolate_csisat_raw(800064)[14] (0.000000 sec.)
                          output: (-2*v_sep_check_1148_sep_383_sep_1 + 2*v_sep_check_1148_sep_383_sep_0) <= 2
                          
                        end CsisatInterface.interpolate_csisat_log(800063)[13] (0.000000 sec.)
                        after simplification: (-2*v_sep_check_1148_sep_383_sep_1 + 2*v_sep_check_1148_sep_383_sep_0) <= 2
                        after dnf conversion: (((-2*v_sep_check_1148_sep_383_sep_1 + 2*v_sep_check_1148_sep_383_sep_0) <= 2))
                        
                      end CsisatInterface.interpolate_csisat_post_process(800062)[12] (0.000000 sec.)
                      
                    end CsisatInterface.interpolate_csisat_wrap(800061)[11] (0.000000 sec.)
                    
                  end InterpProver.interpolate_quick(800052)[10] (0.000000 sec.)
                  
                end InterpProver.interpolate_simplify(800013)[9] (0.000000 sec.)
                
              end InterpProver.interpolate_check(800012)[8] (0.001000 sec.)
              output: (<check_1148@383:0> <= (1 + <check_1148@383:1>))
            end InterpProver.interpolate_log(800011)[7] (0.002000 sec.)
            
          end InterpProver.interpolate_fresh(800010)[6] (0.002000 sec.)
          
        end InterpProver.interpolate(800009)[5] (0.002000 sec.)
        output:
          P[<check_1148@383:2>](<check_1148@383:0>:int,<check_1148@383:1>:int,<check_1148@383:2>:int) =
          (<check_1148@383:0> <= (1 + <check_1148@383:1>))
      end ApronInterface.convex_hull_interpolate(800008)[4] (0.002000 sec.)
      Horn clauses:
        P[<<<array_max_1033@344:2>@347:1>@363:0>](<array_max_1033@367:0>:int,1:int,1:int,<f_array_max_1480@365:4>:int),
        (1 < <array_max_1033@367:0>) |- bot
        
         (<array_max_1033@344:1> = 0)
        |- P[<<<array_max_1033@344:2>@347:1>@363:0>](<array_max_1033@344:0>:int,
                                                     <array_max_1033@344:1>:int,
                                                     <<array_max_1033@344:2>@347:0>:int,
                                                     <<<array_max_1033@344:2>@347:1>@363:0>:int)
      lower bounds:
        P[<<<array_max_1033@344:2>@347:1>@363:0>](<array_max_1033@344:0>:int,<array_max_1033@344:1>:int,<<array_max_1033@344:2>@347:0>:int,<<<array_max_1033@344:2>@347:1>@363:0>:int) =
        (<array_max_1033@344:1> = 0)
      upper bounds:
        P[<<<array_max_1033@344:2>@347:1>@363:0>](var1655:int,var1656:int,var1657:int,var1658:int) =
        ((var1656 <> 1) || ((var1657 <> 1) || (1 >= var1655)))
      begin GenHcSolver.classify_pids(800818)[4]
        output:
          [<<<array_max_1033@344:2>@347:1>@363:0>]
      end GenHcSolver.classify_pids(800818)[4] (0.000000 sec.)
      lb:(<array_max_1033@344:1> = 0)
      nub:(not
             ((<array_max_1033@344:1> <> 1) || ((<<array_max_1033@344:2>@347:0> <> 1) || (1 >= <array_max_1033@344:0>))))
      begin ApronInterface.convex_hull_interpolate(800821)[4]
        lb:(<array_max_1033@344:1> = 0)
        nub:(not
               ((<array_max_1033@344:1> <> 1) ||
                ((<<array_max_1033@344:2>@347:0> <> 1) || (1 >= <array_max_1033@344:0>))))
        lb':(<array_max_1033@344:1> = 0)
        nub':(not
                ((<array_max_1033@344:1> <> 1) ||
                 ((<<array_max_1033@344:2>@347:0> <> 1) || (1 >= <array_max_1033@344:0>))))
        begin InterpProver.interpolate(800822)[5]
          begin InterpProver.interpolate_fresh(800823)[6]
            begin InterpProver.interpolate_log(800824)[7]
              input1: (<array_max_1033@344:1> = 0)
              input2: (not
                         ((<array_max_1033@344:1> <> 1) ||
                          ((<<array_max_1033@344:2>@347:0> <> 1) || (1 >= <array_max_1033@344:0>))))
              begin InterpProver.interpolate_check(800825)[8]
                begin InterpProver.interpolate_simplify(800826)[9]
                  begin InterpProver.interpolate_quick(800919)[10]
                    begin CsisatInterface.interpolate_csisat_wrap(800928)[11]
                      begin CsisatInterface.interpolate_csisat_post_process(800929)[12]
                        begin CsisatInterface.interpolate_csisat_log(800930)[13]
                          input1: 0 = v_sep_array_max_1033_sep_344_sep_1
                          input2: (1 = v_sep_array_max_1033_sep_344_sep_1 & 2 <= v_sep_array_max_1033_sep_344_sep_0)
                          begin CsisatInterface.interpolate_csisat_raw(800931)[14]
                            
                          end CsisatInterface.interpolate_csisat_raw(800931)[14] (0.001000 sec.)
                          output: 2*v_sep_array_max_1033_sep_344_sep_1 <= 0
                          
                        end CsisatInterface.interpolate_csisat_log(800930)[13] (0.001000 sec.)
                        after simplification: 2*v_sep_array_max_1033_sep_344_sep_1 <= 0
                        after dnf conversion: ((2*v_sep_array_max_1033_sep_344_sep_1 <= 0))
                        
                      end CsisatInterface.interpolate_csisat_post_process(800929)[12] (0.001000 sec.)
                      
                    end CsisatInterface.interpolate_csisat_wrap(800928)[11] (0.001000 sec.)
                    
                  end InterpProver.interpolate_quick(800919)[10] (0.001000 sec.)
                  
                end InterpProver.interpolate_simplify(800826)[9] (0.001000 sec.)
                
              end InterpProver.interpolate_check(800825)[8] (0.001000 sec.)
              output: (<array_max_1033@344:1> <= 0)
            end InterpProver.interpolate_log(800824)[7] (0.001000 sec.)
            
          end InterpProver.interpolate_fresh(800823)[6] (0.001000 sec.)
          
        end InterpProver.interpolate(800822)[5] (0.001000 sec.)
        output:
          P[<<<array_max_1033@344:2>@347:1>@363:0>](<array_max_1033@344:0>:int,<array_max_1033@344:1>:int,<<array_max_1033@344:2>@347:0>:int,<<<array_max_1033@344:2>@347:1>@363:0>:int) =
          (<array_max_1033@344:1> <= 0)
      end ApronInterface.convex_hull_interpolate(800821)[4] (0.001000 sec.)
      begin HcSolver.check_validity(801053)[4]
        input:
          P[<fail_1487@445:0>](<fail_1487@445:0>:bool)|- bot
          
          P[<check_1148@409:2>](<f_check_1482@442:2>:int,<f_check_1482@442:0>:int,<f_check_1482@442:1>:int),
          P[<<<check_1148@409:3>@412:1>@440:0>](<f_check_1482@442:2>:int,<f_check_1482@442:0>:int,<f_check_1482@442:1>:int,<f_check_1482@442:0>:int,<f_check_1482@442:5>:int),
          ((<f_check_1482@442:5> > <f_check_1482@442:1>) &&
           ((<f_check_1482@442:0> < <f_check_1482@442:2>) && <fail_1487@445:0>))
          |- P[<fail_1487@445:0>](<fail_1487@445:0>:bool)
          
          P[<<<check_1148@383:3>@386:1>@402:0>](<check_1148@409:0>:int,(
                                                -1 + <check_1148@409:1>):int,<check_1148@409:2>:int,(
                                                -1 + <check_1148@409:1>):int,var1515:int),
          P[<check_1148@383:2>](<check_1148@409:0>:int,(-1 + <check_1148@409:1>):int,<check_1148@409:2>:int),
          P[<<<check_1148@383:3>@418:1>@434:0>](<check_1148@409:0>:int,(
                                                -1 + <check_1148@409:1>):int,<check_1148@409:2>:int,<<check_1148@409:3>@412:0>:int,<<<check_1148@409:3>@412:1>@440:0>:int),
          P[<check_1148@409:2>](<check_1148@409:0>:int,<check_1148@409:1>:int,<check_1148@409:2>:int),
          ((var1515 <= <check_1148@409:2>) && (<check_1148@409:1> < (1 + <check_1148@409:0>)))
          |- P[<<<check_1148@409:3>@412:1>@440:0>](<check_1148@409:0>:int,
                                                   <check_1148@409:1>:int,
                                                   <check_1148@409:2>:int,
                                                   <<check_1148@409:3>@412:0>:int,
                                                   <<<check_1148@409:3>@412:1>@440:0>:int)
          
          P[<<array_max_1033@344:3>@379:0>](<check_1148@383:0>:int,0:int,<check_1148@383:2>:int),
          P[<<make_array_1030@420:2>@432:0>](<check_1148@383:0>:int,<<check_1148@383:3>@418:0>:int,<<<check_1148@383:3>@418:1>@434:0>:int),
          P[<check_1148@383:2>](<check_1148@383:0>:int,<check_1148@383:1>:int,<check_1148@383:2>:int),
          (<check_1148@383:1> = 0)
          |- P[<<<check_1148@383:3>@418:1>@434:0>](<check_1148@383:0>:int,
                                                   <check_1148@383:1>:int,
                                                   <check_1148@383:2>:int,
                                                   <<check_1148@383:3>@418:0>:int,
                                                   <<<check_1148@383:3>@418:1>@434:0>:int)
          
          P[<make_array_1030@420:1>](<make_array_1030@420:0>:int,<make_array_1030@420:1>:int),
          ((0 <= <make_array_1030@420:1>) &&
           ((<make_array_1030@420:1> < <make_array_1030@420:0>) &&
            (<<make_array_1030@420:2>@432:0> = <make_array_1030@420:1>)))
          |- P[<<make_array_1030@420:2>@432:0>](<make_array_1030@420:0>:int,
                                                <make_array_1030@420:1>:int,
                                                <<make_array_1030@420:2>@432:0>:int)
          
          P[<<array_max_1033@344:3>@379:0>](<make_array_1030@420:0>:int,0:int,<check_1148@383:2>:int),
          P[<<check_1148@383:3>@418:0>](<make_array_1030@420:0>:int,0:int,<check_1148@383:2>:int,<make_array_1030@420:1>:int)|- P[<make_array_1030@420:1>](
          <make_array_1030@420:0>:int,<make_array_1030@420:1>:int)
          
          P[<<<check_1148@383:3>@386:1>@402:0>](<check_1148@383:0>:int,<check_1148@383:1>:int,<check_1148@383:2>:int,<check_1148@383:1>:int,var1516:int),
          P[<check_1148@383:2>](<check_1148@383:0>:int,<check_1148@383:1>:int,<check_1148@383:2>:int),
          P[<<check_1148@409:3>@412:0>](<check_1148@383:0>:int,(1 + <check_1148@383:1>):int,<check_1148@383:2>:int,<<check_1148@383:3>@418:0>:int),
          ((var1516 <= <check_1148@383:2>) && (<check_1148@383:1> < <check_1148@383:0>))
          |- P[<<check_1148@383:3>@418:0>](<check_1148@383:0>:int,<check_1148@383:1>:int,
                                           <check_1148@383:2>:int,<<check_1148@383:3>@418:0>:int)
          
          P[<check_1148@409:2>](<check_1148@409:0>:int,<check_1148@409:1>:int,<check_1148@409:2>:int),
          ((<check_1148@409:1> < <check_1148@409:0>) && (<<check_1148@409:3>@412:0> = <check_1148@409:1>))
          |- P[<<check_1148@409:3>@412:0>](<check_1148@409:0>:int,<check_1148@409:1>:int,
                                           <check_1148@409:2>:int,<<check_1148@409:3>@412:0>:int)
          
          P[<check_1148@383:2>](<check_1148@409:0>:int,(-1 + <check_1148@409:1>):int,<check_1148@409:2>:int),
          P[<<<check_1148@383:3>@386:1>@402:0>](<check_1148@409:0>:int,(
                                                -1 + <check_1148@409:1>):int,<check_1148@409:2>:int,(
                                                -1 + <check_1148@409:1>):int,var1517:int),
          ((var1517 <= <check_1148@409:2>) && (<check_1148@409:1> < (1 + <check_1148@409:0>)))
          |- P[<check_1148@409:2>](<check_1148@409:0>:int,<check_1148@409:1>:int,
                                   <check_1148@409:2>:int)
          
          P[<<array_max_1033@344:3>@379:0>](<check_1148@383:0>:int,0:int,<check_1148@383:2>:int),
          P[<<make_array_1030@388:2>@400:0>](<check_1148@383:0>:int,<<check_1148@383:3>@386:0>:int,<<<check_1148@383:3>@386:1>@402:0>:int),
          P[<check_1148@383:2>](<check_1148@383:0>:int,<check_1148@383:1>:int,<check_1148@383:2>:int),
          (<check_1148@383:1> = 0)
          |- P[<<<check_1148@383:3>@386:1>@402:0>](<check_1148@383:0>:int,
                                                   <check_1148@383:1>:int,
                                                   <check_1148@383:2>:int,
                                                   <<check_1148@383:3>@386:0>:int,
                                                   <<<check_1148@383:3>@386:1>@402:0>:int)
          
          P[<make_array_1030@388:1>](<make_array_1030@388:0>:int,<make_array_1030@388:1>:int),
          ((0 <= <make_array_1030@388:1>) &&
           ((<make_array_1030@388:1> < <make_array_1030@388:0>) &&
            (<<make_array_1030@388:2>@400:0> = <make_array_1030@388:1>)))
          |- P[<<make_array_1030@388:2>@400:0>](<make_array_1030@388:0>:int,
                                                <make_array_1030@388:1>:int,
                                                <<make_array_1030@388:2>@400:0>:int)
          
          P[<<array_max_1033@344:3>@379:0>](<make_array_1030@388:0>:int,0:int,<check_1148@383:2>:int),
          P[<<check_1148@383:3>@386:0>](<make_array_1030@388:0>:int,0:int,<check_1148@383:2>:int,<make_array_1030@388:1>:int)|- P[<make_array_1030@388:1>](
          <make_array_1030@388:0>:int,<make_array_1030@388:1>:int)
          
          P[<check_1148@383:2>](<check_1148@383:0>:int,<check_1148@383:1>:int,<check_1148@383:2>:int),
          ((<check_1148@383:1> < <check_1148@383:0>) && (<<check_1148@383:3>@386:0> = <check_1148@383:1>))
          |- P[<<check_1148@383:3>@386:0>](<check_1148@383:0>:int,<check_1148@383:1>:int,
                                           <check_1148@383:2>:int,<<check_1148@383:3>@386:0>:int)
          
          P[<<array_max_1033@344:3>@379:0>](<check_1148@383:0>:int,0:int,<check_1148@383:2>:int),
          (<check_1148@383:1> = 0)
          |- P[<check_1148@383:2>](<check_1148@383:0>:int,<check_1148@383:1>:int,
                                   <check_1148@383:2>:int)
          
          P[<array_max_1033@344:1>](<array_max_1033@344:0>:int,<array_max_1033@344:1>:int),
          P[<<<array_max_1033@344:2>@347:1>@363:0>](<array_max_1033@344:0>:int,<array_max_1033@344:1>:int,<array_max_1033@344:1>:int,var1518:int),
          P[<<array_max_1033@367:3>@370:0>](<array_max_1033@344:0>:int,(
                                            1 + <array_max_1033@344:1>):int,<<array_max_1033@344:3>@379:0>:int),
          ((var1518 <= <<array_max_1033@344:3>@379:0>) && (<array_max_1033@344:1> < <array_max_1033@344:0>))
          |- P[<<array_max_1033@344:3>@379:0>](<array_max_1033@344:0>:int,
                                               <array_max_1033@344:1>:int,
                                               <<array_max_1033@344:3>@379:0>:int)
          
          P[<array_max_1033@367:1>](<array_max_1033@367:0>:int,<array_max_1033@367:1>:int),
          ((<<array_max_1033@367:3>@370:0> = 0) && (<array_max_1033@367:1> >= <array_max_1033@367:0>))
          |- P[<<array_max_1033@367:3>@370:0>](<array_max_1033@367:0>:int,
                                               <array_max_1033@367:1>:int,
                                               <<array_max_1033@367:3>@370:0>:int)
          
          P[<array_max_1033@344:1>](<array_max_1033@367:0>:int,(-1 + <array_max_1033@367:1>):int),
          P[<<<array_max_1033@344:2>@347:1>@363:0>](<array_max_1033@367:0>:int,(
                                                    -1 + <array_max_1033@367:1>):int,(
                                                    -1 + <array_max_1033@367:1>):int,<f_array_max_1480@365:4>:int),
          (<array_max_1033@367:1> < (1 + <array_max_1033@367:0>))
          |- P[<array_max_1033@367:1>](<array_max_1033@367:0>:int,<array_max_1033@367:1>:int)
          
          P[<<make_array_1030@349:2>@361:0>](<array_max_1033@344:0>:int,<<array_max_1033@344:2>@347:0>:int,<<<array_max_1033@344:2>@347:1>@363:0>:int),
          P[<array_max_1033@344:1>](<array_max_1033@344:0>:int,<array_max_1033@344:1>:int),
          (<array_max_1033@344:1> = 0)
          |- P[<<<array_max_1033@344:2>@347:1>@363:0>](<array_max_1033@344:0>:int,
                                                       <array_max_1033@344:1>:int,
                                                       <<array_max_1033@344:2>@347:0>:int,
                                                       <<<array_max_1033@344:2>@347:1>@363:0>:int)
          
          P[<make_array_1030@349:1>](<make_array_1030@349:0>:int,<make_array_1030@349:1>:int),
          ((0 <= <make_array_1030@349:1>) &&
           ((<make_array_1030@349:1> < <make_array_1030@349:0>) &&
            (<<make_array_1030@349:2>@361:0> = <make_array_1030@349:1>)))
          |- P[<<make_array_1030@349:2>@361:0>](<make_array_1030@349:0>:int,
                                                <make_array_1030@349:1>:int,
                                                <<make_array_1030@349:2>@361:0>:int)
          
          P[<<array_max_1033@344:2>@347:0>](<make_array_1030@349:0>:int,0:int,<make_array_1030@349:1>:int)|- P[<make_array_1030@349:1>](
          <make_array_1030@349:0>:int,<make_array_1030@349:1>:int)
          
          P[<array_max_1033@344:1>](<array_max_1033@344:0>:int,<array_max_1033@344:1>:int),
          ((<array_max_1033@344:1> < <array_max_1033@344:0>) &&
           (<<array_max_1033@344:2>@347:0> = <array_max_1033@344:1>))
          |- P[<<array_max_1033@344:2>@347:0>](<array_max_1033@344:0>:int,
                                               <array_max_1033@344:1>:int,
                                               <<array_max_1033@344:2>@347:0>:int)
          
           (<array_max_1033@344:1> = 0)
          |- P[<array_max_1033@344:1>](<array_max_1033@344:0>:int,<array_max_1033@344:1>:int)
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        
      end HcSolver.check_validity(801053)[4] (0.017997 sec.)
      solution:
        P[<fail_1487@445:0>](var1648:bool) = false
        P[<<<check_1148@409:3>@412:1>@440:0>](<check_1148@383:0>:int,<check_1148@383:1>:int,<check_1148@383:2>:int,<<check_1148@383:3>@386:0>:int,<<<check_1148@383:3>@386:1>@402:0>:int) =
        true
        P[<<<check_1148@383:3>@418:1>@434:0>](<check_1148@383:0>:int,<check_1148@383:1>:int,<check_1148@383:2>:int,<<check_1148@383:3>@386:0>:int,<<<check_1148@383:3>@386:1>@402:0>:int) =
        true
        P[<<make_array_1030@420:2>@432:0>](<make_array_1030@349:0>:int,<make_array_1030@349:1>:int,<<make_array_1030@349:2>@361:0>:int) =
        true
        P[<make_array_1030@420:1>](<make_array_1030@349:0>:int,<make_array_1030@349:1>:int) = true
        P[<<check_1148@383:3>@418:0>](<check_1148@409:0>:int,<check_1148@409:1>:int,<check_1148@409:2>:int,<<check_1148@409:3>@412:0>:int) =
        true
        P[<<check_1148@409:3>@412:0>](<check_1148@409:0>:int,<check_1148@409:1>:int,<check_1148@409:2>:int,<<check_1148@409:3>@412:0>:int) =
        true
        P[<check_1148@409:2>](<check_1148@409:0>:int,<check_1148@409:1>:int,<check_1148@409:2>:int) =
        (<check_1148@409:0> <= <check_1148@409:1>)
        P[<<<check_1148@383:3>@386:1>@402:0>](<check_1148@383:0>:int,<check_1148@383:1>:int,<check_1148@383:2>:int,<<check_1148@383:3>@386:0>:int,<<<check_1148@383:3>@386:1>@402:0>:int) =
        true
        P[<<make_array_1030@388:2>@400:0>](<make_array_1030@349:0>:int,<make_array_1030@349:1>:int,<<make_array_1030@349:2>@361:0>:int) =
        true
        P[<make_array_1030@388:1>](<make_array_1030@349:0>:int,<make_array_1030@349:1>:int) = true
        P[<<check_1148@383:3>@386:0>](<check_1148@409:0>:int,<check_1148@409:1>:int,<check_1148@409:2>:int,<<check_1148@409:3>@412:0>:int) =
        true
        P[<check_1148@383:2>](<check_1148@383:0>:int,<check_1148@383:1>:int,<check_1148@383:2>:int) =
        (<check_1148@383:0> <= (1 + <check_1148@383:1>))
        P[<<array_max_1033@344:3>@379:0>](<array_max_1033@367:0>:int,<array_max_1033@367:1>:int,<<array_max_1033@367:3>@370:0>:int) =
        (<array_max_1033@367:0> <= 1)
        P[<<array_max_1033@367:3>@370:0>](<array_max_1033@367:0>:int,<array_max_1033@367:1>:int,<<array_max_1033@367:3>@370:0>:int) =
        (<array_max_1033@367:0> <= 1)
        P[<array_max_1033@367:1>](<array_max_1033@344:0>:int,<array_max_1033@344:1>:int) =
        (<array_max_1033@344:1> <= 1)
        P[<<<array_max_1033@344:2>@347:1>@363:0>](<array_max_1033@344:0>:int,<array_max_1033@344:1>:int,<<array_max_1033@344:2>@347:0>:int,<<<array_max_1033@344:2>@347:1>@363:0>:int) =
        (<array_max_1033@344:1> <= 0)
        P[<<make_array_1030@349:2>@361:0>](<make_array_1030@349:0>:int,<make_array_1030@349:1>:int,<<make_array_1030@349:2>@361:0>:int) =
        true
        P[<make_array_1030@349:1>](<make_array_1030@349:0>:int,<make_array_1030@349:1>:int) = true
        P[<<array_max_1033@344:2>@347:0>](<array_max_1033@344:0>:int,<array_max_1033@344:1>:int,<<array_max_1033@344:2>@347:0>:int) =
        true
        P[<array_max_1033@344:1>](<array_max_1033@344:0>:int,<array_max_1033@344:1>:int) =
        (<array_max_1033@344:1> <= 1)
    end GenHcSolver.solve(675144)[3] (0.560915 sec.)
    begin GenHcSolver.solve(803853)[3]
      Horn clauses:
        P[<fail_1487@445:0>](<fail_1487@445:0>:bool)|- bot
        
        P[<check_1148@409:2>](<f_check_1482@442:2>:int,<f_check_1482@442:0>:int,<f_check_1482@442:1>:int),
        P[<<<check_1148@409:3>@412:1>@440:0>](<f_check_1482@442:2>:int,<f_check_1482@442:0>:int,<f_check_1482@442:1>:int,<f_check_1482@442:0>:int,<f_check_1482@442:5>:int),
        ((<f_check_1482@442:5> > <f_check_1482@442:1>) &&
         ((<f_check_1482@442:0> < <f_check_1482@442:2>) && <fail_1487@445:0>))
        |- P[<fail_1487@445:0>](<fail_1487@445:0>:bool)
        
        P[<<<check_1148@383:3>@386:1>@402:0>](<check_1148@409:0>:int,(
                                              -1 + <check_1148@409:1>):int,<check_1148@409:2>:int,(
                                              -1 + <check_1148@409:1>):int,var1515:int),
        P[<check_1148@383:2>](<check_1148@409:0>:int,(-1 + <check_1148@409:1>):int,<check_1148@409:2>:int),
        P[<<<check_1148@383:3>@418:1>@434:0>](<check_1148@409:0>:int,(
                                              -1 + <check_1148@409:1>):int,<check_1148@409:2>:int,<<check_1148@409:3>@412:0>:int,<<<check_1148@409:3>@412:1>@440:0>:int),
        P[<check_1148@409:2>](<check_1148@409:0>:int,<check_1148@409:1>:int,<check_1148@409:2>:int),
        ((var1515 <= <check_1148@409:2>) && (<check_1148@409:1> < (1 + <check_1148@409:0>)))
        |- P[<<<check_1148@409:3>@412:1>@440:0>](<check_1148@409:0>:int,
                                                 <check_1148@409:1>:int,
                                                 <check_1148@409:2>:int,
                                                 <<check_1148@409:3>@412:0>:int,
                                                 <<<check_1148@409:3>@412:1>@440:0>:int)
        
        P[<<array_max_1033@344:3>@379:0>](<check_1148@383:0>:int,0:int,<check_1148@383:2>:int),
        P[<<make_array_1030@420:2>@432:0>](<check_1148@383:0>:int,<<check_1148@383:3>@418:0>:int,<<<check_1148@383:3>@418:1>@434:0>:int),
        P[<check_1148@383:2>](<check_1148@383:0>:int,<check_1148@383:1>:int,<check_1148@383:2>:int),
        (<check_1148@383:1> = 0)
        |- P[<<<check_1148@383:3>@418:1>@434:0>](<check_1148@383:0>:int,
                                                 <check_1148@383:1>:int,
                                                 <check_1148@383:2>:int,
                                                 <<check_1148@383:3>@418:0>:int,
                                                 <<<check_1148@383:3>@418:1>@434:0>:int)
        
        P[<make_array_1030@420:1>](<make_array_1030@420:0>:int,<make_array_1030@420:1>:int),
        ((0 <= <make_array_1030@420:1>) &&
         ((<make_array_1030@420:1> < <make_array_1030@420:0>) &&
          (<<make_array_1030@420:2>@432:0> = <make_array_1030@420:1>)))
        |- P[<<make_array_1030@420:2>@432:0>](<make_array_1030@420:0>:int,
                                              <make_array_1030@420:1>:int,
                                              <<make_array_1030@420:2>@432:0>:int)
        
        P[<<array_max_1033@344:3>@379:0>](<make_array_1030@420:0>:int,0:int,<check_1148@383:2>:int),
        P[<<check_1148@383:3>@418:0>](<make_array_1030@420:0>:int,0:int,<check_1148@383:2>:int,<make_array_1030@420:1>:int)|- P[<make_array_1030@420:1>](
        <make_array_1030@420:0>:int,<make_array_1030@420:1>:int)
        
        P[<<<check_1148@383:3>@386:1>@402:0>](<check_1148@383:0>:int,<check_1148@383:1>:int,<check_1148@383:2>:int,<check_1148@383:1>:int,var1516:int),
        P[<check_1148@383:2>](<check_1148@383:0>:int,<check_1148@383:1>:int,<check_1148@383:2>:int),
        P[<<check_1148@409:3>@412:0>](<check_1148@383:0>:int,(1 + <check_1148@383:1>):int,<check_1148@383:2>:int,<<check_1148@383:3>@418:0>:int),
        ((var1516 <= <check_1148@383:2>) && (<check_1148@383:1> < <check_1148@383:0>))
        |- P[<<check_1148@383:3>@418:0>](<check_1148@383:0>:int,<check_1148@383:1>:int,
                                         <check_1148@383:2>:int,<<check_1148@383:3>@418:0>:int)
        
        P[<check_1148@409:2>](<check_1148@409:0>:int,<check_1148@409:1>:int,<check_1148@409:2>:int),
        ((<check_1148@409:1> < <check_1148@409:0>) && (<<check_1148@409:3>@412:0> = <check_1148@409:1>))
        |- P[<<check_1148@409:3>@412:0>](<check_1148@409:0>:int,<check_1148@409:1>:int,
                                         <check_1148@409:2>:int,<<check_1148@409:3>@412:0>:int)
        
        P[<check_1148@383:2>](<check_1148@409:0>:int,(-1 + <check_1148@409:1>):int,<check_1148@409:2>:int),
        P[<<<check_1148@383:3>@386:1>@402:0>](<check_1148@409:0>:int,(
                                              -1 + <check_1148@409:1>):int,<check_1148@409:2>:int,(
                                              -1 + <check_1148@409:1>):int,var1517:int),
        ((var1517 <= <check_1148@409:2>) && (<check_1148@409:1> < (1 + <check_1148@409:0>)))
        |- P[<check_1148@409:2>](<check_1148@409:0>:int,<check_1148@409:1>:int,
                                 <check_1148@409:2>:int)
        
        P[<<array_max_1033@344:3>@379:0>](<check_1148@383:0>:int,0:int,<check_1148@383:2>:int),
        P[<<make_array_1030@388:2>@400:0>](<check_1148@383:0>:int,<<check_1148@383:3>@386:0>:int,<<<check_1148@383:3>@386:1>@402:0>:int),
        P[<check_1148@383:2>](<check_1148@383:0>:int,<check_1148@383:1>:int,<check_1148@383:2>:int),
        (<check_1148@383:1> = 0)
        |- P[<<<check_1148@383:3>@386:1>@402:0>](<check_1148@383:0>:int,
                                                 <check_1148@383:1>:int,
                                                 <check_1148@383:2>:int,
                                                 <<check_1148@383:3>@386:0>:int,
                                                 <<<check_1148@383:3>@386:1>@402:0>:int)
        
        P[<make_array_1030@388:1>](<make_array_1030@388:0>:int,<make_array_1030@388:1>:int),
        ((0 <= <make_array_1030@388:1>) &&
         ((<make_array_1030@388:1> < <make_array_1030@388:0>) &&
          (<<make_array_1030@388:2>@400:0> = <make_array_1030@388:1>)))
        |- P[<<make_array_1030@388:2>@400:0>](<make_array_1030@388:0>:int,
                                              <make_array_1030@388:1>:int,
                                              <<make_array_1030@388:2>@400:0>:int)
        
        P[<<array_max_1033@344:3>@379:0>](<make_array_1030@388:0>:int,0:int,<check_1148@383:2>:int),
        P[<<check_1148@383:3>@386:0>](<make_array_1030@388:0>:int,0:int,<check_1148@383:2>:int,<make_array_1030@388:1>:int)|- P[<make_array_1030@388:1>](
        <make_array_1030@388:0>:int,<make_array_1030@388:1>:int)
        
        P[<check_1148@383:2>](<check_1148@383:0>:int,<check_1148@383:1>:int,<check_1148@383:2>:int),
        ((<check_1148@383:1> < <check_1148@383:0>) && (<<check_1148@383:3>@386:0> = <check_1148@383:1>))
        |- P[<<check_1148@383:3>@386:0>](<check_1148@383:0>:int,<check_1148@383:1>:int,
                                         <check_1148@383:2>:int,<<check_1148@383:3>@386:0>:int)
        
        P[<<array_max_1033@344:3>@379:0>](<check_1148@383:0>:int,0:int,<check_1148@383:2>:int),
        (<check_1148@383:1> = 0)
        |- P[<check_1148@383:2>](<check_1148@383:0>:int,<check_1148@383:1>:int,
                                 <check_1148@383:2>:int)
        
        P[<array_max_1033@344:1>](<array_max_1033@344:0>:int,<array_max_1033@344:1>:int),
        P[<<<array_max_1033@344:2>@347:1>@363:0>](<array_max_1033@344:0>:int,<array_max_1033@344:1>:int,<array_max_1033@344:1>:int,var1518:int),
        P[<<array_max_1033@367:3>@370:0>](<array_max_1033@344:0>:int,(
                                          1 + <array_max_1033@344:1>):int,<<array_max_1033@344:3>@379:0>:int),
        ((var1518 <= <<array_max_1033@344:3>@379:0>) && (<array_max_1033@344:1> < <array_max_1033@344:0>))
        |- P[<<array_max_1033@344:3>@379:0>](<array_max_1033@344:0>:int,
                                             <array_max_1033@344:1>:int,
                                             <<array_max_1033@344:3>@379:0>:int)
        
        P[<array_max_1033@367:1>](<array_max_1033@367:0>:int,<array_max_1033@367:1>:int),
        ((<<array_max_1033@367:3>@370:0> = 0) && (<array_max_1033@367:1> >= <array_max_1033@367:0>))
        |- P[<<array_max_1033@367:3>@370:0>](<array_max_1033@367:0>:int,
                                             <array_max_1033@367:1>:int,
                                             <<array_max_1033@367:3>@370:0>:int)
        
        P[<array_max_1033@344:1>](<array_max_1033@367:0>:int,(-1 + <array_max_1033@367:1>):int),
        P[<<<array_max_1033@344:2>@347:1>@363:0>](<array_max_1033@367:0>:int,(
                                                  -1 + <array_max_1033@367:1>):int,(
                                                  -1 + <array_max_1033@367:1>):int,<f_array_max_1480@365:4>:int),
        (<array_max_1033@367:1> < (1 + <array_max_1033@367:0>))
        |- P[<array_max_1033@367:1>](<array_max_1033@367:0>:int,<array_max_1033@367:1>:int)
        
        P[<<make_array_1030@349:2>@361:0>](<array_max_1033@344:0>:int,<<array_max_1033@344:2>@347:0>:int,<<<array_max_1033@344:2>@347:1>@363:0>:int),
        P[<array_max_1033@344:1>](<array_max_1033@344:0>:int,<array_max_1033@344:1>:int), (
        <array_max_1033@344:1> = 0)
        |- P[<<<array_max_1033@344:2>@347:1>@363:0>](<array_max_1033@344:0>:int,
                                                     <array_max_1033@344:1>:int,
                                                     <<array_max_1033@344:2>@347:0>:int,
                                                     <<<array_max_1033@344:2>@347:1>@363:0>:int)
        
        P[<make_array_1030@349:1>](<make_array_1030@349:0>:int,<make_array_1030@349:1>:int),
        ((0 <= <make_array_1030@349:1>) &&
         ((<make_array_1030@349:1> < <make_array_1030@349:0>) &&
          (<<make_array_1030@349:2>@361:0> = <make_array_1030@349:1>)))
        |- P[<<make_array_1030@349:2>@361:0>](<make_array_1030@349:0>:int,
                                              <make_array_1030@349:1>:int,
                                              <<make_array_1030@349:2>@361:0>:int)
        
        P[<<array_max_1033@344:2>@347:0>](<make_array_1030@349:0>:int,0:int,<make_array_1030@349:1>:int)|- P[<make_array_1030@349:1>](
        <make_array_1030@349:0>:int,<make_array_1030@349:1>:int)
        
        P[<array_max_1033@344:1>](<array_max_1033@344:0>:int,<array_max_1033@344:1>:int),
        ((<array_max_1033@344:1> < <array_max_1033@344:0>) && (<<array_max_1033@344:2>@347:0> = <array_max_1033@344:1>))
        |- P[<<array_max_1033@344:2>@347:0>](<array_max_1033@344:0>:int,
                                             <array_max_1033@344:1>:int,
                                             <<array_max_1033@344:2>@347:0>:int)
        
         (<array_max_1033@344:1> = 0)
        |- P[<array_max_1033@344:1>](<array_max_1033@344:0>:int,<array_max_1033@344:1>:int)
      lower bounds:
        P[<array_max_1033@344:1>](<array_max_1033@344:0>:int,<array_max_1033@344:1>:int) = (<array_max_1033@344:1> = 0)
        P[<<array_max_1033@344:2>@347:0>](<array_max_1033@344:0>:int,<array_max_1033@344:1>:int,<<array_max_1033@344:2>@347:0>:int) =
        ((<array_max_1033@344:1> = 0) &&
         ((<array_max_1033@344:1> < <array_max_1033@344:0>) &&
          (<<array_max_1033@344:2>@347:0> = <array_max_1033@344:1>)))
        P[<make_array_1030@349:1>](<make_array_1030@349:0>:int,<make_array_1030@349:1>:int) =
        ((<make_array_1030@349:1> = 0) && (0 < <make_array_1030@349:0>))
        P[<<make_array_1030@349:2>@361:0>](<make_array_1030@349:0>:int,<make_array_1030@349:1>:int,<<make_array_1030@349:2>@361:0>:int) =
        ((<make_array_1030@349:1> = 0) &&
         ((<make_array_1030@349:1> < <make_array_1030@349:0>) &&
          ((0 < <make_array_1030@349:0>) && (<<make_array_1030@349:2>@361:0> = <make_array_1030@349:1>))))
        P[<<<array_max_1033@344:2>@347:1>@363:0>](<array_max_1033@344:0>:int,<array_max_1033@344:1>:int,<<array_max_1033@344:2>@347:0>:int,<<<array_max_1033@344:2>@347:1>@363:0>:int) =
        ((<<array_max_1033@344:2>@347:0> = 0) &&
         ((<array_max_1033@344:1> = 0) &&
          ((<<array_max_1033@344:2>@347:0> < <array_max_1033@344:0>) &&
           ((0 < <array_max_1033@344:0>) && (<<<array_max_1033@344:2>@347:1>@363:0> = <<array_max_1033@344:2>@347:0>)))))
        P[<array_max_1033@367:1>](<array_max_1033@367:0>:int,<array_max_1033@367:1>:int) =
        ((<array_max_1033@367:1> = 1) &&
         ((0 < <array_max_1033@367:0>) && (<array_max_1033@367:1> < (1 + <array_max_1033@367:0>))))
        P[<<array_max_1033@367:3>@370:0>](<array_max_1033@367:0>:int,<array_max_1033@367:1>:int,<<array_max_1033@367:3>@370:0>:int) =
        ((<<array_max_1033@367:3>@370:0> = 0) &&
         ((<array_max_1033@367:1> = 1) &&
          ((0 < <array_max_1033@367:0>) && (<array_max_1033@367:1> = <array_max_1033@367:0>))))
        P[<<array_max_1033@344:3>@379:0>](<array_max_1033@344:0>:int,<array_max_1033@344:1>:int,<<array_max_1033@344:3>@379:0>:int) =
        ((<<array_max_1033@344:3>@379:0> = 0) &&
         ((<array_max_1033@344:1> = 0) &&
          (((1 + <array_max_1033@344:1>) = <array_max_1033@344:0>) && (0 < <array_max_1033@344:0>))))
        P[<check_1148@383:2>](<check_1148@383:0>:int,<check_1148@383:1>:int,<check_1148@383:2>:int) =
        ((<check_1148@383:1> = 0) && ((<check_1148@383:2> = 0) && (<check_1148@383:0> = 1)))
        P[<<check_1148@383:3>@386:0>](<check_1148@383:0>:int,<check_1148@383:1>:int,<check_1148@383:2>:int,<<check_1148@383:3>@386:0>:int) =
        ((<check_1148@383:1> = 0) &&
         ((<check_1148@383:2> = 0) && ((<check_1148@383:0> = 1) && (<<check_1148@383:3>@386:0> = <check_1148@383:1>))))
        P[<make_array_1030@388:1>](<make_array_1030@388:0>:int,<make_array_1030@388:1>:int) =
        ((<make_array_1030@388:1> = 0) && (<make_array_1030@388:0> = 1))
        P[<<make_array_1030@388:2>@400:0>](<make_array_1030@388:0>:int,<make_array_1030@388:1>:int,<<make_array_1030@388:2>@400:0>:int) =
        ((<make_array_1030@388:1> = 0) &&
         ((<make_array_1030@388:0> = 1) && (<<make_array_1030@388:2>@400:0> = <make_array_1030@388:1>)))
        P[<<<check_1148@383:3>@386:1>@402:0>](<check_1148@383:0>:int,<check_1148@383:1>:int,<check_1148@383:2>:int,<<check_1148@383:3>@386:0>:int,<<<check_1148@383:3>@386:1>@402:0>:int) =
        ((<check_1148@383:0> = 1) &&
         ((<<check_1148@383:3>@386:0> = 0) &&
          ((<check_1148@383:1> = 0) &&
           ((<check_1148@383:2> = 0) && (<<<check_1148@383:3>@386:1>@402:0> = <<check_1148@383:3>@386:0>)))))
        P[<check_1148@409:2>](<check_1148@409:0>:int,<check_1148@409:1>:int,<check_1148@409:2>:int) =
        ((<check_1148@409:2> = 0) && ((<check_1148@409:1> = 1) && (<check_1148@409:0> = 1)))
        P[<<check_1148@409:3>@412:0>](<check_1148@409:0>:int,<check_1148@409:1>:int,<check_1148@409:2>:int,<<check_1148@409:3>@412:0>:int) =
        false
        P[<<check_1148@383:3>@418:0>](<check_1148@383:0>:int,<check_1148@383:1>:int,<check_1148@383:2>:int,<<check_1148@383:3>@418:0>:int) =
        false
        P[<make_array_1030@420:1>](<make_array_1030@420:0>:int,<make_array_1030@420:1>:int) = false
        P[<<make_array_1030@420:2>@432:0>](<make_array_1030@420:0>:int,<make_array_1030@420:1>:int,<<make_array_1030@420:2>@432:0>:int) =
        false
        P[<<<check_1148@383:3>@418:1>@434:0>](<check_1148@383:0>:int,<check_1148@383:1>:int,<check_1148@383:2>:int,<<check_1148@383:3>@418:0>:int,<<<check_1148@383:3>@418:1>@434:0>:int) =
        false
        P[<<<check_1148@409:3>@412:1>@440:0>](<check_1148@409:0>:int,<check_1148@409:1>:int,<check_1148@409:2>:int,<<check_1148@409:3>@412:0>:int,<<<check_1148@409:3>@412:1>@440:0>:int) =
        false
        P[<fail_1487@445:0>](<fail_1487@445:0>:bool) = false
      upper bounds:
        P[<<<check_1148@409:3>@412:1>@440:0>](var1693:int,var1694:int,var1695:int,var1696:int,var1697:int) = true
        P[<<<check_1148@383:3>@418:1>@434:0>](var1684:int,var1685:int,var1686:int,var1687:int,var1688:int) = true
        P[<<<check_1148@383:3>@386:1>@402:0>](var1675:int,var1676:int,var1677:int,var1678:int,var1679:int) = true
      begin GenHcSolver.classify_pids(828816)[4]
        output:
          [<<<check_1148@383:3>@386:1>@402:0>;<<<check_1148@383:3>@418:1>@434:0>;<<<check_1148@409:3>@412:1>@440:0>]
      end GenHcSolver.classify_pids(828816)[4] (0.000000 sec.)
      begin ApronInterface.convex_hull_interpolate(828837)[4]
        lb:((<check_1148@383:0> = 1) &&
            ((<<check_1148@383:3>@386:0> = 0) &&
             ((<check_1148@383:1> = 0) &&
              ((<check_1148@383:2> = 0) && (<<<check_1148@383:3>@386:1>@402:0> = <<check_1148@383:3>@386:0>)))))
        nub:false
        begin ExtFormula.Formula.case_analysis_boolean(828880)[5]
          ts: ((<check_1148@383:0> = 1) &&
               ((<<check_1148@383:3>@386:0> = 0) &&
                ((<check_1148@383:1> = 0) &&
                 ((<check_1148@383:2> = 0) && (<<<check_1148@383:3>@386:1>@402:0> = <<check_1148@383:3>@386:0>)))))
          
        end ExtFormula.Formula.case_analysis_boolean(828880)[5] (0.000000 sec.)
        begin ExtFormula.Formula.case_analysis_boolean(828892)[5]
          ts: false
          
        end ExtFormula.Formula.case_analysis_boolean(828892)[5] (0.000000 sec.)
        lb':((<<<check_1148@383:3>@386:1>@402:0> = 0) &&
             ((<<check_1148@383:3>@386:0> = 0) &&
              ((<check_1148@383:2> = 0) && ((<check_1148@383:1> = 0) && ((-1 + <check_1148@383:0>) = 0)))))
        nub':(-1 >= 0)
        begin InterpProver.interpolate(828895)[5]
          begin InterpProver.interpolate_fresh(828896)[6]
            begin InterpProver.interpolate_log(828897)[7]
              input1: ((<<<check_1148@383:3>@386:1>@402:0> = 0) &&
                       ((<<check_1148@383:3>@386:0> = 0) &&
                        ((<check_1148@383:2> = 0) && ((<check_1148@383:1> = 0) && ((-1 + <check_1148@383:0>) = 0)))))
              input2: (-1 >= 0)
              begin InterpProver.interpolate_check(828898)[8]
                begin InterpProver.interpolate_simplify(828899)[9]
                  begin InterpProver.interpolate_quick(828973)[10]
                    
                  end InterpProver.interpolate_quick(828973)[10] (0.000000 sec.)
                  
                end InterpProver.interpolate_simplify(828899)[9] (0.000000 sec.)
                
              end InterpProver.interpolate_check(828898)[8] (0.000000 sec.)
              output: true
            end InterpProver.interpolate_log(828897)[7] (0.001000 sec.)
            
          end InterpProver.interpolate_fresh(828896)[6] (0.001000 sec.)
          
        end InterpProver.interpolate(828895)[5] (0.001000 sec.)
        output:
          P[<<<check_1148@383:3>@386:1>@402:0>](<check_1148@383:0>:int,<check_1148@383:1>:int,<check_1148@383:2>:int,<<check_1148@383:3>@386:0>:int,<<<check_1148@383:3>@386:1>@402:0>:int) =
          true
          P[<<<check_1148@383:3>@418:1>@434:0>](<check_1148@383:0>:int,<check_1148@383:1>:int,<check_1148@383:2>:int,<<check_1148@383:3>@386:0>:int,<<<check_1148@383:3>@386:1>@402:0>:int) =
          true
          P[<<<check_1148@409:3>@412:1>@440:0>](<check_1148@383:0>:int,<check_1148@383:1>:int,<check_1148@383:2>:int,<<check_1148@383:3>@386:0>:int,<<<check_1148@383:3>@386:1>@402:0>:int) =
          true
      end ApronInterface.convex_hull_interpolate(828837)[4] (0.002000 sec.)
      Horn clauses:
        P[<fail_1487@445:0>](<fail_1487@445:0>:bool)|- bot
        
        P[<check_1148@409:2>](<f_check_1482@442:2>:int,<f_check_1482@442:0>:int,<f_check_1482@442:1>:int),
        ((<f_check_1482@442:0> < <f_check_1482@442:2>) && <fail_1487@445:0>)
        |- P[<fail_1487@445:0>](<fail_1487@445:0>:bool)
        
        P[<make_array_1030@420:1>](<make_array_1030@420:0>:int,<make_array_1030@420:1>:int),
        ((0 <= <make_array_1030@420:1>) &&
         ((<make_array_1030@420:1> < <make_array_1030@420:0>) &&
          (<<make_array_1030@420:2>@432:0> = <make_array_1030@420:1>)))
        |- P[<<make_array_1030@420:2>@432:0>](<make_array_1030@420:0>:int,
                                              <make_array_1030@420:1>:int,
                                              <<make_array_1030@420:2>@432:0>:int)
        
        P[<<array_max_1033@344:3>@379:0>](<make_array_1030@420:0>:int,0:int,<check_1148@383:2>:int),
        P[<<check_1148@383:3>@418:0>](<make_array_1030@420:0>:int,0:int,<check_1148@383:2>:int,<make_array_1030@420:1>:int)|- P[<make_array_1030@420:1>](
        <make_array_1030@420:0>:int,<make_array_1030@420:1>:int)
        
        P[<check_1148@383:2>](<check_1148@383:0>:int,<check_1148@383:1>:int,<check_1148@383:2>:int),
        P[<<check_1148@409:3>@412:0>](<check_1148@383:0>:int,(1 + <check_1148@383:1>):int,<check_1148@383:2>:int,<<check_1148@383:3>@418:0>:int),
        (<check_1148@383:1> < <check_1148@383:0>)
        |- P[<<check_1148@383:3>@418:0>](<check_1148@383:0>:int,<check_1148@383:1>:int,
                                         <check_1148@383:2>:int,<<check_1148@383:3>@418:0>:int)
        
        P[<check_1148@409:2>](<check_1148@409:0>:int,<check_1148@409:1>:int,<check_1148@409:2>:int),
        ((<check_1148@409:1> < <check_1148@409:0>) && (<<check_1148@409:3>@412:0> = <check_1148@409:1>))
        |- P[<<check_1148@409:3>@412:0>](<check_1148@409:0>:int,<check_1148@409:1>:int,
                                         <check_1148@409:2>:int,<<check_1148@409:3>@412:0>:int)
        
        P[<check_1148@383:2>](<check_1148@409:0>:int,(-1 + <check_1148@409:1>):int,<check_1148@409:2>:int),
        (<check_1148@409:1> < (1 + <check_1148@409:0>))
        |- P[<check_1148@409:2>](<check_1148@409:0>:int,<check_1148@409:1>:int,
                                 <check_1148@409:2>:int)
        
        P[<make_array_1030@388:1>](<make_array_1030@388:0>:int,<make_array_1030@388:1>:int),
        ((0 <= <make_array_1030@388:1>) &&
         ((<make_array_1030@388:1> < <make_array_1030@388:0>) &&
          (<<make_array_1030@388:2>@400:0> = <make_array_1030@388:1>)))
        |- P[<<make_array_1030@388:2>@400:0>](<make_array_1030@388:0>:int,
                                              <make_array_1030@388:1>:int,
                                              <<make_array_1030@388:2>@400:0>:int)
        
        P[<<array_max_1033@344:3>@379:0>](<make_array_1030@388:0>:int,0:int,<check_1148@383:2>:int),
        P[<<check_1148@383:3>@386:0>](<make_array_1030@388:0>:int,0:int,<check_1148@383:2>:int,<make_array_1030@388:1>:int)|- P[<make_array_1030@388:1>](
        <make_array_1030@388:0>:int,<make_array_1030@388:1>:int)
        
        P[<check_1148@383:2>](<check_1148@383:0>:int,<check_1148@383:1>:int,<check_1148@383:2>:int),
        ((<check_1148@383:1> < <check_1148@383:0>) && (<<check_1148@383:3>@386:0> = <check_1148@383:1>))
        |- P[<<check_1148@383:3>@386:0>](<check_1148@383:0>:int,<check_1148@383:1>:int,
                                         <check_1148@383:2>:int,<<check_1148@383:3>@386:0>:int)
        
        P[<<array_max_1033@344:3>@379:0>](<check_1148@383:0>:int,0:int,<check_1148@383:2>:int),
        (<check_1148@383:1> = 0)
        |- P[<check_1148@383:2>](<check_1148@383:0>:int,<check_1148@383:1>:int,
                                 <check_1148@383:2>:int)
        
        P[<array_max_1033@344:1>](<array_max_1033@344:0>:int,<array_max_1033@344:1>:int),
        P[<<<array_max_1033@344:2>@347:1>@363:0>](<array_max_1033@344:0>:int,<array_max_1033@344:1>:int,<array_max_1033@344:1>:int,var1518:int),
        P[<<array_max_1033@367:3>@370:0>](<array_max_1033@344:0>:int,(
                                          1 + <array_max_1033@344:1>):int,<<array_max_1033@344:3>@379:0>:int),
        ((var1518 <= <<array_max_1033@344:3>@379:0>) && (<array_max_1033@344:1> < <array_max_1033@344:0>))
        |- P[<<array_max_1033@344:3>@379:0>](<array_max_1033@344:0>:int,
                                             <array_max_1033@344:1>:int,
                                             <<array_max_1033@344:3>@379:0>:int)
        
        P[<array_max_1033@367:1>](<array_max_1033@367:0>:int,<array_max_1033@367:1>:int),
        ((<<array_max_1033@367:3>@370:0> = 0) && (<array_max_1033@367:1> >= <array_max_1033@367:0>))
        |- P[<<array_max_1033@367:3>@370:0>](<array_max_1033@367:0>:int,
                                             <array_max_1033@367:1>:int,
                                             <<array_max_1033@367:3>@370:0>:int)
        
        P[<array_max_1033@344:1>](<array_max_1033@367:0>:int,(-1 + <array_max_1033@367:1>):int),
        P[<<<array_max_1033@344:2>@347:1>@363:0>](<array_max_1033@367:0>:int,(
                                                  -1 + <array_max_1033@367:1>):int,(
                                                  -1 + <array_max_1033@367:1>):int,<f_array_max_1480@365:4>:int),
        (<array_max_1033@367:1> < (1 + <array_max_1033@367:0>))
        |- P[<array_max_1033@367:1>](<array_max_1033@367:0>:int,<array_max_1033@367:1>:int)
        
        P[<<make_array_1030@349:2>@361:0>](<array_max_1033@344:0>:int,<<array_max_1033@344:2>@347:0>:int,<<<array_max_1033@344:2>@347:1>@363:0>:int),
        P[<array_max_1033@344:1>](<array_max_1033@344:0>:int,<array_max_1033@344:1>:int), (
        <array_max_1033@344:1> = 0)
        |- P[<<<array_max_1033@344:2>@347:1>@363:0>](<array_max_1033@344:0>:int,
                                                     <array_max_1033@344:1>:int,
                                                     <<array_max_1033@344:2>@347:0>:int,
                                                     <<<array_max_1033@344:2>@347:1>@363:0>:int)
        
        P[<make_array_1030@349:1>](<make_array_1030@349:0>:int,<make_array_1030@349:1>:int),
        ((0 <= <make_array_1030@349:1>) &&
         ((<make_array_1030@349:1> < <make_array_1030@349:0>) &&
          (<<make_array_1030@349:2>@361:0> = <make_array_1030@349:1>)))
        |- P[<<make_array_1030@349:2>@361:0>](<make_array_1030@349:0>:int,
                                              <make_array_1030@349:1>:int,
                                              <<make_array_1030@349:2>@361:0>:int)
        
        P[<<array_max_1033@344:2>@347:0>](<make_array_1030@349:0>:int,0:int,<make_array_1030@349:1>:int)|- P[<make_array_1030@349:1>](
        <make_array_1030@349:0>:int,<make_array_1030@349:1>:int)
        
        P[<array_max_1033@344:1>](<array_max_1033@344:0>:int,<array_max_1033@344:1>:int),
        ((<array_max_1033@344:1> < <array_max_1033@344:0>) && (<<array_max_1033@344:2>@347:0> = <array_max_1033@344:1>))
        |- P[<<array_max_1033@344:2>@347:0>](<array_max_1033@344:0>:int,
                                             <array_max_1033@344:1>:int,
                                             <<array_max_1033@344:2>@347:0>:int)
        
         (<array_max_1033@344:1> = 0)
        |- P[<array_max_1033@344:1>](<array_max_1033@344:0>:int,<array_max_1033@344:1>:int)
      lower bounds:
        P[<array_max_1033@344:1>](<array_max_1033@344:0>:int,<array_max_1033@344:1>:int) = (<array_max_1033@344:1> = 0)
        P[<<array_max_1033@344:2>@347:0>](<array_max_1033@344:0>:int,<array_max_1033@344:1>:int,<<array_max_1033@344:2>@347:0>:int) =
        ((<array_max_1033@344:1> = 0) &&
         ((<array_max_1033@344:1> < <array_max_1033@344:0>) &&
          (<<array_max_1033@344:2>@347:0> = <array_max_1033@344:1>)))
        P[<make_array_1030@349:1>](<make_array_1030@349:0>:int,<make_array_1030@349:1>:int) =
        ((<make_array_1030@349:1> = 0) && (0 < <make_array_1030@349:0>))
        P[<<make_array_1030@349:2>@361:0>](<make_array_1030@349:0>:int,<make_array_1030@349:1>:int,<<make_array_1030@349:2>@361:0>:int) =
        ((<make_array_1030@349:1> = 0) &&
         ((<make_array_1030@349:1> < <make_array_1030@349:0>) &&
          ((0 < <make_array_1030@349:0>) && (<<make_array_1030@349:2>@361:0> = <make_array_1030@349:1>))))
        P[<<<array_max_1033@344:2>@347:1>@363:0>](<array_max_1033@344:0>:int,<array_max_1033@344:1>:int,<<array_max_1033@344:2>@347:0>:int,<<<array_max_1033@344:2>@347:1>@363:0>:int) =
        ((<<array_max_1033@344:2>@347:0> = 0) &&
         ((<array_max_1033@344:1> = 0) &&
          ((<<array_max_1033@344:2>@347:0> < <array_max_1033@344:0>) &&
           ((0 < <array_max_1033@344:0>) && (<<<array_max_1033@344:2>@347:1>@363:0> = <<array_max_1033@344:2>@347:0>)))))
        P[<array_max_1033@367:1>](<array_max_1033@367:0>:int,<array_max_1033@367:1>:int) =
        ((<array_max_1033@367:1> = 1) &&
         ((0 < <array_max_1033@367:0>) && (<array_max_1033@367:1> < (1 + <array_max_1033@367:0>))))
        P[<<array_max_1033@367:3>@370:0>](<array_max_1033@367:0>:int,<array_max_1033@367:1>:int,<<array_max_1033@367:3>@370:0>:int) =
        ((<<array_max_1033@367:3>@370:0> = 0) &&
         ((<array_max_1033@367:1> = 1) &&
          ((0 < <array_max_1033@367:0>) && (<array_max_1033@367:1> = <array_max_1033@367:0>))))
        P[<<array_max_1033@344:3>@379:0>](<array_max_1033@344:0>:int,<array_max_1033@344:1>:int,<<array_max_1033@344:3>@379:0>:int) =
        ((<<array_max_1033@344:3>@379:0> = 0) &&
         ((<array_max_1033@344:1> = 0) &&
          (((1 + <array_max_1033@344:1>) = <array_max_1033@344:0>) && (0 < <array_max_1033@344:0>))))
        P[<check_1148@383:2>](<check_1148@383:0>:int,<check_1148@383:1>:int,<check_1148@383:2>:int) =
        ((<check_1148@383:1> = 0) && ((<check_1148@383:2> = 0) && (<check_1148@383:0> = 1)))
        P[<check_1148@409:2>](<check_1148@409:0>:int,<check_1148@409:1>:int,<check_1148@409:2>:int) =
        ((<check_1148@409:1> = 1) && ((<check_1148@409:2> = 0) && (<check_1148@409:0> = 1)))
        P[<<check_1148@383:3>@386:0>](<check_1148@383:0>:int,<check_1148@383:1>:int,<check_1148@383:2>:int,<<check_1148@383:3>@386:0>:int) =
        ((<check_1148@383:1> = 0) &&
         ((<check_1148@383:2> = 0) && ((<check_1148@383:0> = 1) && (<<check_1148@383:3>@386:0> = <check_1148@383:1>))))
        P[<fail_1487@445:0>](<fail_1487@445:0>:bool) = false
        P[<<check_1148@409:3>@412:0>](<check_1148@409:0>:int,<check_1148@409:1>:int,<check_1148@409:2>:int,<<check_1148@409:3>@412:0>:int) =
        false
        P[<make_array_1030@388:1>](<make_array_1030@388:0>:int,<make_array_1030@388:1>:int) =
        ((<make_array_1030@388:1> = 0) && (<make_array_1030@388:0> = 1))
        P[<<check_1148@383:3>@418:0>](<check_1148@383:0>:int,<check_1148@383:1>:int,<check_1148@383:2>:int,<<check_1148@383:3>@418:0>:int) =
        false
        P[<<make_array_1030@388:2>@400:0>](<make_array_1030@388:0>:int,<make_array_1030@388:1>:int,<<make_array_1030@388:2>@400:0>:int) =
        ((<make_array_1030@388:1> = 0) &&
         ((<make_array_1030@388:0> = 1) && (<<make_array_1030@388:2>@400:0> = <make_array_1030@388:1>)))
        P[<make_array_1030@420:1>](<make_array_1030@420:0>:int,<make_array_1030@420:1>:int) = false
        P[<<make_array_1030@420:2>@432:0>](<make_array_1030@420:0>:int,<make_array_1030@420:1>:int,<<make_array_1030@420:2>@432:0>:int) =
        false
      upper bounds:
        P[<<make_array_1030@420:2>@432:0>](var1721:int,var1722:int,var1723:int) = true
        P[<<make_array_1030@388:2>@400:0>](var1718:int,var1719:int,var1720:int) = true
        P[<<make_array_1030@349:2>@361:0>](var1715:int,var1716:int,var1717:int) = true
      begin GenHcSolver.classify_pids(860880)[4]
        output:
          [<<make_array_1030@349:2>@361:0>;<<make_array_1030@388:2>@400:0>;<<make_array_1030@420:2>@432:0>]
      end GenHcSolver.classify_pids(860880)[4] (0.000000 sec.)
      begin ApronInterface.convex_hull_interpolate(860901)[4]
        lb:(((<make_array_1030@349:1> = 0) &&
             ((<make_array_1030@349:1> < <make_array_1030@349:0>) &&
              ((0 < <make_array_1030@349:0>) && (<<make_array_1030@349:2>@361:0> = <make_array_1030@349:1>)))) ||
            ((<make_array_1030@349:1> = 0) &&
             ((<make_array_1030@349:0> = 1) && (<<make_array_1030@349:2>@361:0> = <make_array_1030@349:1>))))
        nub:false
        begin ExtFormula.Formula.case_analysis_boolean(860997)[5]
          ts: (((<make_array_1030@349:1> = 0) && (<<make_array_1030@349:2>@361:0> = <make_array_1030@349:1>)) &&
               ((<make_array_1030@349:0> = 1) ||
                ((<make_array_1030@349:1> < <make_array_1030@349:0>) && (0 < <make_array_1030@349:0>))))
          
        end ExtFormula.Formula.case_analysis_boolean(860997)[5] (0.000000 sec.)
        begin ExtFormula.Formula.case_analysis_boolean(861013)[5]
          ts: false
          
        end ExtFormula.Formula.case_analysis_boolean(861013)[5] (0.000000 sec.)
        lb':((<<make_array_1030@349:2>@361:0> = 0) &&
             ((<make_array_1030@349:1> = 0) && ((-1 + <make_array_1030@349:0>) >= 0)))
        nub':(-1 >= 0)
        begin InterpProver.interpolate(861016)[5]
          begin InterpProver.interpolate_fresh(861017)[6]
            begin InterpProver.interpolate_log(861018)[7]
              input1: ((<<make_array_1030@349:2>@361:0> = 0) &&
                       ((<make_array_1030@349:1> = 0) && ((-1 + <make_array_1030@349:0>) >= 0)))
              input2: (-1 >= 0)
              begin InterpProver.interpolate_check(861019)[8]
                begin InterpProver.interpolate_simplify(861020)[9]
                  begin InterpProver.interpolate_quick(861078)[10]
                    
                  end InterpProver.interpolate_quick(861078)[10] (0.000000 sec.)
                  
                end InterpProver.interpolate_simplify(861020)[9] (0.000000 sec.)
                
              end InterpProver.interpolate_check(861019)[8] (0.000000 sec.)
              output: true
            end InterpProver.interpolate_log(861018)[7] (0.000000 sec.)
            
          end InterpProver.interpolate_fresh(861017)[6] (0.000000 sec.)
          
        end InterpProver.interpolate(861016)[5] (0.000000 sec.)
        output:
          P[<<make_array_1030@349:2>@361:0>](<make_array_1030@349:0>:int,<make_array_1030@349:1>:int,<<make_array_1030@349:2>@361:0>:int) =
          true
          P[<<make_array_1030@388:2>@400:0>](<make_array_1030@349:0>:int,<make_array_1030@349:1>:int,<<make_array_1030@349:2>@361:0>:int) =
          true
          P[<<make_array_1030@420:2>@432:0>](<make_array_1030@349:0>:int,<make_array_1030@349:1>:int,<<make_array_1030@349:2>@361:0>:int) =
          true
      end ApronInterface.convex_hull_interpolate(860901)[4] (0.001000 sec.)
      Horn clauses:
        P[<fail_1487@445:0>](<fail_1487@445:0>:bool)|- bot
        
        P[<check_1148@409:2>](<f_check_1482@442:2>:int,<f_check_1482@442:0>:int,<f_check_1482@442:1>:int),
        ((<f_check_1482@442:0> < <f_check_1482@442:2>) && <fail_1487@445:0>)
        |- P[<fail_1487@445:0>](<fail_1487@445:0>:bool)
        
        P[<<array_max_1033@344:3>@379:0>](<make_array_1030@420:0>:int,0:int,<check_1148@383:2>:int),
        P[<<check_1148@383:3>@418:0>](<make_array_1030@420:0>:int,0:int,<check_1148@383:2>:int,<make_array_1030@420:1>:int)|- P[<make_array_1030@420:1>](
        <make_array_1030@420:0>:int,<make_array_1030@420:1>:int)
        
        P[<check_1148@383:2>](<check_1148@383:0>:int,<check_1148@383:1>:int,<check_1148@383:2>:int),
        P[<<check_1148@409:3>@412:0>](<check_1148@383:0>:int,(1 + <check_1148@383:1>):int,<check_1148@383:2>:int,<<check_1148@383:3>@418:0>:int),
        (<check_1148@383:1> < <check_1148@383:0>)
        |- P[<<check_1148@383:3>@418:0>](<check_1148@383:0>:int,<check_1148@383:1>:int,
                                         <check_1148@383:2>:int,<<check_1148@383:3>@418:0>:int)
        
        P[<check_1148@409:2>](<check_1148@409:0>:int,<check_1148@409:1>:int,<check_1148@409:2>:int),
        ((<check_1148@409:1> < <check_1148@409:0>) && (<<check_1148@409:3>@412:0> = <check_1148@409:1>))
        |- P[<<check_1148@409:3>@412:0>](<check_1148@409:0>:int,<check_1148@409:1>:int,
                                         <check_1148@409:2>:int,<<check_1148@409:3>@412:0>:int)
        
        P[<check_1148@383:2>](<check_1148@409:0>:int,(-1 + <check_1148@409:1>):int,<check_1148@409:2>:int),
        (<check_1148@409:1> < (1 + <check_1148@409:0>))
        |- P[<check_1148@409:2>](<check_1148@409:0>:int,<check_1148@409:1>:int,
                                 <check_1148@409:2>:int)
        
        P[<<array_max_1033@344:3>@379:0>](<make_array_1030@388:0>:int,0:int,<check_1148@383:2>:int),
        P[<<check_1148@383:3>@386:0>](<make_array_1030@388:0>:int,0:int,<check_1148@383:2>:int,<make_array_1030@388:1>:int)|- P[<make_array_1030@388:1>](
        <make_array_1030@388:0>:int,<make_array_1030@388:1>:int)
        
        P[<check_1148@383:2>](<check_1148@383:0>:int,<check_1148@383:1>:int,<check_1148@383:2>:int),
        ((<check_1148@383:1> < <check_1148@383:0>) && (<<check_1148@383:3>@386:0> = <check_1148@383:1>))
        |- P[<<check_1148@383:3>@386:0>](<check_1148@383:0>:int,<check_1148@383:1>:int,
                                         <check_1148@383:2>:int,<<check_1148@383:3>@386:0>:int)
        
        P[<<array_max_1033@344:3>@379:0>](<check_1148@383:0>:int,0:int,<check_1148@383:2>:int),
        (<check_1148@383:1> = 0)
        |- P[<check_1148@383:2>](<check_1148@383:0>:int,<check_1148@383:1>:int,
                                 <check_1148@383:2>:int)
        
        P[<array_max_1033@344:1>](<array_max_1033@344:0>:int,<array_max_1033@344:1>:int),
        P[<<<array_max_1033@344:2>@347:1>@363:0>](<array_max_1033@344:0>:int,<array_max_1033@344:1>:int,<array_max_1033@344:1>:int,var1518:int),
        P[<<array_max_1033@367:3>@370:0>](<array_max_1033@344:0>:int,(
                                          1 + <array_max_1033@344:1>):int,<<array_max_1033@344:3>@379:0>:int),
        ((var1518 <= <<array_max_1033@344:3>@379:0>) && (<array_max_1033@344:1> < <array_max_1033@344:0>))
        |- P[<<array_max_1033@344:3>@379:0>](<array_max_1033@344:0>:int,
                                             <array_max_1033@344:1>:int,
                                             <<array_max_1033@344:3>@379:0>:int)
        
        P[<array_max_1033@367:1>](<array_max_1033@367:0>:int,<array_max_1033@367:1>:int),
        ((<<array_max_1033@367:3>@370:0> = 0) && (<array_max_1033@367:1> >= <array_max_1033@367:0>))
        |- P[<<array_max_1033@367:3>@370:0>](<array_max_1033@367:0>:int,
                                             <array_max_1033@367:1>:int,
                                             <<array_max_1033@367:3>@370:0>:int)
        
        P[<array_max_1033@344:1>](<array_max_1033@367:0>:int,(-1 + <array_max_1033@367:1>):int),
        P[<<<array_max_1033@344:2>@347:1>@363:0>](<array_max_1033@367:0>:int,(
                                                  -1 + <array_max_1033@367:1>):int,(
                                                  -1 + <array_max_1033@367:1>):int,<f_array_max_1480@365:4>:int),
        (<array_max_1033@367:1> < (1 + <array_max_1033@367:0>))
        |- P[<array_max_1033@367:1>](<array_max_1033@367:0>:int,<array_max_1033@367:1>:int)
        
        P[<array_max_1033@344:1>](<array_max_1033@344:0>:int,<array_max_1033@344:1>:int), (
        <array_max_1033@344:1> = 0)
        |- P[<<<array_max_1033@344:2>@347:1>@363:0>](<array_max_1033@344:0>:int,
                                                     <array_max_1033@344:1>:int,
                                                     <<array_max_1033@344:2>@347:0>:int,
                                                     <<<array_max_1033@344:2>@347:1>@363:0>:int)
        
        P[<<array_max_1033@344:2>@347:0>](<make_array_1030@349:0>:int,0:int,<make_array_1030@349:1>:int)|- P[<make_array_1030@349:1>](
        <make_array_1030@349:0>:int,<make_array_1030@349:1>:int)
        
        P[<array_max_1033@344:1>](<array_max_1033@344:0>:int,<array_max_1033@344:1>:int),
        ((<array_max_1033@344:1> < <array_max_1033@344:0>) && (<<array_max_1033@344:2>@347:0> = <array_max_1033@344:1>))
        |- P[<<array_max_1033@344:2>@347:0>](<array_max_1033@344:0>:int,
                                             <array_max_1033@344:1>:int,
                                             <<array_max_1033@344:2>@347:0>:int)
        
         (<array_max_1033@344:1> = 0)
        |- P[<array_max_1033@344:1>](<array_max_1033@344:0>:int,<array_max_1033@344:1>:int)
      lower bounds:
        P[<array_max_1033@344:1>](<array_max_1033@344:0>:int,<array_max_1033@344:1>:int) = (<array_max_1033@344:1> = 0)
        P[<<<array_max_1033@344:2>@347:1>@363:0>](<array_max_1033@344:0>:int,<array_max_1033@344:1>:int,<<array_max_1033@344:2>@347:0>:int,<<<array_max_1033@344:2>@347:1>@363:0>:int) =
        (<array_max_1033@344:1> = 0)
        P[<<array_max_1033@344:2>@347:0>](<array_max_1033@344:0>:int,<array_max_1033@344:1>:int,<<array_max_1033@344:2>@347:0>:int) =
        ((<array_max_1033@344:1> = 0) &&
         ((<array_max_1033@344:1> < <array_max_1033@344:0>) &&
          (<<array_max_1033@344:2>@347:0> = <array_max_1033@344:1>)))
        P[<array_max_1033@367:1>](<array_max_1033@367:0>:int,<array_max_1033@367:1>:int) =
        ((<array_max_1033@367:1> = 1) && (<array_max_1033@367:1> < (1 + <array_max_1033@367:0>)))
        P[<make_array_1030@349:1>](<make_array_1030@349:0>:int,<make_array_1030@349:1>:int) =
        ((<make_array_1030@349:1> = 0) && (0 < <make_array_1030@349:0>))
        P[<<array_max_1033@367:3>@370:0>](<array_max_1033@367:0>:int,<array_max_1033@367:1>:int,<<array_max_1033@367:3>@370:0>:int) =
        ((<<array_max_1033@367:3>@370:0> = 0) &&
         ((<array_max_1033@367:1> = 1) && (<array_max_1033@367:1> = <array_max_1033@367:0>)))
        P[<<array_max_1033@344:3>@379:0>](<array_max_1033@344:0>:int,<array_max_1033@344:1>:int,<<array_max_1033@344:3>@379:0>:int) =
        ((<<array_max_1033@344:3>@379:0> = 0) &&
         ((<array_max_1033@344:1> = 0) && ((1 + <array_max_1033@344:1>) = <array_max_1033@344:0>)))
        P[<check_1148@383:2>](<check_1148@383:0>:int,<check_1148@383:1>:int,<check_1148@383:2>:int) =
        ((<check_1148@383:1> = 0) && ((<check_1148@383:2> = 0) && (<check_1148@383:0> = 1)))
        P[<check_1148@409:2>](<check_1148@409:0>:int,<check_1148@409:1>:int,<check_1148@409:2>:int) =
        ((<check_1148@409:1> = 1) && ((<check_1148@409:2> = 0) && (<check_1148@409:0> = 1)))
        P[<<check_1148@383:3>@386:0>](<check_1148@383:0>:int,<check_1148@383:1>:int,<check_1148@383:2>:int,<<check_1148@383:3>@386:0>:int) =
        ((<check_1148@383:1> = 0) &&
         ((<check_1148@383:2> = 0) && ((<check_1148@383:0> = 1) && (<<check_1148@383:3>@386:0> = <check_1148@383:1>))))
        P[<fail_1487@445:0>](<fail_1487@445:0>:bool) = false
        P[<<check_1148@409:3>@412:0>](<check_1148@409:0>:int,<check_1148@409:1>:int,<check_1148@409:2>:int,<<check_1148@409:3>@412:0>:int) =
        false
        P[<make_array_1030@388:1>](<make_array_1030@388:0>:int,<make_array_1030@388:1>:int) =
        ((<make_array_1030@388:1> = 0) && (<make_array_1030@388:0> = 1))
        P[<<check_1148@383:3>@418:0>](<check_1148@383:0>:int,<check_1148@383:1>:int,<check_1148@383:2>:int,<<check_1148@383:3>@418:0>:int) =
        false
        P[<make_array_1030@420:1>](<make_array_1030@420:0>:int,<make_array_1030@420:1>:int) = false
      upper bounds:
        P[<make_array_1030@420:1>](var1728:int,var1729:int) = true
        P[<make_array_1030@388:1>](var1726:int,var1727:int) = true
        P[<make_array_1030@349:1>](var1724:int,var1725:int) = true
      begin GenHcSolver.classify_pids(881775)[4]
        output:
          [<make_array_1030@349:1>;<make_array_1030@388:1>;<make_array_1030@420:1>]
      end GenHcSolver.classify_pids(881775)[4] (0.000000 sec.)
      begin ApronInterface.convex_hull_interpolate(881796)[4]
        lb:(((<make_array_1030@349:1> = 0) && (0 < <make_array_1030@349:0>)) ||
            ((<make_array_1030@349:1> = 0) && (<make_array_1030@349:0> = 1)))
        nub:false
        begin ExtFormula.Formula.case_analysis_boolean(881825)[5]
          ts: ((<make_array_1030@349:1> = 0) && (0 < <make_array_1030@349:0>))
          
        end ExtFormula.Formula.case_analysis_boolean(881825)[5] (0.001000 sec.)
        begin ExtFormula.Formula.case_analysis_boolean(881832)[5]
          ts: false
          
        end ExtFormula.Formula.case_analysis_boolean(881832)[5] (0.000000 sec.)
        lb':((<make_array_1030@349:1> = 0) && ((-1 + <make_array_1030@349:0>) >= 0))
        nub':(-1 >= 0)
        begin InterpProver.interpolate(881835)[5]
          begin InterpProver.interpolate_fresh(881836)[6]
            begin InterpProver.interpolate_log(881837)[7]
              input1: ((<make_array_1030@349:1> = 0) && ((-1 + <make_array_1030@349:0>) >= 0))
              input2: (-1 >= 0)
              begin InterpProver.interpolate_check(881838)[8]
                begin InterpProver.interpolate_simplify(881839)[9]
                  begin InterpProver.interpolate_quick(881879)[10]
                    
                  end InterpProver.interpolate_quick(881879)[10] (0.001000 sec.)
                  
                end InterpProver.interpolate_simplify(881839)[9] (0.001000 sec.)
                
              end InterpProver.interpolate_check(881838)[8] (0.001000 sec.)
              output: true
            end InterpProver.interpolate_log(881837)[7] (0.001000 sec.)
            
          end InterpProver.interpolate_fresh(881836)[6] (0.001000 sec.)
          
        end InterpProver.interpolate(881835)[5] (0.001000 sec.)
        output:
          P[<make_array_1030@349:1>](<make_array_1030@349:0>:int,<make_array_1030@349:1>:int) = true
          P[<make_array_1030@388:1>](<make_array_1030@349:0>:int,<make_array_1030@349:1>:int) = true
          P[<make_array_1030@420:1>](<make_array_1030@349:0>:int,<make_array_1030@349:1>:int) = true
      end ApronInterface.convex_hull_interpolate(881796)[4] (0.002000 sec.)
      Horn clauses:
        P[<fail_1487@445:0>](<fail_1487@445:0>:bool)|- bot
        
        P[<check_1148@409:2>](<f_check_1482@442:2>:int,<f_check_1482@442:0>:int,<f_check_1482@442:1>:int),
        ((<f_check_1482@442:0> < <f_check_1482@442:2>) && <fail_1487@445:0>)
        |- P[<fail_1487@445:0>](<fail_1487@445:0>:bool)
        
        P[<check_1148@383:2>](<check_1148@383:0>:int,<check_1148@383:1>:int,<check_1148@383:2>:int),
        P[<<check_1148@409:3>@412:0>](<check_1148@383:0>:int,(1 + <check_1148@383:1>):int,<check_1148@383:2>:int,<<check_1148@383:3>@418:0>:int),
        (<check_1148@383:1> < <check_1148@383:0>)
        |- P[<<check_1148@383:3>@418:0>](<check_1148@383:0>:int,<check_1148@383:1>:int,
                                         <check_1148@383:2>:int,<<check_1148@383:3>@418:0>:int)
        
        P[<check_1148@409:2>](<check_1148@409:0>:int,<check_1148@409:1>:int,<check_1148@409:2>:int),
        ((<check_1148@409:1> < <check_1148@409:0>) && (<<check_1148@409:3>@412:0> = <check_1148@409:1>))
        |- P[<<check_1148@409:3>@412:0>](<check_1148@409:0>:int,<check_1148@409:1>:int,
                                         <check_1148@409:2>:int,<<check_1148@409:3>@412:0>:int)
        
        P[<check_1148@383:2>](<check_1148@409:0>:int,(-1 + <check_1148@409:1>):int,<check_1148@409:2>:int),
        (<check_1148@409:1> < (1 + <check_1148@409:0>))
        |- P[<check_1148@409:2>](<check_1148@409:0>:int,<check_1148@409:1>:int,
                                 <check_1148@409:2>:int)
        
        P[<check_1148@383:2>](<check_1148@383:0>:int,<check_1148@383:1>:int,<check_1148@383:2>:int),
        ((<check_1148@383:1> < <check_1148@383:0>) && (<<check_1148@383:3>@386:0> = <check_1148@383:1>))
        |- P[<<check_1148@383:3>@386:0>](<check_1148@383:0>:int,<check_1148@383:1>:int,
                                         <check_1148@383:2>:int,<<check_1148@383:3>@386:0>:int)
        
        P[<<array_max_1033@344:3>@379:0>](<check_1148@383:0>:int,0:int,<check_1148@383:2>:int),
        (<check_1148@383:1> = 0)
        |- P[<check_1148@383:2>](<check_1148@383:0>:int,<check_1148@383:1>:int,
                                 <check_1148@383:2>:int)
        
        P[<array_max_1033@344:1>](<array_max_1033@344:0>:int,<array_max_1033@344:1>:int),
        P[<<<array_max_1033@344:2>@347:1>@363:0>](<array_max_1033@344:0>:int,<array_max_1033@344:1>:int,<array_max_1033@344:1>:int,var1518:int),
        P[<<array_max_1033@367:3>@370:0>](<array_max_1033@344:0>:int,(
                                          1 + <array_max_1033@344:1>):int,<<array_max_1033@344:3>@379:0>:int),
        ((var1518 <= <<array_max_1033@344:3>@379:0>) && (<array_max_1033@344:1> < <array_max_1033@344:0>))
        |- P[<<array_max_1033@344:3>@379:0>](<array_max_1033@344:0>:int,
                                             <array_max_1033@344:1>:int,
                                             <<array_max_1033@344:3>@379:0>:int)
        
        P[<array_max_1033@367:1>](<array_max_1033@367:0>:int,<array_max_1033@367:1>:int),
        ((<<array_max_1033@367:3>@370:0> = 0) && (<array_max_1033@367:1> >= <array_max_1033@367:0>))
        |- P[<<array_max_1033@367:3>@370:0>](<array_max_1033@367:0>:int,
                                             <array_max_1033@367:1>:int,
                                             <<array_max_1033@367:3>@370:0>:int)
        
        P[<array_max_1033@344:1>](<array_max_1033@367:0>:int,(-1 + <array_max_1033@367:1>):int),
        P[<<<array_max_1033@344:2>@347:1>@363:0>](<array_max_1033@367:0>:int,(
                                                  -1 + <array_max_1033@367:1>):int,(
                                                  -1 + <array_max_1033@367:1>):int,<f_array_max_1480@365:4>:int),
        (<array_max_1033@367:1> < (1 + <array_max_1033@367:0>))
        |- P[<array_max_1033@367:1>](<array_max_1033@367:0>:int,<array_max_1033@367:1>:int)
        
        P[<array_max_1033@344:1>](<array_max_1033@344:0>:int,<array_max_1033@344:1>:int), (
        <array_max_1033@344:1> = 0)
        |- P[<<<array_max_1033@344:2>@347:1>@363:0>](<array_max_1033@344:0>:int,
                                                     <array_max_1033@344:1>:int,
                                                     <<array_max_1033@344:2>@347:0>:int,
                                                     <<<array_max_1033@344:2>@347:1>@363:0>:int)
        
        P[<array_max_1033@344:1>](<array_max_1033@344:0>:int,<array_max_1033@344:1>:int),
        ((<array_max_1033@344:1> < <array_max_1033@344:0>) && (<<array_max_1033@344:2>@347:0> = <array_max_1033@344:1>))
        |- P[<<array_max_1033@344:2>@347:0>](<array_max_1033@344:0>:int,
                                             <array_max_1033@344:1>:int,
                                             <<array_max_1033@344:2>@347:0>:int)
        
         (<array_max_1033@344:1> = 0)
        |- P[<array_max_1033@344:1>](<array_max_1033@344:0>:int,<array_max_1033@344:1>:int)
      lower bounds:
        P[<array_max_1033@344:1>](<array_max_1033@344:0>:int,<array_max_1033@344:1>:int) = (<array_max_1033@344:1> = 0)
        P[<<<array_max_1033@344:2>@347:1>@363:0>](<array_max_1033@344:0>:int,<array_max_1033@344:1>:int,<<array_max_1033@344:2>@347:0>:int,<<<array_max_1033@344:2>@347:1>@363:0>:int) =
        (<array_max_1033@344:1> = 0)
        P[<<array_max_1033@344:2>@347:0>](<array_max_1033@344:0>:int,<array_max_1033@344:1>:int,<<array_max_1033@344:2>@347:0>:int) =
        ((<array_max_1033@344:1> = 0) &&
         ((<array_max_1033@344:1> < <array_max_1033@344:0>) &&
          (<<array_max_1033@344:2>@347:0> = <array_max_1033@344:1>)))
        P[<array_max_1033@367:1>](<array_max_1033@367:0>:int,<array_max_1033@367:1>:int) =
        ((<array_max_1033@367:1> = 1) && (<array_max_1033@367:1> < (1 + <array_max_1033@367:0>)))
        P[<<array_max_1033@367:3>@370:0>](<array_max_1033@367:0>:int,<array_max_1033@367:1>:int,<<array_max_1033@367:3>@370:0>:int) =
        ((<<array_max_1033@367:3>@370:0> = 0) &&
         ((<array_max_1033@367:1> = 1) && (<array_max_1033@367:1> = <array_max_1033@367:0>)))
        P[<<array_max_1033@344:3>@379:0>](<array_max_1033@344:0>:int,<array_max_1033@344:1>:int,<<array_max_1033@344:3>@379:0>:int) =
        ((<<array_max_1033@344:3>@379:0> = 0) &&
         ((<array_max_1033@344:1> = 0) && ((1 + <array_max_1033@344:1>) = <array_max_1033@344:0>)))
        P[<check_1148@383:2>](<check_1148@383:0>:int,<check_1148@383:1>:int,<check_1148@383:2>:int) =
        ((<check_1148@383:1> = 0) && ((<check_1148@383:2> = 0) && (<check_1148@383:0> = 1)))
        P[<check_1148@409:2>](<check_1148@409:0>:int,<check_1148@409:1>:int,<check_1148@409:2>:int) =
        ((<check_1148@409:1> = 1) && ((<check_1148@409:2> = 0) && (<check_1148@409:0> = 1)))
        P[<<check_1148@383:3>@386:0>](<check_1148@383:0>:int,<check_1148@383:1>:int,<check_1148@383:2>:int,<<check_1148@383:3>@386:0>:int) =
        ((<check_1148@383:1> = 0) &&
         ((<check_1148@383:2> = 0) && ((<check_1148@383:0> = 1) && (<<check_1148@383:3>@386:0> = <check_1148@383:1>))))
        P[<fail_1487@445:0>](<fail_1487@445:0>:bool) = false
        P[<<check_1148@409:3>@412:0>](<check_1148@409:0>:int,<check_1148@409:1>:int,<check_1148@409:2>:int,<<check_1148@409:3>@412:0>:int) =
        false
        P[<<check_1148@383:3>@418:0>](<check_1148@383:0>:int,<check_1148@383:1>:int,<check_1148@383:2>:int,<<check_1148@383:3>@418:0>:int) =
        false
      upper bounds:
        P[<<check_1148@383:3>@418:0>](var1738:int,var1739:int,var1740:int,var1741:int) = true
        P[<<check_1148@409:3>@412:0>](var1734:int,var1735:int,var1736:int,var1737:int) = true
        P[<<check_1148@383:3>@386:0>](var1730:int,var1731:int,var1732:int,var1733:int) = true
      begin GenHcSolver.classify_pids(898215)[4]
        output:
          [<<check_1148@409:3>@412:0>;<<check_1148@383:3>@386:0>;<<check_1148@383:3>@418:0>]
      end GenHcSolver.classify_pids(898215)[4] (0.000999 sec.)
      begin ApronInterface.convex_hull_interpolate(898236)[4]
        lb:((<check_1148@409:1> = 0) &&
            ((<check_1148@409:2> = 0) &&
             ((<check_1148@409:0> = 1) && (<<check_1148@409:3>@412:0> = <check_1148@409:1>))))
        nub:false
        begin ExtFormula.Formula.case_analysis_boolean(898271)[5]
          ts: ((<check_1148@409:1> = 0) &&
               ((<check_1148@409:2> = 0) &&
                ((<check_1148@409:0> = 1) && (<<check_1148@409:3>@412:0> = <check_1148@409:1>))))
          
        end ExtFormula.Formula.case_analysis_boolean(898271)[5] (0.000000 sec.)
        begin ExtFormula.Formula.case_analysis_boolean(898282)[5]
          ts: false
          
        end ExtFormula.Formula.case_analysis_boolean(898282)[5] (0.000000 sec.)
        lb':((<<check_1148@409:3>@412:0> = 0) &&
             ((<check_1148@409:2> = 0) && ((<check_1148@409:1> = 0) && ((-1 + <check_1148@409:0>) = 0))))
        nub':(-1 >= 0)
        begin InterpProver.interpolate(898285)[5]
          begin InterpProver.interpolate_fresh(898286)[6]
            begin InterpProver.interpolate_log(898287)[7]
              input1: ((<<check_1148@409:3>@412:0> = 0) &&
                       ((<check_1148@409:2> = 0) && ((<check_1148@409:1> = 0) && ((-1 + <check_1148@409:0>) = 0))))
              input2: (-1 >= 0)
              begin InterpProver.interpolate_check(898288)[8]
                begin InterpProver.interpolate_simplify(898289)[9]
                  begin InterpProver.interpolate_quick(898347)[10]
                    
                  end InterpProver.interpolate_quick(898347)[10] (0.000000 sec.)
                  
                end InterpProver.interpolate_simplify(898289)[9] (0.000000 sec.)
                
              end InterpProver.interpolate_check(898288)[8] (0.000000 sec.)
              output: true
            end InterpProver.interpolate_log(898287)[7] (0.000000 sec.)
            
          end InterpProver.interpolate_fresh(898286)[6] (0.000000 sec.)
          
        end InterpProver.interpolate(898285)[5] (0.000000 sec.)
        output:
          P[<<check_1148@409:3>@412:0>](<check_1148@409:0>:int,<check_1148@409:1>:int,<check_1148@409:2>:int,<<check_1148@409:3>@412:0>:int) =
          true
          P[<<check_1148@383:3>@386:0>](<check_1148@409:0>:int,<check_1148@409:1>:int,<check_1148@409:2>:int,<<check_1148@409:3>@412:0>:int) =
          true
          P[<<check_1148@383:3>@418:0>](<check_1148@409:0>:int,<check_1148@409:1>:int,<check_1148@409:2>:int,<<check_1148@409:3>@412:0>:int) =
          true
      end ApronInterface.convex_hull_interpolate(898236)[4] (0.002000 sec.)
      Horn clauses:
        P[<fail_1487@445:0>](<fail_1487@445:0>:bool)|- bot
        
        P[<check_1148@409:2>](<f_check_1482@442:2>:int,<f_check_1482@442:0>:int,<f_check_1482@442:1>:int),
        ((<f_check_1482@442:0> < <f_check_1482@442:2>) && <fail_1487@445:0>)
        |- P[<fail_1487@445:0>](<fail_1487@445:0>:bool)
        
        P[<check_1148@383:2>](<check_1148@409:0>:int,(-1 + <check_1148@409:1>):int,<check_1148@409:2>:int),
        (<check_1148@409:1> < (1 + <check_1148@409:0>))
        |- P[<check_1148@409:2>](<check_1148@409:0>:int,<check_1148@409:1>:int,
                                 <check_1148@409:2>:int)
        
        P[<<array_max_1033@344:3>@379:0>](<check_1148@383:0>:int,0:int,<check_1148@383:2>:int),
        (<check_1148@383:1> = 0)
        |- P[<check_1148@383:2>](<check_1148@383:0>:int,<check_1148@383:1>:int,
                                 <check_1148@383:2>:int)
        
        P[<array_max_1033@344:1>](<array_max_1033@344:0>:int,<array_max_1033@344:1>:int),
        P[<<<array_max_1033@344:2>@347:1>@363:0>](<array_max_1033@344:0>:int,<array_max_1033@344:1>:int,<array_max_1033@344:1>:int,var1518:int),
        P[<<array_max_1033@367:3>@370:0>](<array_max_1033@344:0>:int,(
                                          1 + <array_max_1033@344:1>):int,<<array_max_1033@344:3>@379:0>:int),
        ((var1518 <= <<array_max_1033@344:3>@379:0>) && (<array_max_1033@344:1> < <array_max_1033@344:0>))
        |- P[<<array_max_1033@344:3>@379:0>](<array_max_1033@344:0>:int,
                                             <array_max_1033@344:1>:int,
                                             <<array_max_1033@344:3>@379:0>:int)
        
        P[<array_max_1033@367:1>](<array_max_1033@367:0>:int,<array_max_1033@367:1>:int),
        ((<<array_max_1033@367:3>@370:0> = 0) && (<array_max_1033@367:1> >= <array_max_1033@367:0>))
        |- P[<<array_max_1033@367:3>@370:0>](<array_max_1033@367:0>:int,
                                             <array_max_1033@367:1>:int,
                                             <<array_max_1033@367:3>@370:0>:int)
        
        P[<array_max_1033@344:1>](<array_max_1033@367:0>:int,(-1 + <array_max_1033@367:1>):int),
        P[<<<array_max_1033@344:2>@347:1>@363:0>](<array_max_1033@367:0>:int,(
                                                  -1 + <array_max_1033@367:1>):int,(
                                                  -1 + <array_max_1033@367:1>):int,<f_array_max_1480@365:4>:int),
        (<array_max_1033@367:1> < (1 + <array_max_1033@367:0>))
        |- P[<array_max_1033@367:1>](<array_max_1033@367:0>:int,<array_max_1033@367:1>:int)
        
        P[<array_max_1033@344:1>](<array_max_1033@344:0>:int,<array_max_1033@344:1>:int), (
        <array_max_1033@344:1> = 0)
        |- P[<<<array_max_1033@344:2>@347:1>@363:0>](<array_max_1033@344:0>:int,
                                                     <array_max_1033@344:1>:int,
                                                     <<array_max_1033@344:2>@347:0>:int,
                                                     <<<array_max_1033@344:2>@347:1>@363:0>:int)
        
        P[<array_max_1033@344:1>](<array_max_1033@344:0>:int,<array_max_1033@344:1>:int),
        ((<array_max_1033@344:1> < <array_max_1033@344:0>) && (<<array_max_1033@344:2>@347:0> = <array_max_1033@344:1>))
        |- P[<<array_max_1033@344:2>@347:0>](<array_max_1033@344:0>:int,
                                             <array_max_1033@344:1>:int,
                                             <<array_max_1033@344:2>@347:0>:int)
        
         (<array_max_1033@344:1> = 0)
        |- P[<array_max_1033@344:1>](<array_max_1033@344:0>:int,<array_max_1033@344:1>:int)
      lower bounds:
        P[<array_max_1033@344:1>](<array_max_1033@344:0>:int,<array_max_1033@344:1>:int) = (<array_max_1033@344:1> = 0)
        P[<<<array_max_1033@344:2>@347:1>@363:0>](<array_max_1033@344:0>:int,<array_max_1033@344:1>:int,<<array_max_1033@344:2>@347:0>:int,<<<array_max_1033@344:2>@347:1>@363:0>:int) =
        (<array_max_1033@344:1> = 0)
        P[<<array_max_1033@344:2>@347:0>](<array_max_1033@344:0>:int,<array_max_1033@344:1>:int,<<array_max_1033@344:2>@347:0>:int) =
        ((<array_max_1033@344:1> = 0) &&
         ((<array_max_1033@344:1> < <array_max_1033@344:0>) &&
          (<<array_max_1033@344:2>@347:0> = <array_max_1033@344:1>)))
        P[<array_max_1033@367:1>](<array_max_1033@367:0>:int,<array_max_1033@367:1>:int) =
        ((<array_max_1033@367:1> = 1) && (<array_max_1033@367:1> < (1 + <array_max_1033@367:0>)))
        P[<<array_max_1033@367:3>@370:0>](<array_max_1033@367:0>:int,<array_max_1033@367:1>:int,<<array_max_1033@367:3>@370:0>:int) =
        ((<<array_max_1033@367:3>@370:0> = 0) &&
         ((<array_max_1033@367:1> = 1) && (<array_max_1033@367:1> = <array_max_1033@367:0>)))
        P[<<array_max_1033@344:3>@379:0>](<array_max_1033@344:0>:int,<array_max_1033@344:1>:int,<<array_max_1033@344:3>@379:0>:int) =
        ((<<array_max_1033@344:3>@379:0> = 0) &&
         ((<array_max_1033@344:1> = 0) && ((1 + <array_max_1033@344:1>) = <array_max_1033@344:0>)))
        P[<check_1148@383:2>](<check_1148@383:0>:int,<check_1148@383:1>:int,<check_1148@383:2>:int) =
        ((<check_1148@383:1> = 0) && ((<check_1148@383:2> = 0) && (<check_1148@383:0> = 1)))
        P[<check_1148@409:2>](<check_1148@409:0>:int,<check_1148@409:1>:int,<check_1148@409:2>:int) =
        ((<check_1148@409:1> = 1) && ((<check_1148@409:2> = 0) && (<check_1148@409:0> = 1)))
        P[<fail_1487@445:0>](<fail_1487@445:0>:bool) = false
      upper bounds:
        P[<check_1148@409:2>](var1751:int,var1752:int,var1753:int) = (var1752 >= var1751)
        P[<check_1148@383:2>](var1745:int,var1746:int,var1747:int) = ((1 + var1746) >= var1745)
      begin GenHcSolver.classify_pids(909271)[4]
        output:
          [<check_1148@409:2>],[<check_1148@383:2>]
      end GenHcSolver.classify_pids(909271)[4] (0.000000 sec.)
      lb:((<check_1148@409:1> = 1) && ((<check_1148@409:2> = 0) && (<check_1148@409:0> = 1)))
      nub:(not (<check_1148@409:1> >= <check_1148@409:0>))
      begin ApronInterface.convex_hull_interpolate(909299)[4]
        lb:((<check_1148@409:1> = 1) && ((<check_1148@409:2> = 0) && (<check_1148@409:0> = 1)))
        nub:(not (<check_1148@409:1> >= <check_1148@409:0>))
        begin ExtFormula.Formula.case_analysis_boolean(909317)[5]
          ts: ((<check_1148@409:1> = 1) && ((<check_1148@409:2> = 0) && (<check_1148@409:0> = 1)))
          
        end ExtFormula.Formula.case_analysis_boolean(909317)[5] (0.000000 sec.)
        begin ExtFormula.Formula.case_analysis_boolean(909329)[5]
          ts: (<check_1148@409:1> < <check_1148@409:0>)
          
        end ExtFormula.Formula.case_analysis_boolean(909329)[5] (0.000000 sec.)
        lb':((<check_1148@409:2> = 0) && (((-1 + <check_1148@409:1>) = 0) && ((-1 + <check_1148@409:0>) = 0)))
        nub':(((-1 + (-1 * <check_1148@409:1>)) + <check_1148@409:0>) >= 0)
        begin InterpProver.interpolate(909334)[5]
          begin InterpProver.interpolate_fresh(909335)[6]
            begin InterpProver.interpolate_log(909336)[7]
              input1: ((<check_1148@409:2> = 0) && (((-1 + <check_1148@409:1>) = 0) && ((-1 + <check_1148@409:0>) = 0)))
              input2: (((-1 + (-1 * <check_1148@409:1>)) + <check_1148@409:0>) >= 0)
              begin InterpProver.interpolate_check(909337)[8]
                begin InterpProver.interpolate_simplify(909338)[9]
                  begin InterpProver.interpolate_quick(909402)[10]
                    begin CsisatInterface.interpolate_csisat_wrap(909411)[11]
                      begin CsisatInterface.interpolate_csisat_post_process(909412)[12]
                        begin CsisatInterface.interpolate_csisat_log(909413)[13]
                          input1: (1 = v_sep_check_1148_sep_409_sep_0 & 1 = v_sep_check_1148_sep_409_sep_1)
                          input2: (1 + v_sep_check_1148_sep_409_sep_1) <= v_sep_check_1148_sep_409_sep_0
                          begin CsisatInterface.interpolate_csisat_raw(909414)[14]
                            
                          end CsisatInterface.interpolate_csisat_raw(909414)[14] (0.000000 sec.)
                          output: (-2*v_sep_check_1148_sep_409_sep_1 + 2*v_sep_check_1148_sep_409_sep_0) <= 0
                          
                        end CsisatInterface.interpolate_csisat_log(909413)[13] (0.000000 sec.)
                        after simplification: (-2*v_sep_check_1148_sep_409_sep_1 + 2*v_sep_check_1148_sep_409_sep_0) <= 0
                        after dnf conversion: (((-2*v_sep_check_1148_sep_409_sep_1 + 2*v_sep_check_1148_sep_409_sep_0) <= 0))
                        
                      end CsisatInterface.interpolate_csisat_post_process(909412)[12] (0.001000 sec.)
                      
                    end CsisatInterface.interpolate_csisat_wrap(909411)[11] (0.001000 sec.)
                    
                  end InterpProver.interpolate_quick(909402)[10] (0.001000 sec.)
                  
                end InterpProver.interpolate_simplify(909338)[9] (0.002000 sec.)
                
              end InterpProver.interpolate_check(909337)[8] (0.002000 sec.)
              output: (<check_1148@409:0> <= <check_1148@409:1>)
            end InterpProver.interpolate_log(909336)[7] (0.002000 sec.)
            
          end InterpProver.interpolate_fresh(909335)[6] (0.002000 sec.)
          
        end InterpProver.interpolate(909334)[5] (0.002000 sec.)
        output:
          P[<check_1148@409:2>](<check_1148@409:0>:int,<check_1148@409:1>:int,<check_1148@409:2>:int) =
          (<check_1148@409:0> <= <check_1148@409:1>)
      end ApronInterface.convex_hull_interpolate(909299)[4] (0.002000 sec.)
      Horn clauses:
        P[<fail_1487@445:0>](<fail_1487@445:0>:bool)|- bot
        
        P[<check_1148@383:2>](<check_1148@409:0>:int,(-1 + <check_1148@409:1>):int,<check_1148@409:2>:int),
        (<check_1148@409:1> < <check_1148@409:0>) |- bot
        
        P[<<array_max_1033@344:3>@379:0>](<check_1148@383:0>:int,0:int,<check_1148@383:2>:int),
        (<check_1148@383:1> = 0)
        |- P[<check_1148@383:2>](<check_1148@383:0>:int,<check_1148@383:1>:int,
                                 <check_1148@383:2>:int)
        
        P[<array_max_1033@344:1>](<array_max_1033@344:0>:int,<array_max_1033@344:1>:int),
        P[<<<array_max_1033@344:2>@347:1>@363:0>](<array_max_1033@344:0>:int,<array_max_1033@344:1>:int,<array_max_1033@344:1>:int,var1518:int),
        P[<<array_max_1033@367:3>@370:0>](<array_max_1033@344:0>:int,(
                                          1 + <array_max_1033@344:1>):int,<<array_max_1033@344:3>@379:0>:int),
        ((var1518 <= <<array_max_1033@344:3>@379:0>) && (<array_max_1033@344:1> < <array_max_1033@344:0>))
        |- P[<<array_max_1033@344:3>@379:0>](<array_max_1033@344:0>:int,
                                             <array_max_1033@344:1>:int,
                                             <<array_max_1033@344:3>@379:0>:int)
        
        P[<array_max_1033@367:1>](<array_max_1033@367:0>:int,<array_max_1033@367:1>:int),
        ((<<array_max_1033@367:3>@370:0> = 0) && (<array_max_1033@367:1> >= <array_max_1033@367:0>))
        |- P[<<array_max_1033@367:3>@370:0>](<array_max_1033@367:0>:int,
                                             <array_max_1033@367:1>:int,
                                             <<array_max_1033@367:3>@370:0>:int)
        
        P[<array_max_1033@344:1>](<array_max_1033@367:0>:int,(-1 + <array_max_1033@367:1>):int),
        P[<<<array_max_1033@344:2>@347:1>@363:0>](<array_max_1033@367:0>:int,(
                                                  -1 + <array_max_1033@367:1>):int,(
                                                  -1 + <array_max_1033@367:1>):int,<f_array_max_1480@365:4>:int),
        (<array_max_1033@367:1> < (1 + <array_max_1033@367:0>))
        |- P[<array_max_1033@367:1>](<array_max_1033@367:0>:int,<array_max_1033@367:1>:int)
        
        P[<array_max_1033@344:1>](<array_max_1033@344:0>:int,<array_max_1033@344:1>:int), (
        <array_max_1033@344:1> = 0)
        |- P[<<<array_max_1033@344:2>@347:1>@363:0>](<array_max_1033@344:0>:int,
                                                     <array_max_1033@344:1>:int,
                                                     <<array_max_1033@344:2>@347:0>:int,
                                                     <<<array_max_1033@344:2>@347:1>@363:0>:int)
        
        P[<array_max_1033@344:1>](<array_max_1033@344:0>:int,<array_max_1033@344:1>:int),
        ((<array_max_1033@344:1> < <array_max_1033@344:0>) && (<<array_max_1033@344:2>@347:0> = <array_max_1033@344:1>))
        |- P[<<array_max_1033@344:2>@347:0>](<array_max_1033@344:0>:int,
                                             <array_max_1033@344:1>:int,
                                             <<array_max_1033@344:2>@347:0>:int)
        
         (<array_max_1033@344:1> = 0)
        |- P[<array_max_1033@344:1>](<array_max_1033@344:0>:int,<array_max_1033@344:1>:int)
      lower bounds:
        P[<array_max_1033@344:1>](<array_max_1033@344:0>:int,<array_max_1033@344:1>:int) = (<array_max_1033@344:1> = 0)
        P[<fail_1487@445:0>](var1755:bool) = false
        P[<<<array_max_1033@344:2>@347:1>@363:0>](<array_max_1033@344:0>:int,<array_max_1033@344:1>:int,<<array_max_1033@344:2>@347:0>:int,<<<array_max_1033@344:2>@347:1>@363:0>:int) =
        (<array_max_1033@344:1> = 0)
        P[<<array_max_1033@344:2>@347:0>](<array_max_1033@344:0>:int,<array_max_1033@344:1>:int,<<array_max_1033@344:2>@347:0>:int) =
        ((<array_max_1033@344:1> = 0) &&
         ((<array_max_1033@344:1> < <array_max_1033@344:0>) &&
          (<<array_max_1033@344:2>@347:0> = <array_max_1033@344:1>)))
        P[<array_max_1033@367:1>](<array_max_1033@367:0>:int,<array_max_1033@367:1>:int) =
        ((<array_max_1033@367:1> = 1) && (<array_max_1033@367:1> < (1 + <array_max_1033@367:0>)))
        P[<<array_max_1033@367:3>@370:0>](<array_max_1033@367:0>:int,<array_max_1033@367:1>:int,<<array_max_1033@367:3>@370:0>:int) =
        ((<<array_max_1033@367:3>@370:0> = 0) &&
         ((<array_max_1033@367:1> = 1) && (<array_max_1033@367:1> = <array_max_1033@367:0>)))
        P[<<array_max_1033@344:3>@379:0>](<array_max_1033@344:0>:int,<array_max_1033@344:1>:int,<<array_max_1033@344:3>@379:0>:int) =
        ((<<array_max_1033@344:3>@379:0> = 0) &&
         ((<array_max_1033@344:1> = 0) && ((1 + <array_max_1033@344:1>) = <array_max_1033@344:0>)))
        P[<check_1148@383:2>](<check_1148@383:0>:int,<check_1148@383:1>:int,<check_1148@383:2>:int) =
        ((<check_1148@383:1> = 0) && ((<check_1148@383:2> = 0) && (<check_1148@383:0> = 1)))
      upper bounds:
        P[<<array_max_1033@344:3>@379:0>](var1763:int,var1764:int,var1765:int) = ((var1764 <> 0) || (1 >= var1763))
        P[<<array_max_1033@367:3>@370:0>](var1758:int,var1759:int,var1760:int) = ((var1759 <> 1) || (1 >= var1758))
      begin GenHcSolver.classify_pids(915218)[4]
        output:
          [<<array_max_1033@367:3>@370:0>;<<array_max_1033@344:3>@379:0>]
      end GenHcSolver.classify_pids(915218)[4] (0.001000 sec.)
      begin ApronInterface.convex_hull_interpolate(915286)[4]
        lb:(((<<array_max_1033@367:3>@370:0> = 0) &&
             ((<array_max_1033@367:1> = 1) && (<array_max_1033@367:1> = <array_max_1033@367:0>))) ||
            ((<<array_max_1033@367:3>@370:0> = 0) &&
             ((<array_max_1033@367:1> = 0) && ((1 + <array_max_1033@367:1>) = <array_max_1033@367:0>))))
        nub:((not ((<array_max_1033@367:1> <> 1) || (1 >= <array_max_1033@367:0>))) ||
             (not ((<array_max_1033@367:1> <> 0) || (1 >= <array_max_1033@367:0>))))
        begin ExtFormula.Formula.case_analysis_boolean(915363)[5]
          ts: ((<<array_max_1033@367:3>@370:0> = 0) &&
               (((<array_max_1033@367:1> = 1) && (<array_max_1033@367:1> = <array_max_1033@367:0>)) ||
                ((<array_max_1033@367:1> = 0) && ((1 + <array_max_1033@367:1>) = <array_max_1033@367:0>))))
          
        end ExtFormula.Formula.case_analysis_boolean(915363)[5] (0.000999 sec.)
        begin ExtFormula.Formula.case_analysis_boolean(915413)[5]
          ts: ((1 < <array_max_1033@367:0>) && ((<array_max_1033@367:1> = 0) || (<array_max_1033@367:1> = 1)))
          
        end ExtFormula.Formula.case_analysis_boolean(915413)[5] (0.000000 sec.)
        lb':((<<array_max_1033@367:3>@370:0> = 0) &&
             (((-1 + <array_max_1033@367:0>) = 0) &&
              (((1 + (-1 * <array_max_1033@367:1>)) >= 0) && (<array_max_1033@367:1> >= 0))))
        nub':(((1 + (-1 * <array_max_1033@367:1>)) >= 0) &&
              ((<array_max_1033@367:1> >= 0) && ((-2 + <array_max_1033@367:0>) >= 0)))
        begin InterpProver.interpolate(915423)[5]
          begin InterpProver.interpolate_fresh(915424)[6]
            begin InterpProver.interpolate_log(915425)[7]
              input1: ((<<array_max_1033@367:3>@370:0> = 0) &&
                       (((-1 + <array_max_1033@367:0>) = 0) &&
                        (((1 + (-1 * <array_max_1033@367:1>)) >= 0) && (<array_max_1033@367:1> >= 0))))
              input2: (((1 + (-1 * <array_max_1033@367:1>)) >= 0) &&
                       ((<array_max_1033@367:1> >= 0) && ((-2 + <array_max_1033@367:0>) >= 0)))
              begin InterpProver.interpolate_check(915426)[8]
                begin InterpProver.interpolate_simplify(915427)[9]
                  begin InterpProver.interpolate_quick(915627)[10]
                    begin CsisatInterface.interpolate_csisat_wrap(915636)[11]
                      begin CsisatInterface.interpolate_csisat_post_process(915637)[12]
                        begin CsisatInterface.interpolate_csisat_log(915638)[13]
                          input1: (1 = v_sep_array_max_1033_sep_367_sep_0 & 0 <= v_sep_array_max_1033_sep_367_sep_1 & v_sep_array_max_1033_sep_367_sep_1 <= 1)
                          input2: (0 <= v_sep_array_max_1033_sep_367_sep_1 & 2 <= v_sep_array_max_1033_sep_367_sep_0 & v_sep_array_max_1033_sep_367_sep_1 <= 1)
                          begin CsisatInterface.interpolate_csisat_raw(915639)[14]
                            
                          end CsisatInterface.interpolate_csisat_raw(915639)[14] (0.000000 sec.)
                          output: 2*v_sep_array_max_1033_sep_367_sep_0 <= 2
                          
                        end CsisatInterface.interpolate_csisat_log(915638)[13] (0.000000 sec.)
                        after simplification: 2*v_sep_array_max_1033_sep_367_sep_0 <= 2
                        after dnf conversion: ((2*v_sep_array_max_1033_sep_367_sep_0 <= 2))
                        
                      end CsisatInterface.interpolate_csisat_post_process(915637)[12] (0.000000 sec.)
                      
                    end CsisatInterface.interpolate_csisat_wrap(915636)[11] (0.000000 sec.)
                    
                  end InterpProver.interpolate_quick(915627)[10] (0.001000 sec.)
                  
                end InterpProver.interpolate_simplify(915427)[9] (0.002000 sec.)
                
              end InterpProver.interpolate_check(915426)[8] (0.003000 sec.)
              output: (<array_max_1033@367:0> <= 1)
            end InterpProver.interpolate_log(915425)[7] (0.003000 sec.)
            
          end InterpProver.interpolate_fresh(915424)[6] (0.003000 sec.)
          
        end InterpProver.interpolate(915423)[5] (0.003000 sec.)
        output:
          P[<<array_max_1033@367:3>@370:0>](<array_max_1033@367:0>:int,<array_max_1033@367:1>:int,<<array_max_1033@367:3>@370:0>:int) =
          (<array_max_1033@367:0> <= 1)
          P[<<array_max_1033@344:3>@379:0>](<array_max_1033@367:0>:int,<array_max_1033@367:1>:int,<<array_max_1033@367:3>@370:0>:int) =
          (<array_max_1033@367:0> <= 1)
      end ApronInterface.convex_hull_interpolate(915286)[4] (0.004999 sec.)
      Horn clauses:
        P[<fail_1487@445:0>](<fail_1487@445:0>:bool)|- bot
        
        P[<check_1148@383:2>](<check_1148@409:0>:int,(-1 + <check_1148@409:1>):int,<check_1148@409:2>:int),
        (<check_1148@409:1> < <check_1148@409:0>) |- bot
        
         ((<check_1148@383:1> = 0) && (<check_1148@383:0> <= 1))
        |- P[<check_1148@383:2>](<check_1148@383:0>:int,<check_1148@383:1>:int,
                                 <check_1148@383:2>:int)
        
        P[<array_max_1033@367:1>](<array_max_1033@367:0>:int,<array_max_1033@367:1>:int),
        ((<array_max_1033@367:0> > 1) && (<array_max_1033@367:1> >= <array_max_1033@367:0>)) |- bot
        
        P[<array_max_1033@344:1>](<array_max_1033@367:0>:int,(-1 + <array_max_1033@367:1>):int),
        P[<<<array_max_1033@344:2>@347:1>@363:0>](<array_max_1033@367:0>:int,(
                                                  -1 + <array_max_1033@367:1>):int,(
                                                  -1 + <array_max_1033@367:1>):int,<f_array_max_1480@365:4>:int),
        (<array_max_1033@367:1> < (1 + <array_max_1033@367:0>))
        |- P[<array_max_1033@367:1>](<array_max_1033@367:0>:int,<array_max_1033@367:1>:int)
        
        P[<array_max_1033@344:1>](<array_max_1033@344:0>:int,<array_max_1033@344:1>:int), (
        <array_max_1033@344:1> = 0)
        |- P[<<<array_max_1033@344:2>@347:1>@363:0>](<array_max_1033@344:0>:int,
                                                     <array_max_1033@344:1>:int,
                                                     <<array_max_1033@344:2>@347:0>:int,
                                                     <<<array_max_1033@344:2>@347:1>@363:0>:int)
        
        P[<array_max_1033@344:1>](<array_max_1033@344:0>:int,<array_max_1033@344:1>:int),
        ((<array_max_1033@344:1> < <array_max_1033@344:0>) && (<<array_max_1033@344:2>@347:0> = <array_max_1033@344:1>))
        |- P[<<array_max_1033@344:2>@347:0>](<array_max_1033@344:0>:int,
                                             <array_max_1033@344:1>:int,
                                             <<array_max_1033@344:2>@347:0>:int)
        
         (<array_max_1033@344:1> = 0)
        |- P[<array_max_1033@344:1>](<array_max_1033@344:0>:int,<array_max_1033@344:1>:int)
      lower bounds:
        P[<check_1148@383:2>](<check_1148@383:0>:int,<check_1148@383:1>:int,<check_1148@383:2>:int) =
        ((<check_1148@383:1> = 0) && (<check_1148@383:0> <= 1))
        P[<array_max_1033@344:1>](<array_max_1033@344:0>:int,<array_max_1033@344:1>:int) = (<array_max_1033@344:1> = 0)
        P[<fail_1487@445:0>](var1769:bool) = false
        P[<<<array_max_1033@344:2>@347:1>@363:0>](<array_max_1033@344:0>:int,<array_max_1033@344:1>:int,<<array_max_1033@344:2>@347:0>:int,<<<array_max_1033@344:2>@347:1>@363:0>:int) =
        (<array_max_1033@344:1> = 0)
        P[<<array_max_1033@344:2>@347:0>](<array_max_1033@344:0>:int,<array_max_1033@344:1>:int,<<array_max_1033@344:2>@347:0>:int) =
        ((<array_max_1033@344:1> = 0) &&
         ((<array_max_1033@344:1> < <array_max_1033@344:0>) &&
          (<<array_max_1033@344:2>@347:0> = <array_max_1033@344:1>)))
        P[<array_max_1033@367:1>](<array_max_1033@367:0>:int,<array_max_1033@367:1>:int) =
        ((<array_max_1033@367:1> = 1) && (<array_max_1033@367:1> < (1 + <array_max_1033@367:0>)))
      upper bounds:
        P[<array_max_1033@367:1>](var1776:int,var1777:int) = ((var1776 <= 1) || (var1777 < var1776))
        P[<array_max_1033@344:1>](var1772:int,var1773:int) = true
      begin GenHcSolver.classify_pids(922039)[4]
        output:
          [<array_max_1033@344:1>;<array_max_1033@367:1>]
      end GenHcSolver.classify_pids(922039)[4] (0.000000 sec.)
      begin ApronInterface.convex_hull_interpolate(922064)[4]
        lb:((<array_max_1033@344:1> = 0) ||
            ((<array_max_1033@344:1> = 1) && (<array_max_1033@344:1> < (1 + <array_max_1033@344:0>))))
        nub:(not ((<array_max_1033@344:0> <= 1) || (<array_max_1033@344:1> < <array_max_1033@344:0>)))
        begin ExtFormula.Formula.case_analysis_boolean(922083)[5]
          ts: ((<array_max_1033@344:1> = 0) ||
               ((<array_max_1033@344:1> = 1) && (<array_max_1033@344:1> < (1 + <array_max_1033@344:0>))))
          
        end ExtFormula.Formula.case_analysis_boolean(922083)[5] (0.000000 sec.)
        begin ExtFormula.Formula.case_analysis_boolean(922109)[5]
          ts: ((<array_max_1033@344:0> > 1) && (<array_max_1033@344:1> >= <array_max_1033@344:0>))
          
        end ExtFormula.Formula.case_analysis_boolean(922109)[5] (0.000000 sec.)
        lb':(((1 + (-1 * <array_max_1033@344:1>)) >= 0) && (<array_max_1033@344:1> >= 0))
        nub':(((<array_max_1033@344:1> + (-1 * <array_max_1033@344:0>)) >= 0) && ((-2 + <array_max_1033@344:0>) >= 0))
        begin InterpProver.interpolate(922116)[5]
          begin InterpProver.interpolate_fresh(922117)[6]
            begin InterpProver.interpolate_log(922118)[7]
              input1: (((1 + (-1 * <array_max_1033@344:1>)) >= 0) && (<array_max_1033@344:1> >= 0))
              input2: (((<array_max_1033@344:1> + (-1 * <array_max_1033@344:0>)) >= 0) &&
                       ((-2 + <array_max_1033@344:0>) >= 0))
              begin InterpProver.interpolate_check(922119)[8]
                begin InterpProver.interpolate_simplify(922120)[9]
                  begin InterpProver.interpolate_quick(922187)[10]
                    begin CsisatInterface.interpolate_csisat_wrap(922196)[11]
                      begin CsisatInterface.interpolate_csisat_post_process(922197)[12]
                        begin CsisatInterface.interpolate_csisat_log(922198)[13]
                          input1: (0 <= v_sep_array_max_1033_sep_344_sep_1 & v_sep_array_max_1033_sep_344_sep_1 <= 1)
                          input2: (2 <= v_sep_array_max_1033_sep_344_sep_0 & v_sep_array_max_1033_sep_344_sep_0 <= v_sep_array_max_1033_sep_344_sep_1)
                          begin CsisatInterface.interpolate_csisat_raw(922199)[14]
                            
                          end CsisatInterface.interpolate_csisat_raw(922199)[14] (0.000000 sec.)
                          output: 2*v_sep_array_max_1033_sep_344_sep_1 <= 2
                          
                        end CsisatInterface.interpolate_csisat_log(922198)[13] (0.000000 sec.)
                        after simplification: 2*v_sep_array_max_1033_sep_344_sep_1 <= 2
                        after dnf conversion: ((2*v_sep_array_max_1033_sep_344_sep_1 <= 2))
                        
                      end CsisatInterface.interpolate_csisat_post_process(922197)[12] (0.000999 sec.)
                      
                    end CsisatInterface.interpolate_csisat_wrap(922196)[11] (0.000999 sec.)
                    
                  end InterpProver.interpolate_quick(922187)[10] (0.000999 sec.)
                  
                end InterpProver.interpolate_simplify(922120)[9] (0.000999 sec.)
                
              end InterpProver.interpolate_check(922119)[8] (0.000999 sec.)
              output: (<array_max_1033@344:1> <= 1)
            end InterpProver.interpolate_log(922118)[7] (0.000999 sec.)
            
          end InterpProver.interpolate_fresh(922117)[6] (0.000999 sec.)
          
        end InterpProver.interpolate(922116)[5] (0.000999 sec.)
        output:
          P[<array_max_1033@344:1>](<array_max_1033@344:0>:int,<array_max_1033@344:1>:int) =
          (<array_max_1033@344:1> <= 1)
          P[<array_max_1033@367:1>](<array_max_1033@344:0>:int,<array_max_1033@344:1>:int) =
          (<array_max_1033@344:1> <= 1)
      end ApronInterface.convex_hull_interpolate(922064)[4] (0.001999 sec.)
      Horn clauses:
        P[<fail_1487@445:0>](<fail_1487@445:0>:bool)|- bot
        
        P[<check_1148@383:2>](<check_1148@409:0>:int,(-1 + <check_1148@409:1>):int,<check_1148@409:2>:int),
        (<check_1148@409:1> < <check_1148@409:0>) |- bot
        
         ((<check_1148@383:1> = 0) && (<check_1148@383:0> <= 1))
        |- P[<check_1148@383:2>](<check_1148@383:0>:int,<check_1148@383:1>:int,
                                 <check_1148@383:2>:int)
        
        P[<<<array_max_1033@344:2>@347:1>@363:0>](<array_max_1033@367:0>:int,1:int,1:int,<f_array_max_1480@365:4>:int),
        (1 < <array_max_1033@367:0>) |- bot
        
         (<array_max_1033@344:1> = 0)
        |- P[<<<array_max_1033@344:2>@347:1>@363:0>](<array_max_1033@344:0>:int,
                                                     <array_max_1033@344:1>:int,
                                                     <<array_max_1033@344:2>@347:0>:int,
                                                     <<<array_max_1033@344:2>@347:1>@363:0>:int)
        
        
        ((<array_max_1033@344:1> < <array_max_1033@344:0>) &&
         ((<array_max_1033@344:1> <= 1) && (<<array_max_1033@344:2>@347:0> = <array_max_1033@344:1>)))
        |- P[<<array_max_1033@344:2>@347:0>](<array_max_1033@344:0>:int,
                                             <array_max_1033@344:1>:int,
                                             <<array_max_1033@344:2>@347:0>:int)
      lower bounds:
        P[<check_1148@383:2>](<check_1148@383:0>:int,<check_1148@383:1>:int,<check_1148@383:2>:int) =
        ((<check_1148@383:1> = 0) && (<check_1148@383:0> <= 1))
        P[<<<array_max_1033@344:2>@347:1>@363:0>](<array_max_1033@344:0>:int,<array_max_1033@344:1>:int,<<array_max_1033@344:2>@347:0>:int,<<<array_max_1033@344:2>@347:1>@363:0>:int) =
        (<array_max_1033@344:1> = 0)
        P[<<array_max_1033@344:2>@347:0>](<array_max_1033@344:0>:int,<array_max_1033@344:1>:int,<<array_max_1033@344:2>@347:0>:int) =
        ((<array_max_1033@344:1> < <array_max_1033@344:0>) &&
         ((<array_max_1033@344:1> <= 1) && (<<array_max_1033@344:2>@347:0> = <array_max_1033@344:1>)))
        P[<fail_1487@445:0>](var1781:bool) = false
      upper bounds:
        P[<<array_max_1033@344:2>@347:0>](var1784:int,var1785:int,var1786:int) = true
      begin GenHcSolver.classify_pids(925913)[4]
        output:
          [<<array_max_1033@344:2>@347:0>]
      end GenHcSolver.classify_pids(925913)[4] (0.000000 sec.)
      lb:((<array_max_1033@344:1> < <array_max_1033@344:0>) &&
          ((<array_max_1033@344:1> <= 1) && (<<array_max_1033@344:2>@347:0> = <array_max_1033@344:1>)))
      nub:false
      begin ApronInterface.convex_hull_interpolate(925916)[4]
        lb:((<array_max_1033@344:1> < <array_max_1033@344:0>) &&
            ((<array_max_1033@344:1> <= 1) && (<<array_max_1033@344:2>@347:0> = <array_max_1033@344:1>)))
        nub:false
        begin ExtFormula.Formula.case_analysis_boolean(925952)[5]
          ts: ((<array_max_1033@344:1> < <array_max_1033@344:0>) &&
               ((<array_max_1033@344:1> <= 1) && (<<array_max_1033@344:2>@347:0> = <array_max_1033@344:1>)))
          
        end ExtFormula.Formula.case_analysis_boolean(925952)[5] (0.000000 sec.)
        begin ExtFormula.Formula.case_analysis_boolean(925963)[5]
          ts: false
          
        end ExtFormula.Formula.case_analysis_boolean(925963)[5] (0.000000 sec.)
        lb':(((<<array_max_1033@344:2>@347:0> + (-1 * <array_max_1033@344:1>)) = 0) &&
             (((1 + (-1 * <array_max_1033@344:1>)) >= 0) &&
              (((-1 + (-1 * <array_max_1033@344:1>)) + <array_max_1033@344:0>) >= 0)))
        nub':(-1 >= 0)
        begin InterpProver.interpolate(925966)[5]
          begin InterpProver.interpolate_fresh(925967)[6]
            begin InterpProver.interpolate_log(925968)[7]
              input1: (((<<array_max_1033@344:2>@347:0> + (-1 * <array_max_1033@344:1>)) = 0) &&
                       (((1 + (-1 * <array_max_1033@344:1>)) >= 0) &&
                        (((-1 + (-1 * <array_max_1033@344:1>)) + <array_max_1033@344:0>) >= 0)))
              input2: (-1 >= 0)
              begin InterpProver.interpolate_check(925969)[8]
                begin InterpProver.interpolate_simplify(925970)[9]
                  begin InterpProver.interpolate_quick(926040)[10]
                    
                  end InterpProver.interpolate_quick(926040)[10] (0.000000 sec.)
                  
                end InterpProver.interpolate_simplify(925970)[9] (0.001000 sec.)
                
              end InterpProver.interpolate_check(925969)[8] (0.001000 sec.)
              output: true
            end InterpProver.interpolate_log(925968)[7] (0.001000 sec.)
            
          end InterpProver.interpolate_fresh(925967)[6] (0.001000 sec.)
          
        end InterpProver.interpolate(925966)[5] (0.001000 sec.)
        output:
          P[<<array_max_1033@344:2>@347:0>](<array_max_1033@344:0>:int,<array_max_1033@344:1>:int,<<array_max_1033@344:2>@347:0>:int) =
          true
      end ApronInterface.convex_hull_interpolate(925916)[4] (0.002000 sec.)
      Horn clauses:
        P[<fail_1487@445:0>](<fail_1487@445:0>:bool)|- bot
        
        P[<check_1148@383:2>](<check_1148@409:0>:int,(-1 + <check_1148@409:1>):int,<check_1148@409:2>:int),
        (<check_1148@409:1> < <check_1148@409:0>) |- bot
        
         ((<check_1148@383:1> = 0) && (<check_1148@383:0> <= 1))
        |- P[<check_1148@383:2>](<check_1148@383:0>:int,<check_1148@383:1>:int,
                                 <check_1148@383:2>:int)
        
        P[<<<array_max_1033@344:2>@347:1>@363:0>](<array_max_1033@367:0>:int,1:int,1:int,<f_array_max_1480@365:4>:int),
        (1 < <array_max_1033@367:0>) |- bot
        
         (<array_max_1033@344:1> = 0)
        |- P[<<<array_max_1033@344:2>@347:1>@363:0>](<array_max_1033@344:0>:int,
                                                     <array_max_1033@344:1>:int,
                                                     <<array_max_1033@344:2>@347:0>:int,
                                                     <<<array_max_1033@344:2>@347:1>@363:0>:int)
      lower bounds:
        P[<check_1148@383:2>](<check_1148@383:0>:int,<check_1148@383:1>:int,<check_1148@383:2>:int) =
        ((<check_1148@383:1> = 0) && (<check_1148@383:0> <= 1))
        P[<<<array_max_1033@344:2>@347:1>@363:0>](<array_max_1033@344:0>:int,<array_max_1033@344:1>:int,<<array_max_1033@344:2>@347:0>:int,<<<array_max_1033@344:2>@347:1>@363:0>:int) =
        (<array_max_1033@344:1> = 0)
        P[<fail_1487@445:0>](var1788:bool) = false
      upper bounds:
        P[<fail_1487@445:0>](var1791:bool) = true
      begin GenHcSolver.classify_pids(927409)[4]
        output:
          [<fail_1487@445:0>]
      end GenHcSolver.classify_pids(927409)[4] (0.000000 sec.)
      lb:false
      nub:false
      begin ApronInterface.convex_hull_interpolate(927412)[4]
        lb:false
        nub:false
        begin ExtFormula.Formula.case_analysis_boolean(927415)[5]
          ts: false
          
        end ExtFormula.Formula.case_analysis_boolean(927415)[5] (0.001000 sec.)
        begin ExtFormula.Formula.case_analysis_boolean(927420)[5]
          ts: false
          
        end ExtFormula.Formula.case_analysis_boolean(927420)[5] (0.000000 sec.)
        lb':(-1 >= 0)
        nub':(-1 >= 0)
        begin InterpProver.interpolate(927423)[5]
          begin InterpProver.interpolate_fresh(927424)[6]
            begin InterpProver.interpolate_log(927425)[7]
              input1: (-1 >= 0)
              input2: (-1 >= 0)
              begin InterpProver.interpolate_check(927426)[8]
                begin InterpProver.interpolate_simplify(927427)[9]
                  begin InterpProver.interpolate_quick(927442)[10]
                    
                  end InterpProver.interpolate_quick(927442)[10] (0.000000 sec.)
                  begin minimizing # of disjunctions(927446)[10]
                    input: false
                    output: false
                  end minimizing # of disjunctions(927446)[10] (0.000000 sec.)
                  
                end InterpProver.interpolate_simplify(927427)[9] (0.000000 sec.)
                
              end InterpProver.interpolate_check(927426)[8] (0.000000 sec.)
              output: false
            end InterpProver.interpolate_log(927425)[7] (0.000000 sec.)
            
          end InterpProver.interpolate_fresh(927424)[6] (0.000000 sec.)
          
        end InterpProver.interpolate(927423)[5] (0.000000 sec.)
        output:
          P[<fail_1487@445:0>](var1788:bool) = false
      end ApronInterface.convex_hull_interpolate(927412)[4] (0.001000 sec.)
      Horn clauses:
        P[<check_1148@383:2>](<check_1148@409:0>:int,(-1 + <check_1148@409:1>):int,<check_1148@409:2>:int),
        (<check_1148@409:1> < <check_1148@409:0>) |- bot
        
         ((<check_1148@383:1> = 0) && (<check_1148@383:0> <= 1))
        |- P[<check_1148@383:2>](<check_1148@383:0>:int,<check_1148@383:1>:int,
                                 <check_1148@383:2>:int)
        
        P[<<<array_max_1033@344:2>@347:1>@363:0>](<array_max_1033@367:0>:int,1:int,1:int,<f_array_max_1480@365:4>:int),
        (1 < <array_max_1033@367:0>) |- bot
        
         (<array_max_1033@344:1> = 0)
        |- P[<<<array_max_1033@344:2>@347:1>@363:0>](<array_max_1033@344:0>:int,
                                                     <array_max_1033@344:1>:int,
                                                     <<array_max_1033@344:2>@347:0>:int,
                                                     <<<array_max_1033@344:2>@347:1>@363:0>:int)
      lower bounds:
        P[<check_1148@383:2>](<check_1148@383:0>:int,<check_1148@383:1>:int,<check_1148@383:2>:int) =
        ((<check_1148@383:1> = 0) && (<check_1148@383:0> <= 1))
        P[<<<array_max_1033@344:2>@347:1>@363:0>](<array_max_1033@344:0>:int,<array_max_1033@344:1>:int,<<array_max_1033@344:2>@347:0>:int,<<<array_max_1033@344:2>@347:1>@363:0>:int) =
        (<array_max_1033@344:1> = 0)
      upper bounds:
        P[<check_1148@383:2>](var1792:int,var1793:int,var1794:int) = ((1 + var1793) >= var1792)
      begin GenHcSolver.classify_pids(928632)[4]
        output:
          [<check_1148@383:2>]
      end GenHcSolver.classify_pids(928632)[4] (0.000000 sec.)
      lb:((<check_1148@383:1> = 0) && (<check_1148@383:0> <= 1))
      nub:(not ((1 + <check_1148@383:1>) >= <check_1148@383:0>))
      begin ApronInterface.convex_hull_interpolate(928635)[4]
        lb:((<check_1148@383:1> = 0) && (<check_1148@383:0> <= 1))
        nub:(not ((1 + <check_1148@383:1>) >= <check_1148@383:0>))
        begin ExtFormula.Formula.case_analysis_boolean(928648)[5]
          ts: ((<check_1148@383:1> = 0) && (<check_1148@383:0> <= 1))
          
        end ExtFormula.Formula.case_analysis_boolean(928648)[5] (0.000000 sec.)
        begin ExtFormula.Formula.case_analysis_boolean(928659)[5]
          ts: ((1 + <check_1148@383:1>) < <check_1148@383:0>)
          
        end ExtFormula.Formula.case_analysis_boolean(928659)[5] (0.000000 sec.)
        lb':((<check_1148@383:1> = 0) && ((1 + (-1 * <check_1148@383:0>)) >= 0))
        nub':(((-2 + (-1 * <check_1148@383:1>)) + <check_1148@383:0>) >= 0)
        begin InterpProver.interpolate(928665)[5]
          begin InterpProver.interpolate_fresh(928666)[6]
            begin InterpProver.interpolate_log(928667)[7]
              input1: ((<check_1148@383:1> = 0) && ((1 + (-1 * <check_1148@383:0>)) >= 0))
              input2: (((-2 + (-1 * <check_1148@383:1>)) + <check_1148@383:0>) >= 0)
              begin InterpProver.interpolate_check(928668)[8]
                begin InterpProver.interpolate_simplify(928669)[9]
                  begin InterpProver.interpolate_quick(928708)[10]
                    begin CsisatInterface.interpolate_csisat_wrap(928717)[11]
                      begin CsisatInterface.interpolate_csisat_post_process(928718)[12]
                        begin CsisatInterface.interpolate_csisat_log(928719)[13]
                          input1: (0 = v_sep_check_1148_sep_383_sep_1 & v_sep_check_1148_sep_383_sep_0 <= 1)
                          input2: (2 + v_sep_check_1148_sep_383_sep_1) <= v_sep_check_1148_sep_383_sep_0
                          begin CsisatInterface.interpolate_csisat_raw(928720)[14]
                            
                          end CsisatInterface.interpolate_csisat_raw(928720)[14] (0.000000 sec.)
                          output: (-2*v_sep_check_1148_sep_383_sep_1 + 2*v_sep_check_1148_sep_383_sep_0) <= 2
                          
                        end CsisatInterface.interpolate_csisat_log(928719)[13] (0.000000 sec.)
                        after simplification: (-2*v_sep_check_1148_sep_383_sep_1 + 2*v_sep_check_1148_sep_383_sep_0) <= 2
                        after dnf conversion: (((-2*v_sep_check_1148_sep_383_sep_1 + 2*v_sep_check_1148_sep_383_sep_0) <= 2))
                        
                      end CsisatInterface.interpolate_csisat_post_process(928718)[12] (0.000000 sec.)
                      
                    end CsisatInterface.interpolate_csisat_wrap(928717)[11] (0.000000 sec.)
                    
                  end InterpProver.interpolate_quick(928708)[10] (0.000000 sec.)
                  
                end InterpProver.interpolate_simplify(928669)[9] (0.000000 sec.)
                
              end InterpProver.interpolate_check(928668)[8] (0.001000 sec.)
              output: (<check_1148@383:0> <= (1 + <check_1148@383:1>))
            end InterpProver.interpolate_log(928667)[7] (0.001000 sec.)
            
          end InterpProver.interpolate_fresh(928666)[6] (0.001000 sec.)
          
        end InterpProver.interpolate(928665)[5] (0.001000 sec.)
        output:
          P[<check_1148@383:2>](<check_1148@383:0>:int,<check_1148@383:1>:int,<check_1148@383:2>:int) =
          (<check_1148@383:0> <= (1 + <check_1148@383:1>))
      end ApronInterface.convex_hull_interpolate(928635)[4] (0.002000 sec.)
      Horn clauses:
        P[<<<array_max_1033@344:2>@347:1>@363:0>](<array_max_1033@367:0>:int,1:int,1:int,<f_array_max_1480@365:4>:int),
        (1 < <array_max_1033@367:0>) |- bot
        
         (<array_max_1033@344:1> = 0)
        |- P[<<<array_max_1033@344:2>@347:1>@363:0>](<array_max_1033@344:0>:int,
                                                     <array_max_1033@344:1>:int,
                                                     <<array_max_1033@344:2>@347:0>:int,
                                                     <<<array_max_1033@344:2>@347:1>@363:0>:int)
      lower bounds:
        P[<<<array_max_1033@344:2>@347:1>@363:0>](<array_max_1033@344:0>:int,<array_max_1033@344:1>:int,<<array_max_1033@344:2>@347:0>:int,<<<array_max_1033@344:2>@347:1>@363:0>:int) =
        (<array_max_1033@344:1> = 0)
      upper bounds:
        P[<<<array_max_1033@344:2>@347:1>@363:0>](var1795:int,var1796:int,var1797:int,var1798:int) =
        ((var1796 <> 1) || ((var1797 <> 1) || (1 >= var1795)))
      begin GenHcSolver.classify_pids(929471)[4]
        output:
          [<<<array_max_1033@344:2>@347:1>@363:0>]
      end GenHcSolver.classify_pids(929471)[4] (0.000000 sec.)
      lb:(<array_max_1033@344:1> = 0)
      nub:(not
             ((<array_max_1033@344:1> <> 1) || ((<<array_max_1033@344:2>@347:0> <> 1) || (1 >= <array_max_1033@344:0>))))
      begin ApronInterface.convex_hull_interpolate(929474)[4]
        lb:(<array_max_1033@344:1> = 0)
        nub:(not
               ((<array_max_1033@344:1> <> 1) ||
                ((<<array_max_1033@344:2>@347:0> <> 1) || (1 >= <array_max_1033@344:0>))))
        begin ExtFormula.Formula.case_analysis_boolean(929478)[5]
          ts: (<array_max_1033@344:1> = 0)
          
        end ExtFormula.Formula.case_analysis_boolean(929478)[5] (0.000000 sec.)
        begin ExtFormula.Formula.case_analysis_boolean(929508)[5]
          ts: ((<array_max_1033@344:1> = 1) && ((<<array_max_1033@344:2>@347:0> = 1) && (1 < <array_max_1033@344:0>)))
          
        end ExtFormula.Formula.case_analysis_boolean(929508)[5] (0.000000 sec.)
        lb':(<array_max_1033@344:1> = 0)
        nub':(((-1 + <<array_max_1033@344:2>@347:0>) = 0) &&
              (((-1 + <array_max_1033@344:1>) = 0) && ((-2 + <array_max_1033@344:0>) >= 0)))
        begin InterpProver.interpolate(929517)[5]
          begin InterpProver.interpolate_fresh(929518)[6]
            begin InterpProver.interpolate_log(929519)[7]
              input1: (<array_max_1033@344:1> = 0)
              input2: (((-1 + <<array_max_1033@344:2>@347:0>) = 0) &&
                       (((-1 + <array_max_1033@344:1>) = 0) && ((-2 + <array_max_1033@344:0>) >= 0)))
              begin InterpProver.interpolate_check(929520)[8]
                begin InterpProver.interpolate_simplify(929521)[9]
                  begin InterpProver.interpolate_quick(929614)[10]
                    begin CsisatInterface.interpolate_csisat_wrap(929623)[11]
                      begin CsisatInterface.interpolate_csisat_post_process(929624)[12]
                        begin CsisatInterface.interpolate_csisat_log(929625)[13]
                          input1: 0 = v_sep_array_max_1033_sep_344_sep_1
                          input2: (1 = v_sep_array_max_1033_sep_344_sep_1 & 2 <= v_sep_array_max_1033_sep_344_sep_0)
                          begin CsisatInterface.interpolate_csisat_raw(929626)[14]
                            
                          end CsisatInterface.interpolate_csisat_raw(929626)[14] (0.000000 sec.)
                          output: 2*v_sep_array_max_1033_sep_344_sep_1 <= 0
                          
                        end CsisatInterface.interpolate_csisat_log(929625)[13] (0.000000 sec.)
                        after simplification: 2*v_sep_array_max_1033_sep_344_sep_1 <= 0
                        after dnf conversion: ((2*v_sep_array_max_1033_sep_344_sep_1 <= 0))
                        
                      end CsisatInterface.interpolate_csisat_post_process(929624)[12] (0.000000 sec.)
                      
                    end CsisatInterface.interpolate_csisat_wrap(929623)[11] (0.000000 sec.)
                    
                  end InterpProver.interpolate_quick(929614)[10] (0.000000 sec.)
                  
                end InterpProver.interpolate_simplify(929521)[9] (0.000000 sec.)
                
              end InterpProver.interpolate_check(929520)[8] (0.001000 sec.)
              output: (<array_max_1033@344:1> <= 0)
            end InterpProver.interpolate_log(929519)[7] (0.002000 sec.)
            
          end InterpProver.interpolate_fresh(929518)[6] (0.002000 sec.)
          
        end InterpProver.interpolate(929517)[5] (0.002000 sec.)
        output:
          P[<<<array_max_1033@344:2>@347:1>@363:0>](<array_max_1033@344:0>:int,<array_max_1033@344:1>:int,<<array_max_1033@344:2>@347:0>:int,<<<array_max_1033@344:2>@347:1>@363:0>:int) =
          (<array_max_1033@344:1> <= 0)
      end ApronInterface.convex_hull_interpolate(929474)[4] (0.002000 sec.)
      begin HcSolver.check_validity(929748)[4]
        input:
          P[<fail_1487@445:0>](<fail_1487@445:0>:bool)|- bot
          
          P[<check_1148@409:2>](<f_check_1482@442:2>:int,<f_check_1482@442:0>:int,<f_check_1482@442:1>:int),
          P[<<<check_1148@409:3>@412:1>@440:0>](<f_check_1482@442:2>:int,<f_check_1482@442:0>:int,<f_check_1482@442:1>:int,<f_check_1482@442:0>:int,<f_check_1482@442:5>:int),
          ((<f_check_1482@442:5> > <f_check_1482@442:1>) &&
           ((<f_check_1482@442:0> < <f_check_1482@442:2>) && <fail_1487@445:0>))
          |- P[<fail_1487@445:0>](<fail_1487@445:0>:bool)
          
          P[<<<check_1148@383:3>@386:1>@402:0>](<check_1148@409:0>:int,(
                                                -1 + <check_1148@409:1>):int,<check_1148@409:2>:int,(
                                                -1 + <check_1148@409:1>):int,var1515:int),
          P[<check_1148@383:2>](<check_1148@409:0>:int,(-1 + <check_1148@409:1>):int,<check_1148@409:2>:int),
          P[<<<check_1148@383:3>@418:1>@434:0>](<check_1148@409:0>:int,(
                                                -1 + <check_1148@409:1>):int,<check_1148@409:2>:int,<<check_1148@409:3>@412:0>:int,<<<check_1148@409:3>@412:1>@440:0>:int),
          P[<check_1148@409:2>](<check_1148@409:0>:int,<check_1148@409:1>:int,<check_1148@409:2>:int),
          ((var1515 <= <check_1148@409:2>) && (<check_1148@409:1> < (1 + <check_1148@409:0>)))
          |- P[<<<check_1148@409:3>@412:1>@440:0>](<check_1148@409:0>:int,
                                                   <check_1148@409:1>:int,
                                                   <check_1148@409:2>:int,
                                                   <<check_1148@409:3>@412:0>:int,
                                                   <<<check_1148@409:3>@412:1>@440:0>:int)
          
          P[<<array_max_1033@344:3>@379:0>](<check_1148@383:0>:int,0:int,<check_1148@383:2>:int),
          P[<<make_array_1030@420:2>@432:0>](<check_1148@383:0>:int,<<check_1148@383:3>@418:0>:int,<<<check_1148@383:3>@418:1>@434:0>:int),
          P[<check_1148@383:2>](<check_1148@383:0>:int,<check_1148@383:1>:int,<check_1148@383:2>:int),
          (<check_1148@383:1> = 0)
          |- P[<<<check_1148@383:3>@418:1>@434:0>](<check_1148@383:0>:int,
                                                   <check_1148@383:1>:int,
                                                   <check_1148@383:2>:int,
                                                   <<check_1148@383:3>@418:0>:int,
                                                   <<<check_1148@383:3>@418:1>@434:0>:int)
          
          P[<make_array_1030@420:1>](<make_array_1030@420:0>:int,<make_array_1030@420:1>:int),
          ((0 <= <make_array_1030@420:1>) &&
           ((<make_array_1030@420:1> < <make_array_1030@420:0>) &&
            (<<make_array_1030@420:2>@432:0> = <make_array_1030@420:1>)))
          |- P[<<make_array_1030@420:2>@432:0>](<make_array_1030@420:0>:int,
                                                <make_array_1030@420:1>:int,
                                                <<make_array_1030@420:2>@432:0>:int)
          
          P[<<array_max_1033@344:3>@379:0>](<make_array_1030@420:0>:int,0:int,<check_1148@383:2>:int),
          P[<<check_1148@383:3>@418:0>](<make_array_1030@420:0>:int,0:int,<check_1148@383:2>:int,<make_array_1030@420:1>:int)|- P[<make_array_1030@420:1>](
          <make_array_1030@420:0>:int,<make_array_1030@420:1>:int)
          
          P[<<<check_1148@383:3>@386:1>@402:0>](<check_1148@383:0>:int,<check_1148@383:1>:int,<check_1148@383:2>:int,<check_1148@383:1>:int,var1516:int),
          P[<check_1148@383:2>](<check_1148@383:0>:int,<check_1148@383:1>:int,<check_1148@383:2>:int),
          P[<<check_1148@409:3>@412:0>](<check_1148@383:0>:int,(1 + <check_1148@383:1>):int,<check_1148@383:2>:int,<<check_1148@383:3>@418:0>:int),
          ((var1516 <= <check_1148@383:2>) && (<check_1148@383:1> < <check_1148@383:0>))
          |- P[<<check_1148@383:3>@418:0>](<check_1148@383:0>:int,<check_1148@383:1>:int,
                                           <check_1148@383:2>:int,<<check_1148@383:3>@418:0>:int)
          
          P[<check_1148@409:2>](<check_1148@409:0>:int,<check_1148@409:1>:int,<check_1148@409:2>:int),
          ((<check_1148@409:1> < <check_1148@409:0>) && (<<check_1148@409:3>@412:0> = <check_1148@409:1>))
          |- P[<<check_1148@409:3>@412:0>](<check_1148@409:0>:int,<check_1148@409:1>:int,
                                           <check_1148@409:2>:int,<<check_1148@409:3>@412:0>:int)
          
          P[<check_1148@383:2>](<check_1148@409:0>:int,(-1 + <check_1148@409:1>):int,<check_1148@409:2>:int),
          P[<<<check_1148@383:3>@386:1>@402:0>](<check_1148@409:0>:int,(
                                                -1 + <check_1148@409:1>):int,<check_1148@409:2>:int,(
                                                -1 + <check_1148@409:1>):int,var1517:int),
          ((var1517 <= <check_1148@409:2>) && (<check_1148@409:1> < (1 + <check_1148@409:0>)))
          |- P[<check_1148@409:2>](<check_1148@409:0>:int,<check_1148@409:1>:int,
                                   <check_1148@409:2>:int)
          
          P[<<array_max_1033@344:3>@379:0>](<check_1148@383:0>:int,0:int,<check_1148@383:2>:int),
          P[<<make_array_1030@388:2>@400:0>](<check_1148@383:0>:int,<<check_1148@383:3>@386:0>:int,<<<check_1148@383:3>@386:1>@402:0>:int),
          P[<check_1148@383:2>](<check_1148@383:0>:int,<check_1148@383:1>:int,<check_1148@383:2>:int),
          (<check_1148@383:1> = 0)
          |- P[<<<check_1148@383:3>@386:1>@402:0>](<check_1148@383:0>:int,
                                                   <check_1148@383:1>:int,
                                                   <check_1148@383:2>:int,
                                                   <<check_1148@383:3>@386:0>:int,
                                                   <<<check_1148@383:3>@386:1>@402:0>:int)
          
          P[<make_array_1030@388:1>](<make_array_1030@388:0>:int,<make_array_1030@388:1>:int),
          ((0 <= <make_array_1030@388:1>) &&
           ((<make_array_1030@388:1> < <make_array_1030@388:0>) &&
            (<<make_array_1030@388:2>@400:0> = <make_array_1030@388:1>)))
          |- P[<<make_array_1030@388:2>@400:0>](<make_array_1030@388:0>:int,
                                                <make_array_1030@388:1>:int,
                                                <<make_array_1030@388:2>@400:0>:int)
          
          P[<<array_max_1033@344:3>@379:0>](<make_array_1030@388:0>:int,0:int,<check_1148@383:2>:int),
          P[<<check_1148@383:3>@386:0>](<make_array_1030@388:0>:int,0:int,<check_1148@383:2>:int,<make_array_1030@388:1>:int)|- P[<make_array_1030@388:1>](
          <make_array_1030@388:0>:int,<make_array_1030@388:1>:int)
          
          P[<check_1148@383:2>](<check_1148@383:0>:int,<check_1148@383:1>:int,<check_1148@383:2>:int),
          ((<check_1148@383:1> < <check_1148@383:0>) && (<<check_1148@383:3>@386:0> = <check_1148@383:1>))
          |- P[<<check_1148@383:3>@386:0>](<check_1148@383:0>:int,<check_1148@383:1>:int,
                                           <check_1148@383:2>:int,<<check_1148@383:3>@386:0>:int)
          
          P[<<array_max_1033@344:3>@379:0>](<check_1148@383:0>:int,0:int,<check_1148@383:2>:int),
          (<check_1148@383:1> = 0)
          |- P[<check_1148@383:2>](<check_1148@383:0>:int,<check_1148@383:1>:int,
                                   <check_1148@383:2>:int)
          
          P[<array_max_1033@344:1>](<array_max_1033@344:0>:int,<array_max_1033@344:1>:int),
          P[<<<array_max_1033@344:2>@347:1>@363:0>](<array_max_1033@344:0>:int,<array_max_1033@344:1>:int,<array_max_1033@344:1>:int,var1518:int),
          P[<<array_max_1033@367:3>@370:0>](<array_max_1033@344:0>:int,(
                                            1 + <array_max_1033@344:1>):int,<<array_max_1033@344:3>@379:0>:int),
          ((var1518 <= <<array_max_1033@344:3>@379:0>) && (<array_max_1033@344:1> < <array_max_1033@344:0>))
          |- P[<<array_max_1033@344:3>@379:0>](<array_max_1033@344:0>:int,
                                               <array_max_1033@344:1>:int,
                                               <<array_max_1033@344:3>@379:0>:int)
          
          P[<array_max_1033@367:1>](<array_max_1033@367:0>:int,<array_max_1033@367:1>:int),
          ((<<array_max_1033@367:3>@370:0> = 0) && (<array_max_1033@367:1> >= <array_max_1033@367:0>))
          |- P[<<array_max_1033@367:3>@370:0>](<array_max_1033@367:0>:int,
                                               <array_max_1033@367:1>:int,
                                               <<array_max_1033@367:3>@370:0>:int)
          
          P[<array_max_1033@344:1>](<array_max_1033@367:0>:int,(-1 + <array_max_1033@367:1>):int),
          P[<<<array_max_1033@344:2>@347:1>@363:0>](<array_max_1033@367:0>:int,(
                                                    -1 + <array_max_1033@367:1>):int,(
                                                    -1 + <array_max_1033@367:1>):int,<f_array_max_1480@365:4>:int),
          (<array_max_1033@367:1> < (1 + <array_max_1033@367:0>))
          |- P[<array_max_1033@367:1>](<array_max_1033@367:0>:int,<array_max_1033@367:1>:int)
          
          P[<<make_array_1030@349:2>@361:0>](<array_max_1033@344:0>:int,<<array_max_1033@344:2>@347:0>:int,<<<array_max_1033@344:2>@347:1>@363:0>:int),
          P[<array_max_1033@344:1>](<array_max_1033@344:0>:int,<array_max_1033@344:1>:int),
          (<array_max_1033@344:1> = 0)
          |- P[<<<array_max_1033@344:2>@347:1>@363:0>](<array_max_1033@344:0>:int,
                                                       <array_max_1033@344:1>:int,
                                                       <<array_max_1033@344:2>@347:0>:int,
                                                       <<<array_max_1033@344:2>@347:1>@363:0>:int)
          
          P[<make_array_1030@349:1>](<make_array_1030@349:0>:int,<make_array_1030@349:1>:int),
          ((0 <= <make_array_1030@349:1>) &&
           ((<make_array_1030@349:1> < <make_array_1030@349:0>) &&
            (<<make_array_1030@349:2>@361:0> = <make_array_1030@349:1>)))
          |- P[<<make_array_1030@349:2>@361:0>](<make_array_1030@349:0>:int,
                                                <make_array_1030@349:1>:int,
                                                <<make_array_1030@349:2>@361:0>:int)
          
          P[<<array_max_1033@344:2>@347:0>](<make_array_1030@349:0>:int,0:int,<make_array_1030@349:1>:int)|- P[<make_array_1030@349:1>](
          <make_array_1030@349:0>:int,<make_array_1030@349:1>:int)
          
          P[<array_max_1033@344:1>](<array_max_1033@344:0>:int,<array_max_1033@344:1>:int),
          ((<array_max_1033@344:1> < <array_max_1033@344:0>) &&
           (<<array_max_1033@344:2>@347:0> = <array_max_1033@344:1>))
          |- P[<<array_max_1033@344:2>@347:0>](<array_max_1033@344:0>:int,
                                               <array_max_1033@344:1>:int,
                                               <<array_max_1033@344:2>@347:0>:int)
          
           (<array_max_1033@344:1> = 0)
          |- P[<array_max_1033@344:1>](<array_max_1033@344:0>:int,<array_max_1033@344:1>:int)
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        
      end HcSolver.check_validity(929748)[4] (0.018997 sec.)
      solution:
        P[<fail_1487@445:0>](var1788:bool) = false
        P[<<<check_1148@409:3>@412:1>@440:0>](<check_1148@383:0>:int,<check_1148@383:1>:int,<check_1148@383:2>:int,<<check_1148@383:3>@386:0>:int,<<<check_1148@383:3>@386:1>@402:0>:int) =
        true
        P[<<<check_1148@383:3>@418:1>@434:0>](<check_1148@383:0>:int,<check_1148@383:1>:int,<check_1148@383:2>:int,<<check_1148@383:3>@386:0>:int,<<<check_1148@383:3>@386:1>@402:0>:int) =
        true
        P[<<make_array_1030@420:2>@432:0>](<make_array_1030@349:0>:int,<make_array_1030@349:1>:int,<<make_array_1030@349:2>@361:0>:int) =
        true
        P[<make_array_1030@420:1>](<make_array_1030@349:0>:int,<make_array_1030@349:1>:int) = true
        P[<<check_1148@383:3>@418:0>](<check_1148@409:0>:int,<check_1148@409:1>:int,<check_1148@409:2>:int,<<check_1148@409:3>@412:0>:int) =
        true
        P[<<check_1148@409:3>@412:0>](<check_1148@409:0>:int,<check_1148@409:1>:int,<check_1148@409:2>:int,<<check_1148@409:3>@412:0>:int) =
        true
        P[<check_1148@409:2>](<check_1148@409:0>:int,<check_1148@409:1>:int,<check_1148@409:2>:int) =
        (<check_1148@409:0> <= <check_1148@409:1>)
        P[<<<check_1148@383:3>@386:1>@402:0>](<check_1148@383:0>:int,<check_1148@383:1>:int,<check_1148@383:2>:int,<<check_1148@383:3>@386:0>:int,<<<check_1148@383:3>@386:1>@402:0>:int) =
        true
        P[<<make_array_1030@388:2>@400:0>](<make_array_1030@349:0>:int,<make_array_1030@349:1>:int,<<make_array_1030@349:2>@361:0>:int) =
        true
        P[<make_array_1030@388:1>](<make_array_1030@349:0>:int,<make_array_1030@349:1>:int) = true
        P[<<check_1148@383:3>@386:0>](<check_1148@409:0>:int,<check_1148@409:1>:int,<check_1148@409:2>:int,<<check_1148@409:3>@412:0>:int) =
        true
        P[<check_1148@383:2>](<check_1148@383:0>:int,<check_1148@383:1>:int,<check_1148@383:2>:int) =
        (<check_1148@383:0> <= (1 + <check_1148@383:1>))
        P[<<array_max_1033@344:3>@379:0>](<array_max_1033@367:0>:int,<array_max_1033@367:1>:int,<<array_max_1033@367:3>@370:0>:int) =
        (<array_max_1033@367:0> <= 1)
        P[<<array_max_1033@367:3>@370:0>](<array_max_1033@367:0>:int,<array_max_1033@367:1>:int,<<array_max_1033@367:3>@370:0>:int) =
        (<array_max_1033@367:0> <= 1)
        P[<array_max_1033@367:1>](<array_max_1033@344:0>:int,<array_max_1033@344:1>:int) =
        (<array_max_1033@344:1> <= 1)
        P[<<<array_max_1033@344:2>@347:1>@363:0>](<array_max_1033@344:0>:int,<array_max_1033@344:1>:int,<<array_max_1033@344:2>@347:0>:int,<<<array_max_1033@344:2>@347:1>@363:0>:int) =
        (<array_max_1033@344:1> <= 0)
        P[<<make_array_1030@349:2>@361:0>](<make_array_1030@349:0>:int,<make_array_1030@349:1>:int,<<make_array_1030@349:2>@361:0>:int) =
        true
        P[<make_array_1030@349:1>](<make_array_1030@349:0>:int,<make_array_1030@349:1>:int) = true
        P[<<array_max_1033@344:2>@347:0>](<array_max_1033@344:0>:int,<array_max_1033@344:1>:int,<<array_max_1033@344:2>@347:0>:int) =
        true
        P[<array_max_1033@344:1>](<array_max_1033@344:0>:int,<array_max_1033@344:1>:int) =
        (<array_max_1033@344:1> <= 1)
    end GenHcSolver.solve(803853)[3] (0.677897 sec.)
    begin YhornInterface.solve(932548)[3]
      begin HcSolver.solve_ub(932549)[4]
        encoded:
          P[<fail_1487@445:0>](<fail_1487@445:0>:int)|- bot
          
          P[<check_1148@409:2>](<f_check_1482@442:2>:int,<f_check_1482@442:0>:int,<f_check_1482@442:1>:int),
          P[<<<check_1148@409:3>@412:1>@440:0>](<f_check_1482@442:2>:int,<f_check_1482@442:0>:int,<f_check_1482@442:1>:int,<f_check_1482@442:0>:int,<f_check_1482@442:5>:int),
          ((<f_check_1482@442:5> > <f_check_1482@442:1>) &&
           ((<f_check_1482@442:0> < <f_check_1482@442:2>) && (<fail_1487@445:0> = 1)))
          |- P[<fail_1487@445:0>](<fail_1487@445:0>:int)
          
          P[<<<check_1148@383:3>@386:1>@402:0>](<check_1148@409:0>:int,(
                                                -1 + <check_1148@409:1>):int,<check_1148@409:2>:int,(
                                                -1 + <check_1148@409:1>):int,var1515:int),
          P[<check_1148@383:2>](<check_1148@409:0>:int,(-1 + <check_1148@409:1>):int,<check_1148@409:2>:int),
          P[<<<check_1148@383:3>@418:1>@434:0>](<check_1148@409:0>:int,(
                                                -1 + <check_1148@409:1>):int,<check_1148@409:2>:int,<<check_1148@409:3>@412:0>:int,<<<check_1148@409:3>@412:1>@440:0>:int),
          P[<check_1148@409:2>](<check_1148@409:0>:int,<check_1148@409:1>:int,<check_1148@409:2>:int),
          ((var1515 <= <check_1148@409:2>) && (<check_1148@409:1> < (1 + <check_1148@409:0>)))
          |- P[<<<check_1148@409:3>@412:1>@440:0>](<check_1148@409:0>:int,
                                                   <check_1148@409:1>:int,
                                                   <check_1148@409:2>:int,
                                                   <<check_1148@409:3>@412:0>:int,
                                                   <<<check_1148@409:3>@412:1>@440:0>:int)
          
          P[<<array_max_1033@344:3>@379:0>](<check_1148@383:0>:int,0:int,<check_1148@383:2>:int),
          P[<<make_array_1030@420:2>@432:0>](<check_1148@383:0>:int,<<check_1148@383:3>@418:0>:int,<<<check_1148@383:3>@418:1>@434:0>:int),
          P[<check_1148@383:2>](<check_1148@383:0>:int,<check_1148@383:1>:int,<check_1148@383:2>:int),
          (<check_1148@383:1> = 0)
          |- P[<<<check_1148@383:3>@418:1>@434:0>](<check_1148@383:0>:int,
                                                   <check_1148@383:1>:int,
                                                   <check_1148@383:2>:int,
                                                   <<check_1148@383:3>@418:0>:int,
                                                   <<<check_1148@383:3>@418:1>@434:0>:int)
          
          P[<make_array_1030@420:1>](<make_array_1030@420:0>:int,<make_array_1030@420:1>:int),
          ((0 <= <make_array_1030@420:1>) &&
           ((<make_array_1030@420:1> < <make_array_1030@420:0>) &&
            (<<make_array_1030@420:2>@432:0> = <make_array_1030@420:1>)))
          |- P[<<make_array_1030@420:2>@432:0>](<make_array_1030@420:0>:int,
                                                <make_array_1030@420:1>:int,
                                                <<make_array_1030@420:2>@432:0>:int)
          
          P[<<array_max_1033@344:3>@379:0>](<make_array_1030@420:0>:int,0:int,<check_1148@383:2>:int),
          P[<<check_1148@383:3>@418:0>](<make_array_1030@420:0>:int,0:int,<check_1148@383:2>:int,<make_array_1030@420:1>:int)|- P[<make_array_1030@420:1>](
          <make_array_1030@420:0>:int,<make_array_1030@420:1>:int)
          
          P[<<<check_1148@383:3>@386:1>@402:0>](<check_1148@383:0>:int,<check_1148@383:1>:int,<check_1148@383:2>:int,<check_1148@383:1>:int,var1516:int),
          P[<check_1148@383:2>](<check_1148@383:0>:int,<check_1148@383:1>:int,<check_1148@383:2>:int),
          P[<<check_1148@409:3>@412:0>](<check_1148@383:0>:int,(1 + <check_1148@383:1>):int,<check_1148@383:2>:int,<<check_1148@383:3>@418:0>:int),
          ((var1516 <= <check_1148@383:2>) && (<check_1148@383:1> < <check_1148@383:0>))
          |- P[<<check_1148@383:3>@418:0>](<check_1148@383:0>:int,<check_1148@383:1>:int,
                                           <check_1148@383:2>:int,<<check_1148@383:3>@418:0>:int)
          
          P[<check_1148@409:2>](<check_1148@409:0>:int,<check_1148@409:1>:int,<check_1148@409:2>:int),
          ((<check_1148@409:1> < <check_1148@409:0>) && (<<check_1148@409:3>@412:0> = <check_1148@409:1>))
          |- P[<<check_1148@409:3>@412:0>](<check_1148@409:0>:int,<check_1148@409:1>:int,
                                           <check_1148@409:2>:int,<<check_1148@409:3>@412:0>:int)
          
          P[<check_1148@383:2>](<check_1148@409:0>:int,(-1 + <check_1148@409:1>):int,<check_1148@409:2>:int),
          P[<<<check_1148@383:3>@386:1>@402:0>](<check_1148@409:0>:int,(
                                                -1 + <check_1148@409:1>):int,<check_1148@409:2>:int,(
                                                -1 + <check_1148@409:1>):int,var1517:int),
          ((var1517 <= <check_1148@409:2>) && (<check_1148@409:1> < (1 + <check_1148@409:0>)))
          |- P[<check_1148@409:2>](<check_1148@409:0>:int,<check_1148@409:1>:int,
                                   <check_1148@409:2>:int)
          
          P[<<array_max_1033@344:3>@379:0>](<check_1148@383:0>:int,0:int,<check_1148@383:2>:int),
          P[<<make_array_1030@388:2>@400:0>](<check_1148@383:0>:int,<<check_1148@383:3>@386:0>:int,<<<check_1148@383:3>@386:1>@402:0>:int),
          P[<check_1148@383:2>](<check_1148@383:0>:int,<check_1148@383:1>:int,<check_1148@383:2>:int),
          (<check_1148@383:1> = 0)
          |- P[<<<check_1148@383:3>@386:1>@402:0>](<check_1148@383:0>:int,
                                                   <check_1148@383:1>:int,
                                                   <check_1148@383:2>:int,
                                                   <<check_1148@383:3>@386:0>:int,
                                                   <<<check_1148@383:3>@386:1>@402:0>:int)
          
          P[<make_array_1030@388:1>](<make_array_1030@388:0>:int,<make_array_1030@388:1>:int),
          ((0 <= <make_array_1030@388:1>) &&
           ((<make_array_1030@388:1> < <make_array_1030@388:0>) &&
            (<<make_array_1030@388:2>@400:0> = <make_array_1030@388:1>)))
          |- P[<<make_array_1030@388:2>@400:0>](<make_array_1030@388:0>:int,
                                                <make_array_1030@388:1>:int,
                                                <<make_array_1030@388:2>@400:0>:int)
          
          P[<<array_max_1033@344:3>@379:0>](<make_array_1030@388:0>:int,0:int,<check_1148@383:2>:int),
          P[<<check_1148@383:3>@386:0>](<make_array_1030@388:0>:int,0:int,<check_1148@383:2>:int,<make_array_1030@388:1>:int)|- P[<make_array_1030@388:1>](
          <make_array_1030@388:0>:int,<make_array_1030@388:1>:int)
          
          P[<check_1148@383:2>](<check_1148@383:0>:int,<check_1148@383:1>:int,<check_1148@383:2>:int),
          ((<check_1148@383:1> < <check_1148@383:0>) && (<<check_1148@383:3>@386:0> = <check_1148@383:1>))
          |- P[<<check_1148@383:3>@386:0>](<check_1148@383:0>:int,<check_1148@383:1>:int,
                                           <check_1148@383:2>:int,<<check_1148@383:3>@386:0>:int)
          
          P[<<array_max_1033@344:3>@379:0>](<check_1148@383:0>:int,0:int,<check_1148@383:2>:int),
          (<check_1148@383:1> = 0)
          |- P[<check_1148@383:2>](<check_1148@383:0>:int,<check_1148@383:1>:int,
                                   <check_1148@383:2>:int)
          
          P[<array_max_1033@344:1>](<array_max_1033@344:0>:int,<array_max_1033@344:1>:int),
          P[<<<array_max_1033@344:2>@347:1>@363:0>](<array_max_1033@344:0>:int,<array_max_1033@344:1>:int,<array_max_1033@344:1>:int,var1518:int),
          P[<<array_max_1033@367:3>@370:0>](<array_max_1033@344:0>:int,(
                                            1 + <array_max_1033@344:1>):int,<<array_max_1033@344:3>@379:0>:int),
          ((var1518 <= <<array_max_1033@344:3>@379:0>) && (<array_max_1033@344:1> < <array_max_1033@344:0>))
          |- P[<<array_max_1033@344:3>@379:0>](<array_max_1033@344:0>:int,
                                               <array_max_1033@344:1>:int,
                                               <<array_max_1033@344:3>@379:0>:int)
          
          P[<array_max_1033@367:1>](<array_max_1033@367:0>:int,<array_max_1033@367:1>:int),
          ((<<array_max_1033@367:3>@370:0> = 0) && (<array_max_1033@367:1> >= <array_max_1033@367:0>))
          |- P[<<array_max_1033@367:3>@370:0>](<array_max_1033@367:0>:int,
                                               <array_max_1033@367:1>:int,
                                               <<array_max_1033@367:3>@370:0>:int)
          
          P[<array_max_1033@344:1>](<array_max_1033@367:0>:int,(-1 + <array_max_1033@367:1>):int),
          P[<<<array_max_1033@344:2>@347:1>@363:0>](<array_max_1033@367:0>:int,(
                                                    -1 + <array_max_1033@367:1>):int,(
                                                    -1 + <array_max_1033@367:1>):int,<f_array_max_1480@365:4>:int),
          (<array_max_1033@367:1> < (1 + <array_max_1033@367:0>))
          |- P[<array_max_1033@367:1>](<array_max_1033@367:0>:int,<array_max_1033@367:1>:int)
          
          P[<<make_array_1030@349:2>@361:0>](<array_max_1033@344:0>:int,<<array_max_1033@344:2>@347:0>:int,<<<array_max_1033@344:2>@347:1>@363:0>:int),
          P[<array_max_1033@344:1>](<array_max_1033@344:0>:int,<array_max_1033@344:1>:int),
          (<array_max_1033@344:1> = 0)
          |- P[<<<array_max_1033@344:2>@347:1>@363:0>](<array_max_1033@344:0>:int,
                                                       <array_max_1033@344:1>:int,
                                                       <<array_max_1033@344:2>@347:0>:int,
                                                       <<<array_max_1033@344:2>@347:1>@363:0>:int)
          
          P[<make_array_1030@349:1>](<make_array_1030@349:0>:int,<make_array_1030@349:1>:int),
          ((0 <= <make_array_1030@349:1>) &&
           ((<make_array_1030@349:1> < <make_array_1030@349:0>) &&
            (<<make_array_1030@349:2>@361:0> = <make_array_1030@349:1>)))
          |- P[<<make_array_1030@349:2>@361:0>](<make_array_1030@349:0>:int,
                                                <make_array_1030@349:1>:int,
                                                <<make_array_1030@349:2>@361:0>:int)
          
          P[<<array_max_1033@344:2>@347:0>](<make_array_1030@349:0>:int,0:int,<make_array_1030@349:1>:int)|- P[<make_array_1030@349:1>](
          <make_array_1030@349:0>:int,<make_array_1030@349:1>:int)
          
          P[<array_max_1033@344:1>](<array_max_1033@344:0>:int,<array_max_1033@344:1>:int),
          ((<array_max_1033@344:1> < <array_max_1033@344:0>) &&
           (<<array_max_1033@344:2>@347:0> = <array_max_1033@344:1>))
          |- P[<<array_max_1033@344:2>@347:0>](<array_max_1033@344:0>:int,
                                               <array_max_1033@344:1>:int,
                                               <<array_max_1033@344:2>@347:0>:int)
          
           (<array_max_1033@344:1> = 0)
          |- P[<array_max_1033@344:1>](<array_max_1033@344:0>:int,<array_max_1033@344:1>:int)
        input to Yhorn:
          P[<fail_1487@445:0>](<fail_1487@445:0>:int)|- bot
          
          P[<check_1148@409:2>](<f_check_1482@442:2>:int,<f_check_1482@442:0>:int,<f_check_1482@442:1>:int),
          P[<<<check_1148@409:3>@412:1>@440:0>](<f_check_1482@442:2>:int,<f_check_1482@442:0>:int,<f_check_1482@442:1>:int,<f_check_1482@442:0>:int,<f_check_1482@442:5>:int),
          ((<f_check_1482@442:0> < <f_check_1482@442:2>) &&
           ((<f_check_1482@442:5> > <f_check_1482@442:1>) && (<fail_1487@445:0> = 1)))
          |- P[<fail_1487@445:0>](<fail_1487@445:0>:int)
          
          P[<<<check_1148@383:3>@386:1>@402:0>](<check_1148@409:0>:int,var1799:int,<check_1148@409:2>:int,var1800:int,var1515:int),
          P[<check_1148@383:2>](<check_1148@409:0>:int,var1801:int,<check_1148@409:2>:int),
          P[<<<check_1148@383:3>@418:1>@434:0>](<check_1148@409:0>:int,var1802:int,<check_1148@409:2>:int,<<check_1148@409:3>@412:0>:int,<<<check_1148@409:3>@412:1>@440:0>:int),
          P[<check_1148@409:2>](<check_1148@409:0>:int,<check_1148@409:1>:int,<check_1148@409:2>:int),
          (((1 + var1802) = <check_1148@409:1>) &&
           (((1 + var1801) = <check_1148@409:1>) &&
            (((1 + var1800) = <check_1148@409:1>) &&
             (((1 + var1799) = <check_1148@409:1>) &&
              ((<check_1148@409:1> < (1 + <check_1148@409:0>)) && (var1515 <= <check_1148@409:2>))))))
          |- P[<<<check_1148@409:3>@412:1>@440:0>](<check_1148@409:0>:int,
                                                   <check_1148@409:1>:int,
                                                   <check_1148@409:2>:int,
                                                   <<check_1148@409:3>@412:0>:int,
                                                   <<<check_1148@409:3>@412:1>@440:0>:int)
          
          P[<<array_max_1033@344:3>@379:0>](<check_1148@383:0>:int,var1803:int,<check_1148@383:2>:int),
          P[<<make_array_1030@420:2>@432:0>](<check_1148@383:0>:int,<<check_1148@383:3>@418:0>:int,<<<check_1148@383:3>@418:1>@434:0>:int),
          P[<check_1148@383:2>](<check_1148@383:0>:int,<check_1148@383:1>:int,<check_1148@383:2>:int),
          ((var1803 = 0) && (<check_1148@383:1> = 0))
          |- P[<<<check_1148@383:3>@418:1>@434:0>](<check_1148@383:0>:int,
                                                   <check_1148@383:1>:int,
                                                   <check_1148@383:2>:int,
                                                   <<check_1148@383:3>@418:0>:int,
                                                   <<<check_1148@383:3>@418:1>@434:0>:int)
          
          P[<make_array_1030@420:1>](<make_array_1030@420:0>:int,<make_array_1030@420:1>:int),
          ((<<make_array_1030@420:2>@432:0> = <make_array_1030@420:1>) &&
           ((<make_array_1030@420:1> < <make_array_1030@420:0>) && (0 <= <make_array_1030@420:1>)))
          |- P[<<make_array_1030@420:2>@432:0>](<make_array_1030@420:0>:int,
                                                <make_array_1030@420:1>:int,
                                                <<make_array_1030@420:2>@432:0>:int)
          
          P[<<array_max_1033@344:3>@379:0>](<make_array_1030@420:0>:int,var1804:int,<check_1148@383:2>:int),
          P[<<check_1148@383:3>@418:0>](<make_array_1030@420:0>:int,var1805:int,<check_1148@383:2>:int,<make_array_1030@420:1>:int),
          ((var1805 = 0) && (var1804 = 0))
          |- P[<make_array_1030@420:1>](<make_array_1030@420:0>:int,<make_array_1030@420:1>:int)
          
          P[<<<check_1148@383:3>@386:1>@402:0>](<check_1148@383:0>:int,<check_1148@383:1>:int,<check_1148@383:2>:int,<check_1148@383:1>:int,var1516:int),
          P[<check_1148@383:2>](<check_1148@383:0>:int,<check_1148@383:1>:int,<check_1148@383:2>:int),
          P[<<check_1148@409:3>@412:0>](<check_1148@383:0>:int,var1806:int,<check_1148@383:2>:int,<<check_1148@383:3>@418:0>:int),
          ((var1806 = (1 + <check_1148@383:1>)) &&
           ((<check_1148@383:1> < <check_1148@383:0>) && (var1516 <= <check_1148@383:2>)))
          |- P[<<check_1148@383:3>@418:0>](<check_1148@383:0>:int,<check_1148@383:1>:int,
                                           <check_1148@383:2>:int,<<check_1148@383:3>@418:0>:int)
          
          P[<check_1148@409:2>](<check_1148@409:0>:int,<check_1148@409:1>:int,<check_1148@409:2>:int),
          ((<<check_1148@409:3>@412:0> = <check_1148@409:1>) && (<check_1148@409:1> < <check_1148@409:0>))
          |- P[<<check_1148@409:3>@412:0>](<check_1148@409:0>:int,<check_1148@409:1>:int,
                                           <check_1148@409:2>:int,<<check_1148@409:3>@412:0>:int)
          
          P[<check_1148@383:2>](<check_1148@409:0>:int,var1807:int,<check_1148@409:2>:int),
          P[<<<check_1148@383:3>@386:1>@402:0>](<check_1148@409:0>:int,var1808:int,<check_1148@409:2>:int,var1809:int,var1517:int),
          (((1 + var1809) = <check_1148@409:1>) &&
           (((1 + var1808) = <check_1148@409:1>) &&
            (((1 + var1807) = <check_1148@409:1>) &&
             ((<check_1148@409:1> < (1 + <check_1148@409:0>)) && (var1517 <= <check_1148@409:2>)))))
          |- P[<check_1148@409:2>](<check_1148@409:0>:int,<check_1148@409:1>:int,
                                   <check_1148@409:2>:int)
          
          P[<<array_max_1033@344:3>@379:0>](<check_1148@383:0>:int,var1810:int,<check_1148@383:2>:int),
          P[<<make_array_1030@388:2>@400:0>](<check_1148@383:0>:int,<<check_1148@383:3>@386:0>:int,<<<check_1148@383:3>@386:1>@402:0>:int),
          P[<check_1148@383:2>](<check_1148@383:0>:int,<check_1148@383:1>:int,<check_1148@383:2>:int),
          ((var1810 = 0) && (<check_1148@383:1> = 0))
          |- P[<<<check_1148@383:3>@386:1>@402:0>](<check_1148@383:0>:int,
                                                   <check_1148@383:1>:int,
                                                   <check_1148@383:2>:int,
                                                   <<check_1148@383:3>@386:0>:int,
                                                   <<<check_1148@383:3>@386:1>@402:0>:int)
          
          P[<make_array_1030@388:1>](<make_array_1030@388:0>:int,<make_array_1030@388:1>:int),
          ((<<make_array_1030@388:2>@400:0> = <make_array_1030@388:1>) &&
           ((<make_array_1030@388:1> < <make_array_1030@388:0>) && (0 <= <make_array_1030@388:1>)))
          |- P[<<make_array_1030@388:2>@400:0>](<make_array_1030@388:0>:int,
                                                <make_array_1030@388:1>:int,
                                                <<make_array_1030@388:2>@400:0>:int)
          
          P[<<array_max_1033@344:3>@379:0>](<make_array_1030@388:0>:int,var1811:int,<check_1148@383:2>:int),
          P[<<check_1148@383:3>@386:0>](<make_array_1030@388:0>:int,var1812:int,<check_1148@383:2>:int,<make_array_1030@388:1>:int),
          ((var1812 = 0) && (var1811 = 0))
          |- P[<make_array_1030@388:1>](<make_array_1030@388:0>:int,<make_array_1030@388:1>:int)
          
          P[<check_1148@383:2>](<check_1148@383:0>:int,<check_1148@383:1>:int,<check_1148@383:2>:int),
          ((<<check_1148@383:3>@386:0> = <check_1148@383:1>) && (<check_1148@383:1> < <check_1148@383:0>))
          |- P[<<check_1148@383:3>@386:0>](<check_1148@383:0>:int,<check_1148@383:1>:int,
                                           <check_1148@383:2>:int,<<check_1148@383:3>@386:0>:int)
          
          P[<<array_max_1033@344:3>@379:0>](<check_1148@383:0>:int,var1813:int,<check_1148@383:2>:int),
          ((var1813 = 0) && (<check_1148@383:1> = 0))
          |- P[<check_1148@383:2>](<check_1148@383:0>:int,<check_1148@383:1>:int,
                                   <check_1148@383:2>:int)
          
          P[<array_max_1033@344:1>](<array_max_1033@344:0>:int,<array_max_1033@344:1>:int),
          P[<<<array_max_1033@344:2>@347:1>@363:0>](<array_max_1033@344:0>:int,<array_max_1033@344:1>:int,<array_max_1033@344:1>:int,var1518:int),
          P[<<array_max_1033@367:3>@370:0>](<array_max_1033@344:0>:int,var1814:int,<<array_max_1033@344:3>@379:0>:int),
          ((var1814 = (1 + <array_max_1033@344:1>)) &&
           ((<array_max_1033@344:1> < <array_max_1033@344:0>) && (var1518 <= <<array_max_1033@344:3>@379:0>)))
          |- P[<<array_max_1033@344:3>@379:0>](<array_max_1033@344:0>:int,
                                               <array_max_1033@344:1>:int,
                                               <<array_max_1033@344:3>@379:0>:int)
          
          P[<array_max_1033@367:1>](<array_max_1033@367:0>:int,<array_max_1033@367:1>:int),
          ((<array_max_1033@367:1> >= <array_max_1033@367:0>) && (<<array_max_1033@367:3>@370:0> = 0))
          |- P[<<array_max_1033@367:3>@370:0>](<array_max_1033@367:0>:int,
                                               <array_max_1033@367:1>:int,
                                               <<array_max_1033@367:3>@370:0>:int)
          
          P[<array_max_1033@344:1>](<array_max_1033@367:0>:int,var1815:int),
          P[<<<array_max_1033@344:2>@347:1>@363:0>](<array_max_1033@367:0>:int,var1816:int,var1817:int,<f_array_max_1480@365:4>:int),
          (((1 + var1817) = <array_max_1033@367:1>) &&
           (((1 + var1816) = <array_max_1033@367:1>) &&
            (((1 + var1815) = <array_max_1033@367:1>) && (<array_max_1033@367:1> < (1 + <array_max_1033@367:0>)))))
          |- P[<array_max_1033@367:1>](<array_max_1033@367:0>:int,<array_max_1033@367:1>:int)
          
          P[<<make_array_1030@349:2>@361:0>](<array_max_1033@344:0>:int,<<array_max_1033@344:2>@347:0>:int,<<<array_max_1033@344:2>@347:1>@363:0>:int),
          P[<array_max_1033@344:1>](<array_max_1033@344:0>:int,<array_max_1033@344:1>:int),
          (<array_max_1033@344:1> = 0)
          |- P[<<<array_max_1033@344:2>@347:1>@363:0>](<array_max_1033@344:0>:int,
                                                       <array_max_1033@344:1>:int,
                                                       <<array_max_1033@344:2>@347:0>:int,
                                                       <<<array_max_1033@344:2>@347:1>@363:0>:int)
          
          P[<make_array_1030@349:1>](<make_array_1030@349:0>:int,<make_array_1030@349:1>:int),
          ((<<make_array_1030@349:2>@361:0> = <make_array_1030@349:1>) &&
           ((<make_array_1030@349:1> < <make_array_1030@349:0>) && (0 <= <make_array_1030@349:1>)))
          |- P[<<make_array_1030@349:2>@361:0>](<make_array_1030@349:0>:int,
                                                <make_array_1030@349:1>:int,
                                                <<make_array_1030@349:2>@361:0>:int)
          
          P[<<array_max_1033@344:2>@347:0>](<make_array_1030@349:0>:int,var1818:int,<make_array_1030@349:1>:int),
          (var1818 = 0) |- P[<make_array_1030@349:1>](<make_array_1030@349:0>:int,
                                                      <make_array_1030@349:1>:int)
          
          P[<array_max_1033@344:1>](<array_max_1033@344:0>:int,<array_max_1033@344:1>:int),
          ((<<array_max_1033@344:2>@347:0> = <array_max_1033@344:1>) &&
           (<array_max_1033@344:1> < <array_max_1033@344:0>))
          |- P[<<array_max_1033@344:2>@347:0>](<array_max_1033@344:0>:int,
                                               <array_max_1033@344:1>:int,
                                               <<array_max_1033@344:2>@347:0>:int)
          
           (<array_max_1033@344:1> = 0)
          |- P[<array_max_1033@344:1>](<array_max_1033@344:0>:int,<array_max_1033@344:1>:int)Yhorn (Wed Sep 25 10:52:05 JST 2013)


(0=0) & (v_sep_fail_1487_sep_445_sep_0($6793)) -> 1=0.
(($6793-1=0) & ($6794-$6795>0) & ($6796-$6797<0)) & (v_sep_check_1148_sep_409_sep_3_sep_412_sep_1_sep_440_sep_0($6797,$6796,$6795,$6796,$6794)) & (v_sep_check_1148_sep_409_sep_2($6797,$6796,$6795)) -> v_sep_fail_1487_sep_445_sep_0($6793).
(($6798-$6799<=0) & ($6800-$6801-1<0) & (-$6800+$6802+1=0) & (-$6800+$6803+1=0) & (-$6800+$6804+1=0) & (-$6800+$6805+1=0)) & (v_sep_check_1148_sep_409_sep_2($6801,$6800,$6799)) & (v_sep_check_1148_sep_383_sep_3_sep_418_sep_1_sep_434_sep_0($6801,$6805,$6799,$6806,$6807)) & (v_sep_check_1148_sep_383_sep_2($6801,$6804,$6799)) & (v_sep_check_1148_sep_383_sep_3_sep_386_sep_1_sep_402_sep_0($6801,$6802,$6799,$6803,$6798)) -> v_sep_check_1148_sep_409_sep_3_sep_412_sep_1_sep_440_sep_0($6801,$6800,$6799,$6806,$6807).
(($6808=0) & ($6809=0)) & (v_sep_check_1148_sep_383_sep_2($6810,$6808,$6811)) & (v_sep_make_array_1030_sep_420_sep_2_sep_432_sep_0($6810,$6812,$6813)) & (v_sep_array_max_1033_sep_344_sep_3_sep_379_sep_0($6810,$6809,$6811)) -> v_sep_check_1148_sep_383_sep_3_sep_418_sep_1_sep_434_sep_0($6810,$6808,$6811,$6812,$6813).
((-$6814<=0) & ($6814-$6815<0) & (-$6814+$6816=0)) & (v_sep_make_array_1030_sep_420_sep_1($6815,$6814)) -> v_sep_make_array_1030_sep_420_sep_2_sep_432_sep_0($6815,$6814,$6816).
(($6817=0) & ($6818=0)) & (v_sep_check_1148_sep_383_sep_3_sep_418_sep_0($6815,$6818,$6811,$6814)) & (v_sep_array_max_1033_sep_344_sep_3_sep_379_sep_0($6815,$6817,$6811)) -> v_sep_make_array_1030_sep_420_sep_1($6815,$6814).
((-$6811+$6819<=0) & ($6808-$6810<0) & (-$6808+$6820-1=0)) & (v_sep_check_1148_sep_409_sep_3_sep_412_sep_0($6810,$6820,$6811,$6812)) & (v_sep_check_1148_sep_383_sep_2($6810,$6808,$6811)) & (v_sep_check_1148_sep_383_sep_3_sep_386_sep_1_sep_402_sep_0($6810,$6808,$6811,$6808,$6819)) -> v_sep_check_1148_sep_383_sep_3_sep_418_sep_0($6810,$6808,$6811,$6812).
(($6800-$6801<0) & (-$6800+$6806=0)) & (v_sep_check_1148_sep_409_sep_2($6801,$6800,$6799)) -> v_sep_check_1148_sep_409_sep_3_sep_412_sep_0($6801,$6800,$6799,$6806).
((-$6799+$6821<=0) & ($6800-$6801-1<0) & (-$6800+$6822+1=0) & (-$6800+$6823+1=0) & (-$6800+$6824+1=0)) & (v_sep_check_1148_sep_383_sep_3_sep_386_sep_1_sep_402_sep_0($6801,$6823,$6799,$6824,$6821)) & (v_sep_check_1148_sep_383_sep_2($6801,$6822,$6799)) -> v_sep_check_1148_sep_409_sep_2($6801,$6800,$6799).
(($6808=0) & ($6825=0)) & (v_sep_check_1148_sep_383_sep_2($6810,$6808,$6811)) & (v_sep_make_array_1030_sep_388_sep_2_sep_400_sep_0($6810,$6826,$6827)) & (v_sep_array_max_1033_sep_344_sep_3_sep_379_sep_0($6810,$6825,$6811)) -> v_sep_check_1148_sep_383_sep_3_sep_386_sep_1_sep_402_sep_0($6810,$6808,$6811,$6826,$6827).
((-$6828<=0) & ($6828-$6829<0) & (-$6828+$6830=0)) & (v_sep_make_array_1030_sep_388_sep_1($6829,$6828)) -> v_sep_make_array_1030_sep_388_sep_2_sep_400_sep_0($6829,$6828,$6830).
(($6831=0) & ($6832=0)) & (v_sep_check_1148_sep_383_sep_3_sep_386_sep_0($6829,$6832,$6811,$6828)) & (v_sep_array_max_1033_sep_344_sep_3_sep_379_sep_0($6829,$6831,$6811)) -> v_sep_make_array_1030_sep_388_sep_1($6829,$6828).
(($6808-$6810<0) & (-$6808+$6826=0)) & (v_sep_check_1148_sep_383_sep_2($6810,$6808,$6811)) -> v_sep_check_1148_sep_383_sep_3_sep_386_sep_0($6810,$6808,$6811,$6826).
(($6808=0) & ($6833=0)) & (v_sep_array_max_1033_sep_344_sep_3_sep_379_sep_0($6810,$6833,$6811)) -> v_sep_check_1148_sep_383_sep_2($6810,$6808,$6811).
(($6834-$6835<=0) & ($6836-$6837<0) & (-$6836+$6838-1=0)) & (v_sep_array_max_1033_sep_367_sep_3_sep_370_sep_0($6837,$6838,$6835)) & (v_sep_array_max_1033_sep_344_sep_2_sep_347_sep_1_sep_363_sep_0($6837,$6836,$6836,$6834)) & (v_sep_array_max_1033_sep_344_sep_1($6837,$6836)) -> v_sep_array_max_1033_sep_344_sep_3_sep_379_sep_0($6837,$6836,$6835).
(($6839=0) & ($6840-$6841>=0)) & (v_sep_array_max_1033_sep_367_sep_1($6841,$6840)) -> v_sep_array_max_1033_sep_367_sep_3_sep_370_sep_0($6841,$6840,$6839).
(($6840-$6841-1<0) & (-$6840+$6842+1=0) & (-$6840+$6843+1=0) & (-$6840+$6844+1=0)) & (v_sep_array_max_1033_sep_344_sep_2_sep_347_sep_1_sep_363_sep_0($6841,$6843,$6844,$6845)) & (v_sep_array_max_1033_sep_344_sep_1($6841,$6842)) -> v_sep_array_max_1033_sep_367_sep_1($6841,$6840).
($6836=0) & (v_sep_array_max_1033_sep_344_sep_1($6837,$6836)) & (v_sep_make_array_1030_sep_349_sep_2_sep_361_sep_0($6837,$6846,$6847)) -> v_sep_array_max_1033_sep_344_sep_2_sep_347_sep_1_sep_363_sep_0($6837,$6836,$6846,$6847).
((-$6848<=0) & ($6848-$6849<0) & (-$6848+$6850=0)) & (v_sep_make_array_1030_sep_349_sep_1($6849,$6848)) -> v_sep_make_array_1030_sep_349_sep_2_sep_361_sep_0($6849,$6848,$6850).
($6851=0) & (v_sep_array_max_1033_sep_344_sep_2_sep_347_sep_0($6849,$6851,$6848)) -> v_sep_make_array_1030_sep_349_sep_1($6849,$6848).
(($6836-$6837<0) & (-$6836+$6846=0)) & (v_sep_array_max_1033_sep_344_sep_1($6837,$6836)) -> v_sep_array_max_1033_sep_344_sep_2_sep_347_sep_0($6837,$6836,$6846).
$6836=0 -> v_sep_array_max_1033_sep_344_sep_1($6837,$6836).


v_sep_array_max_1033_sep_344_sep_1: X
v_sep_array_max_1033_sep_344_sep_2_sep_347_sep_0: X
v_sep_array_max_1033_sep_344_sep_2_sep_347_sep_1_sep_363_sep_0: X
v_sep_array_max_1033_sep_344_sep_3_sep_379_sep_0: X
v_sep_array_max_1033_sep_367_sep_1: X
v_sep_array_max_1033_sep_367_sep_3_sep_370_sep_0: X
v_sep_check_1148_sep_383_sep_2: X
v_sep_check_1148_sep_383_sep_3_sep_386_sep_0: X
v_sep_check_1148_sep_383_sep_3_sep_386_sep_1_sep_402_sep_0: X
v_sep_check_1148_sep_383_sep_3_sep_418_sep_0: X
v_sep_check_1148_sep_383_sep_3_sep_418_sep_1_sep_434_sep_0: X
v_sep_check_1148_sep_409_sep_2: X
v_sep_check_1148_sep_409_sep_3_sep_412_sep_0: X
v_sep_check_1148_sep_409_sep_3_sep_412_sep_1_sep_440_sep_0: X
v_sep_fail_1487_sep_445_sep_0: X
v_sep_make_array_1030_sep_349_sep_1: X
v_sep_make_array_1030_sep_349_sep_2_sep_361_sep_0: X
v_sep_make_array_1030_sep_388_sep_1: X
v_sep_make_array_1030_sep_388_sep_2_sep_400_sep_0: X
v_sep_make_array_1030_sep_420_sep_1: X
v_sep_make_array_1030_sep_420_sep_2_sep_432_sep_0: X
.......................................
v_sep_array_max_1033_sep_344_sep_1: X
v_sep_array_max_1033_sep_344_sep_2_sep_347_sep_0: X
v_sep_array_max_1033_sep_344_sep_2_sep_347_sep_1_sep_363_sep_0: X
v_sep_array_max_1033_sep_344_sep_3_sep_379_sep_0: X
v_sep_array_max_1033_sep_367_sep_1: X
v_sep_array_max_1033_sep_367_sep_3_sep_370_sep_0: X
v_sep_check_1148_sep_383_sep_2: X
v_sep_check_1148_sep_383_sep_3_sep_386_sep_0: X
v_sep_check_1148_sep_383_sep_3_sep_386_sep_1_sep_402_sep_0: X
v_sep_check_1148_sep_383_sep_3_sep_418_sep_0: X
v_sep_check_1148_sep_383_sep_3_sep_418_sep_1_sep_434_sep_0: X
v_sep_check_1148_sep_409_sep_2: X
v_sep_check_1148_sep_409_sep_3_sep_412_sep_0: X
v_sep_check_1148_sep_409_sep_3_sep_412_sep_1_sep_440_sep_0: X
v_sep_fail_1487_sep_445_sep_0: X
v_sep_make_array_1030_sep_349_sep_1: X
v_sep_make_array_1030_sep_349_sep_2_sep_361_sep_0: X
v_sep_make_array_1030_sep_388_sep_1: X
v_sep_make_array_1030_sep_388_sep_2_sep_400_sep_0: X
v_sep_make_array_1030_sep_420_sep_1: X
v_sep_make_array_1030_sep_420_sep_2_sep_432_sep_0: X
....
v_sep_array_max_1033_sep_344_sep_1: X
v_sep_array_max_1033_sep_344_sep_2_sep_347_sep_0: X
v_sep_array_max_1033_sep_344_sep_2_sep_347_sep_1_sep_363_sep_0: X
v_sep_array_max_1033_sep_344_sep_3_sep_379_sep_0: X
v_sep_array_max_1033_sep_367_sep_1: X
v_sep_array_max_1033_sep_367_sep_3_sep_370_sep_0: X
v_sep_check_1148_sep_383_sep_2: X
v_sep_check_1148_sep_383_sep_3_sep_386_sep_0: X
v_sep_check_1148_sep_383_sep_3_sep_386_sep_1_sep_402_sep_0: X
v_sep_check_1148_sep_383_sep_3_sep_418_sep_0: X
v_sep_check_1148_sep_383_sep_3_sep_418_sep_1_sep_434_sep_0: X
v_sep_check_1148_sep_409_sep_2: X
v_sep_check_1148_sep_409_sep_3_sep_412_sep_0: X
v_sep_check_1148_sep_409_sep_3_sep_412_sep_1_sep_440_sep_0: X
v_sep_fail_1487_sep_445_sep_0: X
v_sep_make_array_1030_sep_349_sep_1: X
v_sep_make_array_1030_sep_349_sep_2_sep_361_sep_0: X
v_sep_make_array_1030_sep_388_sep_1: X
v_sep_make_array_1030_sep_388_sep_2_sep_400_sep_0: X
v_sep_make_array_1030_sep_420_sep_1: X
v_sep_make_array_1030_sep_420_sep_2_sep_432_sep_0: X
..........
v_sep_array_max_1033_sep_344_sep_1: X
v_sep_array_max_1033_sep_344_sep_2_sep_347_sep_0: X
v_sep_array_max_1033_sep_344_sep_2_sep_347_sep_1_sep_363_sep_0: X
v_sep_array_max_1033_sep_344_sep_3_sep_379_sep_0: X
v_sep_array_max_1033_sep_367_sep_1: X
v_sep_array_max_1033_sep_367_sep_3_sep_370_sep_0: X
v_sep_check_1148_sep_383_sep_2: X
v_sep_check_1148_sep_383_sep_3_sep_386_sep_0: X
v_sep_check_1148_sep_383_sep_3_sep_386_sep_1_sep_402_sep_0: X
v_sep_check_1148_sep_383_sep_3_sep_418_sep_0: X
v_sep_check_1148_sep_383_sep_3_sep_418_sep_1_sep_434_sep_0: X
v_sep_check_1148_sep_409_sep_2: X
v_sep_check_1148_sep_409_sep_3_sep_412_sep_0: X
v_sep_check_1148_sep_409_sep_3_sep_412_sep_1_sep_440_sep_0: X
v_sep_fail_1487_sep_445_sep_0: X
v_sep_make_array_1030_sep_349_sep_1: X
v_sep_make_array_1030_sep_349_sep_2_sep_361_sep_0: X
v_sep_make_array_1030_sep_388_sep_1: X
v_sep_make_array_1030_sep_388_sep_2_sep_400_sep_0: X
v_sep_make_array_1030_sep_420_sep_1: X
v_sep_make_array_1030_sep_420_sep_2_sep_432_sep_0: X
.................
v_sep_array_max_1033_sep_344_sep_1: X
v_sep_array_max_1033_sep_344_sep_2_sep_347_sep_0: X
v_sep_array_max_1033_sep_344_sep_2_sep_347_sep_1_sep_363_sep_0: X
v_sep_array_max_1033_sep_344_sep_3_sep_379_sep_0: X
v_sep_array_max_1033_sep_367_sep_1: X
v_sep_array_max_1033_sep_367_sep_3_sep_370_sep_0: X
v_sep_check_1148_sep_383_sep_2: X
v_sep_check_1148_sep_383_sep_3_sep_386_sep_0: X
v_sep_check_1148_sep_383_sep_3_sep_386_sep_1_sep_402_sep_0: X
v_sep_check_1148_sep_383_sep_3_sep_418_sep_0: X
v_sep_check_1148_sep_383_sep_3_sep_418_sep_1_sep_434_sep_0: X
v_sep_check_1148_sep_409_sep_2: X
v_sep_check_1148_sep_409_sep_3_sep_412_sep_0: X
v_sep_check_1148_sep_409_sep_3_sep_412_sep_1_sep_440_sep_0: X
v_sep_fail_1487_sep_445_sep_0: X
v_sep_make_array_1030_sep_349_sep_1: X
v_sep_make_array_1030_sep_349_sep_2_sep_361_sep_0: X
v_sep_make_array_1030_sep_388_sep_1: X
v_sep_make_array_1030_sep_388_sep_2_sep_400_sep_0: X
v_sep_make_array_1030_sep_420_sep_1: X
v_sep_make_array_1030_sep_420_sep_2_sep_432_sep_0: X
......................
v_sep_array_max_1033_sep_344_sep_1: X
v_sep_array_max_1033_sep_344_sep_2_sep_347_sep_0: X
v_sep_array_max_1033_sep_344_sep_2_sep_347_sep_1_sep_363_sep_0: X
v_sep_array_max_1033_sep_344_sep_3_sep_379_sep_0: X
v_sep_array_max_1033_sep_367_sep_1: X
v_sep_array_max_1033_sep_367_sep_3_sep_370_sep_0: X
v_sep_check_1148_sep_383_sep_2: X
v_sep_check_1148_sep_383_sep_3_sep_386_sep_0: X
v_sep_check_1148_sep_383_sep_3_sep_386_sep_1_sep_402_sep_0: X
v_sep_check_1148_sep_383_sep_3_sep_418_sep_0: X
v_sep_check_1148_sep_383_sep_3_sep_418_sep_1_sep_434_sep_0: X
v_sep_check_1148_sep_409_sep_2: X
v_sep_check_1148_sep_409_sep_3_sep_412_sep_0: X
v_sep_check_1148_sep_409_sep_3_sep_412_sep_1_sep_440_sep_0: X
v_sep_fail_1487_sep_445_sep_0: X
v_sep_make_array_1030_sep_349_sep_1: X
v_sep_make_array_1030_sep_349_sep_2_sep_361_sep_0: X
v_sep_make_array_1030_sep_388_sep_1: X
v_sep_make_array_1030_sep_388_sep_2_sep_400_sep_0: X
v_sep_make_array_1030_sep_420_sep_1: X
v_sep_make_array_1030_sep_420_sep_2_sep_432_sep_0: X
.............................
v_sep_array_max_1033_sep_344_sep_1: X
v_sep_array_max_1033_sep_344_sep_2_sep_347_sep_0: X
v_sep_array_max_1033_sep_344_sep_2_sep_347_sep_1_sep_363_sep_0: X
v_sep_array_max_1033_sep_344_sep_3_sep_379_sep_0: X
v_sep_array_max_1033_sep_367_sep_1: X
v_sep_array_max_1033_sep_367_sep_3_sep_370_sep_0: X
v_sep_check_1148_sep_383_sep_2: X
v_sep_check_1148_sep_383_sep_3_sep_386_sep_0: X
v_sep_check_1148_sep_383_sep_3_sep_386_sep_1_sep_402_sep_0: X
v_sep_check_1148_sep_383_sep_3_sep_418_sep_0: X
v_sep_check_1148_sep_383_sep_3_sep_418_sep_1_sep_434_sep_0: X
v_sep_check_1148_sep_409_sep_2: X
v_sep_check_1148_sep_409_sep_3_sep_412_sep_0: X
v_sep_check_1148_sep_409_sep_3_sep_412_sep_1_sep_440_sep_0: X
v_sep_fail_1487_sep_445_sep_0: X
v_sep_make_array_1030_sep_349_sep_1: X
v_sep_make_array_1030_sep_349_sep_2_sep_361_sep_0: X
v_sep_make_array_1030_sep_388_sep_1: X
v_sep_make_array_1030_sep_388_sep_2_sep_400_sep_0: X
v_sep_make_array_1030_sep_420_sep_1: X
v_sep_make_array_1030_sep_420_sep_2_sep_432_sep_0: X
....................................
v_sep_array_max_1033_sep_344_sep_1: X
v_sep_array_max_1033_sep_344_sep_2_sep_347_sep_0: X
v_sep_array_max_1033_sep_344_sep_2_sep_347_sep_1_sep_363_sep_0: X
v_sep_array_max_1033_sep_344_sep_3_sep_379_sep_0: X
v_sep_array_max_1033_sep_367_sep_1: X
v_sep_array_max_1033_sep_367_sep_3_sep_370_sep_0: X
v_sep_check_1148_sep_383_sep_2: X
v_sep_check_1148_sep_383_sep_3_sep_386_sep_0: X
v_sep_check_1148_sep_383_sep_3_sep_386_sep_1_sep_402_sep_0: X
v_sep_check_1148_sep_383_sep_3_sep_418_sep_0: X
v_sep_check_1148_sep_383_sep_3_sep_418_sep_1_sep_434_sep_0: X
v_sep_check_1148_sep_409_sep_2: X
v_sep_check_1148_sep_409_sep_3_sep_412_sep_0: X
v_sep_check_1148_sep_409_sep_3_sep_412_sep_1_sep_440_sep_0: X
v_sep_fail_1487_sep_445_sep_0: X
v_sep_make_array_1030_sep_349_sep_1: X
v_sep_make_array_1030_sep_349_sep_2_sep_361_sep_0: X
v_sep_make_array_1030_sep_388_sep_1: X
v_sep_make_array_1030_sep_388_sep_2_sep_400_sep_0: X
v_sep_make_array_1030_sep_420_sep_1: X
v_sep_make_array_1030_sep_420_sep_2_sep_432_sep_0: X
......................................
v_sep_array_max_1033_sep_344_sep_1: X
v_sep_array_max_1033_sep_344_sep_2_sep_347_sep_0: X
v_sep_array_max_1033_sep_344_sep_2_sep_347_sep_1_sep_363_sep_0: X
v_sep_array_max_1033_sep_344_sep_3_sep_379_sep_0: X
v_sep_array_max_1033_sep_367_sep_1: X
v_sep_array_max_1033_sep_367_sep_3_sep_370_sep_0: X
v_sep_check_1148_sep_383_sep_2: X
v_sep_check_1148_sep_383_sep_3_sep_386_sep_0: X
v_sep_check_1148_sep_383_sep_3_sep_386_sep_1_sep_402_sep_0: X
v_sep_check_1148_sep_383_sep_3_sep_418_sep_0: X
v_sep_check_1148_sep_383_sep_3_sep_418_sep_1_sep_434_sep_0: X
v_sep_check_1148_sep_409_sep_2: X
v_sep_check_1148_sep_409_sep_3_sep_412_sep_0: X
v_sep_check_1148_sep_409_sep_3_sep_412_sep_1_sep_440_sep_0: X
v_sep_fail_1487_sep_445_sep_0: X
v_sep_make_array_1030_sep_349_sep_1: X
v_sep_make_array_1030_sep_349_sep_2_sep_361_sep_0: X
v_sep_make_array_1030_sep_388_sep_1: X
v_sep_make_array_1030_sep_388_sep_2_sep_400_sep_0: X
v_sep_make_array_1030_sep_420_sep_1: X
v_sep_make_array_1030_sep_420_sep_2_sep_432_sep_0: X
.......................................(0=0) & (v_sep_fail_1487_sep_445_sep_0($6793)) -> 1=0.
(($6793-1=0) & ($6794-$6795>0) & ($6796-$6797<0)) & (v_sep_check_1148_sep_409_sep_3_sep_412_sep_1_sep_440_sep_0($6797,$6796,$6795,$6796,$6794)) & (v_sep_check_1148_sep_409_sep_2($6797,$6796,$6795)) -> v_sep_fail_1487_sep_445_sep_0($6793).
(($6798-$6799<=0) & ($6800-$6801-1<0) & (-$6800+$6802+1=0) & (-$6800+$6803+1=0) & (-$6800+$6804+1=0) & (-$6800+$6805+1=0)) & (v_sep_check_1148_sep_409_sep_2($6801,$6800,$6799)) & (v_sep_check_1148_sep_383_sep_3_sep_418_sep_1_sep_434_sep_0($6801,$6805,$6799,$6806,$6807)) & (v_sep_check_1148_sep_383_sep_2($6801,$6804,$6799)) & (v_sep_check_1148_sep_383_sep_3_sep_386_sep_1_sep_402_sep_0($6801,$6802,$6799,$6803,$6798)) -> v_sep_check_1148_sep_409_sep_3_sep_412_sep_1_sep_440_sep_0($6801,$6800,$6799,$6806,$6807).
(($6808=0) & ($6809=0)) & (v_sep_check_1148_sep_383_sep_2($6810,$6808,$6811)) & (v_sep_make_array_1030_sep_420_sep_2_sep_432_sep_0($6810,$6812,$6813)) & (v_sep_array_max_1033_sep_344_sep_3_sep_379_sep_0($6810,$6809,$6811)) -> v_sep_check_1148_sep_383_sep_3_sep_418_sep_1_sep_434_sep_0($6810,$6808,$6811,$6812,$6813).
((-$6814<=0) & ($6814-$6815<0) & (-$6814+$6816=0)) & (v_sep_make_array_1030_sep_420_sep_1($6815,$6814)) -> v_sep_make_array_1030_sep_420_sep_2_sep_432_sep_0($6815,$6814,$6816).
(($6817=0) & ($6818=0)) & (v_sep_check_1148_sep_383_sep_3_sep_418_sep_0($6815,$6818,$6811,$6814)) & (v_sep_array_max_1033_sep_344_sep_3_sep_379_sep_0($6815,$6817,$6811)) -> v_sep_make_array_1030_sep_420_sep_1($6815,$6814).
((-$6811+$6819<=0) & ($6808-$6810<0) & (-$6808+$6820-1=0)) & (v_sep_check_1148_sep_409_sep_3_sep_412_sep_0($6810,$6820,$6811,$6812)) & (v_sep_check_1148_sep_383_sep_2($6810,$6808,$6811)) & (v_sep_check_1148_sep_383_sep_3_sep_386_sep_1_sep_402_sep_0($6810,$6808,$6811,$6808,$6819)) -> v_sep_check_1148_sep_383_sep_3_sep_418_sep_0($6810,$6808,$6811,$6812).
(($6800-$6801<0) & (-$6800+$6806=0)) & (v_sep_check_1148_sep_409_sep_2($6801,$6800,$6799)) -> v_sep_check_1148_sep_409_sep_3_sep_412_sep_0($6801,$6800,$6799,$6806).
((-$6799+$6821<=0) & ($6800-$6801-1<0) & (-$6800+$6822+1=0) & (-$6800+$6823+1=0) & (-$6800+$6824+1=0)) & (v_sep_check_1148_sep_383_sep_3_sep_386_sep_1_sep_402_sep_0($6801,$6823,$6799,$6824,$6821)) & (v_sep_check_1148_sep_383_sep_2($6801,$6822,$6799)) -> v_sep_check_1148_sep_409_sep_2($6801,$6800,$6799).
(($6808=0) & ($6825=0)) & (v_sep_check_1148_sep_383_sep_2($6810,$6808,$6811)) & (v_sep_make_array_1030_sep_388_sep_2_sep_400_sep_0($6810,$6826,$6827)) & (v_sep_array_max_1033_sep_344_sep_3_sep_379_sep_0($6810,$6825,$6811)) -> v_sep_check_1148_sep_383_sep_3_sep_386_sep_1_sep_402_sep_0($6810,$6808,$6811,$6826,$6827).
((-$6828<=0) & ($6828-$6829<0) & (-$6828+$6830=0)) & (v_sep_make_array_1030_sep_388_sep_1($6829,$6828)) -> v_sep_make_array_1030_sep_388_sep_2_sep_400_sep_0($6829,$6828,$6830).
(($6831=0) & ($6832=0)) & (v_sep_check_1148_sep_383_sep_3_sep_386_sep_0($6829,$6832,$6811,$6828)) & (v_sep_array_max_1033_sep_344_sep_3_sep_379_sep_0($6829,$6831,$6811)) -> v_sep_make_array_1030_sep_388_sep_1($6829,$6828).
(($6808-$6810<0) & (-$6808+$6826=0)) & (v_sep_check_1148_sep_383_sep_2($6810,$6808,$6811)) -> v_sep_check_1148_sep_383_sep_3_sep_386_sep_0($6810,$6808,$6811,$6826).
(($6808=0) & ($6833=0)) & (v_sep_array_max_1033_sep_344_sep_3_sep_379_sep_0($6810,$6833,$6811)) -> v_sep_check_1148_sep_383_sep_2($6810,$6808,$6811).
(($6834-$6835<=0) & ($6836-$6837<0) & (-$6836+$6838-1=0)) & (v_sep_array_max_1033_sep_367_sep_3_sep_370_sep_0($6837,$6838,$6835)) & (v_sep_array_max_1033_sep_344_sep_2_sep_347_sep_1_sep_363_sep_0($6837,$6836,$6836,$6834)) & (v_sep_array_max_1033_sep_344_sep_1($6837,$6836)) -> v_sep_array_max_1033_sep_344_sep_3_sep_379_sep_0($6837,$6836,$6835).
(($6839=0) & ($6840-$6841>=0)) & (v_sep_array_max_1033_sep_367_sep_1($6841,$6840)) -> v_sep_array_max_1033_sep_367_sep_3_sep_370_sep_0($6841,$6840,$6839).
(($6840-$6841-1<0) & (-$6840+$6842+1=0) & (-$6840+$6843+1=0) & (-$6840+$6844+1=0)) & (v_sep_array_max_1033_sep_344_sep_2_sep_347_sep_1_sep_363_sep_0($6841,$6843,$6844,$6845)) & (v_sep_array_max_1033_sep_344_sep_1($6841,$6842)) -> v_sep_array_max_1033_sep_367_sep_1($6841,$6840).
($6836=0) & (v_sep_array_max_1033_sep_344_sep_1($6837,$6836)) & (v_sep_make_array_1030_sep_349_sep_2_sep_361_sep_0($6837,$6846,$6847)) -> v_sep_array_max_1033_sep_344_sep_2_sep_347_sep_1_sep_363_sep_0($6837,$6836,$6846,$6847).
((-$6848<=0) & ($6848-$6849<0) & (-$6848+$6850=0)) & (v_sep_make_array_1030_sep_349_sep_1($6849,$6848)) -> v_sep_make_array_1030_sep_349_sep_2_sep_361_sep_0($6849,$6848,$6850).
($6851=0) & (v_sep_array_max_1033_sep_344_sep_2_sep_347_sep_0($6849,$6851,$6848)) -> v_sep_make_array_1030_sep_349_sep_1($6849,$6848).
(($6836-$6837<0) & (-$6836+$6846=0)) & (v_sep_array_max_1033_sep_344_sep_1($6837,$6836)) -> v_sep_array_max_1033_sep_344_sep_2_sep_347_sep_0($6837,$6836,$6846).
$6836=0 -> v_sep_array_max_1033_sep_344_sep_1($6837,$6836).

        solution:
          P[<array_max_1033@344:1>]($6976:int,$6978:int) = true
          P[<<array_max_1033@344:2>@347:0>]($6998:int,$7000:int,$7002:int) = true
          P[<<<array_max_1033@344:2>@347:1>@363:0>]($6967:int,$6969:int,$6971:int,$6973:int) = ($6969 <= 0)
          P[<<array_max_1033@344:3>@379:0>]($6909:int,$6911:int,$6913:int) = ($6909 <= 1)
          P[<array_max_1033@367:1>]($6981:int,$6983:int) = ($6983 <= 1)
          P[<<array_max_1033@367:3>@370:0>]($6960:int,$6962:int,$6964:int) = ((2 * $6960) <= (1 + $6962))
          P[<check_1148@383:2>]($6884:int,$6886:int,$6888:int) = ($6884 <= 1)
          P[<<check_1148@383:3>@386:0>]($6951:int,$6953:int,$6955:int,$6957:int) = ($6951 <= 1)
          P[<<<check_1148@383:3>@386:1>@402:0>]($6891:int,$6893:int,$6895:int,$6897:int,$6899:int) = ($6891 <= 1)
          P[<<check_1148@383:3>@418:0>]($6921:int,$6923:int,$6925:int,$6927:int) = ($6921 <= 1)
          P[<<<check_1148@383:3>@418:1>@434:0>]($6873:int,$6875:int,$6877:int,$6879:int,$6881:int) =
          ((13 * $6873) <= (13 + (28 * $6875)))
          P[<check_1148@409:2>]($6866:int,$6868:int,$6870:int) = ($6866 <= 1)
          P[<<check_1148@409:3>@412:0>]($6930:int,$6932:int,$6934:int,$6936:int) = ($6930 <= 1)
          P[<<<check_1148@409:3>@412:1>@440:0>]($6855:int,$6857:int,$6859:int,$6861:int,$6863:int) =
          ((5 + (23 * $6855)) <= (28 * $6857))
          P[<fail_1487@445:0>]($6852:bool) = false
          P[<make_array_1030@349:1>]($6993:int,$6995:int) = true
          P[<<make_array_1030@349:2>@361:0>]($6986:int,$6988:int,$6990:int) = true
          P[<make_array_1030@388:1>]($6946:int,$6948:int) = ($6946 <= 1)
          P[<<make_array_1030@388:2>@400:0>]($6939:int,$6941:int,$6943:int) = ($6939 <= 1)
          P[<make_array_1030@420:1>]($6916:int,$6918:int) = ($6916 <= 1)
          P[<<make_array_1030@420:2>@432:0>]($6902:int,$6904:int,$6906:int) = ($6902 <= 1)
        
      end HcSolver.solve_ub(932549)[4] (0.540918 sec.)
      begin HcSolver.check_validity(934370)[4]
        input:
          P[<fail_1487@445:0>](<fail_1487@445:0>:bool)|- bot
          
          P[<check_1148@409:2>](<f_check_1482@442:2>:int,<f_check_1482@442:0>:int,<f_check_1482@442:1>:int),
          P[<<<check_1148@409:3>@412:1>@440:0>](<f_check_1482@442:2>:int,<f_check_1482@442:0>:int,<f_check_1482@442:1>:int,<f_check_1482@442:0>:int,<f_check_1482@442:5>:int),
          ((<f_check_1482@442:5> > <f_check_1482@442:1>) &&
           ((<f_check_1482@442:0> < <f_check_1482@442:2>) && <fail_1487@445:0>))
          |- P[<fail_1487@445:0>](<fail_1487@445:0>:bool)
          
          P[<<<check_1148@383:3>@386:1>@402:0>](<check_1148@409:0>:int,(
                                                -1 + <check_1148@409:1>):int,<check_1148@409:2>:int,(
                                                -1 + <check_1148@409:1>):int,var1515:int),
          P[<check_1148@383:2>](<check_1148@409:0>:int,(-1 + <check_1148@409:1>):int,<check_1148@409:2>:int),
          P[<<<check_1148@383:3>@418:1>@434:0>](<check_1148@409:0>:int,(
                                                -1 + <check_1148@409:1>):int,<check_1148@409:2>:int,<<check_1148@409:3>@412:0>:int,<<<check_1148@409:3>@412:1>@440:0>:int),
          P[<check_1148@409:2>](<check_1148@409:0>:int,<check_1148@409:1>:int,<check_1148@409:2>:int),
          ((var1515 <= <check_1148@409:2>) && (<check_1148@409:1> < (1 + <check_1148@409:0>)))
          |- P[<<<check_1148@409:3>@412:1>@440:0>](<check_1148@409:0>:int,
                                                   <check_1148@409:1>:int,
                                                   <check_1148@409:2>:int,
                                                   <<check_1148@409:3>@412:0>:int,
                                                   <<<check_1148@409:3>@412:1>@440:0>:int)
          
          P[<<array_max_1033@344:3>@379:0>](<check_1148@383:0>:int,0:int,<check_1148@383:2>:int),
          P[<<make_array_1030@420:2>@432:0>](<check_1148@383:0>:int,<<check_1148@383:3>@418:0>:int,<<<check_1148@383:3>@418:1>@434:0>:int),
          P[<check_1148@383:2>](<check_1148@383:0>:int,<check_1148@383:1>:int,<check_1148@383:2>:int),
          (<check_1148@383:1> = 0)
          |- P[<<<check_1148@383:3>@418:1>@434:0>](<check_1148@383:0>:int,
                                                   <check_1148@383:1>:int,
                                                   <check_1148@383:2>:int,
                                                   <<check_1148@383:3>@418:0>:int,
                                                   <<<check_1148@383:3>@418:1>@434:0>:int)
          
          P[<make_array_1030@420:1>](<make_array_1030@420:0>:int,<make_array_1030@420:1>:int),
          ((0 <= <make_array_1030@420:1>) &&
           ((<make_array_1030@420:1> < <make_array_1030@420:0>) &&
            (<<make_array_1030@420:2>@432:0> = <make_array_1030@420:1>)))
          |- P[<<make_array_1030@420:2>@432:0>](<make_array_1030@420:0>:int,
                                                <make_array_1030@420:1>:int,
                                                <<make_array_1030@420:2>@432:0>:int)
          
          P[<<array_max_1033@344:3>@379:0>](<make_array_1030@420:0>:int,0:int,<check_1148@383:2>:int),
          P[<<check_1148@383:3>@418:0>](<make_array_1030@420:0>:int,0:int,<check_1148@383:2>:int,<make_array_1030@420:1>:int)|- P[<make_array_1030@420:1>](
          <make_array_1030@420:0>:int,<make_array_1030@420:1>:int)
          
          P[<<<check_1148@383:3>@386:1>@402:0>](<check_1148@383:0>:int,<check_1148@383:1>:int,<check_1148@383:2>:int,<check_1148@383:1>:int,var1516:int),
          P[<check_1148@383:2>](<check_1148@383:0>:int,<check_1148@383:1>:int,<check_1148@383:2>:int),
          P[<<check_1148@409:3>@412:0>](<check_1148@383:0>:int,(1 + <check_1148@383:1>):int,<check_1148@383:2>:int,<<check_1148@383:3>@418:0>:int),
          ((var1516 <= <check_1148@383:2>) && (<check_1148@383:1> < <check_1148@383:0>))
          |- P[<<check_1148@383:3>@418:0>](<check_1148@383:0>:int,<check_1148@383:1>:int,
                                           <check_1148@383:2>:int,<<check_1148@383:3>@418:0>:int)
          
          P[<check_1148@409:2>](<check_1148@409:0>:int,<check_1148@409:1>:int,<check_1148@409:2>:int),
          ((<check_1148@409:1> < <check_1148@409:0>) && (<<check_1148@409:3>@412:0> = <check_1148@409:1>))
          |- P[<<check_1148@409:3>@412:0>](<check_1148@409:0>:int,<check_1148@409:1>:int,
                                           <check_1148@409:2>:int,<<check_1148@409:3>@412:0>:int)
          
          P[<check_1148@383:2>](<check_1148@409:0>:int,(-1 + <check_1148@409:1>):int,<check_1148@409:2>:int),
          P[<<<check_1148@383:3>@386:1>@402:0>](<check_1148@409:0>:int,(
                                                -1 + <check_1148@409:1>):int,<check_1148@409:2>:int,(
                                                -1 + <check_1148@409:1>):int,var1517:int),
          ((var1517 <= <check_1148@409:2>) && (<check_1148@409:1> < (1 + <check_1148@409:0>)))
          |- P[<check_1148@409:2>](<check_1148@409:0>:int,<check_1148@409:1>:int,
                                   <check_1148@409:2>:int)
          
          P[<<array_max_1033@344:3>@379:0>](<check_1148@383:0>:int,0:int,<check_1148@383:2>:int),
          P[<<make_array_1030@388:2>@400:0>](<check_1148@383:0>:int,<<check_1148@383:3>@386:0>:int,<<<check_1148@383:3>@386:1>@402:0>:int),
          P[<check_1148@383:2>](<check_1148@383:0>:int,<check_1148@383:1>:int,<check_1148@383:2>:int),
          (<check_1148@383:1> = 0)
          |- P[<<<check_1148@383:3>@386:1>@402:0>](<check_1148@383:0>:int,
                                                   <check_1148@383:1>:int,
                                                   <check_1148@383:2>:int,
                                                   <<check_1148@383:3>@386:0>:int,
                                                   <<<check_1148@383:3>@386:1>@402:0>:int)
          
          P[<make_array_1030@388:1>](<make_array_1030@388:0>:int,<make_array_1030@388:1>:int),
          ((0 <= <make_array_1030@388:1>) &&
           ((<make_array_1030@388:1> < <make_array_1030@388:0>) &&
            (<<make_array_1030@388:2>@400:0> = <make_array_1030@388:1>)))
          |- P[<<make_array_1030@388:2>@400:0>](<make_array_1030@388:0>:int,
                                                <make_array_1030@388:1>:int,
                                                <<make_array_1030@388:2>@400:0>:int)
          
          P[<<array_max_1033@344:3>@379:0>](<make_array_1030@388:0>:int,0:int,<check_1148@383:2>:int),
          P[<<check_1148@383:3>@386:0>](<make_array_1030@388:0>:int,0:int,<check_1148@383:2>:int,<make_array_1030@388:1>:int)|- P[<make_array_1030@388:1>](
          <make_array_1030@388:0>:int,<make_array_1030@388:1>:int)
          
          P[<check_1148@383:2>](<check_1148@383:0>:int,<check_1148@383:1>:int,<check_1148@383:2>:int),
          ((<check_1148@383:1> < <check_1148@383:0>) && (<<check_1148@383:3>@386:0> = <check_1148@383:1>))
          |- P[<<check_1148@383:3>@386:0>](<check_1148@383:0>:int,<check_1148@383:1>:int,
                                           <check_1148@383:2>:int,<<check_1148@383:3>@386:0>:int)
          
          P[<<array_max_1033@344:3>@379:0>](<check_1148@383:0>:int,0:int,<check_1148@383:2>:int),
          (<check_1148@383:1> = 0)
          |- P[<check_1148@383:2>](<check_1148@383:0>:int,<check_1148@383:1>:int,
                                   <check_1148@383:2>:int)
          
          P[<array_max_1033@344:1>](<array_max_1033@344:0>:int,<array_max_1033@344:1>:int),
          P[<<<array_max_1033@344:2>@347:1>@363:0>](<array_max_1033@344:0>:int,<array_max_1033@344:1>:int,<array_max_1033@344:1>:int,var1518:int),
          P[<<array_max_1033@367:3>@370:0>](<array_max_1033@344:0>:int,(
                                            1 + <array_max_1033@344:1>):int,<<array_max_1033@344:3>@379:0>:int),
          ((var1518 <= <<array_max_1033@344:3>@379:0>) && (<array_max_1033@344:1> < <array_max_1033@344:0>))
          |- P[<<array_max_1033@344:3>@379:0>](<array_max_1033@344:0>:int,
                                               <array_max_1033@344:1>:int,
                                               <<array_max_1033@344:3>@379:0>:int)
          
          P[<array_max_1033@367:1>](<array_max_1033@367:0>:int,<array_max_1033@367:1>:int),
          ((<<array_max_1033@367:3>@370:0> = 0) && (<array_max_1033@367:1> >= <array_max_1033@367:0>))
          |- P[<<array_max_1033@367:3>@370:0>](<array_max_1033@367:0>:int,
                                               <array_max_1033@367:1>:int,
                                               <<array_max_1033@367:3>@370:0>:int)
          
          P[<array_max_1033@344:1>](<array_max_1033@367:0>:int,(-1 + <array_max_1033@367:1>):int),
          P[<<<array_max_1033@344:2>@347:1>@363:0>](<array_max_1033@367:0>:int,(
                                                    -1 + <array_max_1033@367:1>):int,(
                                                    -1 + <array_max_1033@367:1>):int,<f_array_max_1480@365:4>:int),
          (<array_max_1033@367:1> < (1 + <array_max_1033@367:0>))
          |- P[<array_max_1033@367:1>](<array_max_1033@367:0>:int,<array_max_1033@367:1>:int)
          
          P[<<make_array_1030@349:2>@361:0>](<array_max_1033@344:0>:int,<<array_max_1033@344:2>@347:0>:int,<<<array_max_1033@344:2>@347:1>@363:0>:int),
          P[<array_max_1033@344:1>](<array_max_1033@344:0>:int,<array_max_1033@344:1>:int),
          (<array_max_1033@344:1> = 0)
          |- P[<<<array_max_1033@344:2>@347:1>@363:0>](<array_max_1033@344:0>:int,
                                                       <array_max_1033@344:1>:int,
                                                       <<array_max_1033@344:2>@347:0>:int,
                                                       <<<array_max_1033@344:2>@347:1>@363:0>:int)
          
          P[<make_array_1030@349:1>](<make_array_1030@349:0>:int,<make_array_1030@349:1>:int),
          ((0 <= <make_array_1030@349:1>) &&
           ((<make_array_1030@349:1> < <make_array_1030@349:0>) &&
            (<<make_array_1030@349:2>@361:0> = <make_array_1030@349:1>)))
          |- P[<<make_array_1030@349:2>@361:0>](<make_array_1030@349:0>:int,
                                                <make_array_1030@349:1>:int,
                                                <<make_array_1030@349:2>@361:0>:int)
          
          P[<<array_max_1033@344:2>@347:0>](<make_array_1030@349:0>:int,0:int,<make_array_1030@349:1>:int)|- P[<make_array_1030@349:1>](
          <make_array_1030@349:0>:int,<make_array_1030@349:1>:int)
          
          P[<array_max_1033@344:1>](<array_max_1033@344:0>:int,<array_max_1033@344:1>:int),
          ((<array_max_1033@344:1> < <array_max_1033@344:0>) &&
           (<<array_max_1033@344:2>@347:0> = <array_max_1033@344:1>))
          |- P[<<array_max_1033@344:2>@347:0>](<array_max_1033@344:0>:int,
                                               <array_max_1033@344:1>:int,
                                               <<array_max_1033@344:2>@347:0>:int)
          
           (<array_max_1033@344:1> = 0)
          |- P[<array_max_1033@344:1>](<array_max_1033@344:0>:int,<array_max_1033@344:1>:int)
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        
      end HcSolver.check_validity(934370)[4] (75.427533 sec.)
      solution:
        P[<array_max_1033@344:1>]($6976:int,$6978:int) = true
        P[<<array_max_1033@344:2>@347:0>]($6998:int,$7000:int,$7002:int) = true
        P[<<<array_max_1033@344:2>@347:1>@363:0>]($6967:int,$6969:int,$6971:int,$6973:int) = ($6969 <= 0)
        P[<<array_max_1033@344:3>@379:0>]($6909:int,$6911:int,$6913:int) = ($6909 <= 1)
        P[<array_max_1033@367:1>]($6981:int,$6983:int) = ($6983 <= 1)
        P[<<array_max_1033@367:3>@370:0>]($6960:int,$6962:int,$6964:int) = ((2 * $6960) <= (1 + $6962))
        P[<check_1148@383:2>]($6884:int,$6886:int,$6888:int) = ($6884 <= 1)
        P[<<check_1148@383:3>@386:0>]($6951:int,$6953:int,$6955:int,$6957:int) = ($6951 <= 1)
        P[<<<check_1148@383:3>@386:1>@402:0>]($6891:int,$6893:int,$6895:int,$6897:int,$6899:int) = ($6891 <= 1)
        P[<<check_1148@383:3>@418:0>]($6921:int,$6923:int,$6925:int,$6927:int) = ($6921 <= 1)
        P[<<<check_1148@383:3>@418:1>@434:0>]($6873:int,$6875:int,$6877:int,$6879:int,$6881:int) =
        ((13 * $6873) <= (13 + (28 * $6875)))
        P[<check_1148@409:2>]($6866:int,$6868:int,$6870:int) = ($6866 <= 1)
        P[<<check_1148@409:3>@412:0>]($6930:int,$6932:int,$6934:int,$6936:int) = ($6930 <= 1)
        P[<<<check_1148@409:3>@412:1>@440:0>]($6855:int,$6857:int,$6859:int,$6861:int,$6863:int) =
        ((5 + (23 * $6855)) <= (28 * $6857))
        P[<fail_1487@445:0>]($6852:bool) = false
        P[<make_array_1030@349:1>]($6993:int,$6995:int) = true
        P[<<make_array_1030@349:2>@361:0>]($6986:int,$6988:int,$6990:int) = true
        P[<make_array_1030@388:1>]($6946:int,$6948:int) = ($6946 <= 1)
        P[<<make_array_1030@388:2>@400:0>]($6939:int,$6941:int,$6943:int) = ($6939 <= 1)
        P[<make_array_1030@420:1>]($6916:int,$6918:int) = ($6916 <= 1)
        P[<<make_array_1030@420:2>@432:0>]($6902:int,$6904:int,$6906:int) = ($6902 <= 1)
    end YhornInterface.solve(932548)[3] (75.969451 sec.)
    
  end RefTypeInfer.infer_etrs(664913)[2] (80.882705 sec.)
  refinement types:
    main_1479: X
    f_1484: v1:int -> X
    main_1044: v1:int -> (v2:unit -> X) -> X
    array_max_1033: v1:int ->
                    v2:{v2:int | (v2 <= 1)} ->
                    (v3:int -> (v4:{v4:int | (v2 <= 0)} -> X) -> X) -> (v7:{v7:int | (v1 <= 1)} -> X) -> X
    make_array_1030: v1:int -> v2:int -> (v3:int -> X) -> X
    k_make_array_u_1182: v1:int -> v2:int -> (v3:int -> X) -> v5:bool -> X
    k_make_array_u_1193: v1:int -> v2:int -> (v3:int -> X) -> v5:unit -> X
    f_array_max_1480: v1:int -> v2:int -> (v3:int -> (v4:int -> X) -> X) -> (v7:int -> X) -> v9:int -> X
    array_max_1033: v1:int ->
                    v2:{v2:int | (v2 <= 1)} -> (v3:int -> (v4:int -> X) -> X) -> (v7:{v7:int | (v1 <= 1)} -> X) -> X
    f_array_max_1481: v1:int -> v2:int -> v3:int -> (v4:int -> X) -> v6:int -> X
    f_main_1483: v1:int -> (v2:unit -> X) -> v4:int -> X
    check_1148: v1:int ->
                v2:int ->
                v3:{v3:int | (v1 <= (1 + v2))} ->
                (v4:int -> (v5:int -> X) -> X /\
                 v8:int -> (v9:int -> X) -> X) -> (v12:unit -> X) -> X
    make_array_1030: v1:int -> v2:int -> (v3:int -> X) -> X
    k_make_array_u_1182: v1:int -> v2:int -> (v3:int -> X) -> v5:bool -> X
    k_make_array_u_1193: v1:int -> v2:int -> (v3:int -> X) -> v5:unit -> X
    f_check_1482: v1:int -> v2:int -> v3:int -> (v4:int -> (v5:int -> X) -> X) -> (v8:unit -> X) -> v10:int -> X
    k_check_u_1336: v1:int -> v2:int -> v3:int -> (v4:int -> (v5:int -> X) -> X) -> (v8:unit -> X) -> v10:unit -> X
    check_1148: v1:int -> v2:int -> v3:{v3:int | (v1 <= v2)} -> (v4:int -> (v5:int -> X) -> X) -> (v8:unit -> X) -> X
    make_array_1030: v1:int -> v2:int -> (v3:int -> X) -> X
    k_make_array_u_1182: v1:int -> v2:int -> (v3:int -> X) -> v5:bool -> X
    k_make_array_u_1193: v1:int -> v2:int -> (v3:int -> X) -> v5:unit -> X
    f_check_1482: v1:int -> v2:int -> v3:int -> (v4:int -> (v5:int -> X) -> X) -> (v8:unit -> X) -> v10:int -> X
    fail_1487: v1:{v1:bool | false} -> (v2:unit -> X) -> X
    f_1485: var1849:int -> var1848:unit -> X
    fail_1486: var1853:bool -> (var1852:unit -> X) -> X
  abstraction types:
    main_1479: X
    f_1484: v1:int -> X
    main_1044: v1:int -> (v2:unit -> X) -> X
    array_max_1033: var1858:int ->
                    var1859:int[var1859 -> (var1859 <= 1)] ->
                    (var1860:int -> (var1861:int[var1861 -> (var1859 <= 0)] -> X) -> X) ->
                    (var1864:int[var1864 -> (var1858 <= 1)] -> X) -> X
    make_array_1030: var1872:int -> var1873:int -> (var1874:int -> X) -> X
    k_make_array_u_1182: var1883:int -> var1884:int -> (var1885:int -> X) -> var1887:bool -> X
    k_make_array_u_1193: var1895:int -> var1896:int -> (var1897:int -> X) -> var1899:unit -> X
    f_array_max_1480: v1:int -> v2:int -> (v3:int -> (v4:int -> X) -> X) -> (v7:int -> X) -> v9:int -> X
    f_array_max_1481: v1:int -> v2:int -> v3:int -> (v4:int -> X) -> v6:int -> X
    f_main_1483: v1:int -> (v2:unit -> X) -> v4:int -> X
    check_1148: var1901:int ->
                var1902:int ->
                var1903:int[var1903 -> (var1901 <= (1 + var1902)),
                            var1903 -> (var1901 <= var1902)] ->
                (var1904:int -> (var1905:int -> X) -> X) -> (var1908:unit -> X) -> X
    f_check_1482: var1911:int ->
                  var1912:int ->
                  var1913:int -> (var1914:int -> (var1915:int -> X) -> X) -> (var1918:unit -> X) -> var1920:int -> X
    k_check_u_1336: v1:int -> v2:int -> v3:int -> (v4:int -> (v5:int -> X) -> X) -> (v8:unit -> X) -> v10:unit -> X
    fail_1487: v1:bool -> (v2:unit -> X) -> X
    f_1485: var1849:int -> var1848:unit -> X
    fail_1486: var1853:bool -> (var1852:unit -> X) -> X
  
end AbsTypeInfer.refine(664912)[1] (80.891703 sec.)
DONE!

Prefix of spurious counter-example::
0; 0; 0; 1; 0; 0; 0; 0; 0; 1; 0; 1; 0; 0; 0; 0; 0; 1

Program with abstraction types (CEGAR-cycle 8)::
Main: main_1479
  main_1479 -> (rand_int f_1484)
  array_max_1033 n_1034 i_1035 a_1036 k_array_max_1226 when (i_1035 >= n_1034) -> (k_array_max_1226 0)
  array_max_1033 n_1034 i_1035 a_1036 k_array_max_1226 when (not (i_1035 >= n_1034)) ->
      (a_1036 i_1035 (f_array_max_1480 i_1035 n_1034 a_1036 k_array_max_1226))
  check_1148 n_1040 i_1041 max_1042 a_1043 k_check_1309 when (i_1041 >= n_1040) -> (k_check_1309 ())
  check_1148 n_1040 i_1041 max_1042 a_1043 k_check_1309 when (not (i_1041 >= n_1040)) ->
      (a_1043 i_1041 (f_check_1482 i_1041 max_1042 n_1040 a_1043 k_check_1309))
  f_1484 x_1454 -> (main_1044 x_1454 (f_1485 x_1454))
  f_1485 x_1454 x_1451 -> end
  f_array_max_1480 i_1035 n_1034 a_1036 k_array_max_1226 x_1229 ->
      (array_max_1033 n_1034 (i_1035 + 1) a_1036 (f_array_max_1481 i_1035 n_1034 x_1229 k_array_max_1226))
  f_array_max_1481 i_1035 n_1034 x_1229 k_array_max_1226 x_1242 when (x_1229 > x_1242) -> (k_array_max_1226 x_1229)
  f_array_max_1481 i_1035 n_1034 x_1229 k_array_max_1226 x_1242 when (
      not (x_1229 > x_1242)) -> (k_array_max_1226 x_1242)
  f_check_1482 i_1041 max_1042 n_1040 a_1043 k_check_1309 x_1315 when (
      x_1315 <= max_1042) -> (k_check_u_1336 i_1041 max_1042 n_1040 a_1043 k_check_1309 ())
  f_check_1482 i_1041 max_1042 n_1040 a_1043 k_check_1309 x_1315 when (
      not (x_1315 <= max_1042)) -> (fail_1487 true (k_check_u_1336 i_1041 max_1042 n_1040 a_1043 k_check_1309))
  f_main_1483 n_1045 k_main_1380 x_1399 -> (check_1148 n_1045 0 x_1399 (make_array_1030 n_1045) k_main_1380)
  fail_1486 b k -> {fail} => (k ())
  fail_1487 b k -> {fail} => (k ())
  k_check_u_1336 i_1041 max_1042 n_1040 a_1043 k_check_1309 x_1312 ->
      (check_1148 n_1040 (i_1041 + 1) max_1042 a_1043 k_check_1309)
  k_make_array_u_1182 i_1032 n_1031 k_make_array_1176 b_1194 when b_1194 ->
      (k_make_array_u_1193 i_1032 n_1031 k_make_array_1176 ())
  k_make_array_u_1182 i_1032 n_1031 k_make_array_1176 b_1194 when (not b_1194) ->
      (fail_1486 true (k_make_array_u_1193 i_1032 n_1031 k_make_array_1176))
  k_make_array_u_1193 i_1032 n_1031 k_make_array_1176 x_1179 -> (k_make_array_1176 i_1032)
  main_1044 n_1045 k_main_1380 -> (array_max_1033 n_1045 0 (make_array_1030 n_1045) (f_main_1483 n_1045 k_main_1380))
  make_array_1030 n_1031 i_1032 k_make_array_1176 when (0 <= i_1032) ->
      (k_make_array_u_1182 i_1032 n_1031 k_make_array_1176 (i_1032 < n_1031))
  make_array_1030 n_1031 i_1032 k_make_array_1176 when (not (0 <= i_1032)) ->
      (k_make_array_u_1182 i_1032 n_1031 k_make_array_1176 false)
Types:
  main_1479 : X
  array_max_1033 : (x_1:int ->
                    x_2:int[x_2 <= 1; x_2 <= 0; x_2 >= 0] ->
                    (x_4:int[x_2 >= x_4; x_1 >= x_4 + 1; x_4 >= 0] -> (x_6:int[x_2 <= 0; x_2 <= x_4 - x_6] -> X) -> X) ->
                    (x_10:int[x_1 <= 1; x_10 >= 0; x_2 >= 1; x_1 <= 0] -> X) -> X)
  check_1148 : (x_1:int ->
                x_2:int ->
                x_3:int[x_1 <= x_2 + 1; x_2 <= 0; x_2 >= 0; x_1 <= x_2] ->
                (x_5:int[x_5 <= 0; x_1 >= x_5 + 1; x_5 >= 0] -> (x_7:int[x_3 >= x_7] -> X) -> X) -> (unit -> X) -> X)
  fail_1486 : (x_1:bool[x_1] -> (unit -> X) -> X)
  fail_1487 : (x_1:bool[x_1] -> (unit -> X) -> X)
  make_array_1030 : (x_1:int ->
                     x_2:int[x_2 <= 0; x_1 >= x_2 + 1; x_2 >= 0] -> (x_4:int[x_4 <= 0; x_2 >= x_4] -> X) -> X)
  
(8-1) Abstracting ... DONE!

(8-2) Checking HORS ... DONE!

Error trace::
  main_1479 ... --> 
  f_1484 ... --> 
  main_1044 ... --> 
  array_max_1033 [2/2] ... --> 
  make_array_1030 [1/2] ... --> 
  k_make_array_u_1182 [1/2] ... --> 
  k_make_array_u_1193 ... --> 
  f_array_max_1480 ... --> 
  array_max_1033 [2/2] ... --> 
  make_array_1030 [1/2] ... --> 
  k_make_array_u_1182 [1/2] ... --> 
  k_make_array_u_1193 ... --> 
  f_array_max_1480 ... --> 
  array_max_1033 [1/2] ... --> 
  f_array_max_1481 [1/2] ... --> 
  f_array_max_1481 [2/2] ... --> 
  f_main_1483 ... --> 
  check_1148 [2/2] ... --> 
  make_array_1030 [1/2] ... --> 
  k_make_array_u_1182 [1/2] ... --> 
  k_make_array_u_1193 ... --> 
  f_check_1482 [1/2] ... --> 
  k_check_u_1336 ... --> 
  check_1148 [2/2] ... --> 
  make_array_1030 [1/2] ... --> 
  k_make_array_u_1182 [1/2] ... --> 
  k_make_array_u_1193 ... --> 
  f_check_1482 [2/2] ... --> 
  fail_1487 ... --> fail -->
  ERROR!

Spurious counter-example::
  0; 0; 0; 1; 0; 0; 0; 0; 1; 0; 0; 0; 0; 0; 0; 1; 0; 1; 0; 0; 0; 0; 0; 1; 0; 0; 0; 1; 0

(8-3) Checking counter-example ... DONE!

(8-4) Discovering predicates ... 
begin AbsTypeInfer.refine(970669)[1]
  program:
    main_1479  | true = ((Random.int 0) f_1484)
    array_max_1033 n_1034 i_1035 a_1036 k_array_max_1226 | (i_1035 >= n_1034) = (
    k_array_max_1226 0)
    array_max_1033 n_1034 i_1035 a_1036 k_array_max_1226 | (not (i_1035 >= n_1034)) = (
    a_1036 i_1035
           (f_array_max_1480 i_1035
                             n_1034
                             a_1036
                             k_array_max_1226))
    check_1148 n_1040 i_1041 max_1042 a_1043 k_check_1309 | (i_1041 >= n_1040) = (
    k_check_1309 ())
    check_1148 n_1040 i_1041 max_1042 a_1043 k_check_1309 | (not (i_1041 >= n_1040)) = (
    a_1043 i_1041
           (f_check_1482 i_1041
                         max_1042
                         n_1040
                         a_1043
                         k_check_1309))
    f_1484 x_1454 | true = (main_1044 x_1454
                                      (f_1485 x_1454))
    f_1485 x_1454 x_1451 | true = end
    f_array_max_1480 i_1035 n_1034 a_1036 k_array_max_1226 x_1229 | true = (
    array_max_1033 n_1034
                   (i_1035 + 1)
                   a_1036
                   (f_array_max_1481 i_1035
                                     n_1034
                                     x_1229
                                     k_array_max_1226))
    f_array_max_1481 i_1035 n_1034 x_1229 k_array_max_1226 x_1242 | (
    x_1229 > x_1242) = (k_array_max_1226 x_1229)
    f_array_max_1481 i_1035 n_1034 x_1229 k_array_max_1226 x_1242 | (
    not (x_1229 > x_1242)) = (k_array_max_1226 x_1242)
    f_check_1482 i_1041 max_1042 n_1040 a_1043 k_check_1309 x_1315 | (
    x_1315 <= max_1042) = (k_check_u_1336 i_1041
                                          max_1042
                                          n_1040
                                          a_1043
                                          k_check_1309
                                          ())
    f_check_1482 i_1041 max_1042 n_1040 a_1043 k_check_1309 x_1315 | (
    not (x_1315 <= max_1042)) = (fail_1487 true
                                           (k_check_u_1336 i_1041
                                                           max_1042
                                                           n_1040
                                                           a_1043
                                                           k_check_1309))
    f_main_1483 n_1045 k_main_1380 x_1399 | true = (check_1148 n_1045
                                                               0
                                                               x_1399
                                                               (make_array_1030 n_1045)
                                                               k_main_1380)
    fail_1486 b k | true = (fail ())
    fail_1487 b k | true = (fail ())
    k_check_u_1336 i_1041 max_1042 n_1040 a_1043 k_check_1309 x_1312 | true = (
    check_1148 n_1040
               (i_1041 + 1)
               max_1042
               a_1043
               k_check_1309)
    k_make_array_u_1182 i_1032 n_1031 k_make_array_1176 b_1194 | b_1194 = (
    k_make_array_u_1193 i_1032
                        n_1031
                        k_make_array_1176
                        ())
    k_make_array_u_1182 i_1032 n_1031 k_make_array_1176 b_1194 | (not b_1194) = (
    fail_1486 true
              (k_make_array_u_1193 i_1032
                                   n_1031
                                   k_make_array_1176))
    k_make_array_u_1193 i_1032 n_1031 k_make_array_1176 x_1179 | true = (
    k_make_array_1176 i_1032)
    main_1044 n_1045 k_main_1380 | true = (array_max_1033
                                             n_1045
                                             0
                                             (make_array_1030 n_1045)
                                             (f_main_1483 n_1045
                                                          k_main_1380))
    make_array_1030 n_1031 i_1032 k_make_array_1176 | (0 <= i_1032) = (
    k_make_array_u_1182 i_1032
                        n_1031
                        k_make_array_1176
                        (i_1032 < n_1031))
    make_array_1030 n_1031 i_1032 k_make_array_1176 | (not (0 <= i_1032)) = (
    k_make_array_u_1182 i_1032
                        n_1031
                        k_make_array_1176
                        false)
    main_1479:X
    array_max_1033:int -> int -> (int -> (int -> X) -> X) -> (int -> X) -> X
    check_1148:int -> int -> int -> (int -> (int -> X) -> X) -> (unit -> X) -> X
    f_1484:int -> X
    f_1485:int -> unit -> X
    f_array_max_1480:int -> int -> (int -> (int -> X) -> X) -> (int -> X) -> int -> X
    f_array_max_1481:int -> int -> int -> (int -> X) -> int -> X
    f_check_1482:int -> int -> int -> (int -> (int -> X) -> X) -> (unit -> X) -> int -> X
    f_main_1483:int -> (unit -> X) -> int -> X
    fail_1486:bool -> (unit -> X) -> X
    fail_1487:bool -> (unit -> X) -> X
    k_check_u_1336:int -> int -> int -> (int -> (int -> X) -> X) -> (unit -> X) -> unit -> X
    k_make_array_u_1182:int -> int -> (int -> X) -> bool -> X
    k_make_array_u_1193:int -> int -> (int -> X) -> unit -> X
    main_1044:int -> (unit -> X) -> X
    make_array_1030:int -> int -> (int -> X) -> X
  inlined functions: f_1484,f_1485,f_array_max_1480,f_array_max_1481,f_check_1482,f_main_1483,k_check_u_1336,k_make_array_u_1182,k_make_array_u_1193,main_1044
  counterexample: 0:0:0:1:0:0:0:0:1:0:0:0:0:0:0:1:0:1:0:0:0:0:0:1:0:0:0:1:0
  error traces:
    [true.nop(<f_1484@451:0> = var1922)
     [true.(<main_1044@453:0> = <f_1484@451:0>)
      [true.((<array_max_1033@455:0> = <main_1044@453:0>) && (<array_max_1033@455:1> = 0))
       [(not (<array_max_1033@455:1> >= <array_max_1033@455:0>)).
        (<<array_max_1033@455:2>@458:0> = <array_max_1033@455:1>)
        [true.
         ((<make_array_1030@460:0> = <main_1044@453:0>) && (<make_array_1030@460:1> = <<array_max_1033@455:2>@458:0>))
         [(0 <= <make_array_1030@460:1>).
          ((<k_make_array_u_1182@463:0> = <make_array_1030@460:1>) &&
           ((<k_make_array_u_1182@463:1> = <make_array_1030@460:0>) &&
            (<k_make_array_u_1182@463:3> = (<make_array_1030@460:1> < <make_array_1030@460:0>))))
          [<k_make_array_u_1182@463:3>.
           ((<k_make_array_u_1193@466:0> = <k_make_array_u_1182@463:0>) &&
            ((<k_make_array_u_1193@466:1> = <k_make_array_u_1182@463:1>) && (<k_make_array_u_1193@466:3> = ())))
           [true.(<<k_make_array_u_1193@466:2>@468:0> = <k_make_array_u_1193@466:0>)
            [true.(<<k_make_array_u_1182@463:2>@470:0> = <<k_make_array_u_1193@466:2>@468:0>)
             [true.(<<make_array_1030@460:2>@472:0> = <<k_make_array_u_1182@463:2>@470:0>)
              [true.(<<<array_max_1033@455:2>@458:1>@474:0> = <<make_array_1030@460:2>@472:0>)
               [true.
                ((<f_array_max_1480@476:0> = <array_max_1033@455:1>) &&
                 ((<f_array_max_1480@476:1> = <array_max_1033@455:0>) &&
                  (<f_array_max_1480@476:4> = <<<array_max_1033@455:2>@458:1>@474:0>)))
                [true.
                 ((<array_max_1033@478:0> = <f_array_max_1480@476:1>) &&
                  (<array_max_1033@478:1> = (<f_array_max_1480@476:0> + 1)))
                 [(not (<array_max_1033@478:1> >= <array_max_1033@478:0>)).
                  (<<array_max_1033@478:2>@481:0> = <array_max_1033@478:1>)
                  [true.(<<f_array_max_1480@476:2>@483:0> = <<array_max_1033@478:2>@481:0>)
                   [true.(<<array_max_1033@455:2>@485:0> = <<f_array_max_1480@476:2>@483:0>)
                    [true.
                     ((<make_array_1030@487:0> = <main_1044@453:0>) &&
                      (<make_array_1030@487:1> = <<array_max_1033@455:2>@485:0>))
                     [(0 <= <make_array_1030@487:1>).
                      ((<k_make_array_u_1182@490:0> = <make_array_1030@487:1>) &&
                       ((<k_make_array_u_1182@490:1> = <make_array_1030@487:0>) &&
                        (<k_make_array_u_1182@490:3> = (<make_array_1030@487:1> < <make_array_1030@487:0>))))
                      [<k_make_array_u_1182@490:3>.
                       ((<k_make_array_u_1193@493:0> = <k_make_array_u_1182@490:0>) &&
                        ((<k_make_array_u_1193@493:1> = <k_make_array_u_1182@490:1>) &&
                         (<k_make_array_u_1193@493:3> = ())))
                       [true.(<<k_make_array_u_1193@493:2>@495:0> = <k_make_array_u_1193@493:0>)
                        [true.(<<k_make_array_u_1182@490:2>@497:0> = <<k_make_array_u_1193@493:2>@495:0>)
                         [true.(<<make_array_1030@487:2>@499:0> = <<k_make_array_u_1182@490:2>@497:0>)
                          [true.(<<<array_max_1033@455:2>@485:1>@501:0> = <<make_array_1030@487:2>@499:0>)
                           [true.(<<<f_array_max_1480@476:2>@483:1>@503:0> = <<<array_max_1033@455:2>@485:1>@501:0>)
                            [true.(<<<array_max_1033@478:2>@481:1>@505:0> = <<<f_array_max_1480@476:2>@483:1>@503:0>)
                             [true.
                              ((<f_array_max_1480@507:0> = <array_max_1033@478:1>) &&
                               ((<f_array_max_1480@507:1> = <array_max_1033@478:0>) &&
                                (<f_array_max_1480@507:4> = <<<array_max_1033@478:2>@481:1>@505:0>)))
                              [true.
                               ((<array_max_1033@509:0> = <f_array_max_1480@507:1>) &&
                                (<array_max_1033@509:1> = (<f_array_max_1480@507:0> + 1)))
                               [(<array_max_1033@509:1> >= <array_max_1033@509:0>).(
                                <<array_max_1033@509:3>@512:0> = 0)
                                [true.
                                 ((<f_array_max_1481@514:0> = <f_array_max_1480@507:0>) &&
                                  ((<f_array_max_1481@514:1> = <f_array_max_1480@507:1>) &&
                                   ((<f_array_max_1481@514:2> = <f_array_max_1480@507:4>) &&
                                    (<f_array_max_1481@514:4> = <<array_max_1033@509:3>@512:0>))))
                                 [(<f_array_max_1481@514:2> > <f_array_max_1481@514:4>).
                                  (<<f_array_max_1481@514:3>@517:0> = <f_array_max_1481@514:2>)
                                  [true.(<<f_array_max_1480@507:3>@519:0> = <<f_array_max_1481@514:3>@517:0>)
                                   [true.(<<array_max_1033@478:3>@521:0> = <<f_array_max_1480@507:3>@519:0>)
                                    [true.
                                     ((<f_array_max_1481@523:0> = <f_array_max_1480@476:0>) &&
                                      ((<f_array_max_1481@523:1> = <f_array_max_1480@476:1>) &&
                                       ((<f_array_max_1481@523:2> = <f_array_max_1480@476:4>) &&
                                        (<f_array_max_1481@523:4> = <<array_max_1033@478:3>@521:0>))))
                                     [(not (<f_array_max_1481@523:2> > <f_array_max_1481@523:4>)).
                                      (<<f_array_max_1481@523:3>@526:0> = <f_array_max_1481@523:4>)
                                      [true.(<<f_array_max_1480@476:3>@528:0> = <<f_array_max_1481@523:3>@526:0>)
                                       [true.(<<array_max_1033@455:3>@530:0> = <<f_array_max_1480@476:3>@528:0>)
                                        [true.
                                         ((<f_main_1483@532:0> = <main_1044@453:0>) &&
                                          (<f_main_1483@532:2> = <<array_max_1033@455:3>@530:0>))
                                         [true.
                                          ((<check_1148@534:0> = <f_main_1483@532:0>) &&
                                           ((<check_1148@534:1> = 0) && (<check_1148@534:2> = <f_main_1483@532:2>)))
                                          [(not (<check_1148@534:1> >= <check_1148@534:0>)).
                                           (<<check_1148@534:3>@537:0> = <check_1148@534:1>)
                                           [true.
                                            ((<make_array_1030@539:0> = <f_main_1483@532:0>) &&
                                             (<make_array_1030@539:1> = <<check_1148@534:3>@537:0>))
                                            [(0 <= <make_array_1030@539:1>).
                                             ((<k_make_array_u_1182@542:0> = <make_array_1030@539:1>) &&
                                              ((<k_make_array_u_1182@542:1> = <make_array_1030@539:0>) &&
                                               (<k_make_array_u_1182@542:3> =
                                                (<make_array_1030@539:1> < <make_array_1030@539:0>))))
                                             [<k_make_array_u_1182@542:3>.
                                              ((<k_make_array_u_1193@545:0> = <k_make_array_u_1182@542:0>) &&
                                               ((<k_make_array_u_1193@545:1> = <k_make_array_u_1182@542:1>) &&
                                                (<k_make_array_u_1193@545:3> = ())))
                                              [true.(<<k_make_array_u_1193@545:2>@547:0> = <k_make_array_u_1193@545:0>)
                                               [true.
                                                (<<k_make_array_u_1182@542:2>@549:0> =
                                                 <<k_make_array_u_1193@545:2>@547:0>)
                                                [true.
                                                 (<<make_array_1030@539:2>@551:0> = <<k_make_array_u_1182@542:2>@549:0>)
                                                 [true.
                                                  (<<<check_1148@534:3>@537:1>@553:0> = <<make_array_1030@539:2>@551:0>)
                                                  [true.
                                                   ((<f_check_1482@555:0> = <check_1148@534:1>) &&
                                                    ((<f_check_1482@555:1> = <check_1148@534:2>) &&
                                                     ((<f_check_1482@555:2> = <check_1148@534:0>) &&
                                                      (<f_check_1482@555:5> = <<<check_1148@534:3>@537:1>@553:0>))))
                                                   [(<f_check_1482@555:5> <= <f_check_1482@555:1>).
                                                    ((<k_check_u_1336@558:0> = <f_check_1482@555:0>) &&
                                                     ((<k_check_u_1336@558:1> = <f_check_1482@555:1>) &&
                                                      ((<k_check_u_1336@558:2> = <f_check_1482@555:2>) &&
                                                       (<k_check_u_1336@558:5> = ()))))
                                                    [true.
                                                     ((<check_1148@560:0> = <k_check_u_1336@558:2>) &&
                                                      ((<check_1148@560:1> = (<k_check_u_1336@558:0> + 1)) &&
                                                       (<check_1148@560:2> = <k_check_u_1336@558:1>)))
                                                     [(not (<check_1148@560:1> >= <check_1148@560:0>)).
                                                      (<<check_1148@560:3>@563:0> = <check_1148@560:1>)
                                                      [true.
                                                       (<<k_check_u_1336@558:3>@565:0> = <<check_1148@560:3>@563:0>)
                                                       [true.
                                                        (<<f_check_1482@555:3>@567:0> = <<k_check_u_1336@558:3>@565:0>)
                                                        [true.
                                                         (<<check_1148@534:3>@569:0> = <<f_check_1482@555:3>@567:0>)
                                                         [true.
                                                          ((<make_array_1030@571:0> = <f_main_1483@532:0>) &&
                                                           (<make_array_1030@571:1> = <<check_1148@534:3>@569:0>))
                                                          [(0 <= <make_array_1030@571:1>).
                                                           ((<k_make_array_u_1182@574:0> = <make_array_1030@571:1>) &&
                                                            ((<k_make_array_u_1182@574:1> = <make_array_1030@571:0>) &&
                                                             (<k_make_array_u_1182@574:3> =
                                                              (<make_array_1030@571:1> < <make_array_1030@571:0>))))
                                                           [<k_make_array_u_1182@574:3>.
                                                            ((<k_make_array_u_1193@577:0> = <k_make_array_u_1182@574:0>) &&
                                                             ((<k_make_array_u_1193@577:1> =
                                                               <k_make_array_u_1182@574:1>) &&
                                                              (<k_make_array_u_1193@577:3> = ())))
                                                            [true.
                                                             (<<k_make_array_u_1193@577:2>@579:0> =
                                                              <k_make_array_u_1193@577:0>)
                                                             [true.
                                                              (<<k_make_array_u_1182@574:2>@581:0> =
                                                               <<k_make_array_u_1193@577:2>@579:0>)
                                                              [true.
                                                               (<<make_array_1030@571:2>@583:0> =
                                                                <<k_make_array_u_1182@574:2>@581:0>)
                                                               [true.
                                                                (<<<check_1148@534:3>@569:1>@585:0> =
                                                                 <<make_array_1030@571:2>@583:0>)
                                                                [true.
                                                                 (<<<f_check_1482@555:3>@567:1>@587:0> =
                                                                  <<<check_1148@534:3>@569:1>@585:0>)
                                                                 [true.
                                                                  (<<<k_check_u_1336@558:3>@565:1>@589:0> =
                                                                   <<<f_check_1482@555:3>@567:1>@587:0>)
                                                                  [true.
                                                                   (<<<check_1148@560:3>@563:1>@591:0> =
                                                                    <<<k_check_u_1336@558:3>@565:1>@589:0>)
                                                                   [true.
                                                                    (
                                                                    (
                                                                    <f_check_1482@593:0> = <check_1148@560:1>) &&
                                                                    (
                                                                    (
                                                                    <f_check_1482@593:1> = <check_1148@560:2>) &&
                                                                    (
                                                                    (
                                                                    <f_check_1482@593:2> = <check_1148@560:0>) &&
                                                                    (
                                                                    <f_check_1482@593:5> =
                                                                    <<<check_1148@560:3>@563:1>@591:0>))))
                                                                    [
                                                                    (
                                                                    not (
                                                                    <f_check_1482@593:5> <= <f_check_1482@593:1>)).
                                                                    (
                                                                    <fail_1487@596:0> = true)[
                                                                    true.error
  begin RefTypeInfer.infer_etrs(970670)[2]
    horn clauses:
      P[<fail_1487@596:0>](<fail_1487@596:0>:bool)|- bot
      
      P[<f_check_1482@593:5>](<f_check_1482@593:0>:int,<f_check_1482@593:1>:int,<f_check_1482@593:2>:int,<f_check_1482@593:5>:int),
      ((<f_check_1482@593:5> > <f_check_1482@593:1>) && <fail_1487@596:0>)
      |- P[<fail_1487@596:0>](<fail_1487@596:0>:bool)
      
      P[<check_1148@560:2>](<f_check_1482@593:2>:int,<f_check_1482@593:0>:int,<f_check_1482@593:1>:int),
      P[<<<check_1148@560:3>@563:1>@591:0>](<f_check_1482@593:2>:int,<f_check_1482@593:0>:int,<f_check_1482@593:1>:int,<f_check_1482@593:0>:int,<f_check_1482@593:5>:int),
      (<f_check_1482@593:0> < <f_check_1482@593:2>)
      |- P[<f_check_1482@593:5>](<f_check_1482@593:0>:int,<f_check_1482@593:1>:int,
                                 <f_check_1482@593:2>:int,<f_check_1482@593:5>:int)
      
      P[<k_check_u_1336@558:5>]((-1 + <check_1148@560:1>):int,<check_1148@560:2>:int,<check_1148@560:0>:int,<k_check_u_1336@558:5>:unit),
      P[<<<k_check_u_1336@558:3>@565:1>@589:0>]((-1 + <check_1148@560:1>):int,<check_1148@560:2>:int,<check_1148@560:0>:int,<<check_1148@560:3>@563:0>:int,<<<check_1148@560:3>@563:1>@591:0>:int),
      P[<check_1148@560:2>](<check_1148@560:0>:int,<check_1148@560:1>:int,<check_1148@560:2>:int)|- P[<<<check_1148@560:3>@563:1>@591:0>](
      <check_1148@560:0>:int,<check_1148@560:1>:int,<check_1148@560:2>:int,
      <<check_1148@560:3>@563:0>:int,<<<check_1148@560:3>@563:1>@591:0>:int)
      
      P[<f_check_1482@555:5>](<k_check_u_1336@558:0>:int,<k_check_u_1336@558:1>:int,<k_check_u_1336@558:2>:int,<f_check_1482@555:5>:int),
      P[<<<f_check_1482@555:3>@567:1>@587:0>](<k_check_u_1336@558:0>:int,<k_check_u_1336@558:1>:int,<k_check_u_1336@558:2>:int,<<k_check_u_1336@558:3>@565:0>:int,<<<k_check_u_1336@558:3>@565:1>@589:0>:int),
      (<f_check_1482@555:5> <= <k_check_u_1336@558:1>)
      |- P[<<<k_check_u_1336@558:3>@565:1>@589:0>](<k_check_u_1336@558:0>:int,
                                                   <k_check_u_1336@558:1>:int,
                                                   <k_check_u_1336@558:2>:int,
                                                   <<k_check_u_1336@558:3>@565:0>:int,
                                                   <<<k_check_u_1336@558:3>@565:1>@589:0>:int)
      
      P[<check_1148@534:2>](<f_check_1482@555:2>:int,<f_check_1482@555:0>:int,<f_check_1482@555:1>:int),
      P[<<<check_1148@534:3>@569:1>@585:0>](<f_check_1482@555:2>:int,<f_check_1482@555:0>:int,<f_check_1482@555:1>:int,<<f_check_1482@555:3>@567:0>:int,<<<f_check_1482@555:3>@567:1>@587:0>:int),
      (<f_check_1482@555:0> < <f_check_1482@555:2>)
      |- P[<<<f_check_1482@555:3>@567:1>@587:0>](<f_check_1482@555:0>:int,
                                                 <f_check_1482@555:1>:int,
                                                 <f_check_1482@555:2>:int,
                                                 <<f_check_1482@555:3>@567:0>:int,
                                                 <<<f_check_1482@555:3>@567:1>@587:0>:int)
      
      P[<f_main_1483@532:2>](<check_1148@534:0>:int,<check_1148@534:2>:int),
      P[<<make_array_1030@571:2>@583:0>](<check_1148@534:0>:int,<<check_1148@534:3>@569:0>:int,<<<check_1148@534:3>@569:1>@585:0>:int),
      P[<check_1148@534:2>](<check_1148@534:0>:int,<check_1148@534:1>:int,<check_1148@534:2>:int),
      (<check_1148@534:1> = 0)
      |- P[<<<check_1148@534:3>@569:1>@585:0>](<check_1148@534:0>:int,
                                               <check_1148@534:1>:int,
                                               <check_1148@534:2>:int,
                                               <<check_1148@534:3>@569:0>:int,
                                               <<<check_1148@534:3>@569:1>@585:0>:int)
      
      P[<make_array_1030@571:1>](<make_array_1030@571:0>:int,<make_array_1030@571:1>:int),
      P[<<k_make_array_u_1182@574:2>@581:0>](<make_array_1030@571:1>:int,<make_array_1030@571:0>:int,<<make_array_1030@571:2>@583:0>:int),
      (0 <= <make_array_1030@571:1>)
      |- P[<<make_array_1030@571:2>@583:0>](<make_array_1030@571:0>:int,
                                            <make_array_1030@571:1>:int,
                                            <<make_array_1030@571:2>@583:0>:int)
      
      P[<k_make_array_u_1182@574:3>](<k_make_array_u_1182@574:0>:int,<k_make_array_u_1182@574:1>:int,true:bool),
      P[<<k_make_array_u_1193@577:2>@579:0>](<k_make_array_u_1182@574:0>:int,<k_make_array_u_1182@574:1>:int,<<k_make_array_u_1182@574:2>@581:0>:int)|- P[<<k_make_array_u_1182@574:2>@581:0>](
      <k_make_array_u_1182@574:0>:int,<k_make_array_u_1182@574:1>:int,
      <<k_make_array_u_1182@574:2>@581:0>:int)
      
      P[<k_make_array_u_1193@577:3>](<k_make_array_u_1193@577:0>:int,<k_make_array_u_1193@577:1>:int,<k_make_array_u_1193@577:3>:unit),
      (<<k_make_array_u_1193@577:2>@579:0> = <k_make_array_u_1193@577:0>)
      |- P[<<k_make_array_u_1193@577:2>@579:0>](<k_make_array_u_1193@577:0>:int,
                                                <k_make_array_u_1193@577:1>:int,
                                                <<k_make_array_u_1193@577:2>@579:0>:int)
      
      P[<k_make_array_u_1182@574:3>](<k_make_array_u_1193@577:0>:int,<k_make_array_u_1193@577:1>:int,true:bool)|- P[<k_make_array_u_1193@577:3>](
      <k_make_array_u_1193@577:0>:int,<k_make_array_u_1193@577:1>:int,
      <k_make_array_u_1193@577:3>:unit)
      
      P[<make_array_1030@571:1>](<k_make_array_u_1182@574:1>:int,<k_make_array_u_1182@574:0>:int),
      ((0 <= <k_make_array_u_1182@574:0>) &&
       (<k_make_array_u_1182@574:3> = (<k_make_array_u_1182@574:0> < <k_make_array_u_1182@574:1>)))
      |- P[<k_make_array_u_1182@574:3>](<k_make_array_u_1182@574:0>:int,
                                        <k_make_array_u_1182@574:1>:int,
                                        <k_make_array_u_1182@574:3>:bool)
      
      P[<f_main_1483@532:2>](<make_array_1030@571:0>:int,<check_1148@534:2>:int),
      P[<<check_1148@534:3>@569:0>](<make_array_1030@571:0>:int,0:int,<check_1148@534:2>:int,<make_array_1030@571:1>:int)|- P[<make_array_1030@571:1>](
      <make_array_1030@571:0>:int,<make_array_1030@571:1>:int)
      
      P[<check_1148@534:2>](<check_1148@534:0>:int,<check_1148@534:1>:int,<check_1148@534:2>:int),
      P[<<f_check_1482@555:3>@567:0>](<check_1148@534:1>:int,<check_1148@534:2>:int,<check_1148@534:0>:int,<<check_1148@534:3>@569:0>:int),
      (<check_1148@534:1> < <check_1148@534:0>)
      |- P[<<check_1148@534:3>@569:0>](<check_1148@534:0>:int,<check_1148@534:1>:int,
                                       <check_1148@534:2>:int,<<check_1148@534:3>@569:0>:int)
      
      P[<f_check_1482@555:5>](<f_check_1482@555:0>:int,<f_check_1482@555:1>:int,<f_check_1482@555:2>:int,<f_check_1482@555:5>:int),
      P[<<k_check_u_1336@558:3>@565:0>](<f_check_1482@555:0>:int,<f_check_1482@555:1>:int,<f_check_1482@555:2>:int,<<f_check_1482@555:3>@567:0>:int),
      (<f_check_1482@555:5> <= <f_check_1482@555:1>)
      |- P[<<f_check_1482@555:3>@567:0>](<f_check_1482@555:0>:int,<f_check_1482@555:1>:int,
                                         <f_check_1482@555:2>:int,<<f_check_1482@555:3>@567:0>:int)
      
      P[<k_check_u_1336@558:5>](<k_check_u_1336@558:0>:int,<k_check_u_1336@558:1>:int,<k_check_u_1336@558:2>:int,<k_check_u_1336@558:5>:unit),
      P[<<check_1148@560:3>@563:0>](<k_check_u_1336@558:2>:int,(1 + <k_check_u_1336@558:0>):int,<k_check_u_1336@558:1>:int,<<k_check_u_1336@558:3>@565:0>:int)|- P[<<k_check_u_1336@558:3>@565:0>](
      <k_check_u_1336@558:0>:int,<k_check_u_1336@558:1>:int,<k_check_u_1336@558:2>:int,
      <<k_check_u_1336@558:3>@565:0>:int)
      
      P[<check_1148@560:2>](<check_1148@560:0>:int,<check_1148@560:1>:int,<check_1148@560:2>:int),
      ((<check_1148@560:1> < <check_1148@560:0>) && (<<check_1148@560:3>@563:0> = <check_1148@560:1>))
      |- P[<<check_1148@560:3>@563:0>](<check_1148@560:0>:int,<check_1148@560:1>:int,
                                       <check_1148@560:2>:int,<<check_1148@560:3>@563:0>:int)
      
      P[<k_check_u_1336@558:5>]((-1 + <check_1148@560:1>):int,<check_1148@560:2>:int,<check_1148@560:0>:int,<k_check_u_1336@558:5>:unit)|- P[<check_1148@560:2>](
      <check_1148@560:0>:int,<check_1148@560:1>:int,<check_1148@560:2>:int)
      
      P[<f_check_1482@555:5>](<k_check_u_1336@558:0>:int,<k_check_u_1336@558:1>:int,<k_check_u_1336@558:2>:int,<f_check_1482@555:5>:int),
      (<f_check_1482@555:5> <= <k_check_u_1336@558:1>)
      |- P[<k_check_u_1336@558:5>](<k_check_u_1336@558:0>:int,<k_check_u_1336@558:1>:int,
                                   <k_check_u_1336@558:2>:int,<k_check_u_1336@558:5>:unit)
      
      P[<check_1148@534:2>](<f_check_1482@555:2>:int,<f_check_1482@555:0>:int,<f_check_1482@555:1>:int),
      P[<<<check_1148@534:3>@537:1>@553:0>](<f_check_1482@555:2>:int,<f_check_1482@555:0>:int,<f_check_1482@555:1>:int,<f_check_1482@555:0>:int,<f_check_1482@555:5>:int),
      (<f_check_1482@555:0> < <f_check_1482@555:2>)
      |- P[<f_check_1482@555:5>](<f_check_1482@555:0>:int,<f_check_1482@555:1>:int,
                                 <f_check_1482@555:2>:int,<f_check_1482@555:5>:int)
      
      P[<f_main_1483@532:2>](<check_1148@534:0>:int,<check_1148@534:2>:int),
      P[<<make_array_1030@539:2>@551:0>](<check_1148@534:0>:int,<<check_1148@534:3>@537:0>:int,<<<check_1148@534:3>@537:1>@553:0>:int),
      P[<check_1148@534:2>](<check_1148@534:0>:int,<check_1148@534:1>:int,<check_1148@534:2>:int),
      (<check_1148@534:1> = 0)
      |- P[<<<check_1148@534:3>@537:1>@553:0>](<check_1148@534:0>:int,
                                               <check_1148@534:1>:int,
                                               <check_1148@534:2>:int,
                                               <<check_1148@534:3>@537:0>:int,
                                               <<<check_1148@534:3>@537:1>@553:0>:int)
      
      P[<make_array_1030@539:1>](<make_array_1030@539:0>:int,<make_array_1030@539:1>:int),
      P[<<k_make_array_u_1182@542:2>@549:0>](<make_array_1030@539:1>:int,<make_array_1030@539:0>:int,<<make_array_1030@539:2>@551:0>:int),
      (0 <= <make_array_1030@539:1>)
      |- P[<<make_array_1030@539:2>@551:0>](<make_array_1030@539:0>:int,
                                            <make_array_1030@539:1>:int,
                                            <<make_array_1030@539:2>@551:0>:int)
      
      P[<k_make_array_u_1182@542:3>](<k_make_array_u_1182@542:0>:int,<k_make_array_u_1182@542:1>:int,true:bool),
      P[<<k_make_array_u_1193@545:2>@547:0>](<k_make_array_u_1182@542:0>:int,<k_make_array_u_1182@542:1>:int,<<k_make_array_u_1182@542:2>@549:0>:int)|- P[<<k_make_array_u_1182@542:2>@549:0>](
      <k_make_array_u_1182@542:0>:int,<k_make_array_u_1182@542:1>:int,
      <<k_make_array_u_1182@542:2>@549:0>:int)
      
      P[<k_make_array_u_1193@545:3>](<k_make_array_u_1193@545:0>:int,<k_make_array_u_1193@545:1>:int,<k_make_array_u_1193@545:3>:unit),
      (<<k_make_array_u_1193@545:2>@547:0> = <k_make_array_u_1193@545:0>)
      |- P[<<k_make_array_u_1193@545:2>@547:0>](<k_make_array_u_1193@545:0>:int,
                                                <k_make_array_u_1193@545:1>:int,
                                                <<k_make_array_u_1193@545:2>@547:0>:int)
      
      P[<k_make_array_u_1182@542:3>](<k_make_array_u_1193@545:0>:int,<k_make_array_u_1193@545:1>:int,true:bool)|- P[<k_make_array_u_1193@545:3>](
      <k_make_array_u_1193@545:0>:int,<k_make_array_u_1193@545:1>:int,
      <k_make_array_u_1193@545:3>:unit)
      
      P[<make_array_1030@539:1>](<k_make_array_u_1182@542:1>:int,<k_make_array_u_1182@542:0>:int),
      ((0 <= <k_make_array_u_1182@542:0>) &&
       (<k_make_array_u_1182@542:3> = (<k_make_array_u_1182@542:0> < <k_make_array_u_1182@542:1>)))
      |- P[<k_make_array_u_1182@542:3>](<k_make_array_u_1182@542:0>:int,
                                        <k_make_array_u_1182@542:1>:int,
                                        <k_make_array_u_1182@542:3>:bool)
      
      P[<f_main_1483@532:2>](<make_array_1030@539:0>:int,<check_1148@534:2>:int),
      P[<<check_1148@534:3>@537:0>](<make_array_1030@539:0>:int,0:int,<check_1148@534:2>:int,<make_array_1030@539:1>:int)|- P[<make_array_1030@539:1>](
      <make_array_1030@539:0>:int,<make_array_1030@539:1>:int)
      
      P[<check_1148@534:2>](<check_1148@534:0>:int,<check_1148@534:1>:int,<check_1148@534:2>:int),
      ((<check_1148@534:1> < <check_1148@534:0>) && (<<check_1148@534:3>@537:0> = <check_1148@534:1>))
      |- P[<<check_1148@534:3>@537:0>](<check_1148@534:0>:int,<check_1148@534:1>:int,
                                       <check_1148@534:2>:int,<<check_1148@534:3>@537:0>:int)
      
      P[<f_main_1483@532:2>](<check_1148@534:0>:int,<check_1148@534:2>:int), (
      <check_1148@534:1> = 0)
      |- P[<check_1148@534:2>](<check_1148@534:0>:int,<check_1148@534:1>:int,
                               <check_1148@534:2>:int)
      
      P[<main_1044@453:0>](<f_main_1483@532:0>:int),
      P[<<array_max_1033@455:3>@530:0>](<f_main_1483@532:0>:int,0:int,<f_main_1483@532:2>:int)|- P[<f_main_1483@532:2>](
      <f_main_1483@532:0>:int,<f_main_1483@532:2>:int)
      
      P[<array_max_1033@455:1>](<array_max_1033@455:0>:int,<array_max_1033@455:1>:int),
      P[<<f_array_max_1480@476:3>@528:0>](<array_max_1033@455:1>:int,<array_max_1033@455:0>:int,<<array_max_1033@455:3>@530:0>:int),
      (<array_max_1033@455:1> < <array_max_1033@455:0>)
      |- P[<<array_max_1033@455:3>@530:0>](<array_max_1033@455:0>:int,
                                           <array_max_1033@455:1>:int,
                                           <<array_max_1033@455:3>@530:0>:int)
      
      P[<f_array_max_1480@476:4>](<f_array_max_1480@476:0>:int,<f_array_max_1480@476:1>:int,<f_array_max_1481@523:2>:int),
      P[<<f_array_max_1481@523:3>@526:0>](<f_array_max_1480@476:0>:int,<f_array_max_1480@476:1>:int,<f_array_max_1481@523:2>:int,<<f_array_max_1480@476:3>@528:0>:int)|- P[<<f_array_max_1480@476:3>@528:0>](
      <f_array_max_1480@476:0>:int,<f_array_max_1480@476:1>:int,<<f_array_max_1480@476:3>@528:0>:int)
      
      P[<f_array_max_1481@523:4>](<f_array_max_1481@523:0>:int,<f_array_max_1481@523:1>:int,<f_array_max_1481@523:2>:int,<<f_array_max_1481@523:3>@526:0>:int),
      (<f_array_max_1481@523:2> <= <<f_array_max_1481@523:3>@526:0>)
      |- P[<<f_array_max_1481@523:3>@526:0>](<f_array_max_1481@523:0>:int,
                                             <f_array_max_1481@523:1>:int,
                                             <f_array_max_1481@523:2>:int,
                                             <<f_array_max_1481@523:3>@526:0>:int)
      
      P[<f_array_max_1480@476:4>](<f_array_max_1481@523:0>:int,<f_array_max_1481@523:1>:int,<f_array_max_1481@523:2>:int),
      P[<<array_max_1033@478:3>@521:0>](<f_array_max_1481@523:1>:int,(
                                        1 + <f_array_max_1481@523:0>):int,<f_array_max_1481@523:4>:int)|- P[<f_array_max_1481@523:4>](
      <f_array_max_1481@523:0>:int,<f_array_max_1481@523:1>:int,<f_array_max_1481@523:2>:int,
      <f_array_max_1481@523:4>:int)
      
      P[<array_max_1033@478:1>](<array_max_1033@478:0>:int,<array_max_1033@478:1>:int),
      P[<<f_array_max_1480@507:3>@519:0>](<array_max_1033@478:1>:int,<array_max_1033@478:0>:int,<<array_max_1033@478:3>@521:0>:int),
      (<array_max_1033@478:1> < <array_max_1033@478:0>)
      |- P[<<array_max_1033@478:3>@521:0>](<array_max_1033@478:0>:int,
                                           <array_max_1033@478:1>:int,
                                           <<array_max_1033@478:3>@521:0>:int)
      
      P[<f_array_max_1480@507:4>](<f_array_max_1480@507:0>:int,<f_array_max_1480@507:1>:int,<f_array_max_1481@514:2>:int),
      P[<<f_array_max_1481@514:3>@517:0>](<f_array_max_1480@507:0>:int,<f_array_max_1480@507:1>:int,<f_array_max_1481@514:2>:int,<<f_array_max_1480@507:3>@519:0>:int)|- P[<<f_array_max_1480@507:3>@519:0>](
      <f_array_max_1480@507:0>:int,<f_array_max_1480@507:1>:int,<<f_array_max_1480@507:3>@519:0>:int)
      
      P[<f_array_max_1481@514:4>](<f_array_max_1481@514:0>:int,<f_array_max_1481@514:1>:int,<f_array_max_1481@514:2>:int,<f_array_max_1481@514:4>:int),
      ((<f_array_max_1481@514:2> > <f_array_max_1481@514:4>) &&
       (<<f_array_max_1481@514:3>@517:0> = <f_array_max_1481@514:2>))
      |- P[<<f_array_max_1481@514:3>@517:0>](<f_array_max_1481@514:0>:int,
                                             <f_array_max_1481@514:1>:int,
                                             <f_array_max_1481@514:2>:int,
                                             <<f_array_max_1481@514:3>@517:0>:int)
      
      P[<f_array_max_1480@507:4>](<f_array_max_1481@514:0>:int,<f_array_max_1481@514:1>:int,<f_array_max_1481@514:2>:int),
      P[<<array_max_1033@509:3>@512:0>](<f_array_max_1481@514:1>:int,(
                                        1 + <f_array_max_1481@514:0>):int,<f_array_max_1481@514:4>:int)|- P[<f_array_max_1481@514:4>](
      <f_array_max_1481@514:0>:int,<f_array_max_1481@514:1>:int,<f_array_max_1481@514:2>:int,
      <f_array_max_1481@514:4>:int)
      
      P[<array_max_1033@509:1>](<array_max_1033@509:0>:int,<array_max_1033@509:1>:int),
      ((<<array_max_1033@509:3>@512:0> = 0) && (<array_max_1033@509:1> >= <array_max_1033@509:0>))
      |- P[<<array_max_1033@509:3>@512:0>](<array_max_1033@509:0>:int,
                                           <array_max_1033@509:1>:int,
                                           <<array_max_1033@509:3>@512:0>:int)
      
      P[<f_array_max_1480@507:4>]((-1 + <array_max_1033@509:1>):int,<array_max_1033@509:0>:int,<f_array_max_1480@507:4>:int)|- P[<array_max_1033@509:1>](
      <array_max_1033@509:0>:int,<array_max_1033@509:1>:int)
      
      P[<array_max_1033@478:1>](<f_array_max_1480@507:1>:int,<f_array_max_1480@507:0>:int),
      P[<<<array_max_1033@478:2>@481:1>@505:0>](<f_array_max_1480@507:1>:int,<f_array_max_1480@507:0>:int,<f_array_max_1480@507:0>:int,<f_array_max_1480@507:4>:int),
      (<f_array_max_1480@507:0> < <f_array_max_1480@507:1>)
      |- P[<f_array_max_1480@507:4>](<f_array_max_1480@507:0>:int,<f_array_max_1480@507:1>:int,
                                     <f_array_max_1480@507:4>:int)
      
      P[<f_array_max_1480@476:4>]((-1 + <array_max_1033@478:1>):int,<array_max_1033@478:0>:int,<f_array_max_1480@476:4>:int),
      P[<<<f_array_max_1480@476:2>@483:1>@503:0>]((-1 + <array_max_1033@478:1>):int,<array_max_1033@478:0>:int,<<array_max_1033@478:2>@481:0>:int,<<<array_max_1033@478:2>@481:1>@505:0>:int),
      P[<array_max_1033@478:1>](<array_max_1033@478:0>:int,<array_max_1033@478:1>:int)|- P[<<<array_max_1033@478:2>@481:1>@505:0>](
      <array_max_1033@478:0>:int,<array_max_1033@478:1>:int,<<array_max_1033@478:2>@481:0>:int,
      <<<array_max_1033@478:2>@481:1>@505:0>:int)
      
      P[<array_max_1033@455:1>](<f_array_max_1480@476:1>:int,<f_array_max_1480@476:0>:int),
      P[<<<array_max_1033@455:2>@485:1>@501:0>](<f_array_max_1480@476:1>:int,<f_array_max_1480@476:0>:int,<<f_array_max_1480@476:2>@483:0>:int,<<<f_array_max_1480@476:2>@483:1>@503:0>:int),
      (<f_array_max_1480@476:0> < <f_array_max_1480@476:1>)
      |- P[<<<f_array_max_1480@476:2>@483:1>@503:0>](<f_array_max_1480@476:0>:int,
                                                     <f_array_max_1480@476:1>:int,
                                                     <<f_array_max_1480@476:2>@483:0>:int,
                                                     <<<f_array_max_1480@476:2>@483:1>@503:0>:int)
      
      P[<main_1044@453:0>](<array_max_1033@455:0>:int),
      P[<<make_array_1030@487:2>@499:0>](<array_max_1033@455:0>:int,<<array_max_1033@455:2>@485:0>:int,<<<array_max_1033@455:2>@485:1>@501:0>:int),
      P[<array_max_1033@455:1>](<array_max_1033@455:0>:int,<array_max_1033@455:1>:int), (
      <array_max_1033@455:1> = 0)
      |- P[<<<array_max_1033@455:2>@485:1>@501:0>](<array_max_1033@455:0>:int,
                                                   <array_max_1033@455:1>:int,
                                                   <<array_max_1033@455:2>@485:0>:int,
                                                   <<<array_max_1033@455:2>@485:1>@501:0>:int)
      
      P[<make_array_1030@487:1>](<make_array_1030@487:0>:int,<make_array_1030@487:1>:int),
      P[<<k_make_array_u_1182@490:2>@497:0>](<make_array_1030@487:1>:int,<make_array_1030@487:0>:int,<<make_array_1030@487:2>@499:0>:int),
      (0 <= <make_array_1030@487:1>)
      |- P[<<make_array_1030@487:2>@499:0>](<make_array_1030@487:0>:int,
                                            <make_array_1030@487:1>:int,
                                            <<make_array_1030@487:2>@499:0>:int)
      
      P[<k_make_array_u_1182@490:3>](<k_make_array_u_1182@490:0>:int,<k_make_array_u_1182@490:1>:int,true:bool),
      P[<<k_make_array_u_1193@493:2>@495:0>](<k_make_array_u_1182@490:0>:int,<k_make_array_u_1182@490:1>:int,<<k_make_array_u_1182@490:2>@497:0>:int)|- P[<<k_make_array_u_1182@490:2>@497:0>](
      <k_make_array_u_1182@490:0>:int,<k_make_array_u_1182@490:1>:int,
      <<k_make_array_u_1182@490:2>@497:0>:int)
      
      P[<k_make_array_u_1193@493:3>](<k_make_array_u_1193@493:0>:int,<k_make_array_u_1193@493:1>:int,<k_make_array_u_1193@493:3>:unit),
      (<<k_make_array_u_1193@493:2>@495:0> = <k_make_array_u_1193@493:0>)
      |- P[<<k_make_array_u_1193@493:2>@495:0>](<k_make_array_u_1193@493:0>:int,
                                                <k_make_array_u_1193@493:1>:int,
                                                <<k_make_array_u_1193@493:2>@495:0>:int)
      
      P[<k_make_array_u_1182@490:3>](<k_make_array_u_1193@493:0>:int,<k_make_array_u_1193@493:1>:int,true:bool)|- P[<k_make_array_u_1193@493:3>](
      <k_make_array_u_1193@493:0>:int,<k_make_array_u_1193@493:1>:int,
      <k_make_array_u_1193@493:3>:unit)
      
      P[<make_array_1030@487:1>](<k_make_array_u_1182@490:1>:int,<k_make_array_u_1182@490:0>:int),
      ((0 <= <k_make_array_u_1182@490:0>) &&
       (<k_make_array_u_1182@490:3> = (<k_make_array_u_1182@490:0> < <k_make_array_u_1182@490:1>)))
      |- P[<k_make_array_u_1182@490:3>](<k_make_array_u_1182@490:0>:int,
                                        <k_make_array_u_1182@490:1>:int,
                                        <k_make_array_u_1182@490:3>:bool)
      
      P[<main_1044@453:0>](<make_array_1030@487:0>:int),
      P[<<array_max_1033@455:2>@485:0>](<make_array_1030@487:0>:int,0:int,<make_array_1030@487:1>:int)|- P[<make_array_1030@487:1>](
      <make_array_1030@487:0>:int,<make_array_1030@487:1>:int)
      
      P[<array_max_1033@455:1>](<array_max_1033@455:0>:int,<array_max_1033@455:1>:int),
      P[<<f_array_max_1480@476:2>@483:0>](<array_max_1033@455:1>:int,<array_max_1033@455:0>:int,<<array_max_1033@455:2>@485:0>:int),
      (<array_max_1033@455:1> < <array_max_1033@455:0>)
      |- P[<<array_max_1033@455:2>@485:0>](<array_max_1033@455:0>:int,
                                           <array_max_1033@455:1>:int,
                                           <<array_max_1033@455:2>@485:0>:int)
      
      P[<f_array_max_1480@476:4>](<f_array_max_1480@476:0>:int,<f_array_max_1480@476:1>:int,<f_array_max_1480@476:4>:int),
      P[<<array_max_1033@478:2>@481:0>](<f_array_max_1480@476:1>:int,(
                                        1 + <f_array_max_1480@476:0>):int,<<f_array_max_1480@476:2>@483:0>:int)|- P[<<f_array_max_1480@476:2>@483:0>](
      <f_array_max_1480@476:0>:int,<f_array_max_1480@476:1>:int,<<f_array_max_1480@476:2>@483:0>:int)
      
      P[<array_max_1033@478:1>](<array_max_1033@478:0>:int,<array_max_1033@478:1>:int),
      ((<array_max_1033@478:1> < <array_max_1033@478:0>) && (<<array_max_1033@478:2>@481:0> = <array_max_1033@478:1>))
      |- P[<<array_max_1033@478:2>@481:0>](<array_max_1033@478:0>:int,
                                           <array_max_1033@478:1>:int,
                                           <<array_max_1033@478:2>@481:0>:int)
      
      P[<f_array_max_1480@476:4>]((-1 + <array_max_1033@478:1>):int,<array_max_1033@478:0>:int,<f_array_max_1480@476:4>:int)|- P[<array_max_1033@478:1>](
      <array_max_1033@478:0>:int,<array_max_1033@478:1>:int)
      
      P[<array_max_1033@455:1>](<f_array_max_1480@476:1>:int,<f_array_max_1480@476:0>:int),
      P[<<<array_max_1033@455:2>@458:1>@474:0>](<f_array_max_1480@476:1>:int,<f_array_max_1480@476:0>:int,<f_array_max_1480@476:0>:int,<f_array_max_1480@476:4>:int),
      (<f_array_max_1480@476:0> < <f_array_max_1480@476:1>)
      |- P[<f_array_max_1480@476:4>](<f_array_max_1480@476:0>:int,<f_array_max_1480@476:1>:int,
                                     <f_array_max_1480@476:4>:int)
      
      P[<main_1044@453:0>](<array_max_1033@455:0>:int),
      P[<<make_array_1030@460:2>@472:0>](<array_max_1033@455:0>:int,<<array_max_1033@455:2>@458:0>:int,<<<array_max_1033@455:2>@458:1>@474:0>:int),
      P[<array_max_1033@455:1>](<array_max_1033@455:0>:int,<array_max_1033@455:1>:int), (
      <array_max_1033@455:1> = 0)
      |- P[<<<array_max_1033@455:2>@458:1>@474:0>](<array_max_1033@455:0>:int,
                                                   <array_max_1033@455:1>:int,
                                                   <<array_max_1033@455:2>@458:0>:int,
                                                   <<<array_max_1033@455:2>@458:1>@474:0>:int)
      
      P[<make_array_1030@460:1>](<make_array_1030@460:0>:int,<make_array_1030@460:1>:int),
      P[<<k_make_array_u_1182@463:2>@470:0>](<make_array_1030@460:1>:int,<make_array_1030@460:0>:int,<<make_array_1030@460:2>@472:0>:int),
      (0 <= <make_array_1030@460:1>)
      |- P[<<make_array_1030@460:2>@472:0>](<make_array_1030@460:0>:int,
                                            <make_array_1030@460:1>:int,
                                            <<make_array_1030@460:2>@472:0>:int)
      
      P[<k_make_array_u_1182@463:3>](<k_make_array_u_1182@463:0>:int,<k_make_array_u_1182@463:1>:int,true:bool),
      P[<<k_make_array_u_1193@466:2>@468:0>](<k_make_array_u_1182@463:0>:int,<k_make_array_u_1182@463:1>:int,<<k_make_array_u_1182@463:2>@470:0>:int)|- P[<<k_make_array_u_1182@463:2>@470:0>](
      <k_make_array_u_1182@463:0>:int,<k_make_array_u_1182@463:1>:int,
      <<k_make_array_u_1182@463:2>@470:0>:int)
      
      P[<k_make_array_u_1193@466:3>](<k_make_array_u_1193@466:0>:int,<k_make_array_u_1193@466:1>:int,<k_make_array_u_1193@466:3>:unit),
      (<<k_make_array_u_1193@466:2>@468:0> = <k_make_array_u_1193@466:0>)
      |- P[<<k_make_array_u_1193@466:2>@468:0>](<k_make_array_u_1193@466:0>:int,
                                                <k_make_array_u_1193@466:1>:int,
                                                <<k_make_array_u_1193@466:2>@468:0>:int)
      
      P[<k_make_array_u_1182@463:3>](<k_make_array_u_1193@466:0>:int,<k_make_array_u_1193@466:1>:int,true:bool)|- P[<k_make_array_u_1193@466:3>](
      <k_make_array_u_1193@466:0>:int,<k_make_array_u_1193@466:1>:int,
      <k_make_array_u_1193@466:3>:unit)
      
      P[<make_array_1030@460:1>](<k_make_array_u_1182@463:1>:int,<k_make_array_u_1182@463:0>:int),
      ((0 <= <k_make_array_u_1182@463:0>) &&
       (<k_make_array_u_1182@463:3> = (<k_make_array_u_1182@463:0> < <k_make_array_u_1182@463:1>)))
      |- P[<k_make_array_u_1182@463:3>](<k_make_array_u_1182@463:0>:int,
                                        <k_make_array_u_1182@463:1>:int,
                                        <k_make_array_u_1182@463:3>:bool)
      
      P[<main_1044@453:0>](<make_array_1030@460:0>:int),
      P[<<array_max_1033@455:2>@458:0>](<make_array_1030@460:0>:int,0:int,<make_array_1030@460:1>:int)|- P[<make_array_1030@460:1>](
      <make_array_1030@460:0>:int,<make_array_1030@460:1>:int)
      
      P[<array_max_1033@455:1>](<array_max_1033@455:0>:int,<array_max_1033@455:1>:int),
      ((<array_max_1033@455:1> < <array_max_1033@455:0>) && (<<array_max_1033@455:2>@458:0> = <array_max_1033@455:1>))
      |- P[<<array_max_1033@455:2>@458:0>](<array_max_1033@455:0>:int,
                                           <array_max_1033@455:1>:int,
                                           <<array_max_1033@455:2>@458:0>:int)
      
      P[<main_1044@453:0>](<array_max_1033@455:0>:int), (<array_max_1033@455:1> = 0)
      |- P[<array_max_1033@455:1>](<array_max_1033@455:0>:int,<array_max_1033@455:1>:int)
      
      P[<f_1484@451:0>](<main_1044@453:0>:int)|- P[<main_1044@453:0>](<main_1044@453:0>:int)
      
      |- P[<f_1484@451:0>](<f_1484@451:0>:int)
    call trees:
      <main_1479@448>
        <f_1484@451>
          <main_1044@453>
            <array_max_1033@455>
            </<array_max_1033@455:2>@458>
            <make_array_1030@460>
              <k_make_array_u_1182@463>
                <k_make_array_u_1193@466>
                </<k_make_array_u_1193@466:2>@468>
              </<k_make_array_u_1182@463:2>@470>
            </<make_array_1030@460:2>@472>
            <<<array_max_1033@455:2>@458:1>@474>
              <f_array_max_1480@476>
                <array_max_1033@478>
                </<array_max_1033@478:2>@481>
              </<f_array_max_1480@476:2>@483>
            </<array_max_1033@455:2>@485>
            <make_array_1030@487>
              <k_make_array_u_1182@490>
                <k_make_array_u_1193@493>
                </<k_make_array_u_1193@493:2>@495>
              </<k_make_array_u_1182@490:2>@497>
            </<make_array_1030@487:2>@499>
            <<<array_max_1033@455:2>@485:1>@501>
              <<<f_array_max_1480@476:2>@483:1>@503>
                <<<array_max_1033@478:2>@481:1>@505>
                  <f_array_max_1480@507>
                    <array_max_1033@509>
                    </<array_max_1033@509:3>@512>
                    <f_array_max_1481@514>
                    </<f_array_max_1481@514:3>@517>
                  </<f_array_max_1480@507:3>@519>
                </<array_max_1033@478:3>@521>
                <f_array_max_1481@523>
                </<f_array_max_1481@523:3>@526>
              </<f_array_max_1480@476:3>@528>
            </<array_max_1033@455:3>@530>
            <f_main_1483@532>
              <check_1148@534>
              </<check_1148@534:3>@537>
              <make_array_1030@539>
                <k_make_array_u_1182@542>
                  <k_make_array_u_1193@545>
                  </<k_make_array_u_1193@545:2>@547>
                </<k_make_array_u_1182@542:2>@549>
              </<make_array_1030@539:2>@551>
              <<<check_1148@534:3>@537:1>@553>
                <f_check_1482@555>
                  <k_check_u_1336@558>
                    <check_1148@560>
                    </<check_1148@560:3>@563>
                  </<k_check_u_1336@558:3>@565>
                </<f_check_1482@555:3>@567>
              </<check_1148@534:3>@569>
              <make_array_1030@571>
                <k_make_array_u_1182@574>
                  <k_make_array_u_1193@577>
                  </<k_make_array_u_1193@577:2>@579>
                </<k_make_array_u_1182@574:2>@581>
              </<make_array_1030@571:2>@583>
              <<<check_1148@534:3>@569:1>@585>
                <<<f_check_1482@555:3>@567:1>@587>
                  <<<k_check_u_1336@558:3>@565:1>@589>
                    <<<check_1148@560:3>@563:1>@591>
                      <f_check_1482@593>
                        <fail_1487@596>
    inlined horn clauses:
      P[<fail_1487@596:0>](<fail_1487@596:0>:bool)|- bot
      
      P[<check_1148@560:2>](<f_check_1482@593:2>:int,<f_check_1482@593:0>:int,<f_check_1482@593:1>:int),
      P[<<<check_1148@560:3>@563:1>@591:0>](<f_check_1482@593:2>:int,<f_check_1482@593:0>:int,<f_check_1482@593:1>:int,<f_check_1482@593:0>:int,<f_check_1482@593:5>:int),
      ((<f_check_1482@593:5> > <f_check_1482@593:1>) &&
       ((<f_check_1482@593:0> < <f_check_1482@593:2>) && <fail_1487@596:0>))
      |- P[<fail_1487@596:0>](<fail_1487@596:0>:bool)
      
      P[<<<check_1148@534:3>@537:1>@553:0>](<check_1148@560:0>:int,(-1 + <check_1148@560:1>):int,<check_1148@560:2>:int,(
                                            -1 + <check_1148@560:1>):int,var1927:int),
      P[<check_1148@534:2>](<check_1148@560:0>:int,(-1 + <check_1148@560:1>):int,<check_1148@560:2>:int),
      P[<<<check_1148@534:3>@569:1>@585:0>](<check_1148@560:0>:int,(-1 + <check_1148@560:1>):int,<check_1148@560:2>:int,<<check_1148@560:3>@563:0>:int,<<<check_1148@560:3>@563:1>@591:0>:int),
      P[<check_1148@560:2>](<check_1148@560:0>:int,<check_1148@560:1>:int,<check_1148@560:2>:int),
      ((var1927 <= <check_1148@560:2>) && (<check_1148@560:1> < (1 + <check_1148@560:0>)))
      |- P[<<<check_1148@560:3>@563:1>@591:0>](<check_1148@560:0>:int,
                                               <check_1148@560:1>:int,
                                               <check_1148@560:2>:int,
                                               <<check_1148@560:3>@563:0>:int,
                                               <<<check_1148@560:3>@563:1>@591:0>:int)
      
      P[<<array_max_1033@455:3>@530:0>](<check_1148@534:0>:int,0:int,<check_1148@534:2>:int),
      P[<<make_array_1030@571:2>@583:0>](<check_1148@534:0>:int,<<check_1148@534:3>@569:0>:int,<<<check_1148@534:3>@569:1>@585:0>:int),
      P[<check_1148@534:2>](<check_1148@534:0>:int,<check_1148@534:1>:int,<check_1148@534:2>:int),
      (<check_1148@534:1> = 0)
      |- P[<<<check_1148@534:3>@569:1>@585:0>](<check_1148@534:0>:int,
                                               <check_1148@534:1>:int,
                                               <check_1148@534:2>:int,
                                               <<check_1148@534:3>@569:0>:int,
                                               <<<check_1148@534:3>@569:1>@585:0>:int)
      
      P[<make_array_1030@571:1>](<make_array_1030@571:0>:int,<make_array_1030@571:1>:int),
      ((0 <= <make_array_1030@571:1>) &&
       ((<make_array_1030@571:1> < <make_array_1030@571:0>) &&
        (<<make_array_1030@571:2>@583:0> = <make_array_1030@571:1>)))
      |- P[<<make_array_1030@571:2>@583:0>](<make_array_1030@571:0>:int,
                                            <make_array_1030@571:1>:int,
                                            <<make_array_1030@571:2>@583:0>:int)
      
      P[<<array_max_1033@455:3>@530:0>](<make_array_1030@571:0>:int,0:int,<check_1148@534:2>:int),
      P[<<check_1148@534:3>@569:0>](<make_array_1030@571:0>:int,0:int,<check_1148@534:2>:int,<make_array_1030@571:1>:int)|- P[<make_array_1030@571:1>](
      <make_array_1030@571:0>:int,<make_array_1030@571:1>:int)
      
      P[<<<check_1148@534:3>@537:1>@553:0>](<check_1148@534:0>:int,<check_1148@534:1>:int,<check_1148@534:2>:int,<check_1148@534:1>:int,var1928:int),
      P[<check_1148@534:2>](<check_1148@534:0>:int,<check_1148@534:1>:int,<check_1148@534:2>:int),
      P[<<check_1148@560:3>@563:0>](<check_1148@534:0>:int,(1 + <check_1148@534:1>):int,<check_1148@534:2>:int,<<check_1148@534:3>@569:0>:int),
      ((var1928 <= <check_1148@534:2>) && (<check_1148@534:1> < <check_1148@534:0>))
      |- P[<<check_1148@534:3>@569:0>](<check_1148@534:0>:int,<check_1148@534:1>:int,
                                       <check_1148@534:2>:int,<<check_1148@534:3>@569:0>:int)
      
      P[<check_1148@560:2>](<check_1148@560:0>:int,<check_1148@560:1>:int,<check_1148@560:2>:int),
      ((<check_1148@560:1> < <check_1148@560:0>) && (<<check_1148@560:3>@563:0> = <check_1148@560:1>))
      |- P[<<check_1148@560:3>@563:0>](<check_1148@560:0>:int,<check_1148@560:1>:int,
                                       <check_1148@560:2>:int,<<check_1148@560:3>@563:0>:int)
      
      P[<check_1148@534:2>](<check_1148@560:0>:int,(-1 + <check_1148@560:1>):int,<check_1148@560:2>:int),
      P[<<<check_1148@534:3>@537:1>@553:0>](<check_1148@560:0>:int,(-1 + <check_1148@560:1>):int,<check_1148@560:2>:int,(
                                            -1 + <check_1148@560:1>):int,var1929:int),
      ((var1929 <= <check_1148@560:2>) && (<check_1148@560:1> < (1 + <check_1148@560:0>)))
      |- P[<check_1148@560:2>](<check_1148@560:0>:int,<check_1148@560:1>:int,
                               <check_1148@560:2>:int)
      
      P[<<array_max_1033@455:3>@530:0>](<check_1148@534:0>:int,0:int,<check_1148@534:2>:int),
      P[<<make_array_1030@539:2>@551:0>](<check_1148@534:0>:int,<<check_1148@534:3>@537:0>:int,<<<check_1148@534:3>@537:1>@553:0>:int),
      P[<check_1148@534:2>](<check_1148@534:0>:int,<check_1148@534:1>:int,<check_1148@534:2>:int),
      (<check_1148@534:1> = 0)
      |- P[<<<check_1148@534:3>@537:1>@553:0>](<check_1148@534:0>:int,
                                               <check_1148@534:1>:int,
                                               <check_1148@534:2>:int,
                                               <<check_1148@534:3>@537:0>:int,
                                               <<<check_1148@534:3>@537:1>@553:0>:int)
      
      P[<make_array_1030@539:1>](<make_array_1030@539:0>:int,<make_array_1030@539:1>:int),
      ((0 <= <make_array_1030@539:1>) &&
       ((<make_array_1030@539:1> < <make_array_1030@539:0>) &&
        (<<make_array_1030@539:2>@551:0> = <make_array_1030@539:1>)))
      |- P[<<make_array_1030@539:2>@551:0>](<make_array_1030@539:0>:int,
                                            <make_array_1030@539:1>:int,
                                            <<make_array_1030@539:2>@551:0>:int)
      
      P[<<array_max_1033@455:3>@530:0>](<make_array_1030@539:0>:int,0:int,<check_1148@534:2>:int),
      P[<<check_1148@534:3>@537:0>](<make_array_1030@539:0>:int,0:int,<check_1148@534:2>:int,<make_array_1030@539:1>:int)|- P[<make_array_1030@539:1>](
      <make_array_1030@539:0>:int,<make_array_1030@539:1>:int)
      
      P[<check_1148@534:2>](<check_1148@534:0>:int,<check_1148@534:1>:int,<check_1148@534:2>:int),
      ((<check_1148@534:1> < <check_1148@534:0>) && (<<check_1148@534:3>@537:0> = <check_1148@534:1>))
      |- P[<<check_1148@534:3>@537:0>](<check_1148@534:0>:int,<check_1148@534:1>:int,
                                       <check_1148@534:2>:int,<<check_1148@534:3>@537:0>:int)
      
      P[<<array_max_1033@455:3>@530:0>](<check_1148@534:0>:int,0:int,<check_1148@534:2>:int), (
      <check_1148@534:1> = 0)
      |- P[<check_1148@534:2>](<check_1148@534:0>:int,<check_1148@534:1>:int,
                               <check_1148@534:2>:int)
      
      P[<array_max_1033@455:1>](<array_max_1033@455:0>:int,<array_max_1033@455:1>:int),
      P[<<<array_max_1033@455:2>@458:1>@474:0>](<array_max_1033@455:0>:int,<array_max_1033@455:1>:int,<array_max_1033@455:1>:int,var1930:int),
      P[<<array_max_1033@478:3>@521:0>](<array_max_1033@455:0>:int,(1 + <array_max_1033@455:1>):int,<<array_max_1033@455:3>@530:0>:int),
      ((var1930 <= <<array_max_1033@455:3>@530:0>) && (<array_max_1033@455:1> < <array_max_1033@455:0>))
      |- P[<<array_max_1033@455:3>@530:0>](<array_max_1033@455:0>:int,
                                           <array_max_1033@455:1>:int,
                                           <<array_max_1033@455:3>@530:0>:int)
      
      P[<array_max_1033@478:1>](<array_max_1033@478:0>:int,<array_max_1033@478:1>:int),
      P[<<<array_max_1033@478:2>@481:1>@505:0>](<array_max_1033@478:0>:int,<array_max_1033@478:1>:int,<array_max_1033@478:1>:int,<<array_max_1033@478:3>@521:0>:int),
      P[<<array_max_1033@509:3>@512:0>](<array_max_1033@478:0>:int,(1 + <array_max_1033@478:1>):int,var1931:int),
      ((<<array_max_1033@478:3>@521:0> > var1931) && (<array_max_1033@478:1> < <array_max_1033@478:0>))
      |- P[<<array_max_1033@478:3>@521:0>](<array_max_1033@478:0>:int,
                                           <array_max_1033@478:1>:int,
                                           <<array_max_1033@478:3>@521:0>:int)
      
      P[<array_max_1033@509:1>](<array_max_1033@509:0>:int,<array_max_1033@509:1>:int),
      ((<<array_max_1033@509:3>@512:0> = 0) && (<array_max_1033@509:1> >= <array_max_1033@509:0>))
      |- P[<<array_max_1033@509:3>@512:0>](<array_max_1033@509:0>:int,
                                           <array_max_1033@509:1>:int,
                                           <<array_max_1033@509:3>@512:0>:int)
      
      P[<array_max_1033@478:1>](<array_max_1033@509:0>:int,(-1 + <array_max_1033@509:1>):int),
      P[<<<array_max_1033@478:2>@481:1>@505:0>](<array_max_1033@509:0>:int,(
                                                -1 + <array_max_1033@509:1>):int,(
                                                -1 + <array_max_1033@509:1>):int,<f_array_max_1480@507:4>:int),
      (<array_max_1033@509:1> < (1 + <array_max_1033@509:0>))
      |- P[<array_max_1033@509:1>](<array_max_1033@509:0>:int,<array_max_1033@509:1>:int)
      
      P[<<<array_max_1033@455:2>@458:1>@474:0>](<array_max_1033@478:0>:int,(
                                                -1 + <array_max_1033@478:1>):int,(
                                                -1 + <array_max_1033@478:1>):int,<f_array_max_1480@476:4>:int),
      P[<array_max_1033@455:1>](<array_max_1033@478:0>:int,(-1 + <array_max_1033@478:1>):int),
      P[<<<array_max_1033@455:2>@485:1>@501:0>](<array_max_1033@478:0>:int,(
                                                -1 + <array_max_1033@478:1>):int,<<array_max_1033@478:2>@481:0>:int,<<<array_max_1033@478:2>@481:1>@505:0>:int),
      P[<array_max_1033@478:1>](<array_max_1033@478:0>:int,<array_max_1033@478:1>:int),
      (<array_max_1033@478:1> < (1 + <array_max_1033@478:0>))
      |- P[<<<array_max_1033@478:2>@481:1>@505:0>](<array_max_1033@478:0>:int,
                                                   <array_max_1033@478:1>:int,
                                                   <<array_max_1033@478:2>@481:0>:int,
                                                   <<<array_max_1033@478:2>@481:1>@505:0>:int)
      
      P[<<make_array_1030@487:2>@499:0>](<array_max_1033@455:0>:int,<<array_max_1033@455:2>@485:0>:int,<<<array_max_1033@455:2>@485:1>@501:0>:int),
      P[<array_max_1033@455:1>](<array_max_1033@455:0>:int,<array_max_1033@455:1>:int), (
      <array_max_1033@455:1> = 0)
      |- P[<<<array_max_1033@455:2>@485:1>@501:0>](<array_max_1033@455:0>:int,
                                                   <array_max_1033@455:1>:int,
                                                   <<array_max_1033@455:2>@485:0>:int,
                                                   <<<array_max_1033@455:2>@485:1>@501:0>:int)
      
      P[<make_array_1030@487:1>](<make_array_1030@487:0>:int,<make_array_1030@487:1>:int),
      ((0 <= <make_array_1030@487:1>) &&
       ((<make_array_1030@487:1> < <make_array_1030@487:0>) &&
        (<<make_array_1030@487:2>@499:0> = <make_array_1030@487:1>)))
      |- P[<<make_array_1030@487:2>@499:0>](<make_array_1030@487:0>:int,
                                            <make_array_1030@487:1>:int,
                                            <<make_array_1030@487:2>@499:0>:int)
      
      P[<<array_max_1033@455:2>@485:0>](<make_array_1030@487:0>:int,0:int,<make_array_1030@487:1>:int)|- P[<make_array_1030@487:1>](
      <make_array_1030@487:0>:int,<make_array_1030@487:1>:int)
      
      P[<array_max_1033@455:1>](<array_max_1033@455:0>:int,<array_max_1033@455:1>:int),
      P[<<<array_max_1033@455:2>@458:1>@474:0>](<array_max_1033@455:0>:int,<array_max_1033@455:1>:int,<array_max_1033@455:1>:int,var1932:int),
      P[<<array_max_1033@478:2>@481:0>](<array_max_1033@455:0>:int,(1 + <array_max_1033@455:1>):int,<<array_max_1033@455:2>@485:0>:int),
      (<array_max_1033@455:1> < <array_max_1033@455:0>)
      |- P[<<array_max_1033@455:2>@485:0>](<array_max_1033@455:0>:int,
                                           <array_max_1033@455:1>:int,
                                           <<array_max_1033@455:2>@485:0>:int)
      
      P[<array_max_1033@478:1>](<array_max_1033@478:0>:int,<array_max_1033@478:1>:int),
      ((<array_max_1033@478:1> < <array_max_1033@478:0>) && (<<array_max_1033@478:2>@481:0> = <array_max_1033@478:1>))
      |- P[<<array_max_1033@478:2>@481:0>](<array_max_1033@478:0>:int,
                                           <array_max_1033@478:1>:int,
                                           <<array_max_1033@478:2>@481:0>:int)
      
      P[<array_max_1033@455:1>](<array_max_1033@478:0>:int,(-1 + <array_max_1033@478:1>):int),
      P[<<<array_max_1033@455:2>@458:1>@474:0>](<array_max_1033@478:0>:int,(
                                                -1 + <array_max_1033@478:1>):int,(
                                                -1 + <array_max_1033@478:1>):int,<f_array_max_1480@476:4>:int),
      (<array_max_1033@478:1> < (1 + <array_max_1033@478:0>))
      |- P[<array_max_1033@478:1>](<array_max_1033@478:0>:int,<array_max_1033@478:1>:int)
      
      P[<<make_array_1030@460:2>@472:0>](<array_max_1033@455:0>:int,<<array_max_1033@455:2>@458:0>:int,<<<array_max_1033@455:2>@458:1>@474:0>:int),
      P[<array_max_1033@455:1>](<array_max_1033@455:0>:int,<array_max_1033@455:1>:int), (
      <array_max_1033@455:1> = 0)
      |- P[<<<array_max_1033@455:2>@458:1>@474:0>](<array_max_1033@455:0>:int,
                                                   <array_max_1033@455:1>:int,
                                                   <<array_max_1033@455:2>@458:0>:int,
                                                   <<<array_max_1033@455:2>@458:1>@474:0>:int)
      
      P[<make_array_1030@460:1>](<make_array_1030@460:0>:int,<make_array_1030@460:1>:int),
      ((0 <= <make_array_1030@460:1>) &&
       ((<make_array_1030@460:1> < <make_array_1030@460:0>) &&
        (<<make_array_1030@460:2>@472:0> = <make_array_1030@460:1>)))
      |- P[<<make_array_1030@460:2>@472:0>](<make_array_1030@460:0>:int,
                                            <make_array_1030@460:1>:int,
                                            <<make_array_1030@460:2>@472:0>:int)
      
      P[<<array_max_1033@455:2>@458:0>](<make_array_1030@460:0>:int,0:int,<make_array_1030@460:1>:int)|- P[<make_array_1030@460:1>](
      <make_array_1030@460:0>:int,<make_array_1030@460:1>:int)
      
      P[<array_max_1033@455:1>](<array_max_1033@455:0>:int,<array_max_1033@455:1>:int),
      ((<array_max_1033@455:1> < <array_max_1033@455:0>) && (<<array_max_1033@455:2>@458:0> = <array_max_1033@455:1>))
      |- P[<<array_max_1033@455:2>@458:0>](<array_max_1033@455:0>:int,
                                           <array_max_1033@455:1>:int,
                                           <<array_max_1033@455:2>@458:0>:int)
      
       (<array_max_1033@455:1> = 0) |- P[<array_max_1033@455:1>](<array_max_1033@455:0>:int,
                                                                 <array_max_1033@455:1>:int)
    begin ParamSubstInfer.infer(982533)[3]
      
    end ParamSubstInfer.infer(982533)[3] (8.169758 sec.)
    inferred extra parameters:
      
    begin RefTypeInfer.elim_coeffs(982535)[3]
      
    end RefTypeInfer.elim_coeffs(982535)[3] (0.009999 sec.)
    begin GenHcSolver.solve(984451)[3]
      Horn clauses:
        P[<fail_1487@596:0>](<fail_1487@596:0>:bool)|- bot
        
        P[<check_1148@560:2>](<f_check_1482@593:2>:int,<f_check_1482@593:0>:int,<f_check_1482@593:1>:int),
        P[<<<check_1148@560:3>@563:1>@591:0>](<f_check_1482@593:2>:int,<f_check_1482@593:0>:int,<f_check_1482@593:1>:int,<f_check_1482@593:0>:int,<f_check_1482@593:5>:int),
        ((<f_check_1482@593:5> > <f_check_1482@593:1>) &&
         ((<f_check_1482@593:0> < <f_check_1482@593:2>) && <fail_1487@596:0>))
        |- P[<fail_1487@596:0>](<fail_1487@596:0>:bool)
        
        P[<<<check_1148@534:3>@537:1>@553:0>](<check_1148@560:0>:int,(
                                              -1 + <check_1148@560:1>):int,<check_1148@560:2>:int,(
                                              -1 + <check_1148@560:1>):int,var1927:int),
        P[<check_1148@534:2>](<check_1148@560:0>:int,(-1 + <check_1148@560:1>):int,<check_1148@560:2>:int),
        P[<<<check_1148@534:3>@569:1>@585:0>](<check_1148@560:0>:int,(
                                              -1 + <check_1148@560:1>):int,<check_1148@560:2>:int,<<check_1148@560:3>@563:0>:int,<<<check_1148@560:3>@563:1>@591:0>:int),
        P[<check_1148@560:2>](<check_1148@560:0>:int,<check_1148@560:1>:int,<check_1148@560:2>:int),
        ((var1927 <= <check_1148@560:2>) && (<check_1148@560:1> < (1 + <check_1148@560:0>)))
        |- P[<<<check_1148@560:3>@563:1>@591:0>](<check_1148@560:0>:int,
                                                 <check_1148@560:1>:int,
                                                 <check_1148@560:2>:int,
                                                 <<check_1148@560:3>@563:0>:int,
                                                 <<<check_1148@560:3>@563:1>@591:0>:int)
        
        P[<<array_max_1033@455:3>@530:0>](<check_1148@534:0>:int,0:int,<check_1148@534:2>:int),
        P[<<make_array_1030@571:2>@583:0>](<check_1148@534:0>:int,<<check_1148@534:3>@569:0>:int,<<<check_1148@534:3>@569:1>@585:0>:int),
        P[<check_1148@534:2>](<check_1148@534:0>:int,<check_1148@534:1>:int,<check_1148@534:2>:int),
        (<check_1148@534:1> = 0)
        |- P[<<<check_1148@534:3>@569:1>@585:0>](<check_1148@534:0>:int,
                                                 <check_1148@534:1>:int,
                                                 <check_1148@534:2>:int,
                                                 <<check_1148@534:3>@569:0>:int,
                                                 <<<check_1148@534:3>@569:1>@585:0>:int)
        
        P[<make_array_1030@571:1>](<make_array_1030@571:0>:int,<make_array_1030@571:1>:int),
        ((0 <= <make_array_1030@571:1>) &&
         ((<make_array_1030@571:1> < <make_array_1030@571:0>) &&
          (<<make_array_1030@571:2>@583:0> = <make_array_1030@571:1>)))
        |- P[<<make_array_1030@571:2>@583:0>](<make_array_1030@571:0>:int,
                                              <make_array_1030@571:1>:int,
                                              <<make_array_1030@571:2>@583:0>:int)
        
        P[<<array_max_1033@455:3>@530:0>](<make_array_1030@571:0>:int,0:int,<check_1148@534:2>:int),
        P[<<check_1148@534:3>@569:0>](<make_array_1030@571:0>:int,0:int,<check_1148@534:2>:int,<make_array_1030@571:1>:int)|- P[<make_array_1030@571:1>](
        <make_array_1030@571:0>:int,<make_array_1030@571:1>:int)
        
        P[<<<check_1148@534:3>@537:1>@553:0>](<check_1148@534:0>:int,<check_1148@534:1>:int,<check_1148@534:2>:int,<check_1148@534:1>:int,var1928:int),
        P[<check_1148@534:2>](<check_1148@534:0>:int,<check_1148@534:1>:int,<check_1148@534:2>:int),
        P[<<check_1148@560:3>@563:0>](<check_1148@534:0>:int,(1 + <check_1148@534:1>):int,<check_1148@534:2>:int,<<check_1148@534:3>@569:0>:int),
        ((var1928 <= <check_1148@534:2>) && (<check_1148@534:1> < <check_1148@534:0>))
        |- P[<<check_1148@534:3>@569:0>](<check_1148@534:0>:int,<check_1148@534:1>:int,
                                         <check_1148@534:2>:int,<<check_1148@534:3>@569:0>:int)
        
        P[<check_1148@560:2>](<check_1148@560:0>:int,<check_1148@560:1>:int,<check_1148@560:2>:int),
        ((<check_1148@560:1> < <check_1148@560:0>) && (<<check_1148@560:3>@563:0> = <check_1148@560:1>))
        |- P[<<check_1148@560:3>@563:0>](<check_1148@560:0>:int,<check_1148@560:1>:int,
                                         <check_1148@560:2>:int,<<check_1148@560:3>@563:0>:int)
        
        P[<check_1148@534:2>](<check_1148@560:0>:int,(-1 + <check_1148@560:1>):int,<check_1148@560:2>:int),
        P[<<<check_1148@534:3>@537:1>@553:0>](<check_1148@560:0>:int,(
                                              -1 + <check_1148@560:1>):int,<check_1148@560:2>:int,(
                                              -1 + <check_1148@560:1>):int,var1929:int),
        ((var1929 <= <check_1148@560:2>) && (<check_1148@560:1> < (1 + <check_1148@560:0>)))
        |- P[<check_1148@560:2>](<check_1148@560:0>:int,<check_1148@560:1>:int,
                                 <check_1148@560:2>:int)
        
        P[<<array_max_1033@455:3>@530:0>](<check_1148@534:0>:int,0:int,<check_1148@534:2>:int),
        P[<<make_array_1030@539:2>@551:0>](<check_1148@534:0>:int,<<check_1148@534:3>@537:0>:int,<<<check_1148@534:3>@537:1>@553:0>:int),
        P[<check_1148@534:2>](<check_1148@534:0>:int,<check_1148@534:1>:int,<check_1148@534:2>:int),
        (<check_1148@534:1> = 0)
        |- P[<<<check_1148@534:3>@537:1>@553:0>](<check_1148@534:0>:int,
                                                 <check_1148@534:1>:int,
                                                 <check_1148@534:2>:int,
                                                 <<check_1148@534:3>@537:0>:int,
                                                 <<<check_1148@534:3>@537:1>@553:0>:int)
        
        P[<make_array_1030@539:1>](<make_array_1030@539:0>:int,<make_array_1030@539:1>:int),
        ((0 <= <make_array_1030@539:1>) &&
         ((<make_array_1030@539:1> < <make_array_1030@539:0>) &&
          (<<make_array_1030@539:2>@551:0> = <make_array_1030@539:1>)))
        |- P[<<make_array_1030@539:2>@551:0>](<make_array_1030@539:0>:int,
                                              <make_array_1030@539:1>:int,
                                              <<make_array_1030@539:2>@551:0>:int)
        
        P[<<array_max_1033@455:3>@530:0>](<make_array_1030@539:0>:int,0:int,<check_1148@534:2>:int),
        P[<<check_1148@534:3>@537:0>](<make_array_1030@539:0>:int,0:int,<check_1148@534:2>:int,<make_array_1030@539:1>:int)|- P[<make_array_1030@539:1>](
        <make_array_1030@539:0>:int,<make_array_1030@539:1>:int)
        
        P[<check_1148@534:2>](<check_1148@534:0>:int,<check_1148@534:1>:int,<check_1148@534:2>:int),
        ((<check_1148@534:1> < <check_1148@534:0>) && (<<check_1148@534:3>@537:0> = <check_1148@534:1>))
        |- P[<<check_1148@534:3>@537:0>](<check_1148@534:0>:int,<check_1148@534:1>:int,
                                         <check_1148@534:2>:int,<<check_1148@534:3>@537:0>:int)
        
        P[<<array_max_1033@455:3>@530:0>](<check_1148@534:0>:int,0:int,<check_1148@534:2>:int),
        (<check_1148@534:1> = 0)
        |- P[<check_1148@534:2>](<check_1148@534:0>:int,<check_1148@534:1>:int,
                                 <check_1148@534:2>:int)
        
        P[<array_max_1033@455:1>](<array_max_1033@455:0>:int,<array_max_1033@455:1>:int),
        P[<<<array_max_1033@455:2>@458:1>@474:0>](<array_max_1033@455:0>:int,<array_max_1033@455:1>:int,<array_max_1033@455:1>:int,var1930:int),
        P[<<array_max_1033@478:3>@521:0>](<array_max_1033@455:0>:int,(
                                          1 + <array_max_1033@455:1>):int,<<array_max_1033@455:3>@530:0>:int),
        ((var1930 <= <<array_max_1033@455:3>@530:0>) && (<array_max_1033@455:1> < <array_max_1033@455:0>))
        |- P[<<array_max_1033@455:3>@530:0>](<array_max_1033@455:0>:int,
                                             <array_max_1033@455:1>:int,
                                             <<array_max_1033@455:3>@530:0>:int)
        
        P[<array_max_1033@478:1>](<array_max_1033@478:0>:int,<array_max_1033@478:1>:int),
        P[<<<array_max_1033@478:2>@481:1>@505:0>](<array_max_1033@478:0>:int,<array_max_1033@478:1>:int,<array_max_1033@478:1>:int,<<array_max_1033@478:3>@521:0>:int),
        P[<<array_max_1033@509:3>@512:0>](<array_max_1033@478:0>:int,(
                                          1 + <array_max_1033@478:1>):int,var1931:int),
        ((<<array_max_1033@478:3>@521:0> > var1931) && (<array_max_1033@478:1> < <array_max_1033@478:0>))
        |- P[<<array_max_1033@478:3>@521:0>](<array_max_1033@478:0>:int,
                                             <array_max_1033@478:1>:int,
                                             <<array_max_1033@478:3>@521:0>:int)
        
        P[<array_max_1033@509:1>](<array_max_1033@509:0>:int,<array_max_1033@509:1>:int),
        ((<<array_max_1033@509:3>@512:0> = 0) && (<array_max_1033@509:1> >= <array_max_1033@509:0>))
        |- P[<<array_max_1033@509:3>@512:0>](<array_max_1033@509:0>:int,
                                             <array_max_1033@509:1>:int,
                                             <<array_max_1033@509:3>@512:0>:int)
        
        P[<array_max_1033@478:1>](<array_max_1033@509:0>:int,(-1 + <array_max_1033@509:1>):int),
        P[<<<array_max_1033@478:2>@481:1>@505:0>](<array_max_1033@509:0>:int,(
                                                  -1 + <array_max_1033@509:1>):int,(
                                                  -1 + <array_max_1033@509:1>):int,<f_array_max_1480@507:4>:int),
        (<array_max_1033@509:1> < (1 + <array_max_1033@509:0>))
        |- P[<array_max_1033@509:1>](<array_max_1033@509:0>:int,<array_max_1033@509:1>:int)
        
        P[<<<array_max_1033@455:2>@458:1>@474:0>](<array_max_1033@478:0>:int,(
                                                  -1 + <array_max_1033@478:1>):int,(
                                                  -1 + <array_max_1033@478:1>):int,<f_array_max_1480@476:4>:int),
        P[<array_max_1033@455:1>](<array_max_1033@478:0>:int,(-1 + <array_max_1033@478:1>):int),
        P[<<<array_max_1033@455:2>@485:1>@501:0>](<array_max_1033@478:0>:int,(
                                                  -1 + <array_max_1033@478:1>):int,<<array_max_1033@478:2>@481:0>:int,<<<array_max_1033@478:2>@481:1>@505:0>:int),
        P[<array_max_1033@478:1>](<array_max_1033@478:0>:int,<array_max_1033@478:1>:int),
        (<array_max_1033@478:1> < (1 + <array_max_1033@478:0>))
        |- P[<<<array_max_1033@478:2>@481:1>@505:0>](<array_max_1033@478:0>:int,
                                                     <array_max_1033@478:1>:int,
                                                     <<array_max_1033@478:2>@481:0>:int,
                                                     <<<array_max_1033@478:2>@481:1>@505:0>:int)
        
        P[<<make_array_1030@487:2>@499:0>](<array_max_1033@455:0>:int,<<array_max_1033@455:2>@485:0>:int,<<<array_max_1033@455:2>@485:1>@501:0>:int),
        P[<array_max_1033@455:1>](<array_max_1033@455:0>:int,<array_max_1033@455:1>:int), (
        <array_max_1033@455:1> = 0)
        |- P[<<<array_max_1033@455:2>@485:1>@501:0>](<array_max_1033@455:0>:int,
                                                     <array_max_1033@455:1>:int,
                                                     <<array_max_1033@455:2>@485:0>:int,
                                                     <<<array_max_1033@455:2>@485:1>@501:0>:int)
        
        P[<make_array_1030@487:1>](<make_array_1030@487:0>:int,<make_array_1030@487:1>:int),
        ((0 <= <make_array_1030@487:1>) &&
         ((<make_array_1030@487:1> < <make_array_1030@487:0>) &&
          (<<make_array_1030@487:2>@499:0> = <make_array_1030@487:1>)))
        |- P[<<make_array_1030@487:2>@499:0>](<make_array_1030@487:0>:int,
                                              <make_array_1030@487:1>:int,
                                              <<make_array_1030@487:2>@499:0>:int)
        
        P[<<array_max_1033@455:2>@485:0>](<make_array_1030@487:0>:int,0:int,<make_array_1030@487:1>:int)|- P[<make_array_1030@487:1>](
        <make_array_1030@487:0>:int,<make_array_1030@487:1>:int)
        
        P[<array_max_1033@455:1>](<array_max_1033@455:0>:int,<array_max_1033@455:1>:int),
        P[<<<array_max_1033@455:2>@458:1>@474:0>](<array_max_1033@455:0>:int,<array_max_1033@455:1>:int,<array_max_1033@455:1>:int,var1932:int),
        P[<<array_max_1033@478:2>@481:0>](<array_max_1033@455:0>:int,(
                                          1 + <array_max_1033@455:1>):int,<<array_max_1033@455:2>@485:0>:int),
        (<array_max_1033@455:1> < <array_max_1033@455:0>)
        |- P[<<array_max_1033@455:2>@485:0>](<array_max_1033@455:0>:int,
                                             <array_max_1033@455:1>:int,
                                             <<array_max_1033@455:2>@485:0>:int)
        
        P[<array_max_1033@478:1>](<array_max_1033@478:0>:int,<array_max_1033@478:1>:int),
        ((<array_max_1033@478:1> < <array_max_1033@478:0>) && (<<array_max_1033@478:2>@481:0> = <array_max_1033@478:1>))
        |- P[<<array_max_1033@478:2>@481:0>](<array_max_1033@478:0>:int,
                                             <array_max_1033@478:1>:int,
                                             <<array_max_1033@478:2>@481:0>:int)
        
        P[<array_max_1033@455:1>](<array_max_1033@478:0>:int,(-1 + <array_max_1033@478:1>):int),
        P[<<<array_max_1033@455:2>@458:1>@474:0>](<array_max_1033@478:0>:int,(
                                                  -1 + <array_max_1033@478:1>):int,(
                                                  -1 + <array_max_1033@478:1>):int,<f_array_max_1480@476:4>:int),
        (<array_max_1033@478:1> < (1 + <array_max_1033@478:0>))
        |- P[<array_max_1033@478:1>](<array_max_1033@478:0>:int,<array_max_1033@478:1>:int)
        
        P[<<make_array_1030@460:2>@472:0>](<array_max_1033@455:0>:int,<<array_max_1033@455:2>@458:0>:int,<<<array_max_1033@455:2>@458:1>@474:0>:int),
        P[<array_max_1033@455:1>](<array_max_1033@455:0>:int,<array_max_1033@455:1>:int), (
        <array_max_1033@455:1> = 0)
        |- P[<<<array_max_1033@455:2>@458:1>@474:0>](<array_max_1033@455:0>:int,
                                                     <array_max_1033@455:1>:int,
                                                     <<array_max_1033@455:2>@458:0>:int,
                                                     <<<array_max_1033@455:2>@458:1>@474:0>:int)
        
        P[<make_array_1030@460:1>](<make_array_1030@460:0>:int,<make_array_1030@460:1>:int),
        ((0 <= <make_array_1030@460:1>) &&
         ((<make_array_1030@460:1> < <make_array_1030@460:0>) &&
          (<<make_array_1030@460:2>@472:0> = <make_array_1030@460:1>)))
        |- P[<<make_array_1030@460:2>@472:0>](<make_array_1030@460:0>:int,
                                              <make_array_1030@460:1>:int,
                                              <<make_array_1030@460:2>@472:0>:int)
        
        P[<<array_max_1033@455:2>@458:0>](<make_array_1030@460:0>:int,0:int,<make_array_1030@460:1>:int)|- P[<make_array_1030@460:1>](
        <make_array_1030@460:0>:int,<make_array_1030@460:1>:int)
        
        P[<array_max_1033@455:1>](<array_max_1033@455:0>:int,<array_max_1033@455:1>:int),
        ((<array_max_1033@455:1> < <array_max_1033@455:0>) && (<<array_max_1033@455:2>@458:0> = <array_max_1033@455:1>))
        |- P[<<array_max_1033@455:2>@458:0>](<array_max_1033@455:0>:int,
                                             <array_max_1033@455:1>:int,
                                             <<array_max_1033@455:2>@458:0>:int)
        
         (<array_max_1033@455:1> = 0)
        |- P[<array_max_1033@455:1>](<array_max_1033@455:0>:int,<array_max_1033@455:1>:int)
      lower bounds:
        P[<array_max_1033@455:1>](<array_max_1033@455:0>:int,<array_max_1033@455:1>:int) = (<array_max_1033@455:1> = 0)
        P[<<array_max_1033@455:2>@458:0>](<array_max_1033@455:0>:int,<array_max_1033@455:1>:int,<<array_max_1033@455:2>@458:0>:int) =
        ((<array_max_1033@455:1> = 0) &&
         ((<array_max_1033@455:1> < <array_max_1033@455:0>) &&
          (<<array_max_1033@455:2>@458:0> = <array_max_1033@455:1>)))
        P[<make_array_1030@460:1>](<make_array_1030@460:0>:int,<make_array_1030@460:1>:int) =
        ((<make_array_1030@460:1> = 0) && (0 < <make_array_1030@460:0>))
        P[<<make_array_1030@460:2>@472:0>](<make_array_1030@460:0>:int,<make_array_1030@460:1>:int,<<make_array_1030@460:2>@472:0>:int) =
        ((<make_array_1030@460:1> = 0) &&
         ((<make_array_1030@460:1> < <make_array_1030@460:0>) &&
          ((0 < <make_array_1030@460:0>) && (<<make_array_1030@460:2>@472:0> = <make_array_1030@460:1>))))
        P[<<<array_max_1033@455:2>@458:1>@474:0>](<array_max_1033@455:0>:int,<array_max_1033@455:1>:int,<<array_max_1033@455:2>@458:0>:int,<<<array_max_1033@455:2>@458:1>@474:0>:int) =
        ((<<array_max_1033@455:2>@458:0> = 0) &&
         ((<array_max_1033@455:1> = 0) &&
          ((<<array_max_1033@455:2>@458:0> < <array_max_1033@455:0>) &&
           ((0 < <array_max_1033@455:0>) && (<<<array_max_1033@455:2>@458:1>@474:0> = <<array_max_1033@455:2>@458:0>)))))
        P[<array_max_1033@478:1>](<array_max_1033@478:0>:int,<array_max_1033@478:1>:int) =
        ((<array_max_1033@478:1> = 1) &&
         ((0 < <array_max_1033@478:0>) && (<array_max_1033@478:1> < (1 + <array_max_1033@478:0>))))
        P[<<array_max_1033@478:2>@481:0>](<array_max_1033@478:0>:int,<array_max_1033@478:1>:int,<<array_max_1033@478:2>@481:0>:int) =
        ((<array_max_1033@478:1> = 1) &&
         ((<array_max_1033@478:1> < <array_max_1033@478:0>) &&
          ((0 < <array_max_1033@478:0>) && (<<array_max_1033@478:2>@481:0> = <array_max_1033@478:1>))))
        P[<<array_max_1033@455:2>@485:0>](<array_max_1033@455:0>:int,<array_max_1033@455:1>:int,<<array_max_1033@455:2>@485:0>:int) =
        ((<array_max_1033@455:1> = 0) &&
         (((1 + <array_max_1033@455:1>) < <array_max_1033@455:0>) &&
          ((0 < <array_max_1033@455:0>) && (<<array_max_1033@455:2>@485:0> = (1 + <array_max_1033@455:1>)))))
        P[<make_array_1030@487:1>](<make_array_1030@487:0>:int,<make_array_1030@487:1>:int) =
        ((<make_array_1030@487:1> = 1) && (1 < <make_array_1030@487:0>))
        P[<<make_array_1030@487:2>@499:0>](<make_array_1030@487:0>:int,<make_array_1030@487:1>:int,<<make_array_1030@487:2>@499:0>:int) =
        ((<make_array_1030@487:1> = 1) &&
         ((<make_array_1030@487:1> < <make_array_1030@487:0>) &&
          ((1 < <make_array_1030@487:0>) && (<<make_array_1030@487:2>@499:0> = <make_array_1030@487:1>))))
        P[<<<array_max_1033@455:2>@485:1>@501:0>](<array_max_1033@455:0>:int,<array_max_1033@455:1>:int,<<array_max_1033@455:2>@485:0>:int,<<<array_max_1033@455:2>@485:1>@501:0>:int) =
        ((<<array_max_1033@455:2>@485:0> = 1) &&
         ((<array_max_1033@455:1> = 0) &&
          ((<<array_max_1033@455:2>@485:0> < <array_max_1033@455:0>) &&
           ((1 < <array_max_1033@455:0>) && (<<<array_max_1033@455:2>@485:1>@501:0> = <<array_max_1033@455:2>@485:0>)))))
        P[<<<array_max_1033@478:2>@481:1>@505:0>](<array_max_1033@478:0>:int,<array_max_1033@478:1>:int,<<array_max_1033@478:2>@481:0>:int,<<<array_max_1033@478:2>@481:1>@505:0>:int) =
        ((<array_max_1033@478:1> = 1) &&
         ((<<array_max_1033@478:2>@481:0> = 1) &&
          ((<<<array_max_1033@478:2>@481:1>@505:0> = <<array_max_1033@478:2>@481:0>) &&
           ((<array_max_1033@478:1> < (1 + <array_max_1033@478:0>)) &&
            ((1 < <array_max_1033@478:0>) && (<<array_max_1033@478:2>@481:0> < <array_max_1033@478:0>))))))
        P[<array_max_1033@509:1>](<array_max_1033@509:0>:int,<array_max_1033@509:1>:int) =
        ((<array_max_1033@509:1> = 2) &&
         ((<array_max_1033@509:1> < (1 + <array_max_1033@509:0>)) && (1 < <array_max_1033@509:0>)))
        P[<<array_max_1033@509:3>@512:0>](<array_max_1033@509:0>:int,<array_max_1033@509:1>:int,<<array_max_1033@509:3>@512:0>:int) =
        ((<<array_max_1033@509:3>@512:0> = 0) &&
         ((<array_max_1033@509:1> = 2) &&
          ((1 < <array_max_1033@509:0>) && (<array_max_1033@509:1> = <array_max_1033@509:0>))))
        P[<<array_max_1033@478:3>@521:0>](<array_max_1033@478:0>:int,<array_max_1033@478:1>:int,<<array_max_1033@478:3>@521:0>:int) =
        ((<array_max_1033@478:1> = 1) &&
         ((<<array_max_1033@478:3>@521:0> = <array_max_1033@478:1>) &&
          (((1 + <array_max_1033@478:1>) = <array_max_1033@478:0>) &&
           ((1 < <array_max_1033@478:0>) && (<<array_max_1033@478:3>@521:0> > 0)))))
        P[<<array_max_1033@455:3>@530:0>](<array_max_1033@455:0>:int,<array_max_1033@455:1>:int,<<array_max_1033@455:3>@530:0>:int) =
        ((<array_max_1033@455:1> = 0) &&
         (((1 + <array_max_1033@455:1>) = <<array_max_1033@455:3>@530:0>) &&
          (((2 + <array_max_1033@455:1>) = <array_max_1033@455:0>) &&
           ((1 < <array_max_1033@455:0>) && (<<array_max_1033@455:3>@530:0> > 0)))))
        P[<check_1148@534:2>](<check_1148@534:0>:int,<check_1148@534:1>:int,<check_1148@534:2>:int) =
        ((<check_1148@534:1> = 0) && ((<check_1148@534:2> = 1) && (<check_1148@534:0> = 2)))
        P[<<check_1148@534:3>@537:0>](<check_1148@534:0>:int,<check_1148@534:1>:int,<check_1148@534:2>:int,<<check_1148@534:3>@537:0>:int) =
        ((<check_1148@534:1> = 0) &&
         ((<check_1148@534:2> = 1) && ((<check_1148@534:0> = 2) && (<<check_1148@534:3>@537:0> = <check_1148@534:1>))))
        P[<make_array_1030@539:1>](<make_array_1030@539:0>:int,<make_array_1030@539:1>:int) =
        ((<make_array_1030@539:1> = 0) && (<make_array_1030@539:0> = 2))
        P[<<make_array_1030@539:2>@551:0>](<make_array_1030@539:0>:int,<make_array_1030@539:1>:int,<<make_array_1030@539:2>@551:0>:int) =
        ((<make_array_1030@539:1> = 0) &&
         ((<make_array_1030@539:0> = 2) && (<<make_array_1030@539:2>@551:0> = <make_array_1030@539:1>)))
        P[<<<check_1148@534:3>@537:1>@553:0>](<check_1148@534:0>:int,<check_1148@534:1>:int,<check_1148@534:2>:int,<<check_1148@534:3>@537:0>:int,<<<check_1148@534:3>@537:1>@553:0>:int) =
        ((<check_1148@534:2> = 1) &&
         ((<check_1148@534:0> = 2) &&
          ((<<check_1148@534:3>@537:0> = 0) &&
           ((<check_1148@534:1> = 0) && (<<<check_1148@534:3>@537:1>@553:0> = <<check_1148@534:3>@537:0>)))))
        P[<check_1148@560:2>](<check_1148@560:0>:int,<check_1148@560:1>:int,<check_1148@560:2>:int) =
        ((<check_1148@560:1> = 1) && ((<check_1148@560:0> = 2) && (<check_1148@560:2> = 1)))
        P[<<check_1148@560:3>@563:0>](<check_1148@560:0>:int,<check_1148@560:1>:int,<check_1148@560:2>:int,<<check_1148@560:3>@563:0>:int) =
        ((<check_1148@560:1> = 1) &&
         ((<check_1148@560:0> = 2) && ((<check_1148@560:2> = 1) && (<<check_1148@560:3>@563:0> = <check_1148@560:1>))))
        P[<<check_1148@534:3>@569:0>](<check_1148@534:0>:int,<check_1148@534:1>:int,<check_1148@534:2>:int,<<check_1148@534:3>@569:0>:int) =
        ((<check_1148@534:1> = 0) &&
         ((<check_1148@534:0> = 2) &&
          ((<check_1148@534:2> = 1) && (<<check_1148@534:3>@569:0> = (1 + <check_1148@534:1>)))))
        P[<make_array_1030@571:1>](<make_array_1030@571:0>:int,<make_array_1030@571:1>:int) =
        ((<make_array_1030@571:1> = 1) && (<make_array_1030@571:0> = 2))
        P[<<make_array_1030@571:2>@583:0>](<make_array_1030@571:0>:int,<make_array_1030@571:1>:int,<<make_array_1030@571:2>@583:0>:int) =
        ((<make_array_1030@571:1> = 1) &&
         ((<make_array_1030@571:0> = 2) && (<<make_array_1030@571:2>@583:0> = <make_array_1030@571:1>)))
        P[<<<check_1148@534:3>@569:1>@585:0>](<check_1148@534:0>:int,<check_1148@534:1>:int,<check_1148@534:2>:int,<<check_1148@534:3>@569:0>:int,<<<check_1148@534:3>@569:1>@585:0>:int) =
        ((<check_1148@534:2> = 1) &&
         ((<check_1148@534:0> = 2) &&
          ((<<check_1148@534:3>@569:0> = 1) &&
           ((<check_1148@534:1> = 0) && (<<<check_1148@534:3>@569:1>@585:0> = <<check_1148@534:3>@569:0>)))))
        P[<<<check_1148@560:3>@563:1>@591:0>](<check_1148@560:0>:int,<check_1148@560:1>:int,<check_1148@560:2>:int,<<check_1148@560:3>@563:0>:int,<<<check_1148@560:3>@563:1>@591:0>:int) =
        ((<check_1148@560:2> = 1) &&
         ((<check_1148@560:0> = 2) &&
          ((<check_1148@560:1> = 1) &&
           ((<<check_1148@560:3>@563:0> = 1) && (<<<check_1148@560:3>@563:1>@591:0> = <<check_1148@560:3>@563:0>)))))
        P[<fail_1487@596:0>](<fail_1487@596:0>:bool) = false
      upper bounds:
        P[<<make_array_1030@571:2>@583:0>](var2005:int,var2006:int,var2007:int) =
        ((var2005 <> 2) || ((var2006 <> 1) || (var2007 <= 1)))
        P[<<make_array_1030@539:2>@551:0>](var2001:int,var2002:int,var2003:int) = true
        P[<<make_array_1030@487:2>@499:0>](var1986:int,var1987:int,var1988:int) = true
        P[<<make_array_1030@460:2>@472:0>](var1975:int,var1976:int,var1977:int) = true
      begin GenHcSolver.classify_pids(1067939)[4]
        output:
          [<<make_array_1030@460:2>@472:0>;<<make_array_1030@487:2>@499:0>;<<make_array_1030@539:2>@551:0>;<<make_array_1030@571:2>@583:0>]
      end GenHcSolver.classify_pids(1067939)[4] (0.001000 sec.)
      begin ApronInterface.convex_hull_interpolate(1068041)[4]
        lb:(((<make_array_1030@460:1> = 0) &&
             ((<make_array_1030@460:1> < <make_array_1030@460:0>) &&
              ((0 < <make_array_1030@460:0>) && (<<make_array_1030@460:2>@472:0> = <make_array_1030@460:1>)))) ||
            (((<make_array_1030@460:1> = 1) &&
              ((<make_array_1030@460:1> < <make_array_1030@460:0>) &&
               ((1 < <make_array_1030@460:0>) && (<<make_array_1030@460:2>@472:0> = <make_array_1030@460:1>)))) ||
             (((<make_array_1030@460:1> = 0) &&
               ((<make_array_1030@460:0> = 2) && (<<make_array_1030@460:2>@472:0> = <make_array_1030@460:1>))) ||
              ((<make_array_1030@460:1> = 1) &&
               ((<make_array_1030@460:0> = 2) && (<<make_array_1030@460:2>@472:0> = <make_array_1030@460:1>))))))
        nub:(not
               ((<make_array_1030@460:0> <> 2) ||
                ((<make_array_1030@460:1> <> 1) || (<<make_array_1030@460:2>@472:0> <= 1))))
        lb':(((<make_array_1030@460:1> = 0) &&
              ((<make_array_1030@460:1> < <make_array_1030@460:0>) &&
               ((0 < <make_array_1030@460:0>) && (<<make_array_1030@460:2>@472:0> = <make_array_1030@460:1>)))) ||
             (((<make_array_1030@460:1> = 1) &&
               ((<make_array_1030@460:1> < <make_array_1030@460:0>) &&
                ((1 < <make_array_1030@460:0>) && (<<make_array_1030@460:2>@472:0> = <make_array_1030@460:1>)))) ||
              (((<make_array_1030@460:1> = 0) &&
                ((<make_array_1030@460:0> = 2) && (<<make_array_1030@460:2>@472:0> = <make_array_1030@460:1>))) ||
               ((<make_array_1030@460:1> = 1) &&
                ((<make_array_1030@460:0> = 2) && (<<make_array_1030@460:2>@472:0> = <make_array_1030@460:1>))))))
        nub':(not
                ((<make_array_1030@460:0> <> 2) ||
                 ((<make_array_1030@460:1> <> 1) || (<<make_array_1030@460:2>@472:0> <= 1))))
        begin InterpProver.interpolate(1068042)[5]
          begin InterpProver.interpolate_fresh(1068043)[6]
            begin InterpProver.interpolate_log(1068044)[7]
              input1: (((<make_array_1030@460:1> = 0) &&
                        ((<make_array_1030@460:1> < <make_array_1030@460:0>) &&
                         ((0 < <make_array_1030@460:0>) && (<<make_array_1030@460:2>@472:0> = <make_array_1030@460:1>)))) ||
                       (((<make_array_1030@460:1> = 1) &&
                         ((<make_array_1030@460:1> < <make_array_1030@460:0>) &&
                          ((1 < <make_array_1030@460:0>) && (<<make_array_1030@460:2>@472:0> = <make_array_1030@460:1>)))) ||
                        (((<make_array_1030@460:1> = 0) &&
                          ((<make_array_1030@460:0> = 2) && (<<make_array_1030@460:2>@472:0> = <make_array_1030@460:1>))) ||
                         ((<make_array_1030@460:1> = 1) &&
                          ((<make_array_1030@460:0> = 2) && (<<make_array_1030@460:2>@472:0> = <make_array_1030@460:1>))))))
              input2: (not
                         ((<make_array_1030@460:0> <> 2) ||
                          ((<make_array_1030@460:1> <> 1) || (<<make_array_1030@460:2>@472:0> <= 1))))
              begin InterpProver.interpolate_check(1068045)[8]
                begin InterpProver.interpolate_simplify(1068046)[9]
                  begin InterpProver.interpolate_quick(1068564)[10]
                    begin CsisatInterface.interpolate_csisat_wrap(1068573)[11]
                      begin CsisatInterface.interpolate_csisat_post_process(1068574)[12]
                        begin CsisatInterface.interpolate_csisat_log(1068575)[13]
                          input1: ((((0 = v_sep_make_array_1030_sep_460_sep_1 | 1 = v_sep_make_array_1030_sep_460_sep_1) & 2 = v_sep_make_array_1030_sep_460_sep_0) | (0 = v_sep_make_array_1030_sep_460_sep_1 & 1 <= v_sep_make_array_1030_sep_460_sep_0 & (1 + v_sep_make_array_1030_sep_460_sep_1) <= v_sep_make_array_1030_sep_460_sep_0) | (1 = v_sep_make_array_1030_sep_460_sep_1 & 2 <= v_sep_make_array_1030_sep_460_sep_0 & (1 + v_sep_make_array_1030_sep_460_sep_1) <= v_sep_make_array_1030_sep_460_sep_0)) & v_sep_make_array_1030_sep_460_sep_1 = v_sep_make_array_1030_sep_460_sep_2_sep_472_sep_0)
                          input2: (1 = v_sep_make_array_1030_sep_460_sep_1 & 2 = v_sep_make_array_1030_sep_460_sep_0 & 2 <= v_sep_make_array_1030_sep_460_sep_2_sep_472_sep_0)
                          begin CsisatInterface.interpolate_csisat_raw(1068576)[14]
                            
                          end CsisatInterface.interpolate_csisat_raw(1068576)[14] (0.003999 sec.)
                          output: (not 1 = v_sep_make_array_1030_sep_460_sep_1 | not 2 = v_sep_make_array_1030_sep_460_sep_0 | 2*v_sep_make_array_1030_sep_460_sep_2_sep_472_sep_0 <= 2)
                          
                        end CsisatInterface.interpolate_csisat_log(1068575)[13] (0.004999 sec.)
                        after simplification: (not 1 = v_sep_make_array_1030_sep_460_sep_1 | not 2 = v_sep_make_array_1030_sep_460_sep_0 | 2*v_sep_make_array_1030_sep_460_sep_2_sep_472_sep_0 <= 2)
                        after dnf conversion: ((not 1 = v_sep_make_array_1030_sep_460_sep_1) | (not 2 = v_sep_make_array_1030_sep_460_sep_0) | (2*v_sep_make_array_1030_sep_460_sep_2_sep_472_sep_0 <= 2))
                        
                      end CsisatInterface.interpolate_csisat_post_process(1068574)[12] (0.004999 sec.)
                      
                    end CsisatInterface.interpolate_csisat_wrap(1068573)[11] (0.004999 sec.)
                    
                  end InterpProver.interpolate_quick(1068564)[10] (0.004999 sec.)
                  begin minimizing # of disjunctions(1068597)[10]
                    input: ((1 <> <make_array_1030@460:1>) ||
                            ((2 <> <make_array_1030@460:0>) || (<<make_array_1030@460:2>@472:0> <= 1)))
                    output: (<<make_array_1030@460:2>@472:0> <= 1)
                  end minimizing # of disjunctions(1068597)[10] (0.001000 sec.)
                  
                end InterpProver.interpolate_simplify(1068046)[9] (0.008999 sec.)
                
              end InterpProver.interpolate_check(1068045)[8] (0.009999 sec.)
              output: (<<make_array_1030@460:2>@472:0> <= 1)
            end InterpProver.interpolate_log(1068044)[7] (0.009999 sec.)
            
          end InterpProver.interpolate_fresh(1068043)[6] (0.009999 sec.)
          
        end InterpProver.interpolate(1068042)[5] (0.009999 sec.)
        output:
          P[<<make_array_1030@460:2>@472:0>](<make_array_1030@460:0>:int,<make_array_1030@460:1>:int,<<make_array_1030@460:2>@472:0>:int) =
          (<<make_array_1030@460:2>@472:0> <= 1)
          P[<<make_array_1030@487:2>@499:0>](<make_array_1030@460:0>:int,<make_array_1030@460:1>:int,<<make_array_1030@460:2>@472:0>:int) =
          (<<make_array_1030@460:2>@472:0> <= 1)
          P[<<make_array_1030@539:2>@551:0>](<make_array_1030@460:0>:int,<make_array_1030@460:1>:int,<<make_array_1030@460:2>@472:0>:int) =
          (<<make_array_1030@460:2>@472:0> <= 1)
          P[<<make_array_1030@571:2>@583:0>](<make_array_1030@460:0>:int,<make_array_1030@460:1>:int,<<make_array_1030@460:2>@472:0>:int) =
          (<<make_array_1030@460:2>@472:0> <= 1)
      end ApronInterface.convex_hull_interpolate(1068041)[4] (0.009999 sec.)
      Horn clauses:
        P[<fail_1487@596:0>](<fail_1487@596:0>:bool)|- bot
        
        P[<check_1148@560:2>](<f_check_1482@593:2>:int,<f_check_1482@593:0>:int,<f_check_1482@593:1>:int),
        P[<<<check_1148@560:3>@563:1>@591:0>](<f_check_1482@593:2>:int,<f_check_1482@593:0>:int,<f_check_1482@593:1>:int,<f_check_1482@593:0>:int,<f_check_1482@593:5>:int),
        ((<f_check_1482@593:5> > <f_check_1482@593:1>) &&
         ((<f_check_1482@593:0> < <f_check_1482@593:2>) && <fail_1487@596:0>))
        |- P[<fail_1487@596:0>](<fail_1487@596:0>:bool)
        
        P[<<<check_1148@534:3>@537:1>@553:0>](<check_1148@560:0>:int,(
                                              -1 + <check_1148@560:1>):int,<check_1148@560:2>:int,(
                                              -1 + <check_1148@560:1>):int,var1927:int),
        P[<check_1148@534:2>](<check_1148@560:0>:int,(-1 + <check_1148@560:1>):int,<check_1148@560:2>:int),
        P[<<<check_1148@534:3>@569:1>@585:0>](<check_1148@560:0>:int,(
                                              -1 + <check_1148@560:1>):int,<check_1148@560:2>:int,<<check_1148@560:3>@563:0>:int,<<<check_1148@560:3>@563:1>@591:0>:int),
        P[<check_1148@560:2>](<check_1148@560:0>:int,<check_1148@560:1>:int,<check_1148@560:2>:int),
        ((var1927 <= <check_1148@560:2>) && (<check_1148@560:1> < (1 + <check_1148@560:0>)))
        |- P[<<<check_1148@560:3>@563:1>@591:0>](<check_1148@560:0>:int,
                                                 <check_1148@560:1>:int,
                                                 <check_1148@560:2>:int,
                                                 <<check_1148@560:3>@563:0>:int,
                                                 <<<check_1148@560:3>@563:1>@591:0>:int)
        
        P[<<array_max_1033@455:3>@530:0>](<check_1148@534:0>:int,0:int,<check_1148@534:2>:int),
        P[<check_1148@534:2>](<check_1148@534:0>:int,<check_1148@534:1>:int,<check_1148@534:2>:int),
        ((<check_1148@534:1> = 0) && (<<<check_1148@534:3>@569:1>@585:0> <= 1))
        |- P[<<<check_1148@534:3>@569:1>@585:0>](<check_1148@534:0>:int,
                                                 <check_1148@534:1>:int,
                                                 <check_1148@534:2>:int,
                                                 <<check_1148@534:3>@569:0>:int,
                                                 <<<check_1148@534:3>@569:1>@585:0>:int)
        
        P[<make_array_1030@571:1>](<make_array_1030@571:0>:int,<<make_array_1030@571:2>@583:0>:int),
        ((1 < <<make_array_1030@571:2>@583:0>) && (<<make_array_1030@571:2>@583:0> < <make_array_1030@571:0>)) |- bot
        
        P[<<array_max_1033@455:3>@530:0>](<make_array_1030@571:0>:int,0:int,<check_1148@534:2>:int),
        P[<<check_1148@534:3>@569:0>](<make_array_1030@571:0>:int,0:int,<check_1148@534:2>:int,<make_array_1030@571:1>:int)|- P[<make_array_1030@571:1>](
        <make_array_1030@571:0>:int,<make_array_1030@571:1>:int)
        
        P[<<<check_1148@534:3>@537:1>@553:0>](<check_1148@534:0>:int,<check_1148@534:1>:int,<check_1148@534:2>:int,<check_1148@534:1>:int,var1928:int),
        P[<check_1148@534:2>](<check_1148@534:0>:int,<check_1148@534:1>:int,<check_1148@534:2>:int),
        P[<<check_1148@560:3>@563:0>](<check_1148@534:0>:int,(1 + <check_1148@534:1>):int,<check_1148@534:2>:int,<<check_1148@534:3>@569:0>:int),
        ((var1928 <= <check_1148@534:2>) && (<check_1148@534:1> < <check_1148@534:0>))
        |- P[<<check_1148@534:3>@569:0>](<check_1148@534:0>:int,<check_1148@534:1>:int,
                                         <check_1148@534:2>:int,<<check_1148@534:3>@569:0>:int)
        
        P[<check_1148@560:2>](<check_1148@560:0>:int,<check_1148@560:1>:int,<check_1148@560:2>:int),
        ((<check_1148@560:1> < <check_1148@560:0>) && (<<check_1148@560:3>@563:0> = <check_1148@560:1>))
        |- P[<<check_1148@560:3>@563:0>](<check_1148@560:0>:int,<check_1148@560:1>:int,
                                         <check_1148@560:2>:int,<<check_1148@560:3>@563:0>:int)
        
        P[<check_1148@534:2>](<check_1148@560:0>:int,(-1 + <check_1148@560:1>):int,<check_1148@560:2>:int),
        P[<<<check_1148@534:3>@537:1>@553:0>](<check_1148@560:0>:int,(
                                              -1 + <check_1148@560:1>):int,<check_1148@560:2>:int,(
                                              -1 + <check_1148@560:1>):int,var1929:int),
        ((var1929 <= <check_1148@560:2>) && (<check_1148@560:1> < (1 + <check_1148@560:0>)))
        |- P[<check_1148@560:2>](<check_1148@560:0>:int,<check_1148@560:1>:int,
                                 <check_1148@560:2>:int)
        
        P[<<array_max_1033@455:3>@530:0>](<check_1148@534:0>:int,0:int,<check_1148@534:2>:int),
        P[<check_1148@534:2>](<check_1148@534:0>:int,<check_1148@534:1>:int,<check_1148@534:2>:int),
        ((<check_1148@534:1> = 0) && (<<<check_1148@534:3>@537:1>@553:0> <= 1))
        |- P[<<<check_1148@534:3>@537:1>@553:0>](<check_1148@534:0>:int,
                                                 <check_1148@534:1>:int,
                                                 <check_1148@534:2>:int,
                                                 <<check_1148@534:3>@537:0>:int,
                                                 <<<check_1148@534:3>@537:1>@553:0>:int)
        
        P[<make_array_1030@539:1>](<make_array_1030@539:0>:int,<<make_array_1030@539:2>@551:0>:int),
        ((1 < <<make_array_1030@539:2>@551:0>) && (<<make_array_1030@539:2>@551:0> < <make_array_1030@539:0>)) |- bot
        
        P[<<array_max_1033@455:3>@530:0>](<make_array_1030@539:0>:int,0:int,<check_1148@534:2>:int),
        P[<<check_1148@534:3>@537:0>](<make_array_1030@539:0>:int,0:int,<check_1148@534:2>:int,<make_array_1030@539:1>:int)|- P[<make_array_1030@539:1>](
        <make_array_1030@539:0>:int,<make_array_1030@539:1>:int)
        
        P[<check_1148@534:2>](<check_1148@534:0>:int,<check_1148@534:1>:int,<check_1148@534:2>:int),
        ((<check_1148@534:1> < <check_1148@534:0>) && (<<check_1148@534:3>@537:0> = <check_1148@534:1>))
        |- P[<<check_1148@534:3>@537:0>](<check_1148@534:0>:int,<check_1148@534:1>:int,
                                         <check_1148@534:2>:int,<<check_1148@534:3>@537:0>:int)
        
        P[<<array_max_1033@455:3>@530:0>](<check_1148@534:0>:int,0:int,<check_1148@534:2>:int),
        (<check_1148@534:1> = 0)
        |- P[<check_1148@534:2>](<check_1148@534:0>:int,<check_1148@534:1>:int,
                                 <check_1148@534:2>:int)
        
        P[<array_max_1033@455:1>](<array_max_1033@455:0>:int,<array_max_1033@455:1>:int),
        P[<<<array_max_1033@455:2>@458:1>@474:0>](<array_max_1033@455:0>:int,<array_max_1033@455:1>:int,<array_max_1033@455:1>:int,var1930:int),
        P[<<array_max_1033@478:3>@521:0>](<array_max_1033@455:0>:int,(
                                          1 + <array_max_1033@455:1>):int,<<array_max_1033@455:3>@530:0>:int),
        ((var1930 <= <<array_max_1033@455:3>@530:0>) && (<array_max_1033@455:1> < <array_max_1033@455:0>))
        |- P[<<array_max_1033@455:3>@530:0>](<array_max_1033@455:0>:int,
                                             <array_max_1033@455:1>:int,
                                             <<array_max_1033@455:3>@530:0>:int)
        
        P[<array_max_1033@478:1>](<array_max_1033@478:0>:int,<array_max_1033@478:1>:int),
        P[<<<array_max_1033@478:2>@481:1>@505:0>](<array_max_1033@478:0>:int,<array_max_1033@478:1>:int,<array_max_1033@478:1>:int,<<array_max_1033@478:3>@521:0>:int),
        P[<<array_max_1033@509:3>@512:0>](<array_max_1033@478:0>:int,(
                                          1 + <array_max_1033@478:1>):int,var1931:int),
        ((<<array_max_1033@478:3>@521:0> > var1931) && (<array_max_1033@478:1> < <array_max_1033@478:0>))
        |- P[<<array_max_1033@478:3>@521:0>](<array_max_1033@478:0>:int,
                                             <array_max_1033@478:1>:int,
                                             <<array_max_1033@478:3>@521:0>:int)
        
        P[<array_max_1033@509:1>](<array_max_1033@509:0>:int,<array_max_1033@509:1>:int),
        ((<<array_max_1033@509:3>@512:0> = 0) && (<array_max_1033@509:1> >= <array_max_1033@509:0>))
        |- P[<<array_max_1033@509:3>@512:0>](<array_max_1033@509:0>:int,
                                             <array_max_1033@509:1>:int,
                                             <<array_max_1033@509:3>@512:0>:int)
        
        P[<array_max_1033@478:1>](<array_max_1033@509:0>:int,(-1 + <array_max_1033@509:1>):int),
        P[<<<array_max_1033@478:2>@481:1>@505:0>](<array_max_1033@509:0>:int,(
                                                  -1 + <array_max_1033@509:1>):int,(
                                                  -1 + <array_max_1033@509:1>):int,<f_array_max_1480@507:4>:int),
        (<array_max_1033@509:1> < (1 + <array_max_1033@509:0>))
        |- P[<array_max_1033@509:1>](<array_max_1033@509:0>:int,<array_max_1033@509:1>:int)
        
        P[<<<array_max_1033@455:2>@458:1>@474:0>](<array_max_1033@478:0>:int,(
                                                  -1 + <array_max_1033@478:1>):int,(
                                                  -1 + <array_max_1033@478:1>):int,<f_array_max_1480@476:4>:int),
        P[<array_max_1033@455:1>](<array_max_1033@478:0>:int,(-1 + <array_max_1033@478:1>):int),
        P[<<<array_max_1033@455:2>@485:1>@501:0>](<array_max_1033@478:0>:int,(
                                                  -1 + <array_max_1033@478:1>):int,<<array_max_1033@478:2>@481:0>:int,<<<array_max_1033@478:2>@481:1>@505:0>:int),
        P[<array_max_1033@478:1>](<array_max_1033@478:0>:int,<array_max_1033@478:1>:int),
        (<array_max_1033@478:1> < (1 + <array_max_1033@478:0>))
        |- P[<<<array_max_1033@478:2>@481:1>@505:0>](<array_max_1033@478:0>:int,
                                                     <array_max_1033@478:1>:int,
                                                     <<array_max_1033@478:2>@481:0>:int,
                                                     <<<array_max_1033@478:2>@481:1>@505:0>:int)
        
        P[<array_max_1033@455:1>](<array_max_1033@455:0>:int,<array_max_1033@455:1>:int),
        ((<array_max_1033@455:1> = 0) && (<<<array_max_1033@455:2>@485:1>@501:0> <= 1))
        |- P[<<<array_max_1033@455:2>@485:1>@501:0>](<array_max_1033@455:0>:int,
                                                     <array_max_1033@455:1>:int,
                                                     <<array_max_1033@455:2>@485:0>:int,
                                                     <<<array_max_1033@455:2>@485:1>@501:0>:int)
        
        P[<make_array_1030@487:1>](<make_array_1030@487:0>:int,<<make_array_1030@487:2>@499:0>:int),
        ((1 < <<make_array_1030@487:2>@499:0>) && (<<make_array_1030@487:2>@499:0> < <make_array_1030@487:0>)) |- bot
        
        P[<<array_max_1033@455:2>@485:0>](<make_array_1030@487:0>:int,0:int,<make_array_1030@487:1>:int)|- P[<make_array_1030@487:1>](
        <make_array_1030@487:0>:int,<make_array_1030@487:1>:int)
        
        P[<array_max_1033@455:1>](<array_max_1033@455:0>:int,<array_max_1033@455:1>:int),
        P[<<<array_max_1033@455:2>@458:1>@474:0>](<array_max_1033@455:0>:int,<array_max_1033@455:1>:int,<array_max_1033@455:1>:int,var1932:int),
        P[<<array_max_1033@478:2>@481:0>](<array_max_1033@455:0>:int,(
                                          1 + <array_max_1033@455:1>):int,<<array_max_1033@455:2>@485:0>:int),
        (<array_max_1033@455:1> < <array_max_1033@455:0>)
        |- P[<<array_max_1033@455:2>@485:0>](<array_max_1033@455:0>:int,
                                             <array_max_1033@455:1>:int,
                                             <<array_max_1033@455:2>@485:0>:int)
        
        P[<array_max_1033@478:1>](<array_max_1033@478:0>:int,<array_max_1033@478:1>:int),
        ((<array_max_1033@478:1> < <array_max_1033@478:0>) && (<<array_max_1033@478:2>@481:0> = <array_max_1033@478:1>))
        |- P[<<array_max_1033@478:2>@481:0>](<array_max_1033@478:0>:int,
                                             <array_max_1033@478:1>:int,
                                             <<array_max_1033@478:2>@481:0>:int)
        
        P[<array_max_1033@455:1>](<array_max_1033@478:0>:int,(-1 + <array_max_1033@478:1>):int),
        P[<<<array_max_1033@455:2>@458:1>@474:0>](<array_max_1033@478:0>:int,(
                                                  -1 + <array_max_1033@478:1>):int,(
                                                  -1 + <array_max_1033@478:1>):int,<f_array_max_1480@476:4>:int),
        (<array_max_1033@478:1> < (1 + <array_max_1033@478:0>))
        |- P[<array_max_1033@478:1>](<array_max_1033@478:0>:int,<array_max_1033@478:1>:int)
        
        P[<array_max_1033@455:1>](<array_max_1033@455:0>:int,<array_max_1033@455:1>:int),
        ((<array_max_1033@455:1> = 0) && (<<<array_max_1033@455:2>@458:1>@474:0> <= 1))
        |- P[<<<array_max_1033@455:2>@458:1>@474:0>](<array_max_1033@455:0>:int,
                                                     <array_max_1033@455:1>:int,
                                                     <<array_max_1033@455:2>@458:0>:int,
                                                     <<<array_max_1033@455:2>@458:1>@474:0>:int)
        
        P[<make_array_1030@460:1>](<make_array_1030@460:0>:int,<<make_array_1030@460:2>@472:0>:int),
        ((1 < <<make_array_1030@460:2>@472:0>) && (<<make_array_1030@460:2>@472:0> < <make_array_1030@460:0>)) |- bot
        
        P[<<array_max_1033@455:2>@458:0>](<make_array_1030@460:0>:int,0:int,<make_array_1030@460:1>:int)|- P[<make_array_1030@460:1>](
        <make_array_1030@460:0>:int,<make_array_1030@460:1>:int)
        
        P[<array_max_1033@455:1>](<array_max_1033@455:0>:int,<array_max_1033@455:1>:int),
        ((<array_max_1033@455:1> < <array_max_1033@455:0>) && (<<array_max_1033@455:2>@458:0> = <array_max_1033@455:1>))
        |- P[<<array_max_1033@455:2>@458:0>](<array_max_1033@455:0>:int,
                                             <array_max_1033@455:1>:int,
                                             <<array_max_1033@455:2>@458:0>:int)
        
         (<array_max_1033@455:1> = 0)
        |- P[<array_max_1033@455:1>](<array_max_1033@455:0>:int,<array_max_1033@455:1>:int)
      lower bounds:
        P[<array_max_1033@455:1>](<array_max_1033@455:0>:int,<array_max_1033@455:1>:int) = (<array_max_1033@455:1> = 0)
        P[<<<array_max_1033@455:2>@485:1>@501:0>](<array_max_1033@455:0>:int,<array_max_1033@455:1>:int,<<array_max_1033@455:2>@485:0>:int,<<<array_max_1033@455:2>@485:1>@501:0>:int) =
        ((<array_max_1033@455:1> = 0) && (<<<array_max_1033@455:2>@485:1>@501:0> <= 1))
        P[<<<array_max_1033@455:2>@458:1>@474:0>](<array_max_1033@455:0>:int,<array_max_1033@455:1>:int,<<array_max_1033@455:2>@458:0>:int,<<<array_max_1033@455:2>@458:1>@474:0>:int) =
        ((<array_max_1033@455:1> = 0) && (<<<array_max_1033@455:2>@458:1>@474:0> <= 1))
        P[<<array_max_1033@455:2>@458:0>](<array_max_1033@455:0>:int,<array_max_1033@455:1>:int,<<array_max_1033@455:2>@458:0>:int) =
        ((<array_max_1033@455:1> = 0) &&
         ((<array_max_1033@455:1> < <array_max_1033@455:0>) &&
          (<<array_max_1033@455:2>@458:0> = <array_max_1033@455:1>)))
        P[<array_max_1033@478:1>](<array_max_1033@478:0>:int,<array_max_1033@478:1>:int) =
        ((<array_max_1033@478:1> = 1) && (<array_max_1033@478:1> < (1 + <array_max_1033@478:0>)))
        P[<make_array_1030@460:1>](<make_array_1030@460:0>:int,<make_array_1030@460:1>:int) =
        ((<make_array_1030@460:1> = 0) && (0 < <make_array_1030@460:0>))
        P[<<<array_max_1033@478:2>@481:1>@505:0>](<array_max_1033@478:0>:int,<array_max_1033@478:1>:int,<<array_max_1033@478:2>@481:0>:int,<<<array_max_1033@478:2>@481:1>@505:0>:int) =
        ((<array_max_1033@478:1> = 1) &&
         ((<<<array_max_1033@478:2>@481:1>@505:0> <= 1) && (<array_max_1033@478:1> < (1 + <array_max_1033@478:0>))))
        P[<<array_max_1033@478:2>@481:0>](<array_max_1033@478:0>:int,<array_max_1033@478:1>:int,<<array_max_1033@478:2>@481:0>:int) =
        ((<array_max_1033@478:1> = 1) &&
         ((<array_max_1033@478:1> < <array_max_1033@478:0>) &&
          (<<array_max_1033@478:2>@481:0> = <array_max_1033@478:1>)))
        P[<array_max_1033@509:1>](<array_max_1033@509:0>:int,<array_max_1033@509:1>:int) =
        ((<array_max_1033@509:1> = 2) && (<array_max_1033@509:1> < (1 + <array_max_1033@509:0>)))
        P[<<array_max_1033@455:2>@485:0>](<array_max_1033@455:0>:int,<array_max_1033@455:1>:int,<<array_max_1033@455:2>@485:0>:int) =
        ((<array_max_1033@455:1> = 0) &&
         (((1 + <array_max_1033@455:1>) < <array_max_1033@455:0>) &&
          (<<array_max_1033@455:2>@485:0> = (1 + <array_max_1033@455:1>))))
        P[<<array_max_1033@509:3>@512:0>](<array_max_1033@509:0>:int,<array_max_1033@509:1>:int,<<array_max_1033@509:3>@512:0>:int) =
        ((<<array_max_1033@509:3>@512:0> = 0) &&
         ((<array_max_1033@509:1> = 2) && (<array_max_1033@509:1> = <array_max_1033@509:0>)))
        P[<make_array_1030@487:1>](<make_array_1030@487:0>:int,<make_array_1030@487:1>:int) =
        ((<make_array_1030@487:1> = 1) && (1 < <make_array_1030@487:0>))
        P[<<array_max_1033@478:3>@521:0>](<array_max_1033@478:0>:int,<array_max_1033@478:1>:int,<<array_max_1033@478:3>@521:0>:int) =
        ((<<array_max_1033@478:3>@521:0> = 1) &&
         ((<array_max_1033@478:1> = 1) && ((1 + <array_max_1033@478:1>) = <array_max_1033@478:0>)))
        P[<<array_max_1033@455:3>@530:0>](<array_max_1033@455:0>:int,<array_max_1033@455:1>:int,<<array_max_1033@455:3>@530:0>:int) =
        ((<<array_max_1033@455:3>@530:0> = 1) &&
         ((<array_max_1033@455:1> = 0) && ((2 + <array_max_1033@455:1>) = <array_max_1033@455:0>)))
        P[<check_1148@534:2>](<check_1148@534:0>:int,<check_1148@534:1>:int,<check_1148@534:2>:int) =
        ((<check_1148@534:1> = 0) && ((<check_1148@534:2> = 1) && (<check_1148@534:0> = 2)))
        P[<<<check_1148@534:3>@569:1>@585:0>](<check_1148@534:0>:int,<check_1148@534:1>:int,<check_1148@534:2>:int,<<check_1148@534:3>@569:0>:int,<<<check_1148@534:3>@569:1>@585:0>:int) =
        ((<check_1148@534:0> = 2) &&
         ((<check_1148@534:1> = 0) && ((<check_1148@534:2> = 1) && (<<<check_1148@534:3>@569:1>@585:0> <= 1))))
        P[<<<check_1148@534:3>@537:1>@553:0>](<check_1148@534:0>:int,<check_1148@534:1>:int,<check_1148@534:2>:int,<<check_1148@534:3>@537:0>:int,<<<check_1148@534:3>@537:1>@553:0>:int) =
        ((<check_1148@534:0> = 2) &&
         ((<check_1148@534:1> = 0) && ((<check_1148@534:2> = 1) && (<<<check_1148@534:3>@537:1>@553:0> <= 1))))
        P[<<check_1148@534:3>@537:0>](<check_1148@534:0>:int,<check_1148@534:1>:int,<check_1148@534:2>:int,<<check_1148@534:3>@537:0>:int) =
        ((<check_1148@534:1> = 0) &&
         ((<check_1148@534:2> = 1) && ((<check_1148@534:0> = 2) && (<<check_1148@534:3>@537:0> = <check_1148@534:1>))))
        P[<check_1148@560:2>](<check_1148@560:0>:int,<check_1148@560:1>:int,<check_1148@560:2>:int) =
        ((<check_1148@560:0> = 2) && ((<check_1148@560:1> = 1) && (<check_1148@560:2> = 1)))
        P[<make_array_1030@539:1>](<make_array_1030@539:0>:int,<make_array_1030@539:1>:int) =
        ((<make_array_1030@539:1> = 0) && (<make_array_1030@539:0> = 2))
        P[<<<check_1148@560:3>@563:1>@591:0>](<check_1148@560:0>:int,<check_1148@560:1>:int,<check_1148@560:2>:int,<<check_1148@560:3>@563:0>:int,<<<check_1148@560:3>@563:1>@591:0>:int) =
        ((<check_1148@560:0> = 2) &&
         ((<check_1148@560:1> = 1) && ((<check_1148@560:2> = 1) && (<<<check_1148@560:3>@563:1>@591:0> <= 1))))
        P[<<check_1148@560:3>@563:0>](<check_1148@560:0>:int,<check_1148@560:1>:int,<check_1148@560:2>:int,<<check_1148@560:3>@563:0>:int) =
        ((<check_1148@560:0> = 2) &&
         ((<check_1148@560:1> = 1) && ((<check_1148@560:2> = 1) && (<<check_1148@560:3>@563:0> = <check_1148@560:1>))))
        P[<fail_1487@596:0>](<fail_1487@596:0>:bool) = false
        P[<<check_1148@534:3>@569:0>](<check_1148@534:0>:int,<check_1148@534:1>:int,<check_1148@534:2>:int,<<check_1148@534:3>@569:0>:int) =
        ((<check_1148@534:0> = 2) &&
         ((<check_1148@534:1> = 0) &&
          ((<check_1148@534:2> = 1) && (<<check_1148@534:3>@569:0> = (1 + <check_1148@534:1>)))))
        P[<make_array_1030@571:1>](<make_array_1030@571:0>:int,<make_array_1030@571:1>:int) =
        ((<make_array_1030@571:1> = 1) && (<make_array_1030@571:0> = 2))
      upper bounds:
        P[<make_array_1030@571:1>](var2014:int,var2015:int) = ((1 >= var2015) || (var2015 >= var2014))
        P[<make_array_1030@539:1>](var2012:int,var2013:int) = ((1 >= var2013) || (var2013 >= var2012))
        P[<make_array_1030@487:1>](var2010:int,var2011:int) = ((1 >= var2011) || (var2011 >= var2010))
        P[<make_array_1030@460:1>](var2008:int,var2009:int) = ((1 >= var2009) || (var2009 >= var2008))
      begin GenHcSolver.classify_pids(1152242)[4]
        output:
          [<make_array_1030@460:1>;<make_array_1030@487:1>;<make_array_1030@539:1>;<make_array_1030@571:1>]
      end GenHcSolver.classify_pids(1152242)[4] (0.001000 sec.)
      begin ApronInterface.convex_hull_interpolate(1152317)[4]
        lb:(((<make_array_1030@460:1> = 0) && (0 < <make_array_1030@460:0>)) ||
            (((<make_array_1030@460:1> = 1) && (1 < <make_array_1030@460:0>)) ||
             (((<make_array_1030@460:1> = 0) && (<make_array_1030@460:0> = 2)) ||
              ((<make_array_1030@460:1> = 1) && (<make_array_1030@460:0> = 2)))))
        nub:(not ((1 >= <make_array_1030@460:1>) || (<make_array_1030@460:1> >= <make_array_1030@460:0>)))
        lb':(((<make_array_1030@460:1> = 0) && (0 < <make_array_1030@460:0>)) ||
             (((<make_array_1030@460:1> = 1) && (1 < <make_array_1030@460:0>)) ||
              (((<make_array_1030@460:1> = 0) && (<make_array_1030@460:0> = 2)) ||
               ((<make_array_1030@460:1> = 1) && (<make_array_1030@460:0> = 2)))))
        nub':(not ((1 >= <make_array_1030@460:1>) || (<make_array_1030@460:1> >= <make_array_1030@460:0>)))
        begin InterpProver.interpolate(1152318)[5]
          begin InterpProver.interpolate_fresh(1152319)[6]
            begin InterpProver.interpolate_log(1152320)[7]
              input1: (((<make_array_1030@460:1> = 0) && (0 < <make_array_1030@460:0>)) ||
                       (((<make_array_1030@460:1> = 1) && (1 < <make_array_1030@460:0>)) ||
                        (((<make_array_1030@460:1> = 0) && (<make_array_1030@460:0> = 2)) ||
                         ((<make_array_1030@460:1> = 1) && (<make_array_1030@460:0> = 2)))))
              input2: (not ((1 >= <make_array_1030@460:1>) || (<make_array_1030@460:1> >= <make_array_1030@460:0>)))
              begin InterpProver.interpolate_check(1152321)[8]
                begin InterpProver.interpolate_simplify(1152322)[9]
                  begin InterpProver.interpolate_quick(1152456)[10]
                    begin CsisatInterface.interpolate_csisat_wrap(1152465)[11]
                      begin CsisatInterface.interpolate_csisat_post_process(1152466)[12]
                        begin CsisatInterface.interpolate_csisat_log(1152467)[13]
                          input1: (((0 = v_sep_make_array_1030_sep_460_sep_1 | 1 = v_sep_make_array_1030_sep_460_sep_1) & 2 = v_sep_make_array_1030_sep_460_sep_0) | (0 = v_sep_make_array_1030_sep_460_sep_1 & 1 <= v_sep_make_array_1030_sep_460_sep_0) | (1 = v_sep_make_array_1030_sep_460_sep_1 & 2 <= v_sep_make_array_1030_sep_460_sep_0))
                          input2: (2 <= v_sep_make_array_1030_sep_460_sep_1 & (1 + v_sep_make_array_1030_sep_460_sep_1) <= v_sep_make_array_1030_sep_460_sep_0)
                          begin CsisatInterface.interpolate_csisat_raw(1152468)[14]
                            
                          end CsisatInterface.interpolate_csisat_raw(1152468)[14] (0.004000 sec.)
                          output: (v_sep_make_array_1030_sep_460_sep_1 <= 0 | 2*v_sep_make_array_1030_sep_460_sep_1 <= 2)
                          
                        end CsisatInterface.interpolate_csisat_log(1152467)[13] (0.004000 sec.)
                        after simplification: (v_sep_make_array_1030_sep_460_sep_1 <= 0 | 2*v_sep_make_array_1030_sep_460_sep_1 <= 2)
                        after dnf conversion: ((v_sep_make_array_1030_sep_460_sep_1 <= 0) | (2*v_sep_make_array_1030_sep_460_sep_1 <= 2))
                        
                      end CsisatInterface.interpolate_csisat_post_process(1152466)[12] (0.004000 sec.)
                      
                    end CsisatInterface.interpolate_csisat_wrap(1152465)[11] (0.004000 sec.)
                    
                  end InterpProver.interpolate_quick(1152456)[10] (0.005000 sec.)
                  
                end InterpProver.interpolate_simplify(1152322)[9] (0.005999 sec.)
                
              end InterpProver.interpolate_check(1152321)[8] (0.006999 sec.)
              output: (<make_array_1030@460:1> <= 1)
            end InterpProver.interpolate_log(1152320)[7] (0.006999 sec.)
            
          end InterpProver.interpolate_fresh(1152319)[6] (0.006999 sec.)
          
        end InterpProver.interpolate(1152318)[5] (0.006999 sec.)
        output:
          P[<make_array_1030@460:1>](<make_array_1030@460:0>:int,<make_array_1030@460:1>:int) =
          (<make_array_1030@460:1> <= 1)
          P[<make_array_1030@487:1>](<make_array_1030@460:0>:int,<make_array_1030@460:1>:int) =
          (<make_array_1030@460:1> <= 1)
          P[<make_array_1030@539:1>](<make_array_1030@460:0>:int,<make_array_1030@460:1>:int) =
          (<make_array_1030@460:1> <= 1)
          P[<make_array_1030@571:1>](<make_array_1030@460:0>:int,<make_array_1030@460:1>:int) =
          (<make_array_1030@460:1> <= 1)
      end ApronInterface.convex_hull_interpolate(1152317)[4] (0.006999 sec.)
      Horn clauses:
        P[<fail_1487@596:0>](<fail_1487@596:0>:bool)|- bot
        
        P[<check_1148@560:2>](<f_check_1482@593:2>:int,<f_check_1482@593:0>:int,<f_check_1482@593:1>:int),
        P[<<<check_1148@560:3>@563:1>@591:0>](<f_check_1482@593:2>:int,<f_check_1482@593:0>:int,<f_check_1482@593:1>:int,<f_check_1482@593:0>:int,<f_check_1482@593:5>:int),
        ((<f_check_1482@593:5> > <f_check_1482@593:1>) &&
         ((<f_check_1482@593:0> < <f_check_1482@593:2>) && <fail_1487@596:0>))
        |- P[<fail_1487@596:0>](<fail_1487@596:0>:bool)
        
        P[<<<check_1148@534:3>@537:1>@553:0>](<check_1148@560:0>:int,(
                                              -1 + <check_1148@560:1>):int,<check_1148@560:2>:int,(
                                              -1 + <check_1148@560:1>):int,var1927:int),
        P[<check_1148@534:2>](<check_1148@560:0>:int,(-1 + <check_1148@560:1>):int,<check_1148@560:2>:int),
        P[<<<check_1148@534:3>@569:1>@585:0>](<check_1148@560:0>:int,(
                                              -1 + <check_1148@560:1>):int,<check_1148@560:2>:int,<<check_1148@560:3>@563:0>:int,<<<check_1148@560:3>@563:1>@591:0>:int),
        P[<check_1148@560:2>](<check_1148@560:0>:int,<check_1148@560:1>:int,<check_1148@560:2>:int),
        ((var1927 <= <check_1148@560:2>) && (<check_1148@560:1> < (1 + <check_1148@560:0>)))
        |- P[<<<check_1148@560:3>@563:1>@591:0>](<check_1148@560:0>:int,
                                                 <check_1148@560:1>:int,
                                                 <check_1148@560:2>:int,
                                                 <<check_1148@560:3>@563:0>:int,
                                                 <<<check_1148@560:3>@563:1>@591:0>:int)
        
        P[<<array_max_1033@455:3>@530:0>](<check_1148@534:0>:int,0:int,<check_1148@534:2>:int),
        P[<check_1148@534:2>](<check_1148@534:0>:int,<check_1148@534:1>:int,<check_1148@534:2>:int),
        ((<check_1148@534:1> = 0) && (<<<check_1148@534:3>@569:1>@585:0> <= 1))
        |- P[<<<check_1148@534:3>@569:1>@585:0>](<check_1148@534:0>:int,
                                                 <check_1148@534:1>:int,
                                                 <check_1148@534:2>:int,
                                                 <<check_1148@534:3>@569:0>:int,
                                                 <<<check_1148@534:3>@569:1>@585:0>:int)
        
        P[<<array_max_1033@455:3>@530:0>](<make_array_1030@571:0>:int,0:int,<check_1148@534:2>:int),
        P[<<check_1148@534:3>@569:0>](<make_array_1030@571:0>:int,0:int,<check_1148@534:2>:int,<make_array_1030@571:1>:int),
        (<make_array_1030@571:1> > 1) |- bot
        
        P[<<<check_1148@534:3>@537:1>@553:0>](<check_1148@534:0>:int,<check_1148@534:1>:int,<check_1148@534:2>:int,<check_1148@534:1>:int,var1928:int),
        P[<check_1148@534:2>](<check_1148@534:0>:int,<check_1148@534:1>:int,<check_1148@534:2>:int),
        P[<<check_1148@560:3>@563:0>](<check_1148@534:0>:int,(1 + <check_1148@534:1>):int,<check_1148@534:2>:int,<<check_1148@534:3>@569:0>:int),
        ((var1928 <= <check_1148@534:2>) && (<check_1148@534:1> < <check_1148@534:0>))
        |- P[<<check_1148@534:3>@569:0>](<check_1148@534:0>:int,<check_1148@534:1>:int,
                                         <check_1148@534:2>:int,<<check_1148@534:3>@569:0>:int)
        
        P[<check_1148@560:2>](<check_1148@560:0>:int,<check_1148@560:1>:int,<check_1148@560:2>:int),
        ((<check_1148@560:1> < <check_1148@560:0>) && (<<check_1148@560:3>@563:0> = <check_1148@560:1>))
        |- P[<<check_1148@560:3>@563:0>](<check_1148@560:0>:int,<check_1148@560:1>:int,
                                         <check_1148@560:2>:int,<<check_1148@560:3>@563:0>:int)
        
        P[<check_1148@534:2>](<check_1148@560:0>:int,(-1 + <check_1148@560:1>):int,<check_1148@560:2>:int),
        P[<<<check_1148@534:3>@537:1>@553:0>](<check_1148@560:0>:int,(
                                              -1 + <check_1148@560:1>):int,<check_1148@560:2>:int,(
                                              -1 + <check_1148@560:1>):int,var1929:int),
        ((var1929 <= <check_1148@560:2>) && (<check_1148@560:1> < (1 + <check_1148@560:0>)))
        |- P[<check_1148@560:2>](<check_1148@560:0>:int,<check_1148@560:1>:int,
                                 <check_1148@560:2>:int)
        
        P[<<array_max_1033@455:3>@530:0>](<check_1148@534:0>:int,0:int,<check_1148@534:2>:int),
        P[<check_1148@534:2>](<check_1148@534:0>:int,<check_1148@534:1>:int,<check_1148@534:2>:int),
        ((<check_1148@534:1> = 0) && (<<<check_1148@534:3>@537:1>@553:0> <= 1))
        |- P[<<<check_1148@534:3>@537:1>@553:0>](<check_1148@534:0>:int,
                                                 <check_1148@534:1>:int,
                                                 <check_1148@534:2>:int,
                                                 <<check_1148@534:3>@537:0>:int,
                                                 <<<check_1148@534:3>@537:1>@553:0>:int)
        
        P[<<array_max_1033@455:3>@530:0>](<make_array_1030@539:0>:int,0:int,<check_1148@534:2>:int),
        P[<<check_1148@534:3>@537:0>](<make_array_1030@539:0>:int,0:int,<check_1148@534:2>:int,<make_array_1030@539:1>:int),
        (<make_array_1030@539:1> > 1) |- bot
        
        P[<check_1148@534:2>](<check_1148@534:0>:int,<check_1148@534:1>:int,<check_1148@534:2>:int),
        ((<check_1148@534:1> < <check_1148@534:0>) && (<<check_1148@534:3>@537:0> = <check_1148@534:1>))
        |- P[<<check_1148@534:3>@537:0>](<check_1148@534:0>:int,<check_1148@534:1>:int,
                                         <check_1148@534:2>:int,<<check_1148@534:3>@537:0>:int)
        
        P[<<array_max_1033@455:3>@530:0>](<check_1148@534:0>:int,0:int,<check_1148@534:2>:int),
        (<check_1148@534:1> = 0)
        |- P[<check_1148@534:2>](<check_1148@534:0>:int,<check_1148@534:1>:int,
                                 <check_1148@534:2>:int)
        
        P[<array_max_1033@455:1>](<array_max_1033@455:0>:int,<array_max_1033@455:1>:int),
        P[<<<array_max_1033@455:2>@458:1>@474:0>](<array_max_1033@455:0>:int,<array_max_1033@455:1>:int,<array_max_1033@455:1>:int,var1930:int),
        P[<<array_max_1033@478:3>@521:0>](<array_max_1033@455:0>:int,(
                                          1 + <array_max_1033@455:1>):int,<<array_max_1033@455:3>@530:0>:int),
        ((var1930 <= <<array_max_1033@455:3>@530:0>) && (<array_max_1033@455:1> < <array_max_1033@455:0>))
        |- P[<<array_max_1033@455:3>@530:0>](<array_max_1033@455:0>:int,
                                             <array_max_1033@455:1>:int,
                                             <<array_max_1033@455:3>@530:0>:int)
        
        P[<array_max_1033@478:1>](<array_max_1033@478:0>:int,<array_max_1033@478:1>:int),
        P[<<<array_max_1033@478:2>@481:1>@505:0>](<array_max_1033@478:0>:int,<array_max_1033@478:1>:int,<array_max_1033@478:1>:int,<<array_max_1033@478:3>@521:0>:int),
        P[<<array_max_1033@509:3>@512:0>](<array_max_1033@478:0>:int,(
                                          1 + <array_max_1033@478:1>):int,var1931:int),
        ((<<array_max_1033@478:3>@521:0> > var1931) && (<array_max_1033@478:1> < <array_max_1033@478:0>))
        |- P[<<array_max_1033@478:3>@521:0>](<array_max_1033@478:0>:int,
                                             <array_max_1033@478:1>:int,
                                             <<array_max_1033@478:3>@521:0>:int)
        
        P[<array_max_1033@509:1>](<array_max_1033@509:0>:int,<array_max_1033@509:1>:int),
        ((<<array_max_1033@509:3>@512:0> = 0) && (<array_max_1033@509:1> >= <array_max_1033@509:0>))
        |- P[<<array_max_1033@509:3>@512:0>](<array_max_1033@509:0>:int,
                                             <array_max_1033@509:1>:int,
                                             <<array_max_1033@509:3>@512:0>:int)
        
        P[<array_max_1033@478:1>](<array_max_1033@509:0>:int,(-1 + <array_max_1033@509:1>):int),
        P[<<<array_max_1033@478:2>@481:1>@505:0>](<array_max_1033@509:0>:int,(
                                                  -1 + <array_max_1033@509:1>):int,(
                                                  -1 + <array_max_1033@509:1>):int,<f_array_max_1480@507:4>:int),
        (<array_max_1033@509:1> < (1 + <array_max_1033@509:0>))
        |- P[<array_max_1033@509:1>](<array_max_1033@509:0>:int,<array_max_1033@509:1>:int)
        
        P[<<<array_max_1033@455:2>@458:1>@474:0>](<array_max_1033@478:0>:int,(
                                                  -1 + <array_max_1033@478:1>):int,(
                                                  -1 + <array_max_1033@478:1>):int,<f_array_max_1480@476:4>:int),
        P[<array_max_1033@455:1>](<array_max_1033@478:0>:int,(-1 + <array_max_1033@478:1>):int),
        P[<<<array_max_1033@455:2>@485:1>@501:0>](<array_max_1033@478:0>:int,(
                                                  -1 + <array_max_1033@478:1>):int,<<array_max_1033@478:2>@481:0>:int,<<<array_max_1033@478:2>@481:1>@505:0>:int),
        P[<array_max_1033@478:1>](<array_max_1033@478:0>:int,<array_max_1033@478:1>:int),
        (<array_max_1033@478:1> < (1 + <array_max_1033@478:0>))
        |- P[<<<array_max_1033@478:2>@481:1>@505:0>](<array_max_1033@478:0>:int,
                                                     <array_max_1033@478:1>:int,
                                                     <<array_max_1033@478:2>@481:0>:int,
                                                     <<<array_max_1033@478:2>@481:1>@505:0>:int)
        
        P[<array_max_1033@455:1>](<array_max_1033@455:0>:int,<array_max_1033@455:1>:int),
        ((<array_max_1033@455:1> = 0) && (<<<array_max_1033@455:2>@485:1>@501:0> <= 1))
        |- P[<<<array_max_1033@455:2>@485:1>@501:0>](<array_max_1033@455:0>:int,
                                                     <array_max_1033@455:1>:int,
                                                     <<array_max_1033@455:2>@485:0>:int,
                                                     <<<array_max_1033@455:2>@485:1>@501:0>:int)
        
        P[<<array_max_1033@455:2>@485:0>](<make_array_1030@487:0>:int,0:int,<make_array_1030@487:1>:int),
        (<make_array_1030@487:1> > 1) |- bot
        
        P[<array_max_1033@455:1>](<array_max_1033@455:0>:int,<array_max_1033@455:1>:int),
        P[<<<array_max_1033@455:2>@458:1>@474:0>](<array_max_1033@455:0>:int,<array_max_1033@455:1>:int,<array_max_1033@455:1>:int,var1932:int),
        P[<<array_max_1033@478:2>@481:0>](<array_max_1033@455:0>:int,(
                                          1 + <array_max_1033@455:1>):int,<<array_max_1033@455:2>@485:0>:int),
        (<array_max_1033@455:1> < <array_max_1033@455:0>)
        |- P[<<array_max_1033@455:2>@485:0>](<array_max_1033@455:0>:int,
                                             <array_max_1033@455:1>:int,
                                             <<array_max_1033@455:2>@485:0>:int)
        
        P[<array_max_1033@478:1>](<array_max_1033@478:0>:int,<array_max_1033@478:1>:int),
        ((<array_max_1033@478:1> < <array_max_1033@478:0>) && (<<array_max_1033@478:2>@481:0> = <array_max_1033@478:1>))
        |- P[<<array_max_1033@478:2>@481:0>](<array_max_1033@478:0>:int,
                                             <array_max_1033@478:1>:int,
                                             <<array_max_1033@478:2>@481:0>:int)
        
        P[<array_max_1033@455:1>](<array_max_1033@478:0>:int,(-1 + <array_max_1033@478:1>):int),
        P[<<<array_max_1033@455:2>@458:1>@474:0>](<array_max_1033@478:0>:int,(
                                                  -1 + <array_max_1033@478:1>):int,(
                                                  -1 + <array_max_1033@478:1>):int,<f_array_max_1480@476:4>:int),
        (<array_max_1033@478:1> < (1 + <array_max_1033@478:0>))
        |- P[<array_max_1033@478:1>](<array_max_1033@478:0>:int,<array_max_1033@478:1>:int)
        
        P[<array_max_1033@455:1>](<array_max_1033@455:0>:int,<array_max_1033@455:1>:int),
        ((<array_max_1033@455:1> = 0) && (<<<array_max_1033@455:2>@458:1>@474:0> <= 1))
        |- P[<<<array_max_1033@455:2>@458:1>@474:0>](<array_max_1033@455:0>:int,
                                                     <array_max_1033@455:1>:int,
                                                     <<array_max_1033@455:2>@458:0>:int,
                                                     <<<array_max_1033@455:2>@458:1>@474:0>:int)
        
        P[<<array_max_1033@455:2>@458:0>](<make_array_1030@460:0>:int,0:int,<make_array_1030@460:1>:int),
        (<make_array_1030@460:1> > 1) |- bot
        
        P[<array_max_1033@455:1>](<array_max_1033@455:0>:int,<array_max_1033@455:1>:int),
        ((<array_max_1033@455:1> < <array_max_1033@455:0>) && (<<array_max_1033@455:2>@458:0> = <array_max_1033@455:1>))
        |- P[<<array_max_1033@455:2>@458:0>](<array_max_1033@455:0>:int,
                                             <array_max_1033@455:1>:int,
                                             <<array_max_1033@455:2>@458:0>:int)
        
         (<array_max_1033@455:1> = 0)
        |- P[<array_max_1033@455:1>](<array_max_1033@455:0>:int,<array_max_1033@455:1>:int)
      lower bounds:
        P[<array_max_1033@455:1>](<array_max_1033@455:0>:int,<array_max_1033@455:1>:int) = (<array_max_1033@455:1> = 0)
        P[<<<array_max_1033@455:2>@485:1>@501:0>](<array_max_1033@455:0>:int,<array_max_1033@455:1>:int,<<array_max_1033@455:2>@485:0>:int,<<<array_max_1033@455:2>@485:1>@501:0>:int) =
        ((<array_max_1033@455:1> = 0) && (<<<array_max_1033@455:2>@485:1>@501:0> <= 1))
        P[<<<array_max_1033@455:2>@458:1>@474:0>](<array_max_1033@455:0>:int,<array_max_1033@455:1>:int,<<array_max_1033@455:2>@458:0>:int,<<<array_max_1033@455:2>@458:1>@474:0>:int) =
        ((<array_max_1033@455:1> = 0) && (<<<array_max_1033@455:2>@458:1>@474:0> <= 1))
        P[<<array_max_1033@455:2>@458:0>](<array_max_1033@455:0>:int,<array_max_1033@455:1>:int,<<array_max_1033@455:2>@458:0>:int) =
        ((<array_max_1033@455:1> = 0) &&
         ((<array_max_1033@455:1> < <array_max_1033@455:0>) &&
          (<<array_max_1033@455:2>@458:0> = <array_max_1033@455:1>)))
        P[<array_max_1033@478:1>](<array_max_1033@478:0>:int,<array_max_1033@478:1>:int) =
        ((<array_max_1033@478:1> = 1) && (<array_max_1033@478:1> < (1 + <array_max_1033@478:0>)))
        P[<<<array_max_1033@478:2>@481:1>@505:0>](<array_max_1033@478:0>:int,<array_max_1033@478:1>:int,<<array_max_1033@478:2>@481:0>:int,<<<array_max_1033@478:2>@481:1>@505:0>:int) =
        ((<array_max_1033@478:1> = 1) &&
         ((<<<array_max_1033@478:2>@481:1>@505:0> <= 1) && (<array_max_1033@478:1> < (1 + <array_max_1033@478:0>))))
        P[<<array_max_1033@478:2>@481:0>](<array_max_1033@478:0>:int,<array_max_1033@478:1>:int,<<array_max_1033@478:2>@481:0>:int) =
        ((<array_max_1033@478:1> = 1) &&
         ((<array_max_1033@478:1> < <array_max_1033@478:0>) &&
          (<<array_max_1033@478:2>@481:0> = <array_max_1033@478:1>)))
        P[<array_max_1033@509:1>](<array_max_1033@509:0>:int,<array_max_1033@509:1>:int) =
        ((<array_max_1033@509:1> = 2) && (<array_max_1033@509:1> < (1 + <array_max_1033@509:0>)))
        P[<<array_max_1033@455:2>@485:0>](<array_max_1033@455:0>:int,<array_max_1033@455:1>:int,<<array_max_1033@455:2>@485:0>:int) =
        ((<array_max_1033@455:1> = 0) &&
         (((1 + <array_max_1033@455:1>) < <array_max_1033@455:0>) &&
          (<<array_max_1033@455:2>@485:0> = (1 + <array_max_1033@455:1>))))
        P[<<array_max_1033@509:3>@512:0>](<array_max_1033@509:0>:int,<array_max_1033@509:1>:int,<<array_max_1033@509:3>@512:0>:int) =
        ((<<array_max_1033@509:3>@512:0> = 0) &&
         ((<array_max_1033@509:1> = 2) && (<array_max_1033@509:1> = <array_max_1033@509:0>)))
        P[<<array_max_1033@478:3>@521:0>](<array_max_1033@478:0>:int,<array_max_1033@478:1>:int,<<array_max_1033@478:3>@521:0>:int) =
        ((<<array_max_1033@478:3>@521:0> = 1) &&
         ((<array_max_1033@478:1> = 1) && ((1 + <array_max_1033@478:1>) = <array_max_1033@478:0>)))
        P[<<array_max_1033@455:3>@530:0>](<array_max_1033@455:0>:int,<array_max_1033@455:1>:int,<<array_max_1033@455:3>@530:0>:int) =
        ((<<array_max_1033@455:3>@530:0> = 1) &&
         ((<array_max_1033@455:1> = 0) && ((2 + <array_max_1033@455:1>) = <array_max_1033@455:0>)))
        P[<check_1148@534:2>](<check_1148@534:0>:int,<check_1148@534:1>:int,<check_1148@534:2>:int) =
        ((<check_1148@534:1> = 0) && ((<check_1148@534:2> = 1) && (<check_1148@534:0> = 2)))
        P[<<<check_1148@534:3>@569:1>@585:0>](<check_1148@534:0>:int,<check_1148@534:1>:int,<check_1148@534:2>:int,<<check_1148@534:3>@569:0>:int,<<<check_1148@534:3>@569:1>@585:0>:int) =
        ((<check_1148@534:0> = 2) &&
         ((<check_1148@534:1> = 0) && ((<check_1148@534:2> = 1) && (<<<check_1148@534:3>@569:1>@585:0> <= 1))))
        P[<<<check_1148@534:3>@537:1>@553:0>](<check_1148@534:0>:int,<check_1148@534:1>:int,<check_1148@534:2>:int,<<check_1148@534:3>@537:0>:int,<<<check_1148@534:3>@537:1>@553:0>:int) =
        ((<check_1148@534:0> = 2) &&
         ((<check_1148@534:1> = 0) && ((<check_1148@534:2> = 1) && (<<<check_1148@534:3>@537:1>@553:0> <= 1))))
        P[<<check_1148@534:3>@537:0>](<check_1148@534:0>:int,<check_1148@534:1>:int,<check_1148@534:2>:int,<<check_1148@534:3>@537:0>:int) =
        ((<check_1148@534:1> = 0) &&
         ((<check_1148@534:2> = 1) && ((<check_1148@534:0> = 2) && (<<check_1148@534:3>@537:0> = <check_1148@534:1>))))
        P[<check_1148@560:2>](<check_1148@560:0>:int,<check_1148@560:1>:int,<check_1148@560:2>:int) =
        ((<check_1148@560:0> = 2) && ((<check_1148@560:1> = 1) && (<check_1148@560:2> = 1)))
        P[<<<check_1148@560:3>@563:1>@591:0>](<check_1148@560:0>:int,<check_1148@560:1>:int,<check_1148@560:2>:int,<<check_1148@560:3>@563:0>:int,<<<check_1148@560:3>@563:1>@591:0>:int) =
        ((<check_1148@560:0> = 2) &&
         ((<check_1148@560:1> = 1) && ((<check_1148@560:2> = 1) && (<<<check_1148@560:3>@563:1>@591:0> <= 1))))
        P[<<check_1148@560:3>@563:0>](<check_1148@560:0>:int,<check_1148@560:1>:int,<check_1148@560:2>:int,<<check_1148@560:3>@563:0>:int) =
        ((<check_1148@560:0> = 2) &&
         ((<check_1148@560:1> = 1) && ((<check_1148@560:2> = 1) && (<<check_1148@560:3>@563:0> = <check_1148@560:1>))))
        P[<fail_1487@596:0>](<fail_1487@596:0>:bool) = false
        P[<<check_1148@534:3>@569:0>](<check_1148@534:0>:int,<check_1148@534:1>:int,<check_1148@534:2>:int,<<check_1148@534:3>@569:0>:int) =
        ((<check_1148@534:0> = 2) &&
         ((<check_1148@534:1> = 0) &&
          ((<check_1148@534:2> = 1) && (<<check_1148@534:3>@569:0> = (1 + <check_1148@534:1>)))))
      upper bounds:
        P[<<<check_1148@560:3>@563:1>@591:0>](var2038:int,var2039:int,var2040:int,var2041:int,var2042:int) =
        ((var2038 <> 2) || ((var2039 <> 1) || ((var2040 <> 1) || ((var2041 <> 1) || (var2042 <= 1)))))
        P[<<<check_1148@534:3>@569:1>@585:0>](var2032:int,var2033:int,var2034:int,var2035:int,var2036:int) =
        ((var2032 <> 2) || ((var2033 <> 0) || ((var2034 <> 1) || ((var2035 <> 1) || (var2036 <= 1)))))
        P[<<<check_1148@534:3>@537:1>@553:0>](var2026:int,var2027:int,var2028:int,var2029:int,var2030:int) = true
      begin GenHcSolver.classify_pids(1214437)[4]
        output:
          [<<<check_1148@534:3>@537:1>@553:0>;<<<check_1148@534:3>@569:1>@585:0>;<<<check_1148@560:3>@563:1>@591:0>]
      end GenHcSolver.classify_pids(1214437)[4] (0.004000 sec.)
      begin ApronInterface.convex_hull_interpolate(1214886)[4]
        lb:(((<check_1148@534:0> = 2) &&
             ((<check_1148@534:1> = 0) && ((<check_1148@534:2> = 1) && (<<<check_1148@534:3>@537:1>@553:0> <= 1)))) ||
            ((<check_1148@534:0> = 2) &&
             ((<check_1148@534:1> = 1) && ((<check_1148@534:2> = 1) && (<<<check_1148@534:3>@537:1>@553:0> <= 1)))))
        nub:((not
                ((<check_1148@534:0> <> 2) ||
                 ((<check_1148@534:1> <> 0) ||
                  ((<check_1148@534:2> <> 1) ||
                   ((<<check_1148@534:3>@537:0> <> 1) || (<<<check_1148@534:3>@537:1>@553:0> <= 1)))))) ||
             (not
                ((<check_1148@534:0> <> 2) ||
                 ((<check_1148@534:1> <> 1) ||
                  ((<check_1148@534:2> <> 1) ||
                   ((<<check_1148@534:3>@537:0> <> 1) || (<<<check_1148@534:3>@537:1>@553:0> <= 1)))))))
        lb':(((<check_1148@534:0> = 2) &&
              ((<check_1148@534:1> = 0) && ((<check_1148@534:2> = 1) && (<<<check_1148@534:3>@537:1>@553:0> <= 1)))) ||
             ((<check_1148@534:0> = 2) &&
              ((<check_1148@534:1> = 1) && ((<check_1148@534:2> = 1) && (<<<check_1148@534:3>@537:1>@553:0> <= 1)))))
        nub':((not
                 ((<check_1148@534:0> <> 2) ||
                  ((<check_1148@534:1> <> 0) ||
                   ((<check_1148@534:2> <> 1) ||
                    ((<<check_1148@534:3>@537:0> <> 1) || (<<<check_1148@534:3>@537:1>@553:0> <= 1)))))) ||
              (not
                 ((<check_1148@534:0> <> 2) ||
                  ((<check_1148@534:1> <> 1) ||
                   ((<check_1148@534:2> <> 1) ||
                    ((<<check_1148@534:3>@537:0> <> 1) || (<<<check_1148@534:3>@537:1>@553:0> <= 1)))))))
        begin InterpProver.interpolate(1214887)[5]
          begin InterpProver.interpolate_fresh(1214888)[6]
            begin InterpProver.interpolate_log(1214889)[7]
              input1: (((<check_1148@534:0> = 2) &&
                        ((<check_1148@534:1> = 0) &&
                         ((<check_1148@534:2> = 1) && (<<<check_1148@534:3>@537:1>@553:0> <= 1)))) ||
                       ((<check_1148@534:0> = 2) &&
                        ((<check_1148@534:1> = 1) &&
                         ((<check_1148@534:2> = 1) && (<<<check_1148@534:3>@537:1>@553:0> <= 1)))))
              input2: ((not
                          ((<check_1148@534:0> <> 2) ||
                           ((<check_1148@534:1> <> 0) ||
                            ((<check_1148@534:2> <> 1) ||
                             ((<<check_1148@534:3>@537:0> <> 1) || (<<<check_1148@534:3>@537:1>@553:0> <= 1)))))) ||
                       (not
                          ((<check_1148@534:0> <> 2) ||
                           ((<check_1148@534:1> <> 1) ||
                            ((<check_1148@534:2> <> 1) ||
                             ((<<check_1148@534:3>@537:0> <> 1) || (<<<check_1148@534:3>@537:1>@553:0> <= 1)))))))
              begin InterpProver.interpolate_check(1214890)[8]
                begin InterpProver.interpolate_simplify(1214891)[9]
                  begin InterpProver.interpolate_quick(1215423)[10]
                    begin CsisatInterface.interpolate_csisat_wrap(1215432)[11]
                      begin CsisatInterface.interpolate_csisat_post_process(1215433)[12]
                        begin CsisatInterface.interpolate_csisat_log(1215434)[13]
                          input1: ((0 = v_sep_check_1148_sep_534_sep_1 | 1 = v_sep_check_1148_sep_534_sep_1) & 1 = v_sep_check_1148_sep_534_sep_2 & 2 = v_sep_check_1148_sep_534_sep_0 & v_sep_check_1148_sep_534_sep_3_sep_537_sep_1_sep_553_sep_0 <= 1)
                          input2: ((0 = v_sep_check_1148_sep_534_sep_1 | 1 = v_sep_check_1148_sep_534_sep_1) & 1 = v_sep_check_1148_sep_534_sep_2 & 2 = v_sep_check_1148_sep_534_sep_0 & 2 <= v_sep_check_1148_sep_534_sep_3_sep_537_sep_1_sep_553_sep_0)
                          begin CsisatInterface.interpolate_csisat_raw(1215435)[14]
                            
                          end CsisatInterface.interpolate_csisat_raw(1215435)[14] (0.001000 sec.)
                          output: (not 1 = v_sep_check_1148_sep_534_sep_2 | not 2 = v_sep_check_1148_sep_534_sep_0 | 2*v_sep_check_1148_sep_534_sep_3_sep_537_sep_1_sep_553_sep_0 <= 2)
                          
                        end CsisatInterface.interpolate_csisat_log(1215434)[13] (0.001000 sec.)
                        after simplification: (not 1 = v_sep_check_1148_sep_534_sep_2 | not 2 = v_sep_check_1148_sep_534_sep_0 | 2*v_sep_check_1148_sep_534_sep_3_sep_537_sep_1_sep_553_sep_0 <= 2)
                        after dnf conversion: ((not 1 = v_sep_check_1148_sep_534_sep_2) | (not 2 = v_sep_check_1148_sep_534_sep_0) | (2*v_sep_check_1148_sep_534_sep_3_sep_537_sep_1_sep_553_sep_0 <= 2))
                        
                      end CsisatInterface.interpolate_csisat_post_process(1215433)[12] (0.001000 sec.)
                      
                    end CsisatInterface.interpolate_csisat_wrap(1215432)[11] (0.001000 sec.)
                    
                  end InterpProver.interpolate_quick(1215423)[10] (0.003000 sec.)
                  begin minimizing # of disjunctions(1215456)[10]
                    input: ((1 <> <check_1148@534:2>) ||
                            ((2 <> <check_1148@534:0>) || (<<<check_1148@534:3>@537:1>@553:0> <= 1)))
                    output: (<<<check_1148@534:3>@537:1>@553:0> <= 1)
                  end minimizing # of disjunctions(1215456)[10] (0.001000 sec.)
                  
                end InterpProver.interpolate_simplify(1214891)[9] (0.004999 sec.)
                
              end InterpProver.interpolate_check(1214890)[8] (0.006998 sec.)
              output: (<<<check_1148@534:3>@537:1>@553:0> <= 1)
            end InterpProver.interpolate_log(1214889)[7] (0.007998 sec.)
            
          end InterpProver.interpolate_fresh(1214888)[6] (0.007998 sec.)
          
        end InterpProver.interpolate(1214887)[5] (0.007998 sec.)
        output:
          P[<<<check_1148@534:3>@537:1>@553:0>](<check_1148@534:0>:int,<check_1148@534:1>:int,<check_1148@534:2>:int,<<check_1148@534:3>@537:0>:int,<<<check_1148@534:3>@537:1>@553:0>:int) =
          (<<<check_1148@534:3>@537:1>@553:0> <= 1)
          P[<<<check_1148@534:3>@569:1>@585:0>](<check_1148@534:0>:int,<check_1148@534:1>:int,<check_1148@534:2>:int,<<check_1148@534:3>@537:0>:int,<<<check_1148@534:3>@537:1>@553:0>:int) =
          (<<<check_1148@534:3>@537:1>@553:0> <= 1)
          P[<<<check_1148@560:3>@563:1>@591:0>](<check_1148@534:0>:int,<check_1148@534:1>:int,<check_1148@534:2>:int,<<check_1148@534:3>@537:0>:int,<<<check_1148@534:3>@537:1>@553:0>:int) =
          (<<<check_1148@534:3>@537:1>@553:0> <= 1)
      end ApronInterface.convex_hull_interpolate(1214886)[4] (0.007998 sec.)
      Horn clauses:
        P[<fail_1487@596:0>](<fail_1487@596:0>:bool)|- bot
        
        P[<check_1148@560:2>](<f_check_1482@593:2>:int,<f_check_1482@593:0>:int,<f_check_1482@593:1>:int),
        ((<f_check_1482@593:0> < <f_check_1482@593:2>) && ((<f_check_1482@593:1> < 1) && <fail_1487@596:0>))
        |- P[<fail_1487@596:0>](<fail_1487@596:0>:bool)
        
        P[<<array_max_1033@455:3>@530:0>](<make_array_1030@571:0>:int,0:int,<check_1148@534:2>:int),
        P[<<check_1148@534:3>@569:0>](<make_array_1030@571:0>:int,0:int,<check_1148@534:2>:int,<make_array_1030@571:1>:int),
        (<make_array_1030@571:1> > 1) |- bot
        
        P[<check_1148@534:2>](<check_1148@534:0>:int,<check_1148@534:1>:int,<check_1148@534:2>:int),
        P[<<check_1148@560:3>@563:0>](<check_1148@534:0>:int,(1 + <check_1148@534:1>):int,<check_1148@534:2>:int,<<check_1148@534:3>@569:0>:int),
        (<check_1148@534:1> < <check_1148@534:0>)
        |- P[<<check_1148@534:3>@569:0>](<check_1148@534:0>:int,<check_1148@534:1>:int,
                                         <check_1148@534:2>:int,<<check_1148@534:3>@569:0>:int)
        
        P[<check_1148@560:2>](<check_1148@560:0>:int,<check_1148@560:1>:int,<check_1148@560:2>:int),
        ((<check_1148@560:1> < <check_1148@560:0>) && (<<check_1148@560:3>@563:0> = <check_1148@560:1>))
        |- P[<<check_1148@560:3>@563:0>](<check_1148@560:0>:int,<check_1148@560:1>:int,
                                         <check_1148@560:2>:int,<<check_1148@560:3>@563:0>:int)
        
        P[<check_1148@534:2>](<check_1148@560:0>:int,(-1 + <check_1148@560:1>):int,<check_1148@560:2>:int),
        (<check_1148@560:1> < (1 + <check_1148@560:0>))
        |- P[<check_1148@560:2>](<check_1148@560:0>:int,<check_1148@560:1>:int,
                                 <check_1148@560:2>:int)
        
        P[<<array_max_1033@455:3>@530:0>](<make_array_1030@539:0>:int,0:int,<check_1148@534:2>:int),
        P[<<check_1148@534:3>@537:0>](<make_array_1030@539:0>:int,0:int,<check_1148@534:2>:int,<make_array_1030@539:1>:int),
        (<make_array_1030@539:1> > 1) |- bot
        
        P[<check_1148@534:2>](<check_1148@534:0>:int,<check_1148@534:1>:int,<check_1148@534:2>:int),
        ((<check_1148@534:1> < <check_1148@534:0>) && (<<check_1148@534:3>@537:0> = <check_1148@534:1>))
        |- P[<<check_1148@534:3>@537:0>](<check_1148@534:0>:int,<check_1148@534:1>:int,
                                         <check_1148@534:2>:int,<<check_1148@534:3>@537:0>:int)
        
        P[<<array_max_1033@455:3>@530:0>](<check_1148@534:0>:int,0:int,<check_1148@534:2>:int),
        (<check_1148@534:1> = 0)
        |- P[<check_1148@534:2>](<check_1148@534:0>:int,<check_1148@534:1>:int,
                                 <check_1148@534:2>:int)
        
        P[<array_max_1033@455:1>](<array_max_1033@455:0>:int,<array_max_1033@455:1>:int),
        P[<<<array_max_1033@455:2>@458:1>@474:0>](<array_max_1033@455:0>:int,<array_max_1033@455:1>:int,<array_max_1033@455:1>:int,var1930:int),
        P[<<array_max_1033@478:3>@521:0>](<array_max_1033@455:0>:int,(
                                          1 + <array_max_1033@455:1>):int,<<array_max_1033@455:3>@530:0>:int),
        ((var1930 <= <<array_max_1033@455:3>@530:0>) && (<array_max_1033@455:1> < <array_max_1033@455:0>))
        |- P[<<array_max_1033@455:3>@530:0>](<array_max_1033@455:0>:int,
                                             <array_max_1033@455:1>:int,
                                             <<array_max_1033@455:3>@530:0>:int)
        
        P[<array_max_1033@478:1>](<array_max_1033@478:0>:int,<array_max_1033@478:1>:int),
        P[<<<array_max_1033@478:2>@481:1>@505:0>](<array_max_1033@478:0>:int,<array_max_1033@478:1>:int,<array_max_1033@478:1>:int,<<array_max_1033@478:3>@521:0>:int),
        P[<<array_max_1033@509:3>@512:0>](<array_max_1033@478:0>:int,(
                                          1 + <array_max_1033@478:1>):int,var1931:int),
        ((<<array_max_1033@478:3>@521:0> > var1931) && (<array_max_1033@478:1> < <array_max_1033@478:0>))
        |- P[<<array_max_1033@478:3>@521:0>](<array_max_1033@478:0>:int,
                                             <array_max_1033@478:1>:int,
                                             <<array_max_1033@478:3>@521:0>:int)
        
        P[<array_max_1033@509:1>](<array_max_1033@509:0>:int,<array_max_1033@509:1>:int),
        ((<<array_max_1033@509:3>@512:0> = 0) && (<array_max_1033@509:1> >= <array_max_1033@509:0>))
        |- P[<<array_max_1033@509:3>@512:0>](<array_max_1033@509:0>:int,
                                             <array_max_1033@509:1>:int,
                                             <<array_max_1033@509:3>@512:0>:int)
        
        P[<array_max_1033@478:1>](<array_max_1033@509:0>:int,(-1 + <array_max_1033@509:1>):int),
        P[<<<array_max_1033@478:2>@481:1>@505:0>](<array_max_1033@509:0>:int,(
                                                  -1 + <array_max_1033@509:1>):int,(
                                                  -1 + <array_max_1033@509:1>):int,<f_array_max_1480@507:4>:int),
        (<array_max_1033@509:1> < (1 + <array_max_1033@509:0>))
        |- P[<array_max_1033@509:1>](<array_max_1033@509:0>:int,<array_max_1033@509:1>:int)
        
        P[<<<array_max_1033@455:2>@458:1>@474:0>](<array_max_1033@478:0>:int,(
                                                  -1 + <array_max_1033@478:1>):int,(
                                                  -1 + <array_max_1033@478:1>):int,<f_array_max_1480@476:4>:int),
        P[<array_max_1033@455:1>](<array_max_1033@478:0>:int,(-1 + <array_max_1033@478:1>):int),
        P[<<<array_max_1033@455:2>@485:1>@501:0>](<array_max_1033@478:0>:int,(
                                                  -1 + <array_max_1033@478:1>):int,<<array_max_1033@478:2>@481:0>:int,<<<array_max_1033@478:2>@481:1>@505:0>:int),
        P[<array_max_1033@478:1>](<array_max_1033@478:0>:int,<array_max_1033@478:1>:int),
        (<array_max_1033@478:1> < (1 + <array_max_1033@478:0>))
        |- P[<<<array_max_1033@478:2>@481:1>@505:0>](<array_max_1033@478:0>:int,
                                                     <array_max_1033@478:1>:int,
                                                     <<array_max_1033@478:2>@481:0>:int,
                                                     <<<array_max_1033@478:2>@481:1>@505:0>:int)
        
        P[<array_max_1033@455:1>](<array_max_1033@455:0>:int,<array_max_1033@455:1>:int),
        ((<array_max_1033@455:1> = 0) && (<<<array_max_1033@455:2>@485:1>@501:0> <= 1))
        |- P[<<<array_max_1033@455:2>@485:1>@501:0>](<array_max_1033@455:0>:int,
                                                     <array_max_1033@455:1>:int,
                                                     <<array_max_1033@455:2>@485:0>:int,
                                                     <<<array_max_1033@455:2>@485:1>@501:0>:int)
        
        P[<<array_max_1033@455:2>@485:0>](<make_array_1030@487:0>:int,0:int,<make_array_1030@487:1>:int),
        (<make_array_1030@487:1> > 1) |- bot
        
        P[<array_max_1033@455:1>](<array_max_1033@455:0>:int,<array_max_1033@455:1>:int),
        P[<<<array_max_1033@455:2>@458:1>@474:0>](<array_max_1033@455:0>:int,<array_max_1033@455:1>:int,<array_max_1033@455:1>:int,var1932:int),
        P[<<array_max_1033@478:2>@481:0>](<array_max_1033@455:0>:int,(
                                          1 + <array_max_1033@455:1>):int,<<array_max_1033@455:2>@485:0>:int),
        (<array_max_1033@455:1> < <array_max_1033@455:0>)
        |- P[<<array_max_1033@455:2>@485:0>](<array_max_1033@455:0>:int,
                                             <array_max_1033@455:1>:int,
                                             <<array_max_1033@455:2>@485:0>:int)
        
        P[<array_max_1033@478:1>](<array_max_1033@478:0>:int,<array_max_1033@478:1>:int),
        ((<array_max_1033@478:1> < <array_max_1033@478:0>) && (<<array_max_1033@478:2>@481:0> = <array_max_1033@478:1>))
        |- P[<<array_max_1033@478:2>@481:0>](<array_max_1033@478:0>:int,
                                             <array_max_1033@478:1>:int,
                                             <<array_max_1033@478:2>@481:0>:int)
        
        P[<array_max_1033@455:1>](<array_max_1033@478:0>:int,(-1 + <array_max_1033@478:1>):int),
        P[<<<array_max_1033@455:2>@458:1>@474:0>](<array_max_1033@478:0>:int,(
                                                  -1 + <array_max_1033@478:1>):int,(
                                                  -1 + <array_max_1033@478:1>):int,<f_array_max_1480@476:4>:int),
        (<array_max_1033@478:1> < (1 + <array_max_1033@478:0>))
        |- P[<array_max_1033@478:1>](<array_max_1033@478:0>:int,<array_max_1033@478:1>:int)
        
        P[<array_max_1033@455:1>](<array_max_1033@455:0>:int,<array_max_1033@455:1>:int),
        ((<array_max_1033@455:1> = 0) && (<<<array_max_1033@455:2>@458:1>@474:0> <= 1))
        |- P[<<<array_max_1033@455:2>@458:1>@474:0>](<array_max_1033@455:0>:int,
                                                     <array_max_1033@455:1>:int,
                                                     <<array_max_1033@455:2>@458:0>:int,
                                                     <<<array_max_1033@455:2>@458:1>@474:0>:int)
        
        P[<<array_max_1033@455:2>@458:0>](<make_array_1030@460:0>:int,0:int,<make_array_1030@460:1>:int),
        (<make_array_1030@460:1> > 1) |- bot
        
        P[<array_max_1033@455:1>](<array_max_1033@455:0>:int,<array_max_1033@455:1>:int),
        ((<array_max_1033@455:1> < <array_max_1033@455:0>) && (<<array_max_1033@455:2>@458:0> = <array_max_1033@455:1>))
        |- P[<<array_max_1033@455:2>@458:0>](<array_max_1033@455:0>:int,
                                             <array_max_1033@455:1>:int,
                                             <<array_max_1033@455:2>@458:0>:int)
        
         (<array_max_1033@455:1> = 0)
        |- P[<array_max_1033@455:1>](<array_max_1033@455:0>:int,<array_max_1033@455:1>:int)
      lower bounds:
        P[<array_max_1033@455:1>](<array_max_1033@455:0>:int,<array_max_1033@455:1>:int) = (<array_max_1033@455:1> = 0)
        P[<<<array_max_1033@455:2>@485:1>@501:0>](<array_max_1033@455:0>:int,<array_max_1033@455:1>:int,<<array_max_1033@455:2>@485:0>:int,<<<array_max_1033@455:2>@485:1>@501:0>:int) =
        ((<array_max_1033@455:1> = 0) && (<<<array_max_1033@455:2>@485:1>@501:0> <= 1))
        P[<<<array_max_1033@455:2>@458:1>@474:0>](<array_max_1033@455:0>:int,<array_max_1033@455:1>:int,<<array_max_1033@455:2>@458:0>:int,<<<array_max_1033@455:2>@458:1>@474:0>:int) =
        ((<array_max_1033@455:1> = 0) && (<<<array_max_1033@455:2>@458:1>@474:0> <= 1))
        P[<<array_max_1033@455:2>@458:0>](<array_max_1033@455:0>:int,<array_max_1033@455:1>:int,<<array_max_1033@455:2>@458:0>:int) =
        ((<array_max_1033@455:1> = 0) &&
         ((<array_max_1033@455:1> < <array_max_1033@455:0>) &&
          (<<array_max_1033@455:2>@458:0> = <array_max_1033@455:1>)))
        P[<array_max_1033@478:1>](<array_max_1033@478:0>:int,<array_max_1033@478:1>:int) =
        ((<array_max_1033@478:1> = 1) && (<array_max_1033@478:1> < (1 + <array_max_1033@478:0>)))
        P[<<<array_max_1033@478:2>@481:1>@505:0>](<array_max_1033@478:0>:int,<array_max_1033@478:1>:int,<<array_max_1033@478:2>@481:0>:int,<<<array_max_1033@478:2>@481:1>@505:0>:int) =
        ((<array_max_1033@478:1> = 1) &&
         ((<<<array_max_1033@478:2>@481:1>@505:0> <= 1) && (<array_max_1033@478:1> < (1 + <array_max_1033@478:0>))))
        P[<<array_max_1033@478:2>@481:0>](<array_max_1033@478:0>:int,<array_max_1033@478:1>:int,<<array_max_1033@478:2>@481:0>:int) =
        ((<array_max_1033@478:1> = 1) &&
         ((<array_max_1033@478:1> < <array_max_1033@478:0>) &&
          (<<array_max_1033@478:2>@481:0> = <array_max_1033@478:1>)))
        P[<array_max_1033@509:1>](<array_max_1033@509:0>:int,<array_max_1033@509:1>:int) =
        ((<array_max_1033@509:1> = 2) && (<array_max_1033@509:1> < (1 + <array_max_1033@509:0>)))
        P[<<array_max_1033@455:2>@485:0>](<array_max_1033@455:0>:int,<array_max_1033@455:1>:int,<<array_max_1033@455:2>@485:0>:int) =
        ((<array_max_1033@455:1> = 0) &&
         (((1 + <array_max_1033@455:1>) < <array_max_1033@455:0>) &&
          (<<array_max_1033@455:2>@485:0> = (1 + <array_max_1033@455:1>))))
        P[<<array_max_1033@509:3>@512:0>](<array_max_1033@509:0>:int,<array_max_1033@509:1>:int,<<array_max_1033@509:3>@512:0>:int) =
        ((<<array_max_1033@509:3>@512:0> = 0) &&
         ((<array_max_1033@509:1> = 2) && (<array_max_1033@509:1> = <array_max_1033@509:0>)))
        P[<<array_max_1033@478:3>@521:0>](<array_max_1033@478:0>:int,<array_max_1033@478:1>:int,<<array_max_1033@478:3>@521:0>:int) =
        ((<<array_max_1033@478:3>@521:0> = 1) &&
         ((<array_max_1033@478:1> = 1) && ((1 + <array_max_1033@478:1>) = <array_max_1033@478:0>)))
        P[<<array_max_1033@455:3>@530:0>](<array_max_1033@455:0>:int,<array_max_1033@455:1>:int,<<array_max_1033@455:3>@530:0>:int) =
        ((<<array_max_1033@455:3>@530:0> = 1) &&
         ((<array_max_1033@455:1> = 0) && ((2 + <array_max_1033@455:1>) = <array_max_1033@455:0>)))
        P[<check_1148@534:2>](<check_1148@534:0>:int,<check_1148@534:1>:int,<check_1148@534:2>:int) =
        ((<check_1148@534:1> = 0) && ((<check_1148@534:2> = 1) && (<check_1148@534:0> = 2)))
        P[<check_1148@560:2>](<check_1148@560:0>:int,<check_1148@560:1>:int,<check_1148@560:2>:int) =
        ((<check_1148@560:1> = 1) && ((<check_1148@560:2> = 1) && (<check_1148@560:0> = 2)))
        P[<<check_1148@534:3>@537:0>](<check_1148@534:0>:int,<check_1148@534:1>:int,<check_1148@534:2>:int,<<check_1148@534:3>@537:0>:int) =
        ((<check_1148@534:1> = 0) &&
         ((<check_1148@534:2> = 1) && ((<check_1148@534:0> = 2) && (<<check_1148@534:3>@537:0> = <check_1148@534:1>))))
        P[<fail_1487@596:0>](<fail_1487@596:0>:bool) = false
        P[<<check_1148@560:3>@563:0>](<check_1148@560:0>:int,<check_1148@560:1>:int,<check_1148@560:2>:int,<<check_1148@560:3>@563:0>:int) =
        ((<check_1148@560:1> = 1) &&
         ((<check_1148@560:2> = 1) && ((<check_1148@560:0> = 2) && (<<check_1148@560:3>@563:0> = <check_1148@560:1>))))
        P[<<check_1148@534:3>@569:0>](<check_1148@534:0>:int,<check_1148@534:1>:int,<check_1148@534:2>:int,<<check_1148@534:3>@569:0>:int) =
        ((<check_1148@534:1> = 0) &&
         ((<check_1148@534:2> = 1) &&
          ((<check_1148@534:0> = 2) && (<<check_1148@534:3>@569:0> = (1 + <check_1148@534:1>)))))
      upper bounds:
        P[<<check_1148@534:3>@569:0>](var2051:int,var2052:int,var2053:int,var2054:int) =
        ((var2051 <> 2) || ((var2052 <> 0) || ((var2053 <> 1) || (var2054 <= 1))))
        P[<<check_1148@560:3>@563:0>](var2047:int,var2048:int,var2049:int,var2050:int) =
        ((var2047 <> 2) || ((var2048 <> 1) || ((var2049 <> 1) || (var2050 <= 1))))
        P[<<check_1148@534:3>@537:0>](var2043:int,var2044:int,var2045:int,var2046:int) =
        ((var2043 <> 2) || ((var2044 <> 0) || ((var2045 <> 1) || (var2046 <= 1))))
      begin GenHcSolver.classify_pids(1259243)[4]
        output:
          [<<check_1148@534:3>@537:0>;<<check_1148@560:3>@563:0>;<<check_1148@534:3>@569:0>]
      end GenHcSolver.classify_pids(1259243)[4] (0.003000 sec.)
      begin ApronInterface.convex_hull_interpolate(1259566)[4]
        lb:(((<check_1148@534:1> = 0) &&
             ((<check_1148@534:2> = 1) &&
              ((<check_1148@534:0> = 2) && (<<check_1148@534:3>@537:0> = <check_1148@534:1>)))) ||
            (((<check_1148@534:1> = 1) &&
              ((<check_1148@534:2> = 1) &&
               ((<check_1148@534:0> = 2) && (<<check_1148@534:3>@537:0> = <check_1148@534:1>)))) ||
             ((<check_1148@534:1> = 0) &&
              ((<check_1148@534:2> = 1) &&
               ((<check_1148@534:0> = 2) && (<<check_1148@534:3>@537:0> = (1 + <check_1148@534:1>)))))))
        nub:((not
                ((<check_1148@534:0> <> 2) ||
                 ((<check_1148@534:1> <> 1) || ((<check_1148@534:2> <> 1) || (<<check_1148@534:3>@537:0> <= 1))))) ||
             (not
                ((<check_1148@534:0> <> 2) ||
                 ((<check_1148@534:1> <> 0) || ((<check_1148@534:2> <> 1) || (<<check_1148@534:3>@537:0> <= 1))))))
        lb':(((<check_1148@534:1> = 0) &&
              ((<check_1148@534:2> = 1) &&
               ((<check_1148@534:0> = 2) && (<<check_1148@534:3>@537:0> = <check_1148@534:1>)))) ||
             (((<check_1148@534:1> = 1) &&
               ((<check_1148@534:2> = 1) &&
                ((<check_1148@534:0> = 2) && (<<check_1148@534:3>@537:0> = <check_1148@534:1>)))) ||
              ((<check_1148@534:1> = 0) &&
               ((<check_1148@534:2> = 1) &&
                ((<check_1148@534:0> = 2) && (<<check_1148@534:3>@537:0> = (1 + <check_1148@534:1>)))))))
        nub':((not
                 ((<check_1148@534:0> <> 2) ||
                  ((<check_1148@534:1> <> 1) || ((<check_1148@534:2> <> 1) || (<<check_1148@534:3>@537:0> <= 1))))) ||
              (not
                 ((<check_1148@534:0> <> 2) ||
                  ((<check_1148@534:1> <> 0) || ((<check_1148@534:2> <> 1) || (<<check_1148@534:3>@537:0> <= 1))))))
        begin InterpProver.interpolate(1259567)[5]
          begin InterpProver.interpolate_fresh(1259568)[6]
            begin InterpProver.interpolate_log(1259569)[7]
              input1: (((<check_1148@534:1> = 0) &&
                        ((<check_1148@534:2> = 1) &&
                         ((<check_1148@534:0> = 2) && (<<check_1148@534:3>@537:0> = <check_1148@534:1>)))) ||
                       (((<check_1148@534:1> = 1) &&
                         ((<check_1148@534:2> = 1) &&
                          ((<check_1148@534:0> = 2) && (<<check_1148@534:3>@537:0> = <check_1148@534:1>)))) ||
                        ((<check_1148@534:1> = 0) &&
                         ((<check_1148@534:2> = 1) &&
                          ((<check_1148@534:0> = 2) && (<<check_1148@534:3>@537:0> = (1 + <check_1148@534:1>)))))))
              input2: ((not
                          ((<check_1148@534:0> <> 2) ||
                           ((<check_1148@534:1> <> 1) ||
                            ((<check_1148@534:2> <> 1) || (<<check_1148@534:3>@537:0> <= 1))))) ||
                       (not
                          ((<check_1148@534:0> <> 2) ||
                           ((<check_1148@534:1> <> 0) ||
                            ((<check_1148@534:2> <> 1) || (<<check_1148@534:3>@537:0> <= 1))))))
              begin InterpProver.interpolate_check(1259570)[8]
                begin InterpProver.interpolate_simplify(1259571)[9]
                  begin InterpProver.interpolate_quick(1260073)[10]
                    begin CsisatInterface.interpolate_csisat_wrap(1260082)[11]
                      begin CsisatInterface.interpolate_csisat_post_process(1260083)[12]
                        begin CsisatInterface.interpolate_csisat_log(1260084)[13]
                          input1: (((0 = v_sep_check_1148_sep_534_sep_1 & v_sep_check_1148_sep_534_sep_1 = v_sep_check_1148_sep_534_sep_3_sep_537_sep_0) | (0 = v_sep_check_1148_sep_534_sep_1 & v_sep_check_1148_sep_534_sep_3_sep_537_sep_0 = (1 + v_sep_check_1148_sep_534_sep_1)) | (1 = v_sep_check_1148_sep_534_sep_1 & v_sep_check_1148_sep_534_sep_1 = v_sep_check_1148_sep_534_sep_3_sep_537_sep_0)) & 1 = v_sep_check_1148_sep_534_sep_2 & 2 = v_sep_check_1148_sep_534_sep_0)
                          input2: ((0 = v_sep_check_1148_sep_534_sep_1 | 1 = v_sep_check_1148_sep_534_sep_1) & 1 = v_sep_check_1148_sep_534_sep_2 & 2 = v_sep_check_1148_sep_534_sep_0 & 2 <= v_sep_check_1148_sep_534_sep_3_sep_537_sep_0)
                          begin CsisatInterface.interpolate_csisat_raw(1260085)[14]
                            
                          end CsisatInterface.interpolate_csisat_raw(1260085)[14] (0.002999 sec.)
                          output: ((((not 0 = v_sep_check_1148_sep_534_sep_1 & 0 = v_sep_check_1148_sep_534_sep_1) | not 1 = v_sep_check_1148_sep_534_sep_1 | 2*v_sep_check_1148_sep_534_sep_3_sep_537_sep_0 <= 2) & (not 0 = v_sep_check_1148_sep_534_sep_1 | 1 = v_sep_check_1148_sep_534_sep_1 | v_sep_check_1148_sep_534_sep_3_sep_537_sep_0 <= 0 | 2*v_sep_check_1148_sep_534_sep_3_sep_537_sep_0 <= 2)) | not 1 = v_sep_check_1148_sep_534_sep_2 | not 2 = v_sep_check_1148_sep_534_sep_0)
                          
                        end CsisatInterface.interpolate_csisat_log(1260084)[13] (0.002999 sec.)
                        after simplification: ((((not 0 = v_sep_check_1148_sep_534_sep_1 & 0 = v_sep_check_1148_sep_534_sep_1) | not 1 = v_sep_check_1148_sep_534_sep_1 | 2*v_sep_check_1148_sep_534_sep_3_sep_537_sep_0 <= 2) & (not 0 = v_sep_check_1148_sep_534_sep_1 | 1 = v_sep_check_1148_sep_534_sep_1 | v_sep_check_1148_sep_534_sep_3_sep_537_sep_0 <= 0 | 2*v_sep_check_1148_sep_534_sep_3_sep_537_sep_0 <= 2)) | not 1 = v_sep_check_1148_sep_534_sep_2 | not 2 = v_sep_check_1148_sep_534_sep_0)
                        after dnf conversion: ((2*v_sep_check_1148_sep_534_sep_3_sep_537_sep_0 <= 2 & 2*v_sep_check_1148_sep_534_sep_3_sep_537_sep_0 <= 2) | (2*v_sep_check_1148_sep_534_sep_3_sep_537_sep_0 <= 2 & v_sep_check_1148_sep_534_sep_3_sep_537_sep_0 <= 0) | (2*v_sep_check_1148_sep_534_sep_3_sep_537_sep_0 <= 2 & 1 = v_sep_check_1148_sep_534_sep_1) | (2*v_sep_check_1148_sep_534_sep_3_sep_537_sep_0 <= 2 & not 0 = v_sep_check_1148_sep_534_sep_1) | (not 1 = v_sep_check_1148_sep_534_sep_1 & 2*v_sep_check_1148_sep_534_sep_3_sep_537_sep_0 <= 2) | (not 1 = v_sep_check_1148_sep_534_sep_1 & v_sep_check_1148_sep_534_sep_3_sep_537_sep_0 <= 0) | (not 1 = v_sep_check_1148_sep_534_sep_1 & 1 = v_sep_check_1148_sep_534_sep_1) | (not 1 = v_sep_check_1148_sep_534_sep_1 & not 0 = v_sep_check_1148_sep_534_sep_1) | (not 0 = v_sep_check_1148_sep_534_sep_1 & 0 = v_sep_check_1148_sep_534_sep_1 & 2*v_sep_check_1148_sep_534_sep_3_sep_537_sep_0 <= 2) | (not 0 = v_sep_check_1148_sep_534_sep_1 & 0 = v_sep_check_1148_sep_534_sep_1 & v_sep_check_1148_sep_534_sep_3_sep_537_sep_0 <= 0) | (not 0 = v_sep_check_1148_sep_534_sep_1 & 0 = v_sep_check_1148_sep_534_sep_1 & 1 = v_sep_check_1148_sep_534_sep_1) | (not 0 = v_sep_check_1148_sep_534_sep_1 & 0 = v_sep_check_1148_sep_534_sep_1 & not 0 = v_sep_check_1148_sep_534_sep_1) | (not 1 = v_sep_check_1148_sep_534_sep_2) | (not 2 = v_sep_check_1148_sep_534_sep_0))
                        
                      end CsisatInterface.interpolate_csisat_post_process(1260083)[12] (0.002999 sec.)
                      
                    end CsisatInterface.interpolate_csisat_wrap(1260082)[11] (0.002999 sec.)
                    
                  end InterpProver.interpolate_quick(1260073)[10] (0.002999 sec.)
                  begin minimizing # of disjunctions(1260297)[10]
                    input: ((<<check_1148@534:3>@537:0> <= 1) ||
                            ((1 <> <check_1148@534:2>) ||
                             ((2 <> <check_1148@534:0>) ||
                              (((<check_1148@534:1> = 1) && (<<check_1148@534:3>@537:0> <= 1)) ||
                               (((<<check_1148@534:3>@537:0> <= 1) && (0 <> <check_1148@534:1>)) ||
                                (((1 <> <check_1148@534:1>) && (<<check_1148@534:3>@537:0> <= 1)) ||
                                 (((1 <> <check_1148@534:1>) && (<<check_1148@534:3>@537:0> <= 0)) ||
                                  ((1 <> <check_1148@534:1>) && (0 <> <check_1148@534:1>)))))))))
                    output: (((1 <> <check_1148@534:1>) && (<<check_1148@534:3>@537:0> <= 1)) ||
                             ((<<check_1148@534:3>@537:0> <= 1) && (0 <> <check_1148@534:1>)))
                  end minimizing # of disjunctions(1260297)[10] (0.004999 sec.)
                  begin minimizing # of conjunctions(1260938)[10]
                    input: ((1 <> <check_1148@534:1>) && (<<check_1148@534:3>@537:0> <= 1))
                    output: (<<check_1148@534:3>@537:0> <= 1)
                  end minimizing # of conjunctions(1260938)[10] (0.003000 sec.)
                  begin minimizing # of conjunctions(1261245)[10]
                    input: ((<<check_1148@534:3>@537:0> <= 1) && (0 <> <check_1148@534:1>))
                    output: (<<check_1148@534:3>@537:0> <= 1)
                  end minimizing # of conjunctions(1261245)[10] (0.001999 sec.)
                  
                end InterpProver.interpolate_simplify(1259571)[9] (0.016997 sec.)
                
              end InterpProver.interpolate_check(1259570)[8] (0.017997 sec.)
              output: (<<check_1148@534:3>@537:0> <= 1)
            end InterpProver.interpolate_log(1259569)[7] (0.018997 sec.)
            
          end InterpProver.interpolate_fresh(1259568)[6] (0.018997 sec.)
          
        end InterpProver.interpolate(1259567)[5] (0.018997 sec.)
        output:
          P[<<check_1148@534:3>@537:0>](<check_1148@534:0>:int,<check_1148@534:1>:int,<check_1148@534:2>:int,<<check_1148@534:3>@537:0>:int) =
          (<<check_1148@534:3>@537:0> <= 1)
          P[<<check_1148@560:3>@563:0>](<check_1148@534:0>:int,<check_1148@534:1>:int,<check_1148@534:2>:int,<<check_1148@534:3>@537:0>:int) =
          (<<check_1148@534:3>@537:0> <= 1)
          P[<<check_1148@534:3>@569:0>](<check_1148@534:0>:int,<check_1148@534:1>:int,<check_1148@534:2>:int,<<check_1148@534:3>@537:0>:int) =
          (<<check_1148@534:3>@537:0> <= 1)
      end ApronInterface.convex_hull_interpolate(1259566)[4] (0.018997 sec.)
      Horn clauses:
        P[<fail_1487@596:0>](<fail_1487@596:0>:bool)|- bot
        
        P[<check_1148@560:2>](<f_check_1482@593:2>:int,<f_check_1482@593:0>:int,<f_check_1482@593:1>:int),
        ((<f_check_1482@593:0> < <f_check_1482@593:2>) && ((<f_check_1482@593:1> < 1) && <fail_1487@596:0>))
        |- P[<fail_1487@596:0>](<fail_1487@596:0>:bool)
        
        P[<check_1148@560:2>](<check_1148@560:0>:int,<<check_1148@560:3>@563:0>:int,<check_1148@560:2>:int),
        ((<<check_1148@560:3>@563:0> < <check_1148@560:0>) && (<<check_1148@560:3>@563:0> > 1)) |- bot
        
        P[<check_1148@534:2>](<check_1148@560:0>:int,(-1 + <check_1148@560:1>):int,<check_1148@560:2>:int),
        (<check_1148@560:1> < (1 + <check_1148@560:0>))
        |- P[<check_1148@560:2>](<check_1148@560:0>:int,<check_1148@560:1>:int,
                                 <check_1148@560:2>:int)
        
        P[<check_1148@534:2>](<check_1148@534:0>:int,<<check_1148@534:3>@537:0>:int,<check_1148@534:2>:int),
        ((<<check_1148@534:3>@537:0> < <check_1148@534:0>) && (<<check_1148@534:3>@537:0> > 1)) |- bot
        
        P[<<array_max_1033@455:3>@530:0>](<check_1148@534:0>:int,0:int,<check_1148@534:2>:int),
        (<check_1148@534:1> = 0)
        |- P[<check_1148@534:2>](<check_1148@534:0>:int,<check_1148@534:1>:int,
                                 <check_1148@534:2>:int)
        
        P[<array_max_1033@455:1>](<array_max_1033@455:0>:int,<array_max_1033@455:1>:int),
        P[<<<array_max_1033@455:2>@458:1>@474:0>](<array_max_1033@455:0>:int,<array_max_1033@455:1>:int,<array_max_1033@455:1>:int,var1930:int),
        P[<<array_max_1033@478:3>@521:0>](<array_max_1033@455:0>:int,(
                                          1 + <array_max_1033@455:1>):int,<<array_max_1033@455:3>@530:0>:int),
        ((var1930 <= <<array_max_1033@455:3>@530:0>) && (<array_max_1033@455:1> < <array_max_1033@455:0>))
        |- P[<<array_max_1033@455:3>@530:0>](<array_max_1033@455:0>:int,
                                             <array_max_1033@455:1>:int,
                                             <<array_max_1033@455:3>@530:0>:int)
        
        P[<array_max_1033@478:1>](<array_max_1033@478:0>:int,<array_max_1033@478:1>:int),
        P[<<<array_max_1033@478:2>@481:1>@505:0>](<array_max_1033@478:0>:int,<array_max_1033@478:1>:int,<array_max_1033@478:1>:int,<<array_max_1033@478:3>@521:0>:int),
        P[<<array_max_1033@509:3>@512:0>](<array_max_1033@478:0>:int,(
                                          1 + <array_max_1033@478:1>):int,var1931:int),
        ((<<array_max_1033@478:3>@521:0> > var1931) && (<array_max_1033@478:1> < <array_max_1033@478:0>))
        |- P[<<array_max_1033@478:3>@521:0>](<array_max_1033@478:0>:int,
                                             <array_max_1033@478:1>:int,
                                             <<array_max_1033@478:3>@521:0>:int)
        
        P[<array_max_1033@509:1>](<array_max_1033@509:0>:int,<array_max_1033@509:1>:int),
        ((<<array_max_1033@509:3>@512:0> = 0) && (<array_max_1033@509:1> >= <array_max_1033@509:0>))
        |- P[<<array_max_1033@509:3>@512:0>](<array_max_1033@509:0>:int,
                                             <array_max_1033@509:1>:int,
                                             <<array_max_1033@509:3>@512:0>:int)
        
        P[<array_max_1033@478:1>](<array_max_1033@509:0>:int,(-1 + <array_max_1033@509:1>):int),
        P[<<<array_max_1033@478:2>@481:1>@505:0>](<array_max_1033@509:0>:int,(
                                                  -1 + <array_max_1033@509:1>):int,(
                                                  -1 + <array_max_1033@509:1>):int,<f_array_max_1480@507:4>:int),
        (<array_max_1033@509:1> < (1 + <array_max_1033@509:0>))
        |- P[<array_max_1033@509:1>](<array_max_1033@509:0>:int,<array_max_1033@509:1>:int)
        
        P[<<<array_max_1033@455:2>@458:1>@474:0>](<array_max_1033@478:0>:int,(
                                                  -1 + <array_max_1033@478:1>):int,(
                                                  -1 + <array_max_1033@478:1>):int,<f_array_max_1480@476:4>:int),
        P[<array_max_1033@455:1>](<array_max_1033@478:0>:int,(-1 + <array_max_1033@478:1>):int),
        P[<<<array_max_1033@455:2>@485:1>@501:0>](<array_max_1033@478:0>:int,(
                                                  -1 + <array_max_1033@478:1>):int,<<array_max_1033@478:2>@481:0>:int,<<<array_max_1033@478:2>@481:1>@505:0>:int),
        P[<array_max_1033@478:1>](<array_max_1033@478:0>:int,<array_max_1033@478:1>:int),
        (<array_max_1033@478:1> < (1 + <array_max_1033@478:0>))
        |- P[<<<array_max_1033@478:2>@481:1>@505:0>](<array_max_1033@478:0>:int,
                                                     <array_max_1033@478:1>:int,
                                                     <<array_max_1033@478:2>@481:0>:int,
                                                     <<<array_max_1033@478:2>@481:1>@505:0>:int)
        
        P[<array_max_1033@455:1>](<array_max_1033@455:0>:int,<array_max_1033@455:1>:int),
        ((<array_max_1033@455:1> = 0) && (<<<array_max_1033@455:2>@485:1>@501:0> <= 1))
        |- P[<<<array_max_1033@455:2>@485:1>@501:0>](<array_max_1033@455:0>:int,
                                                     <array_max_1033@455:1>:int,
                                                     <<array_max_1033@455:2>@485:0>:int,
                                                     <<<array_max_1033@455:2>@485:1>@501:0>:int)
        
        P[<<array_max_1033@455:2>@485:0>](<make_array_1030@487:0>:int,0:int,<make_array_1030@487:1>:int),
        (<make_array_1030@487:1> > 1) |- bot
        
        P[<array_max_1033@455:1>](<array_max_1033@455:0>:int,<array_max_1033@455:1>:int),
        P[<<<array_max_1033@455:2>@458:1>@474:0>](<array_max_1033@455:0>:int,<array_max_1033@455:1>:int,<array_max_1033@455:1>:int,var1932:int),
        P[<<array_max_1033@478:2>@481:0>](<array_max_1033@455:0>:int,(
                                          1 + <array_max_1033@455:1>):int,<<array_max_1033@455:2>@485:0>:int),
        (<array_max_1033@455:1> < <array_max_1033@455:0>)
        |- P[<<array_max_1033@455:2>@485:0>](<array_max_1033@455:0>:int,
                                             <array_max_1033@455:1>:int,
                                             <<array_max_1033@455:2>@485:0>:int)
        
        P[<array_max_1033@478:1>](<array_max_1033@478:0>:int,<array_max_1033@478:1>:int),
        ((<array_max_1033@478:1> < <array_max_1033@478:0>) && (<<array_max_1033@478:2>@481:0> = <array_max_1033@478:1>))
        |- P[<<array_max_1033@478:2>@481:0>](<array_max_1033@478:0>:int,
                                             <array_max_1033@478:1>:int,
                                             <<array_max_1033@478:2>@481:0>:int)
        
        P[<array_max_1033@455:1>](<array_max_1033@478:0>:int,(-1 + <array_max_1033@478:1>):int),
        P[<<<array_max_1033@455:2>@458:1>@474:0>](<array_max_1033@478:0>:int,(
                                                  -1 + <array_max_1033@478:1>):int,(
                                                  -1 + <array_max_1033@478:1>):int,<f_array_max_1480@476:4>:int),
        (<array_max_1033@478:1> < (1 + <array_max_1033@478:0>))
        |- P[<array_max_1033@478:1>](<array_max_1033@478:0>:int,<array_max_1033@478:1>:int)
        
        P[<array_max_1033@455:1>](<array_max_1033@455:0>:int,<array_max_1033@455:1>:int),
        ((<array_max_1033@455:1> = 0) && (<<<array_max_1033@455:2>@458:1>@474:0> <= 1))
        |- P[<<<array_max_1033@455:2>@458:1>@474:0>](<array_max_1033@455:0>:int,
                                                     <array_max_1033@455:1>:int,
                                                     <<array_max_1033@455:2>@458:0>:int,
                                                     <<<array_max_1033@455:2>@458:1>@474:0>:int)
        
        P[<<array_max_1033@455:2>@458:0>](<make_array_1030@460:0>:int,0:int,<make_array_1030@460:1>:int),
        (<make_array_1030@460:1> > 1) |- bot
        
        P[<array_max_1033@455:1>](<array_max_1033@455:0>:int,<array_max_1033@455:1>:int),
        ((<array_max_1033@455:1> < <array_max_1033@455:0>) && (<<array_max_1033@455:2>@458:0> = <array_max_1033@455:1>))
        |- P[<<array_max_1033@455:2>@458:0>](<array_max_1033@455:0>:int,
                                             <array_max_1033@455:1>:int,
                                             <<array_max_1033@455:2>@458:0>:int)
        
         (<array_max_1033@455:1> = 0)
        |- P[<array_max_1033@455:1>](<array_max_1033@455:0>:int,<array_max_1033@455:1>:int)
      lower bounds:
        P[<array_max_1033@455:1>](<array_max_1033@455:0>:int,<array_max_1033@455:1>:int) = (<array_max_1033@455:1> = 0)
        P[<<<array_max_1033@455:2>@485:1>@501:0>](<array_max_1033@455:0>:int,<array_max_1033@455:1>:int,<<array_max_1033@455:2>@485:0>:int,<<<array_max_1033@455:2>@485:1>@501:0>:int) =
        ((<array_max_1033@455:1> = 0) && (<<<array_max_1033@455:2>@485:1>@501:0> <= 1))
        P[<<<array_max_1033@455:2>@458:1>@474:0>](<array_max_1033@455:0>:int,<array_max_1033@455:1>:int,<<array_max_1033@455:2>@458:0>:int,<<<array_max_1033@455:2>@458:1>@474:0>:int) =
        ((<array_max_1033@455:1> = 0) && (<<<array_max_1033@455:2>@458:1>@474:0> <= 1))
        P[<<array_max_1033@455:2>@458:0>](<array_max_1033@455:0>:int,<array_max_1033@455:1>:int,<<array_max_1033@455:2>@458:0>:int) =
        ((<array_max_1033@455:1> = 0) &&
         ((<array_max_1033@455:1> < <array_max_1033@455:0>) &&
          (<<array_max_1033@455:2>@458:0> = <array_max_1033@455:1>)))
        P[<array_max_1033@478:1>](<array_max_1033@478:0>:int,<array_max_1033@478:1>:int) =
        ((<array_max_1033@478:1> = 1) && (<array_max_1033@478:1> < (1 + <array_max_1033@478:0>)))
        P[<<<array_max_1033@478:2>@481:1>@505:0>](<array_max_1033@478:0>:int,<array_max_1033@478:1>:int,<<array_max_1033@478:2>@481:0>:int,<<<array_max_1033@478:2>@481:1>@505:0>:int) =
        ((<array_max_1033@478:1> = 1) &&
         ((<<<array_max_1033@478:2>@481:1>@505:0> <= 1) && (<array_max_1033@478:1> < (1 + <array_max_1033@478:0>))))
        P[<<array_max_1033@478:2>@481:0>](<array_max_1033@478:0>:int,<array_max_1033@478:1>:int,<<array_max_1033@478:2>@481:0>:int) =
        ((<array_max_1033@478:1> = 1) &&
         ((<array_max_1033@478:1> < <array_max_1033@478:0>) &&
          (<<array_max_1033@478:2>@481:0> = <array_max_1033@478:1>)))
        P[<array_max_1033@509:1>](<array_max_1033@509:0>:int,<array_max_1033@509:1>:int) =
        ((<array_max_1033@509:1> = 2) && (<array_max_1033@509:1> < (1 + <array_max_1033@509:0>)))
        P[<<array_max_1033@455:2>@485:0>](<array_max_1033@455:0>:int,<array_max_1033@455:1>:int,<<array_max_1033@455:2>@485:0>:int) =
        ((<array_max_1033@455:1> = 0) &&
         (((1 + <array_max_1033@455:1>) < <array_max_1033@455:0>) &&
          (<<array_max_1033@455:2>@485:0> = (1 + <array_max_1033@455:1>))))
        P[<<array_max_1033@509:3>@512:0>](<array_max_1033@509:0>:int,<array_max_1033@509:1>:int,<<array_max_1033@509:3>@512:0>:int) =
        ((<<array_max_1033@509:3>@512:0> = 0) &&
         ((<array_max_1033@509:1> = 2) && (<array_max_1033@509:1> = <array_max_1033@509:0>)))
        P[<<array_max_1033@478:3>@521:0>](<array_max_1033@478:0>:int,<array_max_1033@478:1>:int,<<array_max_1033@478:3>@521:0>:int) =
        ((<<array_max_1033@478:3>@521:0> = 1) &&
         ((<array_max_1033@478:1> = 1) && ((1 + <array_max_1033@478:1>) = <array_max_1033@478:0>)))
        P[<<array_max_1033@455:3>@530:0>](<array_max_1033@455:0>:int,<array_max_1033@455:1>:int,<<array_max_1033@455:3>@530:0>:int) =
        ((<<array_max_1033@455:3>@530:0> = 1) &&
         ((<array_max_1033@455:1> = 0) && ((2 + <array_max_1033@455:1>) = <array_max_1033@455:0>)))
        P[<check_1148@534:2>](<check_1148@534:0>:int,<check_1148@534:1>:int,<check_1148@534:2>:int) =
        ((<check_1148@534:1> = 0) && ((<check_1148@534:2> = 1) && (<check_1148@534:0> = 2)))
        P[<check_1148@560:2>](<check_1148@560:0>:int,<check_1148@560:1>:int,<check_1148@560:2>:int) =
        ((<check_1148@560:1> = 1) && ((<check_1148@560:2> = 1) && (<check_1148@560:0> = 2)))
        P[<fail_1487@596:0>](<fail_1487@596:0>:bool) = false
      upper bounds:
        P[<<array_max_1033@455:3>@530:0>](var2073:int,var2074:int,var2075:int) =
        ((var2074 <> 0) || ((1 >= var2073) || (var2075 >= 1)))
        P[<<array_max_1033@478:3>@521:0>](var2068:int,var2069:int,var2070:int) =
        ((var2069 <> 1) || ((var2070 >= 1) || (1 >= var2068)))
        P[<<array_max_1033@509:3>@512:0>](var2063:int,var2064:int,var2065:int) =
        ((var2064 <> 2) || ((1 >= var2063) || (var2065 >= 0)))
      begin GenHcSolver.classify_pids(1298427)[4]
        output:
          [<<array_max_1033@509:3>@512:0>;<<array_max_1033@478:3>@521:0>;<<array_max_1033@455:3>@530:0>]
      end GenHcSolver.classify_pids(1298427)[4] (0.002000 sec.)
      begin ApronInterface.convex_hull_interpolate(1298763)[4]
        lb:(((<<array_max_1033@509:3>@512:0> = 0) &&
             ((<array_max_1033@509:1> = 2) && (<array_max_1033@509:1> = <array_max_1033@509:0>))) ||
            (((<<array_max_1033@509:3>@512:0> = 1) &&
              ((<array_max_1033@509:1> = 1) && ((1 + <array_max_1033@509:1>) = <array_max_1033@509:0>))) ||
             ((<<array_max_1033@509:3>@512:0> = 1) &&
              ((<array_max_1033@509:1> = 0) && ((2 + <array_max_1033@509:1>) = <array_max_1033@509:0>)))))
        nub:((not
                ((<array_max_1033@509:1> <> 2) ||
                 ((1 >= <array_max_1033@509:0>) || (<<array_max_1033@509:3>@512:0> >= 0)))) ||
             ((not
                 ((<array_max_1033@509:1> <> 1) ||
                  ((<<array_max_1033@509:3>@512:0> >= 1) || (1 >= <array_max_1033@509:0>)))) ||
              (not
                 ((<array_max_1033@509:1> <> 0) ||
                  ((1 >= <array_max_1033@509:0>) || (<<array_max_1033@509:3>@512:0> >= 1))))))
        lb':(((<<array_max_1033@509:3>@512:0> = 0) &&
              ((<array_max_1033@509:1> = 2) && (<array_max_1033@509:1> = <array_max_1033@509:0>))) ||
             (((<<array_max_1033@509:3>@512:0> = 1) &&
               ((<array_max_1033@509:1> = 1) && ((1 + <array_max_1033@509:1>) = <array_max_1033@509:0>))) ||
              ((<<array_max_1033@509:3>@512:0> = 1) &&
               ((<array_max_1033@509:1> = 0) && ((2 + <array_max_1033@509:1>) = <array_max_1033@509:0>)))))
        nub':((not
                 ((<array_max_1033@509:1> <> 2) ||
                  ((1 >= <array_max_1033@509:0>) || (<<array_max_1033@509:3>@512:0> >= 0)))) ||
              ((not
                  ((<array_max_1033@509:1> <> 1) ||
                   ((<<array_max_1033@509:3>@512:0> >= 1) || (1 >= <array_max_1033@509:0>)))) ||
               (not
                  ((<array_max_1033@509:1> <> 0) ||
                   ((1 >= <array_max_1033@509:0>) || (<<array_max_1033@509:3>@512:0> >= 1))))))
        begin InterpProver.interpolate(1298764)[5]
          begin InterpProver.interpolate_fresh(1298765)[6]
            begin InterpProver.interpolate_log(1298766)[7]
              input1: (((<<array_max_1033@509:3>@512:0> = 0) &&
                        ((<array_max_1033@509:1> = 2) && (<array_max_1033@509:1> = <array_max_1033@509:0>))) ||
                       (((<<array_max_1033@509:3>@512:0> = 1) &&
                         ((<array_max_1033@509:1> = 1) && ((1 + <array_max_1033@509:1>) = <array_max_1033@509:0>))) ||
                        ((<<array_max_1033@509:3>@512:0> = 1) &&
                         ((<array_max_1033@509:1> = 0) && ((2 + <array_max_1033@509:1>) = <array_max_1033@509:0>)))))
              input2: ((not
                          ((<array_max_1033@509:1> <> 2) ||
                           ((1 >= <array_max_1033@509:0>) || (<<array_max_1033@509:3>@512:0> >= 0)))) ||
                       ((not
                           ((<array_max_1033@509:1> <> 1) ||
                            ((<<array_max_1033@509:3>@512:0> >= 1) || (1 >= <array_max_1033@509:0>)))) ||
                        (not
                           ((<array_max_1033@509:1> <> 0) ||
                            ((1 >= <array_max_1033@509:0>) || (<<array_max_1033@509:3>@512:0> >= 1))))))
              begin InterpProver.interpolate_check(1298767)[8]
                begin InterpProver.interpolate_simplify(1298768)[9]
                  begin InterpProver.interpolate_quick(1299194)[10]
                    begin CsisatInterface.interpolate_csisat_wrap(1299203)[11]
                      begin CsisatInterface.interpolate_csisat_post_process(1299204)[12]
                        begin CsisatInterface.interpolate_csisat_log(1299205)[13]
                          input1: ((((0 = v_sep_array_max_1033_sep_509_sep_1 & v_sep_array_max_1033_sep_509_sep_0 = (2 + v_sep_array_max_1033_sep_509_sep_1)) | (1 = v_sep_array_max_1033_sep_509_sep_1 & v_sep_array_max_1033_sep_509_sep_0 = (1 + v_sep_array_max_1033_sep_509_sep_1))) & 1 = v_sep_array_max_1033_sep_509_sep_3_sep_512_sep_0) | (0 = v_sep_array_max_1033_sep_509_sep_3_sep_512_sep_0 & 2 = v_sep_array_max_1033_sep_509_sep_1 & v_sep_array_max_1033_sep_509_sep_0 = v_sep_array_max_1033_sep_509_sep_1))
                          input2: ((((0 = v_sep_array_max_1033_sep_509_sep_1 | 1 = v_sep_array_max_1033_sep_509_sep_1) & (1 + v_sep_array_max_1033_sep_509_sep_3_sep_512_sep_0) <= 1) | (2 = v_sep_array_max_1033_sep_509_sep_1 & (1 + v_sep_array_max_1033_sep_509_sep_3_sep_512_sep_0) <= 0)) & 2 <= v_sep_array_max_1033_sep_509_sep_0)
                          begin CsisatInterface.interpolate_csisat_raw(1299206)[14]
                            
                          end CsisatInterface.interpolate_csisat_raw(1299206)[14] (0.008999 sec.)
                          output: (((((not 0 = v_sep_array_max_1033_sep_509_sep_1 | 1 = v_sep_array_max_1033_sep_509_sep_1) & not 1 = v_sep_array_max_1033_sep_509_sep_1 & -2*v_sep_array_max_1033_sep_509_sep_3_sep_512_sep_0 <= 0) | not 2 = v_sep_array_max_1033_sep_509_sep_1) & 2 = v_sep_array_max_1033_sep_509_sep_1) | ((((not 1 = v_sep_array_max_1033_sep_509_sep_1 | -2*v_sep_array_max_1033_sep_509_sep_3_sep_512_sep_0 <= -2) & 1 = v_sep_array_max_1033_sep_509_sep_1) | 0 = v_sep_array_max_1033_sep_509_sep_1) & ((not 1 = v_sep_array_max_1033_sep_509_sep_1 & 1 = v_sep_array_max_1033_sep_509_sep_1) | not 0 = v_sep_array_max_1033_sep_509_sep_1 | -2*v_sep_array_max_1033_sep_509_sep_3_sep_512_sep_0 <= -2) & (0 = v_sep_array_max_1033_sep_509_sep_1 | 1 = v_sep_array_max_1033_sep_509_sep_1)))
                          
                        end CsisatInterface.interpolate_csisat_log(1299205)[13] (0.008999 sec.)
                        after simplification: (((((not 0 = v_sep_array_max_1033_sep_509_sep_1 | 1 = v_sep_array_max_1033_sep_509_sep_1) & not 1 = v_sep_array_max_1033_sep_509_sep_1 & -2*v_sep_array_max_1033_sep_509_sep_3_sep_512_sep_0 <= 0) | not 2 = v_sep_array_max_1033_sep_509_sep_1) & 2 = v_sep_array_max_1033_sep_509_sep_1) | ((((not 1 = v_sep_array_max_1033_sep_509_sep_1 | -2*v_sep_array_max_1033_sep_509_sep_3_sep_512_sep_0 <= -2) & 1 = v_sep_array_max_1033_sep_509_sep_1) | 0 = v_sep_array_max_1033_sep_509_sep_1) & ((not 1 = v_sep_array_max_1033_sep_509_sep_1 & 1 = v_sep_array_max_1033_sep_509_sep_1) | not 0 = v_sep_array_max_1033_sep_509_sep_1 | -2*v_sep_array_max_1033_sep_509_sep_3_sep_512_sep_0 <= -2) & (0 = v_sep_array_max_1033_sep_509_sep_1 | 1 = v_sep_array_max_1033_sep_509_sep_1)))
                        after dnf conversion: ((not 2 = v_sep_array_max_1033_sep_509_sep_1 & 2 = v_sep_array_max_1033_sep_509_sep_1) | (not 0 = v_sep_array_max_1033_sep_509_sep_1 & not 1 = v_sep_array_max_1033_sep_509_sep_1 & -2*v_sep_array_max_1033_sep_509_sep_3_sep_512_sep_0 <= 0 & 2 = v_sep_array_max_1033_sep_509_sep_1) | (1 = v_sep_array_max_1033_sep_509_sep_1 & not 1 = v_sep_array_max_1033_sep_509_sep_1 & -2*v_sep_array_max_1033_sep_509_sep_3_sep_512_sep_0 <= 0 & 2 = v_sep_array_max_1033_sep_509_sep_1) | (0 = v_sep_array_max_1033_sep_509_sep_1 & -2*v_sep_array_max_1033_sep_509_sep_3_sep_512_sep_0 <= -2 & 1 = v_sep_array_max_1033_sep_509_sep_1) | (0 = v_sep_array_max_1033_sep_509_sep_1 & -2*v_sep_array_max_1033_sep_509_sep_3_sep_512_sep_0 <= -2 & 0 = v_sep_array_max_1033_sep_509_sep_1) | (0 = v_sep_array_max_1033_sep_509_sep_1 & not 0 = v_sep_array_max_1033_sep_509_sep_1 & 1 = v_sep_array_max_1033_sep_509_sep_1) | (0 = v_sep_array_max_1033_sep_509_sep_1 & not 0 = v_sep_array_max_1033_sep_509_sep_1 & 0 = v_sep_array_max_1033_sep_509_sep_1) | (0 = v_sep_array_max_1033_sep_509_sep_1 & not 1 = v_sep_array_max_1033_sep_509_sep_1 & 1 = v_sep_array_max_1033_sep_509_sep_1 & 1 = v_sep_array_max_1033_sep_509_sep_1) | (0 = v_sep_array_max_1033_sep_509_sep_1 & not 1 = v_sep_array_max_1033_sep_509_sep_1 & 1 = v_sep_array_max_1033_sep_509_sep_1 & 0 = v_sep_array_max_1033_sep_509_sep_1) | (not 1 = v_sep_array_max_1033_sep_509_sep_1 & 1 = v_sep_array_max_1033_sep_509_sep_1 & -2*v_sep_array_max_1033_sep_509_sep_3_sep_512_sep_0 <= -2 & 1 = v_sep_array_max_1033_sep_509_sep_1) | (not 1 = v_sep_array_max_1033_sep_509_sep_1 & 1 = v_sep_array_max_1033_sep_509_sep_1 & -2*v_sep_array_max_1033_sep_509_sep_3_sep_512_sep_0 <= -2 & 0 = v_sep_array_max_1033_sep_509_sep_1) | (not 1 = v_sep_array_max_1033_sep_509_sep_1 & 1 = v_sep_array_max_1033_sep_509_sep_1 & not 0 = v_sep_array_max_1033_sep_509_sep_1 & 1 = v_sep_array_max_1033_sep_509_sep_1) | (not 1 = v_sep_array_max_1033_sep_509_sep_1 & 1 = v_sep_array_max_1033_sep_509_sep_1 & not 0 = v_sep_array_max_1033_sep_509_sep_1 & 0 = v_sep_array_max_1033_sep_509_sep_1) | (not 1 = v_sep_array_max_1033_sep_509_sep_1 & 1 = v_sep_array_max_1033_sep_509_sep_1 & not 1 = v_sep_array_max_1033_sep_509_sep_1 & 1 = v_sep_array_max_1033_sep_509_sep_1 & 1 = v_sep_array_max_1033_sep_509_sep_1) | (not 1 = v_sep_array_max_1033_sep_509_sep_1 & 1 = v_sep_array_max_1033_sep_509_sep_1 & not 1 = v_sep_array_max_1033_sep_509_sep_1 & 1 = v_sep_array_max_1033_sep_509_sep_1 & 0 = v_sep_array_max_1033_sep_509_sep_1) | (-2*v_sep_array_max_1033_sep_509_sep_3_sep_512_sep_0 <= -2 & 1 = v_sep_array_max_1033_sep_509_sep_1 & -2*v_sep_array_max_1033_sep_509_sep_3_sep_512_sep_0 <= -2 & 1 = v_sep_array_max_1033_sep_509_sep_1) | (-2*v_sep_array_max_1033_sep_509_sep_3_sep_512_sep_0 <= -2 & 1 = v_sep_array_max_1033_sep_509_sep_1 & -2*v_sep_array_max_1033_sep_509_sep_3_sep_512_sep_0 <= -2 & 0 = v_sep_array_max_1033_sep_509_sep_1) | (-2*v_sep_array_max_1033_sep_509_sep_3_sep_512_sep_0 <= -2 & 1 = v_sep_array_max_1033_sep_509_sep_1 & not 0 = v_sep_array_max_1033_sep_509_sep_1 & 1 = v_sep_array_max_1033_sep_509_sep_1) | (-2*v_sep_array_max_1033_sep_509_sep_3_sep_512_sep_0 <= -2 & 1 = v_sep_array_max_1033_sep_509_sep_1 & not 0 = v_sep_array_max_1033_sep_509_sep_1 & 0 = v_sep_array_max_1033_sep_509_sep_1) | (-2*v_sep_array_max_1033_sep_509_sep_3_sep_512_sep_0 <= -2 & 1 = v_sep_array_max_1033_sep_509_sep_1 & not 1 = v_sep_array_max_1033_sep_509_sep_1 & 1 = v_sep_array_max_1033_sep_509_sep_1 & 1 = v_sep_array_max_1033_sep_509_sep_1) | (-2*v_sep_array_max_1033_sep_509_sep_3_sep_512_sep_0 <= -2 & 1 = v_sep_array_max_1033_sep_509_sep_1 & not 1 = v_sep_array_max_1033_sep_509_sep_1 & 1 = v_sep_array_max_1033_sep_509_sep_1 & 0 = v_sep_array_max_1033_sep_509_sep_1))
                        
                      end CsisatInterface.interpolate_csisat_post_process(1299204)[12] (0.009999 sec.)
                      
                    end CsisatInterface.interpolate_csisat_wrap(1299203)[11] (0.009999 sec.)
                    
                  end InterpProver.interpolate_quick(1299194)[10] (0.009999 sec.)
                  begin minimizing # of disjunctions(1299569)[10]
                    input: (((<array_max_1033@509:1> = 2) && (0 <= <<array_max_1033@509:3>@512:0>)) ||
                            (((1 <= <<array_max_1033@509:3>@512:0>) && (<array_max_1033@509:1> = 0)) ||
                             ((1 <= <<array_max_1033@509:3>@512:0>) && (<array_max_1033@509:1> = 1))))
                    output: (((1 <= <<array_max_1033@509:3>@512:0>) && (<array_max_1033@509:1> = 1)) ||
                             (((1 <= <<array_max_1033@509:3>@512:0>) && (<array_max_1033@509:1> = 0)) ||
                              ((<array_max_1033@509:1> = 2) && (0 <= <<array_max_1033@509:3>@512:0>))))
                  end minimizing # of disjunctions(1299569)[10] (0.001000 sec.)
                  begin minimizing # of conjunctions(1299668)[10]
                    input: ((1 <= <<array_max_1033@509:3>@512:0>) && (<array_max_1033@509:1> = 1))
                    output: (1 <= <<array_max_1033@509:3>@512:0>)
                  end minimizing # of conjunctions(1299668)[10] (0.003000 sec.)
                  begin minimizing # of conjunctions(1300103)[10]
                    input: ((1 <= <<array_max_1033@509:3>@512:0>) && (<array_max_1033@509:1> = 0))
                    output: (1 <= <<array_max_1033@509:3>@512:0>)
                  end minimizing # of conjunctions(1300103)[10] (0.001999 sec.)
                  begin minimizing # of conjunctions(1300538)[10]
                    input: ((<array_max_1033@509:1> = 2) && (0 <= <<array_max_1033@509:3>@512:0>))
                    output: ((0 <= <<array_max_1033@509:3>@512:0>) && (<array_max_1033@509:1> = 2))
                  end minimizing # of conjunctions(1300538)[10] (0.003000 sec.)
                  
                end InterpProver.interpolate_simplify(1298768)[9] (0.023997 sec.)
                
              end InterpProver.interpolate_check(1298767)[8] (0.023997 sec.)
              output: ((1 <= <<array_max_1033@509:3>@512:0>) ||
                       ((0 <= <<array_max_1033@509:3>@512:0>) && (<array_max_1033@509:1> = 2)))
            end InterpProver.interpolate_log(1298766)[7] (0.024996 sec.)
            
          end InterpProver.interpolate_fresh(1298765)[6] (0.024996 sec.)
          
        end InterpProver.interpolate(1298764)[5] (0.024996 sec.)
        output:
          P[<<array_max_1033@509:3>@512:0>](<array_max_1033@509:0>:int,<array_max_1033@509:1>:int,<<array_max_1033@509:3>@512:0>:int) =
          ((1 <= <<array_max_1033@509:3>@512:0>) ||
           ((0 <= <<array_max_1033@509:3>@512:0>) && (<array_max_1033@509:1> = 2)))
          P[<<array_max_1033@478:3>@521:0>](<array_max_1033@509:0>:int,<array_max_1033@509:1>:int,<<array_max_1033@509:3>@512:0>:int) =
          ((1 <= <<array_max_1033@509:3>@512:0>) ||
           ((0 <= <<array_max_1033@509:3>@512:0>) && (<array_max_1033@509:1> = 2)))
          P[<<array_max_1033@455:3>@530:0>](<array_max_1033@509:0>:int,<array_max_1033@509:1>:int,<<array_max_1033@509:3>@512:0>:int) =
          ((1 <= <<array_max_1033@509:3>@512:0>) ||
           ((0 <= <<array_max_1033@509:3>@512:0>) && (<array_max_1033@509:1> = 2)))
      end ApronInterface.convex_hull_interpolate(1298763)[4] (0.025996 sec.)
      Horn clauses:
        P[<fail_1487@596:0>](<fail_1487@596:0>:bool)|- bot
        
        P[<check_1148@560:2>](<f_check_1482@593:2>:int,<f_check_1482@593:0>:int,<f_check_1482@593:1>:int),
        ((<f_check_1482@593:0> < <f_check_1482@593:2>) && ((<f_check_1482@593:1> < 1) && <fail_1487@596:0>))
        |- P[<fail_1487@596:0>](<fail_1487@596:0>:bool)
        
        P[<check_1148@560:2>](<check_1148@560:0>:int,<<check_1148@560:3>@563:0>:int,<check_1148@560:2>:int),
        ((<<check_1148@560:3>@563:0> < <check_1148@560:0>) && (<<check_1148@560:3>@563:0> > 1)) |- bot
        
        P[<check_1148@534:2>](<check_1148@560:0>:int,(-1 + <check_1148@560:1>):int,<check_1148@560:2>:int),
        (<check_1148@560:1> < (1 + <check_1148@560:0>))
        |- P[<check_1148@560:2>](<check_1148@560:0>:int,<check_1148@560:1>:int,
                                 <check_1148@560:2>:int)
        
        P[<check_1148@534:2>](<check_1148@534:0>:int,<<check_1148@534:3>@537:0>:int,<check_1148@534:2>:int),
        ((<<check_1148@534:3>@537:0> < <check_1148@534:0>) && (<<check_1148@534:3>@537:0> > 1)) |- bot
        
         ((<check_1148@534:1> = 0) && (1 <= <check_1148@534:2>))
        |- P[<check_1148@534:2>](<check_1148@534:0>:int,<check_1148@534:1>:int,
                                 <check_1148@534:2>:int)
        
        P[<array_max_1033@455:1>](<array_max_1033@455:0>:int,1:int),
        P[<<<array_max_1033@455:2>@458:1>@474:0>](<array_max_1033@455:0>:int,1:int,1:int,var1930:int),
        ((var1930 < 1) && (1 < <array_max_1033@455:0>)) |- bot
        
        P[<array_max_1033@478:1>](<array_max_1033@478:0>:int,<array_max_1033@478:1>:int),
        P[<<<array_max_1033@478:2>@481:1>@505:0>](<array_max_1033@478:0>:int,<array_max_1033@478:1>:int,<array_max_1033@478:1>:int,<<array_max_1033@478:3>@521:0>:int),
        ((<array_max_1033@478:1> < <array_max_1033@478:0>) &&
         ((1 > <<array_max_1033@478:3>@521:0>) &&
          ((<<array_max_1033@478:3>@521:0> > var1931) &&
           (((0 > <<array_max_1033@478:3>@521:0>) || (<array_max_1033@478:1> <> 2)) &&
            ((1 <= var1931) || ((<array_max_1033@478:1> = 1) && (0 <= var1931))))))) |- bot
        
        P[<array_max_1033@509:1>](<array_max_1033@509:0>:int,<array_max_1033@509:1>:int),
        ((<array_max_1033@509:1> <> 2) && (<array_max_1033@509:1> >= <array_max_1033@509:0>)) |- bot
        
        P[<array_max_1033@478:1>](<array_max_1033@509:0>:int,(-1 + <array_max_1033@509:1>):int),
        P[<<<array_max_1033@478:2>@481:1>@505:0>](<array_max_1033@509:0>:int,(
                                                  -1 + <array_max_1033@509:1>):int,(
                                                  -1 + <array_max_1033@509:1>):int,<f_array_max_1480@507:4>:int),
        (<array_max_1033@509:1> < (1 + <array_max_1033@509:0>))
        |- P[<array_max_1033@509:1>](<array_max_1033@509:0>:int,<array_max_1033@509:1>:int)
        
        P[<<<array_max_1033@455:2>@458:1>@474:0>](<array_max_1033@478:0>:int,(
                                                  -1 + <array_max_1033@478:1>):int,(
                                                  -1 + <array_max_1033@478:1>):int,<f_array_max_1480@476:4>:int),
        P[<array_max_1033@455:1>](<array_max_1033@478:0>:int,(-1 + <array_max_1033@478:1>):int),
        P[<<<array_max_1033@455:2>@485:1>@501:0>](<array_max_1033@478:0>:int,(
                                                  -1 + <array_max_1033@478:1>):int,<<array_max_1033@478:2>@481:0>:int,<<<array_max_1033@478:2>@481:1>@505:0>:int),
        P[<array_max_1033@478:1>](<array_max_1033@478:0>:int,<array_max_1033@478:1>:int),
        (<array_max_1033@478:1> < (1 + <array_max_1033@478:0>))
        |- P[<<<array_max_1033@478:2>@481:1>@505:0>](<array_max_1033@478:0>:int,
                                                     <array_max_1033@478:1>:int,
                                                     <<array_max_1033@478:2>@481:0>:int,
                                                     <<<array_max_1033@478:2>@481:1>@505:0>:int)
        
        P[<array_max_1033@455:1>](<array_max_1033@455:0>:int,<array_max_1033@455:1>:int),
        ((<array_max_1033@455:1> = 0) && (<<<array_max_1033@455:2>@485:1>@501:0> <= 1))
        |- P[<<<array_max_1033@455:2>@485:1>@501:0>](<array_max_1033@455:0>:int,
                                                     <array_max_1033@455:1>:int,
                                                     <<array_max_1033@455:2>@485:0>:int,
                                                     <<<array_max_1033@455:2>@485:1>@501:0>:int)
        
        P[<<array_max_1033@455:2>@485:0>](<make_array_1030@487:0>:int,0:int,<make_array_1030@487:1>:int),
        (<make_array_1030@487:1> > 1) |- bot
        
        P[<array_max_1033@455:1>](<array_max_1033@455:0>:int,<array_max_1033@455:1>:int),
        P[<<<array_max_1033@455:2>@458:1>@474:0>](<array_max_1033@455:0>:int,<array_max_1033@455:1>:int,<array_max_1033@455:1>:int,var1932:int),
        P[<<array_max_1033@478:2>@481:0>](<array_max_1033@455:0>:int,(
                                          1 + <array_max_1033@455:1>):int,<<array_max_1033@455:2>@485:0>:int),
        (<array_max_1033@455:1> < <array_max_1033@455:0>)
        |- P[<<array_max_1033@455:2>@485:0>](<array_max_1033@455:0>:int,
                                             <array_max_1033@455:1>:int,
                                             <<array_max_1033@455:2>@485:0>:int)
        
        P[<array_max_1033@478:1>](<array_max_1033@478:0>:int,<array_max_1033@478:1>:int),
        ((<array_max_1033@478:1> < <array_max_1033@478:0>) && (<<array_max_1033@478:2>@481:0> = <array_max_1033@478:1>))
        |- P[<<array_max_1033@478:2>@481:0>](<array_max_1033@478:0>:int,
                                             <array_max_1033@478:1>:int,
                                             <<array_max_1033@478:2>@481:0>:int)
        
        P[<array_max_1033@455:1>](<array_max_1033@478:0>:int,(-1 + <array_max_1033@478:1>):int),
        P[<<<array_max_1033@455:2>@458:1>@474:0>](<array_max_1033@478:0>:int,(
                                                  -1 + <array_max_1033@478:1>):int,(
                                                  -1 + <array_max_1033@478:1>):int,<f_array_max_1480@476:4>:int),
        (<array_max_1033@478:1> < (1 + <array_max_1033@478:0>))
        |- P[<array_max_1033@478:1>](<array_max_1033@478:0>:int,<array_max_1033@478:1>:int)
        
        P[<array_max_1033@455:1>](<array_max_1033@455:0>:int,<array_max_1033@455:1>:int),
        ((<array_max_1033@455:1> = 0) && (<<<array_max_1033@455:2>@458:1>@474:0> <= 1))
        |- P[<<<array_max_1033@455:2>@458:1>@474:0>](<array_max_1033@455:0>:int,
                                                     <array_max_1033@455:1>:int,
                                                     <<array_max_1033@455:2>@458:0>:int,
                                                     <<<array_max_1033@455:2>@458:1>@474:0>:int)
        
        P[<<array_max_1033@455:2>@458:0>](<make_array_1030@460:0>:int,0:int,<make_array_1030@460:1>:int),
        (<make_array_1030@460:1> > 1) |- bot
        
        P[<array_max_1033@455:1>](<array_max_1033@455:0>:int,<array_max_1033@455:1>:int),
        ((<array_max_1033@455:1> < <array_max_1033@455:0>) && (<<array_max_1033@455:2>@458:0> = <array_max_1033@455:1>))
        |- P[<<array_max_1033@455:2>@458:0>](<array_max_1033@455:0>:int,
                                             <array_max_1033@455:1>:int,
                                             <<array_max_1033@455:2>@458:0>:int)
        
         (<array_max_1033@455:1> = 0)
        |- P[<array_max_1033@455:1>](<array_max_1033@455:0>:int,<array_max_1033@455:1>:int)
      lower bounds:
        P[<check_1148@534:2>](<check_1148@534:0>:int,<check_1148@534:1>:int,<check_1148@534:2>:int) =
        ((<check_1148@534:1> = 0) && (1 <= <check_1148@534:2>))
        P[<array_max_1033@455:1>](<array_max_1033@455:0>:int,<array_max_1033@455:1>:int) = (<array_max_1033@455:1> = 0)
        P[<check_1148@560:2>](<check_1148@560:0>:int,<check_1148@560:1>:int,<check_1148@560:2>:int) =
        ((<check_1148@560:1> = 1) && ((<check_1148@560:1> < (1 + <check_1148@560:0>)) && (1 <= <check_1148@560:2>)))
        P[<<<array_max_1033@455:2>@485:1>@501:0>](<array_max_1033@455:0>:int,<array_max_1033@455:1>:int,<<array_max_1033@455:2>@485:0>:int,<<<array_max_1033@455:2>@485:1>@501:0>:int) =
        ((<array_max_1033@455:1> = 0) && (<<<array_max_1033@455:2>@485:1>@501:0> <= 1))
        P[<<<array_max_1033@455:2>@458:1>@474:0>](<array_max_1033@455:0>:int,<array_max_1033@455:1>:int,<<array_max_1033@455:2>@458:0>:int,<<<array_max_1033@455:2>@458:1>@474:0>:int) =
        ((<array_max_1033@455:1> = 0) && (<<<array_max_1033@455:2>@458:1>@474:0> <= 1))
        P[<<array_max_1033@455:2>@458:0>](<array_max_1033@455:0>:int,<array_max_1033@455:1>:int,<<array_max_1033@455:2>@458:0>:int) =
        ((<array_max_1033@455:1> = 0) &&
         ((<array_max_1033@455:1> < <array_max_1033@455:0>) &&
          (<<array_max_1033@455:2>@458:0> = <array_max_1033@455:1>)))
        P[<fail_1487@596:0>](<fail_1487@596:0>:bool) = false
        P[<array_max_1033@478:1>](<array_max_1033@478:0>:int,<array_max_1033@478:1>:int) =
        ((<array_max_1033@478:1> = 1) && (<array_max_1033@478:1> < (1 + <array_max_1033@478:0>)))
        P[<<<array_max_1033@478:2>@481:1>@505:0>](<array_max_1033@478:0>:int,<array_max_1033@478:1>:int,<<array_max_1033@478:2>@481:0>:int,<<<array_max_1033@478:2>@481:1>@505:0>:int) =
        ((<array_max_1033@478:1> = 1) &&
         ((<<<array_max_1033@478:2>@481:1>@505:0> <= 1) && (<array_max_1033@478:1> < (1 + <array_max_1033@478:0>))))
        P[<<array_max_1033@478:2>@481:0>](<array_max_1033@478:0>:int,<array_max_1033@478:1>:int,<<array_max_1033@478:2>@481:0>:int) =
        ((<array_max_1033@478:1> = 1) &&
         ((<array_max_1033@478:1> < <array_max_1033@478:0>) &&
          (<<array_max_1033@478:2>@481:0> = <array_max_1033@478:1>)))
        P[<array_max_1033@509:1>](<array_max_1033@509:0>:int,<array_max_1033@509:1>:int) =
        ((<array_max_1033@509:1> = 2) && (<array_max_1033@509:1> < (1 + <array_max_1033@509:0>)))
        P[<<array_max_1033@455:2>@485:0>](<array_max_1033@455:0>:int,<array_max_1033@455:1>:int,<<array_max_1033@455:2>@485:0>:int) =
        ((<array_max_1033@455:1> = 0) &&
         (((1 + <array_max_1033@455:1>) < <array_max_1033@455:0>) &&
          (<<array_max_1033@455:2>@485:0> = (1 + <array_max_1033@455:1>))))
      upper bounds:
        P[<array_max_1033@509:1>](var2080:int,var2081:int) = ((var2081 = 2) || (var2081 < var2080))
        P[<array_max_1033@478:1>](var2078:int,var2079:int) = true
        P[<array_max_1033@455:1>](var2076:int,var2077:int) = true
      begin GenHcSolver.classify_pids(1336187)[4]
        output:
          [<array_max_1033@455:1>;<array_max_1033@478:1>],[<array_max_1033@509:1>]
      end GenHcSolver.classify_pids(1336187)[4] (0.000000 sec.)
      begin ApronInterface.convex_hull_interpolate(1336238)[4]
        lb:((<array_max_1033@455:1> = 0) ||
            ((<array_max_1033@455:1> = 1) && (<array_max_1033@455:1> < (1 + <array_max_1033@455:0>))))
        nub:false
        lb':((<array_max_1033@455:1> = 0) ||
             ((<array_max_1033@455:1> = 1) && (<array_max_1033@455:1> < (1 + <array_max_1033@455:0>))))
        nub':false
        begin InterpProver.interpolate(1336239)[5]
          begin InterpProver.interpolate_fresh(1336240)[6]
            begin InterpProver.interpolate_log(1336241)[7]
              input1: ((<array_max_1033@455:1> = 0) ||
                       ((<array_max_1033@455:1> = 1) && (<array_max_1033@455:1> < (1 + <array_max_1033@455:0>))))
              input2: false
              begin InterpProver.interpolate_check(1336242)[8]
                begin InterpProver.interpolate_simplify(1336243)[9]
                  begin InterpProver.interpolate_quick(1336288)[10]
                    
                  end InterpProver.interpolate_quick(1336288)[10] (0.000000 sec.)
                  
                end InterpProver.interpolate_simplify(1336243)[9] (0.001000 sec.)
                
              end InterpProver.interpolate_check(1336242)[8] (0.001000 sec.)
              output: true
            end InterpProver.interpolate_log(1336241)[7] (0.001000 sec.)
            
          end InterpProver.interpolate_fresh(1336240)[6] (0.001000 sec.)
          
        end InterpProver.interpolate(1336239)[5] (0.001000 sec.)
        output:
          P[<array_max_1033@455:1>](<array_max_1033@455:0>:int,<array_max_1033@455:1>:int) = true
          P[<array_max_1033@478:1>](<array_max_1033@455:0>:int,<array_max_1033@455:1>:int) = true
      end ApronInterface.convex_hull_interpolate(1336238)[4] (0.001000 sec.)
      Horn clauses:
        P[<fail_1487@596:0>](<fail_1487@596:0>:bool)|- bot
        
        P[<check_1148@560:2>](<f_check_1482@593:2>:int,<f_check_1482@593:0>:int,<f_check_1482@593:1>:int),
        ((<f_check_1482@593:0> < <f_check_1482@593:2>) && ((<f_check_1482@593:1> < 1) && <fail_1487@596:0>))
        |- P[<fail_1487@596:0>](<fail_1487@596:0>:bool)
        
        P[<check_1148@560:2>](<check_1148@560:0>:int,<<check_1148@560:3>@563:0>:int,<check_1148@560:2>:int),
        ((<<check_1148@560:3>@563:0> < <check_1148@560:0>) && (<<check_1148@560:3>@563:0> > 1)) |- bot
        
        P[<check_1148@534:2>](<check_1148@560:0>:int,(-1 + <check_1148@560:1>):int,<check_1148@560:2>:int),
        (<check_1148@560:1> < (1 + <check_1148@560:0>))
        |- P[<check_1148@560:2>](<check_1148@560:0>:int,<check_1148@560:1>:int,
                                 <check_1148@560:2>:int)
        
        P[<check_1148@534:2>](<check_1148@534:0>:int,<<check_1148@534:3>@537:0>:int,<check_1148@534:2>:int),
        ((<<check_1148@534:3>@537:0> < <check_1148@534:0>) && (<<check_1148@534:3>@537:0> > 1)) |- bot
        
         ((<check_1148@534:1> = 0) && (1 <= <check_1148@534:2>))
        |- P[<check_1148@534:2>](<check_1148@534:0>:int,<check_1148@534:1>:int,
                                 <check_1148@534:2>:int)
        
        P[<<<array_max_1033@455:2>@458:1>@474:0>](<array_max_1033@455:0>:int,1:int,1:int,var1930:int),
        ((var1930 < 1) && (1 < <array_max_1033@455:0>)) |- bot
        
        P[<<<array_max_1033@478:2>@481:1>@505:0>](<array_max_1033@478:0>:int,<array_max_1033@478:1>:int,<array_max_1033@478:1>:int,<<array_max_1033@478:3>@521:0>:int),
        ((<array_max_1033@478:1> < <array_max_1033@478:0>) &&
         ((1 > <<array_max_1033@478:3>@521:0>) &&
          ((<<array_max_1033@478:3>@521:0> > var1931) &&
           (((0 > <<array_max_1033@478:3>@521:0>) || (<array_max_1033@478:1> <> 2)) &&
            ((1 <= var1931) || ((<array_max_1033@478:1> = 1) && (0 <= var1931))))))) |- bot
        
        P[<array_max_1033@509:1>](<array_max_1033@509:0>:int,<array_max_1033@509:1>:int),
        ((<array_max_1033@509:1> <> 2) && (<array_max_1033@509:1> >= <array_max_1033@509:0>)) |- bot
        
        P[<<<array_max_1033@478:2>@481:1>@505:0>](<array_max_1033@509:0>:int,(
                                                  -1 + <array_max_1033@509:1>):int,(
                                                  -1 + <array_max_1033@509:1>):int,<f_array_max_1480@507:4>:int),
        (<array_max_1033@509:1> < (1 + <array_max_1033@509:0>))
        |- P[<array_max_1033@509:1>](<array_max_1033@509:0>:int,<array_max_1033@509:1>:int)
        
        P[<<<array_max_1033@455:2>@458:1>@474:0>](<array_max_1033@478:0>:int,(
                                                  -1 + <array_max_1033@478:1>):int,(
                                                  -1 + <array_max_1033@478:1>):int,<f_array_max_1480@476:4>:int),
        P[<<<array_max_1033@455:2>@485:1>@501:0>](<array_max_1033@478:0>:int,(
                                                  -1 + <array_max_1033@478:1>):int,<<array_max_1033@478:2>@481:0>:int,<<<array_max_1033@478:2>@481:1>@505:0>:int),
        (<array_max_1033@478:1> < (1 + <array_max_1033@478:0>))
        |- P[<<<array_max_1033@478:2>@481:1>@505:0>](<array_max_1033@478:0>:int,
                                                     <array_max_1033@478:1>:int,
                                                     <<array_max_1033@478:2>@481:0>:int,
                                                     <<<array_max_1033@478:2>@481:1>@505:0>:int)
        
         ((<array_max_1033@455:1> = 0) && (<<<array_max_1033@455:2>@485:1>@501:0> <= 1))
        |- P[<<<array_max_1033@455:2>@485:1>@501:0>](<array_max_1033@455:0>:int,
                                                     <array_max_1033@455:1>:int,
                                                     <<array_max_1033@455:2>@485:0>:int,
                                                     <<<array_max_1033@455:2>@485:1>@501:0>:int)
        
        P[<<array_max_1033@455:2>@485:0>](<make_array_1030@487:0>:int,0:int,<make_array_1030@487:1>:int),
        (<make_array_1030@487:1> > 1) |- bot
        
        P[<<<array_max_1033@455:2>@458:1>@474:0>](<array_max_1033@455:0>:int,<array_max_1033@455:1>:int,<array_max_1033@455:1>:int,var1932:int),
        P[<<array_max_1033@478:2>@481:0>](<array_max_1033@455:0>:int,(
                                          1 + <array_max_1033@455:1>):int,<<array_max_1033@455:2>@485:0>:int),
        (<array_max_1033@455:1> < <array_max_1033@455:0>)
        |- P[<<array_max_1033@455:2>@485:0>](<array_max_1033@455:0>:int,
                                             <array_max_1033@455:1>:int,
                                             <<array_max_1033@455:2>@485:0>:int)
        
        
        ((<array_max_1033@478:1> < <array_max_1033@478:0>) && (<<array_max_1033@478:2>@481:0> = <array_max_1033@478:1>))
        |- P[<<array_max_1033@478:2>@481:0>](<array_max_1033@478:0>:int,
                                             <array_max_1033@478:1>:int,
                                             <<array_max_1033@478:2>@481:0>:int)
        
         ((<array_max_1033@455:1> = 0) && (<<<array_max_1033@455:2>@458:1>@474:0> <= 1))
        |- P[<<<array_max_1033@455:2>@458:1>@474:0>](<array_max_1033@455:0>:int,
                                                     <array_max_1033@455:1>:int,
                                                     <<array_max_1033@455:2>@458:0>:int,
                                                     <<<array_max_1033@455:2>@458:1>@474:0>:int)
        
        P[<<array_max_1033@455:2>@458:0>](<make_array_1030@460:0>:int,0:int,<make_array_1030@460:1>:int),
        (<make_array_1030@460:1> > 1) |- bot
        
        
        ((<array_max_1033@455:1> < <array_max_1033@455:0>) && (<<array_max_1033@455:2>@458:0> = <array_max_1033@455:1>))
        |- P[<<array_max_1033@455:2>@458:0>](<array_max_1033@455:0>:int,
                                             <array_max_1033@455:1>:int,
                                             <<array_max_1033@455:2>@458:0>:int)
      lower bounds:
        P[<check_1148@534:2>](<check_1148@534:0>:int,<check_1148@534:1>:int,<check_1148@534:2>:int) =
        ((<check_1148@534:1> = 0) && (1 <= <check_1148@534:2>))
        P[<<<array_max_1033@455:2>@485:1>@501:0>](<array_max_1033@455:0>:int,<array_max_1033@455:1>:int,<<array_max_1033@455:2>@485:0>:int,<<<array_max_1033@455:2>@485:1>@501:0>:int) =
        ((<array_max_1033@455:1> = 0) && (<<<array_max_1033@455:2>@485:1>@501:0> <= 1))
        P[<<array_max_1033@478:2>@481:0>](<array_max_1033@478:0>:int,<array_max_1033@478:1>:int,<<array_max_1033@478:2>@481:0>:int) =
        ((<array_max_1033@478:1> < <array_max_1033@478:0>) && (<<array_max_1033@478:2>@481:0> = <array_max_1033@478:1>))
        P[<<<array_max_1033@455:2>@458:1>@474:0>](<array_max_1033@455:0>:int,<array_max_1033@455:1>:int,<<array_max_1033@455:2>@458:0>:int,<<<array_max_1033@455:2>@458:1>@474:0>:int) =
        ((<array_max_1033@455:1> = 0) && (<<<array_max_1033@455:2>@458:1>@474:0> <= 1))
        P[<<array_max_1033@455:2>@458:0>](<array_max_1033@455:0>:int,<array_max_1033@455:1>:int,<<array_max_1033@455:2>@458:0>:int) =
        ((<array_max_1033@455:1> < <array_max_1033@455:0>) && (<<array_max_1033@455:2>@458:0> = <array_max_1033@455:1>))
        P[<check_1148@560:2>](<check_1148@560:0>:int,<check_1148@560:1>:int,<check_1148@560:2>:int) =
        ((<check_1148@560:1> = 1) && ((<check_1148@560:1> < (1 + <check_1148@560:0>)) && (1 <= <check_1148@560:2>)))
        P[<<<array_max_1033@478:2>@481:1>@505:0>](<array_max_1033@478:0>:int,<array_max_1033@478:1>:int,<<array_max_1033@478:2>@481:0>:int,<<<array_max_1033@478:2>@481:1>@505:0>:int) =
        ((<array_max_1033@478:1> = 1) &&
         ((<array_max_1033@478:1> < (1 + <array_max_1033@478:0>)) && (<<<array_max_1033@478:2>@481:1>@505:0> <= 1)))
        P[<<array_max_1033@455:2>@485:0>](<array_max_1033@455:0>:int,<array_max_1033@455:1>:int,<<array_max_1033@455:2>@485:0>:int) =
        ((<array_max_1033@455:1> = 0) &&
         (((1 + <array_max_1033@455:1>) < <array_max_1033@455:0>) &&
          (<<array_max_1033@455:2>@485:0> = (1 + <array_max_1033@455:1>))))
        P[<fail_1487@596:0>](<fail_1487@596:0>:bool) = false
        P[<array_max_1033@509:1>](<array_max_1033@509:0>:int,<array_max_1033@509:1>:int) =
        ((<array_max_1033@509:1> = 2) && (<array_max_1033@509:1> < (1 + <array_max_1033@509:0>)))
      upper bounds:
        P[<<<array_max_1033@478:2>@481:1>@505:0>](var2096:int,var2097:int,var2098:int,var2099:int) =
        (((var2097 >= var2096) ||
          ((1 <= var2099) ||
           ((var2097 <> var2098) ||
            ((var2099 <= var1931) ||
             (((var2097 = 2) && (0 <= var2099)) || ((1 > var1931) && ((var2097 <> 1) || (0 > var1931)))))))) &&
         ((var2096 = 2) || (((1 + var2097) <> var2096) || ((1 + var2098) <> var2096))))
        P[<<<array_max_1033@455:2>@485:1>@501:0>](var2091:int,var2092:int,var2093:int,var2094:int) = true
        P[<<<array_max_1033@455:2>@458:1>@474:0>](var2086:int,var2087:int,var2088:int,var2089:int) =
        ((var2087 <> 1) || ((var2088 <> 1) || ((var2089 >= 1) || (1 >= var2086))))
      begin GenHcSolver.classify_pids(1366647)[4]
        output:
          [<<<array_max_1033@455:2>@458:1>@474:0>;<<<array_max_1033@455:2>@485:1>@501:0>],[
          <<<array_max_1033@478:2>@481:1>@505:0>]
      end GenHcSolver.classify_pids(1366647)[4] (0.003999 sec.)
      begin ApronInterface.convex_hull_interpolate(1367227)[4]
        lb:((<array_max_1033@455:1> = 0) && (<<<array_max_1033@455:2>@458:1>@474:0> <= 1))
        nub:(not
               ((<array_max_1033@455:1> <> 1) ||
                ((<<array_max_1033@455:2>@458:0> <> 1) ||
                 ((<<<array_max_1033@455:2>@458:1>@474:0> >= 1) || (1 >= <array_max_1033@455:0>)))))
        lb':((<array_max_1033@455:1> = 0) && (<<<array_max_1033@455:2>@458:1>@474:0> <= 1))
        nub':(not
                ((<array_max_1033@455:1> <> 1) ||
                 ((<<array_max_1033@455:2>@458:0> <> 1) ||
                  ((<<<array_max_1033@455:2>@458:1>@474:0> >= 1) || (1 >= <array_max_1033@455:0>)))))
        begin InterpProver.interpolate(1367228)[5]
          begin InterpProver.interpolate_fresh(1367229)[6]
            begin InterpProver.interpolate_log(1367230)[7]
              input1: ((<array_max_1033@455:1> = 0) && (<<<array_max_1033@455:2>@458:1>@474:0> <= 1))
              input2: (not
                         ((<array_max_1033@455:1> <> 1) ||
                          ((<<array_max_1033@455:2>@458:0> <> 1) ||
                           ((<<<array_max_1033@455:2>@458:1>@474:0> >= 1) || (1 >= <array_max_1033@455:0>)))))
              begin InterpProver.interpolate_check(1367231)[8]
                begin InterpProver.interpolate_simplify(1367232)[9]
                  begin InterpProver.interpolate_quick(1367422)[10]
                    begin CsisatInterface.interpolate_csisat_wrap(1367431)[11]
                      begin CsisatInterface.interpolate_csisat_post_process(1367432)[12]
                        begin CsisatInterface.interpolate_csisat_log(1367433)[13]
                          input1: (0 = v_sep_array_max_1033_sep_455_sep_1 & v_sep_array_max_1033_sep_455_sep_2_sep_458_sep_1_sep_474_sep_0 <= 1)
                          input2: (1 = v_sep_array_max_1033_sep_455_sep_1 & 2 <= v_sep_array_max_1033_sep_455_sep_0 & (1 + v_sep_array_max_1033_sep_455_sep_2_sep_458_sep_1_sep_474_sep_0) <= 1)
                          begin CsisatInterface.interpolate_csisat_raw(1367434)[14]
                            
                          end CsisatInterface.interpolate_csisat_raw(1367434)[14] (0.001000 sec.)
                          output: 2*v_sep_array_max_1033_sep_455_sep_1 <= 0
                          
                        end CsisatInterface.interpolate_csisat_log(1367433)[13] (0.001000 sec.)
                        after simplification: 2*v_sep_array_max_1033_sep_455_sep_1 <= 0
                        after dnf conversion: ((2*v_sep_array_max_1033_sep_455_sep_1 <= 0))
                        
                      end CsisatInterface.interpolate_csisat_post_process(1367432)[12] (0.001000 sec.)
                      
                    end CsisatInterface.interpolate_csisat_wrap(1367431)[11] (0.001000 sec.)
                    
                  end InterpProver.interpolate_quick(1367422)[10] (0.002000 sec.)
                  
                end InterpProver.interpolate_simplify(1367232)[9] (0.003000 sec.)
                
              end InterpProver.interpolate_check(1367231)[8] (0.003000 sec.)
              output: (<array_max_1033@455:1> <= 0)
            end InterpProver.interpolate_log(1367230)[7] (0.003000 sec.)
            
          end InterpProver.interpolate_fresh(1367229)[6] (0.003000 sec.)
          
        end InterpProver.interpolate(1367228)[5] (0.003000 sec.)
        output:
          P[<<<array_max_1033@455:2>@458:1>@474:0>](<array_max_1033@455:0>:int,<array_max_1033@455:1>:int,<<array_max_1033@455:2>@458:0>:int,<<<array_max_1033@455:2>@458:1>@474:0>:int) =
          (<array_max_1033@455:1> <= 0)
          P[<<<array_max_1033@455:2>@485:1>@501:0>](<array_max_1033@455:0>:int,<array_max_1033@455:1>:int,<<array_max_1033@455:2>@458:0>:int,<<<array_max_1033@455:2>@458:1>@474:0>:int) =
          (<array_max_1033@455:1> <= 0)
      end ApronInterface.convex_hull_interpolate(1367227)[4] (0.003000 sec.)
      Horn clauses:
        P[<fail_1487@596:0>](<fail_1487@596:0>:bool)|- bot
        
        P[<check_1148@560:2>](<f_check_1482@593:2>:int,<f_check_1482@593:0>:int,<f_check_1482@593:1>:int),
        ((<f_check_1482@593:0> < <f_check_1482@593:2>) && ((<f_check_1482@593:1> < 1) && <fail_1487@596:0>))
        |- P[<fail_1487@596:0>](<fail_1487@596:0>:bool)
        
        P[<check_1148@560:2>](<check_1148@560:0>:int,<<check_1148@560:3>@563:0>:int,<check_1148@560:2>:int),
        ((<<check_1148@560:3>@563:0> < <check_1148@560:0>) && (<<check_1148@560:3>@563:0> > 1)) |- bot
        
        P[<check_1148@534:2>](<check_1148@560:0>:int,(-1 + <check_1148@560:1>):int,<check_1148@560:2>:int),
        (<check_1148@560:1> < (1 + <check_1148@560:0>))
        |- P[<check_1148@560:2>](<check_1148@560:0>:int,<check_1148@560:1>:int,
                                 <check_1148@560:2>:int)
        
        P[<check_1148@534:2>](<check_1148@534:0>:int,<<check_1148@534:3>@537:0>:int,<check_1148@534:2>:int),
        ((<<check_1148@534:3>@537:0> < <check_1148@534:0>) && (<<check_1148@534:3>@537:0> > 1)) |- bot
        
         ((<check_1148@534:1> = 0) && (1 <= <check_1148@534:2>))
        |- P[<check_1148@534:2>](<check_1148@534:0>:int,<check_1148@534:1>:int,
                                 <check_1148@534:2>:int)
        
        P[<<<array_max_1033@455:2>@458:1>@474:0>](<array_max_1033@455:0>:int,1:int,1:int,var1930:int),
        ((var1930 < 1) && (1 < <array_max_1033@455:0>)) |- bot
        
        P[<<<array_max_1033@478:2>@481:1>@505:0>](<array_max_1033@478:0>:int,<array_max_1033@478:1>:int,<array_max_1033@478:1>:int,<<array_max_1033@478:3>@521:0>:int),
        ((<array_max_1033@478:1> < <array_max_1033@478:0>) &&
         ((1 > <<array_max_1033@478:3>@521:0>) &&
          ((<<array_max_1033@478:3>@521:0> > var1931) &&
           (((0 > <<array_max_1033@478:3>@521:0>) || (<array_max_1033@478:1> <> 2)) &&
            ((1 <= var1931) || ((<array_max_1033@478:1> = 1) && (0 <= var1931))))))) |- bot
        
        P[<array_max_1033@509:1>](<array_max_1033@509:0>:int,<array_max_1033@509:1>:int),
        ((<array_max_1033@509:1> <> 2) && (<array_max_1033@509:1> >= <array_max_1033@509:0>)) |- bot
        
        P[<<<array_max_1033@478:2>@481:1>@505:0>](<array_max_1033@509:0>:int,(
                                                  -1 + <array_max_1033@509:1>):int,(
                                                  -1 + <array_max_1033@509:1>):int,<f_array_max_1480@507:4>:int),
        (<array_max_1033@509:1> < (1 + <array_max_1033@509:0>))
        |- P[<array_max_1033@509:1>](<array_max_1033@509:0>:int,<array_max_1033@509:1>:int)
        
        P[<<<array_max_1033@455:2>@458:1>@474:0>](<array_max_1033@478:0>:int,(
                                                  -1 + <array_max_1033@478:1>):int,(
                                                  -1 + <array_max_1033@478:1>):int,<f_array_max_1480@476:4>:int),
        ((<array_max_1033@478:1> < (1 + <array_max_1033@478:0>)) && (<array_max_1033@478:1> <= 1))
        |- P[<<<array_max_1033@478:2>@481:1>@505:0>](<array_max_1033@478:0>:int,
                                                     <array_max_1033@478:1>:int,
                                                     <<array_max_1033@478:2>@481:0>:int,
                                                     <<<array_max_1033@478:2>@481:1>@505:0>:int)
        
        P[<<array_max_1033@455:2>@485:0>](<make_array_1030@487:0>:int,0:int,<make_array_1030@487:1>:int),
        (<make_array_1030@487:1> > 1) |- bot
        
        P[<<<array_max_1033@455:2>@458:1>@474:0>](<array_max_1033@455:0>:int,<array_max_1033@455:1>:int,<array_max_1033@455:1>:int,var1932:int),
        P[<<array_max_1033@478:2>@481:0>](<array_max_1033@455:0>:int,(
                                          1 + <array_max_1033@455:1>):int,<<array_max_1033@455:2>@485:0>:int),
        (<array_max_1033@455:1> < <array_max_1033@455:0>)
        |- P[<<array_max_1033@455:2>@485:0>](<array_max_1033@455:0>:int,
                                             <array_max_1033@455:1>:int,
                                             <<array_max_1033@455:2>@485:0>:int)
        
        
        ((<array_max_1033@478:1> < <array_max_1033@478:0>) && (<<array_max_1033@478:2>@481:0> = <array_max_1033@478:1>))
        |- P[<<array_max_1033@478:2>@481:0>](<array_max_1033@478:0>:int,
                                             <array_max_1033@478:1>:int,
                                             <<array_max_1033@478:2>@481:0>:int)
        
         ((<array_max_1033@455:1> = 0) && (<<<array_max_1033@455:2>@458:1>@474:0> <= 1))
        |- P[<<<array_max_1033@455:2>@458:1>@474:0>](<array_max_1033@455:0>:int,
                                                     <array_max_1033@455:1>:int,
                                                     <<array_max_1033@455:2>@458:0>:int,
                                                     <<<array_max_1033@455:2>@458:1>@474:0>:int)
        
        P[<<array_max_1033@455:2>@458:0>](<make_array_1030@460:0>:int,0:int,<make_array_1030@460:1>:int),
        (<make_array_1030@460:1> > 1) |- bot
        
        
        ((<array_max_1033@455:1> < <array_max_1033@455:0>) && (<<array_max_1033@455:2>@458:0> = <array_max_1033@455:1>))
        |- P[<<array_max_1033@455:2>@458:0>](<array_max_1033@455:0>:int,
                                             <array_max_1033@455:1>:int,
                                             <<array_max_1033@455:2>@458:0>:int)
      lower bounds:
        P[<check_1148@534:2>](<check_1148@534:0>:int,<check_1148@534:1>:int,<check_1148@534:2>:int) =
        ((<check_1148@534:1> = 0) && (1 <= <check_1148@534:2>))
        P[<<array_max_1033@478:2>@481:0>](<array_max_1033@478:0>:int,<array_max_1033@478:1>:int,<<array_max_1033@478:2>@481:0>:int) =
        ((<array_max_1033@478:1> < <array_max_1033@478:0>) && (<<array_max_1033@478:2>@481:0> = <array_max_1033@478:1>))
        P[<<<array_max_1033@455:2>@458:1>@474:0>](<array_max_1033@455:0>:int,<array_max_1033@455:1>:int,<<array_max_1033@455:2>@458:0>:int,<<<array_max_1033@455:2>@458:1>@474:0>:int) =
        ((<array_max_1033@455:1> = 0) && (<<<array_max_1033@455:2>@458:1>@474:0> <= 1))
        P[<<array_max_1033@455:2>@458:0>](<array_max_1033@455:0>:int,<array_max_1033@455:1>:int,<<array_max_1033@455:2>@458:0>:int) =
        ((<array_max_1033@455:1> < <array_max_1033@455:0>) && (<<array_max_1033@455:2>@458:0> = <array_max_1033@455:1>))
        P[<check_1148@560:2>](<check_1148@560:0>:int,<check_1148@560:1>:int,<check_1148@560:2>:int) =
        ((<check_1148@560:1> = 1) && ((<check_1148@560:1> < (1 + <check_1148@560:0>)) && (1 <= <check_1148@560:2>)))
        P[<<<array_max_1033@478:2>@481:1>@505:0>](<array_max_1033@478:0>:int,<array_max_1033@478:1>:int,<<array_max_1033@478:2>@481:0>:int,<<<array_max_1033@478:2>@481:1>@505:0>:int) =
        ((<array_max_1033@478:1> = 1) && (<array_max_1033@478:1> < (1 + <array_max_1033@478:0>)))
        P[<<array_max_1033@455:2>@485:0>](<array_max_1033@455:0>:int,<array_max_1033@455:1>:int,<<array_max_1033@455:2>@485:0>:int) =
        ((<array_max_1033@455:1> = 0) &&
         (((1 + <array_max_1033@455:1>) < <array_max_1033@455:0>) &&
          (<<array_max_1033@455:2>@485:0> = (1 + <array_max_1033@455:1>))))
        P[<fail_1487@596:0>](<fail_1487@596:0>:bool) = false
        P[<array_max_1033@509:1>](<array_max_1033@509:0>:int,<array_max_1033@509:1>:int) =
        ((<array_max_1033@509:1> = 2) && (<array_max_1033@509:1> < (1 + <array_max_1033@509:0>)))
      upper bounds:
        P[<<array_max_1033@455:2>@485:0>](var2113:int,var2114:int,var2115:int) = ((var2114 <> 0) || (var2115 <= 1))
        P[<<array_max_1033@478:2>@481:0>](var2110:int,var2111:int,var2112:int) =
        ((var2111 <> 1) || ((var2112 <= 1) || (0 >= var2110)))
        P[<<array_max_1033@455:2>@458:0>](var2107:int,var2108:int,var2109:int) = ((var2108 <> 0) || (var2109 <= 1))
      begin GenHcSolver.classify_pids(1393461)[4]
        output:
          [<<array_max_1033@455:2>@458:0>;<<array_max_1033@478:2>@481:0>;<<array_max_1033@455:2>@485:0>]
      end GenHcSolver.classify_pids(1393461)[4] (0.001000 sec.)
      begin ApronInterface.convex_hull_interpolate(1393636)[4]
        lb:(((<array_max_1033@455:1> < <array_max_1033@455:0>) &&
             (<<array_max_1033@455:2>@458:0> = <array_max_1033@455:1>)) ||
            ((<array_max_1033@455:1> = 0) &&
             (((1 + <array_max_1033@455:1>) < <array_max_1033@455:0>) &&
              (<<array_max_1033@455:2>@458:0> = (1 + <array_max_1033@455:1>)))))
        nub:((not
                ((<array_max_1033@455:1> <> 1) ||
                 ((<<array_max_1033@455:2>@458:0> <= 1) || (0 >= <array_max_1033@455:0>)))) ||
             (not ((<array_max_1033@455:1> <> 0) || (<<array_max_1033@455:2>@458:0> <= 1))))
        lb':(((<array_max_1033@455:1> < <array_max_1033@455:0>) &&
              (<<array_max_1033@455:2>@458:0> = <array_max_1033@455:1>)) ||
             ((<array_max_1033@455:1> = 0) &&
              (((1 + <array_max_1033@455:1>) < <array_max_1033@455:0>) &&
               (<<array_max_1033@455:2>@458:0> = (1 + <array_max_1033@455:1>)))))
        nub':((not
                 ((<array_max_1033@455:1> <> 1) ||
                  ((<<array_max_1033@455:2>@458:0> <= 1) || (0 >= <array_max_1033@455:0>)))) ||
              (not ((<array_max_1033@455:1> <> 0) || (<<array_max_1033@455:2>@458:0> <= 1))))
        begin InterpProver.interpolate(1393637)[5]
          begin InterpProver.interpolate_fresh(1393638)[6]
            begin InterpProver.interpolate_log(1393639)[7]
              input1: (((<array_max_1033@455:1> < <array_max_1033@455:0>) &&
                        (<<array_max_1033@455:2>@458:0> = <array_max_1033@455:1>)) ||
                       ((<array_max_1033@455:1> = 0) &&
                        (((1 + <array_max_1033@455:1>) < <array_max_1033@455:0>) &&
                         (<<array_max_1033@455:2>@458:0> = (1 + <array_max_1033@455:1>)))))
              input2: ((not
                          ((<array_max_1033@455:1> <> 1) ||
                           ((<<array_max_1033@455:2>@458:0> <= 1) || (0 >= <array_max_1033@455:0>)))) ||
                       (not ((<array_max_1033@455:1> <> 0) || (<<array_max_1033@455:2>@458:0> <= 1))))
              begin InterpProver.interpolate_check(1393640)[8]
                begin InterpProver.interpolate_simplify(1393641)[9]
                  begin InterpProver.interpolate_quick(1393844)[10]
                    begin CsisatInterface.interpolate_csisat_wrap(1393853)[11]
                      begin CsisatInterface.interpolate_csisat_post_process(1393854)[12]
                        begin CsisatInterface.interpolate_csisat_log(1393855)[13]
                          input1: ((0 = v_sep_array_max_1033_sep_455_sep_1 & v_sep_array_max_1033_sep_455_sep_2_sep_458_sep_0 = (1 + v_sep_array_max_1033_sep_455_sep_1) & (2 + v_sep_array_max_1033_sep_455_sep_1) <= v_sep_array_max_1033_sep_455_sep_0) | (v_sep_array_max_1033_sep_455_sep_1 = v_sep_array_max_1033_sep_455_sep_2_sep_458_sep_0 & (1 + v_sep_array_max_1033_sep_455_sep_1) <= v_sep_array_max_1033_sep_455_sep_0))
                          input2: (((1 = v_sep_array_max_1033_sep_455_sep_1 & 1 <= v_sep_array_max_1033_sep_455_sep_0) | 0 = v_sep_array_max_1033_sep_455_sep_1) & 2 <= v_sep_array_max_1033_sep_455_sep_2_sep_458_sep_0)
                          begin CsisatInterface.interpolate_csisat_raw(1393856)[14]
                            
                          end CsisatInterface.interpolate_csisat_raw(1393856)[14] (0.004000 sec.)
                          output: ((not 0 = v_sep_array_max_1033_sep_455_sep_1 | v_sep_array_max_1033_sep_455_sep_2_sep_458_sep_0 <= 0 | 2*v_sep_array_max_1033_sep_455_sep_2_sep_458_sep_0 <= 2) & (0 = v_sep_array_max_1033_sep_455_sep_1 | (-2*v_sep_array_max_1033_sep_455_sep_1 + 2*v_sep_array_max_1033_sep_455_sep_2_sep_458_sep_0) <= 0))
                          
                        end CsisatInterface.interpolate_csisat_log(1393855)[13] (0.004000 sec.)
                        after simplification: ((not 0 = v_sep_array_max_1033_sep_455_sep_1 | v_sep_array_max_1033_sep_455_sep_2_sep_458_sep_0 <= 0 | 2*v_sep_array_max_1033_sep_455_sep_2_sep_458_sep_0 <= 2) & (0 = v_sep_array_max_1033_sep_455_sep_1 | (-2*v_sep_array_max_1033_sep_455_sep_1 + 2*v_sep_array_max_1033_sep_455_sep_2_sep_458_sep_0) <= 0))
                        after dnf conversion: ((not 0 = v_sep_array_max_1033_sep_455_sep_1 & 0 = v_sep_array_max_1033_sep_455_sep_1) | (not 0 = v_sep_array_max_1033_sep_455_sep_1 & (-2*v_sep_array_max_1033_sep_455_sep_1 + 2*v_sep_array_max_1033_sep_455_sep_2_sep_458_sep_0) <= 0) | (v_sep_array_max_1033_sep_455_sep_2_sep_458_sep_0 <= 0 & 0 = v_sep_array_max_1033_sep_455_sep_1) | (v_sep_array_max_1033_sep_455_sep_2_sep_458_sep_0 <= 0 & (-2*v_sep_array_max_1033_sep_455_sep_1 + 2*v_sep_array_max_1033_sep_455_sep_2_sep_458_sep_0) <= 0) | (2*v_sep_array_max_1033_sep_455_sep_2_sep_458_sep_0 <= 2 & 0 = v_sep_array_max_1033_sep_455_sep_1) | (2*v_sep_array_max_1033_sep_455_sep_2_sep_458_sep_0 <= 2 & (-2*v_sep_array_max_1033_sep_455_sep_1 + 2*v_sep_array_max_1033_sep_455_sep_2_sep_458_sep_0) <= 0))
                        
                      end CsisatInterface.interpolate_csisat_post_process(1393854)[12] (0.004000 sec.)
                      
                    end CsisatInterface.interpolate_csisat_wrap(1393853)[11] (0.004000 sec.)
                    
                  end InterpProver.interpolate_quick(1393844)[10] (0.005000 sec.)
                  begin minimizing # of disjunctions(1393938)[10]
                    input: (((0 <> <array_max_1033@455:1>) &&
                             (<<array_max_1033@455:2>@458:0> <= <array_max_1033@455:1>)) ||
                            (((<array_max_1033@455:1> = 0) && (<<array_max_1033@455:2>@458:0> <= 0)) ||
                             (((<<array_max_1033@455:2>@458:0> <= 0) &&
                               (<<array_max_1033@455:2>@458:0> <= <array_max_1033@455:1>)) ||
                              (((<<array_max_1033@455:2>@458:0> <= 1) && (<array_max_1033@455:1> = 0)) ||
                               ((<<array_max_1033@455:2>@458:0> <= 1) &&
                                (<<array_max_1033@455:2>@458:0> <= <array_max_1033@455:1>))))))
                    output: (((<<array_max_1033@455:2>@458:0> <= 1) && (<array_max_1033@455:1> = 0)) ||
                             ((0 <> <array_max_1033@455:1>) &&
                              (<<array_max_1033@455:2>@458:0> <= <array_max_1033@455:1>)))
                  end minimizing # of disjunctions(1393938)[10] (0.004999 sec.)
                  begin minimizing # of conjunctions(1394211)[10]
                    input: ((<<array_max_1033@455:2>@458:0> <= 1) && (<array_max_1033@455:1> = 0))
                    output: (<<array_max_1033@455:2>@458:0> <= 1)
                  end minimizing # of conjunctions(1394211)[10] (0.001000 sec.)
                  begin minimizing # of conjunctions(1394370)[10]
                    input: ((0 <> <array_max_1033@455:1>) && (<<array_max_1033@455:2>@458:0> <= <array_max_1033@455:1>))
                    output: (<<array_max_1033@455:2>@458:0> <= <array_max_1033@455:1>)
                  end minimizing # of conjunctions(1394370)[10] (0.000999 sec.)
                  
                end InterpProver.interpolate_simplify(1393641)[9] (0.011998 sec.)
                
              end InterpProver.interpolate_check(1393640)[8] (0.012998 sec.)
              output: ((<<array_max_1033@455:2>@458:0> <= 1) ||
                       (<<array_max_1033@455:2>@458:0> <= <array_max_1033@455:1>))
            end InterpProver.interpolate_log(1393639)[7] (0.012998 sec.)
            
          end InterpProver.interpolate_fresh(1393638)[6] (0.012998 sec.)
          
        end InterpProver.interpolate(1393637)[5] (0.012998 sec.)
        output:
          P[<<array_max_1033@455:2>@458:0>](<array_max_1033@455:0>:int,<array_max_1033@455:1>:int,<<array_max_1033@455:2>@458:0>:int) =
          ((<<array_max_1033@455:2>@458:0> <= 1) || (<<array_max_1033@455:2>@458:0> <= <array_max_1033@455:1>))
          P[<<array_max_1033@478:2>@481:0>](<array_max_1033@455:0>:int,<array_max_1033@455:1>:int,<<array_max_1033@455:2>@458:0>:int) =
          ((<<array_max_1033@455:2>@458:0> <= 1) || (<<array_max_1033@455:2>@458:0> <= <array_max_1033@455:1>))
          P[<<array_max_1033@455:2>@485:0>](<array_max_1033@455:0>:int,<array_max_1033@455:1>:int,<<array_max_1033@455:2>@458:0>:int) =
          ((<<array_max_1033@455:2>@458:0> <= 1) || (<<array_max_1033@455:2>@458:0> <= <array_max_1033@455:1>))
      end ApronInterface.convex_hull_interpolate(1393636)[4] (0.012998 sec.)
      Horn clauses:
        P[<fail_1487@596:0>](<fail_1487@596:0>:bool)|- bot
        
        P[<check_1148@560:2>](<f_check_1482@593:2>:int,<f_check_1482@593:0>:int,<f_check_1482@593:1>:int),
        ((<f_check_1482@593:0> < <f_check_1482@593:2>) && ((<f_check_1482@593:1> < 1) && <fail_1487@596:0>))
        |- P[<fail_1487@596:0>](<fail_1487@596:0>:bool)
        
        P[<check_1148@560:2>](<check_1148@560:0>:int,<<check_1148@560:3>@563:0>:int,<check_1148@560:2>:int),
        ((<<check_1148@560:3>@563:0> < <check_1148@560:0>) && (<<check_1148@560:3>@563:0> > 1)) |- bot
        
        P[<check_1148@534:2>](<check_1148@560:0>:int,(-1 + <check_1148@560:1>):int,<check_1148@560:2>:int),
        (<check_1148@560:1> < (1 + <check_1148@560:0>))
        |- P[<check_1148@560:2>](<check_1148@560:0>:int,<check_1148@560:1>:int,
                                 <check_1148@560:2>:int)
        
        P[<check_1148@534:2>](<check_1148@534:0>:int,<<check_1148@534:3>@537:0>:int,<check_1148@534:2>:int),
        ((<<check_1148@534:3>@537:0> < <check_1148@534:0>) && (<<check_1148@534:3>@537:0> > 1)) |- bot
        
         ((<check_1148@534:1> = 0) && (1 <= <check_1148@534:2>))
        |- P[<check_1148@534:2>](<check_1148@534:0>:int,<check_1148@534:1>:int,
                                 <check_1148@534:2>:int)
        
        P[<<<array_max_1033@455:2>@458:1>@474:0>](<array_max_1033@455:0>:int,1:int,1:int,var1930:int),
        ((var1930 < 1) && (1 < <array_max_1033@455:0>)) |- bot
        
        P[<<<array_max_1033@478:2>@481:1>@505:0>](<array_max_1033@478:0>:int,<array_max_1033@478:1>:int,<array_max_1033@478:1>:int,<<array_max_1033@478:3>@521:0>:int),
        ((<array_max_1033@478:1> < <array_max_1033@478:0>) &&
         ((1 > <<array_max_1033@478:3>@521:0>) &&
          ((<<array_max_1033@478:3>@521:0> > var1931) &&
           (((0 > <<array_max_1033@478:3>@521:0>) || (<array_max_1033@478:1> <> 2)) &&
            ((1 <= var1931) || ((<array_max_1033@478:1> = 1) && (0 <= var1931))))))) |- bot
        
        P[<array_max_1033@509:1>](<array_max_1033@509:0>:int,<array_max_1033@509:1>:int),
        ((<array_max_1033@509:1> <> 2) && (<array_max_1033@509:1> >= <array_max_1033@509:0>)) |- bot
        
        P[<<<array_max_1033@478:2>@481:1>@505:0>](<array_max_1033@509:0>:int,(
                                                  -1 + <array_max_1033@509:1>):int,(
                                                  -1 + <array_max_1033@509:1>):int,<f_array_max_1480@507:4>:int),
        (<array_max_1033@509:1> < (1 + <array_max_1033@509:0>))
        |- P[<array_max_1033@509:1>](<array_max_1033@509:0>:int,<array_max_1033@509:1>:int)
        
        P[<<<array_max_1033@455:2>@458:1>@474:0>](<array_max_1033@478:0>:int,(
                                                  -1 + <array_max_1033@478:1>):int,(
                                                  -1 + <array_max_1033@478:1>):int,<f_array_max_1480@476:4>:int),
        ((<array_max_1033@478:1> < (1 + <array_max_1033@478:0>)) && (<array_max_1033@478:1> <= 1))
        |- P[<<<array_max_1033@478:2>@481:1>@505:0>](<array_max_1033@478:0>:int,
                                                     <array_max_1033@478:1>:int,
                                                     <<array_max_1033@478:2>@481:0>:int,
                                                     <<<array_max_1033@478:2>@481:1>@505:0>:int)
        
        P[<<<array_max_1033@455:2>@458:1>@474:0>](<array_max_1033@455:0>:int,<array_max_1033@455:1>:int,<array_max_1033@455:1>:int,var1932:int),
        ((<array_max_1033@455:1> < <array_max_1033@455:0>) && (0 < <array_max_1033@455:1>)) |- bot
        
         ((<array_max_1033@455:1> = 0) && (<<<array_max_1033@455:2>@458:1>@474:0> <= 1))
        |- P[<<<array_max_1033@455:2>@458:1>@474:0>](<array_max_1033@455:0>:int,
                                                     <array_max_1033@455:1>:int,
                                                     <<array_max_1033@455:2>@458:0>:int,
                                                     <<<array_max_1033@455:2>@458:1>@474:0>:int)
      lower bounds:
        P[<check_1148@534:2>](<check_1148@534:0>:int,<check_1148@534:1>:int,<check_1148@534:2>:int) =
        ((<check_1148@534:1> = 0) && (1 <= <check_1148@534:2>))
        P[<<<array_max_1033@455:2>@458:1>@474:0>](<array_max_1033@455:0>:int,<array_max_1033@455:1>:int,<<array_max_1033@455:2>@458:0>:int,<<<array_max_1033@455:2>@458:1>@474:0>:int) =
        ((<array_max_1033@455:1> = 0) && (<<<array_max_1033@455:2>@458:1>@474:0> <= 1))
        P[<check_1148@560:2>](<check_1148@560:0>:int,<check_1148@560:1>:int,<check_1148@560:2>:int) =
        ((<check_1148@560:1> = 1) && ((<check_1148@560:1> < (1 + <check_1148@560:0>)) && (1 <= <check_1148@560:2>)))
        P[<<<array_max_1033@478:2>@481:1>@505:0>](<array_max_1033@478:0>:int,<array_max_1033@478:1>:int,<<array_max_1033@478:2>@481:0>:int,<<<array_max_1033@478:2>@481:1>@505:0>:int) =
        ((<array_max_1033@478:1> = 1) && (<array_max_1033@478:1> < (1 + <array_max_1033@478:0>)))
        P[<fail_1487@596:0>](<fail_1487@596:0>:bool) = false
        P[<array_max_1033@509:1>](<array_max_1033@509:0>:int,<array_max_1033@509:1>:int) =
        ((<array_max_1033@509:1> = 2) && (<array_max_1033@509:1> < (1 + <array_max_1033@509:0>)))
      upper bounds:
        P[<check_1148@560:2>](var2131:int,var2132:int,var2133:int) =
        ((var2132 >= var2131) || ((var2133 >= 1) && (var2132 <= 1)))
        P[<check_1148@534:2>](var2119:int,var2120:int,var2121:int) =
        ((((1 + var2120) >= var2119) || (var2121 >= 1)) &&
         (((var2120 <= 0) || ((1 + var2120) >= var2119)) && ((var2120 >= var2119) || (var2120 <= 1))))
      begin GenHcSolver.classify_pids(1416568)[4]
        output:
          [<check_1148@560:2>],[<check_1148@534:2>]
      end GenHcSolver.classify_pids(1416568)[4] (0.001000 sec.)
      lb:((<check_1148@560:1> = 1) && ((<check_1148@560:1> < (1 + <check_1148@560:0>)) && (1 <= <check_1148@560:2>)))
      nub:(not ((<check_1148@560:1> >= <check_1148@560:0>) || ((<check_1148@560:2> >= 1) && (<check_1148@560:1> <= 1))))
      begin ApronInterface.convex_hull_interpolate(1416739)[4]
        lb:((<check_1148@560:1> = 1) && ((<check_1148@560:1> < (1 + <check_1148@560:0>)) && (1 <= <check_1148@560:2>)))
        nub:(not
               ((<check_1148@560:1> >= <check_1148@560:0>) || ((<check_1148@560:2> >= 1) && (<check_1148@560:1> <= 1))))
        lb':((<check_1148@560:1> = 1) && ((<check_1148@560:1> < (1 + <check_1148@560:0>)) && (1 <= <check_1148@560:2>)))
        nub':(not
                ((<check_1148@560:1> >= <check_1148@560:0>) || ((<check_1148@560:2> >= 1) && (<check_1148@560:1> <= 1))))
        begin InterpProver.interpolate(1416740)[5]
          begin InterpProver.interpolate_fresh(1416741)[6]
            begin InterpProver.interpolate_log(1416742)[7]
              input1: ((<check_1148@560:1> = 1) &&
                       ((<check_1148@560:1> < (1 + <check_1148@560:0>)) && (1 <= <check_1148@560:2>)))
              input2: (not
                         ((<check_1148@560:1> >= <check_1148@560:0>) ||
                          ((<check_1148@560:2> >= 1) && (<check_1148@560:1> <= 1))))
              begin InterpProver.interpolate_check(1416743)[8]
                begin InterpProver.interpolate_simplify(1416744)[9]
                  begin InterpProver.interpolate_quick(1416877)[10]
                    begin CsisatInterface.interpolate_csisat_wrap(1416886)[11]
                      begin CsisatInterface.interpolate_csisat_post_process(1416887)[12]
                        begin CsisatInterface.interpolate_csisat_log(1416888)[13]
                          input1: (1 = v_sep_check_1148_sep_560_sep_1 & 1 <= v_sep_check_1148_sep_560_sep_2 & (1 + v_sep_check_1148_sep_560_sep_1) <= (1 + v_sep_check_1148_sep_560_sep_0))
                          input2: ((2 <= v_sep_check_1148_sep_560_sep_1 | (1 + v_sep_check_1148_sep_560_sep_2) <= 1) & (1 + v_sep_check_1148_sep_560_sep_1) <= v_sep_check_1148_sep_560_sep_0)
                          begin CsisatInterface.interpolate_csisat_raw(1416889)[14]
                            
                          end CsisatInterface.interpolate_csisat_raw(1416889)[14] (0.001000 sec.)
                          output: (-2*v_sep_check_1148_sep_560_sep_2 <= -2 & 2*v_sep_check_1148_sep_560_sep_1 <= 2)
                          
                        end CsisatInterface.interpolate_csisat_log(1416888)[13] (0.001000 sec.)
                        after simplification: (-2*v_sep_check_1148_sep_560_sep_2 <= -2 & 2*v_sep_check_1148_sep_560_sep_1 <= 2)
                        after dnf conversion: ((-2*v_sep_check_1148_sep_560_sep_2 <= -2 & 2*v_sep_check_1148_sep_560_sep_1 <= 2))
                        
                      end CsisatInterface.interpolate_csisat_post_process(1416887)[12] (0.001000 sec.)
                      
                    end CsisatInterface.interpolate_csisat_wrap(1416886)[11] (0.001000 sec.)
                    
                  end InterpProver.interpolate_quick(1416877)[10] (0.001000 sec.)
                  begin minimizing # of conjunctions(1416907)[10]
                    input: ((1 <= <check_1148@560:2>) && (<check_1148@560:1> <= 1))
                    output: ((<check_1148@560:1> <= 1) && (1 <= <check_1148@560:2>))
                  end minimizing # of conjunctions(1416907)[10] (0.000000 sec.)
                  
                end InterpProver.interpolate_simplify(1416744)[9] (0.001000 sec.)
                
              end InterpProver.interpolate_check(1416743)[8] (0.001000 sec.)
              output: ((<check_1148@560:1> <= 1) && (1 <= <check_1148@560:2>))
            end InterpProver.interpolate_log(1416742)[7] (0.001000 sec.)
            
          end InterpProver.interpolate_fresh(1416741)[6] (0.001000 sec.)
          
        end InterpProver.interpolate(1416740)[5] (0.001000 sec.)
        output:
          P[<check_1148@560:2>](<check_1148@560:0>:int,<check_1148@560:1>:int,<check_1148@560:2>:int) =
          ((<check_1148@560:1> <= 1) && (1 <= <check_1148@560:2>))
      end ApronInterface.convex_hull_interpolate(1416739)[4] (0.001000 sec.)
      Horn clauses:
        P[<fail_1487@596:0>](<fail_1487@596:0>:bool)|- bot
        
        P[<check_1148@534:2>](<check_1148@560:0>:int,(-1 + <check_1148@560:1>):int,<check_1148@560:2>:int),
        ((<check_1148@560:1> < (1 + <check_1148@560:0>)) && ((<check_1148@560:1> > 1) || (1 > <check_1148@560:2>)))
        |- bot
        
        P[<check_1148@534:2>](<check_1148@534:0>:int,<<check_1148@534:3>@537:0>:int,<check_1148@534:2>:int),
        ((<<check_1148@534:3>@537:0> < <check_1148@534:0>) && (<<check_1148@534:3>@537:0> > 1)) |- bot
        
         ((<check_1148@534:1> = 0) && (1 <= <check_1148@534:2>))
        |- P[<check_1148@534:2>](<check_1148@534:0>:int,<check_1148@534:1>:int,
                                 <check_1148@534:2>:int)
        
        P[<<<array_max_1033@455:2>@458:1>@474:0>](<array_max_1033@455:0>:int,1:int,1:int,var1930:int),
        ((var1930 < 1) && (1 < <array_max_1033@455:0>)) |- bot
        
        P[<<<array_max_1033@478:2>@481:1>@505:0>](<array_max_1033@478:0>:int,<array_max_1033@478:1>:int,<array_max_1033@478:1>:int,<<array_max_1033@478:3>@521:0>:int),
        ((<array_max_1033@478:1> < <array_max_1033@478:0>) &&
         ((1 > <<array_max_1033@478:3>@521:0>) &&
          ((<<array_max_1033@478:3>@521:0> > var1931) &&
           (((0 > <<array_max_1033@478:3>@521:0>) || (<array_max_1033@478:1> <> 2)) &&
            ((1 <= var1931) || ((<array_max_1033@478:1> = 1) && (0 <= var1931))))))) |- bot
        
        P[<array_max_1033@509:1>](<array_max_1033@509:0>:int,<array_max_1033@509:1>:int),
        ((<array_max_1033@509:1> <> 2) && (<array_max_1033@509:1> >= <array_max_1033@509:0>)) |- bot
        
        P[<<<array_max_1033@478:2>@481:1>@505:0>](<array_max_1033@509:0>:int,(
                                                  -1 + <array_max_1033@509:1>):int,(
                                                  -1 + <array_max_1033@509:1>):int,<f_array_max_1480@507:4>:int),
        (<array_max_1033@509:1> < (1 + <array_max_1033@509:0>))
        |- P[<array_max_1033@509:1>](<array_max_1033@509:0>:int,<array_max_1033@509:1>:int)
        
        P[<<<array_max_1033@455:2>@458:1>@474:0>](<array_max_1033@478:0>:int,(
                                                  -1 + <array_max_1033@478:1>):int,(
                                                  -1 + <array_max_1033@478:1>):int,<f_array_max_1480@476:4>:int),
        ((<array_max_1033@478:1> < (1 + <array_max_1033@478:0>)) && (<array_max_1033@478:1> <= 1))
        |- P[<<<array_max_1033@478:2>@481:1>@505:0>](<array_max_1033@478:0>:int,
                                                     <array_max_1033@478:1>:int,
                                                     <<array_max_1033@478:2>@481:0>:int,
                                                     <<<array_max_1033@478:2>@481:1>@505:0>:int)
        
        P[<<<array_max_1033@455:2>@458:1>@474:0>](<array_max_1033@455:0>:int,<array_max_1033@455:1>:int,<array_max_1033@455:1>:int,var1932:int),
        ((<array_max_1033@455:1> < <array_max_1033@455:0>) && (0 < <array_max_1033@455:1>)) |- bot
        
         ((<array_max_1033@455:1> = 0) && (<<<array_max_1033@455:2>@458:1>@474:0> <= 1))
        |- P[<<<array_max_1033@455:2>@458:1>@474:0>](<array_max_1033@455:0>:int,
                                                     <array_max_1033@455:1>:int,
                                                     <<array_max_1033@455:2>@458:0>:int,
                                                     <<<array_max_1033@455:2>@458:1>@474:0>:int)
      lower bounds:
        P[<check_1148@534:2>](<check_1148@534:0>:int,<check_1148@534:1>:int,<check_1148@534:2>:int) =
        ((<check_1148@534:1> = 0) && (1 <= <check_1148@534:2>))
        P[<<<array_max_1033@455:2>@458:1>@474:0>](<array_max_1033@455:0>:int,<array_max_1033@455:1>:int,<<array_max_1033@455:2>@458:0>:int,<<<array_max_1033@455:2>@458:1>@474:0>:int) =
        ((<array_max_1033@455:1> = 0) && (<<<array_max_1033@455:2>@458:1>@474:0> <= 1))
        P[<fail_1487@596:0>](var2138:bool) = false
        P[<<<array_max_1033@478:2>@481:1>@505:0>](<array_max_1033@478:0>:int,<array_max_1033@478:1>:int,<<array_max_1033@478:2>@481:0>:int,<<<array_max_1033@478:2>@481:1>@505:0>:int) =
        ((<array_max_1033@478:1> = 1) && (<array_max_1033@478:1> < (1 + <array_max_1033@478:0>)))
        P[<array_max_1033@509:1>](<array_max_1033@509:0>:int,<array_max_1033@509:1>:int) =
        ((<array_max_1033@509:1> = 2) && (<array_max_1033@509:1> < (1 + <array_max_1033@509:0>)))
      upper bounds:
        P[<<<array_max_1033@478:2>@481:1>@505:0>](var2159:int,var2160:int,var2161:int,var2162:int) =
        (((var2160 >= var2159) ||
          ((1 <= var2162) ||
           ((var2160 <> var2161) ||
            ((var2162 <= var1931) ||
             (((var2160 = 2) && (0 <= var2162)) || ((1 > var1931) && ((var2160 <> 1) || (0 > var1931)))))))) &&
         ((var2159 = 2) || (((1 + var2160) <> var2159) || ((1 + var2161) <> var2159))))
        P[<<<array_max_1033@455:2>@458:1>@474:0>](var2144:int,var2145:int,var2146:int,var2147:int) =
        (((var2145 <> 1) || ((var2146 <> 1) || ((var2147 >= 1) || (1 >= var2144)))) &&
         (((var2144 >= 2) || (((2 + var2145) <> var2144) || ((2 + var2146) <> var2144))) &&
          ((var2145 >= var2144) || ((0 >= var2145) || (var2145 <> var2146)))))
      begin GenHcSolver.classify_pids(1431166)[4]
        output:
          [<<<array_max_1033@478:2>@481:1>@505:0>],[<<<array_max_1033@455:2>@458:1>@474:0>]
      end GenHcSolver.classify_pids(1431166)[4] (0.002000 sec.)
      lb:((<array_max_1033@478:1> = 1) && (<array_max_1033@478:1> < (1 + <array_max_1033@478:0>)))
      nub:(not
             (((<array_max_1033@478:1> >= <array_max_1033@478:0>) ||
               ((1 <= <<<array_max_1033@478:2>@481:1>@505:0>) ||
                ((<array_max_1033@478:1> <> <<array_max_1033@478:2>@481:0>) ||
                 ((<<<array_max_1033@478:2>@481:1>@505:0> <= var2169) ||
                  (((<array_max_1033@478:1> = 2) && (0 <= <<<array_max_1033@478:2>@481:1>@505:0>)) ||
                   ((1 > var2169) && ((<array_max_1033@478:1> <> 1) || (0 > var2169)))))))) &&
              ((<array_max_1033@478:0> = 2) ||
               (((1 + <array_max_1033@478:1>) <> <array_max_1033@478:0>) ||
                ((1 + <<array_max_1033@478:2>@481:0>) <> <array_max_1033@478:0>)))))
      begin ApronInterface.convex_hull_interpolate(1431706)[4]
        lb:((<array_max_1033@478:1> = 1) && (<array_max_1033@478:1> < (1 + <array_max_1033@478:0>)))
        nub:(not
               (((<array_max_1033@478:1> >= <array_max_1033@478:0>) ||
                 ((1 <= <<<array_max_1033@478:2>@481:1>@505:0>) ||
                  ((<array_max_1033@478:1> <> <<array_max_1033@478:2>@481:0>) ||
                   ((<<<array_max_1033@478:2>@481:1>@505:0> <= var2169) ||
                    (((<array_max_1033@478:1> = 2) && (0 <= <<<array_max_1033@478:2>@481:1>@505:0>)) ||
                     ((1 > var2169) && ((<array_max_1033@478:1> <> 1) || (0 > var2169)))))))) &&
                ((<array_max_1033@478:0> = 2) ||
                 (((1 + <array_max_1033@478:1>) <> <array_max_1033@478:0>) ||
                  ((1 + <<array_max_1033@478:2>@481:0>) <> <array_max_1033@478:0>)))))
        lb':((<array_max_1033@478:1> = 1) && (<array_max_1033@478:1> < (1 + <array_max_1033@478:0>)))
        nub':(not
                (((<array_max_1033@478:1> >= <array_max_1033@478:0>) ||
                  ((1 <= <<<array_max_1033@478:2>@481:1>@505:0>) ||
                   ((<array_max_1033@478:1> <> <<array_max_1033@478:2>@481:0>) ||
                    ((<<<array_max_1033@478:2>@481:1>@505:0> <= var2169) ||
                     (((<array_max_1033@478:1> = 2) && (0 <= <<<array_max_1033@478:2>@481:1>@505:0>)) ||
                      ((1 > var2169) && ((<array_max_1033@478:1> <> 1) || (0 > var2169)))))))) &&
                 ((<array_max_1033@478:0> = 2) ||
                  (((1 + <array_max_1033@478:1>) <> <array_max_1033@478:0>) ||
                   ((1 + <<array_max_1033@478:2>@481:0>) <> <array_max_1033@478:0>)))))
        begin InterpProver.interpolate(1431707)[5]
          begin InterpProver.interpolate_fresh(1431708)[6]
            begin InterpProver.interpolate_log(1431709)[7]
              input1: ((<array_max_1033@478:1> = 1) && (<array_max_1033@478:1> < (1 + <array_max_1033@478:0>)))
              input2: (not
                         (((<array_max_1033@478:1> >= <array_max_1033@478:0>) ||
                           ((1 <= <<<array_max_1033@478:2>@481:1>@505:0>) ||
                            ((<array_max_1033@478:1> <> <<array_max_1033@478:2>@481:0>) ||
                             ((<<<array_max_1033@478:2>@481:1>@505:0> <= var2170) ||
                              (((<array_max_1033@478:1> = 2) && (0 <= <<<array_max_1033@478:2>@481:1>@505:0>)) ||
                               ((1 > var2170) && ((<array_max_1033@478:1> <> 1) || (0 > var2170)))))))) &&
                          ((<array_max_1033@478:0> = 2) ||
                           (((1 + <array_max_1033@478:1>) <> <array_max_1033@478:0>) ||
                            ((1 + <<array_max_1033@478:2>@481:0>) <> <array_max_1033@478:0>)))))
              begin InterpProver.interpolate_check(1431710)[8]
                begin InterpProver.interpolate_simplify(1431711)[9]
                  begin InterpProver.interpolate_quick(1432236)[10]
                    begin CsisatInterface.interpolate_csisat_wrap(1432245)[11]
                      begin CsisatInterface.interpolate_csisat_post_process(1432246)[12]
                        begin CsisatInterface.interpolate_csisat_log(1432247)[13]
                          input1: (1 = v_sep_array_max_1033_sep_478_sep_1 & (1 + v_sep_array_max_1033_sep_478_sep_1) <= (1 + v_sep_array_max_1033_sep_478_sep_0))
                          input2: ((((1 = v_sep_array_max_1033_sep_478_sep_1 & 0 <= v_sep_var2170) | 1 <= v_sep_var2170) & (not 2 = v_sep_array_max_1033_sep_478_sep_1 | (1 + v_sep_array_max_1033_sep_478_sep_2_sep_481_sep_1_sep_505_sep_0) <= 0) & v_sep_array_max_1033_sep_478_sep_1 = v_sep_array_max_1033_sep_478_sep_2_sep_481_sep_0 & (1 + v_sep_array_max_1033_sep_478_sep_1) <= v_sep_array_max_1033_sep_478_sep_0 & (1 + v_sep_array_max_1033_sep_478_sep_2_sep_481_sep_1_sep_505_sep_0) <= 1 & (1 + v_sep_var2170) <= v_sep_array_max_1033_sep_478_sep_2_sep_481_sep_1_sep_505_sep_0) | (not 2 = v_sep_array_max_1033_sep_478_sep_0 & v_sep_array_max_1033_sep_478_sep_0 = (1 + v_sep_array_max_1033_sep_478_sep_1) & v_sep_array_max_1033_sep_478_sep_0 = (1 + v_sep_array_max_1033_sep_478_sep_2_sep_481_sep_0)))
                          begin CsisatInterface.interpolate_csisat_raw(1432248)[14]
                            
                          end CsisatInterface.interpolate_csisat_raw(1432248)[14] (0.009999 sec.)
                          output: (((v_sep_array_max_1033_sep_478_sep_1 <= 1 & -1*v_sep_array_max_1033_sep_478_sep_1 <= -1) | not 1 = v_sep_array_max_1033_sep_478_sep_1) & 1 = v_sep_array_max_1033_sep_478_sep_1)
                          
                        end CsisatInterface.interpolate_csisat_log(1432247)[13] (0.009999 sec.)
                        after simplification: (((v_sep_array_max_1033_sep_478_sep_1 <= 1 & -1*v_sep_array_max_1033_sep_478_sep_1 <= -1) | not 1 = v_sep_array_max_1033_sep_478_sep_1) & 1 = v_sep_array_max_1033_sep_478_sep_1)
                        after dnf conversion: ((v_sep_array_max_1033_sep_478_sep_1 <= 1 & -1*v_sep_array_max_1033_sep_478_sep_1 <= -1 & 1 = v_sep_array_max_1033_sep_478_sep_1) | (not 1 = v_sep_array_max_1033_sep_478_sep_1 & 1 = v_sep_array_max_1033_sep_478_sep_1))
                        
                      end CsisatInterface.interpolate_csisat_post_process(1432246)[12] (0.010998 sec.)
                      
                    end CsisatInterface.interpolate_csisat_wrap(1432245)[11] (0.010998 sec.)
                    
                  end InterpProver.interpolate_quick(1432236)[10] (0.010998 sec.)
                  
                end InterpProver.interpolate_simplify(1431711)[9] (0.012998 sec.)
                
              end InterpProver.interpolate_check(1431710)[8] (0.012998 sec.)
              output: (<array_max_1033@478:1> = 1)
            end InterpProver.interpolate_log(1431709)[7] (0.013997 sec.)
            
          end InterpProver.interpolate_fresh(1431708)[6] (0.013997 sec.)
          
        end InterpProver.interpolate(1431707)[5] (0.013997 sec.)
        output:
          P[<<<array_max_1033@478:2>@481:1>@505:0>](<array_max_1033@478:0>:int,<array_max_1033@478:1>:int,<<array_max_1033@478:2>@481:0>:int,<<<array_max_1033@478:2>@481:1>@505:0>:int) =
          (<array_max_1033@478:1> = 1)
      end ApronInterface.convex_hull_interpolate(1431706)[4] (0.013997 sec.)
      Horn clauses:
        P[<fail_1487@596:0>](<fail_1487@596:0>:bool)|- bot
        
        P[<check_1148@534:2>](<check_1148@560:0>:int,(-1 + <check_1148@560:1>):int,<check_1148@560:2>:int),
        ((<check_1148@560:1> < (1 + <check_1148@560:0>)) && ((<check_1148@560:1> > 1) || (1 > <check_1148@560:2>)))
        |- bot
        
        P[<check_1148@534:2>](<check_1148@534:0>:int,<<check_1148@534:3>@537:0>:int,<check_1148@534:2>:int),
        ((<<check_1148@534:3>@537:0> < <check_1148@534:0>) && (<<check_1148@534:3>@537:0> > 1)) |- bot
        
         ((<check_1148@534:1> = 0) && (1 <= <check_1148@534:2>))
        |- P[<check_1148@534:2>](<check_1148@534:0>:int,<check_1148@534:1>:int,
                                 <check_1148@534:2>:int)
        
        P[<<<array_max_1033@455:2>@458:1>@474:0>](<array_max_1033@455:0>:int,1:int,1:int,var1930:int),
        ((var1930 < 1) && (1 < <array_max_1033@455:0>)) |- bot
        
        P[<array_max_1033@509:1>](<array_max_1033@509:0>:int,<array_max_1033@509:1>:int),
        ((<array_max_1033@509:1> <> 2) && (<array_max_1033@509:1> >= <array_max_1033@509:0>)) |- bot
        
         ((<array_max_1033@509:1> = 2) && (<array_max_1033@509:1> < (1 + <array_max_1033@509:0>)))
        |- P[<array_max_1033@509:1>](<array_max_1033@509:0>:int,<array_max_1033@509:1>:int)
        
        P[<<<array_max_1033@455:2>@458:1>@474:0>](<array_max_1033@478:0>:int,(
                                                  -1 + <array_max_1033@478:1>):int,(
                                                  -1 + <array_max_1033@478:1>):int,<f_array_max_1480@476:4>:int),
        ((<array_max_1033@478:1> < (1 + <array_max_1033@478:0>)) && (<array_max_1033@478:1> < 1)) |- bot
        
        P[<<<array_max_1033@455:2>@458:1>@474:0>](<array_max_1033@455:0>:int,<array_max_1033@455:1>:int,<array_max_1033@455:1>:int,var1932:int),
        ((<array_max_1033@455:1> < <array_max_1033@455:0>) && (0 < <array_max_1033@455:1>)) |- bot
        
         ((<array_max_1033@455:1> = 0) && (<<<array_max_1033@455:2>@458:1>@474:0> <= 1))
        |- P[<<<array_max_1033@455:2>@458:1>@474:0>](<array_max_1033@455:0>:int,
                                                     <array_max_1033@455:1>:int,
                                                     <<array_max_1033@455:2>@458:0>:int,
                                                     <<<array_max_1033@455:2>@458:1>@474:0>:int)
      lower bounds:
        P[<check_1148@534:2>](<check_1148@534:0>:int,<check_1148@534:1>:int,<check_1148@534:2>:int) =
        ((<check_1148@534:1> = 0) && (1 <= <check_1148@534:2>))
        P[<array_max_1033@509:1>](<array_max_1033@509:0>:int,<array_max_1033@509:1>:int) =
        ((<array_max_1033@509:1> = 2) && (<array_max_1033@509:1> < (1 + <array_max_1033@509:0>)))
        P[<<<array_max_1033@455:2>@458:1>@474:0>](<array_max_1033@455:0>:int,<array_max_1033@455:1>:int,<<array_max_1033@455:2>@458:0>:int,<<<array_max_1033@455:2>@458:1>@474:0>:int) =
        ((<array_max_1033@455:1> = 0) && (<<<array_max_1033@455:2>@458:1>@474:0> <= 1))
        P[<fail_1487@596:0>](var2172:bool) = false
      upper bounds:
        P[<fail_1487@596:0>](var2175:bool) = true
      begin GenHcSolver.classify_pids(1436791)[4]
        output:
          [<fail_1487@596:0>]
      end GenHcSolver.classify_pids(1436791)[4] (0.000000 sec.)
      lb:false
      nub:false
      begin ApronInterface.convex_hull_interpolate(1436794)[4]
        lb:false
        nub:false
        lb':false
        nub':false
        begin InterpProver.interpolate(1436795)[5]
          begin InterpProver.interpolate_fresh(1436796)[6]
            begin InterpProver.interpolate_log(1436797)[7]
              input1: false
              input2: false
              begin InterpProver.interpolate_check(1436798)[8]
                begin InterpProver.interpolate_simplify(1436799)[9]
                  begin InterpProver.interpolate_quick(1436812)[10]
                    
                  end InterpProver.interpolate_quick(1436812)[10] (0.000000 sec.)
                  begin minimizing # of disjunctions(1436816)[10]
                    input: false
                    output: false
                  end minimizing # of disjunctions(1436816)[10] (0.000000 sec.)
                  
                end InterpProver.interpolate_simplify(1436799)[9] (0.000000 sec.)
                
              end InterpProver.interpolate_check(1436798)[8] (0.000000 sec.)
              output: false
            end InterpProver.interpolate_log(1436797)[7] (0.000000 sec.)
            
          end InterpProver.interpolate_fresh(1436796)[6] (0.000000 sec.)
          
        end InterpProver.interpolate(1436795)[5] (0.000000 sec.)
        output:
          P[<fail_1487@596:0>](var2172:bool) = false
      end ApronInterface.convex_hull_interpolate(1436794)[4] (0.000000 sec.)
      Horn clauses:
        P[<check_1148@534:2>](<check_1148@560:0>:int,(-1 + <check_1148@560:1>):int,<check_1148@560:2>:int),
        ((<check_1148@560:1> < (1 + <check_1148@560:0>)) && ((<check_1148@560:1> > 1) || (1 > <check_1148@560:2>)))
        |- bot
        
        P[<check_1148@534:2>](<check_1148@534:0>:int,<<check_1148@534:3>@537:0>:int,<check_1148@534:2>:int),
        ((<<check_1148@534:3>@537:0> < <check_1148@534:0>) && (<<check_1148@534:3>@537:0> > 1)) |- bot
        
         ((<check_1148@534:1> = 0) && (1 <= <check_1148@534:2>))
        |- P[<check_1148@534:2>](<check_1148@534:0>:int,<check_1148@534:1>:int,
                                 <check_1148@534:2>:int)
        
        P[<<<array_max_1033@455:2>@458:1>@474:0>](<array_max_1033@455:0>:int,1:int,1:int,var1930:int),
        ((var1930 < 1) && (1 < <array_max_1033@455:0>)) |- bot
        
        P[<array_max_1033@509:1>](<array_max_1033@509:0>:int,<array_max_1033@509:1>:int),
        ((<array_max_1033@509:1> <> 2) && (<array_max_1033@509:1> >= <array_max_1033@509:0>)) |- bot
        
         ((<array_max_1033@509:1> = 2) && (<array_max_1033@509:1> < (1 + <array_max_1033@509:0>)))
        |- P[<array_max_1033@509:1>](<array_max_1033@509:0>:int,<array_max_1033@509:1>:int)
        
        P[<<<array_max_1033@455:2>@458:1>@474:0>](<array_max_1033@478:0>:int,(
                                                  -1 + <array_max_1033@478:1>):int,(
                                                  -1 + <array_max_1033@478:1>):int,<f_array_max_1480@476:4>:int),
        ((<array_max_1033@478:1> < (1 + <array_max_1033@478:0>)) && (<array_max_1033@478:1> < 1)) |- bot
        
        P[<<<array_max_1033@455:2>@458:1>@474:0>](<array_max_1033@455:0>:int,<array_max_1033@455:1>:int,<array_max_1033@455:1>:int,var1932:int),
        ((<array_max_1033@455:1> < <array_max_1033@455:0>) && (0 < <array_max_1033@455:1>)) |- bot
        
         ((<array_max_1033@455:1> = 0) && (<<<array_max_1033@455:2>@458:1>@474:0> <= 1))
        |- P[<<<array_max_1033@455:2>@458:1>@474:0>](<array_max_1033@455:0>:int,
                                                     <array_max_1033@455:1>:int,
                                                     <<array_max_1033@455:2>@458:0>:int,
                                                     <<<array_max_1033@455:2>@458:1>@474:0>:int)
      lower bounds:
        P[<check_1148@534:2>](<check_1148@534:0>:int,<check_1148@534:1>:int,<check_1148@534:2>:int) =
        ((<check_1148@534:1> = 0) && (1 <= <check_1148@534:2>))
        P[<array_max_1033@509:1>](<array_max_1033@509:0>:int,<array_max_1033@509:1>:int) =
        ((<array_max_1033@509:1> = 2) && (<array_max_1033@509:1> < (1 + <array_max_1033@509:0>)))
        P[<<<array_max_1033@455:2>@458:1>@474:0>](<array_max_1033@455:0>:int,<array_max_1033@455:1>:int,<<array_max_1033@455:2>@458:0>:int,<<<array_max_1033@455:2>@458:1>@474:0>:int) =
        ((<array_max_1033@455:1> = 0) && (<<<array_max_1033@455:2>@458:1>@474:0> <= 1))
      upper bounds:
        P[<check_1148@534:2>](var2176:int,var2177:int,var2178:int) =
        ((var2177 >= var2176) || ((var2177 <= 1) && ((var2177 <= 0) && (1 <= var2178))))
      begin GenHcSolver.classify_pids(1441228)[4]
        output:
          [<check_1148@534:2>]
      end GenHcSolver.classify_pids(1441228)[4] (0.000000 sec.)
      lb:((<check_1148@534:1> = 0) && (1 <= <check_1148@534:2>))
      nub:(not
             ((<check_1148@534:1> >= <check_1148@534:0>) ||
              ((<check_1148@534:1> <= 1) && ((<check_1148@534:1> <= 0) && (1 <= <check_1148@534:2>)))))
      begin ApronInterface.convex_hull_interpolate(1441231)[4]
        lb:((<check_1148@534:1> = 0) && (1 <= <check_1148@534:2>))
        nub:(not
               ((<check_1148@534:1> >= <check_1148@534:0>) ||
                ((<check_1148@534:1> <= 1) && ((<check_1148@534:1> <= 0) && (1 <= <check_1148@534:2>)))))
        lb':((<check_1148@534:1> = 0) && (1 <= <check_1148@534:2>))
        nub':(not
                ((<check_1148@534:1> >= <check_1148@534:0>) ||
                 ((<check_1148@534:1> <= 1) && ((<check_1148@534:1> <= 0) && (1 <= <check_1148@534:2>)))))
        begin InterpProver.interpolate(1441232)[5]
          begin InterpProver.interpolate_fresh(1441233)[6]
            begin InterpProver.interpolate_log(1441234)[7]
              input1: ((<check_1148@534:1> = 0) && (1 <= <check_1148@534:2>))
              input2: (not
                         ((<check_1148@534:1> >= <check_1148@534:0>) ||
                          ((<check_1148@534:1> <= 1) && ((<check_1148@534:1> <= 0) && (1 <= <check_1148@534:2>)))))
              begin InterpProver.interpolate_check(1441235)[8]
                begin InterpProver.interpolate_simplify(1441236)[9]
                  begin InterpProver.interpolate_quick(1441323)[10]
                    begin CsisatInterface.interpolate_csisat_wrap(1441332)[11]
                      begin CsisatInterface.interpolate_csisat_post_process(1441333)[12]
                        begin CsisatInterface.interpolate_csisat_log(1441334)[13]
                          input1: (0 = v_sep_check_1148_sep_534_sep_1 & 1 <= v_sep_check_1148_sep_534_sep_2)
                          input2: ((1 <= v_sep_check_1148_sep_534_sep_1 | (1 + v_sep_check_1148_sep_534_sep_2) <= 1) & (1 + v_sep_check_1148_sep_534_sep_1) <= v_sep_check_1148_sep_534_sep_0)
                          begin CsisatInterface.interpolate_csisat_raw(1441335)[14]
                            
                          end CsisatInterface.interpolate_csisat_raw(1441335)[14] (0.001000 sec.)
                          output: (-2*v_sep_check_1148_sep_534_sep_2 <= -2 & 2*v_sep_check_1148_sep_534_sep_1 <= 0)
                          
                        end CsisatInterface.interpolate_csisat_log(1441334)[13] (0.001000 sec.)
                        after simplification: (-2*v_sep_check_1148_sep_534_sep_2 <= -2 & 2*v_sep_check_1148_sep_534_sep_1 <= 0)
                        after dnf conversion: ((-2*v_sep_check_1148_sep_534_sep_2 <= -2 & 2*v_sep_check_1148_sep_534_sep_1 <= 0))
                        
                      end CsisatInterface.interpolate_csisat_post_process(1441333)[12] (0.001000 sec.)
                      
                    end CsisatInterface.interpolate_csisat_wrap(1441332)[11] (0.001000 sec.)
                    
                  end InterpProver.interpolate_quick(1441323)[10] (0.001000 sec.)
                  begin minimizing # of conjunctions(1441350)[10]
                    input: ((1 <= <check_1148@534:2>) && (<check_1148@534:1> <= 0))
                    output: ((<check_1148@534:1> <= 0) && (1 <= <check_1148@534:2>))
                  end minimizing # of conjunctions(1441350)[10] (0.000000 sec.)
                  
                end InterpProver.interpolate_simplify(1441236)[9] (0.002000 sec.)
                
              end InterpProver.interpolate_check(1441235)[8] (0.003000 sec.)
              output: ((<check_1148@534:1> <= 0) && (1 <= <check_1148@534:2>))
            end InterpProver.interpolate_log(1441234)[7] (0.003000 sec.)
            
          end InterpProver.interpolate_fresh(1441233)[6] (0.003000 sec.)
          
        end InterpProver.interpolate(1441232)[5] (0.003000 sec.)
        output:
          P[<check_1148@534:2>](<check_1148@534:0>:int,<check_1148@534:1>:int,<check_1148@534:2>:int) =
          ((<check_1148@534:1> <= 0) && (1 <= <check_1148@534:2>))
      end ApronInterface.convex_hull_interpolate(1441231)[4] (0.003000 sec.)
      Horn clauses:
        P[<<<array_max_1033@455:2>@458:1>@474:0>](<array_max_1033@455:0>:int,1:int,1:int,var1930:int),
        ((var1930 < 1) && (1 < <array_max_1033@455:0>)) |- bot
        
        P[<array_max_1033@509:1>](<array_max_1033@509:0>:int,<array_max_1033@509:1>:int),
        ((<array_max_1033@509:1> <> 2) && (<array_max_1033@509:1> >= <array_max_1033@509:0>)) |- bot
        
         ((<array_max_1033@509:1> = 2) && (<array_max_1033@509:1> < (1 + <array_max_1033@509:0>)))
        |- P[<array_max_1033@509:1>](<array_max_1033@509:0>:int,<array_max_1033@509:1>:int)
        
        P[<<<array_max_1033@455:2>@458:1>@474:0>](<array_max_1033@478:0>:int,(
                                                  -1 + <array_max_1033@478:1>):int,(
                                                  -1 + <array_max_1033@478:1>):int,<f_array_max_1480@476:4>:int),
        ((<array_max_1033@478:1> < (1 + <array_max_1033@478:0>)) && (<array_max_1033@478:1> < 1)) |- bot
        
        P[<<<array_max_1033@455:2>@458:1>@474:0>](<array_max_1033@455:0>:int,<array_max_1033@455:1>:int,<array_max_1033@455:1>:int,var1932:int),
        ((<array_max_1033@455:1> < <array_max_1033@455:0>) && (0 < <array_max_1033@455:1>)) |- bot
        
         ((<array_max_1033@455:1> = 0) && (<<<array_max_1033@455:2>@458:1>@474:0> <= 1))
        |- P[<<<array_max_1033@455:2>@458:1>@474:0>](<array_max_1033@455:0>:int,
                                                     <array_max_1033@455:1>:int,
                                                     <<array_max_1033@455:2>@458:0>:int,
                                                     <<<array_max_1033@455:2>@458:1>@474:0>:int)
      lower bounds:
        P[<array_max_1033@509:1>](<array_max_1033@509:0>:int,<array_max_1033@509:1>:int) =
        ((<array_max_1033@509:1> = 2) && (<array_max_1033@509:1> < (1 + <array_max_1033@509:0>)))
        P[<<<array_max_1033@455:2>@458:1>@474:0>](<array_max_1033@455:0>:int,<array_max_1033@455:1>:int,<<array_max_1033@455:2>@458:0>:int,<<<array_max_1033@455:2>@458:1>@474:0>:int) =
        ((<array_max_1033@455:1> = 0) && (<<<array_max_1033@455:2>@458:1>@474:0> <= 1))
      upper bounds:
        P[<array_max_1033@509:1>](var2182:int,var2183:int) = ((var2183 = 2) || (var2183 < var2182))
      begin GenHcSolver.classify_pids(1444300)[4]
        output:
          [<array_max_1033@509:1>]
      end GenHcSolver.classify_pids(1444300)[4] (0.000000 sec.)
      lb:((<array_max_1033@509:1> = 2) && (<array_max_1033@509:1> < (1 + <array_max_1033@509:0>)))
      nub:(not ((<array_max_1033@509:1> = 2) || (<array_max_1033@509:1> < <array_max_1033@509:0>)))
      begin ApronInterface.convex_hull_interpolate(1444303)[4]
        lb:((<array_max_1033@509:1> = 2) && (<array_max_1033@509:1> < (1 + <array_max_1033@509:0>)))
        nub:(not ((<array_max_1033@509:1> = 2) || (<array_max_1033@509:1> < <array_max_1033@509:0>)))
        lb':((<array_max_1033@509:1> = 2) && (<array_max_1033@509:1> < (1 + <array_max_1033@509:0>)))
        nub':(not ((<array_max_1033@509:1> = 2) || (<array_max_1033@509:1> < <array_max_1033@509:0>)))
        begin InterpProver.interpolate(1444304)[5]
          begin InterpProver.interpolate_fresh(1444305)[6]
            begin InterpProver.interpolate_log(1444306)[7]
              input1: ((<array_max_1033@509:1> = 2) && (<array_max_1033@509:1> < (1 + <array_max_1033@509:0>)))
              input2: (not ((<array_max_1033@509:1> = 2) || (<array_max_1033@509:1> < <array_max_1033@509:0>)))
              begin InterpProver.interpolate_check(1444307)[8]
                begin InterpProver.interpolate_simplify(1444308)[9]
                  begin InterpProver.interpolate_quick(1444379)[10]
                    begin CsisatInterface.interpolate_csisat_wrap(1444388)[11]
                      begin CsisatInterface.interpolate_csisat_post_process(1444389)[12]
                        begin CsisatInterface.interpolate_csisat_log(1444390)[13]
                          input1: (2 = v_sep_array_max_1033_sep_509_sep_1 & (1 + v_sep_array_max_1033_sep_509_sep_1) <= (1 + v_sep_array_max_1033_sep_509_sep_0))
                          input2: (not 2 = v_sep_array_max_1033_sep_509_sep_1 & v_sep_array_max_1033_sep_509_sep_0 <= v_sep_array_max_1033_sep_509_sep_1)
                          begin CsisatInterface.interpolate_csisat_raw(1444391)[14]
                            
                          end CsisatInterface.interpolate_csisat_raw(1444391)[14] (0.000000 sec.)
                          output: 2 = v_sep_array_max_1033_sep_509_sep_1
                          
                        end CsisatInterface.interpolate_csisat_log(1444390)[13] (0.000000 sec.)
                        after simplification: 2 = v_sep_array_max_1033_sep_509_sep_1
                        after dnf conversion: ((2 = v_sep_array_max_1033_sep_509_sep_1))
                        
                      end CsisatInterface.interpolate_csisat_post_process(1444389)[12] (0.000000 sec.)
                      
                    end CsisatInterface.interpolate_csisat_wrap(1444388)[11] (0.000000 sec.)
                    
                  end InterpProver.interpolate_quick(1444379)[10] (0.001000 sec.)
                  
                end InterpProver.interpolate_simplify(1444308)[9] (0.001000 sec.)
                
              end InterpProver.interpolate_check(1444307)[8] (0.001000 sec.)
              output: (2 = <array_max_1033@509:1>)
            end InterpProver.interpolate_log(1444306)[7] (0.001000 sec.)
            
          end InterpProver.interpolate_fresh(1444305)[6] (0.001000 sec.)
          
        end InterpProver.interpolate(1444304)[5] (0.001000 sec.)
        output:
          P[<array_max_1033@509:1>](<array_max_1033@509:0>:int,<array_max_1033@509:1>:int) =
          (2 = <array_max_1033@509:1>)
      end ApronInterface.convex_hull_interpolate(1444303)[4] (0.001000 sec.)
      Horn clauses:
        P[<<<array_max_1033@455:2>@458:1>@474:0>](<array_max_1033@455:0>:int,1:int,1:int,var1930:int),
        ((var1930 < 1) && (1 < <array_max_1033@455:0>)) |- bot
        
        P[<<<array_max_1033@455:2>@458:1>@474:0>](<array_max_1033@478:0>:int,(
                                                  -1 + <array_max_1033@478:1>):int,(
                                                  -1 + <array_max_1033@478:1>):int,<f_array_max_1480@476:4>:int),
        ((<array_max_1033@478:1> < (1 + <array_max_1033@478:0>)) && (<array_max_1033@478:1> < 1)) |- bot
        
        P[<<<array_max_1033@455:2>@458:1>@474:0>](<array_max_1033@455:0>:int,<array_max_1033@455:1>:int,<array_max_1033@455:1>:int,var1932:int),
        ((<array_max_1033@455:1> < <array_max_1033@455:0>) && (0 < <array_max_1033@455:1>)) |- bot
        
         ((<array_max_1033@455:1> = 0) && (<<<array_max_1033@455:2>@458:1>@474:0> <= 1))
        |- P[<<<array_max_1033@455:2>@458:1>@474:0>](<array_max_1033@455:0>:int,
                                                     <array_max_1033@455:1>:int,
                                                     <<array_max_1033@455:2>@458:0>:int,
                                                     <<<array_max_1033@455:2>@458:1>@474:0>:int)
      lower bounds:
        P[<<<array_max_1033@455:2>@458:1>@474:0>](<array_max_1033@455:0>:int,<array_max_1033@455:1>:int,<<array_max_1033@455:2>@458:0>:int,<<<array_max_1033@455:2>@458:1>@474:0>:int) =
        ((<array_max_1033@455:1> = 0) && (<<<array_max_1033@455:2>@458:1>@474:0> <= 1))
      upper bounds:
        P[<<<array_max_1033@455:2>@458:1>@474:0>](var2184:int,var2185:int,var2186:int,var2187:int) =
        (((var2185 <> 1) || ((var2186 <> 1) || ((var2187 >= 1) || (1 >= var2184)))) &&
         (((var2186 >= 0) || ((var2186 >= var2184) || (var2186 <> var2185))) &&
          ((var2185 >= var2184) || ((0 >= var2185) || (var2185 <> var2186)))))
      begin GenHcSolver.classify_pids(1447272)[4]
        output:
          [<<<array_max_1033@455:2>@458:1>@474:0>]
      end GenHcSolver.classify_pids(1447272)[4] (0.000000 sec.)
      lb:((<array_max_1033@455:1> = 0) && (<<<array_max_1033@455:2>@458:1>@474:0> <= 1))
      nub:(not
             (((<array_max_1033@455:1> <> 1) ||
               ((<<array_max_1033@455:2>@458:0> <> 1) ||
                ((<<<array_max_1033@455:2>@458:1>@474:0> >= 1) || (1 >= <array_max_1033@455:0>)))) &&
              (((<<array_max_1033@455:2>@458:0> >= 0) ||
                ((<<array_max_1033@455:2>@458:0> >= <array_max_1033@455:0>) ||
                 (<<array_max_1033@455:2>@458:0> <> <array_max_1033@455:1>))) &&
               ((<array_max_1033@455:1> >= <array_max_1033@455:0>) ||
                ((0 >= <array_max_1033@455:1>) || (<array_max_1033@455:1> <> <<array_max_1033@455:2>@458:0>))))))
      begin ApronInterface.convex_hull_interpolate(1447275)[4]
        lb:((<array_max_1033@455:1> = 0) && (<<<array_max_1033@455:2>@458:1>@474:0> <= 1))
        nub:(not
               (((<array_max_1033@455:1> <> 1) ||
                 ((<<array_max_1033@455:2>@458:0> <> 1) ||
                  ((<<<array_max_1033@455:2>@458:1>@474:0> >= 1) || (1 >= <array_max_1033@455:0>)))) &&
                (((<<array_max_1033@455:2>@458:0> >= 0) ||
                  ((<<array_max_1033@455:2>@458:0> >= <array_max_1033@455:0>) ||
                   (<<array_max_1033@455:2>@458:0> <> <array_max_1033@455:1>))) &&
                 ((<array_max_1033@455:1> >= <array_max_1033@455:0>) ||
                  ((0 >= <array_max_1033@455:1>) || (<array_max_1033@455:1> <> <<array_max_1033@455:2>@458:0>))))))
        lb':((<array_max_1033@455:1> = 0) && (<<<array_max_1033@455:2>@458:1>@474:0> <= 1))
        nub':(not
                (((<array_max_1033@455:1> <> 1) ||
                  ((<<array_max_1033@455:2>@458:0> <> 1) ||
                   ((<<<array_max_1033@455:2>@458:1>@474:0> >= 1) || (1 >= <array_max_1033@455:0>)))) &&
                 (((<<array_max_1033@455:2>@458:0> >= 0) ||
                   ((<<array_max_1033@455:2>@458:0> >= <array_max_1033@455:0>) ||
                    (<<array_max_1033@455:2>@458:0> <> <array_max_1033@455:1>))) &&
                  ((<array_max_1033@455:1> >= <array_max_1033@455:0>) ||
                   ((0 >= <array_max_1033@455:1>) || (<array_max_1033@455:1> <> <<array_max_1033@455:2>@458:0>))))))
        begin InterpProver.interpolate(1447276)[5]
          begin InterpProver.interpolate_fresh(1447277)[6]
            begin InterpProver.interpolate_log(1447278)[7]
              input1: ((<array_max_1033@455:1> = 0) && (<<<array_max_1033@455:2>@458:1>@474:0> <= 1))
              input2: (not
                         (((<array_max_1033@455:1> <> 1) ||
                           ((<<array_max_1033@455:2>@458:0> <> 1) ||
                            ((<<<array_max_1033@455:2>@458:1>@474:0> >= 1) || (1 >= <array_max_1033@455:0>)))) &&
                          (((<<array_max_1033@455:2>@458:0> >= 0) ||
                            ((<<array_max_1033@455:2>@458:0> >= <array_max_1033@455:0>) ||
                             (<<array_max_1033@455:2>@458:0> <> <array_max_1033@455:1>))) &&
                           ((<array_max_1033@455:1> >= <array_max_1033@455:0>) ||
                            ((0 >= <array_max_1033@455:1>) ||
                             (<array_max_1033@455:1> <> <<array_max_1033@455:2>@458:0>))))))
              begin InterpProver.interpolate_check(1447279)[8]
                begin InterpProver.interpolate_simplify(1447280)[9]
                  begin InterpProver.interpolate_quick(1447527)[10]
                    begin CsisatInterface.interpolate_csisat_wrap(1447536)[11]
                      begin CsisatInterface.interpolate_csisat_post_process(1447537)[12]
                        begin CsisatInterface.interpolate_csisat_log(1447538)[13]
                          input1: (0 = v_sep_array_max_1033_sep_455_sep_1 & v_sep_array_max_1033_sep_455_sep_2_sep_458_sep_1_sep_474_sep_0 <= 1)
                          input2: ((1 = v_sep_array_max_1033_sep_455_sep_1 & 1 = v_sep_array_max_1033_sep_455_sep_2_sep_458_sep_0 & 2 <= v_sep_array_max_1033_sep_455_sep_0 & (1 + v_sep_array_max_1033_sep_455_sep_2_sep_458_sep_1_sep_474_sep_0) <= 1) | (v_sep_array_max_1033_sep_455_sep_1 = v_sep_array_max_1033_sep_455_sep_2_sep_458_sep_0 & 1 <= v_sep_array_max_1033_sep_455_sep_1 & (1 + v_sep_array_max_1033_sep_455_sep_1) <= v_sep_array_max_1033_sep_455_sep_0) | (v_sep_array_max_1033_sep_455_sep_1 = v_sep_array_max_1033_sep_455_sep_2_sep_458_sep_0 & (1 + v_sep_array_max_1033_sep_455_sep_2_sep_458_sep_0) <= 0 & (1 + v_sep_array_max_1033_sep_455_sep_2_sep_458_sep_0) <= v_sep_array_max_1033_sep_455_sep_0))
                          begin CsisatInterface.interpolate_csisat_raw(1447539)[14]
                            
                          end CsisatInterface.interpolate_csisat_raw(1447539)[14] (0.002000 sec.)
                          output: (v_sep_array_max_1033_sep_455_sep_1 <= 0 & -2*v_sep_array_max_1033_sep_455_sep_1 <= 0 & 2*v_sep_array_max_1033_sep_455_sep_1 <= 0)
                          
                        end CsisatInterface.interpolate_csisat_log(1447538)[13] (0.002000 sec.)
                        after simplification: (v_sep_array_max_1033_sep_455_sep_1 <= 0 & -2*v_sep_array_max_1033_sep_455_sep_1 <= 0 & 2*v_sep_array_max_1033_sep_455_sep_1 <= 0)
                        after dnf conversion: ((v_sep_array_max_1033_sep_455_sep_1 <= 0 & -2*v_sep_array_max_1033_sep_455_sep_1 <= 0 & 2*v_sep_array_max_1033_sep_455_sep_1 <= 0))
                        
                      end CsisatInterface.interpolate_csisat_post_process(1447537)[12] (0.002000 sec.)
                      
                    end CsisatInterface.interpolate_csisat_wrap(1447536)[11] (0.002000 sec.)
                    
                  end InterpProver.interpolate_quick(1447527)[10] (0.003999 sec.)
                  
                end InterpProver.interpolate_simplify(1447280)[9] (0.003999 sec.)
                
              end InterpProver.interpolate_check(1447279)[8] (0.004999 sec.)
              output: (<array_max_1033@455:1> = 0)
            end InterpProver.interpolate_log(1447278)[7] (0.004999 sec.)
            
          end InterpProver.interpolate_fresh(1447277)[6] (0.004999 sec.)
          
        end InterpProver.interpolate(1447276)[5] (0.004999 sec.)
        output:
          P[<<<array_max_1033@455:2>@458:1>@474:0>](<array_max_1033@455:0>:int,<array_max_1033@455:1>:int,<<array_max_1033@455:2>@458:0>:int,<<<array_max_1033@455:2>@458:1>@474:0>:int) =
          (<array_max_1033@455:1> = 0)
      end ApronInterface.convex_hull_interpolate(1447275)[4] (0.004999 sec.)
      begin HcSolver.check_validity(1447932)[4]
        input:
          P[<fail_1487@596:0>](<fail_1487@596:0>:bool)|- bot
          
          P[<check_1148@560:2>](<f_check_1482@593:2>:int,<f_check_1482@593:0>:int,<f_check_1482@593:1>:int),
          P[<<<check_1148@560:3>@563:1>@591:0>](<f_check_1482@593:2>:int,<f_check_1482@593:0>:int,<f_check_1482@593:1>:int,<f_check_1482@593:0>:int,<f_check_1482@593:5>:int),
          ((<f_check_1482@593:5> > <f_check_1482@593:1>) &&
           ((<f_check_1482@593:0> < <f_check_1482@593:2>) && <fail_1487@596:0>))
          |- P[<fail_1487@596:0>](<fail_1487@596:0>:bool)
          
          P[<<<check_1148@534:3>@537:1>@553:0>](<check_1148@560:0>:int,(
                                                -1 + <check_1148@560:1>):int,<check_1148@560:2>:int,(
                                                -1 + <check_1148@560:1>):int,var1927:int),
          P[<check_1148@534:2>](<check_1148@560:0>:int,(-1 + <check_1148@560:1>):int,<check_1148@560:2>:int),
          P[<<<check_1148@534:3>@569:1>@585:0>](<check_1148@560:0>:int,(
                                                -1 + <check_1148@560:1>):int,<check_1148@560:2>:int,<<check_1148@560:3>@563:0>:int,<<<check_1148@560:3>@563:1>@591:0>:int),
          P[<check_1148@560:2>](<check_1148@560:0>:int,<check_1148@560:1>:int,<check_1148@560:2>:int),
          ((var1927 <= <check_1148@560:2>) && (<check_1148@560:1> < (1 + <check_1148@560:0>)))
          |- P[<<<check_1148@560:3>@563:1>@591:0>](<check_1148@560:0>:int,
                                                   <check_1148@560:1>:int,
                                                   <check_1148@560:2>:int,
                                                   <<check_1148@560:3>@563:0>:int,
                                                   <<<check_1148@560:3>@563:1>@591:0>:int)
          
          P[<<array_max_1033@455:3>@530:0>](<check_1148@534:0>:int,0:int,<check_1148@534:2>:int),
          P[<<make_array_1030@571:2>@583:0>](<check_1148@534:0>:int,<<check_1148@534:3>@569:0>:int,<<<check_1148@534:3>@569:1>@585:0>:int),
          P[<check_1148@534:2>](<check_1148@534:0>:int,<check_1148@534:1>:int,<check_1148@534:2>:int),
          (<check_1148@534:1> = 0)
          |- P[<<<check_1148@534:3>@569:1>@585:0>](<check_1148@534:0>:int,
                                                   <check_1148@534:1>:int,
                                                   <check_1148@534:2>:int,
                                                   <<check_1148@534:3>@569:0>:int,
                                                   <<<check_1148@534:3>@569:1>@585:0>:int)
          
          P[<make_array_1030@571:1>](<make_array_1030@571:0>:int,<make_array_1030@571:1>:int),
          ((0 <= <make_array_1030@571:1>) &&
           ((<make_array_1030@571:1> < <make_array_1030@571:0>) &&
            (<<make_array_1030@571:2>@583:0> = <make_array_1030@571:1>)))
          |- P[<<make_array_1030@571:2>@583:0>](<make_array_1030@571:0>:int,
                                                <make_array_1030@571:1>:int,
                                                <<make_array_1030@571:2>@583:0>:int)
          
          P[<<array_max_1033@455:3>@530:0>](<make_array_1030@571:0>:int,0:int,<check_1148@534:2>:int),
          P[<<check_1148@534:3>@569:0>](<make_array_1030@571:0>:int,0:int,<check_1148@534:2>:int,<make_array_1030@571:1>:int)|- P[<make_array_1030@571:1>](
          <make_array_1030@571:0>:int,<make_array_1030@571:1>:int)
          
          P[<<<check_1148@534:3>@537:1>@553:0>](<check_1148@534:0>:int,<check_1148@534:1>:int,<check_1148@534:2>:int,<check_1148@534:1>:int,var1928:int),
          P[<check_1148@534:2>](<check_1148@534:0>:int,<check_1148@534:1>:int,<check_1148@534:2>:int),
          P[<<check_1148@560:3>@563:0>](<check_1148@534:0>:int,(1 + <check_1148@534:1>):int,<check_1148@534:2>:int,<<check_1148@534:3>@569:0>:int),
          ((var1928 <= <check_1148@534:2>) && (<check_1148@534:1> < <check_1148@534:0>))
          |- P[<<check_1148@534:3>@569:0>](<check_1148@534:0>:int,<check_1148@534:1>:int,
                                           <check_1148@534:2>:int,<<check_1148@534:3>@569:0>:int)
          
          P[<check_1148@560:2>](<check_1148@560:0>:int,<check_1148@560:1>:int,<check_1148@560:2>:int),
          ((<check_1148@560:1> < <check_1148@560:0>) && (<<check_1148@560:3>@563:0> = <check_1148@560:1>))
          |- P[<<check_1148@560:3>@563:0>](<check_1148@560:0>:int,<check_1148@560:1>:int,
                                           <check_1148@560:2>:int,<<check_1148@560:3>@563:0>:int)
          
          P[<check_1148@534:2>](<check_1148@560:0>:int,(-1 + <check_1148@560:1>):int,<check_1148@560:2>:int),
          P[<<<check_1148@534:3>@537:1>@553:0>](<check_1148@560:0>:int,(
                                                -1 + <check_1148@560:1>):int,<check_1148@560:2>:int,(
                                                -1 + <check_1148@560:1>):int,var1929:int),
          ((var1929 <= <check_1148@560:2>) && (<check_1148@560:1> < (1 + <check_1148@560:0>)))
          |- P[<check_1148@560:2>](<check_1148@560:0>:int,<check_1148@560:1>:int,
                                   <check_1148@560:2>:int)
          
          P[<<array_max_1033@455:3>@530:0>](<check_1148@534:0>:int,0:int,<check_1148@534:2>:int),
          P[<<make_array_1030@539:2>@551:0>](<check_1148@534:0>:int,<<check_1148@534:3>@537:0>:int,<<<check_1148@534:3>@537:1>@553:0>:int),
          P[<check_1148@534:2>](<check_1148@534:0>:int,<check_1148@534:1>:int,<check_1148@534:2>:int),
          (<check_1148@534:1> = 0)
          |- P[<<<check_1148@534:3>@537:1>@553:0>](<check_1148@534:0>:int,
                                                   <check_1148@534:1>:int,
                                                   <check_1148@534:2>:int,
                                                   <<check_1148@534:3>@537:0>:int,
                                                   <<<check_1148@534:3>@537:1>@553:0>:int)
          
          P[<make_array_1030@539:1>](<make_array_1030@539:0>:int,<make_array_1030@539:1>:int),
          ((0 <= <make_array_1030@539:1>) &&
           ((<make_array_1030@539:1> < <make_array_1030@539:0>) &&
            (<<make_array_1030@539:2>@551:0> = <make_array_1030@539:1>)))
          |- P[<<make_array_1030@539:2>@551:0>](<make_array_1030@539:0>:int,
                                                <make_array_1030@539:1>:int,
                                                <<make_array_1030@539:2>@551:0>:int)
          
          P[<<array_max_1033@455:3>@530:0>](<make_array_1030@539:0>:int,0:int,<check_1148@534:2>:int),
          P[<<check_1148@534:3>@537:0>](<make_array_1030@539:0>:int,0:int,<check_1148@534:2>:int,<make_array_1030@539:1>:int)|- P[<make_array_1030@539:1>](
          <make_array_1030@539:0>:int,<make_array_1030@539:1>:int)
          
          P[<check_1148@534:2>](<check_1148@534:0>:int,<check_1148@534:1>:int,<check_1148@534:2>:int),
          ((<check_1148@534:1> < <check_1148@534:0>) && (<<check_1148@534:3>@537:0> = <check_1148@534:1>))
          |- P[<<check_1148@534:3>@537:0>](<check_1148@534:0>:int,<check_1148@534:1>:int,
                                           <check_1148@534:2>:int,<<check_1148@534:3>@537:0>:int)
          
          P[<<array_max_1033@455:3>@530:0>](<check_1148@534:0>:int,0:int,<check_1148@534:2>:int),
          (<check_1148@534:1> = 0)
          |- P[<check_1148@534:2>](<check_1148@534:0>:int,<check_1148@534:1>:int,
                                   <check_1148@534:2>:int)
          
          P[<array_max_1033@455:1>](<array_max_1033@455:0>:int,<array_max_1033@455:1>:int),
          P[<<<array_max_1033@455:2>@458:1>@474:0>](<array_max_1033@455:0>:int,<array_max_1033@455:1>:int,<array_max_1033@455:1>:int,var1930:int),
          P[<<array_max_1033@478:3>@521:0>](<array_max_1033@455:0>:int,(
                                            1 + <array_max_1033@455:1>):int,<<array_max_1033@455:3>@530:0>:int),
          ((var1930 <= <<array_max_1033@455:3>@530:0>) && (<array_max_1033@455:1> < <array_max_1033@455:0>))
          |- P[<<array_max_1033@455:3>@530:0>](<array_max_1033@455:0>:int,
                                               <array_max_1033@455:1>:int,
                                               <<array_max_1033@455:3>@530:0>:int)
          
          P[<array_max_1033@478:1>](<array_max_1033@478:0>:int,<array_max_1033@478:1>:int),
          P[<<<array_max_1033@478:2>@481:1>@505:0>](<array_max_1033@478:0>:int,<array_max_1033@478:1>:int,<array_max_1033@478:1>:int,<<array_max_1033@478:3>@521:0>:int),
          P[<<array_max_1033@509:3>@512:0>](<array_max_1033@478:0>:int,(
                                            1 + <array_max_1033@478:1>):int,var1931:int),
          ((<<array_max_1033@478:3>@521:0> > var1931) && (<array_max_1033@478:1> < <array_max_1033@478:0>))
          |- P[<<array_max_1033@478:3>@521:0>](<array_max_1033@478:0>:int,
                                               <array_max_1033@478:1>:int,
                                               <<array_max_1033@478:3>@521:0>:int)
          
          P[<array_max_1033@509:1>](<array_max_1033@509:0>:int,<array_max_1033@509:1>:int),
          ((<<array_max_1033@509:3>@512:0> = 0) && (<array_max_1033@509:1> >= <array_max_1033@509:0>))
          |- P[<<array_max_1033@509:3>@512:0>](<array_max_1033@509:0>:int,
                                               <array_max_1033@509:1>:int,
                                               <<array_max_1033@509:3>@512:0>:int)
          
          P[<array_max_1033@478:1>](<array_max_1033@509:0>:int,(-1 + <array_max_1033@509:1>):int),
          P[<<<array_max_1033@478:2>@481:1>@505:0>](<array_max_1033@509:0>:int,(
                                                    -1 + <array_max_1033@509:1>):int,(
                                                    -1 + <array_max_1033@509:1>):int,<f_array_max_1480@507:4>:int),
          (<array_max_1033@509:1> < (1 + <array_max_1033@509:0>))
          |- P[<array_max_1033@509:1>](<array_max_1033@509:0>:int,<array_max_1033@509:1>:int)
          
          P[<<<array_max_1033@455:2>@458:1>@474:0>](<array_max_1033@478:0>:int,(
                                                    -1 + <array_max_1033@478:1>):int,(
                                                    -1 + <array_max_1033@478:1>):int,<f_array_max_1480@476:4>:int),
          P[<array_max_1033@455:1>](<array_max_1033@478:0>:int,(-1 + <array_max_1033@478:1>):int),
          P[<<<array_max_1033@455:2>@485:1>@501:0>](<array_max_1033@478:0>:int,(
                                                    -1 + <array_max_1033@478:1>):int,<<array_max_1033@478:2>@481:0>:int,<<<array_max_1033@478:2>@481:1>@505:0>:int),
          P[<array_max_1033@478:1>](<array_max_1033@478:0>:int,<array_max_1033@478:1>:int),
          (<array_max_1033@478:1> < (1 + <array_max_1033@478:0>))
          |- P[<<<array_max_1033@478:2>@481:1>@505:0>](<array_max_1033@478:0>:int,
                                                       <array_max_1033@478:1>:int,
                                                       <<array_max_1033@478:2>@481:0>:int,
                                                       <<<array_max_1033@478:2>@481:1>@505:0>:int)
          
          P[<<make_array_1030@487:2>@499:0>](<array_max_1033@455:0>:int,<<array_max_1033@455:2>@485:0>:int,<<<array_max_1033@455:2>@485:1>@501:0>:int),
          P[<array_max_1033@455:1>](<array_max_1033@455:0>:int,<array_max_1033@455:1>:int),
          (<array_max_1033@455:1> = 0)
          |- P[<<<array_max_1033@455:2>@485:1>@501:0>](<array_max_1033@455:0>:int,
                                                       <array_max_1033@455:1>:int,
                                                       <<array_max_1033@455:2>@485:0>:int,
                                                       <<<array_max_1033@455:2>@485:1>@501:0>:int)
          
          P[<make_array_1030@487:1>](<make_array_1030@487:0>:int,<make_array_1030@487:1>:int),
          ((0 <= <make_array_1030@487:1>) &&
           ((<make_array_1030@487:1> < <make_array_1030@487:0>) &&
            (<<make_array_1030@487:2>@499:0> = <make_array_1030@487:1>)))
          |- P[<<make_array_1030@487:2>@499:0>](<make_array_1030@487:0>:int,
                                                <make_array_1030@487:1>:int,
                                                <<make_array_1030@487:2>@499:0>:int)
          
          P[<<array_max_1033@455:2>@485:0>](<make_array_1030@487:0>:int,0:int,<make_array_1030@487:1>:int)|- P[<make_array_1030@487:1>](
          <make_array_1030@487:0>:int,<make_array_1030@487:1>:int)
          
          P[<array_max_1033@455:1>](<array_max_1033@455:0>:int,<array_max_1033@455:1>:int),
          P[<<<array_max_1033@455:2>@458:1>@474:0>](<array_max_1033@455:0>:int,<array_max_1033@455:1>:int,<array_max_1033@455:1>:int,var1932:int),
          P[<<array_max_1033@478:2>@481:0>](<array_max_1033@455:0>:int,(
                                            1 + <array_max_1033@455:1>):int,<<array_max_1033@455:2>@485:0>:int),
          (<array_max_1033@455:1> < <array_max_1033@455:0>)
          |- P[<<array_max_1033@455:2>@485:0>](<array_max_1033@455:0>:int,
                                               <array_max_1033@455:1>:int,
                                               <<array_max_1033@455:2>@485:0>:int)
          
          P[<array_max_1033@478:1>](<array_max_1033@478:0>:int,<array_max_1033@478:1>:int),
          ((<array_max_1033@478:1> < <array_max_1033@478:0>) &&
           (<<array_max_1033@478:2>@481:0> = <array_max_1033@478:1>))
          |- P[<<array_max_1033@478:2>@481:0>](<array_max_1033@478:0>:int,
                                               <array_max_1033@478:1>:int,
                                               <<array_max_1033@478:2>@481:0>:int)
          
          P[<array_max_1033@455:1>](<array_max_1033@478:0>:int,(-1 + <array_max_1033@478:1>):int),
          P[<<<array_max_1033@455:2>@458:1>@474:0>](<array_max_1033@478:0>:int,(
                                                    -1 + <array_max_1033@478:1>):int,(
                                                    -1 + <array_max_1033@478:1>):int,<f_array_max_1480@476:4>:int),
          (<array_max_1033@478:1> < (1 + <array_max_1033@478:0>))
          |- P[<array_max_1033@478:1>](<array_max_1033@478:0>:int,<array_max_1033@478:1>:int)
          
          P[<<make_array_1030@460:2>@472:0>](<array_max_1033@455:0>:int,<<array_max_1033@455:2>@458:0>:int,<<<array_max_1033@455:2>@458:1>@474:0>:int),
          P[<array_max_1033@455:1>](<array_max_1033@455:0>:int,<array_max_1033@455:1>:int),
          (<array_max_1033@455:1> = 0)
          |- P[<<<array_max_1033@455:2>@458:1>@474:0>](<array_max_1033@455:0>:int,
                                                       <array_max_1033@455:1>:int,
                                                       <<array_max_1033@455:2>@458:0>:int,
                                                       <<<array_max_1033@455:2>@458:1>@474:0>:int)
          
          P[<make_array_1030@460:1>](<make_array_1030@460:0>:int,<make_array_1030@460:1>:int),
          ((0 <= <make_array_1030@460:1>) &&
           ((<make_array_1030@460:1> < <make_array_1030@460:0>) &&
            (<<make_array_1030@460:2>@472:0> = <make_array_1030@460:1>)))
          |- P[<<make_array_1030@460:2>@472:0>](<make_array_1030@460:0>:int,
                                                <make_array_1030@460:1>:int,
                                                <<make_array_1030@460:2>@472:0>:int)
          
          P[<<array_max_1033@455:2>@458:0>](<make_array_1030@460:0>:int,0:int,<make_array_1030@460:1>:int)|- P[<make_array_1030@460:1>](
          <make_array_1030@460:0>:int,<make_array_1030@460:1>:int)
          
          P[<array_max_1033@455:1>](<array_max_1033@455:0>:int,<array_max_1033@455:1>:int),
          ((<array_max_1033@455:1> < <array_max_1033@455:0>) &&
           (<<array_max_1033@455:2>@458:0> = <array_max_1033@455:1>))
          |- P[<<array_max_1033@455:2>@458:0>](<array_max_1033@455:0>:int,
                                               <array_max_1033@455:1>:int,
                                               <<array_max_1033@455:2>@458:0>:int)
          
           (<array_max_1033@455:1> = 0)
          |- P[<array_max_1033@455:1>](<array_max_1033@455:0>:int,<array_max_1033@455:1>:int)
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        
      end HcSolver.check_validity(1447932)[4] (0.023996 sec.)
      solution:
        P[<fail_1487@596:0>](var2172:bool) = false
        P[<<<check_1148@560:3>@563:1>@591:0>](<check_1148@534:0>:int,<check_1148@534:1>:int,<check_1148@534:2>:int,<<check_1148@534:3>@537:0>:int,<<<check_1148@534:3>@537:1>@553:0>:int) =
        (<<<check_1148@534:3>@537:1>@553:0> <= 1)
        P[<<<check_1148@534:3>@569:1>@585:0>](<check_1148@534:0>:int,<check_1148@534:1>:int,<check_1148@534:2>:int,<<check_1148@534:3>@537:0>:int,<<<check_1148@534:3>@537:1>@553:0>:int) =
        (<<<check_1148@534:3>@537:1>@553:0> <= 1)
        P[<<make_array_1030@571:2>@583:0>](<make_array_1030@460:0>:int,<make_array_1030@460:1>:int,<<make_array_1030@460:2>@472:0>:int) =
        (<<make_array_1030@460:2>@472:0> <= 1)
        P[<make_array_1030@571:1>](<make_array_1030@460:0>:int,<make_array_1030@460:1>:int) =
        (<make_array_1030@460:1> <= 1)
        P[<<check_1148@534:3>@569:0>](<check_1148@534:0>:int,<check_1148@534:1>:int,<check_1148@534:2>:int,<<check_1148@534:3>@537:0>:int) =
        (<<check_1148@534:3>@537:0> <= 1)
        P[<<check_1148@560:3>@563:0>](<check_1148@534:0>:int,<check_1148@534:1>:int,<check_1148@534:2>:int,<<check_1148@534:3>@537:0>:int) =
        (<<check_1148@534:3>@537:0> <= 1)
        P[<check_1148@560:2>](<check_1148@560:0>:int,<check_1148@560:1>:int,<check_1148@560:2>:int) =
        ((<check_1148@560:1> <= 1) && (1 <= <check_1148@560:2>))
        P[<<<check_1148@534:3>@537:1>@553:0>](<check_1148@534:0>:int,<check_1148@534:1>:int,<check_1148@534:2>:int,<<check_1148@534:3>@537:0>:int,<<<check_1148@534:3>@537:1>@553:0>:int) =
        (<<<check_1148@534:3>@537:1>@553:0> <= 1)
        P[<<make_array_1030@539:2>@551:0>](<make_array_1030@460:0>:int,<make_array_1030@460:1>:int,<<make_array_1030@460:2>@472:0>:int) =
        (<<make_array_1030@460:2>@472:0> <= 1)
        P[<make_array_1030@539:1>](<make_array_1030@460:0>:int,<make_array_1030@460:1>:int) =
        (<make_array_1030@460:1> <= 1)
        P[<<check_1148@534:3>@537:0>](<check_1148@534:0>:int,<check_1148@534:1>:int,<check_1148@534:2>:int,<<check_1148@534:3>@537:0>:int) =
        (<<check_1148@534:3>@537:0> <= 1)
        P[<check_1148@534:2>](<check_1148@534:0>:int,<check_1148@534:1>:int,<check_1148@534:2>:int) =
        ((<check_1148@534:1> <= 0) && (1 <= <check_1148@534:2>))
        P[<<array_max_1033@455:3>@530:0>](<array_max_1033@509:0>:int,<array_max_1033@509:1>:int,<<array_max_1033@509:3>@512:0>:int) =
        ((1 <= <<array_max_1033@509:3>@512:0>) ||
         ((0 <= <<array_max_1033@509:3>@512:0>) && (<array_max_1033@509:1> = 2)))
        P[<<array_max_1033@478:3>@521:0>](<array_max_1033@509:0>:int,<array_max_1033@509:1>:int,<<array_max_1033@509:3>@512:0>:int) =
        ((1 <= <<array_max_1033@509:3>@512:0>) ||
         ((0 <= <<array_max_1033@509:3>@512:0>) && (<array_max_1033@509:1> = 2)))
        P[<<array_max_1033@509:3>@512:0>](<array_max_1033@509:0>:int,<array_max_1033@509:1>:int,<<array_max_1033@509:3>@512:0>:int) =
        ((1 <= <<array_max_1033@509:3>@512:0>) ||
         ((0 <= <<array_max_1033@509:3>@512:0>) && (<array_max_1033@509:1> = 2)))
        P[<array_max_1033@509:1>](<array_max_1033@509:0>:int,<array_max_1033@509:1>:int) = (2 = <array_max_1033@509:1>)
        P[<<<array_max_1033@478:2>@481:1>@505:0>](<array_max_1033@478:0>:int,<array_max_1033@478:1>:int,<<array_max_1033@478:2>@481:0>:int,<<<array_max_1033@478:2>@481:1>@505:0>:int) =
        (<array_max_1033@478:1> = 1)
        P[<<<array_max_1033@455:2>@485:1>@501:0>](<array_max_1033@455:0>:int,<array_max_1033@455:1>:int,<<array_max_1033@455:2>@458:0>:int,<<<array_max_1033@455:2>@458:1>@474:0>:int) =
        (<array_max_1033@455:1> <= 0)
        P[<<make_array_1030@487:2>@499:0>](<make_array_1030@460:0>:int,<make_array_1030@460:1>:int,<<make_array_1030@460:2>@472:0>:int) =
        (<<make_array_1030@460:2>@472:0> <= 1)
        P[<make_array_1030@487:1>](<make_array_1030@460:0>:int,<make_array_1030@460:1>:int) =
        (<make_array_1030@460:1> <= 1)
        P[<<array_max_1033@455:2>@485:0>](<array_max_1033@455:0>:int,<array_max_1033@455:1>:int,<<array_max_1033@455:2>@458:0>:int) =
        ((<<array_max_1033@455:2>@458:0> <= 1) || (<<array_max_1033@455:2>@458:0> <= <array_max_1033@455:1>))
        P[<<array_max_1033@478:2>@481:0>](<array_max_1033@455:0>:int,<array_max_1033@455:1>:int,<<array_max_1033@455:2>@458:0>:int) =
        ((<<array_max_1033@455:2>@458:0> <= 1) || (<<array_max_1033@455:2>@458:0> <= <array_max_1033@455:1>))
        P[<array_max_1033@478:1>](<array_max_1033@455:0>:int,<array_max_1033@455:1>:int) = true
        P[<<<array_max_1033@455:2>@458:1>@474:0>](<array_max_1033@455:0>:int,<array_max_1033@455:1>:int,<<array_max_1033@455:2>@458:0>:int,<<<array_max_1033@455:2>@458:1>@474:0>:int) =
        (<array_max_1033@455:1> = 0)
        P[<<make_array_1030@460:2>@472:0>](<make_array_1030@460:0>:int,<make_array_1030@460:1>:int,<<make_array_1030@460:2>@472:0>:int) =
        (<<make_array_1030@460:2>@472:0> <= 1)
        P[<make_array_1030@460:1>](<make_array_1030@460:0>:int,<make_array_1030@460:1>:int) =
        (<make_array_1030@460:1> <= 1)
        P[<<array_max_1033@455:2>@458:0>](<array_max_1033@455:0>:int,<array_max_1033@455:1>:int,<<array_max_1033@455:2>@458:0>:int) =
        ((<<array_max_1033@455:2>@458:0> <= 1) || (<<array_max_1033@455:2>@458:0> <= <array_max_1033@455:1>))
        P[<array_max_1033@455:1>](<array_max_1033@455:0>:int,<array_max_1033@455:1>:int) = true
    end GenHcSolver.solve(984451)[3] (2.095681 sec.)
    begin GenHcSolver.solve(1455638)[3]
      Horn clauses:
        P[<fail_1487@596:0>](<fail_1487@596:0>:bool)|- bot
        
        P[<check_1148@560:2>](<f_check_1482@593:2>:int,<f_check_1482@593:0>:int,<f_check_1482@593:1>:int),
        P[<<<check_1148@560:3>@563:1>@591:0>](<f_check_1482@593:2>:int,<f_check_1482@593:0>:int,<f_check_1482@593:1>:int,<f_check_1482@593:0>:int,<f_check_1482@593:5>:int),
        ((<f_check_1482@593:5> > <f_check_1482@593:1>) &&
         ((<f_check_1482@593:0> < <f_check_1482@593:2>) && <fail_1487@596:0>))
        |- P[<fail_1487@596:0>](<fail_1487@596:0>:bool)
        
        P[<<<check_1148@534:3>@537:1>@553:0>](<check_1148@560:0>:int,(
                                              -1 + <check_1148@560:1>):int,<check_1148@560:2>:int,(
                                              -1 + <check_1148@560:1>):int,var1927:int),
        P[<check_1148@534:2>](<check_1148@560:0>:int,(-1 + <check_1148@560:1>):int,<check_1148@560:2>:int),
        P[<<<check_1148@534:3>@569:1>@585:0>](<check_1148@560:0>:int,(
                                              -1 + <check_1148@560:1>):int,<check_1148@560:2>:int,<<check_1148@560:3>@563:0>:int,<<<check_1148@560:3>@563:1>@591:0>:int),
        P[<check_1148@560:2>](<check_1148@560:0>:int,<check_1148@560:1>:int,<check_1148@560:2>:int),
        ((var1927 <= <check_1148@560:2>) && (<check_1148@560:1> < (1 + <check_1148@560:0>)))
        |- P[<<<check_1148@560:3>@563:1>@591:0>](<check_1148@560:0>:int,
                                                 <check_1148@560:1>:int,
                                                 <check_1148@560:2>:int,
                                                 <<check_1148@560:3>@563:0>:int,
                                                 <<<check_1148@560:3>@563:1>@591:0>:int)
        
        P[<<array_max_1033@455:3>@530:0>](<check_1148@534:0>:int,0:int,<check_1148@534:2>:int),
        P[<<make_array_1030@571:2>@583:0>](<check_1148@534:0>:int,<<check_1148@534:3>@569:0>:int,<<<check_1148@534:3>@569:1>@585:0>:int),
        P[<check_1148@534:2>](<check_1148@534:0>:int,<check_1148@534:1>:int,<check_1148@534:2>:int),
        (<check_1148@534:1> = 0)
        |- P[<<<check_1148@534:3>@569:1>@585:0>](<check_1148@534:0>:int,
                                                 <check_1148@534:1>:int,
                                                 <check_1148@534:2>:int,
                                                 <<check_1148@534:3>@569:0>:int,
                                                 <<<check_1148@534:3>@569:1>@585:0>:int)
        
        P[<make_array_1030@571:1>](<make_array_1030@571:0>:int,<make_array_1030@571:1>:int),
        ((0 <= <make_array_1030@571:1>) &&
         ((<make_array_1030@571:1> < <make_array_1030@571:0>) &&
          (<<make_array_1030@571:2>@583:0> = <make_array_1030@571:1>)))
        |- P[<<make_array_1030@571:2>@583:0>](<make_array_1030@571:0>:int,
                                              <make_array_1030@571:1>:int,
                                              <<make_array_1030@571:2>@583:0>:int)
        
        P[<<array_max_1033@455:3>@530:0>](<make_array_1030@571:0>:int,0:int,<check_1148@534:2>:int),
        P[<<check_1148@534:3>@569:0>](<make_array_1030@571:0>:int,0:int,<check_1148@534:2>:int,<make_array_1030@571:1>:int)|- P[<make_array_1030@571:1>](
        <make_array_1030@571:0>:int,<make_array_1030@571:1>:int)
        
        P[<<<check_1148@534:3>@537:1>@553:0>](<check_1148@534:0>:int,<check_1148@534:1>:int,<check_1148@534:2>:int,<check_1148@534:1>:int,var1928:int),
        P[<check_1148@534:2>](<check_1148@534:0>:int,<check_1148@534:1>:int,<check_1148@534:2>:int),
        P[<<check_1148@560:3>@563:0>](<check_1148@534:0>:int,(1 + <check_1148@534:1>):int,<check_1148@534:2>:int,<<check_1148@534:3>@569:0>:int),
        ((var1928 <= <check_1148@534:2>) && (<check_1148@534:1> < <check_1148@534:0>))
        |- P[<<check_1148@534:3>@569:0>](<check_1148@534:0>:int,<check_1148@534:1>:int,
                                         <check_1148@534:2>:int,<<check_1148@534:3>@569:0>:int)
        
        P[<check_1148@560:2>](<check_1148@560:0>:int,<check_1148@560:1>:int,<check_1148@560:2>:int),
        ((<check_1148@560:1> < <check_1148@560:0>) && (<<check_1148@560:3>@563:0> = <check_1148@560:1>))
        |- P[<<check_1148@560:3>@563:0>](<check_1148@560:0>:int,<check_1148@560:1>:int,
                                         <check_1148@560:2>:int,<<check_1148@560:3>@563:0>:int)
        
        P[<check_1148@534:2>](<check_1148@560:0>:int,(-1 + <check_1148@560:1>):int,<check_1148@560:2>:int),
        P[<<<check_1148@534:3>@537:1>@553:0>](<check_1148@560:0>:int,(
                                              -1 + <check_1148@560:1>):int,<check_1148@560:2>:int,(
                                              -1 + <check_1148@560:1>):int,var1929:int),
        ((var1929 <= <check_1148@560:2>) && (<check_1148@560:1> < (1 + <check_1148@560:0>)))
        |- P[<check_1148@560:2>](<check_1148@560:0>:int,<check_1148@560:1>:int,
                                 <check_1148@560:2>:int)
        
        P[<<array_max_1033@455:3>@530:0>](<check_1148@534:0>:int,0:int,<check_1148@534:2>:int),
        P[<<make_array_1030@539:2>@551:0>](<check_1148@534:0>:int,<<check_1148@534:3>@537:0>:int,<<<check_1148@534:3>@537:1>@553:0>:int),
        P[<check_1148@534:2>](<check_1148@534:0>:int,<check_1148@534:1>:int,<check_1148@534:2>:int),
        (<check_1148@534:1> = 0)
        |- P[<<<check_1148@534:3>@537:1>@553:0>](<check_1148@534:0>:int,
                                                 <check_1148@534:1>:int,
                                                 <check_1148@534:2>:int,
                                                 <<check_1148@534:3>@537:0>:int,
                                                 <<<check_1148@534:3>@537:1>@553:0>:int)
        
        P[<make_array_1030@539:1>](<make_array_1030@539:0>:int,<make_array_1030@539:1>:int),
        ((0 <= <make_array_1030@539:1>) &&
         ((<make_array_1030@539:1> < <make_array_1030@539:0>) &&
          (<<make_array_1030@539:2>@551:0> = <make_array_1030@539:1>)))
        |- P[<<make_array_1030@539:2>@551:0>](<make_array_1030@539:0>:int,
                                              <make_array_1030@539:1>:int,
                                              <<make_array_1030@539:2>@551:0>:int)
        
        P[<<array_max_1033@455:3>@530:0>](<make_array_1030@539:0>:int,0:int,<check_1148@534:2>:int),
        P[<<check_1148@534:3>@537:0>](<make_array_1030@539:0>:int,0:int,<check_1148@534:2>:int,<make_array_1030@539:1>:int)|- P[<make_array_1030@539:1>](
        <make_array_1030@539:0>:int,<make_array_1030@539:1>:int)
        
        P[<check_1148@534:2>](<check_1148@534:0>:int,<check_1148@534:1>:int,<check_1148@534:2>:int),
        ((<check_1148@534:1> < <check_1148@534:0>) && (<<check_1148@534:3>@537:0> = <check_1148@534:1>))
        |- P[<<check_1148@534:3>@537:0>](<check_1148@534:0>:int,<check_1148@534:1>:int,
                                         <check_1148@534:2>:int,<<check_1148@534:3>@537:0>:int)
        
        P[<<array_max_1033@455:3>@530:0>](<check_1148@534:0>:int,0:int,<check_1148@534:2>:int),
        (<check_1148@534:1> = 0)
        |- P[<check_1148@534:2>](<check_1148@534:0>:int,<check_1148@534:1>:int,
                                 <check_1148@534:2>:int)
        
        P[<array_max_1033@455:1>](<array_max_1033@455:0>:int,<array_max_1033@455:1>:int),
        P[<<<array_max_1033@455:2>@458:1>@474:0>](<array_max_1033@455:0>:int,<array_max_1033@455:1>:int,<array_max_1033@455:1>:int,var1930:int),
        P[<<array_max_1033@478:3>@521:0>](<array_max_1033@455:0>:int,(
                                          1 + <array_max_1033@455:1>):int,<<array_max_1033@455:3>@530:0>:int),
        ((var1930 <= <<array_max_1033@455:3>@530:0>) && (<array_max_1033@455:1> < <array_max_1033@455:0>))
        |- P[<<array_max_1033@455:3>@530:0>](<array_max_1033@455:0>:int,
                                             <array_max_1033@455:1>:int,
                                             <<array_max_1033@455:3>@530:0>:int)
        
        P[<array_max_1033@478:1>](<array_max_1033@478:0>:int,<array_max_1033@478:1>:int),
        P[<<<array_max_1033@478:2>@481:1>@505:0>](<array_max_1033@478:0>:int,<array_max_1033@478:1>:int,<array_max_1033@478:1>:int,<<array_max_1033@478:3>@521:0>:int),
        P[<<array_max_1033@509:3>@512:0>](<array_max_1033@478:0>:int,(
                                          1 + <array_max_1033@478:1>):int,var1931:int),
        ((<<array_max_1033@478:3>@521:0> > var1931) && (<array_max_1033@478:1> < <array_max_1033@478:0>))
        |- P[<<array_max_1033@478:3>@521:0>](<array_max_1033@478:0>:int,
                                             <array_max_1033@478:1>:int,
                                             <<array_max_1033@478:3>@521:0>:int)
        
        P[<array_max_1033@509:1>](<array_max_1033@509:0>:int,<array_max_1033@509:1>:int),
        ((<<array_max_1033@509:3>@512:0> = 0) && (<array_max_1033@509:1> >= <array_max_1033@509:0>))
        |- P[<<array_max_1033@509:3>@512:0>](<array_max_1033@509:0>:int,
                                             <array_max_1033@509:1>:int,
                                             <<array_max_1033@509:3>@512:0>:int)
        
        P[<array_max_1033@478:1>](<array_max_1033@509:0>:int,(-1 + <array_max_1033@509:1>):int),
        P[<<<array_max_1033@478:2>@481:1>@505:0>](<array_max_1033@509:0>:int,(
                                                  -1 + <array_max_1033@509:1>):int,(
                                                  -1 + <array_max_1033@509:1>):int,<f_array_max_1480@507:4>:int),
        (<array_max_1033@509:1> < (1 + <array_max_1033@509:0>))
        |- P[<array_max_1033@509:1>](<array_max_1033@509:0>:int,<array_max_1033@509:1>:int)
        
        P[<<<array_max_1033@455:2>@458:1>@474:0>](<array_max_1033@478:0>:int,(
                                                  -1 + <array_max_1033@478:1>):int,(
                                                  -1 + <array_max_1033@478:1>):int,<f_array_max_1480@476:4>:int),
        P[<array_max_1033@455:1>](<array_max_1033@478:0>:int,(-1 + <array_max_1033@478:1>):int),
        P[<<<array_max_1033@455:2>@485:1>@501:0>](<array_max_1033@478:0>:int,(
                                                  -1 + <array_max_1033@478:1>):int,<<array_max_1033@478:2>@481:0>:int,<<<array_max_1033@478:2>@481:1>@505:0>:int),
        P[<array_max_1033@478:1>](<array_max_1033@478:0>:int,<array_max_1033@478:1>:int),
        (<array_max_1033@478:1> < (1 + <array_max_1033@478:0>))
        |- P[<<<array_max_1033@478:2>@481:1>@505:0>](<array_max_1033@478:0>:int,
                                                     <array_max_1033@478:1>:int,
                                                     <<array_max_1033@478:2>@481:0>:int,
                                                     <<<array_max_1033@478:2>@481:1>@505:0>:int)
        
        P[<<make_array_1030@487:2>@499:0>](<array_max_1033@455:0>:int,<<array_max_1033@455:2>@485:0>:int,<<<array_max_1033@455:2>@485:1>@501:0>:int),
        P[<array_max_1033@455:1>](<array_max_1033@455:0>:int,<array_max_1033@455:1>:int), (
        <array_max_1033@455:1> = 0)
        |- P[<<<array_max_1033@455:2>@485:1>@501:0>](<array_max_1033@455:0>:int,
                                                     <array_max_1033@455:1>:int,
                                                     <<array_max_1033@455:2>@485:0>:int,
                                                     <<<array_max_1033@455:2>@485:1>@501:0>:int)
        
        P[<make_array_1030@487:1>](<make_array_1030@487:0>:int,<make_array_1030@487:1>:int),
        ((0 <= <make_array_1030@487:1>) &&
         ((<make_array_1030@487:1> < <make_array_1030@487:0>) &&
          (<<make_array_1030@487:2>@499:0> = <make_array_1030@487:1>)))
        |- P[<<make_array_1030@487:2>@499:0>](<make_array_1030@487:0>:int,
                                              <make_array_1030@487:1>:int,
                                              <<make_array_1030@487:2>@499:0>:int)
        
        P[<<array_max_1033@455:2>@485:0>](<make_array_1030@487:0>:int,0:int,<make_array_1030@487:1>:int)|- P[<make_array_1030@487:1>](
        <make_array_1030@487:0>:int,<make_array_1030@487:1>:int)
        
        P[<array_max_1033@455:1>](<array_max_1033@455:0>:int,<array_max_1033@455:1>:int),
        P[<<<array_max_1033@455:2>@458:1>@474:0>](<array_max_1033@455:0>:int,<array_max_1033@455:1>:int,<array_max_1033@455:1>:int,var1932:int),
        P[<<array_max_1033@478:2>@481:0>](<array_max_1033@455:0>:int,(
                                          1 + <array_max_1033@455:1>):int,<<array_max_1033@455:2>@485:0>:int),
        (<array_max_1033@455:1> < <array_max_1033@455:0>)
        |- P[<<array_max_1033@455:2>@485:0>](<array_max_1033@455:0>:int,
                                             <array_max_1033@455:1>:int,
                                             <<array_max_1033@455:2>@485:0>:int)
        
        P[<array_max_1033@478:1>](<array_max_1033@478:0>:int,<array_max_1033@478:1>:int),
        ((<array_max_1033@478:1> < <array_max_1033@478:0>) && (<<array_max_1033@478:2>@481:0> = <array_max_1033@478:1>))
        |- P[<<array_max_1033@478:2>@481:0>](<array_max_1033@478:0>:int,
                                             <array_max_1033@478:1>:int,
                                             <<array_max_1033@478:2>@481:0>:int)
        
        P[<array_max_1033@455:1>](<array_max_1033@478:0>:int,(-1 + <array_max_1033@478:1>):int),
        P[<<<array_max_1033@455:2>@458:1>@474:0>](<array_max_1033@478:0>:int,(
                                                  -1 + <array_max_1033@478:1>):int,(
                                                  -1 + <array_max_1033@478:1>):int,<f_array_max_1480@476:4>:int),
        (<array_max_1033@478:1> < (1 + <array_max_1033@478:0>))
        |- P[<array_max_1033@478:1>](<array_max_1033@478:0>:int,<array_max_1033@478:1>:int)
        
        P[<<make_array_1030@460:2>@472:0>](<array_max_1033@455:0>:int,<<array_max_1033@455:2>@458:0>:int,<<<array_max_1033@455:2>@458:1>@474:0>:int),
        P[<array_max_1033@455:1>](<array_max_1033@455:0>:int,<array_max_1033@455:1>:int), (
        <array_max_1033@455:1> = 0)
        |- P[<<<array_max_1033@455:2>@458:1>@474:0>](<array_max_1033@455:0>:int,
                                                     <array_max_1033@455:1>:int,
                                                     <<array_max_1033@455:2>@458:0>:int,
                                                     <<<array_max_1033@455:2>@458:1>@474:0>:int)
        
        P[<make_array_1030@460:1>](<make_array_1030@460:0>:int,<make_array_1030@460:1>:int),
        ((0 <= <make_array_1030@460:1>) &&
         ((<make_array_1030@460:1> < <make_array_1030@460:0>) &&
          (<<make_array_1030@460:2>@472:0> = <make_array_1030@460:1>)))
        |- P[<<make_array_1030@460:2>@472:0>](<make_array_1030@460:0>:int,
                                              <make_array_1030@460:1>:int,
                                              <<make_array_1030@460:2>@472:0>:int)
        
        P[<<array_max_1033@455:2>@458:0>](<make_array_1030@460:0>:int,0:int,<make_array_1030@460:1>:int)|- P[<make_array_1030@460:1>](
        <make_array_1030@460:0>:int,<make_array_1030@460:1>:int)
        
        P[<array_max_1033@455:1>](<array_max_1033@455:0>:int,<array_max_1033@455:1>:int),
        ((<array_max_1033@455:1> < <array_max_1033@455:0>) && (<<array_max_1033@455:2>@458:0> = <array_max_1033@455:1>))
        |- P[<<array_max_1033@455:2>@458:0>](<array_max_1033@455:0>:int,
                                             <array_max_1033@455:1>:int,
                                             <<array_max_1033@455:2>@458:0>:int)
        
         (<array_max_1033@455:1> = 0)
        |- P[<array_max_1033@455:1>](<array_max_1033@455:0>:int,<array_max_1033@455:1>:int)
      lower bounds:
        P[<array_max_1033@455:1>](<array_max_1033@455:0>:int,<array_max_1033@455:1>:int) = (<array_max_1033@455:1> = 0)
        P[<<array_max_1033@455:2>@458:0>](<array_max_1033@455:0>:int,<array_max_1033@455:1>:int,<<array_max_1033@455:2>@458:0>:int) =
        ((<array_max_1033@455:1> = 0) &&
         ((<array_max_1033@455:1> < <array_max_1033@455:0>) &&
          (<<array_max_1033@455:2>@458:0> = <array_max_1033@455:1>)))
        P[<make_array_1030@460:1>](<make_array_1030@460:0>:int,<make_array_1030@460:1>:int) =
        ((<make_array_1030@460:1> = 0) && (0 < <make_array_1030@460:0>))
        P[<<make_array_1030@460:2>@472:0>](<make_array_1030@460:0>:int,<make_array_1030@460:1>:int,<<make_array_1030@460:2>@472:0>:int) =
        ((<make_array_1030@460:1> = 0) &&
         ((<make_array_1030@460:1> < <make_array_1030@460:0>) &&
          ((0 < <make_array_1030@460:0>) && (<<make_array_1030@460:2>@472:0> = <make_array_1030@460:1>))))
        P[<<<array_max_1033@455:2>@458:1>@474:0>](<array_max_1033@455:0>:int,<array_max_1033@455:1>:int,<<array_max_1033@455:2>@458:0>:int,<<<array_max_1033@455:2>@458:1>@474:0>:int) =
        ((<<array_max_1033@455:2>@458:0> = 0) &&
         ((<array_max_1033@455:1> = 0) &&
          ((<<array_max_1033@455:2>@458:0> < <array_max_1033@455:0>) &&
           ((0 < <array_max_1033@455:0>) && (<<<array_max_1033@455:2>@458:1>@474:0> = <<array_max_1033@455:2>@458:0>)))))
        P[<array_max_1033@478:1>](<array_max_1033@478:0>:int,<array_max_1033@478:1>:int) =
        ((<array_max_1033@478:1> = 1) &&
         ((0 < <array_max_1033@478:0>) && (<array_max_1033@478:1> < (1 + <array_max_1033@478:0>))))
        P[<<array_max_1033@478:2>@481:0>](<array_max_1033@478:0>:int,<array_max_1033@478:1>:int,<<array_max_1033@478:2>@481:0>:int) =
        ((<array_max_1033@478:1> = 1) &&
         ((<array_max_1033@478:1> < <array_max_1033@478:0>) &&
          ((0 < <array_max_1033@478:0>) && (<<array_max_1033@478:2>@481:0> = <array_max_1033@478:1>))))
        P[<<array_max_1033@455:2>@485:0>](<array_max_1033@455:0>:int,<array_max_1033@455:1>:int,<<array_max_1033@455:2>@485:0>:int) =
        ((<array_max_1033@455:1> = 0) &&
         (((1 + <array_max_1033@455:1>) < <array_max_1033@455:0>) &&
          ((0 < <array_max_1033@455:0>) && (<<array_max_1033@455:2>@485:0> = (1 + <array_max_1033@455:1>)))))
        P[<make_array_1030@487:1>](<make_array_1030@487:0>:int,<make_array_1030@487:1>:int) =
        ((<make_array_1030@487:1> = 1) && (1 < <make_array_1030@487:0>))
        P[<<make_array_1030@487:2>@499:0>](<make_array_1030@487:0>:int,<make_array_1030@487:1>:int,<<make_array_1030@487:2>@499:0>:int) =
        ((<make_array_1030@487:1> = 1) &&
         ((<make_array_1030@487:1> < <make_array_1030@487:0>) &&
          ((1 < <make_array_1030@487:0>) && (<<make_array_1030@487:2>@499:0> = <make_array_1030@487:1>))))
        P[<<<array_max_1033@455:2>@485:1>@501:0>](<array_max_1033@455:0>:int,<array_max_1033@455:1>:int,<<array_max_1033@455:2>@485:0>:int,<<<array_max_1033@455:2>@485:1>@501:0>:int) =
        ((<<array_max_1033@455:2>@485:0> = 1) &&
         ((<array_max_1033@455:1> = 0) &&
          ((<<array_max_1033@455:2>@485:0> < <array_max_1033@455:0>) &&
           ((1 < <array_max_1033@455:0>) && (<<<array_max_1033@455:2>@485:1>@501:0> = <<array_max_1033@455:2>@485:0>)))))
        P[<<<array_max_1033@478:2>@481:1>@505:0>](<array_max_1033@478:0>:int,<array_max_1033@478:1>:int,<<array_max_1033@478:2>@481:0>:int,<<<array_max_1033@478:2>@481:1>@505:0>:int) =
        ((<array_max_1033@478:1> = 1) &&
         ((<<array_max_1033@478:2>@481:0> = 1) &&
          ((<<<array_max_1033@478:2>@481:1>@505:0> = <<array_max_1033@478:2>@481:0>) &&
           ((<array_max_1033@478:1> < (1 + <array_max_1033@478:0>)) &&
            ((1 < <array_max_1033@478:0>) && (<<array_max_1033@478:2>@481:0> < <array_max_1033@478:0>))))))
        P[<array_max_1033@509:1>](<array_max_1033@509:0>:int,<array_max_1033@509:1>:int) =
        ((<array_max_1033@509:1> = 2) &&
         ((<array_max_1033@509:1> < (1 + <array_max_1033@509:0>)) && (1 < <array_max_1033@509:0>)))
        P[<<array_max_1033@509:3>@512:0>](<array_max_1033@509:0>:int,<array_max_1033@509:1>:int,<<array_max_1033@509:3>@512:0>:int) =
        ((<<array_max_1033@509:3>@512:0> = 0) &&
         ((<array_max_1033@509:1> = 2) &&
          ((1 < <array_max_1033@509:0>) && (<array_max_1033@509:1> = <array_max_1033@509:0>))))
        P[<<array_max_1033@478:3>@521:0>](<array_max_1033@478:0>:int,<array_max_1033@478:1>:int,<<array_max_1033@478:3>@521:0>:int) =
        ((<array_max_1033@478:1> = 1) &&
         ((<<array_max_1033@478:3>@521:0> = <array_max_1033@478:1>) &&
          (((1 + <array_max_1033@478:1>) = <array_max_1033@478:0>) &&
           ((1 < <array_max_1033@478:0>) && (<<array_max_1033@478:3>@521:0> > 0)))))
        P[<<array_max_1033@455:3>@530:0>](<array_max_1033@455:0>:int,<array_max_1033@455:1>:int,<<array_max_1033@455:3>@530:0>:int) =
        ((<array_max_1033@455:1> = 0) &&
         (((1 + <array_max_1033@455:1>) = <<array_max_1033@455:3>@530:0>) &&
          (((2 + <array_max_1033@455:1>) = <array_max_1033@455:0>) &&
           ((1 < <array_max_1033@455:0>) && (<<array_max_1033@455:3>@530:0> > 0)))))
        P[<check_1148@534:2>](<check_1148@534:0>:int,<check_1148@534:1>:int,<check_1148@534:2>:int) =
        ((<check_1148@534:1> = 0) && ((<check_1148@534:2> = 1) && (<check_1148@534:0> = 2)))
        P[<<check_1148@534:3>@537:0>](<check_1148@534:0>:int,<check_1148@534:1>:int,<check_1148@534:2>:int,<<check_1148@534:3>@537:0>:int) =
        ((<check_1148@534:1> = 0) &&
         ((<check_1148@534:2> = 1) && ((<check_1148@534:0> = 2) && (<<check_1148@534:3>@537:0> = <check_1148@534:1>))))
        P[<make_array_1030@539:1>](<make_array_1030@539:0>:int,<make_array_1030@539:1>:int) =
        ((<make_array_1030@539:1> = 0) && (<make_array_1030@539:0> = 2))
        P[<<make_array_1030@539:2>@551:0>](<make_array_1030@539:0>:int,<make_array_1030@539:1>:int,<<make_array_1030@539:2>@551:0>:int) =
        ((<make_array_1030@539:1> = 0) &&
         ((<make_array_1030@539:0> = 2) && (<<make_array_1030@539:2>@551:0> = <make_array_1030@539:1>)))
        P[<<<check_1148@534:3>@537:1>@553:0>](<check_1148@534:0>:int,<check_1148@534:1>:int,<check_1148@534:2>:int,<<check_1148@534:3>@537:0>:int,<<<check_1148@534:3>@537:1>@553:0>:int) =
        ((<check_1148@534:2> = 1) &&
         ((<check_1148@534:0> = 2) &&
          ((<<check_1148@534:3>@537:0> = 0) &&
           ((<check_1148@534:1> = 0) && (<<<check_1148@534:3>@537:1>@553:0> = <<check_1148@534:3>@537:0>)))))
        P[<check_1148@560:2>](<check_1148@560:0>:int,<check_1148@560:1>:int,<check_1148@560:2>:int) =
        ((<check_1148@560:1> = 1) && ((<check_1148@560:0> = 2) && (<check_1148@560:2> = 1)))
        P[<<check_1148@560:3>@563:0>](<check_1148@560:0>:int,<check_1148@560:1>:int,<check_1148@560:2>:int,<<check_1148@560:3>@563:0>:int) =
        ((<check_1148@560:1> = 1) &&
         ((<check_1148@560:0> = 2) && ((<check_1148@560:2> = 1) && (<<check_1148@560:3>@563:0> = <check_1148@560:1>))))
        P[<<check_1148@534:3>@569:0>](<check_1148@534:0>:int,<check_1148@534:1>:int,<check_1148@534:2>:int,<<check_1148@534:3>@569:0>:int) =
        ((<check_1148@534:1> = 0) &&
         ((<check_1148@534:0> = 2) &&
          ((<check_1148@534:2> = 1) && (<<check_1148@534:3>@569:0> = (1 + <check_1148@534:1>)))))
        P[<make_array_1030@571:1>](<make_array_1030@571:0>:int,<make_array_1030@571:1>:int) =
        ((<make_array_1030@571:1> = 1) && (<make_array_1030@571:0> = 2))
        P[<<make_array_1030@571:2>@583:0>](<make_array_1030@571:0>:int,<make_array_1030@571:1>:int,<<make_array_1030@571:2>@583:0>:int) =
        ((<make_array_1030@571:1> = 1) &&
         ((<make_array_1030@571:0> = 2) && (<<make_array_1030@571:2>@583:0> = <make_array_1030@571:1>)))
        P[<<<check_1148@534:3>@569:1>@585:0>](<check_1148@534:0>:int,<check_1148@534:1>:int,<check_1148@534:2>:int,<<check_1148@534:3>@569:0>:int,<<<check_1148@534:3>@569:1>@585:0>:int) =
        ((<check_1148@534:2> = 1) &&
         ((<check_1148@534:0> = 2) &&
          ((<<check_1148@534:3>@569:0> = 1) &&
           ((<check_1148@534:1> = 0) && (<<<check_1148@534:3>@569:1>@585:0> = <<check_1148@534:3>@569:0>)))))
        P[<<<check_1148@560:3>@563:1>@591:0>](<check_1148@560:0>:int,<check_1148@560:1>:int,<check_1148@560:2>:int,<<check_1148@560:3>@563:0>:int,<<<check_1148@560:3>@563:1>@591:0>:int) =
        ((<check_1148@560:2> = 1) &&
         ((<check_1148@560:0> = 2) &&
          ((<check_1148@560:1> = 1) &&
           ((<<check_1148@560:3>@563:0> = 1) && (<<<check_1148@560:3>@563:1>@591:0> = <<check_1148@560:3>@563:0>)))))
        P[<fail_1487@596:0>](<fail_1487@596:0>:bool) = false
      upper bounds:
        P[<<make_array_1030@571:2>@583:0>](var2268:int,var2269:int,var2270:int) =
        ((var2268 <> 2) || ((var2269 <> 1) || (var2270 <= 1)))
        P[<<make_array_1030@539:2>@551:0>](var2264:int,var2265:int,var2266:int) = true
        P[<<make_array_1030@487:2>@499:0>](var2249:int,var2250:int,var2251:int) = true
        P[<<make_array_1030@460:2>@472:0>](var2238:int,var2239:int,var2240:int) = true
      begin GenHcSolver.classify_pids(1539126)[4]
        output:
          [<<make_array_1030@460:2>@472:0>;<<make_array_1030@487:2>@499:0>;<<make_array_1030@539:2>@551:0>;<<make_array_1030@571:2>@583:0>]
      end GenHcSolver.classify_pids(1539126)[4] (0.001000 sec.)
      begin ApronInterface.convex_hull_interpolate(1539228)[4]
        lb:(((<make_array_1030@460:1> = 0) &&
             ((<make_array_1030@460:1> < <make_array_1030@460:0>) &&
              ((0 < <make_array_1030@460:0>) && (<<make_array_1030@460:2>@472:0> = <make_array_1030@460:1>)))) ||
            (((<make_array_1030@460:1> = 1) &&
              ((<make_array_1030@460:1> < <make_array_1030@460:0>) &&
               ((1 < <make_array_1030@460:0>) && (<<make_array_1030@460:2>@472:0> = <make_array_1030@460:1>)))) ||
             (((<make_array_1030@460:1> = 0) &&
               ((<make_array_1030@460:0> = 2) && (<<make_array_1030@460:2>@472:0> = <make_array_1030@460:1>))) ||
              ((<make_array_1030@460:1> = 1) &&
               ((<make_array_1030@460:0> = 2) && (<<make_array_1030@460:2>@472:0> = <make_array_1030@460:1>))))))
        nub:(not
               ((<make_array_1030@460:0> <> 2) ||
                ((<make_array_1030@460:1> <> 1) || (<<make_array_1030@460:2>@472:0> <= 1))))
        begin ExtFormula.Formula.case_analysis_boolean(1539531)[5]
          ts: ((<<make_array_1030@460:2>@472:0> = <make_array_1030@460:1>) &&
               (((<make_array_1030@460:1> = 0) &&
                 ((<make_array_1030@460:1> < <make_array_1030@460:0>) && (0 < <make_array_1030@460:0>))) ||
                (((<make_array_1030@460:1> = 1) &&
                  ((<make_array_1030@460:1> < <make_array_1030@460:0>) && (1 < <make_array_1030@460:0>))) ||
                 ((<make_array_1030@460:0> = 2) && ((<make_array_1030@460:1> = 0) || (<make_array_1030@460:1> = 1))))))
          
        end ExtFormula.Formula.case_analysis_boolean(1539531)[5] (0.001999 sec.)
        begin ExtFormula.Formula.case_analysis_boolean(1539585)[5]
          ts: ((<make_array_1030@460:0> = 2) &&
               ((<make_array_1030@460:1> = 1) && (<<make_array_1030@460:2>@472:0> > 1)))
          
        end ExtFormula.Formula.case_analysis_boolean(1539585)[5] (0.000000 sec.)
        lb':(((<<make_array_1030@460:2>@472:0> + (-1 * <make_array_1030@460:1>)) = 0) &&
             (((1 + (-1 * <make_array_1030@460:1>)) >= 0) &&
              ((<make_array_1030@460:1> >= 0) &&
               (((-1 + (-1 * <make_array_1030@460:1>)) + <make_array_1030@460:0>) >= 0))))
        nub':(((-1 + <make_array_1030@460:1>) = 0) &&
              (((-2 + <make_array_1030@460:0>) = 0) && ((-2 + <<make_array_1030@460:2>@472:0>) >= 0)))
        begin InterpProver.interpolate(1539594)[5]
          begin InterpProver.interpolate_fresh(1539595)[6]
            begin InterpProver.interpolate_log(1539596)[7]
              input1: (((<<make_array_1030@460:2>@472:0> + (-1 * <make_array_1030@460:1>)) = 0) &&
                       (((1 + (-1 * <make_array_1030@460:1>)) >= 0) &&
                        ((<make_array_1030@460:1> >= 0) &&
                         (((-1 + (-1 * <make_array_1030@460:1>)) + <make_array_1030@460:0>) >= 0))))
              input2: (((-1 + <make_array_1030@460:1>) = 0) &&
                       (((-2 + <make_array_1030@460:0>) = 0) && ((-2 + <<make_array_1030@460:2>@472:0>) >= 0)))
              begin InterpProver.interpolate_check(1539597)[8]
                begin InterpProver.interpolate_simplify(1539598)[9]
                  begin InterpProver.interpolate_quick(1539775)[10]
                    begin CsisatInterface.interpolate_csisat_wrap(1539784)[11]
                      begin CsisatInterface.interpolate_csisat_post_process(1539785)[12]
                        begin CsisatInterface.interpolate_csisat_log(1539786)[13]
                          input1: (v_sep_make_array_1030_sep_460_sep_1 = v_sep_make_array_1030_sep_460_sep_2_sep_472_sep_0 & 0 <= v_sep_make_array_1030_sep_460_sep_1 & v_sep_make_array_1030_sep_460_sep_1 <= 1 & (1 + v_sep_make_array_1030_sep_460_sep_1) <= v_sep_make_array_1030_sep_460_sep_0)
                          input2: (1 = v_sep_make_array_1030_sep_460_sep_1 & 2 = v_sep_make_array_1030_sep_460_sep_0 & 2 <= v_sep_make_array_1030_sep_460_sep_2_sep_472_sep_0)
                          begin CsisatInterface.interpolate_csisat_raw(1539787)[14]
                            
                          end CsisatInterface.interpolate_csisat_raw(1539787)[14] (0.000000 sec.)
                          output: 2*v_sep_make_array_1030_sep_460_sep_2_sep_472_sep_0 <= 2
                          
                        end CsisatInterface.interpolate_csisat_log(1539786)[13] (0.000000 sec.)
                        after simplification: 2*v_sep_make_array_1030_sep_460_sep_2_sep_472_sep_0 <= 2
                        after dnf conversion: ((2*v_sep_make_array_1030_sep_460_sep_2_sep_472_sep_0 <= 2))
                        
                      end CsisatInterface.interpolate_csisat_post_process(1539785)[12] (0.000000 sec.)
                      
                    end CsisatInterface.interpolate_csisat_wrap(1539784)[11] (0.000000 sec.)
                    
                  end InterpProver.interpolate_quick(1539775)[10] (0.000000 sec.)
                  
                end InterpProver.interpolate_simplify(1539598)[9] (0.002000 sec.)
                
              end InterpProver.interpolate_check(1539597)[8] (0.002000 sec.)
              output: (<<make_array_1030@460:2>@472:0> <= 1)
            end InterpProver.interpolate_log(1539596)[7] (0.002000 sec.)
            
          end InterpProver.interpolate_fresh(1539595)[6] (0.002000 sec.)
          
        end InterpProver.interpolate(1539594)[5] (0.002000 sec.)
        output:
          P[<<make_array_1030@460:2>@472:0>](<make_array_1030@460:0>:int,<make_array_1030@460:1>:int,<<make_array_1030@460:2>@472:0>:int) =
          (<<make_array_1030@460:2>@472:0> <= 1)
          P[<<make_array_1030@487:2>@499:0>](<make_array_1030@460:0>:int,<make_array_1030@460:1>:int,<<make_array_1030@460:2>@472:0>:int) =
          (<<make_array_1030@460:2>@472:0> <= 1)
          P[<<make_array_1030@539:2>@551:0>](<make_array_1030@460:0>:int,<make_array_1030@460:1>:int,<<make_array_1030@460:2>@472:0>:int) =
          (<<make_array_1030@460:2>@472:0> <= 1)
          P[<<make_array_1030@571:2>@583:0>](<make_array_1030@460:0>:int,<make_array_1030@460:1>:int,<<make_array_1030@460:2>@472:0>:int) =
          (<<make_array_1030@460:2>@472:0> <= 1)
      end ApronInterface.convex_hull_interpolate(1539228)[4] (0.005999 sec.)
      Horn clauses:
        P[<fail_1487@596:0>](<fail_1487@596:0>:bool)|- bot
        
        P[<check_1148@560:2>](<f_check_1482@593:2>:int,<f_check_1482@593:0>:int,<f_check_1482@593:1>:int),
        P[<<<check_1148@560:3>@563:1>@591:0>](<f_check_1482@593:2>:int,<f_check_1482@593:0>:int,<f_check_1482@593:1>:int,<f_check_1482@593:0>:int,<f_check_1482@593:5>:int),
        ((<f_check_1482@593:5> > <f_check_1482@593:1>) &&
         ((<f_check_1482@593:0> < <f_check_1482@593:2>) && <fail_1487@596:0>))
        |- P[<fail_1487@596:0>](<fail_1487@596:0>:bool)
        
        P[<<<check_1148@534:3>@537:1>@553:0>](<check_1148@560:0>:int,(
                                              -1 + <check_1148@560:1>):int,<check_1148@560:2>:int,(
                                              -1 + <check_1148@560:1>):int,var1927:int),
        P[<check_1148@534:2>](<check_1148@560:0>:int,(-1 + <check_1148@560:1>):int,<check_1148@560:2>:int),
        P[<<<check_1148@534:3>@569:1>@585:0>](<check_1148@560:0>:int,(
                                              -1 + <check_1148@560:1>):int,<check_1148@560:2>:int,<<check_1148@560:3>@563:0>:int,<<<check_1148@560:3>@563:1>@591:0>:int),
        P[<check_1148@560:2>](<check_1148@560:0>:int,<check_1148@560:1>:int,<check_1148@560:2>:int),
        ((var1927 <= <check_1148@560:2>) && (<check_1148@560:1> < (1 + <check_1148@560:0>)))
        |- P[<<<check_1148@560:3>@563:1>@591:0>](<check_1148@560:0>:int,
                                                 <check_1148@560:1>:int,
                                                 <check_1148@560:2>:int,
                                                 <<check_1148@560:3>@563:0>:int,
                                                 <<<check_1148@560:3>@563:1>@591:0>:int)
        
        P[<<array_max_1033@455:3>@530:0>](<check_1148@534:0>:int,0:int,<check_1148@534:2>:int),
        P[<check_1148@534:2>](<check_1148@534:0>:int,<check_1148@534:1>:int,<check_1148@534:2>:int),
        ((<check_1148@534:1> = 0) && (<<<check_1148@534:3>@569:1>@585:0> <= 1))
        |- P[<<<check_1148@534:3>@569:1>@585:0>](<check_1148@534:0>:int,
                                                 <check_1148@534:1>:int,
                                                 <check_1148@534:2>:int,
                                                 <<check_1148@534:3>@569:0>:int,
                                                 <<<check_1148@534:3>@569:1>@585:0>:int)
        
        P[<make_array_1030@571:1>](<make_array_1030@571:0>:int,<<make_array_1030@571:2>@583:0>:int),
        ((1 < <<make_array_1030@571:2>@583:0>) && (<<make_array_1030@571:2>@583:0> < <make_array_1030@571:0>)) |- bot
        
        P[<<array_max_1033@455:3>@530:0>](<make_array_1030@571:0>:int,0:int,<check_1148@534:2>:int),
        P[<<check_1148@534:3>@569:0>](<make_array_1030@571:0>:int,0:int,<check_1148@534:2>:int,<make_array_1030@571:1>:int)|- P[<make_array_1030@571:1>](
        <make_array_1030@571:0>:int,<make_array_1030@571:1>:int)
        
        P[<<<check_1148@534:3>@537:1>@553:0>](<check_1148@534:0>:int,<check_1148@534:1>:int,<check_1148@534:2>:int,<check_1148@534:1>:int,var1928:int),
        P[<check_1148@534:2>](<check_1148@534:0>:int,<check_1148@534:1>:int,<check_1148@534:2>:int),
        P[<<check_1148@560:3>@563:0>](<check_1148@534:0>:int,(1 + <check_1148@534:1>):int,<check_1148@534:2>:int,<<check_1148@534:3>@569:0>:int),
        ((var1928 <= <check_1148@534:2>) && (<check_1148@534:1> < <check_1148@534:0>))
        |- P[<<check_1148@534:3>@569:0>](<check_1148@534:0>:int,<check_1148@534:1>:int,
                                         <check_1148@534:2>:int,<<check_1148@534:3>@569:0>:int)
        
        P[<check_1148@560:2>](<check_1148@560:0>:int,<check_1148@560:1>:int,<check_1148@560:2>:int),
        ((<check_1148@560:1> < <check_1148@560:0>) && (<<check_1148@560:3>@563:0> = <check_1148@560:1>))
        |- P[<<check_1148@560:3>@563:0>](<check_1148@560:0>:int,<check_1148@560:1>:int,
                                         <check_1148@560:2>:int,<<check_1148@560:3>@563:0>:int)
        
        P[<check_1148@534:2>](<check_1148@560:0>:int,(-1 + <check_1148@560:1>):int,<check_1148@560:2>:int),
        P[<<<check_1148@534:3>@537:1>@553:0>](<check_1148@560:0>:int,(
                                              -1 + <check_1148@560:1>):int,<check_1148@560:2>:int,(
                                              -1 + <check_1148@560:1>):int,var1929:int),
        ((var1929 <= <check_1148@560:2>) && (<check_1148@560:1> < (1 + <check_1148@560:0>)))
        |- P[<check_1148@560:2>](<check_1148@560:0>:int,<check_1148@560:1>:int,
                                 <check_1148@560:2>:int)
        
        P[<<array_max_1033@455:3>@530:0>](<check_1148@534:0>:int,0:int,<check_1148@534:2>:int),
        P[<check_1148@534:2>](<check_1148@534:0>:int,<check_1148@534:1>:int,<check_1148@534:2>:int),
        ((<check_1148@534:1> = 0) && (<<<check_1148@534:3>@537:1>@553:0> <= 1))
        |- P[<<<check_1148@534:3>@537:1>@553:0>](<check_1148@534:0>:int,
                                                 <check_1148@534:1>:int,
                                                 <check_1148@534:2>:int,
                                                 <<check_1148@534:3>@537:0>:int,
                                                 <<<check_1148@534:3>@537:1>@553:0>:int)
        
        P[<make_array_1030@539:1>](<make_array_1030@539:0>:int,<<make_array_1030@539:2>@551:0>:int),
        ((1 < <<make_array_1030@539:2>@551:0>) && (<<make_array_1030@539:2>@551:0> < <make_array_1030@539:0>)) |- bot
        
        P[<<array_max_1033@455:3>@530:0>](<make_array_1030@539:0>:int,0:int,<check_1148@534:2>:int),
        P[<<check_1148@534:3>@537:0>](<make_array_1030@539:0>:int,0:int,<check_1148@534:2>:int,<make_array_1030@539:1>:int)|- P[<make_array_1030@539:1>](
        <make_array_1030@539:0>:int,<make_array_1030@539:1>:int)
        
        P[<check_1148@534:2>](<check_1148@534:0>:int,<check_1148@534:1>:int,<check_1148@534:2>:int),
        ((<check_1148@534:1> < <check_1148@534:0>) && (<<check_1148@534:3>@537:0> = <check_1148@534:1>))
        |- P[<<check_1148@534:3>@537:0>](<check_1148@534:0>:int,<check_1148@534:1>:int,
                                         <check_1148@534:2>:int,<<check_1148@534:3>@537:0>:int)
        
        P[<<array_max_1033@455:3>@530:0>](<check_1148@534:0>:int,0:int,<check_1148@534:2>:int),
        (<check_1148@534:1> = 0)
        |- P[<check_1148@534:2>](<check_1148@534:0>:int,<check_1148@534:1>:int,
                                 <check_1148@534:2>:int)
        
        P[<array_max_1033@455:1>](<array_max_1033@455:0>:int,<array_max_1033@455:1>:int),
        P[<<<array_max_1033@455:2>@458:1>@474:0>](<array_max_1033@455:0>:int,<array_max_1033@455:1>:int,<array_max_1033@455:1>:int,var1930:int),
        P[<<array_max_1033@478:3>@521:0>](<array_max_1033@455:0>:int,(
                                          1 + <array_max_1033@455:1>):int,<<array_max_1033@455:3>@530:0>:int),
        ((var1930 <= <<array_max_1033@455:3>@530:0>) && (<array_max_1033@455:1> < <array_max_1033@455:0>))
        |- P[<<array_max_1033@455:3>@530:0>](<array_max_1033@455:0>:int,
                                             <array_max_1033@455:1>:int,
                                             <<array_max_1033@455:3>@530:0>:int)
        
        P[<array_max_1033@478:1>](<array_max_1033@478:0>:int,<array_max_1033@478:1>:int),
        P[<<<array_max_1033@478:2>@481:1>@505:0>](<array_max_1033@478:0>:int,<array_max_1033@478:1>:int,<array_max_1033@478:1>:int,<<array_max_1033@478:3>@521:0>:int),
        P[<<array_max_1033@509:3>@512:0>](<array_max_1033@478:0>:int,(
                                          1 + <array_max_1033@478:1>):int,var1931:int),
        ((<<array_max_1033@478:3>@521:0> > var1931) && (<array_max_1033@478:1> < <array_max_1033@478:0>))
        |- P[<<array_max_1033@478:3>@521:0>](<array_max_1033@478:0>:int,
                                             <array_max_1033@478:1>:int,
                                             <<array_max_1033@478:3>@521:0>:int)
        
        P[<array_max_1033@509:1>](<array_max_1033@509:0>:int,<array_max_1033@509:1>:int),
        ((<<array_max_1033@509:3>@512:0> = 0) && (<array_max_1033@509:1> >= <array_max_1033@509:0>))
        |- P[<<array_max_1033@509:3>@512:0>](<array_max_1033@509:0>:int,
                                             <array_max_1033@509:1>:int,
                                             <<array_max_1033@509:3>@512:0>:int)
        
        P[<array_max_1033@478:1>](<array_max_1033@509:0>:int,(-1 + <array_max_1033@509:1>):int),
        P[<<<array_max_1033@478:2>@481:1>@505:0>](<array_max_1033@509:0>:int,(
                                                  -1 + <array_max_1033@509:1>):int,(
                                                  -1 + <array_max_1033@509:1>):int,<f_array_max_1480@507:4>:int),
        (<array_max_1033@509:1> < (1 + <array_max_1033@509:0>))
        |- P[<array_max_1033@509:1>](<array_max_1033@509:0>:int,<array_max_1033@509:1>:int)
        
        P[<<<array_max_1033@455:2>@458:1>@474:0>](<array_max_1033@478:0>:int,(
                                                  -1 + <array_max_1033@478:1>):int,(
                                                  -1 + <array_max_1033@478:1>):int,<f_array_max_1480@476:4>:int),
        P[<array_max_1033@455:1>](<array_max_1033@478:0>:int,(-1 + <array_max_1033@478:1>):int),
        P[<<<array_max_1033@455:2>@485:1>@501:0>](<array_max_1033@478:0>:int,(
                                                  -1 + <array_max_1033@478:1>):int,<<array_max_1033@478:2>@481:0>:int,<<<array_max_1033@478:2>@481:1>@505:0>:int),
        P[<array_max_1033@478:1>](<array_max_1033@478:0>:int,<array_max_1033@478:1>:int),
        (<array_max_1033@478:1> < (1 + <array_max_1033@478:0>))
        |- P[<<<array_max_1033@478:2>@481:1>@505:0>](<array_max_1033@478:0>:int,
                                                     <array_max_1033@478:1>:int,
                                                     <<array_max_1033@478:2>@481:0>:int,
                                                     <<<array_max_1033@478:2>@481:1>@505:0>:int)
        
        P[<array_max_1033@455:1>](<array_max_1033@455:0>:int,<array_max_1033@455:1>:int),
        ((<array_max_1033@455:1> = 0) && (<<<array_max_1033@455:2>@485:1>@501:0> <= 1))
        |- P[<<<array_max_1033@455:2>@485:1>@501:0>](<array_max_1033@455:0>:int,
                                                     <array_max_1033@455:1>:int,
                                                     <<array_max_1033@455:2>@485:0>:int,
                                                     <<<array_max_1033@455:2>@485:1>@501:0>:int)
        
        P[<make_array_1030@487:1>](<make_array_1030@487:0>:int,<<make_array_1030@487:2>@499:0>:int),
        ((1 < <<make_array_1030@487:2>@499:0>) && (<<make_array_1030@487:2>@499:0> < <make_array_1030@487:0>)) |- bot
        
        P[<<array_max_1033@455:2>@485:0>](<make_array_1030@487:0>:int,0:int,<make_array_1030@487:1>:int)|- P[<make_array_1030@487:1>](
        <make_array_1030@487:0>:int,<make_array_1030@487:1>:int)
        
        P[<array_max_1033@455:1>](<array_max_1033@455:0>:int,<array_max_1033@455:1>:int),
        P[<<<array_max_1033@455:2>@458:1>@474:0>](<array_max_1033@455:0>:int,<array_max_1033@455:1>:int,<array_max_1033@455:1>:int,var1932:int),
        P[<<array_max_1033@478:2>@481:0>](<array_max_1033@455:0>:int,(
                                          1 + <array_max_1033@455:1>):int,<<array_max_1033@455:2>@485:0>:int),
        (<array_max_1033@455:1> < <array_max_1033@455:0>)
        |- P[<<array_max_1033@455:2>@485:0>](<array_max_1033@455:0>:int,
                                             <array_max_1033@455:1>:int,
                                             <<array_max_1033@455:2>@485:0>:int)
        
        P[<array_max_1033@478:1>](<array_max_1033@478:0>:int,<array_max_1033@478:1>:int),
        ((<array_max_1033@478:1> < <array_max_1033@478:0>) && (<<array_max_1033@478:2>@481:0> = <array_max_1033@478:1>))
        |- P[<<array_max_1033@478:2>@481:0>](<array_max_1033@478:0>:int,
                                             <array_max_1033@478:1>:int,
                                             <<array_max_1033@478:2>@481:0>:int)
        
        P[<array_max_1033@455:1>](<array_max_1033@478:0>:int,(-1 + <array_max_1033@478:1>):int),
        P[<<<array_max_1033@455:2>@458:1>@474:0>](<array_max_1033@478:0>:int,(
                                                  -1 + <array_max_1033@478:1>):int,(
                                                  -1 + <array_max_1033@478:1>):int,<f_array_max_1480@476:4>:int),
        (<array_max_1033@478:1> < (1 + <array_max_1033@478:0>))
        |- P[<array_max_1033@478:1>](<array_max_1033@478:0>:int,<array_max_1033@478:1>:int)
        
        P[<array_max_1033@455:1>](<array_max_1033@455:0>:int,<array_max_1033@455:1>:int),
        ((<array_max_1033@455:1> = 0) && (<<<array_max_1033@455:2>@458:1>@474:0> <= 1))
        |- P[<<<array_max_1033@455:2>@458:1>@474:0>](<array_max_1033@455:0>:int,
                                                     <array_max_1033@455:1>:int,
                                                     <<array_max_1033@455:2>@458:0>:int,
                                                     <<<array_max_1033@455:2>@458:1>@474:0>:int)
        
        P[<make_array_1030@460:1>](<make_array_1030@460:0>:int,<<make_array_1030@460:2>@472:0>:int),
        ((1 < <<make_array_1030@460:2>@472:0>) && (<<make_array_1030@460:2>@472:0> < <make_array_1030@460:0>)) |- bot
        
        P[<<array_max_1033@455:2>@458:0>](<make_array_1030@460:0>:int,0:int,<make_array_1030@460:1>:int)|- P[<make_array_1030@460:1>](
        <make_array_1030@460:0>:int,<make_array_1030@460:1>:int)
        
        P[<array_max_1033@455:1>](<array_max_1033@455:0>:int,<array_max_1033@455:1>:int),
        ((<array_max_1033@455:1> < <array_max_1033@455:0>) && (<<array_max_1033@455:2>@458:0> = <array_max_1033@455:1>))
        |- P[<<array_max_1033@455:2>@458:0>](<array_max_1033@455:0>:int,
                                             <array_max_1033@455:1>:int,
                                             <<array_max_1033@455:2>@458:0>:int)
        
         (<array_max_1033@455:1> = 0)
        |- P[<array_max_1033@455:1>](<array_max_1033@455:0>:int,<array_max_1033@455:1>:int)
      lower bounds:
        P[<array_max_1033@455:1>](<array_max_1033@455:0>:int,<array_max_1033@455:1>:int) = (<array_max_1033@455:1> = 0)
        P[<<<array_max_1033@455:2>@485:1>@501:0>](<array_max_1033@455:0>:int,<array_max_1033@455:1>:int,<<array_max_1033@455:2>@485:0>:int,<<<array_max_1033@455:2>@485:1>@501:0>:int) =
        ((<array_max_1033@455:1> = 0) && (<<<array_max_1033@455:2>@485:1>@501:0> <= 1))
        P[<<<array_max_1033@455:2>@458:1>@474:0>](<array_max_1033@455:0>:int,<array_max_1033@455:1>:int,<<array_max_1033@455:2>@458:0>:int,<<<array_max_1033@455:2>@458:1>@474:0>:int) =
        ((<array_max_1033@455:1> = 0) && (<<<array_max_1033@455:2>@458:1>@474:0> <= 1))
        P[<<array_max_1033@455:2>@458:0>](<array_max_1033@455:0>:int,<array_max_1033@455:1>:int,<<array_max_1033@455:2>@458:0>:int) =
        ((<array_max_1033@455:1> = 0) &&
         ((<array_max_1033@455:1> < <array_max_1033@455:0>) &&
          (<<array_max_1033@455:2>@458:0> = <array_max_1033@455:1>)))
        P[<array_max_1033@478:1>](<array_max_1033@478:0>:int,<array_max_1033@478:1>:int) =
        ((<array_max_1033@478:1> = 1) && (<array_max_1033@478:1> < (1 + <array_max_1033@478:0>)))
        P[<make_array_1030@460:1>](<make_array_1030@460:0>:int,<make_array_1030@460:1>:int) =
        ((<make_array_1030@460:1> = 0) && (0 < <make_array_1030@460:0>))
        P[<<<array_max_1033@478:2>@481:1>@505:0>](<array_max_1033@478:0>:int,<array_max_1033@478:1>:int,<<array_max_1033@478:2>@481:0>:int,<<<array_max_1033@478:2>@481:1>@505:0>:int) =
        ((<array_max_1033@478:1> = 1) &&
         ((<<<array_max_1033@478:2>@481:1>@505:0> <= 1) && (<array_max_1033@478:1> < (1 + <array_max_1033@478:0>))))
        P[<<array_max_1033@478:2>@481:0>](<array_max_1033@478:0>:int,<array_max_1033@478:1>:int,<<array_max_1033@478:2>@481:0>:int) =
        ((<array_max_1033@478:1> = 1) &&
         ((<array_max_1033@478:1> < <array_max_1033@478:0>) &&
          (<<array_max_1033@478:2>@481:0> = <array_max_1033@478:1>)))
        P[<array_max_1033@509:1>](<array_max_1033@509:0>:int,<array_max_1033@509:1>:int) =
        ((<array_max_1033@509:1> = 2) && (<array_max_1033@509:1> < (1 + <array_max_1033@509:0>)))
        P[<<array_max_1033@455:2>@485:0>](<array_max_1033@455:0>:int,<array_max_1033@455:1>:int,<<array_max_1033@455:2>@485:0>:int) =
        ((<array_max_1033@455:1> = 0) &&
         (((1 + <array_max_1033@455:1>) < <array_max_1033@455:0>) &&
          (<<array_max_1033@455:2>@485:0> = (1 + <array_max_1033@455:1>))))
        P[<<array_max_1033@509:3>@512:0>](<array_max_1033@509:0>:int,<array_max_1033@509:1>:int,<<array_max_1033@509:3>@512:0>:int) =
        ((<<array_max_1033@509:3>@512:0> = 0) &&
         ((<array_max_1033@509:1> = 2) && (<array_max_1033@509:1> = <array_max_1033@509:0>)))
        P[<make_array_1030@487:1>](<make_array_1030@487:0>:int,<make_array_1030@487:1>:int) =
        ((<make_array_1030@487:1> = 1) && (1 < <make_array_1030@487:0>))
        P[<<array_max_1033@478:3>@521:0>](<array_max_1033@478:0>:int,<array_max_1033@478:1>:int,<<array_max_1033@478:3>@521:0>:int) =
        ((<<array_max_1033@478:3>@521:0> = 1) &&
         ((<array_max_1033@478:1> = 1) && ((1 + <array_max_1033@478:1>) = <array_max_1033@478:0>)))
        P[<<array_max_1033@455:3>@530:0>](<array_max_1033@455:0>:int,<array_max_1033@455:1>:int,<<array_max_1033@455:3>@530:0>:int) =
        ((<<array_max_1033@455:3>@530:0> = 1) &&
         ((<array_max_1033@455:1> = 0) && ((2 + <array_max_1033@455:1>) = <array_max_1033@455:0>)))
        P[<check_1148@534:2>](<check_1148@534:0>:int,<check_1148@534:1>:int,<check_1148@534:2>:int) =
        ((<check_1148@534:1> = 0) && ((<check_1148@534:2> = 1) && (<check_1148@534:0> = 2)))
        P[<<<check_1148@534:3>@569:1>@585:0>](<check_1148@534:0>:int,<check_1148@534:1>:int,<check_1148@534:2>:int,<<check_1148@534:3>@569:0>:int,<<<check_1148@534:3>@569:1>@585:0>:int) =
        ((<check_1148@534:0> = 2) &&
         ((<check_1148@534:1> = 0) && ((<check_1148@534:2> = 1) && (<<<check_1148@534:3>@569:1>@585:0> <= 1))))
        P[<<<check_1148@534:3>@537:1>@553:0>](<check_1148@534:0>:int,<check_1148@534:1>:int,<check_1148@534:2>:int,<<check_1148@534:3>@537:0>:int,<<<check_1148@534:3>@537:1>@553:0>:int) =
        ((<check_1148@534:0> = 2) &&
         ((<check_1148@534:1> = 0) && ((<check_1148@534:2> = 1) && (<<<check_1148@534:3>@537:1>@553:0> <= 1))))
        P[<<check_1148@534:3>@537:0>](<check_1148@534:0>:int,<check_1148@534:1>:int,<check_1148@534:2>:int,<<check_1148@534:3>@537:0>:int) =
        ((<check_1148@534:1> = 0) &&
         ((<check_1148@534:2> = 1) && ((<check_1148@534:0> = 2) && (<<check_1148@534:3>@537:0> = <check_1148@534:1>))))
        P[<check_1148@560:2>](<check_1148@560:0>:int,<check_1148@560:1>:int,<check_1148@560:2>:int) =
        ((<check_1148@560:0> = 2) && ((<check_1148@560:1> = 1) && (<check_1148@560:2> = 1)))
        P[<make_array_1030@539:1>](<make_array_1030@539:0>:int,<make_array_1030@539:1>:int) =
        ((<make_array_1030@539:1> = 0) && (<make_array_1030@539:0> = 2))
        P[<<<check_1148@560:3>@563:1>@591:0>](<check_1148@560:0>:int,<check_1148@560:1>:int,<check_1148@560:2>:int,<<check_1148@560:3>@563:0>:int,<<<check_1148@560:3>@563:1>@591:0>:int) =
        ((<check_1148@560:0> = 2) &&
         ((<check_1148@560:1> = 1) && ((<check_1148@560:2> = 1) && (<<<check_1148@560:3>@563:1>@591:0> <= 1))))
        P[<<check_1148@560:3>@563:0>](<check_1148@560:0>:int,<check_1148@560:1>:int,<check_1148@560:2>:int,<<check_1148@560:3>@563:0>:int) =
        ((<check_1148@560:0> = 2) &&
         ((<check_1148@560:1> = 1) && ((<check_1148@560:2> = 1) && (<<check_1148@560:3>@563:0> = <check_1148@560:1>))))
        P[<fail_1487@596:0>](<fail_1487@596:0>:bool) = false
        P[<<check_1148@534:3>@569:0>](<check_1148@534:0>:int,<check_1148@534:1>:int,<check_1148@534:2>:int,<<check_1148@534:3>@569:0>:int) =
        ((<check_1148@534:0> = 2) &&
         ((<check_1148@534:1> = 0) &&
          ((<check_1148@534:2> = 1) && (<<check_1148@534:3>@569:0> = (1 + <check_1148@534:1>)))))
        P[<make_array_1030@571:1>](<make_array_1030@571:0>:int,<make_array_1030@571:1>:int) =
        ((<make_array_1030@571:1> = 1) && (<make_array_1030@571:0> = 2))
      upper bounds:
        P[<make_array_1030@571:1>](var2277:int,var2278:int) = ((1 >= var2278) || (var2278 >= var2277))
        P[<make_array_1030@539:1>](var2275:int,var2276:int) = ((1 >= var2276) || (var2276 >= var2275))
        P[<make_array_1030@487:1>](var2273:int,var2274:int) = ((1 >= var2274) || (var2274 >= var2273))
        P[<make_array_1030@460:1>](var2271:int,var2272:int) = ((1 >= var2272) || (var2272 >= var2271))
      begin GenHcSolver.classify_pids(1623402)[4]
        output:
          [<make_array_1030@460:1>;<make_array_1030@487:1>;<make_array_1030@539:1>;<make_array_1030@571:1>]
      end GenHcSolver.classify_pids(1623402)[4] (0.000000 sec.)
      begin ApronInterface.convex_hull_interpolate(1623477)[4]
        lb:(((<make_array_1030@460:1> = 0) && (0 < <make_array_1030@460:0>)) ||
            (((<make_array_1030@460:1> = 1) && (1 < <make_array_1030@460:0>)) ||
             (((<make_array_1030@460:1> = 0) && (<make_array_1030@460:0> = 2)) ||
              ((<make_array_1030@460:1> = 1) && (<make_array_1030@460:0> = 2)))))
        nub:(not ((1 >= <make_array_1030@460:1>) || (<make_array_1030@460:1> >= <make_array_1030@460:0>)))
        begin ExtFormula.Formula.case_analysis_boolean(1623530)[5]
          ts: (((<make_array_1030@460:1> = 0) && (0 < <make_array_1030@460:0>)) ||
               (((<make_array_1030@460:1> = 1) && (1 < <make_array_1030@460:0>)) ||
                ((<make_array_1030@460:0> = 2) && ((<make_array_1030@460:1> = 0) || (<make_array_1030@460:1> = 1)))))
          
        end ExtFormula.Formula.case_analysis_boolean(1623530)[5] (0.000000 sec.)
        begin ExtFormula.Formula.case_analysis_boolean(1623563)[5]
          ts: ((1 < <make_array_1030@460:1>) && (<make_array_1030@460:1> < <make_array_1030@460:0>))
          
        end ExtFormula.Formula.case_analysis_boolean(1623563)[5] (0.000000 sec.)
        lb':(((1 + (-1 * <make_array_1030@460:1>)) >= 0) &&
             ((<make_array_1030@460:1> >= 0) &&
              (((-1 + (-1 * <make_array_1030@460:1>)) + <make_array_1030@460:0>) >= 0)))
        nub':(((-2 + <make_array_1030@460:1>) >= 0) &&
              (((-1 + (-1 * <make_array_1030@460:1>)) + <make_array_1030@460:0>) >= 0))
        begin InterpProver.interpolate(1623570)[5]
          begin InterpProver.interpolate_fresh(1623571)[6]
            begin InterpProver.interpolate_log(1623572)[7]
              input1: (((1 + (-1 * <make_array_1030@460:1>)) >= 0) &&
                       ((<make_array_1030@460:1> >= 0) &&
                        (((-1 + (-1 * <make_array_1030@460:1>)) + <make_array_1030@460:0>) >= 0)))
              input2: (((-2 + <make_array_1030@460:1>) >= 0) &&
                       (((-1 + (-1 * <make_array_1030@460:1>)) + <make_array_1030@460:0>) >= 0))
              begin InterpProver.interpolate_check(1623573)[8]
                begin InterpProver.interpolate_simplify(1623574)[9]
                  begin InterpProver.interpolate_quick(1623691)[10]
                    begin CsisatInterface.interpolate_csisat_wrap(1623700)[11]
                      begin CsisatInterface.interpolate_csisat_post_process(1623701)[12]
                        begin CsisatInterface.interpolate_csisat_log(1623702)[13]
                          input1: (0 <= v_sep_make_array_1030_sep_460_sep_1 & v_sep_make_array_1030_sep_460_sep_1 <= 1 & (1 + v_sep_make_array_1030_sep_460_sep_1) <= v_sep_make_array_1030_sep_460_sep_0)
                          input2: (2 <= v_sep_make_array_1030_sep_460_sep_1 & (1 + v_sep_make_array_1030_sep_460_sep_1) <= v_sep_make_array_1030_sep_460_sep_0)
                          begin CsisatInterface.interpolate_csisat_raw(1623703)[14]
                            
                          end CsisatInterface.interpolate_csisat_raw(1623703)[14] (0.000000 sec.)
                          output: 2*v_sep_make_array_1030_sep_460_sep_1 <= 2
                          
                        end CsisatInterface.interpolate_csisat_log(1623702)[13] (0.000000 sec.)
                        after simplification: 2*v_sep_make_array_1030_sep_460_sep_1 <= 2
                        after dnf conversion: ((2*v_sep_make_array_1030_sep_460_sep_1 <= 2))
                        
                      end CsisatInterface.interpolate_csisat_post_process(1623701)[12] (0.000000 sec.)
                      
                    end CsisatInterface.interpolate_csisat_wrap(1623700)[11] (0.000000 sec.)
                    
                  end InterpProver.interpolate_quick(1623691)[10] (0.001000 sec.)
                  
                end InterpProver.interpolate_simplify(1623574)[9] (0.002000 sec.)
                
              end InterpProver.interpolate_check(1623573)[8] (0.003000 sec.)
              output: (<make_array_1030@460:1> <= 1)
            end InterpProver.interpolate_log(1623572)[7] (0.003000 sec.)
            
          end InterpProver.interpolate_fresh(1623571)[6] (0.003000 sec.)
          
        end InterpProver.interpolate(1623570)[5] (0.003000 sec.)
        output:
          P[<make_array_1030@460:1>](<make_array_1030@460:0>:int,<make_array_1030@460:1>:int) =
          (<make_array_1030@460:1> <= 1)
          P[<make_array_1030@487:1>](<make_array_1030@460:0>:int,<make_array_1030@460:1>:int) =
          (<make_array_1030@460:1> <= 1)
          P[<make_array_1030@539:1>](<make_array_1030@460:0>:int,<make_array_1030@460:1>:int) =
          (<make_array_1030@460:1> <= 1)
          P[<make_array_1030@571:1>](<make_array_1030@460:0>:int,<make_array_1030@460:1>:int) =
          (<make_array_1030@460:1> <= 1)
      end ApronInterface.convex_hull_interpolate(1623477)[4] (0.003000 sec.)
      Horn clauses:
        P[<fail_1487@596:0>](<fail_1487@596:0>:bool)|- bot
        
        P[<check_1148@560:2>](<f_check_1482@593:2>:int,<f_check_1482@593:0>:int,<f_check_1482@593:1>:int),
        P[<<<check_1148@560:3>@563:1>@591:0>](<f_check_1482@593:2>:int,<f_check_1482@593:0>:int,<f_check_1482@593:1>:int,<f_check_1482@593:0>:int,<f_check_1482@593:5>:int),
        ((<f_check_1482@593:5> > <f_check_1482@593:1>) &&
         ((<f_check_1482@593:0> < <f_check_1482@593:2>) && <fail_1487@596:0>))
        |- P[<fail_1487@596:0>](<fail_1487@596:0>:bool)
        
        P[<<<check_1148@534:3>@537:1>@553:0>](<check_1148@560:0>:int,(
                                              -1 + <check_1148@560:1>):int,<check_1148@560:2>:int,(
                                              -1 + <check_1148@560:1>):int,var1927:int),
        P[<check_1148@534:2>](<check_1148@560:0>:int,(-1 + <check_1148@560:1>):int,<check_1148@560:2>:int),
        P[<<<check_1148@534:3>@569:1>@585:0>](<check_1148@560:0>:int,(
                                              -1 + <check_1148@560:1>):int,<check_1148@560:2>:int,<<check_1148@560:3>@563:0>:int,<<<check_1148@560:3>@563:1>@591:0>:int),
        P[<check_1148@560:2>](<check_1148@560:0>:int,<check_1148@560:1>:int,<check_1148@560:2>:int),
        ((var1927 <= <check_1148@560:2>) && (<check_1148@560:1> < (1 + <check_1148@560:0>)))
        |- P[<<<check_1148@560:3>@563:1>@591:0>](<check_1148@560:0>:int,
                                                 <check_1148@560:1>:int,
                                                 <check_1148@560:2>:int,
                                                 <<check_1148@560:3>@563:0>:int,
                                                 <<<check_1148@560:3>@563:1>@591:0>:int)
        
        P[<<array_max_1033@455:3>@530:0>](<check_1148@534:0>:int,0:int,<check_1148@534:2>:int),
        P[<check_1148@534:2>](<check_1148@534:0>:int,<check_1148@534:1>:int,<check_1148@534:2>:int),
        ((<check_1148@534:1> = 0) && (<<<check_1148@534:3>@569:1>@585:0> <= 1))
        |- P[<<<check_1148@534:3>@569:1>@585:0>](<check_1148@534:0>:int,
                                                 <check_1148@534:1>:int,
                                                 <check_1148@534:2>:int,
                                                 <<check_1148@534:3>@569:0>:int,
                                                 <<<check_1148@534:3>@569:1>@585:0>:int)
        
        P[<<array_max_1033@455:3>@530:0>](<make_array_1030@571:0>:int,0:int,<check_1148@534:2>:int),
        P[<<check_1148@534:3>@569:0>](<make_array_1030@571:0>:int,0:int,<check_1148@534:2>:int,<make_array_1030@571:1>:int),
        (<make_array_1030@571:1> > 1) |- bot
        
        P[<<<check_1148@534:3>@537:1>@553:0>](<check_1148@534:0>:int,<check_1148@534:1>:int,<check_1148@534:2>:int,<check_1148@534:1>:int,var1928:int),
        P[<check_1148@534:2>](<check_1148@534:0>:int,<check_1148@534:1>:int,<check_1148@534:2>:int),
        P[<<check_1148@560:3>@563:0>](<check_1148@534:0>:int,(1 + <check_1148@534:1>):int,<check_1148@534:2>:int,<<check_1148@534:3>@569:0>:int),
        ((var1928 <= <check_1148@534:2>) && (<check_1148@534:1> < <check_1148@534:0>))
        |- P[<<check_1148@534:3>@569:0>](<check_1148@534:0>:int,<check_1148@534:1>:int,
                                         <check_1148@534:2>:int,<<check_1148@534:3>@569:0>:int)
        
        P[<check_1148@560:2>](<check_1148@560:0>:int,<check_1148@560:1>:int,<check_1148@560:2>:int),
        ((<check_1148@560:1> < <check_1148@560:0>) && (<<check_1148@560:3>@563:0> = <check_1148@560:1>))
        |- P[<<check_1148@560:3>@563:0>](<check_1148@560:0>:int,<check_1148@560:1>:int,
                                         <check_1148@560:2>:int,<<check_1148@560:3>@563:0>:int)
        
        P[<check_1148@534:2>](<check_1148@560:0>:int,(-1 + <check_1148@560:1>):int,<check_1148@560:2>:int),
        P[<<<check_1148@534:3>@537:1>@553:0>](<check_1148@560:0>:int,(
                                              -1 + <check_1148@560:1>):int,<check_1148@560:2>:int,(
                                              -1 + <check_1148@560:1>):int,var1929:int),
        ((var1929 <= <check_1148@560:2>) && (<check_1148@560:1> < (1 + <check_1148@560:0>)))
        |- P[<check_1148@560:2>](<check_1148@560:0>:int,<check_1148@560:1>:int,
                                 <check_1148@560:2>:int)
        
        P[<<array_max_1033@455:3>@530:0>](<check_1148@534:0>:int,0:int,<check_1148@534:2>:int),
        P[<check_1148@534:2>](<check_1148@534:0>:int,<check_1148@534:1>:int,<check_1148@534:2>:int),
        ((<check_1148@534:1> = 0) && (<<<check_1148@534:3>@537:1>@553:0> <= 1))
        |- P[<<<check_1148@534:3>@537:1>@553:0>](<check_1148@534:0>:int,
                                                 <check_1148@534:1>:int,
                                                 <check_1148@534:2>:int,
                                                 <<check_1148@534:3>@537:0>:int,
                                                 <<<check_1148@534:3>@537:1>@553:0>:int)
        
        P[<<array_max_1033@455:3>@530:0>](<make_array_1030@539:0>:int,0:int,<check_1148@534:2>:int),
        P[<<check_1148@534:3>@537:0>](<make_array_1030@539:0>:int,0:int,<check_1148@534:2>:int,<make_array_1030@539:1>:int),
        (<make_array_1030@539:1> > 1) |- bot
        
        P[<check_1148@534:2>](<check_1148@534:0>:int,<check_1148@534:1>:int,<check_1148@534:2>:int),
        ((<check_1148@534:1> < <check_1148@534:0>) && (<<check_1148@534:3>@537:0> = <check_1148@534:1>))
        |- P[<<check_1148@534:3>@537:0>](<check_1148@534:0>:int,<check_1148@534:1>:int,
                                         <check_1148@534:2>:int,<<check_1148@534:3>@537:0>:int)
        
        P[<<array_max_1033@455:3>@530:0>](<check_1148@534:0>:int,0:int,<check_1148@534:2>:int),
        (<check_1148@534:1> = 0)
        |- P[<check_1148@534:2>](<check_1148@534:0>:int,<check_1148@534:1>:int,
                                 <check_1148@534:2>:int)
        
        P[<array_max_1033@455:1>](<array_max_1033@455:0>:int,<array_max_1033@455:1>:int),
        P[<<<array_max_1033@455:2>@458:1>@474:0>](<array_max_1033@455:0>:int,<array_max_1033@455:1>:int,<array_max_1033@455:1>:int,var1930:int),
        P[<<array_max_1033@478:3>@521:0>](<array_max_1033@455:0>:int,(
                                          1 + <array_max_1033@455:1>):int,<<array_max_1033@455:3>@530:0>:int),
        ((var1930 <= <<array_max_1033@455:3>@530:0>) && (<array_max_1033@455:1> < <array_max_1033@455:0>))
        |- P[<<array_max_1033@455:3>@530:0>](<array_max_1033@455:0>:int,
                                             <array_max_1033@455:1>:int,
                                             <<array_max_1033@455:3>@530:0>:int)
        
        P[<array_max_1033@478:1>](<array_max_1033@478:0>:int,<array_max_1033@478:1>:int),
        P[<<<array_max_1033@478:2>@481:1>@505:0>](<array_max_1033@478:0>:int,<array_max_1033@478:1>:int,<array_max_1033@478:1>:int,<<array_max_1033@478:3>@521:0>:int),
        P[<<array_max_1033@509:3>@512:0>](<array_max_1033@478:0>:int,(
                                          1 + <array_max_1033@478:1>):int,var1931:int),
        ((<<array_max_1033@478:3>@521:0> > var1931) && (<array_max_1033@478:1> < <array_max_1033@478:0>))
        |- P[<<array_max_1033@478:3>@521:0>](<array_max_1033@478:0>:int,
                                             <array_max_1033@478:1>:int,
                                             <<array_max_1033@478:3>@521:0>:int)
        
        P[<array_max_1033@509:1>](<array_max_1033@509:0>:int,<array_max_1033@509:1>:int),
        ((<<array_max_1033@509:3>@512:0> = 0) && (<array_max_1033@509:1> >= <array_max_1033@509:0>))
        |- P[<<array_max_1033@509:3>@512:0>](<array_max_1033@509:0>:int,
                                             <array_max_1033@509:1>:int,
                                             <<array_max_1033@509:3>@512:0>:int)
        
        P[<array_max_1033@478:1>](<array_max_1033@509:0>:int,(-1 + <array_max_1033@509:1>):int),
        P[<<<array_max_1033@478:2>@481:1>@505:0>](<array_max_1033@509:0>:int,(
                                                  -1 + <array_max_1033@509:1>):int,(
                                                  -1 + <array_max_1033@509:1>):int,<f_array_max_1480@507:4>:int),
        (<array_max_1033@509:1> < (1 + <array_max_1033@509:0>))
        |- P[<array_max_1033@509:1>](<array_max_1033@509:0>:int,<array_max_1033@509:1>:int)
        
        P[<<<array_max_1033@455:2>@458:1>@474:0>](<array_max_1033@478:0>:int,(
                                                  -1 + <array_max_1033@478:1>):int,(
                                                  -1 + <array_max_1033@478:1>):int,<f_array_max_1480@476:4>:int),
        P[<array_max_1033@455:1>](<array_max_1033@478:0>:int,(-1 + <array_max_1033@478:1>):int),
        P[<<<array_max_1033@455:2>@485:1>@501:0>](<array_max_1033@478:0>:int,(
                                                  -1 + <array_max_1033@478:1>):int,<<array_max_1033@478:2>@481:0>:int,<<<array_max_1033@478:2>@481:1>@505:0>:int),
        P[<array_max_1033@478:1>](<array_max_1033@478:0>:int,<array_max_1033@478:1>:int),
        (<array_max_1033@478:1> < (1 + <array_max_1033@478:0>))
        |- P[<<<array_max_1033@478:2>@481:1>@505:0>](<array_max_1033@478:0>:int,
                                                     <array_max_1033@478:1>:int,
                                                     <<array_max_1033@478:2>@481:0>:int,
                                                     <<<array_max_1033@478:2>@481:1>@505:0>:int)
        
        P[<array_max_1033@455:1>](<array_max_1033@455:0>:int,<array_max_1033@455:1>:int),
        ((<array_max_1033@455:1> = 0) && (<<<array_max_1033@455:2>@485:1>@501:0> <= 1))
        |- P[<<<array_max_1033@455:2>@485:1>@501:0>](<array_max_1033@455:0>:int,
                                                     <array_max_1033@455:1>:int,
                                                     <<array_max_1033@455:2>@485:0>:int,
                                                     <<<array_max_1033@455:2>@485:1>@501:0>:int)
        
        P[<<array_max_1033@455:2>@485:0>](<make_array_1030@487:0>:int,0:int,<make_array_1030@487:1>:int),
        (<make_array_1030@487:1> > 1) |- bot
        
        P[<array_max_1033@455:1>](<array_max_1033@455:0>:int,<array_max_1033@455:1>:int),
        P[<<<array_max_1033@455:2>@458:1>@474:0>](<array_max_1033@455:0>:int,<array_max_1033@455:1>:int,<array_max_1033@455:1>:int,var1932:int),
        P[<<array_max_1033@478:2>@481:0>](<array_max_1033@455:0>:int,(
                                          1 + <array_max_1033@455:1>):int,<<array_max_1033@455:2>@485:0>:int),
        (<array_max_1033@455:1> < <array_max_1033@455:0>)
        |- P[<<array_max_1033@455:2>@485:0>](<array_max_1033@455:0>:int,
                                             <array_max_1033@455:1>:int,
                                             <<array_max_1033@455:2>@485:0>:int)
        
        P[<array_max_1033@478:1>](<array_max_1033@478:0>:int,<array_max_1033@478:1>:int),
        ((<array_max_1033@478:1> < <array_max_1033@478:0>) && (<<array_max_1033@478:2>@481:0> = <array_max_1033@478:1>))
        |- P[<<array_max_1033@478:2>@481:0>](<array_max_1033@478:0>:int,
                                             <array_max_1033@478:1>:int,
                                             <<array_max_1033@478:2>@481:0>:int)
        
        P[<array_max_1033@455:1>](<array_max_1033@478:0>:int,(-1 + <array_max_1033@478:1>):int),
        P[<<<array_max_1033@455:2>@458:1>@474:0>](<array_max_1033@478:0>:int,(
                                                  -1 + <array_max_1033@478:1>):int,(
                                                  -1 + <array_max_1033@478:1>):int,<f_array_max_1480@476:4>:int),
        (<array_max_1033@478:1> < (1 + <array_max_1033@478:0>))
        |- P[<array_max_1033@478:1>](<array_max_1033@478:0>:int,<array_max_1033@478:1>:int)
        
        P[<array_max_1033@455:1>](<array_max_1033@455:0>:int,<array_max_1033@455:1>:int),
        ((<array_max_1033@455:1> = 0) && (<<<array_max_1033@455:2>@458:1>@474:0> <= 1))
        |- P[<<<array_max_1033@455:2>@458:1>@474:0>](<array_max_1033@455:0>:int,
                                                     <array_max_1033@455:1>:int,
                                                     <<array_max_1033@455:2>@458:0>:int,
                                                     <<<array_max_1033@455:2>@458:1>@474:0>:int)
        
        P[<<array_max_1033@455:2>@458:0>](<make_array_1030@460:0>:int,0:int,<make_array_1030@460:1>:int),
        (<make_array_1030@460:1> > 1) |- bot
        
        P[<array_max_1033@455:1>](<array_max_1033@455:0>:int,<array_max_1033@455:1>:int),
        ((<array_max_1033@455:1> < <array_max_1033@455:0>) && (<<array_max_1033@455:2>@458:0> = <array_max_1033@455:1>))
        |- P[<<array_max_1033@455:2>@458:0>](<array_max_1033@455:0>:int,
                                             <array_max_1033@455:1>:int,
                                             <<array_max_1033@455:2>@458:0>:int)
        
         (<array_max_1033@455:1> = 0)
        |- P[<array_max_1033@455:1>](<array_max_1033@455:0>:int,<array_max_1033@455:1>:int)
      lower bounds:
        P[<array_max_1033@455:1>](<array_max_1033@455:0>:int,<array_max_1033@455:1>:int) = (<array_max_1033@455:1> = 0)
        P[<<<array_max_1033@455:2>@485:1>@501:0>](<array_max_1033@455:0>:int,<array_max_1033@455:1>:int,<<array_max_1033@455:2>@485:0>:int,<<<array_max_1033@455:2>@485:1>@501:0>:int) =
        ((<array_max_1033@455:1> = 0) && (<<<array_max_1033@455:2>@485:1>@501:0> <= 1))
        P[<<<array_max_1033@455:2>@458:1>@474:0>](<array_max_1033@455:0>:int,<array_max_1033@455:1>:int,<<array_max_1033@455:2>@458:0>:int,<<<array_max_1033@455:2>@458:1>@474:0>:int) =
        ((<array_max_1033@455:1> = 0) && (<<<array_max_1033@455:2>@458:1>@474:0> <= 1))
        P[<<array_max_1033@455:2>@458:0>](<array_max_1033@455:0>:int,<array_max_1033@455:1>:int,<<array_max_1033@455:2>@458:0>:int) =
        ((<array_max_1033@455:1> = 0) &&
         ((<array_max_1033@455:1> < <array_max_1033@455:0>) &&
          (<<array_max_1033@455:2>@458:0> = <array_max_1033@455:1>)))
        P[<array_max_1033@478:1>](<array_max_1033@478:0>:int,<array_max_1033@478:1>:int) =
        ((<array_max_1033@478:1> = 1) && (<array_max_1033@478:1> < (1 + <array_max_1033@478:0>)))
        P[<<<array_max_1033@478:2>@481:1>@505:0>](<array_max_1033@478:0>:int,<array_max_1033@478:1>:int,<<array_max_1033@478:2>@481:0>:int,<<<array_max_1033@478:2>@481:1>@505:0>:int) =
        ((<array_max_1033@478:1> = 1) &&
         ((<<<array_max_1033@478:2>@481:1>@505:0> <= 1) && (<array_max_1033@478:1> < (1 + <array_max_1033@478:0>))))
        P[<<array_max_1033@478:2>@481:0>](<array_max_1033@478:0>:int,<array_max_1033@478:1>:int,<<array_max_1033@478:2>@481:0>:int) =
        ((<array_max_1033@478:1> = 1) &&
         ((<array_max_1033@478:1> < <array_max_1033@478:0>) &&
          (<<array_max_1033@478:2>@481:0> = <array_max_1033@478:1>)))
        P[<array_max_1033@509:1>](<array_max_1033@509:0>:int,<array_max_1033@509:1>:int) =
        ((<array_max_1033@509:1> = 2) && (<array_max_1033@509:1> < (1 + <array_max_1033@509:0>)))
        P[<<array_max_1033@455:2>@485:0>](<array_max_1033@455:0>:int,<array_max_1033@455:1>:int,<<array_max_1033@455:2>@485:0>:int) =
        ((<array_max_1033@455:1> = 0) &&
         (((1 + <array_max_1033@455:1>) < <array_max_1033@455:0>) &&
          (<<array_max_1033@455:2>@485:0> = (1 + <array_max_1033@455:1>))))
        P[<<array_max_1033@509:3>@512:0>](<array_max_1033@509:0>:int,<array_max_1033@509:1>:int,<<array_max_1033@509:3>@512:0>:int) =
        ((<<array_max_1033@509:3>@512:0> = 0) &&
         ((<array_max_1033@509:1> = 2) && (<array_max_1033@509:1> = <array_max_1033@509:0>)))
        P[<<array_max_1033@478:3>@521:0>](<array_max_1033@478:0>:int,<array_max_1033@478:1>:int,<<array_max_1033@478:3>@521:0>:int) =
        ((<<array_max_1033@478:3>@521:0> = 1) &&
         ((<array_max_1033@478:1> = 1) && ((1 + <array_max_1033@478:1>) = <array_max_1033@478:0>)))
        P[<<array_max_1033@455:3>@530:0>](<array_max_1033@455:0>:int,<array_max_1033@455:1>:int,<<array_max_1033@455:3>@530:0>:int) =
        ((<<array_max_1033@455:3>@530:0> = 1) &&
         ((<array_max_1033@455:1> = 0) && ((2 + <array_max_1033@455:1>) = <array_max_1033@455:0>)))
        P[<check_1148@534:2>](<check_1148@534:0>:int,<check_1148@534:1>:int,<check_1148@534:2>:int) =
        ((<check_1148@534:1> = 0) && ((<check_1148@534:2> = 1) && (<check_1148@534:0> = 2)))
        P[<<<check_1148@534:3>@569:1>@585:0>](<check_1148@534:0>:int,<check_1148@534:1>:int,<check_1148@534:2>:int,<<check_1148@534:3>@569:0>:int,<<<check_1148@534:3>@569:1>@585:0>:int) =
        ((<check_1148@534:0> = 2) &&
         ((<check_1148@534:1> = 0) && ((<check_1148@534:2> = 1) && (<<<check_1148@534:3>@569:1>@585:0> <= 1))))
        P[<<<check_1148@534:3>@537:1>@553:0>](<check_1148@534:0>:int,<check_1148@534:1>:int,<check_1148@534:2>:int,<<check_1148@534:3>@537:0>:int,<<<check_1148@534:3>@537:1>@553:0>:int) =
        ((<check_1148@534:0> = 2) &&
         ((<check_1148@534:1> = 0) && ((<check_1148@534:2> = 1) && (<<<check_1148@534:3>@537:1>@553:0> <= 1))))
        P[<<check_1148@534:3>@537:0>](<check_1148@534:0>:int,<check_1148@534:1>:int,<check_1148@534:2>:int,<<check_1148@534:3>@537:0>:int) =
        ((<check_1148@534:1> = 0) &&
         ((<check_1148@534:2> = 1) && ((<check_1148@534:0> = 2) && (<<check_1148@534:3>@537:0> = <check_1148@534:1>))))
        P[<check_1148@560:2>](<check_1148@560:0>:int,<check_1148@560:1>:int,<check_1148@560:2>:int) =
        ((<check_1148@560:0> = 2) && ((<check_1148@560:1> = 1) && (<check_1148@560:2> = 1)))
        P[<<<check_1148@560:3>@563:1>@591:0>](<check_1148@560:0>:int,<check_1148@560:1>:int,<check_1148@560:2>:int,<<check_1148@560:3>@563:0>:int,<<<check_1148@560:3>@563:1>@591:0>:int) =
        ((<check_1148@560:0> = 2) &&
         ((<check_1148@560:1> = 1) && ((<check_1148@560:2> = 1) && (<<<check_1148@560:3>@563:1>@591:0> <= 1))))
        P[<<check_1148@560:3>@563:0>](<check_1148@560:0>:int,<check_1148@560:1>:int,<check_1148@560:2>:int,<<check_1148@560:3>@563:0>:int) =
        ((<check_1148@560:0> = 2) &&
         ((<check_1148@560:1> = 1) && ((<check_1148@560:2> = 1) && (<<check_1148@560:3>@563:0> = <check_1148@560:1>))))
        P[<fail_1487@596:0>](<fail_1487@596:0>:bool) = false
        P[<<check_1148@534:3>@569:0>](<check_1148@534:0>:int,<check_1148@534:1>:int,<check_1148@534:2>:int,<<check_1148@534:3>@569:0>:int) =
        ((<check_1148@534:0> = 2) &&
         ((<check_1148@534:1> = 0) &&
          ((<check_1148@534:2> = 1) && (<<check_1148@534:3>@569:0> = (1 + <check_1148@534:1>)))))
      upper bounds:
        P[<<<check_1148@560:3>@563:1>@591:0>](var2301:int,var2302:int,var2303:int,var2304:int,var2305:int) =
        ((var2301 <> 2) || ((var2302 <> 1) || ((var2303 <> 1) || ((var2304 <> 1) || (var2305 <= 1)))))
        P[<<<check_1148@534:3>@569:1>@585:0>](var2295:int,var2296:int,var2297:int,var2298:int,var2299:int) =
        ((var2295 <> 2) || ((var2296 <> 0) || ((var2297 <> 1) || ((var2298 <> 1) || (var2299 <= 1)))))
        P[<<<check_1148@534:3>@537:1>@553:0>](var2289:int,var2290:int,var2291:int,var2292:int,var2293:int) = true
      begin GenHcSolver.classify_pids(1685669)[4]
        output:
          [<<<check_1148@534:3>@537:1>@553:0>;<<<check_1148@534:3>@569:1>@585:0>;<<<check_1148@560:3>@563:1>@591:0>]
      end GenHcSolver.classify_pids(1685669)[4] (0.001000 sec.)
      begin ApronInterface.convex_hull_interpolate(1686118)[4]
        lb:(((<check_1148@534:0> = 2) &&
             ((<check_1148@534:1> = 0) && ((<check_1148@534:2> = 1) && (<<<check_1148@534:3>@537:1>@553:0> <= 1)))) ||
            ((<check_1148@534:0> = 2) &&
             ((<check_1148@534:1> = 1) && ((<check_1148@534:2> = 1) && (<<<check_1148@534:3>@537:1>@553:0> <= 1)))))
        nub:((not
                ((<check_1148@534:0> <> 2) ||
                 ((<check_1148@534:1> <> 0) ||
                  ((<check_1148@534:2> <> 1) ||
                   ((<<check_1148@534:3>@537:0> <> 1) || (<<<check_1148@534:3>@537:1>@553:0> <= 1)))))) ||
             (not
                ((<check_1148@534:0> <> 2) ||
                 ((<check_1148@534:1> <> 1) ||
                  ((<check_1148@534:2> <> 1) ||
                   ((<<check_1148@534:3>@537:0> <> 1) || (<<<check_1148@534:3>@537:1>@553:0> <= 1)))))))
        begin ExtFormula.Formula.case_analysis_boolean(1686229)[5]
          ts: (((<check_1148@534:0> = 2) && ((<check_1148@534:2> = 1) && (<<<check_1148@534:3>@537:1>@553:0> <= 1))) &&
               ((<check_1148@534:1> = 0) || (<check_1148@534:1> = 1)))
          
        end ExtFormula.Formula.case_analysis_boolean(1686229)[5] (0.001000 sec.)
        begin ExtFormula.Formula.case_analysis_boolean(1686403)[5]
          ts: (((<check_1148@534:0> = 2) &&
                ((<check_1148@534:2> = 1) &&
                 ((<<check_1148@534:3>@537:0> = 1) && (<<<check_1148@534:3>@537:1>@553:0> > 1)))) &&
               ((<check_1148@534:1> = 0) || (<check_1148@534:1> = 1)))
          
        end ExtFormula.Formula.case_analysis_boolean(1686403)[5] (0.001000 sec.)
        lb':(((-1 + <check_1148@534:2>) = 0) &&
             (((-2 + <check_1148@534:0>) = 0) &&
              (((1 + (-1 * <check_1148@534:1>)) >= 0) &&
               (((1 + (-1 * <<<check_1148@534:3>@537:1>@553:0>)) >= 0) && (<check_1148@534:1> >= 0)))))
        nub':(((-1 + <<check_1148@534:3>@537:0>) = 0) &&
              (((-1 + <check_1148@534:2>) = 0) &&
               (((-2 + <check_1148@534:0>) = 0) &&
                (((1 + (-1 * <check_1148@534:1>)) >= 0) &&
                 (((-2 + <<<check_1148@534:3>@537:1>@553:0>) >= 0) && (<check_1148@534:1> >= 0))))))
        begin InterpProver.interpolate(1686425)[5]
          begin InterpProver.interpolate_fresh(1686426)[6]
            begin InterpProver.interpolate_log(1686427)[7]
              input1: (((-1 + <check_1148@534:2>) = 0) &&
                       (((-2 + <check_1148@534:0>) = 0) &&
                        (((1 + (-1 * <check_1148@534:1>)) >= 0) &&
                         (((1 + (-1 * <<<check_1148@534:3>@537:1>@553:0>)) >= 0) && (<check_1148@534:1> >= 0)))))
              input2: (((-1 + <<check_1148@534:3>@537:0>) = 0) &&
                       (((-1 + <check_1148@534:2>) = 0) &&
                        (((-2 + <check_1148@534:0>) = 0) &&
                         (((1 + (-1 * <check_1148@534:1>)) >= 0) &&
                          (((-2 + <<<check_1148@534:3>@537:1>@553:0>) >= 0) && (<check_1148@534:1> >= 0))))))
              begin InterpProver.interpolate_check(1686428)[8]
                begin InterpProver.interpolate_simplify(1686429)[9]
                  begin InterpProver.interpolate_quick(1686879)[10]
                    begin CsisatInterface.interpolate_csisat_wrap(1686888)[11]
                      begin CsisatInterface.interpolate_csisat_post_process(1686889)[12]
                        begin CsisatInterface.interpolate_csisat_log(1686890)[13]
                          input1: (1 = v_sep_check_1148_sep_534_sep_2 & 2 = v_sep_check_1148_sep_534_sep_0 & 0 <= v_sep_check_1148_sep_534_sep_1 & v_sep_check_1148_sep_534_sep_1 <= 1 & v_sep_check_1148_sep_534_sep_3_sep_537_sep_1_sep_553_sep_0 <= 1)
                          input2: (1 = v_sep_check_1148_sep_534_sep_2 & 2 = v_sep_check_1148_sep_534_sep_0 & 0 <= v_sep_check_1148_sep_534_sep_1 & 2 <= v_sep_check_1148_sep_534_sep_3_sep_537_sep_1_sep_553_sep_0 & v_sep_check_1148_sep_534_sep_1 <= 1)
                          begin CsisatInterface.interpolate_csisat_raw(1686891)[14]
                            
                          end CsisatInterface.interpolate_csisat_raw(1686891)[14] (0.000000 sec.)
                          output: 2*v_sep_check_1148_sep_534_sep_3_sep_537_sep_1_sep_553_sep_0 <= 2
                          
                        end CsisatInterface.interpolate_csisat_log(1686890)[13] (0.000000 sec.)
                        after simplification: 2*v_sep_check_1148_sep_534_sep_3_sep_537_sep_1_sep_553_sep_0 <= 2
                        after dnf conversion: ((2*v_sep_check_1148_sep_534_sep_3_sep_537_sep_1_sep_553_sep_0 <= 2))
                        
                      end CsisatInterface.interpolate_csisat_post_process(1686889)[12] (0.000000 sec.)
                      
                    end CsisatInterface.interpolate_csisat_wrap(1686888)[11] (0.000000 sec.)
                    
                  end InterpProver.interpolate_quick(1686879)[10] (0.000000 sec.)
                  
                end InterpProver.interpolate_simplify(1686429)[9] (0.002000 sec.)
                
              end InterpProver.interpolate_check(1686428)[8] (0.002999 sec.)
              output: (<<<check_1148@534:3>@537:1>@553:0> <= 1)
            end InterpProver.interpolate_log(1686427)[7] (0.002999 sec.)
            
          end InterpProver.interpolate_fresh(1686426)[6] (0.002999 sec.)
          
        end InterpProver.interpolate(1686425)[5] (0.002999 sec.)
        output:
          P[<<<check_1148@534:3>@537:1>@553:0>](<check_1148@534:0>:int,<check_1148@534:1>:int,<check_1148@534:2>:int,<<check_1148@534:3>@537:0>:int,<<<check_1148@534:3>@537:1>@553:0>:int) =
          (<<<check_1148@534:3>@537:1>@553:0> <= 1)
          P[<<<check_1148@534:3>@569:1>@585:0>](<check_1148@534:0>:int,<check_1148@534:1>:int,<check_1148@534:2>:int,<<check_1148@534:3>@537:0>:int,<<<check_1148@534:3>@537:1>@553:0>:int) =
          (<<<check_1148@534:3>@537:1>@553:0> <= 1)
          P[<<<check_1148@560:3>@563:1>@591:0>](<check_1148@534:0>:int,<check_1148@534:1>:int,<check_1148@534:2>:int,<<check_1148@534:3>@537:0>:int,<<<check_1148@534:3>@537:1>@553:0>:int) =
          (<<<check_1148@534:3>@537:1>@553:0> <= 1)
      end ApronInterface.convex_hull_interpolate(1686118)[4] (0.004999 sec.)
      Horn clauses:
        P[<fail_1487@596:0>](<fail_1487@596:0>:bool)|- bot
        
        P[<check_1148@560:2>](<f_check_1482@593:2>:int,<f_check_1482@593:0>:int,<f_check_1482@593:1>:int),
        ((<f_check_1482@593:0> < <f_check_1482@593:2>) && ((<f_check_1482@593:1> < 1) && <fail_1487@596:0>))
        |- P[<fail_1487@596:0>](<fail_1487@596:0>:bool)
        
        P[<<array_max_1033@455:3>@530:0>](<make_array_1030@571:0>:int,0:int,<check_1148@534:2>:int),
        P[<<check_1148@534:3>@569:0>](<make_array_1030@571:0>:int,0:int,<check_1148@534:2>:int,<make_array_1030@571:1>:int),
        (<make_array_1030@571:1> > 1) |- bot
        
        P[<check_1148@534:2>](<check_1148@534:0>:int,<check_1148@534:1>:int,<check_1148@534:2>:int),
        P[<<check_1148@560:3>@563:0>](<check_1148@534:0>:int,(1 + <check_1148@534:1>):int,<check_1148@534:2>:int,<<check_1148@534:3>@569:0>:int),
        (<check_1148@534:1> < <check_1148@534:0>)
        |- P[<<check_1148@534:3>@569:0>](<check_1148@534:0>:int,<check_1148@534:1>:int,
                                         <check_1148@534:2>:int,<<check_1148@534:3>@569:0>:int)
        
        P[<check_1148@560:2>](<check_1148@560:0>:int,<check_1148@560:1>:int,<check_1148@560:2>:int),
        ((<check_1148@560:1> < <check_1148@560:0>) && (<<check_1148@560:3>@563:0> = <check_1148@560:1>))
        |- P[<<check_1148@560:3>@563:0>](<check_1148@560:0>:int,<check_1148@560:1>:int,
                                         <check_1148@560:2>:int,<<check_1148@560:3>@563:0>:int)
        
        P[<check_1148@534:2>](<check_1148@560:0>:int,(-1 + <check_1148@560:1>):int,<check_1148@560:2>:int),
        (<check_1148@560:1> < (1 + <check_1148@560:0>))
        |- P[<check_1148@560:2>](<check_1148@560:0>:int,<check_1148@560:1>:int,
                                 <check_1148@560:2>:int)
        
        P[<<array_max_1033@455:3>@530:0>](<make_array_1030@539:0>:int,0:int,<check_1148@534:2>:int),
        P[<<check_1148@534:3>@537:0>](<make_array_1030@539:0>:int,0:int,<check_1148@534:2>:int,<make_array_1030@539:1>:int),
        (<make_array_1030@539:1> > 1) |- bot
        
        P[<check_1148@534:2>](<check_1148@534:0>:int,<check_1148@534:1>:int,<check_1148@534:2>:int),
        ((<check_1148@534:1> < <check_1148@534:0>) && (<<check_1148@534:3>@537:0> = <check_1148@534:1>))
        |- P[<<check_1148@534:3>@537:0>](<check_1148@534:0>:int,<check_1148@534:1>:int,
                                         <check_1148@534:2>:int,<<check_1148@534:3>@537:0>:int)
        
        P[<<array_max_1033@455:3>@530:0>](<check_1148@534:0>:int,0:int,<check_1148@534:2>:int),
        (<check_1148@534:1> = 0)
        |- P[<check_1148@534:2>](<check_1148@534:0>:int,<check_1148@534:1>:int,
                                 <check_1148@534:2>:int)
        
        P[<array_max_1033@455:1>](<array_max_1033@455:0>:int,<array_max_1033@455:1>:int),
        P[<<<array_max_1033@455:2>@458:1>@474:0>](<array_max_1033@455:0>:int,<array_max_1033@455:1>:int,<array_max_1033@455:1>:int,var1930:int),
        P[<<array_max_1033@478:3>@521:0>](<array_max_1033@455:0>:int,(
                                          1 + <array_max_1033@455:1>):int,<<array_max_1033@455:3>@530:0>:int),
        ((var1930 <= <<array_max_1033@455:3>@530:0>) && (<array_max_1033@455:1> < <array_max_1033@455:0>))
        |- P[<<array_max_1033@455:3>@530:0>](<array_max_1033@455:0>:int,
                                             <array_max_1033@455:1>:int,
                                             <<array_max_1033@455:3>@530:0>:int)
        
        P[<array_max_1033@478:1>](<array_max_1033@478:0>:int,<array_max_1033@478:1>:int),
        P[<<<array_max_1033@478:2>@481:1>@505:0>](<array_max_1033@478:0>:int,<array_max_1033@478:1>:int,<array_max_1033@478:1>:int,<<array_max_1033@478:3>@521:0>:int),
        P[<<array_max_1033@509:3>@512:0>](<array_max_1033@478:0>:int,(
                                          1 + <array_max_1033@478:1>):int,var1931:int),
        ((<<array_max_1033@478:3>@521:0> > var1931) && (<array_max_1033@478:1> < <array_max_1033@478:0>))
        |- P[<<array_max_1033@478:3>@521:0>](<array_max_1033@478:0>:int,
                                             <array_max_1033@478:1>:int,
                                             <<array_max_1033@478:3>@521:0>:int)
        
        P[<array_max_1033@509:1>](<array_max_1033@509:0>:int,<array_max_1033@509:1>:int),
        ((<<array_max_1033@509:3>@512:0> = 0) && (<array_max_1033@509:1> >= <array_max_1033@509:0>))
        |- P[<<array_max_1033@509:3>@512:0>](<array_max_1033@509:0>:int,
                                             <array_max_1033@509:1>:int,
                                             <<array_max_1033@509:3>@512:0>:int)
        
        P[<array_max_1033@478:1>](<array_max_1033@509:0>:int,(-1 + <array_max_1033@509:1>):int),
        P[<<<array_max_1033@478:2>@481:1>@505:0>](<array_max_1033@509:0>:int,(
                                                  -1 + <array_max_1033@509:1>):int,(
                                                  -1 + <array_max_1033@509:1>):int,<f_array_max_1480@507:4>:int),
        (<array_max_1033@509:1> < (1 + <array_max_1033@509:0>))
        |- P[<array_max_1033@509:1>](<array_max_1033@509:0>:int,<array_max_1033@509:1>:int)
        
        P[<<<array_max_1033@455:2>@458:1>@474:0>](<array_max_1033@478:0>:int,(
                                                  -1 + <array_max_1033@478:1>):int,(
                                                  -1 + <array_max_1033@478:1>):int,<f_array_max_1480@476:4>:int),
        P[<array_max_1033@455:1>](<array_max_1033@478:0>:int,(-1 + <array_max_1033@478:1>):int),
        P[<<<array_max_1033@455:2>@485:1>@501:0>](<array_max_1033@478:0>:int,(
                                                  -1 + <array_max_1033@478:1>):int,<<array_max_1033@478:2>@481:0>:int,<<<array_max_1033@478:2>@481:1>@505:0>:int),
        P[<array_max_1033@478:1>](<array_max_1033@478:0>:int,<array_max_1033@478:1>:int),
        (<array_max_1033@478:1> < (1 + <array_max_1033@478:0>))
        |- P[<<<array_max_1033@478:2>@481:1>@505:0>](<array_max_1033@478:0>:int,
                                                     <array_max_1033@478:1>:int,
                                                     <<array_max_1033@478:2>@481:0>:int,
                                                     <<<array_max_1033@478:2>@481:1>@505:0>:int)
        
        P[<array_max_1033@455:1>](<array_max_1033@455:0>:int,<array_max_1033@455:1>:int),
        ((<array_max_1033@455:1> = 0) && (<<<array_max_1033@455:2>@485:1>@501:0> <= 1))
        |- P[<<<array_max_1033@455:2>@485:1>@501:0>](<array_max_1033@455:0>:int,
                                                     <array_max_1033@455:1>:int,
                                                     <<array_max_1033@455:2>@485:0>:int,
                                                     <<<array_max_1033@455:2>@485:1>@501:0>:int)
        
        P[<<array_max_1033@455:2>@485:0>](<make_array_1030@487:0>:int,0:int,<make_array_1030@487:1>:int),
        (<make_array_1030@487:1> > 1) |- bot
        
        P[<array_max_1033@455:1>](<array_max_1033@455:0>:int,<array_max_1033@455:1>:int),
        P[<<<array_max_1033@455:2>@458:1>@474:0>](<array_max_1033@455:0>:int,<array_max_1033@455:1>:int,<array_max_1033@455:1>:int,var1932:int),
        P[<<array_max_1033@478:2>@481:0>](<array_max_1033@455:0>:int,(
                                          1 + <array_max_1033@455:1>):int,<<array_max_1033@455:2>@485:0>:int),
        (<array_max_1033@455:1> < <array_max_1033@455:0>)
        |- P[<<array_max_1033@455:2>@485:0>](<array_max_1033@455:0>:int,
                                             <array_max_1033@455:1>:int,
                                             <<array_max_1033@455:2>@485:0>:int)
        
        P[<array_max_1033@478:1>](<array_max_1033@478:0>:int,<array_max_1033@478:1>:int),
        ((<array_max_1033@478:1> < <array_max_1033@478:0>) && (<<array_max_1033@478:2>@481:0> = <array_max_1033@478:1>))
        |- P[<<array_max_1033@478:2>@481:0>](<array_max_1033@478:0>:int,
                                             <array_max_1033@478:1>:int,
                                             <<array_max_1033@478:2>@481:0>:int)
        
        P[<array_max_1033@455:1>](<array_max_1033@478:0>:int,(-1 + <array_max_1033@478:1>):int),
        P[<<<array_max_1033@455:2>@458:1>@474:0>](<array_max_1033@478:0>:int,(
                                                  -1 + <array_max_1033@478:1>):int,(
                                                  -1 + <array_max_1033@478:1>):int,<f_array_max_1480@476:4>:int),
        (<array_max_1033@478:1> < (1 + <array_max_1033@478:0>))
        |- P[<array_max_1033@478:1>](<array_max_1033@478:0>:int,<array_max_1033@478:1>:int)
        
        P[<array_max_1033@455:1>](<array_max_1033@455:0>:int,<array_max_1033@455:1>:int),
        ((<array_max_1033@455:1> = 0) && (<<<array_max_1033@455:2>@458:1>@474:0> <= 1))
        |- P[<<<array_max_1033@455:2>@458:1>@474:0>](<array_max_1033@455:0>:int,
                                                     <array_max_1033@455:1>:int,
                                                     <<array_max_1033@455:2>@458:0>:int,
                                                     <<<array_max_1033@455:2>@458:1>@474:0>:int)
        
        P[<<array_max_1033@455:2>@458:0>](<make_array_1030@460:0>:int,0:int,<make_array_1030@460:1>:int),
        (<make_array_1030@460:1> > 1) |- bot
        
        P[<array_max_1033@455:1>](<array_max_1033@455:0>:int,<array_max_1033@455:1>:int),
        ((<array_max_1033@455:1> < <array_max_1033@455:0>) && (<<array_max_1033@455:2>@458:0> = <array_max_1033@455:1>))
        |- P[<<array_max_1033@455:2>@458:0>](<array_max_1033@455:0>:int,
                                             <array_max_1033@455:1>:int,
                                             <<array_max_1033@455:2>@458:0>:int)
        
         (<array_max_1033@455:1> = 0)
        |- P[<array_max_1033@455:1>](<array_max_1033@455:0>:int,<array_max_1033@455:1>:int)
      lower bounds:
        P[<array_max_1033@455:1>](<array_max_1033@455:0>:int,<array_max_1033@455:1>:int) = (<array_max_1033@455:1> = 0)
        P[<<<array_max_1033@455:2>@485:1>@501:0>](<array_max_1033@455:0>:int,<array_max_1033@455:1>:int,<<array_max_1033@455:2>@485:0>:int,<<<array_max_1033@455:2>@485:1>@501:0>:int) =
        ((<array_max_1033@455:1> = 0) && (<<<array_max_1033@455:2>@485:1>@501:0> <= 1))
        P[<<<array_max_1033@455:2>@458:1>@474:0>](<array_max_1033@455:0>:int,<array_max_1033@455:1>:int,<<array_max_1033@455:2>@458:0>:int,<<<array_max_1033@455:2>@458:1>@474:0>:int) =
        ((<array_max_1033@455:1> = 0) && (<<<array_max_1033@455:2>@458:1>@474:0> <= 1))
        P[<<array_max_1033@455:2>@458:0>](<array_max_1033@455:0>:int,<array_max_1033@455:1>:int,<<array_max_1033@455:2>@458:0>:int) =
        ((<array_max_1033@455:1> = 0) &&
         ((<array_max_1033@455:1> < <array_max_1033@455:0>) &&
          (<<array_max_1033@455:2>@458:0> = <array_max_1033@455:1>)))
        P[<array_max_1033@478:1>](<array_max_1033@478:0>:int,<array_max_1033@478:1>:int) =
        ((<array_max_1033@478:1> = 1) && (<array_max_1033@478:1> < (1 + <array_max_1033@478:0>)))
        P[<<<array_max_1033@478:2>@481:1>@505:0>](<array_max_1033@478:0>:int,<array_max_1033@478:1>:int,<<array_max_1033@478:2>@481:0>:int,<<<array_max_1033@478:2>@481:1>@505:0>:int) =
        ((<array_max_1033@478:1> = 1) &&
         ((<<<array_max_1033@478:2>@481:1>@505:0> <= 1) && (<array_max_1033@478:1> < (1 + <array_max_1033@478:0>))))
        P[<<array_max_1033@478:2>@481:0>](<array_max_1033@478:0>:int,<array_max_1033@478:1>:int,<<array_max_1033@478:2>@481:0>:int) =
        ((<array_max_1033@478:1> = 1) &&
         ((<array_max_1033@478:1> < <array_max_1033@478:0>) &&
          (<<array_max_1033@478:2>@481:0> = <array_max_1033@478:1>)))
        P[<array_max_1033@509:1>](<array_max_1033@509:0>:int,<array_max_1033@509:1>:int) =
        ((<array_max_1033@509:1> = 2) && (<array_max_1033@509:1> < (1 + <array_max_1033@509:0>)))
        P[<<array_max_1033@455:2>@485:0>](<array_max_1033@455:0>:int,<array_max_1033@455:1>:int,<<array_max_1033@455:2>@485:0>:int) =
        ((<array_max_1033@455:1> = 0) &&
         (((1 + <array_max_1033@455:1>) < <array_max_1033@455:0>) &&
          (<<array_max_1033@455:2>@485:0> = (1 + <array_max_1033@455:1>))))
        P[<<array_max_1033@509:3>@512:0>](<array_max_1033@509:0>:int,<array_max_1033@509:1>:int,<<array_max_1033@509:3>@512:0>:int) =
        ((<<array_max_1033@509:3>@512:0> = 0) &&
         ((<array_max_1033@509:1> = 2) && (<array_max_1033@509:1> = <array_max_1033@509:0>)))
        P[<<array_max_1033@478:3>@521:0>](<array_max_1033@478:0>:int,<array_max_1033@478:1>:int,<<array_max_1033@478:3>@521:0>:int) =
        ((<<array_max_1033@478:3>@521:0> = 1) &&
         ((<array_max_1033@478:1> = 1) && ((1 + <array_max_1033@478:1>) = <array_max_1033@478:0>)))
        P[<<array_max_1033@455:3>@530:0>](<array_max_1033@455:0>:int,<array_max_1033@455:1>:int,<<array_max_1033@455:3>@530:0>:int) =
        ((<<array_max_1033@455:3>@530:0> = 1) &&
         ((<array_max_1033@455:1> = 0) && ((2 + <array_max_1033@455:1>) = <array_max_1033@455:0>)))
        P[<check_1148@534:2>](<check_1148@534:0>:int,<check_1148@534:1>:int,<check_1148@534:2>:int) =
        ((<check_1148@534:1> = 0) && ((<check_1148@534:2> = 1) && (<check_1148@534:0> = 2)))
        P[<check_1148@560:2>](<check_1148@560:0>:int,<check_1148@560:1>:int,<check_1148@560:2>:int) =
        ((<check_1148@560:1> = 1) && ((<check_1148@560:2> = 1) && (<check_1148@560:0> = 2)))
        P[<<check_1148@534:3>@537:0>](<check_1148@534:0>:int,<check_1148@534:1>:int,<check_1148@534:2>:int,<<check_1148@534:3>@537:0>:int) =
        ((<check_1148@534:1> = 0) &&
         ((<check_1148@534:2> = 1) && ((<check_1148@534:0> = 2) && (<<check_1148@534:3>@537:0> = <check_1148@534:1>))))
        P[<fail_1487@596:0>](<fail_1487@596:0>:bool) = false
        P[<<check_1148@560:3>@563:0>](<check_1148@560:0>:int,<check_1148@560:1>:int,<check_1148@560:2>:int,<<check_1148@560:3>@563:0>:int) =
        ((<check_1148@560:1> = 1) &&
         ((<check_1148@560:2> = 1) && ((<check_1148@560:0> = 2) && (<<check_1148@560:3>@563:0> = <check_1148@560:1>))))
        P[<<check_1148@534:3>@569:0>](<check_1148@534:0>:int,<check_1148@534:1>:int,<check_1148@534:2>:int,<<check_1148@534:3>@569:0>:int) =
        ((<check_1148@534:1> = 0) &&
         ((<check_1148@534:2> = 1) &&
          ((<check_1148@534:0> = 2) && (<<check_1148@534:3>@569:0> = (1 + <check_1148@534:1>)))))
      upper bounds:
        P[<<check_1148@534:3>@569:0>](var2314:int,var2315:int,var2316:int,var2317:int) =
        ((var2314 <> 2) || ((var2315 <> 0) || ((var2316 <> 1) || (var2317 <= 1))))
        P[<<check_1148@560:3>@563:0>](var2310:int,var2311:int,var2312:int,var2313:int) =
        ((var2310 <> 2) || ((var2311 <> 1) || ((var2312 <> 1) || (var2313 <= 1))))
        P[<<check_1148@534:3>@537:0>](var2306:int,var2307:int,var2308:int,var2309:int) =
        ((var2306 <> 2) || ((var2307 <> 0) || ((var2308 <> 1) || (var2309 <= 1))))
      begin GenHcSolver.classify_pids(1730490)[4]
        output:
          [<<check_1148@534:3>@537:0>;<<check_1148@560:3>@563:0>;<<check_1148@534:3>@569:0>]
      end GenHcSolver.classify_pids(1730490)[4] (0.002999 sec.)
      begin ApronInterface.convex_hull_interpolate(1730813)[4]
        lb:(((<check_1148@534:1> = 0) &&
             ((<check_1148@534:2> = 1) &&
              ((<check_1148@534:0> = 2) && (<<check_1148@534:3>@537:0> = <check_1148@534:1>)))) ||
            (((<check_1148@534:1> = 1) &&
              ((<check_1148@534:2> = 1) &&
               ((<check_1148@534:0> = 2) && (<<check_1148@534:3>@537:0> = <check_1148@534:1>)))) ||
             ((<check_1148@534:1> = 0) &&
              ((<check_1148@534:2> = 1) &&
               ((<check_1148@534:0> = 2) && (<<check_1148@534:3>@537:0> = (1 + <check_1148@534:1>)))))))
        nub:((not
                ((<check_1148@534:0> <> 2) ||
                 ((<check_1148@534:1> <> 1) || ((<check_1148@534:2> <> 1) || (<<check_1148@534:3>@537:0> <= 1))))) ||
             (not
                ((<check_1148@534:0> <> 2) ||
                 ((<check_1148@534:1> <> 0) || ((<check_1148@534:2> <> 1) || (<<check_1148@534:3>@537:0> <= 1))))))
        begin ExtFormula.Formula.case_analysis_boolean(1731017)[5]
          ts: (((<check_1148@534:2> = 1) && (<check_1148@534:0> = 2)) &&
               (((<check_1148@534:1> = 0) && (<<check_1148@534:3>@537:0> = <check_1148@534:1>)) ||
                (((<check_1148@534:1> = 1) && (<<check_1148@534:3>@537:0> = <check_1148@534:1>)) ||
                 ((<check_1148@534:1> = 0) && (<<check_1148@534:3>@537:0> = (1 + <check_1148@534:1>))))))
          
        end ExtFormula.Formula.case_analysis_boolean(1731017)[5] (0.002000 sec.)
        begin ExtFormula.Formula.case_analysis_boolean(1731153)[5]
          ts: (((<check_1148@534:0> = 2) && ((<check_1148@534:2> = 1) && (<<check_1148@534:3>@537:0> > 1))) &&
               ((<check_1148@534:1> = 0) || (<check_1148@534:1> = 1)))
          
        end ExtFormula.Formula.case_analysis_boolean(1731153)[5] (0.001000 sec.)
        lb':(((-1 + <check_1148@534:2>) = 0) &&
             (((-2 + <check_1148@534:0>) = 0) &&
              (((<<check_1148@534:3>@537:0> + (-1 * <check_1148@534:1>)) >= 0) &&
               (((1 + (-1 * <<check_1148@534:3>@537:0>)) >= 0) && (<check_1148@534:1> >= 0)))))
        nub':(((-1 + <check_1148@534:2>) = 0) &&
              (((-2 + <check_1148@534:0>) = 0) &&
               (((1 + (-1 * <check_1148@534:1>)) >= 0) &&
                (((-2 + <<check_1148@534:3>@537:0>) >= 0) && (<check_1148@534:1> >= 0)))))
        begin InterpProver.interpolate(1731171)[5]
          begin InterpProver.interpolate_fresh(1731172)[6]
            begin InterpProver.interpolate_log(1731173)[7]
              input1: (((-1 + <check_1148@534:2>) = 0) &&
                       (((-2 + <check_1148@534:0>) = 0) &&
                        (((<<check_1148@534:3>@537:0> + (-1 * <check_1148@534:1>)) >= 0) &&
                         (((1 + (-1 * <<check_1148@534:3>@537:0>)) >= 0) && (<check_1148@534:1> >= 0)))))
              input2: (((-1 + <check_1148@534:2>) = 0) &&
                       (((-2 + <check_1148@534:0>) = 0) &&
                        (((1 + (-1 * <check_1148@534:1>)) >= 0) &&
                         (((-2 + <<check_1148@534:3>@537:0>) >= 0) && (<check_1148@534:1> >= 0)))))
              begin InterpProver.interpolate_check(1731174)[8]
                begin InterpProver.interpolate_simplify(1731175)[9]
                  begin InterpProver.interpolate_quick(1731454)[10]
                    begin CsisatInterface.interpolate_csisat_wrap(1731463)[11]
                      begin CsisatInterface.interpolate_csisat_post_process(1731464)[12]
                        begin CsisatInterface.interpolate_csisat_log(1731465)[13]
                          input1: (1 = v_sep_check_1148_sep_534_sep_2 & 2 = v_sep_check_1148_sep_534_sep_0 & 0 <= v_sep_check_1148_sep_534_sep_1 & v_sep_check_1148_sep_534_sep_1 <= v_sep_check_1148_sep_534_sep_3_sep_537_sep_0 & v_sep_check_1148_sep_534_sep_3_sep_537_sep_0 <= 1)
                          input2: (1 = v_sep_check_1148_sep_534_sep_2 & 2 = v_sep_check_1148_sep_534_sep_0 & 0 <= v_sep_check_1148_sep_534_sep_1 & 2 <= v_sep_check_1148_sep_534_sep_3_sep_537_sep_0 & v_sep_check_1148_sep_534_sep_1 <= 1)
                          begin CsisatInterface.interpolate_csisat_raw(1731466)[14]
                            
                          end CsisatInterface.interpolate_csisat_raw(1731466)[14] (0.000000 sec.)
                          output: 2*v_sep_check_1148_sep_534_sep_3_sep_537_sep_0 <= 2
                          
                        end CsisatInterface.interpolate_csisat_log(1731465)[13] (0.000000 sec.)
                        after simplification: 2*v_sep_check_1148_sep_534_sep_3_sep_537_sep_0 <= 2
                        after dnf conversion: ((2*v_sep_check_1148_sep_534_sep_3_sep_537_sep_0 <= 2))
                        
                      end CsisatInterface.interpolate_csisat_post_process(1731464)[12] (0.000000 sec.)
                      
                    end CsisatInterface.interpolate_csisat_wrap(1731463)[11] (0.000000 sec.)
                    
                  end InterpProver.interpolate_quick(1731454)[10] (0.000000 sec.)
                  
                end InterpProver.interpolate_simplify(1731175)[9] (0.001999 sec.)
                
              end InterpProver.interpolate_check(1731174)[8] (0.001999 sec.)
              output: (<<check_1148@534:3>@537:0> <= 1)
            end InterpProver.interpolate_log(1731173)[7] (0.002999 sec.)
            
          end InterpProver.interpolate_fresh(1731172)[6] (0.002999 sec.)
          
        end InterpProver.interpolate(1731171)[5] (0.002999 sec.)
        output:
          P[<<check_1148@534:3>@537:0>](<check_1148@534:0>:int,<check_1148@534:1>:int,<check_1148@534:2>:int,<<check_1148@534:3>@537:0>:int) =
          (<<check_1148@534:3>@537:0> <= 1)
          P[<<check_1148@560:3>@563:0>](<check_1148@534:0>:int,<check_1148@534:1>:int,<check_1148@534:2>:int,<<check_1148@534:3>@537:0>:int) =
          (<<check_1148@534:3>@537:0> <= 1)
          P[<<check_1148@534:3>@569:0>](<check_1148@534:0>:int,<check_1148@534:1>:int,<check_1148@534:2>:int,<<check_1148@534:3>@537:0>:int) =
          (<<check_1148@534:3>@537:0> <= 1)
      end ApronInterface.convex_hull_interpolate(1730813)[4] (0.006999 sec.)
      Horn clauses:
        P[<fail_1487@596:0>](<fail_1487@596:0>:bool)|- bot
        
        P[<check_1148@560:2>](<f_check_1482@593:2>:int,<f_check_1482@593:0>:int,<f_check_1482@593:1>:int),
        ((<f_check_1482@593:0> < <f_check_1482@593:2>) && ((<f_check_1482@593:1> < 1) && <fail_1487@596:0>))
        |- P[<fail_1487@596:0>](<fail_1487@596:0>:bool)
        
        P[<check_1148@560:2>](<check_1148@560:0>:int,<<check_1148@560:3>@563:0>:int,<check_1148@560:2>:int),
        ((<<check_1148@560:3>@563:0> < <check_1148@560:0>) && (<<check_1148@560:3>@563:0> > 1)) |- bot
        
        P[<check_1148@534:2>](<check_1148@560:0>:int,(-1 + <check_1148@560:1>):int,<check_1148@560:2>:int),
        (<check_1148@560:1> < (1 + <check_1148@560:0>))
        |- P[<check_1148@560:2>](<check_1148@560:0>:int,<check_1148@560:1>:int,
                                 <check_1148@560:2>:int)
        
        P[<check_1148@534:2>](<check_1148@534:0>:int,<<check_1148@534:3>@537:0>:int,<check_1148@534:2>:int),
        ((<<check_1148@534:3>@537:0> < <check_1148@534:0>) && (<<check_1148@534:3>@537:0> > 1)) |- bot
        
        P[<<array_max_1033@455:3>@530:0>](<check_1148@534:0>:int,0:int,<check_1148@534:2>:int),
        (<check_1148@534:1> = 0)
        |- P[<check_1148@534:2>](<check_1148@534:0>:int,<check_1148@534:1>:int,
                                 <check_1148@534:2>:int)
        
        P[<array_max_1033@455:1>](<array_max_1033@455:0>:int,<array_max_1033@455:1>:int),
        P[<<<array_max_1033@455:2>@458:1>@474:0>](<array_max_1033@455:0>:int,<array_max_1033@455:1>:int,<array_max_1033@455:1>:int,var1930:int),
        P[<<array_max_1033@478:3>@521:0>](<array_max_1033@455:0>:int,(
                                          1 + <array_max_1033@455:1>):int,<<array_max_1033@455:3>@530:0>:int),
        ((var1930 <= <<array_max_1033@455:3>@530:0>) && (<array_max_1033@455:1> < <array_max_1033@455:0>))
        |- P[<<array_max_1033@455:3>@530:0>](<array_max_1033@455:0>:int,
                                             <array_max_1033@455:1>:int,
                                             <<array_max_1033@455:3>@530:0>:int)
        
        P[<array_max_1033@478:1>](<array_max_1033@478:0>:int,<array_max_1033@478:1>:int),
        P[<<<array_max_1033@478:2>@481:1>@505:0>](<array_max_1033@478:0>:int,<array_max_1033@478:1>:int,<array_max_1033@478:1>:int,<<array_max_1033@478:3>@521:0>:int),
        P[<<array_max_1033@509:3>@512:0>](<array_max_1033@478:0>:int,(
                                          1 + <array_max_1033@478:1>):int,var1931:int),
        ((<<array_max_1033@478:3>@521:0> > var1931) && (<array_max_1033@478:1> < <array_max_1033@478:0>))
        |- P[<<array_max_1033@478:3>@521:0>](<array_max_1033@478:0>:int,
                                             <array_max_1033@478:1>:int,
                                             <<array_max_1033@478:3>@521:0>:int)
        
        P[<array_max_1033@509:1>](<array_max_1033@509:0>:int,<array_max_1033@509:1>:int),
        ((<<array_max_1033@509:3>@512:0> = 0) && (<array_max_1033@509:1> >= <array_max_1033@509:0>))
        |- P[<<array_max_1033@509:3>@512:0>](<array_max_1033@509:0>:int,
                                             <array_max_1033@509:1>:int,
                                             <<array_max_1033@509:3>@512:0>:int)
        
        P[<array_max_1033@478:1>](<array_max_1033@509:0>:int,(-1 + <array_max_1033@509:1>):int),
        P[<<<array_max_1033@478:2>@481:1>@505:0>](<array_max_1033@509:0>:int,(
                                                  -1 + <array_max_1033@509:1>):int,(
                                                  -1 + <array_max_1033@509:1>):int,<f_array_max_1480@507:4>:int),
        (<array_max_1033@509:1> < (1 + <array_max_1033@509:0>))
        |- P[<array_max_1033@509:1>](<array_max_1033@509:0>:int,<array_max_1033@509:1>:int)
        
        P[<<<array_max_1033@455:2>@458:1>@474:0>](<array_max_1033@478:0>:int,(
                                                  -1 + <array_max_1033@478:1>):int,(
                                                  -1 + <array_max_1033@478:1>):int,<f_array_max_1480@476:4>:int),
        P[<array_max_1033@455:1>](<array_max_1033@478:0>:int,(-1 + <array_max_1033@478:1>):int),
        P[<<<array_max_1033@455:2>@485:1>@501:0>](<array_max_1033@478:0>:int,(
                                                  -1 + <array_max_1033@478:1>):int,<<array_max_1033@478:2>@481:0>:int,<<<array_max_1033@478:2>@481:1>@505:0>:int),
        P[<array_max_1033@478:1>](<array_max_1033@478:0>:int,<array_max_1033@478:1>:int),
        (<array_max_1033@478:1> < (1 + <array_max_1033@478:0>))
        |- P[<<<array_max_1033@478:2>@481:1>@505:0>](<array_max_1033@478:0>:int,
                                                     <array_max_1033@478:1>:int,
                                                     <<array_max_1033@478:2>@481:0>:int,
                                                     <<<array_max_1033@478:2>@481:1>@505:0>:int)
        
        P[<array_max_1033@455:1>](<array_max_1033@455:0>:int,<array_max_1033@455:1>:int),
        ((<array_max_1033@455:1> = 0) && (<<<array_max_1033@455:2>@485:1>@501:0> <= 1))
        |- P[<<<array_max_1033@455:2>@485:1>@501:0>](<array_max_1033@455:0>:int,
                                                     <array_max_1033@455:1>:int,
                                                     <<array_max_1033@455:2>@485:0>:int,
                                                     <<<array_max_1033@455:2>@485:1>@501:0>:int)
        
        P[<<array_max_1033@455:2>@485:0>](<make_array_1030@487:0>:int,0:int,<make_array_1030@487:1>:int),
        (<make_array_1030@487:1> > 1) |- bot
        
        P[<array_max_1033@455:1>](<array_max_1033@455:0>:int,<array_max_1033@455:1>:int),
        P[<<<array_max_1033@455:2>@458:1>@474:0>](<array_max_1033@455:0>:int,<array_max_1033@455:1>:int,<array_max_1033@455:1>:int,var1932:int),
        P[<<array_max_1033@478:2>@481:0>](<array_max_1033@455:0>:int,(
                                          1 + <array_max_1033@455:1>):int,<<array_max_1033@455:2>@485:0>:int),
        (<array_max_1033@455:1> < <array_max_1033@455:0>)
        |- P[<<array_max_1033@455:2>@485:0>](<array_max_1033@455:0>:int,
                                             <array_max_1033@455:1>:int,
                                             <<array_max_1033@455:2>@485:0>:int)
        
        P[<array_max_1033@478:1>](<array_max_1033@478:0>:int,<array_max_1033@478:1>:int),
        ((<array_max_1033@478:1> < <array_max_1033@478:0>) && (<<array_max_1033@478:2>@481:0> = <array_max_1033@478:1>))
        |- P[<<array_max_1033@478:2>@481:0>](<array_max_1033@478:0>:int,
                                             <array_max_1033@478:1>:int,
                                             <<array_max_1033@478:2>@481:0>:int)
        
        P[<array_max_1033@455:1>](<array_max_1033@478:0>:int,(-1 + <array_max_1033@478:1>):int),
        P[<<<array_max_1033@455:2>@458:1>@474:0>](<array_max_1033@478:0>:int,(
                                                  -1 + <array_max_1033@478:1>):int,(
                                                  -1 + <array_max_1033@478:1>):int,<f_array_max_1480@476:4>:int),
        (<array_max_1033@478:1> < (1 + <array_max_1033@478:0>))
        |- P[<array_max_1033@478:1>](<array_max_1033@478:0>:int,<array_max_1033@478:1>:int)
        
        P[<array_max_1033@455:1>](<array_max_1033@455:0>:int,<array_max_1033@455:1>:int),
        ((<array_max_1033@455:1> = 0) && (<<<array_max_1033@455:2>@458:1>@474:0> <= 1))
        |- P[<<<array_max_1033@455:2>@458:1>@474:0>](<array_max_1033@455:0>:int,
                                                     <array_max_1033@455:1>:int,
                                                     <<array_max_1033@455:2>@458:0>:int,
                                                     <<<array_max_1033@455:2>@458:1>@474:0>:int)
        
        P[<<array_max_1033@455:2>@458:0>](<make_array_1030@460:0>:int,0:int,<make_array_1030@460:1>:int),
        (<make_array_1030@460:1> > 1) |- bot
        
        P[<array_max_1033@455:1>](<array_max_1033@455:0>:int,<array_max_1033@455:1>:int),
        ((<array_max_1033@455:1> < <array_max_1033@455:0>) && (<<array_max_1033@455:2>@458:0> = <array_max_1033@455:1>))
        |- P[<<array_max_1033@455:2>@458:0>](<array_max_1033@455:0>:int,
                                             <array_max_1033@455:1>:int,
                                             <<array_max_1033@455:2>@458:0>:int)
        
         (<array_max_1033@455:1> = 0)
        |- P[<array_max_1033@455:1>](<array_max_1033@455:0>:int,<array_max_1033@455:1>:int)
      lower bounds:
        P[<array_max_1033@455:1>](<array_max_1033@455:0>:int,<array_max_1033@455:1>:int) = (<array_max_1033@455:1> = 0)
        P[<<<array_max_1033@455:2>@485:1>@501:0>](<array_max_1033@455:0>:int,<array_max_1033@455:1>:int,<<array_max_1033@455:2>@485:0>:int,<<<array_max_1033@455:2>@485:1>@501:0>:int) =
        ((<array_max_1033@455:1> = 0) && (<<<array_max_1033@455:2>@485:1>@501:0> <= 1))
        P[<<<array_max_1033@455:2>@458:1>@474:0>](<array_max_1033@455:0>:int,<array_max_1033@455:1>:int,<<array_max_1033@455:2>@458:0>:int,<<<array_max_1033@455:2>@458:1>@474:0>:int) =
        ((<array_max_1033@455:1> = 0) && (<<<array_max_1033@455:2>@458:1>@474:0> <= 1))
        P[<<array_max_1033@455:2>@458:0>](<array_max_1033@455:0>:int,<array_max_1033@455:1>:int,<<array_max_1033@455:2>@458:0>:int) =
        ((<array_max_1033@455:1> = 0) &&
         ((<array_max_1033@455:1> < <array_max_1033@455:0>) &&
          (<<array_max_1033@455:2>@458:0> = <array_max_1033@455:1>)))
        P[<array_max_1033@478:1>](<array_max_1033@478:0>:int,<array_max_1033@478:1>:int) =
        ((<array_max_1033@478:1> = 1) && (<array_max_1033@478:1> < (1 + <array_max_1033@478:0>)))
        P[<<<array_max_1033@478:2>@481:1>@505:0>](<array_max_1033@478:0>:int,<array_max_1033@478:1>:int,<<array_max_1033@478:2>@481:0>:int,<<<array_max_1033@478:2>@481:1>@505:0>:int) =
        ((<array_max_1033@478:1> = 1) &&
         ((<<<array_max_1033@478:2>@481:1>@505:0> <= 1) && (<array_max_1033@478:1> < (1 + <array_max_1033@478:0>))))
        P[<<array_max_1033@478:2>@481:0>](<array_max_1033@478:0>:int,<array_max_1033@478:1>:int,<<array_max_1033@478:2>@481:0>:int) =
        ((<array_max_1033@478:1> = 1) &&
         ((<array_max_1033@478:1> < <array_max_1033@478:0>) &&
          (<<array_max_1033@478:2>@481:0> = <array_max_1033@478:1>)))
        P[<array_max_1033@509:1>](<array_max_1033@509:0>:int,<array_max_1033@509:1>:int) =
        ((<array_max_1033@509:1> = 2) && (<array_max_1033@509:1> < (1 + <array_max_1033@509:0>)))
        P[<<array_max_1033@455:2>@485:0>](<array_max_1033@455:0>:int,<array_max_1033@455:1>:int,<<array_max_1033@455:2>@485:0>:int) =
        ((<array_max_1033@455:1> = 0) &&
         (((1 + <array_max_1033@455:1>) < <array_max_1033@455:0>) &&
          (<<array_max_1033@455:2>@485:0> = (1 + <array_max_1033@455:1>))))
        P[<<array_max_1033@509:3>@512:0>](<array_max_1033@509:0>:int,<array_max_1033@509:1>:int,<<array_max_1033@509:3>@512:0>:int) =
        ((<<array_max_1033@509:3>@512:0> = 0) &&
         ((<array_max_1033@509:1> = 2) && (<array_max_1033@509:1> = <array_max_1033@509:0>)))
        P[<<array_max_1033@478:3>@521:0>](<array_max_1033@478:0>:int,<array_max_1033@478:1>:int,<<array_max_1033@478:3>@521:0>:int) =
        ((<<array_max_1033@478:3>@521:0> = 1) &&
         ((<array_max_1033@478:1> = 1) && ((1 + <array_max_1033@478:1>) = <array_max_1033@478:0>)))
        P[<<array_max_1033@455:3>@530:0>](<array_max_1033@455:0>:int,<array_max_1033@455:1>:int,<<array_max_1033@455:3>@530:0>:int) =
        ((<<array_max_1033@455:3>@530:0> = 1) &&
         ((<array_max_1033@455:1> = 0) && ((2 + <array_max_1033@455:1>) = <array_max_1033@455:0>)))
        P[<check_1148@534:2>](<check_1148@534:0>:int,<check_1148@534:1>:int,<check_1148@534:2>:int) =
        ((<check_1148@534:1> = 0) && ((<check_1148@534:2> = 1) && (<check_1148@534:0> = 2)))
        P[<check_1148@560:2>](<check_1148@560:0>:int,<check_1148@560:1>:int,<check_1148@560:2>:int) =
        ((<check_1148@560:1> = 1) && ((<check_1148@560:2> = 1) && (<check_1148@560:0> = 2)))
        P[<fail_1487@596:0>](<fail_1487@596:0>:bool) = false
      upper bounds:
        P[<<array_max_1033@455:3>@530:0>](var2336:int,var2337:int,var2338:int) =
        ((var2337 <> 0) || ((1 >= var2336) || (var2338 >= 1)))
        P[<<array_max_1033@478:3>@521:0>](var2331:int,var2332:int,var2333:int) =
        ((var2332 <> 1) || ((var2333 >= 1) || (1 >= var2331)))
        P[<<array_max_1033@509:3>@512:0>](var2326:int,var2327:int,var2328:int) =
        ((var2327 <> 2) || ((1 >= var2326) || (var2328 >= 0)))
      begin GenHcSolver.classify_pids(1768237)[4]
        output:
          [<<array_max_1033@509:3>@512:0>;<<array_max_1033@478:3>@521:0>;<<array_max_1033@455:3>@530:0>]
      end GenHcSolver.classify_pids(1768237)[4] (0.001999 sec.)
      begin ApronInterface.convex_hull_interpolate(1768573)[4]
        lb:(((<<array_max_1033@509:3>@512:0> = 0) &&
             ((<array_max_1033@509:1> = 2) && (<array_max_1033@509:1> = <array_max_1033@509:0>))) ||
            (((<<array_max_1033@509:3>@512:0> = 1) &&
              ((<array_max_1033@509:1> = 1) && ((1 + <array_max_1033@509:1>) = <array_max_1033@509:0>))) ||
             ((<<array_max_1033@509:3>@512:0> = 1) &&
              ((<array_max_1033@509:1> = 0) && ((2 + <array_max_1033@509:1>) = <array_max_1033@509:0>)))))
        nub:((not
                ((<array_max_1033@509:1> <> 2) ||
                 ((1 >= <array_max_1033@509:0>) || (<<array_max_1033@509:3>@512:0> >= 0)))) ||
             ((not
                 ((<array_max_1033@509:1> <> 1) ||
                  ((<<array_max_1033@509:3>@512:0> >= 1) || (1 >= <array_max_1033@509:0>)))) ||
              (not
                 ((<array_max_1033@509:1> <> 0) ||
                  ((1 >= <array_max_1033@509:0>) || (<<array_max_1033@509:3>@512:0> >= 1))))))
        begin ExtFormula.Formula.case_analysis_boolean(1768683)[5]
          ts: (((<<array_max_1033@509:3>@512:0> = 0) &&
                ((<array_max_1033@509:1> = 2) && (<array_max_1033@509:1> = <array_max_1033@509:0>))) ||
               ((<<array_max_1033@509:3>@512:0> = 1) &&
                (((<array_max_1033@509:1> = 1) && ((1 + <array_max_1033@509:1>) = <array_max_1033@509:0>)) ||
                 ((<array_max_1033@509:1> = 0) && ((2 + <array_max_1033@509:1>) = <array_max_1033@509:0>)))))
          
        end ExtFormula.Formula.case_analysis_boolean(1768683)[5] (0.001000 sec.)
        begin ExtFormula.Formula.case_analysis_boolean(1768854)[5]
          ts: ((1 < <array_max_1033@509:0>) &&
               (((<array_max_1033@509:1> = 2) && (<<array_max_1033@509:3>@512:0> < 0)) ||
                ((<<array_max_1033@509:3>@512:0> < 1) && ((<array_max_1033@509:1> = 0) || (<array_max_1033@509:1> = 1)))))
          
        end ExtFormula.Formula.case_analysis_boolean(1768854)[5] (0.000000 sec.)
        lb':(((-2 + <array_max_1033@509:0>) = 0) &&
             ((((2 + (-1 * <<array_max_1033@509:3>@512:0>)) + (-1 * <array_max_1033@509:1>)) >= 0) &&
              (((1 + (-1 * <<array_max_1033@509:3>@512:0>)) >= 0) &&
               (((-2 + (2 * <<array_max_1033@509:3>@512:0>)) + <array_max_1033@509:1>) >= 0))))
        nub':((((1 + (-1 * <<array_max_1033@509:3>@512:0>)) + (-1 * <array_max_1033@509:1>)) >= 0) &&
              (((2 + (-1 * <array_max_1033@509:1>)) >= 0) &&
               (((-1 * <<array_max_1033@509:3>@512:0>) >= 0) &&
                ((<array_max_1033@509:1> >= 0) && ((-2 + <array_max_1033@509:0>) >= 0)))))
        begin InterpProver.interpolate(1768873)[5]
          begin InterpProver.interpolate_fresh(1768874)[6]
            begin InterpProver.interpolate_log(1768875)[7]
              input1: (((-2 + <array_max_1033@509:0>) = 0) &&
                       ((((2 + (-1 * <<array_max_1033@509:3>@512:0>)) + (-1 * <array_max_1033@509:1>)) >= 0) &&
                        (((1 + (-1 * <<array_max_1033@509:3>@512:0>)) >= 0) &&
                         (((-2 + (2 * <<array_max_1033@509:3>@512:0>)) + <array_max_1033@509:1>) >= 0))))
              input2: ((((1 + (-1 * <<array_max_1033@509:3>@512:0>)) + (-1 * <array_max_1033@509:1>)) >= 0) &&
                       (((2 + (-1 * <array_max_1033@509:1>)) >= 0) &&
                        (((-1 * <<array_max_1033@509:3>@512:0>) >= 0) &&
                         ((<array_max_1033@509:1> >= 0) && ((-2 + <array_max_1033@509:0>) >= 0)))))
              begin InterpProver.interpolate_check(1768876)[8]
                begin InterpProver.interpolate_simplify(1768877)[9]
                  begin InterpProver.interpolate_quick(1769164)[10]
                    begin CsisatInterface.interpolate_csisat_wrap(1769173)[11]
                      begin CsisatInterface.interpolate_csisat_post_process(1769174)[12]
                        begin CsisatInterface.interpolate_csisat_log(1769175)[13]
                          input1: (2 = v_sep_array_max_1033_sep_509_sep_0 & 2 <= (v_sep_array_max_1033_sep_509_sep_1 + 2*v_sep_array_max_1033_sep_509_sep_3_sep_512_sep_0) & v_sep_array_max_1033_sep_509_sep_3_sep_512_sep_0 <= 1 & (v_sep_array_max_1033_sep_509_sep_1 + v_sep_array_max_1033_sep_509_sep_3_sep_512_sep_0) <= 2)
                          input2: (0 <= v_sep_array_max_1033_sep_509_sep_1 & 2 <= v_sep_array_max_1033_sep_509_sep_0 & v_sep_array_max_1033_sep_509_sep_1 <= 2 & v_sep_array_max_1033_sep_509_sep_3_sep_512_sep_0 <= 0 & (v_sep_array_max_1033_sep_509_sep_1 + v_sep_array_max_1033_sep_509_sep_3_sep_512_sep_0) <= 1)
                          begin CsisatInterface.interpolate_csisat_raw(1769176)[14]
                            
                          end CsisatInterface.interpolate_csisat_raw(1769176)[14] (0.001000 sec.)
                          output: (-4*v_sep_array_max_1033_sep_509_sep_3_sep_512_sep_0 + -2*v_sep_array_max_1033_sep_509_sep_1) <= -4
                          
                        end CsisatInterface.interpolate_csisat_log(1769175)[13] (0.001000 sec.)
                        after simplification: (-4*v_sep_array_max_1033_sep_509_sep_3_sep_512_sep_0 + -2*v_sep_array_max_1033_sep_509_sep_1) <= -4
                        after dnf conversion: (((-4*v_sep_array_max_1033_sep_509_sep_3_sep_512_sep_0 + -2*v_sep_array_max_1033_sep_509_sep_1) <= -4))
                        
                      end CsisatInterface.interpolate_csisat_post_process(1769174)[12] (0.001000 sec.)
                      
                    end CsisatInterface.interpolate_csisat_wrap(1769173)[11] (0.001000 sec.)
                    
                  end InterpProver.interpolate_quick(1769164)[10] (0.001999 sec.)
                  
                end InterpProver.interpolate_simplify(1768877)[9] (0.002999 sec.)
                
              end InterpProver.interpolate_check(1768876)[8] (0.003999 sec.)
              output: (2 <= ((2 * <<array_max_1033@509:3>@512:0>) + <array_max_1033@509:1>))
            end InterpProver.interpolate_log(1768875)[7] (0.003999 sec.)
            
          end InterpProver.interpolate_fresh(1768874)[6] (0.003999 sec.)
          
        end InterpProver.interpolate(1768873)[5] (0.003999 sec.)
        output:
          P[<<array_max_1033@509:3>@512:0>](<array_max_1033@509:0>:int,<array_max_1033@509:1>:int,<<array_max_1033@509:3>@512:0>:int) =
          (2 <= ((2 * <<array_max_1033@509:3>@512:0>) + <array_max_1033@509:1>))
          P[<<array_max_1033@478:3>@521:0>](<array_max_1033@509:0>:int,<array_max_1033@509:1>:int,<<array_max_1033@509:3>@512:0>:int) =
          (2 <= ((2 * <<array_max_1033@509:3>@512:0>) + <array_max_1033@509:1>))
          P[<<array_max_1033@455:3>@530:0>](<array_max_1033@509:0>:int,<array_max_1033@509:1>:int,<<array_max_1033@509:3>@512:0>:int) =
          (2 <= ((2 * <<array_max_1033@509:3>@512:0>) + <array_max_1033@509:1>))
      end ApronInterface.convex_hull_interpolate(1768573)[4] (0.007999 sec.)
      Horn clauses:
        P[<fail_1487@596:0>](<fail_1487@596:0>:bool)|- bot
        
        P[<check_1148@560:2>](<f_check_1482@593:2>:int,<f_check_1482@593:0>:int,<f_check_1482@593:1>:int),
        ((<f_check_1482@593:0> < <f_check_1482@593:2>) && ((<f_check_1482@593:1> < 1) && <fail_1487@596:0>))
        |- P[<fail_1487@596:0>](<fail_1487@596:0>:bool)
        
        P[<check_1148@560:2>](<check_1148@560:0>:int,<<check_1148@560:3>@563:0>:int,<check_1148@560:2>:int),
        ((<<check_1148@560:3>@563:0> < <check_1148@560:0>) && (<<check_1148@560:3>@563:0> > 1)) |- bot
        
        P[<check_1148@534:2>](<check_1148@560:0>:int,(-1 + <check_1148@560:1>):int,<check_1148@560:2>:int),
        (<check_1148@560:1> < (1 + <check_1148@560:0>))
        |- P[<check_1148@560:2>](<check_1148@560:0>:int,<check_1148@560:1>:int,
                                 <check_1148@560:2>:int)
        
        P[<check_1148@534:2>](<check_1148@534:0>:int,<<check_1148@534:3>@537:0>:int,<check_1148@534:2>:int),
        ((<<check_1148@534:3>@537:0> < <check_1148@534:0>) && (<<check_1148@534:3>@537:0> > 1)) |- bot
        
         ((<check_1148@534:1> = 0) && (1 <= <check_1148@534:2>))
        |- P[<check_1148@534:2>](<check_1148@534:0>:int,<check_1148@534:1>:int,
                                 <check_1148@534:2>:int)
        
        P[<array_max_1033@455:1>](<array_max_1033@455:0>:int,(1 + (-2 * <<array_max_1033@455:3>@530:0>)):int),
        P[<<<array_max_1033@455:2>@458:1>@474:0>](<array_max_1033@455:0>:int,(
                                                  1 + (-2 * <<array_max_1033@455:3>@530:0>)):int,(
                                                  1 + (-2 * <<array_max_1033@455:3>@530:0>)):int,var1930:int),
        ((var1930 <= <<array_max_1033@455:3>@530:0>) &&
         (1 < ((2 * <<array_max_1033@455:3>@530:0>) + <array_max_1033@455:0>))) |- bot
        
        P[<array_max_1033@478:1>](<array_max_1033@478:0>:int,<array_max_1033@478:1>:int),
        P[<<<array_max_1033@478:2>@481:1>@505:0>](<array_max_1033@478:0>:int,<array_max_1033@478:1>:int,<array_max_1033@478:1>:int,<<array_max_1033@478:3>@521:0>:int),
        ((<array_max_1033@478:1> < <array_max_1033@478:0>) &&
         ((2 > ((2 * <<array_max_1033@478:3>@521:0>) + <array_max_1033@478:1>)) &&
          ((<<array_max_1033@478:3>@521:0> > var1931) && (1 <= ((2 * var1931) + <array_max_1033@478:1>))))) |- bot
        
        P[<array_max_1033@509:1>](<array_max_1033@509:0>:int,<array_max_1033@509:1>:int),
        ((2 > <array_max_1033@509:1>) && (<array_max_1033@509:1> >= <array_max_1033@509:0>)) |- bot
        
        P[<array_max_1033@478:1>](<array_max_1033@509:0>:int,(-1 + <array_max_1033@509:1>):int),
        P[<<<array_max_1033@478:2>@481:1>@505:0>](<array_max_1033@509:0>:int,(
                                                  -1 + <array_max_1033@509:1>):int,(
                                                  -1 + <array_max_1033@509:1>):int,<f_array_max_1480@507:4>:int),
        (<array_max_1033@509:1> < (1 + <array_max_1033@509:0>))
        |- P[<array_max_1033@509:1>](<array_max_1033@509:0>:int,<array_max_1033@509:1>:int)
        
        P[<<<array_max_1033@455:2>@458:1>@474:0>](<array_max_1033@478:0>:int,(
                                                  -1 + <array_max_1033@478:1>):int,(
                                                  -1 + <array_max_1033@478:1>):int,<f_array_max_1480@476:4>:int),
        P[<array_max_1033@455:1>](<array_max_1033@478:0>:int,(-1 + <array_max_1033@478:1>):int),
        P[<<<array_max_1033@455:2>@485:1>@501:0>](<array_max_1033@478:0>:int,(
                                                  -1 + <array_max_1033@478:1>):int,<<array_max_1033@478:2>@481:0>:int,<<<array_max_1033@478:2>@481:1>@505:0>:int),
        P[<array_max_1033@478:1>](<array_max_1033@478:0>:int,<array_max_1033@478:1>:int),
        (<array_max_1033@478:1> < (1 + <array_max_1033@478:0>))
        |- P[<<<array_max_1033@478:2>@481:1>@505:0>](<array_max_1033@478:0>:int,
                                                     <array_max_1033@478:1>:int,
                                                     <<array_max_1033@478:2>@481:0>:int,
                                                     <<<array_max_1033@478:2>@481:1>@505:0>:int)
        
        P[<array_max_1033@455:1>](<array_max_1033@455:0>:int,<array_max_1033@455:1>:int),
        ((<array_max_1033@455:1> = 0) && (<<<array_max_1033@455:2>@485:1>@501:0> <= 1))
        |- P[<<<array_max_1033@455:2>@485:1>@501:0>](<array_max_1033@455:0>:int,
                                                     <array_max_1033@455:1>:int,
                                                     <<array_max_1033@455:2>@485:0>:int,
                                                     <<<array_max_1033@455:2>@485:1>@501:0>:int)
        
        P[<<array_max_1033@455:2>@485:0>](<make_array_1030@487:0>:int,0:int,<make_array_1030@487:1>:int),
        (<make_array_1030@487:1> > 1) |- bot
        
        P[<array_max_1033@455:1>](<array_max_1033@455:0>:int,<array_max_1033@455:1>:int),
        P[<<<array_max_1033@455:2>@458:1>@474:0>](<array_max_1033@455:0>:int,<array_max_1033@455:1>:int,<array_max_1033@455:1>:int,var1932:int),
        P[<<array_max_1033@478:2>@481:0>](<array_max_1033@455:0>:int,(
                                          1 + <array_max_1033@455:1>):int,<<array_max_1033@455:2>@485:0>:int),
        (<array_max_1033@455:1> < <array_max_1033@455:0>)
        |- P[<<array_max_1033@455:2>@485:0>](<array_max_1033@455:0>:int,
                                             <array_max_1033@455:1>:int,
                                             <<array_max_1033@455:2>@485:0>:int)
        
        P[<array_max_1033@478:1>](<array_max_1033@478:0>:int,<array_max_1033@478:1>:int),
        ((<array_max_1033@478:1> < <array_max_1033@478:0>) && (<<array_max_1033@478:2>@481:0> = <array_max_1033@478:1>))
        |- P[<<array_max_1033@478:2>@481:0>](<array_max_1033@478:0>:int,
                                             <array_max_1033@478:1>:int,
                                             <<array_max_1033@478:2>@481:0>:int)
        
        P[<array_max_1033@455:1>](<array_max_1033@478:0>:int,(-1 + <array_max_1033@478:1>):int),
        P[<<<array_max_1033@455:2>@458:1>@474:0>](<array_max_1033@478:0>:int,(
                                                  -1 + <array_max_1033@478:1>):int,(
                                                  -1 + <array_max_1033@478:1>):int,<f_array_max_1480@476:4>:int),
        (<array_max_1033@478:1> < (1 + <array_max_1033@478:0>))
        |- P[<array_max_1033@478:1>](<array_max_1033@478:0>:int,<array_max_1033@478:1>:int)
        
        P[<array_max_1033@455:1>](<array_max_1033@455:0>:int,<array_max_1033@455:1>:int),
        ((<array_max_1033@455:1> = 0) && (<<<array_max_1033@455:2>@458:1>@474:0> <= 1))
        |- P[<<<array_max_1033@455:2>@458:1>@474:0>](<array_max_1033@455:0>:int,
                                                     <array_max_1033@455:1>:int,
                                                     <<array_max_1033@455:2>@458:0>:int,
                                                     <<<array_max_1033@455:2>@458:1>@474:0>:int)
        
        P[<<array_max_1033@455:2>@458:0>](<make_array_1030@460:0>:int,0:int,<make_array_1030@460:1>:int),
        (<make_array_1030@460:1> > 1) |- bot
        
        P[<array_max_1033@455:1>](<array_max_1033@455:0>:int,<array_max_1033@455:1>:int),
        ((<array_max_1033@455:1> < <array_max_1033@455:0>) && (<<array_max_1033@455:2>@458:0> = <array_max_1033@455:1>))
        |- P[<<array_max_1033@455:2>@458:0>](<array_max_1033@455:0>:int,
                                             <array_max_1033@455:1>:int,
                                             <<array_max_1033@455:2>@458:0>:int)
        
         (<array_max_1033@455:1> = 0)
        |- P[<array_max_1033@455:1>](<array_max_1033@455:0>:int,<array_max_1033@455:1>:int)
      lower bounds:
        P[<check_1148@534:2>](<check_1148@534:0>:int,<check_1148@534:1>:int,<check_1148@534:2>:int) =
        ((<check_1148@534:1> = 0) && (1 <= <check_1148@534:2>))
        P[<array_max_1033@455:1>](<array_max_1033@455:0>:int,<array_max_1033@455:1>:int) = (<array_max_1033@455:1> = 0)
        P[<check_1148@560:2>](<check_1148@560:0>:int,<check_1148@560:1>:int,<check_1148@560:2>:int) =
        ((<check_1148@560:1> = 1) && ((<check_1148@560:1> < (1 + <check_1148@560:0>)) && (1 <= <check_1148@560:2>)))
        P[<<<array_max_1033@455:2>@485:1>@501:0>](<array_max_1033@455:0>:int,<array_max_1033@455:1>:int,<<array_max_1033@455:2>@485:0>:int,<<<array_max_1033@455:2>@485:1>@501:0>:int) =
        ((<array_max_1033@455:1> = 0) && (<<<array_max_1033@455:2>@485:1>@501:0> <= 1))
        P[<<<array_max_1033@455:2>@458:1>@474:0>](<array_max_1033@455:0>:int,<array_max_1033@455:1>:int,<<array_max_1033@455:2>@458:0>:int,<<<array_max_1033@455:2>@458:1>@474:0>:int) =
        ((<array_max_1033@455:1> = 0) && (<<<array_max_1033@455:2>@458:1>@474:0> <= 1))
        P[<<array_max_1033@455:2>@458:0>](<array_max_1033@455:0>:int,<array_max_1033@455:1>:int,<<array_max_1033@455:2>@458:0>:int) =
        ((<array_max_1033@455:1> = 0) &&
         ((<array_max_1033@455:1> < <array_max_1033@455:0>) &&
          (<<array_max_1033@455:2>@458:0> = <array_max_1033@455:1>)))
        P[<fail_1487@596:0>](<fail_1487@596:0>:bool) = false
        P[<array_max_1033@478:1>](<array_max_1033@478:0>:int,<array_max_1033@478:1>:int) =
        ((<array_max_1033@478:1> = 1) && (<array_max_1033@478:1> < (1 + <array_max_1033@478:0>)))
        P[<<<array_max_1033@478:2>@481:1>@505:0>](<array_max_1033@478:0>:int,<array_max_1033@478:1>:int,<<array_max_1033@478:2>@481:0>:int,<<<array_max_1033@478:2>@481:1>@505:0>:int) =
        ((<array_max_1033@478:1> = 1) &&
         ((<<<array_max_1033@478:2>@481:1>@505:0> <= 1) && (<array_max_1033@478:1> < (1 + <array_max_1033@478:0>))))
        P[<<array_max_1033@478:2>@481:0>](<array_max_1033@478:0>:int,<array_max_1033@478:1>:int,<<array_max_1033@478:2>@481:0>:int) =
        ((<array_max_1033@478:1> = 1) &&
         ((<array_max_1033@478:1> < <array_max_1033@478:0>) &&
          (<<array_max_1033@478:2>@481:0> = <array_max_1033@478:1>)))
        P[<array_max_1033@509:1>](<array_max_1033@509:0>:int,<array_max_1033@509:1>:int) =
        ((<array_max_1033@509:1> = 2) && (<array_max_1033@509:1> < (1 + <array_max_1033@509:0>)))
        P[<<array_max_1033@455:2>@485:0>](<array_max_1033@455:0>:int,<array_max_1033@455:1>:int,<<array_max_1033@455:2>@485:0>:int) =
        ((<array_max_1033@455:1> = 0) &&
         (((1 + <array_max_1033@455:1>) < <array_max_1033@455:0>) &&
          (<<array_max_1033@455:2>@485:0> = (1 + <array_max_1033@455:1>))))
      upper bounds:
        P[<array_max_1033@509:1>](var2343:int,var2344:int) = ((2 <= var2344) || (var2344 < var2343))
        P[<array_max_1033@478:1>](var2341:int,var2342:int) = true
        P[<array_max_1033@455:1>](var2339:int,var2340:int) =
        ((1 >= ((2 * <<array_max_1033@455:3>@530:0>) + var2339)) ||
         ((1 <> (2 * <<array_max_1033@455:3>@530:0>)) || ((var2340 + (2 * <<array_max_1033@455:3>@530:0>)) <> 1)))
      begin GenHcSolver.classify_pids(1803521)[4]
        output:
          [<array_max_1033@455:1>;<array_max_1033@478:1>],[<array_max_1033@509:1>]
      end GenHcSolver.classify_pids(1803521)[4] (0.001000 sec.)
      begin ApronInterface.convex_hull_interpolate(1803658)[4]
        lb:((<array_max_1033@455:1> = 0) ||
            ((<array_max_1033@455:1> = 1) && (<array_max_1033@455:1> < (1 + <array_max_1033@455:0>))))
        nub:(not
               ((1 >= ((2 * var2348) + <array_max_1033@455:0>)) ||
                ((1 <> (2 * var2348)) || ((<array_max_1033@455:1> + (2 * var2348)) <> 1))))
        begin ExtFormula.Formula.case_analysis_boolean(1803677)[5]
          ts: ((<array_max_1033@455:1> = 0) ||
               ((<array_max_1033@455:1> = 1) && (<array_max_1033@455:1> < (1 + <array_max_1033@455:0>))))
          
        end ExtFormula.Formula.case_analysis_boolean(1803677)[5] (0.000999 sec.)
        begin ExtFormula.Formula.case_analysis_boolean(1803729)[5]
          ts: ((1 < ((2 * var2348) + <array_max_1033@455:0>)) &&
               ((1 = (2 * var2348)) && ((<array_max_1033@455:1> + (2 * var2348)) = 1)))
          
        end ExtFormula.Formula.case_analysis_boolean(1803729)[5] (0.000000 sec.)
        lb':(((1 + (-1 * <array_max_1033@455:1>)) >= 0) && (<array_max_1033@455:1> >= 0))
        nub':((var2348 = 0) && (((-1 + <array_max_1033@455:1>) = 0) && ((-2 + <array_max_1033@455:0>) >= 0)))
        begin InterpProver.interpolate(1803740)[5]
          begin InterpProver.interpolate_fresh(1803741)[6]
            begin InterpProver.interpolate_log(1803742)[7]
              input1: (((1 + (-1 * <array_max_1033@455:1>)) >= 0) && (<array_max_1033@455:1> >= 0))
              input2: ((var2349 = 0) && (((-1 + <array_max_1033@455:1>) = 0) && ((-2 + <array_max_1033@455:0>) >= 0)))
              begin InterpProver.interpolate_check(1803743)[8]
                begin InterpProver.interpolate_simplify(1803744)[9]
                  begin InterpProver.interpolate_quick(1803855)[10]
                    begin CsisatInterface.interpolate_csisat_wrap(1803864)[11]
                      begin CsisatInterface.interpolate_csisat_post_process(1803865)[12]
                        begin CsisatInterface.interpolate_csisat_log(1803866)[13]
                          input1: (0 <= v_sep_array_max_1033_sep_455_sep_1 & v_sep_array_max_1033_sep_455_sep_1 <= 1)
                          input2: (1 = v_sep_array_max_1033_sep_455_sep_1 & 2 <= v_sep_array_max_1033_sep_455_sep_0)
                          begin CsisatInterface.interpolate_csisat_raw(1803867)[14]
                            
                          end CsisatInterface.interpolate_csisat_raw(1803867)[14] (0.000000 sec.)
                          
                        end CsisatInterface.interpolate_csisat_log(1803866)[13] (0.000000 sec.)
                        
                      end CsisatInterface.interpolate_csisat_post_process(1803865)[12] (0.000000 sec.)
                      
                    end CsisatInterface.interpolate_csisat_wrap(1803864)[11] (0.000000 sec.)
                    
                  end InterpProver.interpolate_quick(1803855)[10] (0.001000 sec.)
                  
                end InterpProver.interpolate_simplify(1803744)[9] (0.001000 sec.)
                
              end InterpProver.interpolate_check(1803743)[8] (0.002000 sec.)
              there is no interpolant
            end InterpProver.interpolate_log(1803742)[7] (0.002000 sec.)
            
          end InterpProver.interpolate_fresh(1803741)[6] (0.002000 sec.)
          
        end InterpProver.interpolate(1803740)[5] (0.002000 sec.)
        begin InterpProver.interpolate(1803891)[5]
          begin InterpProver.interpolate_fresh(1803892)[6]
            begin InterpProver.interpolate_log(1803893)[7]
              input1: (((1 + (-1 * <array_max_1033@455:1>)) >= 0) && (<array_max_1033@455:1> >= 0))
              input2: false
              begin InterpProver.interpolate_check(1803894)[8]
                begin InterpProver.interpolate_simplify(1803895)[9]
                  begin InterpProver.interpolate_quick(1803932)[10]
                    
                  end InterpProver.interpolate_quick(1803932)[10] (0.000000 sec.)
                  
                end InterpProver.interpolate_simplify(1803895)[9] (0.000000 sec.)
                
              end InterpProver.interpolate_check(1803894)[8] (0.000000 sec.)
              output: true
            end InterpProver.interpolate_log(1803893)[7] (0.000000 sec.)
            
          end InterpProver.interpolate_fresh(1803892)[6] (0.000000 sec.)
          
        end InterpProver.interpolate(1803891)[5] (0.000000 sec.)
        begin InterpProver.interpolate(1803944)[5]
          begin InterpProver.interpolate_fresh(1803945)[6]
            begin InterpProver.interpolate_log(1803946)[7]
              input1: (((1 + (-1 * <array_max_1033@455:1>)) >= 0) && (<array_max_1033@455:1> >= 0))
              input2: (not
                         ((1 >= ((2 * var2350) + <array_max_1033@455:0>)) ||
                          ((1 <> (2 * var2350)) || ((<array_max_1033@455:1> + (2 * var2350)) <> 1))))
              begin InterpProver.interpolate_check(1803947)[8]
                begin InterpProver.interpolate_simplify(1803948)[9]
                  begin InterpProver.interpolate_quick(1804067)[10]
                    
                  end InterpProver.interpolate_quick(1804067)[10] (0.000000 sec.)
                  
                end InterpProver.interpolate_simplify(1803948)[9] (0.001000 sec.)
                
              end InterpProver.interpolate_check(1803947)[8] (0.002000 sec.)
              output: true
            end InterpProver.interpolate_log(1803946)[7] (0.002000 sec.)
            
          end InterpProver.interpolate_fresh(1803945)[6] (0.002000 sec.)
          
        end InterpProver.interpolate(1803944)[5] (0.002000 sec.)
        output:
          P[<array_max_1033@455:1>](<array_max_1033@455:0>:int,<array_max_1033@455:1>:int) = true
          P[<array_max_1033@478:1>](<array_max_1033@455:0>:int,<array_max_1033@455:1>:int) = true
      end ApronInterface.convex_hull_interpolate(1803658)[4] (0.004999 sec.)
      Horn clauses:
        P[<fail_1487@596:0>](<fail_1487@596:0>:bool)|- bot
        
        P[<check_1148@560:2>](<f_check_1482@593:2>:int,<f_check_1482@593:0>:int,<f_check_1482@593:1>:int),
        ((<f_check_1482@593:0> < <f_check_1482@593:2>) && ((<f_check_1482@593:1> < 1) && <fail_1487@596:0>))
        |- P[<fail_1487@596:0>](<fail_1487@596:0>:bool)
        
        P[<check_1148@560:2>](<check_1148@560:0>:int,<<check_1148@560:3>@563:0>:int,<check_1148@560:2>:int),
        ((<<check_1148@560:3>@563:0> < <check_1148@560:0>) && (<<check_1148@560:3>@563:0> > 1)) |- bot
        
        P[<check_1148@534:2>](<check_1148@560:0>:int,(-1 + <check_1148@560:1>):int,<check_1148@560:2>:int),
        (<check_1148@560:1> < (1 + <check_1148@560:0>))
        |- P[<check_1148@560:2>](<check_1148@560:0>:int,<check_1148@560:1>:int,
                                 <check_1148@560:2>:int)
        
        P[<check_1148@534:2>](<check_1148@534:0>:int,<<check_1148@534:3>@537:0>:int,<check_1148@534:2>:int),
        ((<<check_1148@534:3>@537:0> < <check_1148@534:0>) && (<<check_1148@534:3>@537:0> > 1)) |- bot
        
         ((<check_1148@534:1> = 0) && (1 <= <check_1148@534:2>))
        |- P[<check_1148@534:2>](<check_1148@534:0>:int,<check_1148@534:1>:int,
                                 <check_1148@534:2>:int)
        
        P[<<<array_max_1033@455:2>@458:1>@474:0>](<array_max_1033@455:0>:int,(
                                                  1 + (-2 * <<array_max_1033@455:3>@530:0>)):int,(
                                                  1 + (-2 * <<array_max_1033@455:3>@530:0>)):int,var1930:int),
        ((var1930 <= <<array_max_1033@455:3>@530:0>) &&
         (1 < ((2 * <<array_max_1033@455:3>@530:0>) + <array_max_1033@455:0>))) |- bot
        
        P[<<<array_max_1033@478:2>@481:1>@505:0>](<array_max_1033@478:0>:int,<array_max_1033@478:1>:int,<array_max_1033@478:1>:int,<<array_max_1033@478:3>@521:0>:int),
        ((<array_max_1033@478:1> < <array_max_1033@478:0>) &&
         ((2 > ((2 * <<array_max_1033@478:3>@521:0>) + <array_max_1033@478:1>)) &&
          ((<<array_max_1033@478:3>@521:0> > var1931) && (1 <= ((2 * var1931) + <array_max_1033@478:1>))))) |- bot
        
        P[<array_max_1033@509:1>](<array_max_1033@509:0>:int,<array_max_1033@509:1>:int),
        ((2 > <array_max_1033@509:1>) && (<array_max_1033@509:1> >= <array_max_1033@509:0>)) |- bot
        
        P[<<<array_max_1033@478:2>@481:1>@505:0>](<array_max_1033@509:0>:int,(
                                                  -1 + <array_max_1033@509:1>):int,(
                                                  -1 + <array_max_1033@509:1>):int,<f_array_max_1480@507:4>:int),
        (<array_max_1033@509:1> < (1 + <array_max_1033@509:0>))
        |- P[<array_max_1033@509:1>](<array_max_1033@509:0>:int,<array_max_1033@509:1>:int)
        
        P[<<<array_max_1033@455:2>@458:1>@474:0>](<array_max_1033@478:0>:int,(
                                                  -1 + <array_max_1033@478:1>):int,(
                                                  -1 + <array_max_1033@478:1>):int,<f_array_max_1480@476:4>:int),
        P[<<<array_max_1033@455:2>@485:1>@501:0>](<array_max_1033@478:0>:int,(
                                                  -1 + <array_max_1033@478:1>):int,<<array_max_1033@478:2>@481:0>:int,<<<array_max_1033@478:2>@481:1>@505:0>:int),
        (<array_max_1033@478:1> < (1 + <array_max_1033@478:0>))
        |- P[<<<array_max_1033@478:2>@481:1>@505:0>](<array_max_1033@478:0>:int,
                                                     <array_max_1033@478:1>:int,
                                                     <<array_max_1033@478:2>@481:0>:int,
                                                     <<<array_max_1033@478:2>@481:1>@505:0>:int)
        
         ((<array_max_1033@455:1> = 0) && (<<<array_max_1033@455:2>@485:1>@501:0> <= 1))
        |- P[<<<array_max_1033@455:2>@485:1>@501:0>](<array_max_1033@455:0>:int,
                                                     <array_max_1033@455:1>:int,
                                                     <<array_max_1033@455:2>@485:0>:int,
                                                     <<<array_max_1033@455:2>@485:1>@501:0>:int)
        
        P[<<array_max_1033@455:2>@485:0>](<make_array_1030@487:0>:int,0:int,<make_array_1030@487:1>:int),
        (<make_array_1030@487:1> > 1) |- bot
        
        P[<<<array_max_1033@455:2>@458:1>@474:0>](<array_max_1033@455:0>:int,<array_max_1033@455:1>:int,<array_max_1033@455:1>:int,var1932:int),
        P[<<array_max_1033@478:2>@481:0>](<array_max_1033@455:0>:int,(
                                          1 + <array_max_1033@455:1>):int,<<array_max_1033@455:2>@485:0>:int),
        (<array_max_1033@455:1> < <array_max_1033@455:0>)
        |- P[<<array_max_1033@455:2>@485:0>](<array_max_1033@455:0>:int,
                                             <array_max_1033@455:1>:int,
                                             <<array_max_1033@455:2>@485:0>:int)
        
        
        ((<array_max_1033@478:1> < <array_max_1033@478:0>) && (<<array_max_1033@478:2>@481:0> = <array_max_1033@478:1>))
        |- P[<<array_max_1033@478:2>@481:0>](<array_max_1033@478:0>:int,
                                             <array_max_1033@478:1>:int,
                                             <<array_max_1033@478:2>@481:0>:int)
        
         ((<array_max_1033@455:1> = 0) && (<<<array_max_1033@455:2>@458:1>@474:0> <= 1))
        |- P[<<<array_max_1033@455:2>@458:1>@474:0>](<array_max_1033@455:0>:int,
                                                     <array_max_1033@455:1>:int,
                                                     <<array_max_1033@455:2>@458:0>:int,
                                                     <<<array_max_1033@455:2>@458:1>@474:0>:int)
        
        P[<<array_max_1033@455:2>@458:0>](<make_array_1030@460:0>:int,0:int,<make_array_1030@460:1>:int),
        (<make_array_1030@460:1> > 1) |- bot
        
        
        ((<array_max_1033@455:1> < <array_max_1033@455:0>) && (<<array_max_1033@455:2>@458:0> = <array_max_1033@455:1>))
        |- P[<<array_max_1033@455:2>@458:0>](<array_max_1033@455:0>:int,
                                             <array_max_1033@455:1>:int,
                                             <<array_max_1033@455:2>@458:0>:int)
      lower bounds:
        P[<check_1148@534:2>](<check_1148@534:0>:int,<check_1148@534:1>:int,<check_1148@534:2>:int) =
        ((<check_1148@534:1> = 0) && (1 <= <check_1148@534:2>))
        P[<<<array_max_1033@455:2>@485:1>@501:0>](<array_max_1033@455:0>:int,<array_max_1033@455:1>:int,<<array_max_1033@455:2>@485:0>:int,<<<array_max_1033@455:2>@485:1>@501:0>:int) =
        ((<array_max_1033@455:1> = 0) && (<<<array_max_1033@455:2>@485:1>@501:0> <= 1))
        P[<<array_max_1033@478:2>@481:0>](<array_max_1033@478:0>:int,<array_max_1033@478:1>:int,<<array_max_1033@478:2>@481:0>:int) =
        ((<array_max_1033@478:1> < <array_max_1033@478:0>) && (<<array_max_1033@478:2>@481:0> = <array_max_1033@478:1>))
        P[<<<array_max_1033@455:2>@458:1>@474:0>](<array_max_1033@455:0>:int,<array_max_1033@455:1>:int,<<array_max_1033@455:2>@458:0>:int,<<<array_max_1033@455:2>@458:1>@474:0>:int) =
        ((<array_max_1033@455:1> = 0) && (<<<array_max_1033@455:2>@458:1>@474:0> <= 1))
        P[<<array_max_1033@455:2>@458:0>](<array_max_1033@455:0>:int,<array_max_1033@455:1>:int,<<array_max_1033@455:2>@458:0>:int) =
        ((<array_max_1033@455:1> < <array_max_1033@455:0>) && (<<array_max_1033@455:2>@458:0> = <array_max_1033@455:1>))
        P[<check_1148@560:2>](<check_1148@560:0>:int,<check_1148@560:1>:int,<check_1148@560:2>:int) =
        ((<check_1148@560:1> = 1) && ((<check_1148@560:1> < (1 + <check_1148@560:0>)) && (1 <= <check_1148@560:2>)))
        P[<<<array_max_1033@478:2>@481:1>@505:0>](<array_max_1033@478:0>:int,<array_max_1033@478:1>:int,<<array_max_1033@478:2>@481:0>:int,<<<array_max_1033@478:2>@481:1>@505:0>:int) =
        ((<array_max_1033@478:1> = 1) &&
         ((<array_max_1033@478:1> < (1 + <array_max_1033@478:0>)) && (<<<array_max_1033@478:2>@481:1>@505:0> <= 1)))
        P[<<array_max_1033@455:2>@485:0>](<array_max_1033@455:0>:int,<array_max_1033@455:1>:int,<<array_max_1033@455:2>@485:0>:int) =
        ((<array_max_1033@455:1> = 0) &&
         (((1 + <array_max_1033@455:1>) < <array_max_1033@455:0>) &&
          (<<array_max_1033@455:2>@485:0> = (1 + <array_max_1033@455:1>))))
        P[<fail_1487@596:0>](<fail_1487@596:0>:bool) = false
        P[<array_max_1033@509:1>](<array_max_1033@509:0>:int,<array_max_1033@509:1>:int) =
        ((<array_max_1033@509:1> = 2) && (<array_max_1033@509:1> < (1 + <array_max_1033@509:0>)))
      upper bounds:
        P[<<<array_max_1033@478:2>@481:1>@505:0>](var2365:int,var2366:int,var2367:int,var2368:int) =
        (((var2366 >= var2365) ||
          ((2 <= ((2 * var2368) + var2366)) ||
           ((var2368 <= var1931) || ((1 > ((2 * var1931) + var2366)) || (var2366 <> var2367))))) &&
         ((2 <= var2365) || (((1 + var2366) <> var2365) || ((1 + var2367) <> var2365))))
        P[<<<array_max_1033@455:2>@485:1>@501:0>](var2360:int,var2361:int,var2362:int,var2363:int) =
        ((var2361 <> 0) || ((var2362 <> 1) || ((0 >= var2363) || ((1 <= (2 * var2363)) || (1 >= var2360)))))
        P[<<<array_max_1033@455:2>@458:1>@474:0>](var2355:int,var2356:int,var2357:int,var2358:int) =
        ((var2358 > <<array_max_1033@455:3>@530:0>) ||
         ((1 >= ((2 * <<array_max_1033@455:3>@530:0>) + var2355)) ||
          (((var2356 + (2 * <<array_max_1033@455:3>@530:0>)) <> 1) ||
           ((var2357 + (2 * <<array_max_1033@455:3>@530:0>)) <> 1))))
      begin GenHcSolver.classify_pids(1832908)[4]
        output:
          [<<<array_max_1033@455:2>@458:1>@474:0>;<<<array_max_1033@455:2>@485:1>@501:0>],[
          <<<array_max_1033@478:2>@481:1>@505:0>]
      end GenHcSolver.classify_pids(1832908)[4] (0.004000 sec.)
      begin ApronInterface.convex_hull_interpolate(1833711)[4]
        lb:((<array_max_1033@455:1> = 0) && (<<<array_max_1033@455:2>@458:1>@474:0> <= 1))
        nub:((not
                ((<<<array_max_1033@455:2>@458:1>@474:0> > var2379) ||
                 ((1 >= ((2 * var2379) + <array_max_1033@455:0>)) ||
                  (((<array_max_1033@455:1> + (2 * var2379)) <> 1) ||
                   ((<<array_max_1033@455:2>@458:0> + (2 * var2379)) <> 1))))) ||
             (not
                ((<array_max_1033@455:1> <> 0) ||
                 ((<<array_max_1033@455:2>@458:0> <> 1) ||
                  ((0 >= <<<array_max_1033@455:2>@458:1>@474:0>) ||
                   ((1 <= (2 * <<<array_max_1033@455:2>@458:1>@474:0>)) || (1 >= <array_max_1033@455:0>)))))))
        begin ExtFormula.Formula.case_analysis_boolean(1833724)[5]
          ts: ((<array_max_1033@455:1> = 0) && (<<<array_max_1033@455:2>@458:1>@474:0> <= 1))
          
        end ExtFormula.Formula.case_analysis_boolean(1833724)[5] (0.000000 sec.)
        begin ExtFormula.Formula.case_analysis_boolean(1833874)[5]
          ts: (((<<<array_max_1033@455:2>@458:1>@474:0> <= var2379) &&
                ((1 < ((2 * var2379) + <array_max_1033@455:0>)) &&
                 (((<array_max_1033@455:1> + (2 * var2379)) = 1) &&
                  ((<<array_max_1033@455:2>@458:0> + (2 * var2379)) = 1)))) ||
               ((<array_max_1033@455:1> = 0) &&
                ((<<array_max_1033@455:2>@458:0> = 1) &&
                 ((0 < <<<array_max_1033@455:2>@458:1>@474:0>) &&
                  ((1 > (2 * <<<array_max_1033@455:2>@458:1>@474:0>)) && (1 < <array_max_1033@455:0>))))))
          
        end ExtFormula.Formula.case_analysis_boolean(1833874)[5] (0.000999 sec.)
        lb':((<array_max_1033@455:1> = 0) && ((1 + (-1 * <<<array_max_1033@455:2>@458:1>@474:0>)) >= 0))
        nub':(((<<array_max_1033@455:2>@458:0> + (-1 * <array_max_1033@455:1>)) = 0) &&
              ((((-1 + (2 * var2379)) + <array_max_1033@455:1>) = 0) &&
               ((((1 + (-2 * <<<array_max_1033@455:2>@458:1>@474:0>)) + (-1 * <array_max_1033@455:1>)) >= 0) &&
                (((-1 + (-1 * <array_max_1033@455:1>)) + <array_max_1033@455:0>) >= 0))))
        begin InterpProver.interpolate(1833896)[5]
          begin InterpProver.interpolate_fresh(1833897)[6]
            begin InterpProver.interpolate_log(1833898)[7]
              input1: ((<array_max_1033@455:1> = 0) && ((1 + (-1 * <<<array_max_1033@455:2>@458:1>@474:0>)) >= 0))
              input2: (((<<array_max_1033@455:2>@458:0> + (-1 * <array_max_1033@455:1>)) = 0) &&
                       ((((-1 + (2 * var2380)) + <array_max_1033@455:1>) = 0) &&
                        ((((1 + (-2 * <<<array_max_1033@455:2>@458:1>@474:0>)) + (-1 * <array_max_1033@455:1>)) >= 0) &&
                         (((-1 + (-1 * <array_max_1033@455:1>)) + <array_max_1033@455:0>) >= 0))))
              begin InterpProver.interpolate_check(1833899)[8]
                begin InterpProver.interpolate_simplify(1833900)[9]
                  begin InterpProver.interpolate_quick(1834054)[10]
                    begin CsisatInterface.interpolate_csisat_wrap(1834063)[11]
                      begin CsisatInterface.interpolate_csisat_post_process(1834064)[12]
                        begin CsisatInterface.interpolate_csisat_log(1834065)[13]
                          input1: (0 = v_sep_array_max_1033_sep_455_sep_1 & v_sep_array_max_1033_sep_455_sep_2_sep_458_sep_1_sep_474_sep_0 <= 1)
                          input2: (1 = (v_sep_array_max_1033_sep_455_sep_1 + 2*v_sep_var2380) & (1 + v_sep_array_max_1033_sep_455_sep_1) <= v_sep_array_max_1033_sep_455_sep_0 & (v_sep_array_max_1033_sep_455_sep_1 + 2*v_sep_array_max_1033_sep_455_sep_2_sep_458_sep_1_sep_474_sep_0) <= 1)
                          begin CsisatInterface.interpolate_csisat_raw(1834066)[14]
                            
                          end CsisatInterface.interpolate_csisat_raw(1834066)[14] (0.001000 sec.)
                          
                        end CsisatInterface.interpolate_csisat_log(1834065)[13] (0.001000 sec.)
                        
                      end CsisatInterface.interpolate_csisat_post_process(1834064)[12] (0.001000 sec.)
                      
                    end CsisatInterface.interpolate_csisat_wrap(1834063)[11] (0.001000 sec.)
                    
                  end InterpProver.interpolate_quick(1834054)[10] (0.001000 sec.)
                  
                end InterpProver.interpolate_simplify(1833900)[9] (0.002000 sec.)
                
              end InterpProver.interpolate_check(1833899)[8] (0.003000 sec.)
              there is an interpolant but failed to find one
            end InterpProver.interpolate_log(1833898)[7] (0.004000 sec.)
            
          end InterpProver.interpolate_fresh(1833897)[6] (0.004000 sec.)
          
        end InterpProver.interpolate(1833896)[5] (0.004000 sec.)
        begin InterpProver.interpolate(1834114)[5]
          begin InterpProver.interpolate_fresh(1834115)[6]
            begin InterpProver.interpolate_log(1834116)[7]
              input1: ((<array_max_1033@455:1> = 0) && ((1 + (-1 * <<<array_max_1033@455:2>@458:1>@474:0>)) >= 0))
              input2: (not
                         ((<array_max_1033@455:1> <> 0) ||
                          ((<<array_max_1033@455:2>@458:0> <> 1) ||
                           ((0 >= <<<array_max_1033@455:2>@458:1>@474:0>) ||
                            ((1 <= (2 * <<<array_max_1033@455:2>@458:1>@474:0>)) || (1 >= <array_max_1033@455:0>))))))
              begin InterpProver.interpolate_check(1834117)[8]
                begin InterpProver.interpolate_simplify(1834118)[9]
                  begin InterpProver.interpolate_quick(1834369)[10]
                    
                  end InterpProver.interpolate_quick(1834369)[10] (0.001000 sec.)
                  
                end InterpProver.interpolate_simplify(1834118)[9] (0.002000 sec.)
                
              end InterpProver.interpolate_check(1834117)[8] (0.002000 sec.)
              output: true
            end InterpProver.interpolate_log(1834116)[7] (0.002000 sec.)
            
          end InterpProver.interpolate_fresh(1834115)[6] (0.002000 sec.)
          
        end InterpProver.interpolate(1834114)[5] (0.002000 sec.)
        begin InterpProver.interpolate(1834425)[5]
          begin InterpProver.interpolate_fresh(1834426)[6]
            begin InterpProver.interpolate_log(1834427)[7]
              input1: ((<array_max_1033@455:1> = 0) && ((1 + (-1 * <<<array_max_1033@455:2>@458:1>@474:0>)) >= 0))
              input2: (not
                         ((<<<array_max_1033@455:2>@458:1>@474:0> > var2381) ||
                          ((1 >= ((2 * var2381) + <array_max_1033@455:0>)) ||
                           (((<array_max_1033@455:1> + (2 * var2381)) <> 1) ||
                            ((<<array_max_1033@455:2>@458:0> + (2 * var2381)) <> 1)))))
              begin InterpProver.interpolate_check(1834428)[8]
                begin InterpProver.interpolate_simplify(1834429)[9]
                  begin InterpProver.interpolate_quick(1834657)[10]
                    begin CsisatInterface.interpolate_csisat_wrap(1834666)[11]
                      begin CsisatInterface.interpolate_csisat_post_process(1834667)[12]
                        begin CsisatInterface.interpolate_csisat_log(1834668)[13]
                          input1: (0 = v_sep_array_max_1033_sep_455_sep_1 & v_sep_array_max_1033_sep_455_sep_2_sep_458_sep_1_sep_474_sep_0 <= 1)
                          input2: (1 = (v_sep_array_max_1033_sep_455_sep_1 + 2*v_sep_var2381) & 2 <= (v_sep_array_max_1033_sep_455_sep_0 + 2*v_sep_var2381) & v_sep_array_max_1033_sep_455_sep_2_sep_458_sep_1_sep_474_sep_0 <= v_sep_var2381)
                          begin CsisatInterface.interpolate_csisat_raw(1834669)[14]
                            
                          end CsisatInterface.interpolate_csisat_raw(1834669)[14] (0.000000 sec.)
                          
                        end CsisatInterface.interpolate_csisat_log(1834668)[13] (0.000000 sec.)
                        
                      end CsisatInterface.interpolate_csisat_post_process(1834667)[12] (0.000000 sec.)
                      
                    end CsisatInterface.interpolate_csisat_wrap(1834666)[11] (0.000000 sec.)
                    
                  end InterpProver.interpolate_quick(1834657)[10] (0.000000 sec.)
                  
                end InterpProver.interpolate_simplify(1834429)[9] (0.001999 sec.)
                
              end InterpProver.interpolate_check(1834428)[8] (0.002999 sec.)
              there is an interpolant but failed to find one
            end InterpProver.interpolate_log(1834427)[7] (0.002999 sec.)
            
          end InterpProver.interpolate_fresh(1834426)[6] (0.002999 sec.)
          
        end InterpProver.interpolate(1834425)[5] (0.002999 sec.)
        begin InterpProver.interpolate(1834717)[5]
          begin InterpProver.interpolate_fresh(1834718)[6]
            begin InterpProver.interpolate_log(1834719)[7]
              input1: ((<array_max_1033@455:1> = 0) && (<<<array_max_1033@455:2>@458:1>@474:0> <= 1))
              input2: (not
                         ((<<<array_max_1033@455:2>@458:1>@474:0> > var2382) ||
                          ((1 >= ((2 * var2382) + <array_max_1033@455:0>)) ||
                           (((<array_max_1033@455:1> + (2 * var2382)) <> 1) ||
                            ((<<array_max_1033@455:2>@458:0> + (2 * var2382)) <> 1)))))
              begin InterpProver.interpolate_check(1834720)[8]
                begin InterpProver.interpolate_simplify(1834721)[9]
                  begin InterpProver.interpolate_quick(1834949)[10]
                    begin CsisatInterface.interpolate_csisat_wrap(1834958)[11]
                      begin CsisatInterface.interpolate_csisat_post_process(1834959)[12]
                        begin CsisatInterface.interpolate_csisat_log(1834960)[13]
                          input1: (0 = v_sep_array_max_1033_sep_455_sep_1 & v_sep_array_max_1033_sep_455_sep_2_sep_458_sep_1_sep_474_sep_0 <= 1)
                          input2: (1 = (v_sep_array_max_1033_sep_455_sep_1 + 2*v_sep_var2382) & 2 <= (v_sep_array_max_1033_sep_455_sep_0 + 2*v_sep_var2382) & v_sep_array_max_1033_sep_455_sep_2_sep_458_sep_1_sep_474_sep_0 <= v_sep_var2382)
                          begin CsisatInterface.interpolate_csisat_raw(1834961)[14]
                            
                          end CsisatInterface.interpolate_csisat_raw(1834961)[14] (0.000000 sec.)
                          
                        end CsisatInterface.interpolate_csisat_log(1834960)[13] (0.000000 sec.)
                        
                      end CsisatInterface.interpolate_csisat_post_process(1834959)[12] (0.000000 sec.)
                      
                    end CsisatInterface.interpolate_csisat_wrap(1834958)[11] (0.000000 sec.)
                    
                  end InterpProver.interpolate_quick(1834949)[10] (0.001000 sec.)
                  
                end InterpProver.interpolate_simplify(1834721)[9] (0.002000 sec.)
                
              end InterpProver.interpolate_check(1834720)[8] (0.003000 sec.)
              there is an interpolant but failed to find one
            end InterpProver.interpolate_log(1834719)[7] (0.003000 sec.)
            
          end InterpProver.interpolate_fresh(1834718)[6] (0.003000 sec.)
          
        end InterpProver.interpolate(1834717)[5] (0.003000 sec.)
        
      end ApronInterface.convex_hull_interpolate(1833711)[4] (0.013998 sec.)
      
    end GenHcSolver.solve(1455638)[3] (1.541766 sec.)
    
  end RefTypeInfer.infer_etrs(970670)[2] (11.879194 sec.)
  