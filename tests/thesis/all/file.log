MoCHi: Model Checker for Higher-Order Programs
  TRecS version: 1.30
  OCaml version: 4.00.1
  Command: ../mochi.opt -gchi file.ml

parsed::
 let rec loop_1030 x_1031 = loop_1030 () 
 in
 let init_1032 = 0 
 in
 let opened_1033 = 1 
 in
 let closed_1034 = 2 
 in
 let ignore_1035 = 3 
 in
 let readit_1036 st_1037 =
   if st_1037 = opened_1033 then
     opened_1033
   else
     if st_1037 = ignore_1035 then
       st_1037
     else
       let u_1042 = {fail} () 
       in
         _|_ 
 in
 let read__1038 x_1039 st_1040 = if x_1039 then
                                   readit_1036 st_1040
                                 else
                                   st_1040 
 in
 let closeit_1041 st_1042 =
   if st_1042 = opened_1033 then
     closed_1034
   else
     if st_1042 = ignore_1035 then
       st_1042
     else
       let u_1060 = loop_1030 () 
       in
         0 
 in
 let close__1043 x_1044 st_1045 = if x_1044 then
                                    closeit_1041 st_1045
                                  else
                                    st_1045 
 in
 let rec f_1046 x_1047 y_1048 st_1049 =
   let u_1096 = close__1043 y_1048 (close__1043 x_1047 st_1049) 
   in
     f_1046 x_1047 y_1048 (read__1038 y_1048 (read__1038 x_1047 st_1049)) 
 in
 let next_1050 st_1051 = if st_1051 = init_1032 then
                           opened_1033
                         else
                           ignore_1035 
 in
 let g_1052 b3_1053 x_1054 st_1055 =
   if b3_1053 > 0 then
     f_1046 x_1054 true (next_1050 st_1055)
   else
     f_1046 x_1054 false st_1055 
 in
 let main_1056 b2_1057 b3_1058 =
   let u_1142 = if b2_1057 > 0 then
                  g_1052 b3_1058 true opened_1033
                else
                  g_1052 b3_1058 false init_1032 
   in
     () 
 in
   ()

set_target::
 let rec loop_1030 x_1031 = loop_1030 () 
 in
 let init_1032 = 0 
 in
 let opened_1033 = 1 
 in
 let closed_1034 = 2 
 in
 let ignore_1035 = 3 
 in
 let readit_1036 st_1037 =
   if st_1037 = opened_1033 then
     opened_1033
   else
     if st_1037 = ignore_1035 then
       st_1037
     else
       let u_1042 = {fail} () 
       in
         _|_ 
 in
 let read__1038 x_1039 st_1040 = if x_1039 then
                                   readit_1036 st_1040
                                 else
                                   st_1040 
 in
 let closeit_1041 st_1042 =
   if st_1042 = opened_1033 then
     closed_1034
   else
     if st_1042 = ignore_1035 then
       st_1042
     else
       let u_1060 = loop_1030 () 
       in
         0 
 in
 let close__1043 x_1044 st_1045 = if x_1044 then
                                    closeit_1041 st_1045
                                  else
                                    st_1045 
 in
 let rec f_1046 x_1047 y_1048 st_1049 =
   let u_1096 = close__1043 y_1048 (close__1043 x_1047 st_1049) 
   in
     f_1046 x_1047 y_1048 (read__1038 y_1048 (read__1038 x_1047 st_1049)) 
 in
 let next_1050 st_1051 = if st_1051 = init_1032 then
                           opened_1033
                         else
                           ignore_1035 
 in
 let g_1052 b3_1053 x_1054 st_1055 =
   if b3_1053 > 0 then
     f_1046 x_1054 true (next_1050 st_1055)
   else
     f_1046 x_1054 false st_1055 
 in
 let main_1056 b2_1057 b3_1058 =
   let u_1142 = if b2_1057 > 0 then
                  g_1052 b3_1058 true opened_1033
                else
                  g_1052 b3_1058 false init_1032 
   in
     () 
 in
 let main_1145 = let arg1_1143 = rand_int () 
                 in
                 let arg2_1144 = rand_int () 
                 in
                   main_1056 arg1_1143 arg2_1144 
 in
   ()

CPS::
 let rec loop_1030 (x_1031:unit) (k_loop_1170:(unit -> X)) = loop_1030 () k_loop_1170 
 in
 let readit_1036 (st_1037:int) (k_readit_1206:(int -> X)) =
   if st_1037 = 1 then
     k_readit_1206 1
   else
     if st_1037 = 3 then
       k_readit_1206 st_1037
     else
       {|fail|} () (fun x_1209 -> _|_) 
 in
 let read__1038 (x_1039:bool) (st_1040:int) (k_read__1243:(int -> X)) =
   if x_1039 then
     readit_1036 st_1040 k_read__1243
   else
     k_read__1243 st_1040 
 in
 let closeit_1041 (st_1042:int) (k_closeit_1271:(int -> X)) =
   if st_1042 = 1 then
     k_closeit_1271 2
   else
     if st_1042 = 3 then
       k_closeit_1271 st_1042
     else
       loop_1030 () (fun x_1274 -> k_closeit_1271 0) 
 in
 let close__1043 (x_1044:bool) (st_1045:int) (k_close__1309:(int -> X)) =
   if x_1044 then
     closeit_1041 st_1045 k_close__1309
   else
     k_close__1309 st_1045 
 in
 let rec f_1046 (x_1047:bool) (y_1048:bool) (st_1049:int) (k_f_1343:(
   unit -> X)) =
   close__1043 x_1047 st_1049
     (fun x_1368 ->
        close__1043 y_1048 x_1368
          (fun x_1346 ->
             read__1038 x_1047 st_1049
               (fun x_1395 -> read__1038 y_1048 x_1395 (fun x_1402 -> f_1046 x_1047 y_1048 x_1402 k_f_1343)))) 
 in
 let next_1050 (st_1051:int) (k_next_1416:(int -> X)) = if st_1051 = 0 then
                                                          k_next_1416 1
                                                        else
                                                          k_next_1416 3 
 in
 let g_1052 (b3_1053:int) (x_1054:bool) (st_1055:int) (k_g_1440:(unit -> X)) =
   if b3_1053 > 0 then
     next_1050 st_1055 (fun x_1462 -> f_1046 x_1054 true x_1462 k_g_1440)
   else
     f_1046 x_1054 false st_1055 k_g_1440 
 in
 let main_1056 (b2_1057:int) (b3_1058:int) (k_main_1495:(unit -> X)) =
   let k_main_u_1525 (x_1498:unit) = k_main_1495 () 
   in
     if b2_1057 > 0 then
       g_1052 b3_1058 true 1 k_main_u_1525
     else
       g_1052 b3_1058 false 0 k_main_u_1525 
 in
   rand_int_cps () (fun x_1532 -> rand_int_cps () (fun x_1545 -> main_1056 x_1532 x_1545 (fun x_1529 -> end)))

Program with abstraction types (CEGAR-cycle 0)::
Main: main_1574
  main_1574 -> (rand_int f_1582)
  br_closeit_1587 b_1588 st_1042 k_closeit_1271 when b_1588 -> (k_closeit_1271 st_1042)
  br_closeit_1587 b_1588 st_1042 k_closeit_1271 when (not b_1588) ->
      (loop_1030 () (f_closeit_1576 st_1042 k_closeit_1271))
  br_readit_1585 b_1586 st_1037 k_readit_1206 when b_1586 -> (k_readit_1206 st_1037)
  br_readit_1585 b_1586 st_1037 k_readit_1206 when (not b_1586) -> (fail_1589 true (f_readit_1575 st_1037))
  close__1043 x_1044 st_1045 k_close__1309 when x_1044 -> (closeit_1041 st_1045 k_close__1309)
  close__1043 x_1044 st_1045 k_close__1309 when (not x_1044) -> (k_close__1309 st_1045)
  closeit_1041 st_1042 k_closeit_1271 when (st_1042 = 1) -> (k_closeit_1271 2)
  closeit_1041 st_1042 k_closeit_1271 when (not (st_1042 = 1)) ->
      (br_closeit_1587 (st_1042 = 3) st_1042 k_closeit_1271)
  f_1046 x_1047 y_1048 st_1049 k_f_1343 -> (close__1043 x_1047 st_1049 (f_f_1577 st_1049 x_1047 y_1048 k_f_1343))
  f_1582 x_1532 -> (rand_int (f_1583 x_1532))
  f_1583 x_1532 x_1545 -> (main_1056 x_1532 x_1545 (f_1584 x_1532 x_1545))
  f_1584 x_1532 x_1545 x_1529 -> end
  f_closeit_1576 st_1042 k_closeit_1271 x_1274 -> (k_closeit_1271 0)
  f_f_1577 st_1049 x_1047 y_1048 k_f_1343 x_1368 ->
      (close__1043 y_1048 x_1368 (f_f_1578 st_1049 x_1047 x_1368 y_1048 k_f_1343))
  f_f_1578 st_1049 x_1047 x_1368 y_1048 k_f_1343 x_1346 ->
      (read__1038 x_1047 st_1049 (f_f_1579 st_1049 x_1047 x_1346 x_1368 y_1048 k_f_1343))
  f_f_1579 st_1049 x_1047 x_1346 x_1368 y_1048 k_f_1343 x_1395 ->
      (read__1038 y_1048 x_1395 (f_f_1580 st_1049 x_1047 x_1346 x_1368 x_1395 y_1048 k_f_1343))
  f_f_1580 st_1049 x_1047 x_1346 x_1368 x_1395 y_1048 k_f_1343 x_1402 -> (f_1046 x_1047 y_1048 x_1402 k_f_1343)
  f_g_1581 b3_1053 st_1055 x_1054 k_g_1440 x_1462 -> (f_1046 x_1054 true x_1462 k_g_1440)
  f_readit_1575 st_1037 x_1209 -> _|_
  fail_1589 b k -> {fail} => (k ())
  g_1052 b3_1053 x_1054 st_1055 k_g_1440 when (b3_1053 > 0) ->
      (next_1050 st_1055 (f_g_1581 b3_1053 st_1055 x_1054 k_g_1440))
  g_1052 b3_1053 x_1054 st_1055 k_g_1440 when (not (b3_1053 > 0)) -> (f_1046 x_1054 false st_1055 k_g_1440)
  k_main_u_1525 b2_1057 b3_1058 k_main_1495 x_1498 -> (k_main_1495 ())
  loop_1030 x_1031 k_loop_1170 -> (loop_1030 () k_loop_1170)
  main_1056 b2_1057 b3_1058 k_main_1495 when (b2_1057 > 0) ->
      (g_1052 b3_1058 true 1 (k_main_u_1525 b2_1057 b3_1058 k_main_1495))
  main_1056 b2_1057 b3_1058 k_main_1495 when (not (b2_1057 > 0)) ->
      (g_1052 b3_1058 false 0 (k_main_u_1525 b2_1057 b3_1058 k_main_1495))
  next_1050 st_1051 k_next_1416 when (st_1051 = 0) -> (k_next_1416 1)
  next_1050 st_1051 k_next_1416 when (not (st_1051 = 0)) -> (k_next_1416 3)
  read__1038 x_1039 st_1040 k_read__1243 when x_1039 -> (readit_1036 st_1040 k_read__1243)
  read__1038 x_1039 st_1040 k_read__1243 when (not x_1039) -> (k_read__1243 st_1040)
  readit_1036 st_1037 k_readit_1206 when (st_1037 = 1) -> (k_readit_1206 1)
  readit_1036 st_1037 k_readit_1206 when (not (st_1037 = 1)) -> (br_readit_1585 (st_1037 = 3) st_1037 k_readit_1206)
Types:
  main_1574 : X
  close__1043 : (x_1:bool[x_1] -> int -> (int -> X) -> X)
  f_1046 : (x_1:bool[x_1] -> x_2:bool[x_2] -> int -> (unit -> X) -> X)
  fail_1589 : (x_1:bool[x_1] -> (unit -> X) -> X)
  loop_1030 : (unit -> (unit -> X) -> X)
  read__1038 : (x_1:bool[x_1] -> int -> (int -> X) -> X)
  
(0-1) Abstracting ... DONE!

(0-2) Checking HORS ... DONE!

Error trace::
  main_1574 ... --> 
  f_1582 ... --> 
  f_1583 ... --> 
  main_1056 [1/2] ... --> 
  g_1052 [1/2] ... --> 
  next_1050 [2/2] ... --> 
  f_g_1581 ... --> 
  f_1046 ... --> 
  close__1043 [1/2] ... --> 
  closeit_1041 [1/2] ... --> 
  f_f_1577 ... --> 
  close__1043 [1/2] ... --> 
  closeit_1041 [1/2] ... --> 
  f_f_1578 ... --> 
  read__1038 [1/2] ... --> 
  readit_1036 [2/2] ... --> 
  br_readit_1585 [2/2] ... --> 
  fail_1589 ... --> fail -->
  ERROR!

Spurious counter-example::
  0; 0; 0; 0; 0; 1; 0; 0; 0; 0; 0; 0; 0; 0; 0; 1; 1; 0

(0-3) Checking counter-example ... DONE!

(0-4) Discovering predicates ... 
begin AbsTypeInfer.refine(586)[1]
  program:
    main_1574  | true = ((Random.int 0) f_1582)
    br_closeit_1587 b_1588 st_1042 k_closeit_1271 | b_1588 = (k_closeit_1271 st_1042)
    br_closeit_1587 b_1588 st_1042 k_closeit_1271 | (not b_1588) = (loop_1030
                                                                    ()
                                                                    (
                                                                    f_closeit_1576 st_1042
                                                                    k_closeit_1271))
    br_readit_1585 b_1586 st_1037 k_readit_1206 | b_1586 = (k_readit_1206 st_1037)
    br_readit_1585 b_1586 st_1037 k_readit_1206 | (not b_1586) = (fail_1589 true
                                                                    (f_readit_1575 st_1037))
    close__1043 x_1044 st_1045 k_close__1309 | x_1044 = (closeit_1041 st_1045
                                                                    k_close__1309)
    close__1043 x_1044 st_1045 k_close__1309 | (not x_1044) = (k_close__1309 st_1045)
    closeit_1041 st_1042 k_closeit_1271 | (st_1042 = 1) = (k_closeit_1271 2)
    closeit_1041 st_1042 k_closeit_1271 | (not (st_1042 = 1)) = (br_closeit_1587 (
                                                                    st_1042 = 3)
                                                                    st_1042
                                                                    k_closeit_1271)
    f_1046 x_1047 y_1048 st_1049 k_f_1343 | true = (close__1043
                                                      x_1047
                                                      st_1049
                                                      (f_f_1577 st_1049
                                                                x_1047
                                                                y_1048
                                                                k_f_1343))
    f_1582 x_1532 | true = ((Random.int 0) (f_1583 x_1532))
    f_1583 x_1532 x_1545 | true = (main_1056 x_1532
                                             x_1545
                                             (f_1584 x_1532
                                                     x_1545))
    f_1584 x_1532 x_1545 x_1529 | true = end
    f_closeit_1576 st_1042 k_closeit_1271 x_1274 | true = (k_closeit_1271 0)
    f_f_1577 st_1049 x_1047 y_1048 k_f_1343 x_1368 | true = (close__1043
                                                               y_1048
                                                               x_1368
                                                               (f_f_1578 st_1049
                                                                    x_1047
                                                                    x_1368
                                                                    y_1048
                                                                    k_f_1343))
    f_f_1578 st_1049 x_1047 x_1368 y_1048 k_f_1343 x_1346 | true = (read__1038
                                                                    x_1047
                                                                    st_1049
                                                                    (
                                                                    f_f_1579
                                                                    st_1049
                                                                    x_1047
                                                                    x_1346
                                                                    x_1368
                                                                    y_1048
                                                                    k_f_1343))
    f_f_1579 st_1049 x_1047 x_1346 x_1368 y_1048 k_f_1343 x_1395 | true = (
    read__1038 y_1048
               x_1395
               (f_f_1580 st_1049
                         x_1047
                         x_1346
                         x_1368
                         x_1395
                         y_1048
                         k_f_1343))
    f_f_1580 st_1049 x_1047 x_1346 x_1368 x_1395 y_1048 k_f_1343 x_1402 | true = (
    f_1046 x_1047
           y_1048
           x_1402
           k_f_1343)
    f_g_1581 b3_1053 st_1055 x_1054 k_g_1440 x_1462 | true = (f_1046 x_1054
                                                                    true
                                                                    x_1462
                                                                    k_g_1440)
    f_readit_1575 st_1037 x_1209 | true = bot
    fail_1589 b k | true = (fail ())
    g_1052 b3_1053 x_1054 st_1055 k_g_1440 | (b3_1053 > 0) = (next_1050
                                                                st_1055
                                                                (f_g_1581 b3_1053
                                                                    st_1055
                                                                    x_1054
                                                                    k_g_1440))
    g_1052 b3_1053 x_1054 st_1055 k_g_1440 | (not (b3_1053 > 0)) = (f_1046 x_1054
                                                                    false
                                                                    st_1055
                                                                    k_g_1440)
    k_main_u_1525 b2_1057 b3_1058 k_main_1495 x_1498 | true = (k_main_1495 ())
    loop_1030 x_1031 k_loop_1170 | true = (loop_1030 ()
                                                     k_loop_1170)
    main_1056 b2_1057 b3_1058 k_main_1495 | (b2_1057 > 0) = (g_1052
                                                               b3_1058
                                                               true
                                                               1
                                                               (k_main_u_1525 b2_1057
                                                                    b3_1058
                                                                    k_main_1495))
    main_1056 b2_1057 b3_1058 k_main_1495 | (not (b2_1057 > 0)) = (g_1052
                                                                    b3_1058
                                                                    false
                                                                    0
                                                                    (
                                                                    k_main_u_1525 b2_1057
                                                                    b3_1058
                                                                    k_main_1495))
    next_1050 st_1051 k_next_1416 | (st_1051 = 0) = (k_next_1416 1)
    next_1050 st_1051 k_next_1416 | (not (st_1051 = 0)) = (k_next_1416 3)
    read__1038 x_1039 st_1040 k_read__1243 | x_1039 = (readit_1036 st_1040
                                                                   k_read__1243)
    read__1038 x_1039 st_1040 k_read__1243 | (not x_1039) = (k_read__1243 st_1040)
    readit_1036 st_1037 k_readit_1206 | (st_1037 = 1) = (k_readit_1206 1)
    readit_1036 st_1037 k_readit_1206 | (not (st_1037 = 1)) = (br_readit_1585 (
                                                                    st_1037 = 3)
                                                                    st_1037
                                                                    k_readit_1206)
    main_1574:X
    br_closeit_1587:bool -> int -> (int -> X) -> X
    br_readit_1585:bool -> int -> (int -> X) -> X
    close__1043:bool -> int -> (int -> X) -> X
    closeit_1041:int -> (int -> X) -> X
    f_1046:bool -> bool -> int -> (unit -> X) -> X
    f_1582:int -> X
    f_1583:int -> int -> X
    f_1584:int -> int -> unit -> X
    f_closeit_1576:int -> (int -> X) -> unit -> X
    f_f_1577:int -> bool -> bool -> (unit -> X) -> int -> X
    f_f_1578:int -> bool -> int -> bool -> (unit -> X) -> int -> X
    f_f_1579:int -> bool -> int -> int -> bool -> (unit -> X) -> int -> X
    f_f_1580:int -> bool -> int -> int -> int -> bool -> (unit -> X) -> int -> X
    f_g_1581:int -> int -> bool -> (unit -> X) -> int -> X
    f_readit_1575:int -> unit -> X
    fail_1589:bool -> (unit -> X) -> X
    g_1052:int -> bool -> int -> (unit -> X) -> X
    k_main_u_1525:int -> int -> (unit -> X) -> unit -> X
    loop_1030:unit -> (unit -> X) -> X
    main_1056:int -> int -> (unit -> X) -> X
    next_1050:int -> (int -> X) -> X
    read__1038:bool -> int -> (int -> X) -> X
    readit_1036:int -> (int -> X) -> X
  inlined functions: br_closeit_1587,br_readit_1585,closeit_1041,f_1582,f_1583,f_1584,f_closeit_1576,f_f_1577,f_f_1578,f_f_1579,f_f_1580,f_g_1581,f_readit_1575,g_1052,k_main_u_1525,main_1056,next_1050,readit_1036
  counterexample: 0:0:0:0:0:1:0:0:0:0:0:0:0:0:0:1:1:0
  error traces:
    [true.nop(<f_1582@4:0> = var2)
     [true.nop((<f_1583@7:0> = <f_1582@4:0>) && (<f_1583@7:1> = var3))
      [true.((<main_1056@9:0> = <f_1583@7:0>) && (<main_1056@9:1> = <f_1583@7:1>))
       [(<main_1056@9:0> > 0).((<g_1052@12:0> = <main_1056@9:1>) && ((<g_1052@12:1> = true) && (<g_1052@12:2> = 1)))
        [(<g_1052@12:0> > 0).(<next_1050@15:0> = <g_1052@12:2>)
         [(not (<next_1050@15:0> = 0)).(<<next_1050@15:1>@18:0> = 3)
          [true.
           ((<f_g_1581@20:0> = <g_1052@12:0>) &&
            ((<f_g_1581@20:1> = <g_1052@12:2>) &&
             ((<f_g_1581@20:2> = <g_1052@12:1>) && (<f_g_1581@20:4> = <<next_1050@15:1>@18:0>))))
           [true.((<f_1046@22:0> = <f_g_1581@20:2>) && ((<f_1046@22:1> = true) && (<f_1046@22:2> = <f_g_1581@20:4>)))
            [true.((<close__1043@24:0> = <f_1046@22:0>) && (<close__1043@24:1> = <f_1046@22:2>))
             [<close__1043@24:0>.(<closeit_1041@27:0> = <close__1043@24:1>)
              [(<closeit_1041@27:0> = 1).(<<closeit_1041@27:1>@30:0> = 2)
               [true.(<<close__1043@24:2>@32:0> = <<closeit_1041@27:1>@30:0>)
                [true.
                 ((<f_f_1577@34:0> = <f_1046@22:2>) &&
                  ((<f_f_1577@34:1> = <f_1046@22:0>) &&
                   ((<f_f_1577@34:2> = <f_1046@22:1>) && (<f_f_1577@34:4> = <<close__1043@24:2>@32:0>))))
                 [true.((<close__1043@36:0> = <f_f_1577@34:2>) && (<close__1043@36:1> = <f_f_1577@34:4>))
                  [<close__1043@36:0>.(<closeit_1041@39:0> = <close__1043@36:1>)
                   [(<closeit_1041@39:0> = 1).(<<closeit_1041@39:1>@42:0> = 2)
                    [true.(<<close__1043@36:2>@44:0> = <<closeit_1041@39:1>@42:0>)
                     [true.
                      ((<f_f_1578@46:0> = <f_f_1577@34:0>) &&
                       ((<f_f_1578@46:1> = <f_f_1577@34:1>) &&
                        ((<f_f_1578@46:2> = <f_f_1577@34:4>) &&
                         ((<f_f_1578@46:3> = <f_f_1577@34:2>) && (<f_f_1578@46:5> = <<close__1043@36:2>@44:0>)))))
                      [true.((<read__1038@48:0> = <f_f_1578@46:1>) && (<read__1038@48:1> = <f_f_1578@46:0>))
                       [<read__1038@48:0>.(<readit_1036@51:0> = <read__1038@48:1>)
                        [(not (<readit_1036@51:0> = 1)).
                         ((<br_readit_1585@54:0> = (<readit_1036@51:0> = 3)) &&
                          (<br_readit_1585@54:1> = <readit_1036@51:0>))
                         [(not <br_readit_1585@54:0>).(<fail_1589@57:0> = true)[true.error
  begin RefTypeInfer.infer_etrs(587)[2]
    horn clauses:
      P[<fail_1589@57:0>](<fail_1589@57:0>:bool)|- bot
      
      P[<br_readit_1585@54:1>](false:bool,<br_readit_1585@54:1>:int), <fail_1589@57:0>
      |- P[<fail_1589@57:0>](<fail_1589@57:0>:bool)
      
      P[<readit_1036@51:0>](<br_readit_1585@54:1>:int),
      ((<br_readit_1585@54:1> <> 1) && (<br_readit_1585@54:0> = (<br_readit_1585@54:1> = 3)))
      |- P[<br_readit_1585@54:1>](<br_readit_1585@54:0>:bool,<br_readit_1585@54:1>:int)
      
      P[<read__1038@48:1>](true:bool,<readit_1036@51:0>:int)|- P[<readit_1036@51:0>](<readit_1036@51:0>:int)
      
      P[<f_f_1578@46:5>](<read__1038@48:1>:int,<read__1038@48:0>:bool,<f_f_1578@46:2>:int,<f_f_1578@46:3>:bool,<f_f_1578@46:5>:int)|- P[<read__1038@48:1>](
      <read__1038@48:0>:bool,<read__1038@48:1>:int)
      
      P[<f_f_1577@34:4>](<f_f_1578@46:0>:int,<f_f_1578@46:1>:bool,<f_f_1578@46:3>:bool,<f_f_1578@46:2>:int),
      P[<<close__1043@36:2>@44:0>](<f_f_1578@46:3>:bool,<f_f_1578@46:2>:int,<f_f_1578@46:5>:int)|- P[<f_f_1578@46:5>](
      <f_f_1578@46:0>:int,<f_f_1578@46:1>:bool,<f_f_1578@46:2>:int,<f_f_1578@46:3>:bool,
      <f_f_1578@46:5>:int)
      
      P[<close__1043@36:1>](<close__1043@36:0>:bool,<close__1043@36:1>:int),
      P[<<closeit_1041@39:1>@42:0>](<close__1043@36:1>:int,<<close__1043@36:2>@44:0>:int), <close__1043@36:0>
      |- P[<<close__1043@36:2>@44:0>](<close__1043@36:0>:bool,<close__1043@36:1>:int,
                                      <<close__1043@36:2>@44:0>:int)
      
      P[<closeit_1041@39:0>](<closeit_1041@39:0>:int), ((<closeit_1041@39:0> = 1) && (<<closeit_1041@39:1>@42:0> = 2))
      |- P[<<closeit_1041@39:1>@42:0>](<closeit_1041@39:0>:int,<<closeit_1041@39:1>@42:0>:int)
      
      P[<close__1043@36:1>](true:bool,<closeit_1041@39:0>:int)|- P[<closeit_1041@39:0>](<closeit_1041@39:0>:int)
      
      P[<f_f_1577@34:4>](<f_f_1577@34:0>:int,<f_f_1577@34:1>:bool,<close__1043@36:0>:bool,<close__1043@36:1>:int)|- P[<close__1043@36:1>](
      <close__1043@36:0>:bool,<close__1043@36:1>:int)
      
      P[<f_1046@22:2>](<f_f_1577@34:1>:bool,<f_f_1577@34:2>:bool,<f_f_1577@34:0>:int),
      P[<<close__1043@24:2>@32:0>](<f_f_1577@34:1>:bool,<f_f_1577@34:0>:int,<f_f_1577@34:4>:int)|- P[<f_f_1577@34:4>](
      <f_f_1577@34:0>:int,<f_f_1577@34:1>:bool,<f_f_1577@34:2>:bool,<f_f_1577@34:4>:int)
      
      P[<close__1043@24:1>](<close__1043@24:0>:bool,<close__1043@24:1>:int),
      P[<<closeit_1041@27:1>@30:0>](<close__1043@24:1>:int,<<close__1043@24:2>@32:0>:int), <close__1043@24:0>
      |- P[<<close__1043@24:2>@32:0>](<close__1043@24:0>:bool,<close__1043@24:1>:int,
                                      <<close__1043@24:2>@32:0>:int)
      
      P[<closeit_1041@27:0>](<closeit_1041@27:0>:int), ((<closeit_1041@27:0> = 1) && (<<closeit_1041@27:1>@30:0> = 2))
      |- P[<<closeit_1041@27:1>@30:0>](<closeit_1041@27:0>:int,<<closeit_1041@27:1>@30:0>:int)
      
      P[<close__1043@24:1>](true:bool,<closeit_1041@27:0>:int)|- P[<closeit_1041@27:0>](<closeit_1041@27:0>:int)
      
      P[<f_1046@22:2>](<close__1043@24:0>:bool,<f_1046@22:1>:bool,<close__1043@24:1>:int)|- P[<close__1043@24:1>](
      <close__1043@24:0>:bool,<close__1043@24:1>:int)
      
      P[<f_g_1581@20:4>](<f_g_1581@20:0>:int,<f_g_1581@20:1>:int,<f_1046@22:0>:bool,<f_1046@22:2>:int), <f_1046@22:1>
      |- P[<f_1046@22:2>](<f_1046@22:0>:bool,<f_1046@22:1>:bool,<f_1046@22:2>:int)
      
      P[<g_1052@12:2>](<f_g_1581@20:0>:int,<f_g_1581@20:2>:bool,<f_g_1581@20:1>:int),
      P[<<next_1050@15:1>@18:0>](<f_g_1581@20:1>:int,<f_g_1581@20:4>:int), (
      <f_g_1581@20:0> > 0)
      |- P[<f_g_1581@20:4>](<f_g_1581@20:0>:int,<f_g_1581@20:1>:int,<f_g_1581@20:2>:bool,
                            <f_g_1581@20:4>:int)
      
      P[<next_1050@15:0>](<next_1050@15:0>:int), ((<<next_1050@15:1>@18:0> = 3) && (<next_1050@15:0> <> 0))
      |- P[<<next_1050@15:1>@18:0>](<next_1050@15:0>:int,<<next_1050@15:1>@18:0>:int)
      
      P[<g_1052@12:2>](<g_1052@12:0>:int,<g_1052@12:1>:bool,<next_1050@15:0>:int), (
      <g_1052@12:0> > 0) |- P[<next_1050@15:0>](<next_1050@15:0>:int)
      
      P[<main_1056@9:1>](<main_1056@9:0>:int,<g_1052@12:0>:int),
      ((<g_1052@12:2> = 1) && ((<main_1056@9:0> > 0) && <g_1052@12:1>))
      |- P[<g_1052@12:2>](<g_1052@12:0>:int,<g_1052@12:1>:bool,<g_1052@12:2>:int)
      
      P[<f_1583@7:1>](<main_1056@9:0>:int,<main_1056@9:1>:int)|- P[<main_1056@9:1>](
      <main_1056@9:0>:int,<main_1056@9:1>:int)
      
      P[<f_1582@4:0>](<f_1583@7:0>:int)|- P[<f_1583@7:1>](<f_1583@7:0>:int,
                                                          <f_1583@7:1>:int)
      
      |- P[<f_1582@4:0>](<f_1582@4:0>:int)
    call trees:
      <main_1574@1>
        <f_1582@4>
          <f_1583@7>
            <main_1056@9>
              <g_1052@12>
                <next_1050@15>
                </<next_1050@15:1>@18>
                <f_g_1581@20>
                  <f_1046@22>
                    <close__1043@24>
                      <closeit_1041@27>
                      </<closeit_1041@27:1>@30>
                    </<close__1043@24:2>@32>
                    <f_f_1577@34>
                      <close__1043@36>
                        <closeit_1041@39>
                        </<closeit_1041@39:1>@42>
                      </<close__1043@36:2>@44>
                      <f_f_1578@46>
                        <read__1038@48>
                          <readit_1036@51>
                            <br_readit_1585@54>
                              <fail_1589@57>
    inlined horn clauses:
      P[<fail_1589@57:0>](<fail_1589@57:0>:bool)|- bot
      
      P[<read__1038@48:1>](true:bool,<br_readit_1585@54:1>:int),
      ((<br_readit_1585@54:1> <> 1) && ((<br_readit_1585@54:1> <> 3) && <fail_1589@57:0>))
      |- P[<fail_1589@57:0>](<fail_1589@57:0>:bool)
      
      P[<f_1046@22:2>](<read__1038@48:0>:bool,<f_f_1578@46:3>:bool,<read__1038@48:1>:int),
      P[<<close__1043@24:2>@32:0>](<read__1038@48:0>:bool,<read__1038@48:1>:int,<f_f_1578@46:2>:int),
      P[<<close__1043@36:2>@44:0>](<f_f_1578@46:3>:bool,<f_f_1578@46:2>:int,<f_f_1578@46:5>:int)|- P[<read__1038@48:1>](
      <read__1038@48:0>:bool,<read__1038@48:1>:int)
      
      P[<close__1043@36:1>](<close__1043@36:0>:bool,<close__1043@36:1>:int),
      ((<close__1043@36:1> = 1) && ((<<close__1043@36:2>@44:0> = 2) && <close__1043@36:0>))
      |- P[<<close__1043@36:2>@44:0>](<close__1043@36:0>:bool,<close__1043@36:1>:int,
                                      <<close__1043@36:2>@44:0>:int)
      
      P[<f_1046@22:2>](<f_f_1577@34:1>:bool,<close__1043@36:0>:bool,<f_f_1577@34:0>:int),
      P[<<close__1043@24:2>@32:0>](<f_f_1577@34:1>:bool,<f_f_1577@34:0>:int,<close__1043@36:1>:int)|- P[<close__1043@36:1>](
      <close__1043@36:0>:bool,<close__1043@36:1>:int)
      
      P[<close__1043@24:1>](<close__1043@24:0>:bool,<close__1043@24:1>:int),
      ((<close__1043@24:1> = 1) && ((<<close__1043@24:2>@32:0> = 2) && <close__1043@24:0>))
      |- P[<<close__1043@24:2>@32:0>](<close__1043@24:0>:bool,<close__1043@24:1>:int,
                                      <<close__1043@24:2>@32:0>:int)
      
      P[<f_1046@22:2>](<close__1043@24:0>:bool,<f_1046@22:1>:bool,<close__1043@24:1>:int)|- P[<close__1043@24:1>](
      <close__1043@24:0>:bool,<close__1043@24:1>:int)
      
       ((<f_1046@22:2> = 3) && (<f_1046@22:0> && <f_1046@22:1>))
      |- P[<f_1046@22:2>](<f_1046@22:0>:bool,<f_1046@22:1>:bool,<f_1046@22:2>:int)
    begin ParamSubstInfer.infer(3889)[3]
      
    end ParamSubstInfer.infer(3889)[3] (0.038994 sec.)
    inferred extra parameters:
      
    begin RefTypeInfer.elim_coeffs(3891)[3]
      
    end RefTypeInfer.elim_coeffs(3891)[3] (0.000999 sec.)
    begin GenHcSolver.solve(4352)[3]
      Horn clauses:
        P[<fail_1589@57:0>](<fail_1589@57:0>:bool)|- bot
        
        P[<read__1038@48:1>](true:bool,<br_readit_1585@54:1>:int),
        ((<br_readit_1585@54:1> <> 1) && ((<br_readit_1585@54:1> <> 3) && <fail_1589@57:0>))
        |- P[<fail_1589@57:0>](<fail_1589@57:0>:bool)
        
        P[<f_1046@22:2>](<read__1038@48:0>:bool,<f_f_1578@46:3>:bool,<read__1038@48:1>:int),
        P[<<close__1043@24:2>@32:0>](<read__1038@48:0>:bool,<read__1038@48:1>:int,<f_f_1578@46:2>:int),
        P[<<close__1043@36:2>@44:0>](<f_f_1578@46:3>:bool,<f_f_1578@46:2>:int,<f_f_1578@46:5>:int)|- P[<read__1038@48:1>](
        <read__1038@48:0>:bool,<read__1038@48:1>:int)
        
        P[<close__1043@36:1>](<close__1043@36:0>:bool,<close__1043@36:1>:int),
        ((<close__1043@36:1> = 1) && ((<<close__1043@36:2>@44:0> = 2) && <close__1043@36:0>))
        |- P[<<close__1043@36:2>@44:0>](<close__1043@36:0>:bool,<close__1043@36:1>:int,
                                        <<close__1043@36:2>@44:0>:int)
        
        P[<f_1046@22:2>](<f_f_1577@34:1>:bool,<close__1043@36:0>:bool,<f_f_1577@34:0>:int),
        P[<<close__1043@24:2>@32:0>](<f_f_1577@34:1>:bool,<f_f_1577@34:0>:int,<close__1043@36:1>:int)|- P[<close__1043@36:1>](
        <close__1043@36:0>:bool,<close__1043@36:1>:int)
        
        P[<close__1043@24:1>](<close__1043@24:0>:bool,<close__1043@24:1>:int),
        ((<close__1043@24:1> = 1) && ((<<close__1043@24:2>@32:0> = 2) && <close__1043@24:0>))
        |- P[<<close__1043@24:2>@32:0>](<close__1043@24:0>:bool,<close__1043@24:1>:int,
                                        <<close__1043@24:2>@32:0>:int)
        
        P[<f_1046@22:2>](<close__1043@24:0>:bool,<f_1046@22:1>:bool,<close__1043@24:1>:int)|- P[<close__1043@24:1>](
        <close__1043@24:0>:bool,<close__1043@24:1>:int)
        
         ((<f_1046@22:2> = 3) && (<f_1046@22:0> && <f_1046@22:1>))
        |- P[<f_1046@22:2>](<f_1046@22:0>:bool,<f_1046@22:1>:bool,<f_1046@22:2>:int)
      lower bounds:
        P[<f_1046@22:2>](<f_1046@22:0>:bool,<f_1046@22:1>:bool,<f_1046@22:2>:int) =
        ((<f_1046@22:2> = 3) && (<f_1046@22:0> && <f_1046@22:1>))
        P[<close__1043@24:1>](<close__1043@24:0>:bool,<close__1043@24:1>:int) =
        ((<close__1043@24:1> = 3) && <close__1043@24:0>)
        P[<<close__1043@24:2>@32:0>](<close__1043@24:0>:bool,<close__1043@24:1>:int,<<close__1043@24:2>@32:0>:int) =
        false
        P[<close__1043@36:1>](<close__1043@36:0>:bool,<close__1043@36:1>:int) = false
        P[<<close__1043@36:2>@44:0>](<close__1043@36:0>:bool,<close__1043@36:1>:int,<<close__1043@36:2>@44:0>:int) =
        false
        P[<read__1038@48:1>](<read__1038@48:0>:bool,<read__1038@48:1>:int) = false
        P[<fail_1589@57:0>](<fail_1589@57:0>:bool) = false
      upper bounds:
        P[<<close__1043@36:2>@44:0>](var14:bool,var15:int,var16:int) = true
        P[<<close__1043@24:2>@32:0>](var5:bool,var6:int,var7:int) = true
      begin GenHcSolver.classify_pids(7619)[4]
        output:
          [<<close__1043@24:2>@32:0>;<<close__1043@36:2>@44:0>]
      end GenHcSolver.classify_pids(7619)[4] (0.000000 sec.)
      begin ApronInterface.convex_hull_interpolate(7630)[4]
        lb:false
        nub:false
        lb':false
        nub':false
        begin InterpProver.interpolate(7631)[5]
          begin InterpProver.interpolate_fresh(7632)[6]
            begin InterpProver.interpolate_log(7633)[7]
              input1: false
              input2: false
              begin InterpProver.interpolate_check(7634)[8]
                begin InterpProver.interpolate_simplify(7635)[9]
                  begin InterpProver.interpolate_quick(7648)[10]
                    
                  end InterpProver.interpolate_quick(7648)[10] (0.000000 sec.)
                  begin minimizing # of disjunctions(7652)[10]
                    input: false
                    output: false
                  end minimizing # of disjunctions(7652)[10] (0.000000 sec.)
                  
                end InterpProver.interpolate_simplify(7635)[9] (0.000000 sec.)
                
              end InterpProver.interpolate_check(7634)[8] (0.000000 sec.)
              output: false
            end InterpProver.interpolate_log(7633)[7] (0.000000 sec.)
            
          end InterpProver.interpolate_fresh(7632)[6] (0.000000 sec.)
          
        end InterpProver.interpolate(7631)[5] (0.000000 sec.)
        output:
          P[<<close__1043@24:2>@32:0>](<close__1043@24:0>:bool,<close__1043@24:1>:int,<<close__1043@24:2>@32:0>:int) =
          false
          P[<<close__1043@36:2>@44:0>](<close__1043@24:0>:bool,<close__1043@24:1>:int,<<close__1043@24:2>@32:0>:int) =
          false
      end ApronInterface.convex_hull_interpolate(7630)[4] (0.000999 sec.)
      Horn clauses:
        P[<fail_1589@57:0>](<fail_1589@57:0>:bool)|- bot
        
        P[<read__1038@48:1>](true:bool,<br_readit_1585@54:1>:int),
        ((<br_readit_1585@54:1> <> 1) && ((<br_readit_1585@54:1> <> 3) && <fail_1589@57:0>))
        |- P[<fail_1589@57:0>](<fail_1589@57:0>:bool)
        
        P[<close__1043@36:1>](true:bool,1:int)|- bot
        
        P[<close__1043@24:1>](true:bool,1:int)|- bot
        
        P[<f_1046@22:2>](<close__1043@24:0>:bool,<f_1046@22:1>:bool,<close__1043@24:1>:int)|- P[<close__1043@24:1>](
        <close__1043@24:0>:bool,<close__1043@24:1>:int)
        
         ((<f_1046@22:2> = 3) && (<f_1046@22:0> && <f_1046@22:1>))
        |- P[<f_1046@22:2>](<f_1046@22:0>:bool,<f_1046@22:1>:bool,<f_1046@22:2>:int)
      lower bounds:
        P[<f_1046@22:2>](<f_1046@22:0>:bool,<f_1046@22:1>:bool,<f_1046@22:2>:int) =
        ((<f_1046@22:2> = 3) && (<f_1046@22:0> && <f_1046@22:1>))
        P[<read__1038@48:1>](var27:bool,var28:int) = false
        P[<close__1043@36:1>](var29:bool,var30:int) = false
        P[<fail_1589@57:0>](<fail_1589@57:0>:bool) = false
        P[<close__1043@24:1>](<close__1043@24:0>:bool,<close__1043@24:1>:int) =
        ((<close__1043@24:1> = 3) && <close__1043@24:0>)
      upper bounds:
        P[<close__1043@36:1>](var51:bool,var52:int) = true
        P[<close__1043@24:1>](var40:bool,var41:int) = ((var41 <> 1) || (not var40))
      begin GenHcSolver.classify_pids(11361)[4]
        output:
          [<close__1043@24:1>;<close__1043@36:1>]
      end GenHcSolver.classify_pids(11361)[4] (0.001000 sec.)
      begin ApronInterface.convex_hull_interpolate(11382)[4]
        lb:((<close__1043@24:1> = 3) && <close__1043@24:0>)
        nub:(not ((<close__1043@24:1> <> 1) || (not <close__1043@24:0>)))
        lb':((<close__1043@24:1> = 3) && <close__1043@24:0>)
        nub':(not ((<close__1043@24:1> <> 1) || (not <close__1043@24:0>)))
        begin InterpProver.interpolate(11383)[5]
          begin InterpProver.interpolate_fresh(11384)[6]
            begin InterpProver.interpolate_log(11385)[7]
              input1: ((<close__1043@24:1> = 3) && <close__1043@24:0>)
              input2: (not ((<close__1043@24:1> <> 1) || (not <close__1043@24:0>)))
              begin InterpProver.interpolate_check(11386)[8]
                begin InterpProver.interpolate_simplify(11387)[9]
                  begin InterpProver.interpolate_quick(11424)[10]
                    begin CsisatInterface.interpolate_csisat_wrap(11433)[11]
                      begin CsisatInterface.interpolate_csisat_post_process(11434)[12]
                        begin CsisatInterface.interpolate_csisat_log(11435)[13]
                          input1: (3 = v_sep_close__1043_sep_24_sep_1 & v_sep_close__1043_sep_24_sep_0 = true())
                          input2: (1 = v_sep_close__1043_sep_24_sep_1 & v_sep_close__1043_sep_24_sep_0 = true())
                          begin CsisatInterface.interpolate_csisat_raw(11436)[14]
                            
                          end CsisatInterface.interpolate_csisat_raw(11436)[14] (0.001000 sec.)
                          output: -1*v_sep_close__1043_sep_24_sep_1 <= -3
                          
                        end CsisatInterface.interpolate_csisat_log(11435)[13] (0.001000 sec.)
                        after simplification: -1*v_sep_close__1043_sep_24_sep_1 <= -3
                        after dnf conversion: ((-1*v_sep_close__1043_sep_24_sep_1 <= -3))
                        
                      end CsisatInterface.interpolate_csisat_post_process(11434)[12] (0.001000 sec.)
                      
                    end CsisatInterface.interpolate_csisat_wrap(11433)[11] (0.001000 sec.)
                    
                  end InterpProver.interpolate_quick(11424)[10] (0.001000 sec.)
                  
                end InterpProver.interpolate_simplify(11387)[9] (0.001000 sec.)
                
              end InterpProver.interpolate_check(11386)[8] (0.001000 sec.)
              output: (3 <= <close__1043@24:1>)
            end InterpProver.interpolate_log(11385)[7] (0.001000 sec.)
            
          end InterpProver.interpolate_fresh(11384)[6] (0.001000 sec.)
          
        end InterpProver.interpolate(11383)[5] (0.001000 sec.)
        output:
          P[<close__1043@24:1>](<close__1043@24:0>:bool,<close__1043@24:1>:int) = (3 <= <close__1043@24:1>)
          P[<close__1043@36:1>](<close__1043@24:0>:bool,<close__1043@24:1>:int) = (3 <= <close__1043@24:1>)
      end ApronInterface.convex_hull_interpolate(11382)[4] (0.001000 sec.)
      Horn clauses:
        P[<fail_1589@57:0>](<fail_1589@57:0>:bool)|- bot
        
        P[<read__1038@48:1>](true:bool,<br_readit_1585@54:1>:int),
        ((<br_readit_1585@54:1> <> 1) && ((<br_readit_1585@54:1> <> 3) && <fail_1589@57:0>))
        |- P[<fail_1589@57:0>](<fail_1589@57:0>:bool)
        
        P[<f_1046@22:2>](<close__1043@24:0>:bool,<f_1046@22:1>:bool,<close__1043@24:1>:int), (
        3 > <close__1043@24:1>) |- bot
        
         ((<f_1046@22:2> = 3) && (<f_1046@22:0> && <f_1046@22:1>))
        |- P[<f_1046@22:2>](<f_1046@22:0>:bool,<f_1046@22:1>:bool,<f_1046@22:2>:int)
      lower bounds:
        P[<f_1046@22:2>](<f_1046@22:0>:bool,<f_1046@22:1>:bool,<f_1046@22:2>:int) =
        ((<f_1046@22:2> = 3) && (<f_1046@22:0> && <f_1046@22:1>))
        P[<read__1038@48:1>](var59:bool,var60:int) = false
        P[<fail_1589@57:0>](<fail_1589@57:0>:bool) = false
      upper bounds:
        P[<fail_1589@57:0>](var66:bool) = true
      begin GenHcSolver.classify_pids(13319)[4]
        output:
          [<fail_1589@57:0>]
      end GenHcSolver.classify_pids(13319)[4] (0.000000 sec.)
      lb:false
      nub:false
      begin ApronInterface.convex_hull_interpolate(13322)[4]
        lb:false
        nub:false
        lb':false
        nub':false
        begin InterpProver.interpolate(13323)[5]
          begin InterpProver.interpolate_fresh(13324)[6]
            begin InterpProver.interpolate_log(13325)[7]
              input1: false
              input2: false
              begin InterpProver.interpolate_check(13326)[8]
                begin InterpProver.interpolate_simplify(13327)[9]
                  begin InterpProver.interpolate_quick(13340)[10]
                    
                  end InterpProver.interpolate_quick(13340)[10] (0.000000 sec.)
                  begin minimizing # of disjunctions(13344)[10]
                    input: false
                    output: false
                  end minimizing # of disjunctions(13344)[10] (0.000000 sec.)
                  
                end InterpProver.interpolate_simplify(13327)[9] (0.000000 sec.)
                
              end InterpProver.interpolate_check(13326)[8] (0.000000 sec.)
              output: false
            end InterpProver.interpolate_log(13325)[7] (0.000000 sec.)
            
          end InterpProver.interpolate_fresh(13324)[6] (0.000000 sec.)
          
        end InterpProver.interpolate(13323)[5] (0.000000 sec.)
        output:
          P[<fail_1589@57:0>](<fail_1589@57:0>:bool) = false
      end ApronInterface.convex_hull_interpolate(13322)[4] (0.000000 sec.)
      Horn clauses:
        P[<read__1038@48:1>](true:bool,<br_readit_1585@54:1>:int),
        ((<br_readit_1585@54:1> <> 1) && (<br_readit_1585@54:1> <> 3)) |- bot
        
        P[<f_1046@22:2>](<close__1043@24:0>:bool,<f_1046@22:1>:bool,<close__1043@24:1>:int), (
        3 > <close__1043@24:1>) |- bot
        
         ((<f_1046@22:2> = 3) && (<f_1046@22:0> && <f_1046@22:1>))
        |- P[<f_1046@22:2>](<f_1046@22:0>:bool,<f_1046@22:1>:bool,<f_1046@22:2>:int)
      lower bounds:
        P[<f_1046@22:2>](<f_1046@22:0>:bool,<f_1046@22:1>:bool,<f_1046@22:2>:int) =
        ((<f_1046@22:2> = 3) && (<f_1046@22:0> && <f_1046@22:1>))
        P[<read__1038@48:1>](var69:bool,var70:int) = false
      upper bounds:
        P[<read__1038@48:1>](var75:bool,var76:int) = true
      begin GenHcSolver.classify_pids(14440)[4]
        output:
          [<read__1038@48:1>]
      end GenHcSolver.classify_pids(14440)[4] (0.000000 sec.)
      lb:false
      nub:false
      begin ApronInterface.convex_hull_interpolate(14443)[4]
        lb:false
        nub:false
        lb':false
        nub':false
        begin InterpProver.interpolate(14444)[5]
          begin InterpProver.interpolate_fresh(14445)[6]
            begin InterpProver.interpolate_log(14446)[7]
              input1: false
              input2: false
              begin InterpProver.interpolate_check(14447)[8]
                begin InterpProver.interpolate_simplify(14448)[9]
                  begin InterpProver.interpolate_quick(14461)[10]
                    
                  end InterpProver.interpolate_quick(14461)[10] (0.000000 sec.)
                  begin minimizing # of disjunctions(14465)[10]
                    input: false
                    output: false
                  end minimizing # of disjunctions(14465)[10] (0.000000 sec.)
                  
                end InterpProver.interpolate_simplify(14448)[9] (0.000000 sec.)
                
              end InterpProver.interpolate_check(14447)[8] (0.000000 sec.)
              output: false
            end InterpProver.interpolate_log(14446)[7] (0.000000 sec.)
            
          end InterpProver.interpolate_fresh(14445)[6] (0.000000 sec.)
          
        end InterpProver.interpolate(14444)[5] (0.000000 sec.)
        output:
          P[<read__1038@48:1>](var69:bool,var70:int) = false
      end ApronInterface.convex_hull_interpolate(14443)[4] (0.000000 sec.)
      Horn clauses:
        P[<f_1046@22:2>](<close__1043@24:0>:bool,<f_1046@22:1>:bool,<close__1043@24:1>:int), (
        3 > <close__1043@24:1>) |- bot
        
         ((<f_1046@22:2> = 3) && (<f_1046@22:0> && <f_1046@22:1>))
        |- P[<f_1046@22:2>](<f_1046@22:0>:bool,<f_1046@22:1>:bool,<f_1046@22:2>:int)
      lower bounds:
        P[<f_1046@22:2>](<f_1046@22:0>:bool,<f_1046@22:1>:bool,<f_1046@22:2>:int) =
        ((<f_1046@22:2> = 3) && (<f_1046@22:0> && <f_1046@22:1>))
      upper bounds:
        P[<f_1046@22:2>](var77:bool,var78:bool,var79:int) = (3 <= var79)
      begin GenHcSolver.classify_pids(15273)[4]
        output:
          [<f_1046@22:2>]
      end GenHcSolver.classify_pids(15273)[4] (0.000000 sec.)
      lb:((<f_1046@22:2> = 3) && (<f_1046@22:0> && <f_1046@22:1>))
      nub:(not (3 <= <f_1046@22:2>))
      begin ApronInterface.convex_hull_interpolate(15276)[4]
        lb:((<f_1046@22:2> = 3) && (<f_1046@22:0> && <f_1046@22:1>))
        nub:(not (3 <= <f_1046@22:2>))
        lb':((<f_1046@22:2> = 3) && (<f_1046@22:0> && <f_1046@22:1>))
        nub':(not (3 <= <f_1046@22:2>))
        begin InterpProver.interpolate(15277)[5]
          begin InterpProver.interpolate_fresh(15278)[6]
            begin InterpProver.interpolate_log(15279)[7]
              input1: ((<f_1046@22:2> = 3) && (<f_1046@22:0> && <f_1046@22:1>))
              input2: (not (3 <= <f_1046@22:2>))
              begin InterpProver.interpolate_check(15280)[8]
                begin InterpProver.interpolate_simplify(15281)[9]
                  begin InterpProver.interpolate_quick(15324)[10]
                    begin CsisatInterface.interpolate_csisat_wrap(15333)[11]
                      begin CsisatInterface.interpolate_csisat_post_process(15334)[12]
                        begin CsisatInterface.interpolate_csisat_log(15335)[13]
                          input1: 3 = v_sep_f_1046_sep_22_sep_2
                          input2: (1 + v_sep_f_1046_sep_22_sep_2) <= 3
                          begin CsisatInterface.interpolate_csisat_raw(15336)[14]
                            
                          end CsisatInterface.interpolate_csisat_raw(15336)[14] (0.000000 sec.)
                          output: -2*v_sep_f_1046_sep_22_sep_2 <= -6
                          
                        end CsisatInterface.interpolate_csisat_log(15335)[13] (0.000000 sec.)
                        after simplification: -2*v_sep_f_1046_sep_22_sep_2 <= -6
                        after dnf conversion: ((-2*v_sep_f_1046_sep_22_sep_2 <= -6))
                        
                      end CsisatInterface.interpolate_csisat_post_process(15334)[12] (0.000000 sec.)
                      
                    end CsisatInterface.interpolate_csisat_wrap(15333)[11] (0.000000 sec.)
                    
                  end InterpProver.interpolate_quick(15324)[10] (0.000000 sec.)
                  
                end InterpProver.interpolate_simplify(15281)[9] (0.001000 sec.)
                
              end InterpProver.interpolate_check(15280)[8] (0.002000 sec.)
              output: (3 <= <f_1046@22:2>)
            end InterpProver.interpolate_log(15279)[7] (0.002000 sec.)
            
          end InterpProver.interpolate_fresh(15278)[6] (0.002000 sec.)
          
        end InterpProver.interpolate(15277)[5] (0.002000 sec.)
        output:
          P[<f_1046@22:2>](<f_1046@22:0>:bool,<f_1046@22:1>:bool,<f_1046@22:2>:int) = (3 <= <f_1046@22:2>)
      end ApronInterface.convex_hull_interpolate(15276)[4] (0.002000 sec.)
      begin HcSolver.check_validity(15511)[4]
        input:
          P[<fail_1589@57:0>](<fail_1589@57:0>:bool)|- bot
          
          P[<read__1038@48:1>](true:bool,<br_readit_1585@54:1>:int),
          ((<br_readit_1585@54:1> <> 1) && ((<br_readit_1585@54:1> <> 3) && <fail_1589@57:0>))
          |- P[<fail_1589@57:0>](<fail_1589@57:0>:bool)
          
          P[<f_1046@22:2>](<read__1038@48:0>:bool,<f_f_1578@46:3>:bool,<read__1038@48:1>:int),
          P[<<close__1043@24:2>@32:0>](<read__1038@48:0>:bool,<read__1038@48:1>:int,<f_f_1578@46:2>:int),
          P[<<close__1043@36:2>@44:0>](<f_f_1578@46:3>:bool,<f_f_1578@46:2>:int,<f_f_1578@46:5>:int)|- P[<read__1038@48:1>](
          <read__1038@48:0>:bool,<read__1038@48:1>:int)
          
          P[<close__1043@36:1>](<close__1043@36:0>:bool,<close__1043@36:1>:int),
          ((<close__1043@36:1> = 1) && ((<<close__1043@36:2>@44:0> = 2) && <close__1043@36:0>))
          |- P[<<close__1043@36:2>@44:0>](<close__1043@36:0>:bool,<close__1043@36:1>:int,
                                          <<close__1043@36:2>@44:0>:int)
          
          P[<f_1046@22:2>](<f_f_1577@34:1>:bool,<close__1043@36:0>:bool,<f_f_1577@34:0>:int),
          P[<<close__1043@24:2>@32:0>](<f_f_1577@34:1>:bool,<f_f_1577@34:0>:int,<close__1043@36:1>:int)|- P[<close__1043@36:1>](
          <close__1043@36:0>:bool,<close__1043@36:1>:int)
          
          P[<close__1043@24:1>](<close__1043@24:0>:bool,<close__1043@24:1>:int),
          ((<close__1043@24:1> = 1) && ((<<close__1043@24:2>@32:0> = 2) && <close__1043@24:0>))
          |- P[<<close__1043@24:2>@32:0>](<close__1043@24:0>:bool,<close__1043@24:1>:int,
                                          <<close__1043@24:2>@32:0>:int)
          
          P[<f_1046@22:2>](<close__1043@24:0>:bool,<f_1046@22:1>:bool,<close__1043@24:1>:int)|- P[<close__1043@24:1>](
          <close__1043@24:0>:bool,<close__1043@24:1>:int)
          
           ((<f_1046@22:2> = 3) && (<f_1046@22:0> && <f_1046@22:1>))
          |- P[<f_1046@22:2>](<f_1046@22:0>:bool,<f_1046@22:1>:bool,<f_1046@22:2>:int)
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        
      end HcSolver.check_validity(15511)[4] (0.002999 sec.)
      solution:
        P[<fail_1589@57:0>](<fail_1589@57:0>:bool) = false
        P[<read__1038@48:1>](var69:bool,var70:int) = false
        P[<<close__1043@36:2>@44:0>](<close__1043@24:0>:bool,<close__1043@24:1>:int,<<close__1043@24:2>@32:0>:int) =
        false
        P[<close__1043@36:1>](<close__1043@24:0>:bool,<close__1043@24:1>:int) = (3 <= <close__1043@24:1>)
        P[<<close__1043@24:2>@32:0>](<close__1043@24:0>:bool,<close__1043@24:1>:int,<<close__1043@24:2>@32:0>:int) =
        false
        P[<close__1043@24:1>](<close__1043@24:0>:bool,<close__1043@24:1>:int) = (3 <= <close__1043@24:1>)
        P[<f_1046@22:2>](<f_1046@22:0>:bool,<f_1046@22:1>:bool,<f_1046@22:2>:int) = (3 <= <f_1046@22:2>)
    end GenHcSolver.solve(4352)[3] (0.040994 sec.)
    begin GenHcSolver.solve(16003)[3]
      Horn clauses:
        P[<fail_1589@57:0>](<fail_1589@57:0>:bool)|- bot
        
        P[<read__1038@48:1>](true:bool,<br_readit_1585@54:1>:int),
        ((<br_readit_1585@54:1> <> 1) && ((<br_readit_1585@54:1> <> 3) && <fail_1589@57:0>))
        |- P[<fail_1589@57:0>](<fail_1589@57:0>:bool)
        
        P[<f_1046@22:2>](<read__1038@48:0>:bool,<f_f_1578@46:3>:bool,<read__1038@48:1>:int),
        P[<<close__1043@24:2>@32:0>](<read__1038@48:0>:bool,<read__1038@48:1>:int,<f_f_1578@46:2>:int),
        P[<<close__1043@36:2>@44:0>](<f_f_1578@46:3>:bool,<f_f_1578@46:2>:int,<f_f_1578@46:5>:int)|- P[<read__1038@48:1>](
        <read__1038@48:0>:bool,<read__1038@48:1>:int)
        
        P[<close__1043@36:1>](<close__1043@36:0>:bool,<close__1043@36:1>:int),
        ((<close__1043@36:1> = 1) && ((<<close__1043@36:2>@44:0> = 2) && <close__1043@36:0>))
        |- P[<<close__1043@36:2>@44:0>](<close__1043@36:0>:bool,<close__1043@36:1>:int,
                                        <<close__1043@36:2>@44:0>:int)
        
        P[<f_1046@22:2>](<f_f_1577@34:1>:bool,<close__1043@36:0>:bool,<f_f_1577@34:0>:int),
        P[<<close__1043@24:2>@32:0>](<f_f_1577@34:1>:bool,<f_f_1577@34:0>:int,<close__1043@36:1>:int)|- P[<close__1043@36:1>](
        <close__1043@36:0>:bool,<close__1043@36:1>:int)
        
        P[<close__1043@24:1>](<close__1043@24:0>:bool,<close__1043@24:1>:int),
        ((<close__1043@24:1> = 1) && ((<<close__1043@24:2>@32:0> = 2) && <close__1043@24:0>))
        |- P[<<close__1043@24:2>@32:0>](<close__1043@24:0>:bool,<close__1043@24:1>:int,
                                        <<close__1043@24:2>@32:0>:int)
        
        P[<f_1046@22:2>](<close__1043@24:0>:bool,<f_1046@22:1>:bool,<close__1043@24:1>:int)|- P[<close__1043@24:1>](
        <close__1043@24:0>:bool,<close__1043@24:1>:int)
        
         ((<f_1046@22:2> = 3) && (<f_1046@22:0> && <f_1046@22:1>))
        |- P[<f_1046@22:2>](<f_1046@22:0>:bool,<f_1046@22:1>:bool,<f_1046@22:2>:int)
      lower bounds:
        P[<f_1046@22:2>](<f_1046@22:0>:bool,<f_1046@22:1>:bool,<f_1046@22:2>:int) =
        ((<f_1046@22:2> = 3) && (<f_1046@22:0> && <f_1046@22:1>))
        P[<close__1043@24:1>](<close__1043@24:0>:bool,<close__1043@24:1>:int) =
        ((<close__1043@24:1> = 3) && <close__1043@24:0>)
        P[<<close__1043@24:2>@32:0>](<close__1043@24:0>:bool,<close__1043@24:1>:int,<<close__1043@24:2>@32:0>:int) =
        false
        P[<close__1043@36:1>](<close__1043@36:0>:bool,<close__1043@36:1>:int) = false
        P[<<close__1043@36:2>@44:0>](<close__1043@36:0>:bool,<close__1043@36:1>:int,<<close__1043@36:2>@44:0>:int) =
        false
        P[<read__1038@48:1>](<read__1038@48:0>:bool,<read__1038@48:1>:int) = false
        P[<fail_1589@57:0>](<fail_1589@57:0>:bool) = false
      upper bounds:
        P[<<close__1043@36:2>@44:0>](var90:bool,var91:int,var92:int) = true
        P[<<close__1043@24:2>@32:0>](var81:bool,var82:int,var83:int) = true
      begin GenHcSolver.classify_pids(19270)[4]
        output:
          [<<close__1043@24:2>@32:0>;<<close__1043@36:2>@44:0>]
      end GenHcSolver.classify_pids(19270)[4] (0.000000 sec.)
      begin ApronInterface.convex_hull_interpolate(19281)[4]
        lb:false
        nub:false
        begin ExtFormula.Formula.case_analysis_boolean(19284)[5]
          ts: false
          
        end ExtFormula.Formula.case_analysis_boolean(19284)[5] (0.000000 sec.)
        begin ExtFormula.Formula.case_analysis_boolean(19289)[5]
          ts: false
          
        end ExtFormula.Formula.case_analysis_boolean(19289)[5] (0.000000 sec.)
        lb':(-1 >= 0)
        nub':(-1 >= 0)
        begin InterpProver.interpolate(19292)[5]
          begin InterpProver.interpolate_fresh(19293)[6]
            begin InterpProver.interpolate_log(19294)[7]
              input1: (-1 >= 0)
              input2: (-1 >= 0)
              begin InterpProver.interpolate_check(19295)[8]
                begin InterpProver.interpolate_simplify(19296)[9]
                  begin InterpProver.interpolate_quick(19311)[10]
                    
                  end InterpProver.interpolate_quick(19311)[10] (0.000000 sec.)
                  begin minimizing # of disjunctions(19315)[10]
                    input: false
                    output: false
                  end minimizing # of disjunctions(19315)[10] (0.000000 sec.)
                  
                end InterpProver.interpolate_simplify(19296)[9] (0.000000 sec.)
                
              end InterpProver.interpolate_check(19295)[8] (0.001000 sec.)
              output: false
            end InterpProver.interpolate_log(19294)[7] (0.001000 sec.)
            
          end InterpProver.interpolate_fresh(19293)[6] (0.001000 sec.)
          
        end InterpProver.interpolate(19292)[5] (0.001000 sec.)
        output:
          P[<<close__1043@24:2>@32:0>](<close__1043@24:0>:bool,<close__1043@24:1>:int,<<close__1043@24:2>@32:0>:int) =
          false
          P[<<close__1043@36:2>@44:0>](<close__1043@24:0>:bool,<close__1043@24:1>:int,<<close__1043@24:2>@32:0>:int) =
          false
      end ApronInterface.convex_hull_interpolate(19281)[4] (0.002000 sec.)
      Horn clauses:
        P[<fail_1589@57:0>](<fail_1589@57:0>:bool)|- bot
        
        P[<read__1038@48:1>](true:bool,<br_readit_1585@54:1>:int),
        ((<br_readit_1585@54:1> <> 1) && ((<br_readit_1585@54:1> <> 3) && <fail_1589@57:0>))
        |- P[<fail_1589@57:0>](<fail_1589@57:0>:bool)
        
        P[<close__1043@36:1>](true:bool,1:int)|- bot
        
        P[<close__1043@24:1>](true:bool,1:int)|- bot
        
        P[<f_1046@22:2>](<close__1043@24:0>:bool,<f_1046@22:1>:bool,<close__1043@24:1>:int)|- P[<close__1043@24:1>](
        <close__1043@24:0>:bool,<close__1043@24:1>:int)
        
         ((<f_1046@22:2> = 3) && (<f_1046@22:0> && <f_1046@22:1>))
        |- P[<f_1046@22:2>](<f_1046@22:0>:bool,<f_1046@22:1>:bool,<f_1046@22:2>:int)
      lower bounds:
        P[<f_1046@22:2>](<f_1046@22:0>:bool,<f_1046@22:1>:bool,<f_1046@22:2>:int) =
        ((<f_1046@22:2> = 3) && (<f_1046@22:0> && <f_1046@22:1>))
        P[<read__1038@48:1>](var103:bool,var104:int) = false
        P[<close__1043@36:1>](var105:bool,var106:int) = false
        P[<fail_1589@57:0>](<fail_1589@57:0>:bool) = false
        P[<close__1043@24:1>](<close__1043@24:0>:bool,<close__1043@24:1>:int) =
        ((<close__1043@24:1> = 3) && <close__1043@24:0>)
      upper bounds:
        P[<close__1043@36:1>](var127:bool,var128:int) = true
        P[<close__1043@24:1>](var116:bool,var117:int) = ((var117 <> 1) || (not var116))
      begin GenHcSolver.classify_pids(23031)[4]
        output:
          [<close__1043@24:1>;<close__1043@36:1>]
      end GenHcSolver.classify_pids(23031)[4] (0.000000 sec.)
      begin ApronInterface.convex_hull_interpolate(23052)[4]
        lb:((<close__1043@24:1> = 3) && <close__1043@24:0>)
        nub:(not ((<close__1043@24:1> <> 1) || (not <close__1043@24:0>)))
        begin ExtFormula.Formula.case_analysis_boolean(23061)[5]
          ts: ((<close__1043@24:1> = 3) && <close__1043@24:0>)
          
        end ExtFormula.Formula.case_analysis_boolean(23061)[5] (0.000000 sec.)
        begin ExtFormula.Formula.case_analysis_boolean(23088)[5]
          ts: ((<close__1043@24:1> = 1) && <close__1043@24:0>)
          
        end ExtFormula.Formula.case_analysis_boolean(23088)[5] (0.000000 sec.)
        lb':((((-3 + <close__1043@24:1>) = 0) && (<close__1043@24:0> = true)) ||
             ((-1 >= 0) && (<close__1043@24:0> = false)))
        nub':((((-1 + <close__1043@24:1>) = 0) && (<close__1043@24:0> = true)) ||
              ((-1 >= 0) && (<close__1043@24:0> = false)))
        begin InterpProver.interpolate(23107)[5]
          begin InterpProver.interpolate_fresh(23108)[6]
            begin InterpProver.interpolate_log(23109)[7]
              input1: ((((-3 + <close__1043@24:1>) = 0) && (<close__1043@24:0> = true)) ||
                       ((-1 >= 0) && (<close__1043@24:0> = false)))
              input2: ((((-1 + <close__1043@24:1>) = 0) && (<close__1043@24:0> = true)) ||
                       ((-1 >= 0) && (<close__1043@24:0> = false)))
              begin InterpProver.interpolate_check(23110)[8]
                begin InterpProver.interpolate_simplify(23111)[9]
                  begin InterpProver.interpolate_quick(23166)[10]
                    begin CsisatInterface.interpolate_csisat_wrap(23175)[11]
                      begin CsisatInterface.interpolate_csisat_post_process(23176)[12]
                        begin CsisatInterface.interpolate_csisat_log(23177)[13]
                          input1: (3 = v_sep_close__1043_sep_24_sep_1 & v_sep_close__1043_sep_24_sep_0 = true())
                          input2: (1 = v_sep_close__1043_sep_24_sep_1 & v_sep_close__1043_sep_24_sep_0 = true())
                          begin CsisatInterface.interpolate_csisat_raw(23178)[14]
                            
                          end CsisatInterface.interpolate_csisat_raw(23178)[14] (0.000000 sec.)
                          output: -1*v_sep_close__1043_sep_24_sep_1 <= -3
                          
                        end CsisatInterface.interpolate_csisat_log(23177)[13] (0.000000 sec.)
                        after simplification: -1*v_sep_close__1043_sep_24_sep_1 <= -3
                        after dnf conversion: ((-1*v_sep_close__1043_sep_24_sep_1 <= -3))
                        
                      end CsisatInterface.interpolate_csisat_post_process(23176)[12] (0.000000 sec.)
                      
                    end CsisatInterface.interpolate_csisat_wrap(23175)[11] (0.000000 sec.)
                    
                  end InterpProver.interpolate_quick(23166)[10] (0.001000 sec.)
                  
                end InterpProver.interpolate_simplify(23111)[9] (0.001000 sec.)
                
              end InterpProver.interpolate_check(23110)[8] (0.002000 sec.)
              output: (3 <= <close__1043@24:1>)
            end InterpProver.interpolate_log(23109)[7] (0.002000 sec.)
            
          end InterpProver.interpolate_fresh(23108)[6] (0.002000 sec.)
          
        end InterpProver.interpolate(23107)[5] (0.002000 sec.)
        output:
          P[<close__1043@24:1>](<close__1043@24:0>:bool,<close__1043@24:1>:int) = (3 <= <close__1043@24:1>)
          P[<close__1043@36:1>](<close__1043@24:0>:bool,<close__1043@24:1>:int) = (3 <= <close__1043@24:1>)
      end ApronInterface.convex_hull_interpolate(23052)[4] (0.002000 sec.)
      Horn clauses:
        P[<fail_1589@57:0>](<fail_1589@57:0>:bool)|- bot
        
        P[<read__1038@48:1>](true:bool,<br_readit_1585@54:1>:int),
        ((<br_readit_1585@54:1> <> 1) && ((<br_readit_1585@54:1> <> 3) && <fail_1589@57:0>))
        |- P[<fail_1589@57:0>](<fail_1589@57:0>:bool)
        
        P[<f_1046@22:2>](<close__1043@24:0>:bool,<f_1046@22:1>:bool,<close__1043@24:1>:int), (
        3 > <close__1043@24:1>) |- bot
        
         ((<f_1046@22:2> = 3) && (<f_1046@22:0> && <f_1046@22:1>))
        |- P[<f_1046@22:2>](<f_1046@22:0>:bool,<f_1046@22:1>:bool,<f_1046@22:2>:int)
      lower bounds:
        P[<f_1046@22:2>](<f_1046@22:0>:bool,<f_1046@22:1>:bool,<f_1046@22:2>:int) =
        ((<f_1046@22:2> = 3) && (<f_1046@22:0> && <f_1046@22:1>))
        P[<read__1038@48:1>](var135:bool,var136:int) = false
        P[<fail_1589@57:0>](<fail_1589@57:0>:bool) = false
      upper bounds:
        P[<fail_1589@57:0>](var142:bool) = true
      begin GenHcSolver.classify_pids(25075)[4]
        output:
          [<fail_1589@57:0>]
      end GenHcSolver.classify_pids(25075)[4] (0.000000 sec.)
      lb:false
      nub:false
      begin ApronInterface.convex_hull_interpolate(25078)[4]
        lb:false
        nub:false
        begin ExtFormula.Formula.case_analysis_boolean(25081)[5]
          ts: false
          
        end ExtFormula.Formula.case_analysis_boolean(25081)[5] (0.000999 sec.)
        begin ExtFormula.Formula.case_analysis_boolean(25086)[5]
          ts: false
          
        end ExtFormula.Formula.case_analysis_boolean(25086)[5] (0.000000 sec.)
        lb':(-1 >= 0)
        nub':(-1 >= 0)
        begin InterpProver.interpolate(25089)[5]
          begin InterpProver.interpolate_fresh(25090)[6]
            begin InterpProver.interpolate_log(25091)[7]
              input1: (-1 >= 0)
              input2: (-1 >= 0)
              begin InterpProver.interpolate_check(25092)[8]
                begin InterpProver.interpolate_simplify(25093)[9]
                  begin InterpProver.interpolate_quick(25108)[10]
                    
                  end InterpProver.interpolate_quick(25108)[10] (0.000000 sec.)
                  begin minimizing # of disjunctions(25112)[10]
                    input: false
                    output: false
                  end minimizing # of disjunctions(25112)[10] (0.000000 sec.)
                  
                end InterpProver.interpolate_simplify(25093)[9] (0.000000 sec.)
                
              end InterpProver.interpolate_check(25092)[8] (0.000000 sec.)
              output: false
            end InterpProver.interpolate_log(25091)[7] (0.000000 sec.)
            
          end InterpProver.interpolate_fresh(25090)[6] (0.000000 sec.)
          
        end InterpProver.interpolate(25089)[5] (0.000000 sec.)
        output:
          P[<fail_1589@57:0>](<fail_1589@57:0>:bool) = false
      end ApronInterface.convex_hull_interpolate(25078)[4] (0.000999 sec.)
      Horn clauses:
        P[<read__1038@48:1>](true:bool,<br_readit_1585@54:1>:int),
        ((<br_readit_1585@54:1> <> 1) && (<br_readit_1585@54:1> <> 3)) |- bot
        
        P[<f_1046@22:2>](<close__1043@24:0>:bool,<f_1046@22:1>:bool,<close__1043@24:1>:int), (
        3 > <close__1043@24:1>) |- bot
        
         ((<f_1046@22:2> = 3) && (<f_1046@22:0> && <f_1046@22:1>))
        |- P[<f_1046@22:2>](<f_1046@22:0>:bool,<f_1046@22:1>:bool,<f_1046@22:2>:int)
      lower bounds:
        P[<f_1046@22:2>](<f_1046@22:0>:bool,<f_1046@22:1>:bool,<f_1046@22:2>:int) =
        ((<f_1046@22:2> = 3) && (<f_1046@22:0> && <f_1046@22:1>))
        P[<read__1038@48:1>](var145:bool,var146:int) = false
      upper bounds:
        P[<read__1038@48:1>](var151:bool,var152:int) = true
      begin GenHcSolver.classify_pids(26215)[4]
        output:
          [<read__1038@48:1>]
      end GenHcSolver.classify_pids(26215)[4] (0.000000 sec.)
      lb:false
      nub:false
      begin ApronInterface.convex_hull_interpolate(26218)[4]
        lb:false
        nub:false
        begin ExtFormula.Formula.case_analysis_boolean(26221)[5]
          ts: false
          
        end ExtFormula.Formula.case_analysis_boolean(26221)[5] (0.000000 sec.)
        begin ExtFormula.Formula.case_analysis_boolean(26226)[5]
          ts: false
          
        end ExtFormula.Formula.case_analysis_boolean(26226)[5] (0.000000 sec.)
        lb':(-1 >= 0)
        nub':(-1 >= 0)
        begin InterpProver.interpolate(26229)[5]
          begin InterpProver.interpolate_fresh(26230)[6]
            begin InterpProver.interpolate_log(26231)[7]
              input1: (-1 >= 0)
              input2: (-1 >= 0)
              begin InterpProver.interpolate_check(26232)[8]
                begin InterpProver.interpolate_simplify(26233)[9]
                  begin InterpProver.interpolate_quick(26248)[10]
                    
                  end InterpProver.interpolate_quick(26248)[10] (0.000000 sec.)
                  begin minimizing # of disjunctions(26252)[10]
                    input: false
                    output: false
                  end minimizing # of disjunctions(26252)[10] (0.000000 sec.)
                  
                end InterpProver.interpolate_simplify(26233)[9] (0.000000 sec.)
                
              end InterpProver.interpolate_check(26232)[8] (0.001000 sec.)
              output: false
            end InterpProver.interpolate_log(26231)[7] (0.001000 sec.)
            
          end InterpProver.interpolate_fresh(26230)[6] (0.001000 sec.)
          
        end InterpProver.interpolate(26229)[5] (0.001000 sec.)
        output:
          P[<read__1038@48:1>](var145:bool,var146:int) = false
      end ApronInterface.convex_hull_interpolate(26218)[4] (0.001000 sec.)
      Horn clauses:
        P[<f_1046@22:2>](<close__1043@24:0>:bool,<f_1046@22:1>:bool,<close__1043@24:1>:int), (
        3 > <close__1043@24:1>) |- bot
        
         ((<f_1046@22:2> = 3) && (<f_1046@22:0> && <f_1046@22:1>))
        |- P[<f_1046@22:2>](<f_1046@22:0>:bool,<f_1046@22:1>:bool,<f_1046@22:2>:int)
      lower bounds:
        P[<f_1046@22:2>](<f_1046@22:0>:bool,<f_1046@22:1>:bool,<f_1046@22:2>:int) =
        ((<f_1046@22:2> = 3) && (<f_1046@22:0> && <f_1046@22:1>))
      upper bounds:
        P[<f_1046@22:2>](var153:bool,var154:bool,var155:int) = (3 <= var155)
      begin GenHcSolver.classify_pids(27067)[4]
        output:
          [<f_1046@22:2>]
      end GenHcSolver.classify_pids(27067)[4] (0.000000 sec.)
      lb:((<f_1046@22:2> = 3) && (<f_1046@22:0> && <f_1046@22:1>))
      nub:(not (3 <= <f_1046@22:2>))
      begin ApronInterface.convex_hull_interpolate(27070)[4]
        lb:((<f_1046@22:2> = 3) && (<f_1046@22:0> && <f_1046@22:1>))
        nub:(not (3 <= <f_1046@22:2>))
        begin ExtFormula.Formula.case_analysis_boolean(27083)[5]
          ts: ((<f_1046@22:2> = 3) && (<f_1046@22:0> && <f_1046@22:1>))
          
        end ExtFormula.Formula.case_analysis_boolean(27083)[5] (0.000000 sec.)
        begin ExtFormula.Formula.case_analysis_boolean(27127)[5]
          ts: (3 > <f_1046@22:2>)
          
        end ExtFormula.Formula.case_analysis_boolean(27127)[5] (0.001000 sec.)
        lb':((((-3 + <f_1046@22:2>) = 0) && ((<f_1046@22:0> = true) && (<f_1046@22:1> = true))) ||
             (((-1 >= 0) && ((<f_1046@22:0> = true) && (<f_1046@22:1> = false))) ||
              (((-1 >= 0) && ((<f_1046@22:0> = false) && (<f_1046@22:1> = true))) ||
               ((-1 >= 0) && ((<f_1046@22:0> = false) && (<f_1046@22:1> = false))))))
        nub':((2 + (-1 * <f_1046@22:2>)) >= 0)
        begin InterpProver.interpolate(27132)[5]
          begin InterpProver.interpolate_fresh(27133)[6]
            begin InterpProver.interpolate_log(27134)[7]
              input1: ((((-3 + <f_1046@22:2>) = 0) && ((<f_1046@22:0> = true) && (<f_1046@22:1> = true))) ||
                       (((-1 >= 0) && ((<f_1046@22:0> = true) && (<f_1046@22:1> = false))) ||
                        (((-1 >= 0) && ((<f_1046@22:0> = false) && (<f_1046@22:1> = true))) ||
                         ((-1 >= 0) && ((<f_1046@22:0> = false) && (<f_1046@22:1> = false))))))
              input2: ((2 + (-1 * <f_1046@22:2>)) >= 0)
              begin InterpProver.interpolate_check(27135)[8]
                begin InterpProver.interpolate_simplify(27136)[9]
                  begin InterpProver.interpolate_quick(27220)[10]
                    begin CsisatInterface.interpolate_csisat_wrap(27229)[11]
                      begin CsisatInterface.interpolate_csisat_post_process(27230)[12]
                        begin CsisatInterface.interpolate_csisat_log(27231)[13]
                          input1: 3 = v_sep_f_1046_sep_22_sep_2
                          input2: v_sep_f_1046_sep_22_sep_2 <= 2
                          begin CsisatInterface.interpolate_csisat_raw(27232)[14]
                            
                          end CsisatInterface.interpolate_csisat_raw(27232)[14] (0.000000 sec.)
                          output: -2*v_sep_f_1046_sep_22_sep_2 <= -6
                          
                        end CsisatInterface.interpolate_csisat_log(27231)[13] (0.000000 sec.)
                        after simplification: -2*v_sep_f_1046_sep_22_sep_2 <= -6
                        after dnf conversion: ((-2*v_sep_f_1046_sep_22_sep_2 <= -6))
                        
                      end CsisatInterface.interpolate_csisat_post_process(27230)[12] (0.000000 sec.)
                      
                    end CsisatInterface.interpolate_csisat_wrap(27229)[11] (0.000000 sec.)
                    
                  end InterpProver.interpolate_quick(27220)[10] (0.000000 sec.)
                  
                end InterpProver.interpolate_simplify(27136)[9] (0.001000 sec.)
                
              end InterpProver.interpolate_check(27135)[8] (0.001000 sec.)
              output: (3 <= <f_1046@22:2>)
            end InterpProver.interpolate_log(27134)[7] (0.001000 sec.)
            
          end InterpProver.interpolate_fresh(27133)[6] (0.001000 sec.)
          
        end InterpProver.interpolate(27132)[5] (0.001000 sec.)
        output:
          P[<f_1046@22:2>](<f_1046@22:0>:bool,<f_1046@22:1>:bool,<f_1046@22:2>:int) = (3 <= <f_1046@22:2>)
      end ApronInterface.convex_hull_interpolate(27070)[4] (0.002000 sec.)
      begin HcSolver.check_validity(27414)[4]
        input:
          P[<fail_1589@57:0>](<fail_1589@57:0>:bool)|- bot
          
          P[<read__1038@48:1>](true:bool,<br_readit_1585@54:1>:int),
          ((<br_readit_1585@54:1> <> 1) && ((<br_readit_1585@54:1> <> 3) && <fail_1589@57:0>))
          |- P[<fail_1589@57:0>](<fail_1589@57:0>:bool)
          
          P[<f_1046@22:2>](<read__1038@48:0>:bool,<f_f_1578@46:3>:bool,<read__1038@48:1>:int),
          P[<<close__1043@24:2>@32:0>](<read__1038@48:0>:bool,<read__1038@48:1>:int,<f_f_1578@46:2>:int),
          P[<<close__1043@36:2>@44:0>](<f_f_1578@46:3>:bool,<f_f_1578@46:2>:int,<f_f_1578@46:5>:int)|- P[<read__1038@48:1>](
          <read__1038@48:0>:bool,<read__1038@48:1>:int)
          
          P[<close__1043@36:1>](<close__1043@36:0>:bool,<close__1043@36:1>:int),
          ((<close__1043@36:1> = 1) && ((<<close__1043@36:2>@44:0> = 2) && <close__1043@36:0>))
          |- P[<<close__1043@36:2>@44:0>](<close__1043@36:0>:bool,<close__1043@36:1>:int,
                                          <<close__1043@36:2>@44:0>:int)
          
          P[<f_1046@22:2>](<f_f_1577@34:1>:bool,<close__1043@36:0>:bool,<f_f_1577@34:0>:int),
          P[<<close__1043@24:2>@32:0>](<f_f_1577@34:1>:bool,<f_f_1577@34:0>:int,<close__1043@36:1>:int)|- P[<close__1043@36:1>](
          <close__1043@36:0>:bool,<close__1043@36:1>:int)
          
          P[<close__1043@24:1>](<close__1043@24:0>:bool,<close__1043@24:1>:int),
          ((<close__1043@24:1> = 1) && ((<<close__1043@24:2>@32:0> = 2) && <close__1043@24:0>))
          |- P[<<close__1043@24:2>@32:0>](<close__1043@24:0>:bool,<close__1043@24:1>:int,
                                          <<close__1043@24:2>@32:0>:int)
          
          P[<f_1046@22:2>](<close__1043@24:0>:bool,<f_1046@22:1>:bool,<close__1043@24:1>:int)|- P[<close__1043@24:1>](
          <close__1043@24:0>:bool,<close__1043@24:1>:int)
          
           ((<f_1046@22:2> = 3) && (<f_1046@22:0> && <f_1046@22:1>))
          |- P[<f_1046@22:2>](<f_1046@22:0>:bool,<f_1046@22:1>:bool,<f_1046@22:2>:int)
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        
      end HcSolver.check_validity(27414)[4] (0.003000 sec.)
      solution:
        P[<fail_1589@57:0>](<fail_1589@57:0>:bool) = false
        P[<read__1038@48:1>](var145:bool,var146:int) = false
        P[<<close__1043@36:2>@44:0>](<close__1043@24:0>:bool,<close__1043@24:1>:int,<<close__1043@24:2>@32:0>:int) =
        false
        P[<close__1043@36:1>](<close__1043@24:0>:bool,<close__1043@24:1>:int) = (3 <= <close__1043@24:1>)
        P[<<close__1043@24:2>@32:0>](<close__1043@24:0>:bool,<close__1043@24:1>:int,<<close__1043@24:2>@32:0>:int) =
        false
        P[<close__1043@24:1>](<close__1043@24:0>:bool,<close__1043@24:1>:int) = (3 <= <close__1043@24:1>)
        P[<f_1046@22:2>](<f_1046@22:0>:bool,<f_1046@22:1>:bool,<f_1046@22:2>:int) = (3 <= <f_1046@22:2>)
    end GenHcSolver.solve(16003)[3] (0.051992 sec.)
    begin YhornInterface.solve(27906)[3]
      begin HcSolver.solve_ub(27907)[4]
        encoded:
          P[<fail_1589@57:0>](<fail_1589@57:0>:int)|- bot
          
          P[<read__1038@48:1>](1:int,<br_readit_1585@54:1>:int),
          ((<br_readit_1585@54:1> <> 1) && ((<br_readit_1585@54:1> <> 3) && (<fail_1589@57:0> = 1)))
          |- P[<fail_1589@57:0>](<fail_1589@57:0>:int)
          
          P[<f_1046@22:2>](<read__1038@48:0>:int,<f_f_1578@46:3>:int,<read__1038@48:1>:int),
          P[<<close__1043@24:2>@32:0>](<read__1038@48:0>:int,<read__1038@48:1>:int,<f_f_1578@46:2>:int),
          P[<<close__1043@36:2>@44:0>](<f_f_1578@46:3>:int,<f_f_1578@46:2>:int,<f_f_1578@46:5>:int)|- P[<read__1038@48:1>](
          <read__1038@48:0>:int,<read__1038@48:1>:int)
          
          P[<close__1043@36:1>](<close__1043@36:0>:int,<close__1043@36:1>:int),
          ((<close__1043@36:1> = 1) && ((<<close__1043@36:2>@44:0> = 2) && (<close__1043@36:0> = 1)))
          |- P[<<close__1043@36:2>@44:0>](<close__1043@36:0>:int,<close__1043@36:1>:int,
                                          <<close__1043@36:2>@44:0>:int)
          
          P[<f_1046@22:2>](<f_f_1577@34:1>:int,<close__1043@36:0>:int,<f_f_1577@34:0>:int),
          P[<<close__1043@24:2>@32:0>](<f_f_1577@34:1>:int,<f_f_1577@34:0>:int,<close__1043@36:1>:int)|- P[<close__1043@36:1>](
          <close__1043@36:0>:int,<close__1043@36:1>:int)
          
          P[<close__1043@24:1>](<close__1043@24:0>:int,<close__1043@24:1>:int),
          ((<close__1043@24:1> = 1) && ((<<close__1043@24:2>@32:0> = 2) && (<close__1043@24:0> = 1)))
          |- P[<<close__1043@24:2>@32:0>](<close__1043@24:0>:int,<close__1043@24:1>:int,
                                          <<close__1043@24:2>@32:0>:int)
          
          P[<f_1046@22:2>](<close__1043@24:0>:int,<f_1046@22:1>:int,<close__1043@24:1>:int)|- P[<close__1043@24:1>](
          <close__1043@24:0>:int,<close__1043@24:1>:int)
          
           ((<f_1046@22:2> = 3) && ((<f_1046@22:0> = 1) && (<f_1046@22:1> = 1)))
          |- P[<f_1046@22:2>](<f_1046@22:0>:int,<f_1046@22:1>:int,<f_1046@22:2>:int)
        input to Yhorn:
          P[<fail_1589@57:0>](<fail_1589@57:0>:int)|- bot
          
          P[<read__1038@48:1>](var156:int,<br_readit_1585@54:1>:int),
          ((<br_readit_1585@54:1> <> 3) && ((<br_readit_1585@54:1> <> 1) && ((var156 = 1) && (<fail_1589@57:0> = 1))))
          |- P[<fail_1589@57:0>](<fail_1589@57:0>:int)
          
          P[<f_1046@22:2>](<read__1038@48:0>:int,<f_f_1578@46:3>:int,<read__1038@48:1>:int),
          P[<<close__1043@24:2>@32:0>](<read__1038@48:0>:int,<read__1038@48:1>:int,<f_f_1578@46:2>:int),
          P[<<close__1043@36:2>@44:0>](<f_f_1578@46:3>:int,<f_f_1578@46:2>:int,<f_f_1578@46:5>:int)|- P[<read__1038@48:1>](
          <read__1038@48:0>:int,<read__1038@48:1>:int)
          
          P[<close__1043@36:1>](<close__1043@36:0>:int,<close__1043@36:1>:int),
          ((<close__1043@36:0> = 1) && ((<<close__1043@36:2>@44:0> = 2) && (<close__1043@36:1> = 1)))
          |- P[<<close__1043@36:2>@44:0>](<close__1043@36:0>:int,<close__1043@36:1>:int,
                                          <<close__1043@36:2>@44:0>:int)
          
          P[<f_1046@22:2>](<f_f_1577@34:1>:int,<close__1043@36:0>:int,<f_f_1577@34:0>:int),
          P[<<close__1043@24:2>@32:0>](<f_f_1577@34:1>:int,<f_f_1577@34:0>:int,<close__1043@36:1>:int)|- P[<close__1043@36:1>](
          <close__1043@36:0>:int,<close__1043@36:1>:int)
          
          P[<close__1043@24:1>](<close__1043@24:0>:int,<close__1043@24:1>:int),
          ((<close__1043@24:0> = 1) && ((<<close__1043@24:2>@32:0> = 2) && (<close__1043@24:1> = 1)))
          |- P[<<close__1043@24:2>@32:0>](<close__1043@24:0>:int,<close__1043@24:1>:int,
                                          <<close__1043@24:2>@32:0>:int)
          
          P[<f_1046@22:2>](<close__1043@24:0>:int,<f_1046@22:1>:int,<close__1043@24:1>:int)|- P[<close__1043@24:1>](
          <close__1043@24:0>:int,<close__1043@24:1>:int)
          
           ((<f_1046@22:1> = 1) && ((<f_1046@22:0> = 1) && (<f_1046@22:2> = 3)))
          |- P[<f_1046@22:2>](<f_1046@22:0>:int,<f_1046@22:1>:int,<f_1046@22:2>:int)Yhorn (Wed Sep 25 10:52:05 JST 2013)


(0=0) & (v_sep_fail_1589_sep_57_sep_0($20)) -> 1=0.
(($20-1=0) & ($21-1=0) & ($22-1<>0) & ($22-3<>0)) & (v_sep_read__1038_sep_48_sep_1($21,$22)) -> v_sep_fail_1589_sep_57_sep_0($20).
(0=0) & (v_sep_close__1043_sep_36_sep_2_sep_44_sep_0($23,$24,$25)) & (v_sep_close__1043_sep_24_sep_2_sep_32_sep_0($26,$27,$24)) & (v_sep_f_1046_sep_22_sep_2($26,$23,$27)) -> v_sep_read__1038_sep_48_sep_1($26,$27).
(($28-1=0) & ($29-2=0) & ($30-1=0)) & (v_sep_close__1043_sep_36_sep_1($30,$28)) -> v_sep_close__1043_sep_36_sep_2_sep_44_sep_0($30,$28,$29).
(0=0) & (v_sep_close__1043_sep_24_sep_2_sep_32_sep_0($31,$32,$28)) & (v_sep_f_1046_sep_22_sep_2($31,$30,$32)) -> v_sep_close__1043_sep_36_sep_1($30,$28).
(($33-1=0) & ($34-2=0) & ($35-1=0)) & (v_sep_close__1043_sep_24_sep_1($35,$33)) -> v_sep_close__1043_sep_24_sep_2_sep_32_sep_0($35,$33,$34).
(0=0) & (v_sep_f_1046_sep_22_sep_2($35,$36,$33)) -> v_sep_close__1043_sep_24_sep_1($35,$33).
($37-3=0) & ($38-1=0) & ($36-1=0) -> v_sep_f_1046_sep_22_sep_2($38,$36,$37).


v_sep_close__1043_sep_24_sep_1: X
v_sep_close__1043_sep_24_sep_2_sep_32_sep_0: X
v_sep_close__1043_sep_36_sep_1: X
v_sep_close__1043_sep_36_sep_2_sep_44_sep_0: X
v_sep_f_1046_sep_22_sep_2: X
v_sep_fail_1589_sep_57_sep_0: X
v_sep_read__1038_sep_48_sep_1: X
..............
v_sep_close__1043_sep_24_sep_1: X
v_sep_close__1043_sep_24_sep_2_sep_32_sep_0: X
v_sep_close__1043_sep_36_sep_1: X
v_sep_close__1043_sep_36_sep_2_sep_44_sep_0: X
v_sep_f_1046_sep_22_sep_2: X
v_sep_fail_1589_sep_57_sep_0: X
v_sep_read__1038_sep_48_sep_1: X
......
v_sep_close__1043_sep_24_sep_1: X
v_sep_close__1043_sep_24_sep_2_sep_32_sep_0: X
v_sep_close__1043_sep_36_sep_1: X
v_sep_close__1043_sep_36_sep_2_sep_44_sep_0: X
v_sep_f_1046_sep_22_sep_2: X
v_sep_fail_1589_sep_57_sep_0: X
v_sep_read__1038_sep_48_sep_1: X
.........
v_sep_close__1043_sep_24_sep_1: X
v_sep_close__1043_sep_24_sep_2_sep_32_sep_0: X
v_sep_close__1043_sep_36_sep_1: X
v_sep_close__1043_sep_36_sep_2_sep_44_sep_0: X
v_sep_f_1046_sep_22_sep_2: X
v_sep_fail_1589_sep_57_sep_0: X
v_sep_read__1038_sep_48_sep_1: X
...........
v_sep_close__1043_sep_24_sep_1: X
v_sep_close__1043_sep_24_sep_2_sep_32_sep_0: X
v_sep_close__1043_sep_36_sep_1: X
v_sep_close__1043_sep_36_sep_2_sep_44_sep_0: X
v_sep_f_1046_sep_22_sep_2: X
v_sep_fail_1589_sep_57_sep_0: X
v_sep_read__1038_sep_48_sep_1: X
..............(0=0) & (v_sep_fail_1589_sep_57_sep_0($20)) -> 1=0.
(($20-1=0) & ($21-1=0) & ($22-1<>0) & ($22-3<>0)) & (v_sep_read__1038_sep_48_sep_1($21,$22)) -> v_sep_fail_1589_sep_57_sep_0($20).
(0=0) & (v_sep_close__1043_sep_36_sep_2_sep_44_sep_0($23,$24,$25)) & (v_sep_close__1043_sep_24_sep_2_sep_32_sep_0($26,$27,$24)) & (v_sep_f_1046_sep_22_sep_2($26,$23,$27)) -> v_sep_read__1038_sep_48_sep_1($26,$27).
(($28-1=0) & ($29-2=0) & ($30-1=0)) & (v_sep_close__1043_sep_36_sep_1($30,$28)) -> v_sep_close__1043_sep_36_sep_2_sep_44_sep_0($30,$28,$29).
(0=0) & (v_sep_close__1043_sep_24_sep_2_sep_32_sep_0($31,$32,$28)) & (v_sep_f_1046_sep_22_sep_2($31,$30,$32)) -> v_sep_close__1043_sep_36_sep_1($30,$28).
(($33-1=0) & ($34-2=0) & ($35-1=0)) & (v_sep_close__1043_sep_24_sep_1($35,$33)) -> v_sep_close__1043_sep_24_sep_2_sep_32_sep_0($35,$33,$34).
(0=0) & (v_sep_f_1046_sep_22_sep_2($35,$36,$33)) -> v_sep_close__1043_sep_24_sep_1($35,$33).
($37-3=0) & ($38-1=0) & ($36-1=0) -> v_sep_f_1046_sep_22_sep_2($38,$36,$37).

        solution:
          P[<close__1043@24:1>]($73:bool,$75:int) = (3 <= $75)
          P[<<close__1043@24:2>@32:0>]($54:bool,$56:int,$58:int) = ((1 + $56) <= 0)
          P[<close__1043@36:1>]($68:bool,$70:int) = false
          P[<<close__1043@36:2>@44:0>]($47:bool,$49:int,$51:int) = false
          P[<f_1046@22:2>]($61:bool,$63:bool,$65:int) =
          ((3 <= $65) && (($61 && $63) || ((not $61) || ($61 && (not $63)))))
          P[<fail_1589@57:0>]($39:bool) = false
          P[<read__1038@48:1>]($42:bool,$44:int) = false
        
      end HcSolver.solve_ub(27907)[4] (0.047993 sec.)
      begin HcSolver.check_validity(28467)[4]
        input:
          P[<fail_1589@57:0>](<fail_1589@57:0>:bool)|- bot
          
          P[<read__1038@48:1>](true:bool,<br_readit_1585@54:1>:int),
          ((<br_readit_1585@54:1> <> 1) && ((<br_readit_1585@54:1> <> 3) && <fail_1589@57:0>))
          |- P[<fail_1589@57:0>](<fail_1589@57:0>:bool)
          
          P[<f_1046@22:2>](<read__1038@48:0>:bool,<f_f_1578@46:3>:bool,<read__1038@48:1>:int),
          P[<<close__1043@24:2>@32:0>](<read__1038@48:0>:bool,<read__1038@48:1>:int,<f_f_1578@46:2>:int),
          P[<<close__1043@36:2>@44:0>](<f_f_1578@46:3>:bool,<f_f_1578@46:2>:int,<f_f_1578@46:5>:int)|- P[<read__1038@48:1>](
          <read__1038@48:0>:bool,<read__1038@48:1>:int)
          
          P[<close__1043@36:1>](<close__1043@36:0>:bool,<close__1043@36:1>:int),
          ((<close__1043@36:1> = 1) && ((<<close__1043@36:2>@44:0> = 2) && <close__1043@36:0>))
          |- P[<<close__1043@36:2>@44:0>](<close__1043@36:0>:bool,<close__1043@36:1>:int,
                                          <<close__1043@36:2>@44:0>:int)
          
          P[<f_1046@22:2>](<f_f_1577@34:1>:bool,<close__1043@36:0>:bool,<f_f_1577@34:0>:int),
          P[<<close__1043@24:2>@32:0>](<f_f_1577@34:1>:bool,<f_f_1577@34:0>:int,<close__1043@36:1>:int)|- P[<close__1043@36:1>](
          <close__1043@36:0>:bool,<close__1043@36:1>:int)
          
          P[<close__1043@24:1>](<close__1043@24:0>:bool,<close__1043@24:1>:int),
          ((<close__1043@24:1> = 1) && ((<<close__1043@24:2>@32:0> = 2) && <close__1043@24:0>))
          |- P[<<close__1043@24:2>@32:0>](<close__1043@24:0>:bool,<close__1043@24:1>:int,
                                          <<close__1043@24:2>@32:0>:int)
          
          P[<f_1046@22:2>](<close__1043@24:0>:bool,<f_1046@22:1>:bool,<close__1043@24:1>:int)|- P[<close__1043@24:1>](
          <close__1043@24:0>:bool,<close__1043@24:1>:int)
          
           ((<f_1046@22:2> = 3) && (<f_1046@22:0> && <f_1046@22:1>))
          |- P[<f_1046@22:2>](<f_1046@22:0>:bool,<f_1046@22:1>:bool,<f_1046@22:2>:int)
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        
      end HcSolver.check_validity(28467)[4] (0.004999 sec.)
      solution:
        P[<close__1043@24:1>]($73:bool,$75:int) = (3 <= $75)
        P[<<close__1043@24:2>@32:0>]($54:bool,$56:int,$58:int) = ((1 + $56) <= 0)
        P[<close__1043@36:1>]($68:bool,$70:int) = false
        P[<<close__1043@36:2>@44:0>]($47:bool,$49:int,$51:int) = false
        P[<f_1046@22:2>]($61:bool,$63:bool,$65:int) =
        ((3 <= $65) && (($61 && $63) || ((not $61) || ($61 && (not $63)))))
        P[<fail_1589@57:0>]($39:bool) = false
        P[<read__1038@48:1>]($42:bool,$44:int) = false
    end YhornInterface.solve(27906)[3] (0.053992 sec.)
    
  end RefTypeInfer.infer_etrs(587)[2] (0.196970 sec.)
  refinement types:
    main_1574: X
    f_1582: v1:int -> X
    f_1583: v1:int -> v2:int -> X
    main_1056: v1:int -> v2:int -> (v3:unit -> X) -> X
    g_1052: v1:int -> v2:bool -> v3:int -> (v4:unit -> X) -> X
    next_1050: v1:int -> (v2:int -> X) -> X
    f_g_1581: v1:int -> v2:int -> v3:bool -> (v4:unit -> X) -> v6:int -> X
    f_1046: v1:bool -> v2:bool -> v3:{v3:int | (3 <= v3)} -> (v4:unit -> X) -> X
    close__1043: v1:bool -> v2:{v2:int | (3 <= v2)} -> (v3:{v3:int | false} -> X) -> X
    closeit_1041: v1:int -> (v2:int -> X) -> X
    f_f_1577: v1:int -> v2:bool -> v3:bool -> (v4:unit -> X) -> v6:int -> X
    close__1043: v1:bool -> v2:{v2:int | (3 <= v2)} -> (v3:{v3:int | false} -> X) -> X
    closeit_1041: v1:int -> (v2:int -> X) -> X
    f_f_1578: v1:int -> v2:bool -> v3:int -> v4:bool -> (v5:unit -> X) -> v7:int -> X
    read__1038: v1:bool -> v2:{v2:int | false} -> (v3:int -> X) -> X
    readit_1036: v1:int -> (v2:int -> X) -> X
    br_readit_1585: v1:bool -> v2:int -> (v3:int -> X) -> X
    fail_1589: v1:{v1:bool | false} -> (v2:unit -> X) -> X
    br_closeit_1587: var181:bool -> var180:int -> (var179:int -> X) -> X
    f_1584: var185:int -> var184:int -> var183:unit -> X
    f_closeit_1576: var190:int -> (var189:int -> X) -> var187:unit -> X
    f_f_1579: var199:int ->
              var198:bool -> var197:int -> var196:int -> var195:bool -> (var194:unit -> X) -> var192:int -> X
    f_f_1580: var209:int ->
              var208:bool ->
              var207:int -> var206:int -> var205:int -> var204:bool -> (var203:unit -> X) -> var201:int -> X
    f_readit_1575: var212:int -> var211:unit -> X
    k_main_u_1525: var218:int -> var217:int -> (var216:unit -> X) -> var214:unit -> X
    loop_1030: var222:unit -> (var221:unit -> X) -> X
  abstraction types:
    main_1574: X
    f_1582: v1:int -> X
    f_1583: v1:int -> v2:int -> X
    main_1056: v1:int -> v2:int -> (v3:unit -> X) -> X
    g_1052: v1:int -> v2:bool -> v3:int -> (v4:unit -> X) -> X
    next_1050: v1:int -> (v2:int -> X) -> X
    f_g_1581: v1:int -> v2:int -> v3:bool -> (v4:unit -> X) -> v6:int -> X
    f_1046: v1:bool -> v2:bool -> v3:int[v3 -> (3 <= v3)] -> (v4:unit -> X) -> X
    close__1043: var223:bool -> var224:int[var224 -> (3 <= var224)] -> (var225:int -> X) -> X
    closeit_1041: var228:int -> (var229:int -> X) -> X
    f_f_1577: v1:int -> v2:bool -> v3:bool -> (v4:unit -> X) -> v6:int -> X
    f_f_1578: v1:int -> v2:bool -> v3:int -> v4:bool -> (v5:unit -> X) -> v7:int -> X
    read__1038: v1:bool -> v2:int -> (v3:int -> X) -> X
    readit_1036: v1:int -> (v2:int -> X) -> X
    br_readit_1585: v1:bool -> v2:int -> (v3:int -> X) -> X
    fail_1589: v1:bool -> (v2:unit -> X) -> X
    br_closeit_1587: var181:bool -> var180:int -> (var179:int -> X) -> X
    f_1584: var185:int -> var184:int -> var183:unit -> X
    f_closeit_1576: var190:int -> (var189:int -> X) -> var187:unit -> X
    f_f_1579: var199:int ->
              var198:bool -> var197:int -> var196:int -> var195:bool -> (var194:unit -> X) -> var192:int -> X
    f_f_1580: var209:int ->
              var208:bool ->
              var207:int -> var206:int -> var205:int -> var204:bool -> (var203:unit -> X) -> var201:int -> X
    f_readit_1575: var212:int -> var211:unit -> X
    k_main_u_1525: var218:int -> var217:int -> (var216:unit -> X) -> var214:unit -> X
    loop_1030: var222:unit -> (var221:unit -> X) -> X
  
end AbsTypeInfer.refine(586)[1] (0.205968 sec.)
DONE!

Prefix of spurious counter-example::
0; 0; 0; 0; 0; 1; 0; 0; 0; 0

Program with abstraction types (CEGAR-cycle 1)::
Main: main_1574
  main_1574 -> (rand_int f_1582)
  br_closeit_1587 b_1588 st_1042 k_closeit_1271 when b_1588 -> (k_closeit_1271 st_1042)
  br_closeit_1587 b_1588 st_1042 k_closeit_1271 when (not b_1588) ->
      (loop_1030 () (f_closeit_1576 st_1042 k_closeit_1271))
  br_readit_1585 b_1586 st_1037 k_readit_1206 when b_1586 -> (k_readit_1206 st_1037)
  br_readit_1585 b_1586 st_1037 k_readit_1206 when (not b_1586) -> (fail_1589 true (f_readit_1575 st_1037))
  close__1043 x_1044 st_1045 k_close__1309 when x_1044 -> (closeit_1041 st_1045 k_close__1309)
  close__1043 x_1044 st_1045 k_close__1309 when (not x_1044) -> (k_close__1309 st_1045)
  closeit_1041 st_1042 k_closeit_1271 when (st_1042 = 1) -> (k_closeit_1271 2)
  closeit_1041 st_1042 k_closeit_1271 when (not (st_1042 = 1)) ->
      (br_closeit_1587 (st_1042 = 3) st_1042 k_closeit_1271)
  f_1046 x_1047 y_1048 st_1049 k_f_1343 -> (close__1043 x_1047 st_1049 (f_f_1577 st_1049 x_1047 y_1048 k_f_1343))
  f_1582 x_1532 -> (rand_int (f_1583 x_1532))
  f_1583 x_1532 x_1545 -> (main_1056 x_1532 x_1545 (f_1584 x_1532 x_1545))
  f_1584 x_1532 x_1545 x_1529 -> end
  f_closeit_1576 st_1042 k_closeit_1271 x_1274 -> (k_closeit_1271 0)
  f_f_1577 st_1049 x_1047 y_1048 k_f_1343 x_1368 ->
      (close__1043 y_1048 x_1368 (f_f_1578 st_1049 x_1047 x_1368 y_1048 k_f_1343))
  f_f_1578 st_1049 x_1047 x_1368 y_1048 k_f_1343 x_1346 ->
      (read__1038 x_1047 st_1049 (f_f_1579 st_1049 x_1047 x_1346 x_1368 y_1048 k_f_1343))
  f_f_1579 st_1049 x_1047 x_1346 x_1368 y_1048 k_f_1343 x_1395 ->
      (read__1038 y_1048 x_1395 (f_f_1580 st_1049 x_1047 x_1346 x_1368 x_1395 y_1048 k_f_1343))
  f_f_1580 st_1049 x_1047 x_1346 x_1368 x_1395 y_1048 k_f_1343 x_1402 -> (f_1046 x_1047 y_1048 x_1402 k_f_1343)
  f_g_1581 b3_1053 st_1055 x_1054 k_g_1440 x_1462 -> (f_1046 x_1054 true x_1462 k_g_1440)
  f_readit_1575 st_1037 x_1209 -> _|_
  fail_1589 b k -> {fail} => (k ())
  g_1052 b3_1053 x_1054 st_1055 k_g_1440 when (b3_1053 > 0) ->
      (next_1050 st_1055 (f_g_1581 b3_1053 st_1055 x_1054 k_g_1440))
  g_1052 b3_1053 x_1054 st_1055 k_g_1440 when (not (b3_1053 > 0)) -> (f_1046 x_1054 false st_1055 k_g_1440)
  k_main_u_1525 b2_1057 b3_1058 k_main_1495 x_1498 -> (k_main_1495 ())
  loop_1030 x_1031 k_loop_1170 -> (loop_1030 () k_loop_1170)
  main_1056 b2_1057 b3_1058 k_main_1495 when (b2_1057 > 0) ->
      (g_1052 b3_1058 true 1 (k_main_u_1525 b2_1057 b3_1058 k_main_1495))
  main_1056 b2_1057 b3_1058 k_main_1495 when (not (b2_1057 > 0)) ->
      (g_1052 b3_1058 false 0 (k_main_u_1525 b2_1057 b3_1058 k_main_1495))
  next_1050 st_1051 k_next_1416 when (st_1051 = 0) -> (k_next_1416 1)
  next_1050 st_1051 k_next_1416 when (not (st_1051 = 0)) -> (k_next_1416 3)
  read__1038 x_1039 st_1040 k_read__1243 when x_1039 -> (readit_1036 st_1040 k_read__1243)
  read__1038 x_1039 st_1040 k_read__1243 when (not x_1039) -> (k_read__1243 st_1040)
  readit_1036 st_1037 k_readit_1206 when (st_1037 = 1) -> (k_readit_1206 1)
  readit_1036 st_1037 k_readit_1206 when (not (st_1037 = 1)) -> (br_readit_1585 (st_1037 = 3) st_1037 k_readit_1206)
Types:
  main_1574 : X
  close__1043 : (x_1:bool[x_1] -> x_2:int[x_2 >= 3] -> (int -> X) -> X)
  f_1046 : (x_1:bool[x_1] -> x_2:bool[x_2] -> x_3:int[x_3 >= 3] -> (unit -> X) -> X)
  fail_1589 : (x_1:bool[x_1] -> (unit -> X) -> X)
  loop_1030 : (unit -> (unit -> X) -> X)
  read__1038 : (x_1:bool[x_1] -> int -> (int -> X) -> X)
  
(1-1) Abstracting ... DONE!

(1-2) Checking HORS ... DONE!

Error trace::
  main_1574 ... --> 
  f_1582 ... --> 
  f_1583 ... --> 
  main_1056 [2/2] ... --> 
  g_1052 [1/2] ... --> 
  next_1050 [1/2] ... --> 
  f_g_1581 ... --> 
  f_1046 ... --> 
  close__1043 [1/2] ... --> 
  closeit_1041 [2/2] ... --> 
  br_closeit_1587 [1/2] ... --> 
  f_f_1577 ... --> 
  close__1043 [1/2] ... --> 
  closeit_1041 [1/2] ... --> 
  f_f_1578 ... --> 
  read__1038 [2/2] ... --> 
  f_f_1579 ... --> 
  read__1038 [1/2] ... --> 
  readit_1036 [2/2] ... --> 
  br_readit_1585 [2/2] ... --> 
  fail_1589 ... --> fail -->
  ERROR!

Spurious counter-example::
  0; 0; 0; 1; 0; 0; 0; 0; 0; 1; 0; 0; 0; 0; 0; 1; 0; 0; 1; 1; 0

(1-3) Checking counter-example ... DONE!

(1-4) Discovering predicates ... 
begin AbsTypeInfer.refine(29819)[1]
  program:
    main_1574  | true = ((Random.int 0) f_1582)
    br_closeit_1587 b_1588 st_1042 k_closeit_1271 | b_1588 = (k_closeit_1271 st_1042)
    br_closeit_1587 b_1588 st_1042 k_closeit_1271 | (not b_1588) = (loop_1030
                                                                    ()
                                                                    (
                                                                    f_closeit_1576 st_1042
                                                                    k_closeit_1271))
    br_readit_1585 b_1586 st_1037 k_readit_1206 | b_1586 = (k_readit_1206 st_1037)
    br_readit_1585 b_1586 st_1037 k_readit_1206 | (not b_1586) = (fail_1589 true
                                                                    (f_readit_1575 st_1037))
    close__1043 x_1044 st_1045 k_close__1309 | x_1044 = (closeit_1041 st_1045
                                                                    k_close__1309)
    close__1043 x_1044 st_1045 k_close__1309 | (not x_1044) = (k_close__1309 st_1045)
    closeit_1041 st_1042 k_closeit_1271 | (st_1042 = 1) = (k_closeit_1271 2)
    closeit_1041 st_1042 k_closeit_1271 | (not (st_1042 = 1)) = (br_closeit_1587 (
                                                                    st_1042 = 3)
                                                                    st_1042
                                                                    k_closeit_1271)
    f_1046 x_1047 y_1048 st_1049 k_f_1343 | true = (close__1043
                                                      x_1047
                                                      st_1049
                                                      (f_f_1577 st_1049
                                                                x_1047
                                                                y_1048
                                                                k_f_1343))
    f_1582 x_1532 | true = ((Random.int 0) (f_1583 x_1532))
    f_1583 x_1532 x_1545 | true = (main_1056 x_1532
                                             x_1545
                                             (f_1584 x_1532
                                                     x_1545))
    f_1584 x_1532 x_1545 x_1529 | true = end
    f_closeit_1576 st_1042 k_closeit_1271 x_1274 | true = (k_closeit_1271 0)
    f_f_1577 st_1049 x_1047 y_1048 k_f_1343 x_1368 | true = (close__1043
                                                               y_1048
                                                               x_1368
                                                               (f_f_1578 st_1049
                                                                    x_1047
                                                                    x_1368
                                                                    y_1048
                                                                    k_f_1343))
    f_f_1578 st_1049 x_1047 x_1368 y_1048 k_f_1343 x_1346 | true = (read__1038
                                                                    x_1047
                                                                    st_1049
                                                                    (
                                                                    f_f_1579
                                                                    st_1049
                                                                    x_1047
                                                                    x_1346
                                                                    x_1368
                                                                    y_1048
                                                                    k_f_1343))
    f_f_1579 st_1049 x_1047 x_1346 x_1368 y_1048 k_f_1343 x_1395 | true = (
    read__1038 y_1048
               x_1395
               (f_f_1580 st_1049
                         x_1047
                         x_1346
                         x_1368
                         x_1395
                         y_1048
                         k_f_1343))
    f_f_1580 st_1049 x_1047 x_1346 x_1368 x_1395 y_1048 k_f_1343 x_1402 | true = (
    f_1046 x_1047
           y_1048
           x_1402
           k_f_1343)
    f_g_1581 b3_1053 st_1055 x_1054 k_g_1440 x_1462 | true = (f_1046 x_1054
                                                                    true
                                                                    x_1462
                                                                    k_g_1440)
    f_readit_1575 st_1037 x_1209 | true = bot
    fail_1589 b k | true = (fail ())
    g_1052 b3_1053 x_1054 st_1055 k_g_1440 | (b3_1053 > 0) = (next_1050
                                                                st_1055
                                                                (f_g_1581 b3_1053
                                                                    st_1055
                                                                    x_1054
                                                                    k_g_1440))
    g_1052 b3_1053 x_1054 st_1055 k_g_1440 | (not (b3_1053 > 0)) = (f_1046 x_1054
                                                                    false
                                                                    st_1055
                                                                    k_g_1440)
    k_main_u_1525 b2_1057 b3_1058 k_main_1495 x_1498 | true = (k_main_1495 ())
    loop_1030 x_1031 k_loop_1170 | true = (loop_1030 ()
                                                     k_loop_1170)
    main_1056 b2_1057 b3_1058 k_main_1495 | (b2_1057 > 0) = (g_1052
                                                               b3_1058
                                                               true
                                                               1
                                                               (k_main_u_1525 b2_1057
                                                                    b3_1058
                                                                    k_main_1495))
    main_1056 b2_1057 b3_1058 k_main_1495 | (not (b2_1057 > 0)) = (g_1052
                                                                    b3_1058
                                                                    false
                                                                    0
                                                                    (
                                                                    k_main_u_1525 b2_1057
                                                                    b3_1058
                                                                    k_main_1495))
    next_1050 st_1051 k_next_1416 | (st_1051 = 0) = (k_next_1416 1)
    next_1050 st_1051 k_next_1416 | (not (st_1051 = 0)) = (k_next_1416 3)
    read__1038 x_1039 st_1040 k_read__1243 | x_1039 = (readit_1036 st_1040
                                                                   k_read__1243)
    read__1038 x_1039 st_1040 k_read__1243 | (not x_1039) = (k_read__1243 st_1040)
    readit_1036 st_1037 k_readit_1206 | (st_1037 = 1) = (k_readit_1206 1)
    readit_1036 st_1037 k_readit_1206 | (not (st_1037 = 1)) = (br_readit_1585 (
                                                                    st_1037 = 3)
                                                                    st_1037
                                                                    k_readit_1206)
    main_1574:X
    br_closeit_1587:bool -> int -> (int -> X) -> X
    br_readit_1585:bool -> int -> (int -> X) -> X
    close__1043:bool -> int -> (int -> X) -> X
    closeit_1041:int -> (int -> X) -> X
    f_1046:bool -> bool -> int -> (unit -> X) -> X
    f_1582:int -> X
    f_1583:int -> int -> X
    f_1584:int -> int -> unit -> X
    f_closeit_1576:int -> (int -> X) -> unit -> X
    f_f_1577:int -> bool -> bool -> (unit -> X) -> int -> X
    f_f_1578:int -> bool -> int -> bool -> (unit -> X) -> int -> X
    f_f_1579:int -> bool -> int -> int -> bool -> (unit -> X) -> int -> X
    f_f_1580:int -> bool -> int -> int -> int -> bool -> (unit -> X) -> int -> X
    f_g_1581:int -> int -> bool -> (unit -> X) -> int -> X
    f_readit_1575:int -> unit -> X
    fail_1589:bool -> (unit -> X) -> X
    g_1052:int -> bool -> int -> (unit -> X) -> X
    k_main_u_1525:int -> int -> (unit -> X) -> unit -> X
    loop_1030:unit -> (unit -> X) -> X
    main_1056:int -> int -> (unit -> X) -> X
    next_1050:int -> (int -> X) -> X
    read__1038:bool -> int -> (int -> X) -> X
    readit_1036:int -> (int -> X) -> X
  inlined functions: br_closeit_1587,br_readit_1585,closeit_1041,f_1582,f_1583,f_1584,f_closeit_1576,f_f_1577,f_f_1578,f_f_1579,f_f_1580,f_g_1581,f_readit_1575,g_1052,k_main_u_1525,main_1056,next_1050,readit_1036
  counterexample: 0:0:0:1:0:0:0:0:0:1:0:0:0:0:0:1:0:0:1:1:0
  error traces:
    [true.nop(<f_1582@63:0> = var232)
     [true.nop((<f_1583@66:0> = <f_1582@63:0>) && (<f_1583@66:1> = var233))
      [true.((<main_1056@68:0> = <f_1583@66:0>) && (<main_1056@68:1> = <f_1583@66:1>))
       [(not (<main_1056@68:0> > 0)).
        ((<g_1052@71:0> = <main_1056@68:1>) && ((<g_1052@71:1> = false) && (<g_1052@71:2> = 0)))
        [(<g_1052@71:0> > 0).(<next_1050@74:0> = <g_1052@71:2>)
         [(<next_1050@74:0> = 0).(<<next_1050@74:1>@77:0> = 1)
          [true.
           ((<f_g_1581@79:0> = <g_1052@71:0>) &&
            ((<f_g_1581@79:1> = <g_1052@71:2>) &&
             ((<f_g_1581@79:2> = <g_1052@71:1>) && (<f_g_1581@79:4> = <<next_1050@74:1>@77:0>))))
           [true.((<f_1046@81:0> = <f_g_1581@79:2>) && ((<f_1046@81:1> = true) && (<f_1046@81:2> = <f_g_1581@79:4>)))
            [true.((<close__1043@83:0> = <f_1046@81:0>) && (<close__1043@83:1> = <f_1046@81:2>))
             [<close__1043@83:0>.(<closeit_1041@86:0> = <close__1043@83:1>)
              [(not (<closeit_1041@86:0> = 1)).
               ((<br_closeit_1587@89:0> = (<closeit_1041@86:0> = 3)) && (<br_closeit_1587@89:1> = <closeit_1041@86:0>))
               [<br_closeit_1587@89:0>.(<<br_closeit_1587@89:2>@92:0> = <br_closeit_1587@89:1>)
                [true.(<<closeit_1041@86:1>@94:0> = <<br_closeit_1587@89:2>@92:0>)
                 [true.(<<close__1043@83:2>@96:0> = <<closeit_1041@86:1>@94:0>)
                  [true.
                   ((<f_f_1577@98:0> = <f_1046@81:2>) &&
                    ((<f_f_1577@98:1> = <f_1046@81:0>) &&
                     ((<f_f_1577@98:2> = <f_1046@81:1>) && (<f_f_1577@98:4> = <<close__1043@83:2>@96:0>))))
                   [true.((<close__1043@100:0> = <f_f_1577@98:2>) && (<close__1043@100:1> = <f_f_1577@98:4>))
                    [<close__1043@100:0>.(<closeit_1041@103:0> = <close__1043@100:1>)
                     [(<closeit_1041@103:0> = 1).(<<closeit_1041@103:1>@106:0> = 2)
                      [true.(<<close__1043@100:2>@108:0> = <<closeit_1041@103:1>@106:0>)
                       [true.
                        ((<f_f_1578@110:0> = <f_f_1577@98:0>) &&
                         ((<f_f_1578@110:1> = <f_f_1577@98:1>) &&
                          ((<f_f_1578@110:2> = <f_f_1577@98:4>) &&
                           ((<f_f_1578@110:3> = <f_f_1577@98:2>) && (<f_f_1578@110:5> = <<close__1043@100:2>@108:0>)))))
                        [true.((<read__1038@112:0> = <f_f_1578@110:1>) && (<read__1038@112:1> = <f_f_1578@110:0>))
                         [(not <read__1038@112:0>).(<<read__1038@112:2>@115:0> = <read__1038@112:1>)
                          [true.
                           ((<f_f_1579@117:0> = <f_f_1578@110:0>) &&
                            ((<f_f_1579@117:1> = <f_f_1578@110:1>) &&
                             ((<f_f_1579@117:2> = <f_f_1578@110:5>) &&
                              ((<f_f_1579@117:3> = <f_f_1578@110:2>) &&
                               ((<f_f_1579@117:4> = <f_f_1578@110:3>) &&
                                (<f_f_1579@117:6> = <<read__1038@112:2>@115:0>))))))
                           [true.((<read__1038@119:0> = <f_f_1579@117:4>) && (<read__1038@119:1> = <f_f_1579@117:6>))
                            [<read__1038@119:0>.(<readit_1036@122:0> = <read__1038@119:1>)
                             [(not (<readit_1036@122:0> = 1)).
                              ((<br_readit_1585@125:0> = (<readit_1036@122:0> = 3)) &&
                               (<br_readit_1585@125:1> = <readit_1036@122:0>))
                              [(not <br_readit_1585@125:0>).(<fail_1589@128:0> = true)[true.error
  begin RefTypeInfer.infer_etrs(29820)[2]
    horn clauses:
      P[<fail_1589@128:0>](<fail_1589@128:0>:bool)|- bot
      
      P[<br_readit_1585@125:1>](false:bool,<br_readit_1585@125:1>:int), <fail_1589@128:0>
      |- P[<fail_1589@128:0>](<fail_1589@128:0>:bool)
      
      P[<readit_1036@122:0>](<br_readit_1585@125:1>:int),
      ((<br_readit_1585@125:1> <> 1) && (<br_readit_1585@125:0> = (<br_readit_1585@125:1> = 3)))
      |- P[<br_readit_1585@125:1>](<br_readit_1585@125:0>:bool,<br_readit_1585@125:1>:int)
      
      P[<read__1038@119:1>](true:bool,<readit_1036@122:0>:int)|- P[<readit_1036@122:0>](<readit_1036@122:0>:int)
      
      P[<f_f_1579@117:6>](<f_f_1579@117:0>:int,<f_f_1579@117:1>:bool,<f_f_1579@117:2>:int,<f_f_1579@117:3>:int,<read__1038@119:0>:bool,<read__1038@119:1>:int)|- P[<read__1038@119:1>](
      <read__1038@119:0>:bool,<read__1038@119:1>:int)
      
      P[<f_f_1578@110:5>](<f_f_1579@117:0>:int,<f_f_1579@117:1>:bool,<f_f_1579@117:3>:int,<f_f_1579@117:4>:bool,<f_f_1579@117:2>:int),
      P[<<read__1038@112:2>@115:0>](<f_f_1579@117:1>:bool,<f_f_1579@117:0>:int,<f_f_1579@117:6>:int)|- P[<f_f_1579@117:6>](
      <f_f_1579@117:0>:int,<f_f_1579@117:1>:bool,<f_f_1579@117:2>:int,
      <f_f_1579@117:3>:int,<f_f_1579@117:4>:bool,<f_f_1579@117:6>:int)
      
      P[<read__1038@112:1>](<read__1038@112:0>:bool,<read__1038@112:1>:int),
      ((<<read__1038@112:2>@115:0> = <read__1038@112:1>) && (not <read__1038@112:0>))
      |- P[<<read__1038@112:2>@115:0>](<read__1038@112:0>:bool,<read__1038@112:1>:int,
                                       <<read__1038@112:2>@115:0>:int)
      
      P[<f_f_1578@110:5>](<read__1038@112:1>:int,<read__1038@112:0>:bool,<f_f_1578@110:2>:int,<f_f_1578@110:3>:bool,<f_f_1578@110:5>:int)|- P[<read__1038@112:1>](
      <read__1038@112:0>:bool,<read__1038@112:1>:int)
      
      P[<f_f_1577@98:4>](<f_f_1578@110:0>:int,<f_f_1578@110:1>:bool,<f_f_1578@110:3>:bool,<f_f_1578@110:2>:int),
      P[<<close__1043@100:2>@108:0>](<f_f_1578@110:3>:bool,<f_f_1578@110:2>:int,<f_f_1578@110:5>:int)|- P[<f_f_1578@110:5>](
      <f_f_1578@110:0>:int,<f_f_1578@110:1>:bool,<f_f_1578@110:2>:int,
      <f_f_1578@110:3>:bool,<f_f_1578@110:5>:int)
      
      P[<close__1043@100:1>](<close__1043@100:0>:bool,<close__1043@100:1>:int),
      P[<<closeit_1041@103:1>@106:0>](<close__1043@100:1>:int,<<close__1043@100:2>@108:0>:int), <close__1043@100:0>
      |- P[<<close__1043@100:2>@108:0>](<close__1043@100:0>:bool,<close__1043@100:1>:int,
                                        <<close__1043@100:2>@108:0>:int)
      
      P[<closeit_1041@103:0>](<closeit_1041@103:0>:int),
      ((<closeit_1041@103:0> = 1) && (<<closeit_1041@103:1>@106:0> = 2))
      |- P[<<closeit_1041@103:1>@106:0>](<closeit_1041@103:0>:int,<<closeit_1041@103:1>@106:0>:int)
      
      P[<close__1043@100:1>](true:bool,<closeit_1041@103:0>:int)|- P[<closeit_1041@103:0>](<closeit_1041@103:0>:int)
      
      P[<f_f_1577@98:4>](<f_f_1577@98:0>:int,<f_f_1577@98:1>:bool,<close__1043@100:0>:bool,<close__1043@100:1>:int)|- P[<close__1043@100:1>](
      <close__1043@100:0>:bool,<close__1043@100:1>:int)
      
      P[<f_1046@81:2>](<f_f_1577@98:1>:bool,<f_f_1577@98:2>:bool,<f_f_1577@98:0>:int),
      P[<<close__1043@83:2>@96:0>](<f_f_1577@98:1>:bool,<f_f_1577@98:0>:int,<f_f_1577@98:4>:int)|- P[<f_f_1577@98:4>](
      <f_f_1577@98:0>:int,<f_f_1577@98:1>:bool,<f_f_1577@98:2>:bool,<f_f_1577@98:4>:int)
      
      P[<close__1043@83:1>](<close__1043@83:0>:bool,<close__1043@83:1>:int),
      P[<<closeit_1041@86:1>@94:0>](<close__1043@83:1>:int,<<close__1043@83:2>@96:0>:int), <close__1043@83:0>
      |- P[<<close__1043@83:2>@96:0>](<close__1043@83:0>:bool,<close__1043@83:1>:int,
                                      <<close__1043@83:2>@96:0>:int)
      
      P[<closeit_1041@86:0>](<closeit_1041@86:0>:int),
      P[<<br_closeit_1587@89:2>@92:0>]((<closeit_1041@86:0> = 3):bool,<closeit_1041@86:0>:int,<<closeit_1041@86:1>@94:0>:int),
      (<closeit_1041@86:0> <> 1)
      |- P[<<closeit_1041@86:1>@94:0>](<closeit_1041@86:0>:int,<<closeit_1041@86:1>@94:0>:int)
      
      P[<br_closeit_1587@89:1>](<br_closeit_1587@89:0>:bool,<br_closeit_1587@89:1>:int),
      ((<<br_closeit_1587@89:2>@92:0> = <br_closeit_1587@89:1>) && <br_closeit_1587@89:0>)
      |- P[<<br_closeit_1587@89:2>@92:0>](<br_closeit_1587@89:0>:bool,
                                          <br_closeit_1587@89:1>:int,
                                          <<br_closeit_1587@89:2>@92:0>:int)
      
      P[<closeit_1041@86:0>](<br_closeit_1587@89:1>:int),
      ((<br_closeit_1587@89:1> <> 1) && (<br_closeit_1587@89:0> = (<br_closeit_1587@89:1> = 3)))
      |- P[<br_closeit_1587@89:1>](<br_closeit_1587@89:0>:bool,<br_closeit_1587@89:1>:int)
      
      P[<close__1043@83:1>](true:bool,<closeit_1041@86:0>:int)|- P[<closeit_1041@86:0>](<closeit_1041@86:0>:int)
      
      P[<f_1046@81:2>](<close__1043@83:0>:bool,<f_1046@81:1>:bool,<close__1043@83:1>:int)|- P[<close__1043@83:1>](
      <close__1043@83:0>:bool,<close__1043@83:1>:int)
      
      P[<f_g_1581@79:4>](<f_g_1581@79:0>:int,<f_g_1581@79:1>:int,<f_1046@81:0>:bool,<f_1046@81:2>:int), <f_1046@81:1>
      |- P[<f_1046@81:2>](<f_1046@81:0>:bool,<f_1046@81:1>:bool,<f_1046@81:2>:int)
      
      P[<g_1052@71:2>](<f_g_1581@79:0>:int,<f_g_1581@79:2>:bool,<f_g_1581@79:1>:int),
      P[<<next_1050@74:1>@77:0>](<f_g_1581@79:1>:int,<f_g_1581@79:4>:int), (
      <f_g_1581@79:0> > 0)
      |- P[<f_g_1581@79:4>](<f_g_1581@79:0>:int,<f_g_1581@79:1>:int,<f_g_1581@79:2>:bool,
                            <f_g_1581@79:4>:int)
      
      P[<next_1050@74:0>](<next_1050@74:0>:int), ((<next_1050@74:0> = 0) && (<<next_1050@74:1>@77:0> = 1))
      |- P[<<next_1050@74:1>@77:0>](<next_1050@74:0>:int,<<next_1050@74:1>@77:0>:int)
      
      P[<g_1052@71:2>](<g_1052@71:0>:int,<g_1052@71:1>:bool,<next_1050@74:0>:int), (
      <g_1052@71:0> > 0) |- P[<next_1050@74:0>](<next_1050@74:0>:int)
      
      P[<main_1056@68:1>](<main_1056@68:0>:int,<g_1052@71:0>:int),
      ((<g_1052@71:2> = 0) && ((<main_1056@68:0> <= 0) && (not <g_1052@71:1>)))
      |- P[<g_1052@71:2>](<g_1052@71:0>:int,<g_1052@71:1>:bool,<g_1052@71:2>:int)
      
      P[<f_1583@66:1>](<main_1056@68:0>:int,<main_1056@68:1>:int)|- P[<main_1056@68:1>](
      <main_1056@68:0>:int,<main_1056@68:1>:int)
      
      P[<f_1582@63:0>](<f_1583@66:0>:int)|- P[<f_1583@66:1>](<f_1583@66:0>:int,
                                                             <f_1583@66:1>:int)
      
      |- P[<f_1582@63:0>](<f_1582@63:0>:int)
    call trees:
      <main_1574@60>
        <f_1582@63>
          <f_1583@66>
            <main_1056@68>
              <g_1052@71>
                <next_1050@74>
                </<next_1050@74:1>@77>
                <f_g_1581@79>
                  <f_1046@81>
                    <close__1043@83>
                      <closeit_1041@86>
                        <br_closeit_1587@89>
                        </<br_closeit_1587@89:2>@92>
                      </<closeit_1041@86:1>@94>
                    </<close__1043@83:2>@96>
                    <f_f_1577@98>
                      <close__1043@100>
                        <closeit_1041@103>
                        </<closeit_1041@103:1>@106>
                      </<close__1043@100:2>@108>
                      <f_f_1578@110>
                        <read__1038@112>
                        </<read__1038@112:2>@115>
                        <f_f_1579@117>
                          <read__1038@119>
                            <readit_1036@122>
                              <br_readit_1585@125>
                                <fail_1589@128>
    inlined horn clauses:
      P[<fail_1589@128:0>](<fail_1589@128:0>:bool)|- bot
      
      P[<read__1038@119:1>](true:bool,<br_readit_1585@125:1>:int),
      ((<br_readit_1585@125:1> <> 1) && ((<br_readit_1585@125:1> <> 3) && <fail_1589@128:0>))
      |- P[<fail_1589@128:0>](<fail_1589@128:0>:bool)
      
      P[<f_1046@81:2>](<f_f_1579@117:1>:bool,<read__1038@119:0>:bool,<f_f_1579@117:0>:int),
      P[<<close__1043@83:2>@96:0>](<f_f_1579@117:1>:bool,<f_f_1579@117:0>:int,<f_f_1579@117:3>:int),
      P[<<close__1043@100:2>@108:0>](<read__1038@119:0>:bool,<f_f_1579@117:3>:int,<f_f_1579@117:2>:int),
      P[<<read__1038@112:2>@115:0>](<f_f_1579@117:1>:bool,<f_f_1579@117:0>:int,<read__1038@119:1>:int)|- P[<read__1038@119:1>](
      <read__1038@119:0>:bool,<read__1038@119:1>:int)
      
      P[<read__1038@112:1>](<read__1038@112:0>:bool,<read__1038@112:1>:int),
      ((<<read__1038@112:2>@115:0> = <read__1038@112:1>) && (not <read__1038@112:0>))
      |- P[<<read__1038@112:2>@115:0>](<read__1038@112:0>:bool,<read__1038@112:1>:int,
                                       <<read__1038@112:2>@115:0>:int)
      
      P[<f_1046@81:2>](<read__1038@112:0>:bool,<f_f_1578@110:3>:bool,<read__1038@112:1>:int),
      P[<<close__1043@83:2>@96:0>](<read__1038@112:0>:bool,<read__1038@112:1>:int,<f_f_1578@110:2>:int),
      P[<<close__1043@100:2>@108:0>](<f_f_1578@110:3>:bool,<f_f_1578@110:2>:int,<f_f_1578@110:5>:int)|- P[<read__1038@112:1>](
      <read__1038@112:0>:bool,<read__1038@112:1>:int)
      
      P[<close__1043@100:1>](<close__1043@100:0>:bool,<close__1043@100:1>:int),
      ((<close__1043@100:1> = 1) && ((<<close__1043@100:2>@108:0> = 2) && <close__1043@100:0>))
      |- P[<<close__1043@100:2>@108:0>](<close__1043@100:0>:bool,<close__1043@100:1>:int,
                                        <<close__1043@100:2>@108:0>:int)
      
      P[<f_1046@81:2>](<f_f_1577@98:1>:bool,<close__1043@100:0>:bool,<f_f_1577@98:0>:int),
      P[<<close__1043@83:2>@96:0>](<f_f_1577@98:1>:bool,<f_f_1577@98:0>:int,<close__1043@100:1>:int)|- P[<close__1043@100:1>](
      <close__1043@100:0>:bool,<close__1043@100:1>:int)
      
      P[<close__1043@83:1>](<close__1043@83:0>:bool,<close__1043@83:1>:int),
      ((<close__1043@83:1> = 3) && ((<<close__1043@83:2>@96:0> = <close__1043@83:1>) && <close__1043@83:0>))
      |- P[<<close__1043@83:2>@96:0>](<close__1043@83:0>:bool,<close__1043@83:1>:int,
                                      <<close__1043@83:2>@96:0>:int)
      
      P[<f_1046@81:2>](<close__1043@83:0>:bool,<f_1046@81:1>:bool,<close__1043@83:1>:int)|- P[<close__1043@83:1>](
      <close__1043@83:0>:bool,<close__1043@83:1>:int)
      
       ((<f_1046@81:2> = 1) && ((not <f_1046@81:0>) && <f_1046@81:1>))
      |- P[<f_1046@81:2>](<f_1046@81:0>:bool,<f_1046@81:1>:bool,<f_1046@81:2>:int)
    begin ParamSubstInfer.infer(34105)[3]
      
    end ParamSubstInfer.infer(34105)[3] (0.046993 sec.)
    inferred extra parameters:
      
    begin RefTypeInfer.elim_coeffs(34107)[3]
      
    end RefTypeInfer.elim_coeffs(34107)[3] (0.002000 sec.)
    begin GenHcSolver.solve(34679)[3]
      Horn clauses:
        P[<fail_1589@128:0>](<fail_1589@128:0>:bool)|- bot
        
        P[<read__1038@119:1>](true:bool,<br_readit_1585@125:1>:int),
        ((<br_readit_1585@125:1> <> 1) && ((<br_readit_1585@125:1> <> 3) && <fail_1589@128:0>))
        |- P[<fail_1589@128:0>](<fail_1589@128:0>:bool)
        
        P[<f_1046@81:2>](<f_f_1579@117:1>:bool,<read__1038@119:0>:bool,<f_f_1579@117:0>:int),
        P[<<close__1043@83:2>@96:0>](<f_f_1579@117:1>:bool,<f_f_1579@117:0>:int,<f_f_1579@117:3>:int),
        P[<<close__1043@100:2>@108:0>](<read__1038@119:0>:bool,<f_f_1579@117:3>:int,<f_f_1579@117:2>:int),
        P[<<read__1038@112:2>@115:0>](<f_f_1579@117:1>:bool,<f_f_1579@117:0>:int,<read__1038@119:1>:int)|- P[<read__1038@119:1>](
        <read__1038@119:0>:bool,<read__1038@119:1>:int)
        
        P[<read__1038@112:1>](<read__1038@112:0>:bool,<read__1038@112:1>:int),
        ((<<read__1038@112:2>@115:0> = <read__1038@112:1>) && (not <read__1038@112:0>))
        |- P[<<read__1038@112:2>@115:0>](<read__1038@112:0>:bool,<read__1038@112:1>:int,
                                         <<read__1038@112:2>@115:0>:int)
        
        P[<f_1046@81:2>](<read__1038@112:0>:bool,<f_f_1578@110:3>:bool,<read__1038@112:1>:int),
        P[<<close__1043@83:2>@96:0>](<read__1038@112:0>:bool,<read__1038@112:1>:int,<f_f_1578@110:2>:int),
        P[<<close__1043@100:2>@108:0>](<f_f_1578@110:3>:bool,<f_f_1578@110:2>:int,<f_f_1578@110:5>:int)|- P[<read__1038@112:1>](
        <read__1038@112:0>:bool,<read__1038@112:1>:int)
        
        P[<close__1043@100:1>](<close__1043@100:0>:bool,<close__1043@100:1>:int),
        ((<close__1043@100:1> = 1) && ((<<close__1043@100:2>@108:0> = 2) && <close__1043@100:0>))
        |- P[<<close__1043@100:2>@108:0>](<close__1043@100:0>:bool,<close__1043@100:1>:int,
                                          <<close__1043@100:2>@108:0>:int)
        
        P[<f_1046@81:2>](<f_f_1577@98:1>:bool,<close__1043@100:0>:bool,<f_f_1577@98:0>:int),
        P[<<close__1043@83:2>@96:0>](<f_f_1577@98:1>:bool,<f_f_1577@98:0>:int,<close__1043@100:1>:int)|- P[<close__1043@100:1>](
        <close__1043@100:0>:bool,<close__1043@100:1>:int)
        
        P[<close__1043@83:1>](<close__1043@83:0>:bool,<close__1043@83:1>:int),
        ((<close__1043@83:1> = 3) && ((<<close__1043@83:2>@96:0> = <close__1043@83:1>) && <close__1043@83:0>))
        |- P[<<close__1043@83:2>@96:0>](<close__1043@83:0>:bool,<close__1043@83:1>:int,
                                        <<close__1043@83:2>@96:0>:int)
        
        P[<f_1046@81:2>](<close__1043@83:0>:bool,<f_1046@81:1>:bool,<close__1043@83:1>:int)|- P[<close__1043@83:1>](
        <close__1043@83:0>:bool,<close__1043@83:1>:int)
        
         ((<f_1046@81:2> = 1) && ((not <f_1046@81:0>) && <f_1046@81:1>))
        |- P[<f_1046@81:2>](<f_1046@81:0>:bool,<f_1046@81:1>:bool,<f_1046@81:2>:int)
      lower bounds:
        P[<f_1046@81:2>](<f_1046@81:0>:bool,<f_1046@81:1>:bool,<f_1046@81:2>:int) =
        ((<f_1046@81:2> = 1) && ((not <f_1046@81:0>) && <f_1046@81:1>))
        P[<close__1043@83:1>](<close__1043@83:0>:bool,<close__1043@83:1>:int) =
        ((<close__1043@83:1> = 1) && (not <close__1043@83:0>))
        P[<<close__1043@83:2>@96:0>](<close__1043@83:0>:bool,<close__1043@83:1>:int,<<close__1043@83:2>@96:0>:int) =
        false
        P[<close__1043@100:1>](<close__1043@100:0>:bool,<close__1043@100:1>:int) = false
        P[<<close__1043@100:2>@108:0>](<close__1043@100:0>:bool,<close__1043@100:1>:int,<<close__1043@100:2>@108:0>:int) =
        false
        P[<read__1038@112:1>](<read__1038@112:0>:bool,<read__1038@112:1>:int) = false
        P[<<read__1038@112:2>@115:0>](<read__1038@112:0>:bool,<read__1038@112:1>:int,<<read__1038@112:2>@115:0>:int) =
        false
        P[<read__1038@119:1>](<read__1038@119:0>:bool,<read__1038@119:1>:int) = false
        P[<fail_1589@128:0>](<fail_1589@128:0>:bool) = false
      upper bounds:
        P[<read__1038@119:1>](var243:bool,var244:int) = true
        P[<read__1038@112:1>](var238:bool,var239:int) = true
      begin GenHcSolver.classify_pids(38543)[4]
        output:
          [<read__1038@112:1>;<read__1038@119:1>]
      end GenHcSolver.classify_pids(38543)[4] (0.000000 sec.)
      begin ApronInterface.convex_hull_interpolate(38554)[4]
        lb:false
        nub:false
        lb':false
        nub':false
        begin InterpProver.interpolate(38555)[5]
          begin InterpProver.interpolate_fresh(38556)[6]
            begin InterpProver.interpolate_log(38557)[7]
              input1: false
              input2: false
              begin InterpProver.interpolate_check(38558)[8]
                begin InterpProver.interpolate_simplify(38559)[9]
                  begin InterpProver.interpolate_quick(38572)[10]
                    
                  end InterpProver.interpolate_quick(38572)[10] (0.000000 sec.)
                  begin minimizing # of disjunctions(38576)[10]
                    input: false
                    output: false
                  end minimizing # of disjunctions(38576)[10] (0.000000 sec.)
                  
                end InterpProver.interpolate_simplify(38559)[9] (0.000000 sec.)
                
              end InterpProver.interpolate_check(38558)[8] (0.000000 sec.)
              output: false
            end InterpProver.interpolate_log(38557)[7] (0.000000 sec.)
            
          end InterpProver.interpolate_fresh(38556)[6] (0.000000 sec.)
          
        end InterpProver.interpolate(38555)[5] (0.000000 sec.)
        output:
          P[<read__1038@112:1>](<read__1038@112:0>:bool,<read__1038@112:1>:int) = false
          P[<read__1038@119:1>](<read__1038@112:0>:bool,<read__1038@112:1>:int) = false
      end ApronInterface.convex_hull_interpolate(38554)[4] (0.000000 sec.)
      Horn clauses:
        P[<fail_1589@128:0>](<fail_1589@128:0>:bool)|- bot
        
        P[<f_1046@81:2>](<f_f_1579@117:1>:bool,<read__1038@119:0>:bool,<f_f_1579@117:0>:int),
        P[<<close__1043@83:2>@96:0>](<f_f_1579@117:1>:bool,<f_f_1579@117:0>:int,<f_f_1579@117:3>:int),
        P[<<close__1043@100:2>@108:0>](<read__1038@119:0>:bool,<f_f_1579@117:3>:int,<f_f_1579@117:2>:int),
        P[<<read__1038@112:2>@115:0>](<f_f_1579@117:1>:bool,<f_f_1579@117:0>:int,<read__1038@119:1>:int)|- bot
        
        P[<f_1046@81:2>](<read__1038@112:0>:bool,<f_f_1578@110:3>:bool,<read__1038@112:1>:int),
        P[<<close__1043@83:2>@96:0>](<read__1038@112:0>:bool,<read__1038@112:1>:int,<f_f_1578@110:2>:int),
        P[<<close__1043@100:2>@108:0>](<f_f_1578@110:3>:bool,<f_f_1578@110:2>:int,<f_f_1578@110:5>:int)|- bot
        
        P[<close__1043@100:1>](<close__1043@100:0>:bool,<close__1043@100:1>:int),
        ((<close__1043@100:1> = 1) && ((<<close__1043@100:2>@108:0> = 2) && <close__1043@100:0>))
        |- P[<<close__1043@100:2>@108:0>](<close__1043@100:0>:bool,<close__1043@100:1>:int,
                                          <<close__1043@100:2>@108:0>:int)
        
        P[<f_1046@81:2>](<f_f_1577@98:1>:bool,<close__1043@100:0>:bool,<f_f_1577@98:0>:int),
        P[<<close__1043@83:2>@96:0>](<f_f_1577@98:1>:bool,<f_f_1577@98:0>:int,<close__1043@100:1>:int)|- P[<close__1043@100:1>](
        <close__1043@100:0>:bool,<close__1043@100:1>:int)
        
        P[<close__1043@83:1>](<close__1043@83:0>:bool,<close__1043@83:1>:int),
        ((<close__1043@83:1> = 3) && ((<<close__1043@83:2>@96:0> = <close__1043@83:1>) && <close__1043@83:0>))
        |- P[<<close__1043@83:2>@96:0>](<close__1043@83:0>:bool,<close__1043@83:1>:int,
                                        <<close__1043@83:2>@96:0>:int)
        
        P[<f_1046@81:2>](<close__1043@83:0>:bool,<f_1046@81:1>:bool,<close__1043@83:1>:int)|- P[<close__1043@83:1>](
        <close__1043@83:0>:bool,<close__1043@83:1>:int)
        
         ((<f_1046@81:2> = 1) && ((not <f_1046@81:0>) && <f_1046@81:1>))
        |- P[<f_1046@81:2>](<f_1046@81:0>:bool,<f_1046@81:1>:bool,<f_1046@81:2>:int)
      lower bounds:
        P[<f_1046@81:2>](<f_1046@81:0>:bool,<f_1046@81:1>:bool,<f_1046@81:2>:int) =
        ((<f_1046@81:2> = 1) && ((not <f_1046@81:0>) && <f_1046@81:1>))
        P[<fail_1589@128:0>](var254:bool) = false
        P[<<read__1038@112:2>@115:0>](var255:bool,var256:int,var257:int) = false
        P[<close__1043@83:1>](<close__1043@83:0>:bool,<close__1043@83:1>:int) =
        ((<close__1043@83:1> = 1) && (not <close__1043@83:0>))
        P[<<close__1043@83:2>@96:0>](<close__1043@83:0>:bool,<close__1043@83:1>:int,<<close__1043@83:2>@96:0>:int) =
        false
        P[<close__1043@100:1>](<close__1043@100:0>:bool,<close__1043@100:1>:int) = false
        P[<<close__1043@100:2>@108:0>](<close__1043@100:0>:bool,<close__1043@100:1>:int,<<close__1043@100:2>@108:0>:int) =
        false
      upper bounds:
        P[<<close__1043@100:2>@108:0>](var280:bool,var281:int,var282:int) = true
        P[<<close__1043@83:2>@96:0>](var269:bool,var270:int,var271:int) = true
      begin GenHcSolver.classify_pids(43429)[4]
        output:
          [<<close__1043@83:2>@96:0>;<<close__1043@100:2>@108:0>]
      end GenHcSolver.classify_pids(43429)[4] (0.000000 sec.)
      begin ApronInterface.convex_hull_interpolate(43440)[4]
        lb:false
        nub:false
        lb':false
        nub':false
        begin InterpProver.interpolate(43441)[5]
          begin InterpProver.interpolate_fresh(43442)[6]
            begin InterpProver.interpolate_log(43443)[7]
              input1: false
              input2: false
              begin InterpProver.interpolate_check(43444)[8]
                begin InterpProver.interpolate_simplify(43445)[9]
                  begin InterpProver.interpolate_quick(43458)[10]
                    
                  end InterpProver.interpolate_quick(43458)[10] (0.000000 sec.)
                  begin minimizing # of disjunctions(43462)[10]
                    input: false
                    output: false
                  end minimizing # of disjunctions(43462)[10] (0.000000 sec.)
                  
                end InterpProver.interpolate_simplify(43445)[9] (0.000000 sec.)
                
              end InterpProver.interpolate_check(43444)[8] (0.000000 sec.)
              output: false
            end InterpProver.interpolate_log(43443)[7] (0.000000 sec.)
            
          end InterpProver.interpolate_fresh(43442)[6] (0.000000 sec.)
          
        end InterpProver.interpolate(43441)[5] (0.000000 sec.)
        output:
          P[<<close__1043@83:2>@96:0>](<close__1043@83:0>:bool,<close__1043@83:1>:int,<<close__1043@83:2>@96:0>:int) =
          false
          P[<<close__1043@100:2>@108:0>](<close__1043@83:0>:bool,<close__1043@83:1>:int,<<close__1043@83:2>@96:0>:int) =
          false
      end ApronInterface.convex_hull_interpolate(43440)[4] (0.000000 sec.)
      Horn clauses:
        P[<fail_1589@128:0>](<fail_1589@128:0>:bool)|- bot
        
        P[<close__1043@100:1>](true:bool,1:int)|- bot
        
        P[<close__1043@83:1>](true:bool,3:int)|- bot
        
        P[<f_1046@81:2>](<close__1043@83:0>:bool,<f_1046@81:1>:bool,<close__1043@83:1>:int)|- P[<close__1043@83:1>](
        <close__1043@83:0>:bool,<close__1043@83:1>:int)
        
         ((<f_1046@81:2> = 1) && ((not <f_1046@81:0>) && <f_1046@81:1>))
        |- P[<f_1046@81:2>](<f_1046@81:0>:bool,<f_1046@81:1>:bool,<f_1046@81:2>:int)
      lower bounds:
        P[<f_1046@81:2>](<f_1046@81:0>:bool,<f_1046@81:1>:bool,<f_1046@81:2>:int) =
        ((<f_1046@81:2> = 1) && ((not <f_1046@81:0>) && <f_1046@81:1>))
        P[<fail_1589@128:0>](var290:bool) = false
        P[<close__1043@100:1>](var291:bool,var292:int) = false
        P[<close__1043@83:1>](<close__1043@83:0>:bool,<close__1043@83:1>:int) =
        ((<close__1043@83:1> = 1) && (not <close__1043@83:0>))
      upper bounds:
        P[<close__1043@100:1>](var307:bool,var308:int) = true
        P[<close__1043@83:1>](var299:bool,var300:int) = ((var300 <> 3) || (not var299))
      begin GenHcSolver.classify_pids(46636)[4]
        output:
          [<close__1043@83:1>;<close__1043@100:1>]
      end GenHcSolver.classify_pids(46636)[4] (0.000000 sec.)
      begin ApronInterface.convex_hull_interpolate(46657)[4]
        lb:((<close__1043@83:1> = 1) && (not <close__1043@83:0>))
        nub:(not ((<close__1043@83:1> <> 3) || (not <close__1043@83:0>)))
        lb':((<close__1043@83:1> = 1) && (not <close__1043@83:0>))
        nub':(not ((<close__1043@83:1> <> 3) || (not <close__1043@83:0>)))
        begin InterpProver.interpolate(46658)[5]
          begin InterpProver.interpolate_fresh(46659)[6]
            begin InterpProver.interpolate_log(46660)[7]
              input1: ((<close__1043@83:1> = 1) && (not <close__1043@83:0>))
              input2: (not ((<close__1043@83:1> <> 3) || (not <close__1043@83:0>)))
              begin InterpProver.interpolate_check(46661)[8]
                begin InterpProver.interpolate_simplify(46662)[9]
                  begin InterpProver.interpolate_quick(46699)[10]
                    begin CsisatInterface.interpolate_csisat_wrap(46708)[11]
                      begin CsisatInterface.interpolate_csisat_post_process(46709)[12]
                        begin CsisatInterface.interpolate_csisat_log(46710)[13]
                          input1: (not v_sep_close__1043_sep_83_sep_0 = true() & 1 = v_sep_close__1043_sep_83_sep_1)
                          input2: (3 = v_sep_close__1043_sep_83_sep_1 & v_sep_close__1043_sep_83_sep_0 = true())
                          begin CsisatInterface.interpolate_csisat_raw(46711)[14]
                            
                          end CsisatInterface.interpolate_csisat_raw(46711)[14] (0.000000 sec.)
                          output: not v_sep_close__1043_sep_83_sep_0 = true()
                          
                        end CsisatInterface.interpolate_csisat_log(46710)[13] (0.000000 sec.)
                        after simplification: not v_sep_close__1043_sep_83_sep_0 = true()
                        after dnf conversion: ((not v_sep_close__1043_sep_83_sep_0 = true()))
                        
                      end CsisatInterface.interpolate_csisat_post_process(46709)[12] (0.000000 sec.)
                      
                    end CsisatInterface.interpolate_csisat_wrap(46708)[11] (0.000000 sec.)
                    
                  end InterpProver.interpolate_quick(46699)[10] (0.000000 sec.)
                  
                end InterpProver.interpolate_simplify(46662)[9] (0.000000 sec.)
                
              end InterpProver.interpolate_check(46661)[8] (0.001000 sec.)
              output: (not <close__1043@83:0>)
            end InterpProver.interpolate_log(46660)[7] (0.002000 sec.)
            
          end InterpProver.interpolate_fresh(46659)[6] (0.002000 sec.)
          
        end InterpProver.interpolate(46658)[5] (0.002000 sec.)
        output:
          P[<close__1043@83:1>](<close__1043@83:0>:bool,<close__1043@83:1>:int) = (not <close__1043@83:0>)
          P[<close__1043@100:1>](<close__1043@83:0>:bool,<close__1043@83:1>:int) = (not <close__1043@83:0>)
      end ApronInterface.convex_hull_interpolate(46657)[4] (0.002000 sec.)
      Horn clauses:
        P[<fail_1589@128:0>](<fail_1589@128:0>:bool)|- bot
        
        P[<f_1046@81:2>](true:bool,<f_1046@81:1>:bool,<close__1043@83:1>:int)|- bot
        
         ((<f_1046@81:2> = 1) && ((not <f_1046@81:0>) && <f_1046@81:1>))
        |- P[<f_1046@81:2>](<f_1046@81:0>:bool,<f_1046@81:1>:bool,<f_1046@81:2>:int)
      lower bounds:
        P[<f_1046@81:2>](<f_1046@81:0>:bool,<f_1046@81:1>:bool,<f_1046@81:2>:int) =
        ((<f_1046@81:2> = 1) && ((not <f_1046@81:0>) && <f_1046@81:1>))
        P[<fail_1589@128:0>](var312:bool) = false
      upper bounds:
        P[<fail_1589@128:0>](var315:bool) = true
      begin GenHcSolver.classify_pids(48027)[4]
        output:
          [<fail_1589@128:0>]
      end GenHcSolver.classify_pids(48027)[4] (0.000000 sec.)
      lb:false
      nub:false
      begin ApronInterface.convex_hull_interpolate(48030)[4]
        lb:false
        nub:false
        lb':false
        nub':false
        begin InterpProver.interpolate(48031)[5]
          begin InterpProver.interpolate_fresh(48032)[6]
            begin InterpProver.interpolate_log(48033)[7]
              input1: false
              input2: false
              begin InterpProver.interpolate_check(48034)[8]
                begin InterpProver.interpolate_simplify(48035)[9]
                  begin InterpProver.interpolate_quick(48048)[10]
                    
                  end InterpProver.interpolate_quick(48048)[10] (0.000000 sec.)
                  begin minimizing # of disjunctions(48052)[10]
                    input: false
                    output: false
                  end minimizing # of disjunctions(48052)[10] (0.000000 sec.)
                  
                end InterpProver.interpolate_simplify(48035)[9] (0.000000 sec.)
                
              end InterpProver.interpolate_check(48034)[8] (0.001000 sec.)
              output: false
            end InterpProver.interpolate_log(48033)[7] (0.001000 sec.)
            
          end InterpProver.interpolate_fresh(48032)[6] (0.001000 sec.)
          
        end InterpProver.interpolate(48031)[5] (0.001000 sec.)
        output:
          P[<fail_1589@128:0>](var312:bool) = false
      end ApronInterface.convex_hull_interpolate(48030)[4] (0.001000 sec.)
      Horn clauses:
        P[<f_1046@81:2>](true:bool,<f_1046@81:1>:bool,<close__1043@83:1>:int)|- bot
        
         ((<f_1046@81:2> = 1) && ((not <f_1046@81:0>) && <f_1046@81:1>))
        |- P[<f_1046@81:2>](<f_1046@81:0>:bool,<f_1046@81:1>:bool,<f_1046@81:2>:int)
      lower bounds:
        P[<f_1046@81:2>](<f_1046@81:0>:bool,<f_1046@81:1>:bool,<f_1046@81:2>:int) =
        ((<f_1046@81:2> = 1) && ((not <f_1046@81:0>) && <f_1046@81:1>))
      upper bounds:
        P[<f_1046@81:2>](var316:bool,var317:bool,var318:int) = (not var316)
      begin GenHcSolver.classify_pids(48772)[4]
        output:
          [<f_1046@81:2>]
      end GenHcSolver.classify_pids(48772)[4] (0.000000 sec.)
      lb:((<f_1046@81:2> = 1) && ((not <f_1046@81:0>) && <f_1046@81:1>))
      nub:<f_1046@81:0>
      begin ApronInterface.convex_hull_interpolate(48775)[4]
        lb:((<f_1046@81:2> = 1) && ((not <f_1046@81:0>) && <f_1046@81:1>))
        nub:<f_1046@81:0>
        lb':((<f_1046@81:2> = 1) && ((not <f_1046@81:0>) && <f_1046@81:1>))
        nub':<f_1046@81:0>
        begin InterpProver.interpolate(48776)[5]
          begin InterpProver.interpolate_fresh(48777)[6]
            begin InterpProver.interpolate_log(48778)[7]
              input1: ((<f_1046@81:2> = 1) && ((not <f_1046@81:0>) && <f_1046@81:1>))
              input2: <f_1046@81:0>
              begin InterpProver.interpolate_check(48779)[8]
                begin InterpProver.interpolate_simplify(48780)[9]
                  begin InterpProver.interpolate_quick(48817)[10]
                    begin CsisatInterface.interpolate_csisat_wrap(48826)[11]
                      begin CsisatInterface.interpolate_csisat_post_process(48827)[12]
                        begin CsisatInterface.interpolate_csisat_log(48828)[13]
                          input1: not v_sep_f_1046_sep_81_sep_0 = true()
                          input2: v_sep_f_1046_sep_81_sep_0 = true()
                          begin CsisatInterface.interpolate_csisat_raw(48829)[14]
                            
                          end CsisatInterface.interpolate_csisat_raw(48829)[14] (0.000000 sec.)
                          output: not v_sep_f_1046_sep_81_sep_0 = true()
                          
                        end CsisatInterface.interpolate_csisat_log(48828)[13] (0.000000 sec.)
                        after simplification: not v_sep_f_1046_sep_81_sep_0 = true()
                        after dnf conversion: ((not v_sep_f_1046_sep_81_sep_0 = true()))
                        
                      end CsisatInterface.interpolate_csisat_post_process(48827)[12] (0.000000 sec.)
                      
                    end CsisatInterface.interpolate_csisat_wrap(48826)[11] (0.000000 sec.)
                    
                  end InterpProver.interpolate_quick(48817)[10] (0.000999 sec.)
                  
                end InterpProver.interpolate_simplify(48780)[9] (0.000999 sec.)
                
              end InterpProver.interpolate_check(48779)[8] (0.000999 sec.)
              output: (not <f_1046@81:0>)
            end InterpProver.interpolate_log(48778)[7] (0.000999 sec.)
            
          end InterpProver.interpolate_fresh(48777)[6] (0.000999 sec.)
          
        end InterpProver.interpolate(48776)[5] (0.000999 sec.)
        output:
          P[<f_1046@81:2>](<f_1046@81:0>:bool,<f_1046@81:1>:bool,<f_1046@81:2>:int) = (not <f_1046@81:0>)
      end ApronInterface.convex_hull_interpolate(48775)[4] (0.000999 sec.)
      begin HcSolver.check_validity(48973)[4]
        input:
          P[<fail_1589@128:0>](<fail_1589@128:0>:bool)|- bot
          
          P[<read__1038@119:1>](true:bool,<br_readit_1585@125:1>:int),
          ((<br_readit_1585@125:1> <> 1) && ((<br_readit_1585@125:1> <> 3) && <fail_1589@128:0>))
          |- P[<fail_1589@128:0>](<fail_1589@128:0>:bool)
          
          P[<f_1046@81:2>](<f_f_1579@117:1>:bool,<read__1038@119:0>:bool,<f_f_1579@117:0>:int),
          P[<<close__1043@83:2>@96:0>](<f_f_1579@117:1>:bool,<f_f_1579@117:0>:int,<f_f_1579@117:3>:int),
          P[<<close__1043@100:2>@108:0>](<read__1038@119:0>:bool,<f_f_1579@117:3>:int,<f_f_1579@117:2>:int),
          P[<<read__1038@112:2>@115:0>](<f_f_1579@117:1>:bool,<f_f_1579@117:0>:int,<read__1038@119:1>:int)|- P[<read__1038@119:1>](
          <read__1038@119:0>:bool,<read__1038@119:1>:int)
          
          P[<read__1038@112:1>](<read__1038@112:0>:bool,<read__1038@112:1>:int),
          ((<<read__1038@112:2>@115:0> = <read__1038@112:1>) && (not <read__1038@112:0>))
          |- P[<<read__1038@112:2>@115:0>](<read__1038@112:0>:bool,<read__1038@112:1>:int,
                                           <<read__1038@112:2>@115:0>:int)
          
          P[<f_1046@81:2>](<read__1038@112:0>:bool,<f_f_1578@110:3>:bool,<read__1038@112:1>:int),
          P[<<close__1043@83:2>@96:0>](<read__1038@112:0>:bool,<read__1038@112:1>:int,<f_f_1578@110:2>:int),
          P[<<close__1043@100:2>@108:0>](<f_f_1578@110:3>:bool,<f_f_1578@110:2>:int,<f_f_1578@110:5>:int)|- P[<read__1038@112:1>](
          <read__1038@112:0>:bool,<read__1038@112:1>:int)
          
          P[<close__1043@100:1>](<close__1043@100:0>:bool,<close__1043@100:1>:int),
          ((<close__1043@100:1> = 1) && ((<<close__1043@100:2>@108:0> = 2) && <close__1043@100:0>))
          |- P[<<close__1043@100:2>@108:0>](<close__1043@100:0>:bool,
                                            <close__1043@100:1>:int,<<close__1043@100:2>@108:0>:int)
          
          P[<f_1046@81:2>](<f_f_1577@98:1>:bool,<close__1043@100:0>:bool,<f_f_1577@98:0>:int),
          P[<<close__1043@83:2>@96:0>](<f_f_1577@98:1>:bool,<f_f_1577@98:0>:int,<close__1043@100:1>:int)|- P[<close__1043@100:1>](
          <close__1043@100:0>:bool,<close__1043@100:1>:int)
          
          P[<close__1043@83:1>](<close__1043@83:0>:bool,<close__1043@83:1>:int),
          ((<close__1043@83:1> = 3) && ((<<close__1043@83:2>@96:0> = <close__1043@83:1>) && <close__1043@83:0>))
          |- P[<<close__1043@83:2>@96:0>](<close__1043@83:0>:bool,<close__1043@83:1>:int,
                                          <<close__1043@83:2>@96:0>:int)
          
          P[<f_1046@81:2>](<close__1043@83:0>:bool,<f_1046@81:1>:bool,<close__1043@83:1>:int)|- P[<close__1043@83:1>](
          <close__1043@83:0>:bool,<close__1043@83:1>:int)
          
           ((<f_1046@81:2> = 1) && ((not <f_1046@81:0>) && <f_1046@81:1>))
          |- P[<f_1046@81:2>](<f_1046@81:0>:bool,<f_1046@81:1>:bool,<f_1046@81:2>:int)
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        
      end HcSolver.check_validity(48973)[4] (0.002000 sec.)
      solution:
        P[<fail_1589@128:0>](var312:bool) = false
        P[<read__1038@119:1>](<read__1038@112:0>:bool,<read__1038@112:1>:int) = false
        P[<<read__1038@112:2>@115:0>](var319:bool,var320:int,var321:int) = false
        P[<read__1038@112:1>](<read__1038@112:0>:bool,<read__1038@112:1>:int) = false
        P[<<close__1043@100:2>@108:0>](<close__1043@83:0>:bool,<close__1043@83:1>:int,<<close__1043@83:2>@96:0>:int) =
        false
        P[<close__1043@100:1>](<close__1043@83:0>:bool,<close__1043@83:1>:int) = (not <close__1043@83:0>)
        P[<<close__1043@83:2>@96:0>](<close__1043@83:0>:bool,<close__1043@83:1>:int,<<close__1043@83:2>@96:0>:int) =
        false
        P[<close__1043@83:1>](<close__1043@83:0>:bool,<close__1043@83:1>:int) = (not <close__1043@83:0>)
        P[<f_1046@81:2>](<f_1046@81:0>:bool,<f_1046@81:1>:bool,<f_1046@81:2>:int) = (not <f_1046@81:0>)
    end GenHcSolver.solve(34679)[3] (0.056991 sec.)
    begin GenHcSolver.solve(49484)[3]
      Horn clauses:
        P[<fail_1589@128:0>](<fail_1589@128:0>:bool)|- bot
        
        P[<read__1038@119:1>](true:bool,<br_readit_1585@125:1>:int),
        ((<br_readit_1585@125:1> <> 1) && ((<br_readit_1585@125:1> <> 3) && <fail_1589@128:0>))
        |- P[<fail_1589@128:0>](<fail_1589@128:0>:bool)
        
        P[<f_1046@81:2>](<f_f_1579@117:1>:bool,<read__1038@119:0>:bool,<f_f_1579@117:0>:int),
        P[<<close__1043@83:2>@96:0>](<f_f_1579@117:1>:bool,<f_f_1579@117:0>:int,<f_f_1579@117:3>:int),
        P[<<close__1043@100:2>@108:0>](<read__1038@119:0>:bool,<f_f_1579@117:3>:int,<f_f_1579@117:2>:int),
        P[<<read__1038@112:2>@115:0>](<f_f_1579@117:1>:bool,<f_f_1579@117:0>:int,<read__1038@119:1>:int)|- P[<read__1038@119:1>](
        <read__1038@119:0>:bool,<read__1038@119:1>:int)
        
        P[<read__1038@112:1>](<read__1038@112:0>:bool,<read__1038@112:1>:int),
        ((<<read__1038@112:2>@115:0> = <read__1038@112:1>) && (not <read__1038@112:0>))
        |- P[<<read__1038@112:2>@115:0>](<read__1038@112:0>:bool,<read__1038@112:1>:int,
                                         <<read__1038@112:2>@115:0>:int)
        
        P[<f_1046@81:2>](<read__1038@112:0>:bool,<f_f_1578@110:3>:bool,<read__1038@112:1>:int),
        P[<<close__1043@83:2>@96:0>](<read__1038@112:0>:bool,<read__1038@112:1>:int,<f_f_1578@110:2>:int),
        P[<<close__1043@100:2>@108:0>](<f_f_1578@110:3>:bool,<f_f_1578@110:2>:int,<f_f_1578@110:5>:int)|- P[<read__1038@112:1>](
        <read__1038@112:0>:bool,<read__1038@112:1>:int)
        
        P[<close__1043@100:1>](<close__1043@100:0>:bool,<close__1043@100:1>:int),
        ((<close__1043@100:1> = 1) && ((<<close__1043@100:2>@108:0> = 2) && <close__1043@100:0>))
        |- P[<<close__1043@100:2>@108:0>](<close__1043@100:0>:bool,<close__1043@100:1>:int,
                                          <<close__1043@100:2>@108:0>:int)
        
        P[<f_1046@81:2>](<f_f_1577@98:1>:bool,<close__1043@100:0>:bool,<f_f_1577@98:0>:int),
        P[<<close__1043@83:2>@96:0>](<f_f_1577@98:1>:bool,<f_f_1577@98:0>:int,<close__1043@100:1>:int)|- P[<close__1043@100:1>](
        <close__1043@100:0>:bool,<close__1043@100:1>:int)
        
        P[<close__1043@83:1>](<close__1043@83:0>:bool,<close__1043@83:1>:int),
        ((<close__1043@83:1> = 3) && ((<<close__1043@83:2>@96:0> = <close__1043@83:1>) && <close__1043@83:0>))
        |- P[<<close__1043@83:2>@96:0>](<close__1043@83:0>:bool,<close__1043@83:1>:int,
                                        <<close__1043@83:2>@96:0>:int)
        
        P[<f_1046@81:2>](<close__1043@83:0>:bool,<f_1046@81:1>:bool,<close__1043@83:1>:int)|- P[<close__1043@83:1>](
        <close__1043@83:0>:bool,<close__1043@83:1>:int)
        
         ((<f_1046@81:2> = 1) && ((not <f_1046@81:0>) && <f_1046@81:1>))
        |- P[<f_1046@81:2>](<f_1046@81:0>:bool,<f_1046@81:1>:bool,<f_1046@81:2>:int)
      lower bounds:
        P[<f_1046@81:2>](<f_1046@81:0>:bool,<f_1046@81:1>:bool,<f_1046@81:2>:int) =
        ((<f_1046@81:2> = 1) && ((not <f_1046@81:0>) && <f_1046@81:1>))
        P[<close__1043@83:1>](<close__1043@83:0>:bool,<close__1043@83:1>:int) =
        ((<close__1043@83:1> = 1) && (not <close__1043@83:0>))
        P[<<close__1043@83:2>@96:0>](<close__1043@83:0>:bool,<close__1043@83:1>:int,<<close__1043@83:2>@96:0>:int) =
        false
        P[<close__1043@100:1>](<close__1043@100:0>:bool,<close__1043@100:1>:int) = false
        P[<<close__1043@100:2>@108:0>](<close__1043@100:0>:bool,<close__1043@100:1>:int,<<close__1043@100:2>@108:0>:int) =
        false
        P[<read__1038@112:1>](<read__1038@112:0>:bool,<read__1038@112:1>:int) = false
        P[<<read__1038@112:2>@115:0>](<read__1038@112:0>:bool,<read__1038@112:1>:int,<<read__1038@112:2>@115:0>:int) =
        false
        P[<read__1038@119:1>](<read__1038@119:0>:bool,<read__1038@119:1>:int) = false
        P[<fail_1589@128:0>](<fail_1589@128:0>:bool) = false
      upper bounds:
        P[<read__1038@119:1>](var331:bool,var332:int) = true
        P[<read__1038@112:1>](var326:bool,var327:int) = true
      begin GenHcSolver.classify_pids(53348)[4]
        output:
          [<read__1038@112:1>;<read__1038@119:1>]
      end GenHcSolver.classify_pids(53348)[4] (0.000000 sec.)
      begin ApronInterface.convex_hull_interpolate(53359)[4]
        lb:false
        nub:false
        begin ExtFormula.Formula.case_analysis_boolean(53362)[5]
          ts: false
          
        end ExtFormula.Formula.case_analysis_boolean(53362)[5] (0.000000 sec.)
        begin ExtFormula.Formula.case_analysis_boolean(53367)[5]
          ts: false
          
        end ExtFormula.Formula.case_analysis_boolean(53367)[5] (0.000000 sec.)
        lb':(-1 >= 0)
        nub':(-1 >= 0)
        begin InterpProver.interpolate(53370)[5]
          begin InterpProver.interpolate_fresh(53371)[6]
            begin InterpProver.interpolate_log(53372)[7]
              input1: (-1 >= 0)
              input2: (-1 >= 0)
              begin InterpProver.interpolate_check(53373)[8]
                begin InterpProver.interpolate_simplify(53374)[9]
                  begin InterpProver.interpolate_quick(53389)[10]
                    
                  end InterpProver.interpolate_quick(53389)[10] (0.000000 sec.)
                  begin minimizing # of disjunctions(53393)[10]
                    input: false
                    output: false
                  end minimizing # of disjunctions(53393)[10] (0.000000 sec.)
                  
                end InterpProver.interpolate_simplify(53374)[9] (0.000000 sec.)
                
              end InterpProver.interpolate_check(53373)[8] (0.000000 sec.)
              output: false
            end InterpProver.interpolate_log(53372)[7] (0.000000 sec.)
            
          end InterpProver.interpolate_fresh(53371)[6] (0.000000 sec.)
          
        end InterpProver.interpolate(53370)[5] (0.000000 sec.)
        output:
          P[<read__1038@112:1>](<read__1038@112:0>:bool,<read__1038@112:1>:int) = false
          P[<read__1038@119:1>](<read__1038@112:0>:bool,<read__1038@112:1>:int) = false
      end ApronInterface.convex_hull_interpolate(53359)[4] (0.000000 sec.)
      Horn clauses:
        P[<fail_1589@128:0>](<fail_1589@128:0>:bool)|- bot
        
        P[<f_1046@81:2>](<f_f_1579@117:1>:bool,<read__1038@119:0>:bool,<f_f_1579@117:0>:int),
        P[<<close__1043@83:2>@96:0>](<f_f_1579@117:1>:bool,<f_f_1579@117:0>:int,<f_f_1579@117:3>:int),
        P[<<close__1043@100:2>@108:0>](<read__1038@119:0>:bool,<f_f_1579@117:3>:int,<f_f_1579@117:2>:int),
        P[<<read__1038@112:2>@115:0>](<f_f_1579@117:1>:bool,<f_f_1579@117:0>:int,<read__1038@119:1>:int)|- bot
        
        P[<f_1046@81:2>](<read__1038@112:0>:bool,<f_f_1578@110:3>:bool,<read__1038@112:1>:int),
        P[<<close__1043@83:2>@96:0>](<read__1038@112:0>:bool,<read__1038@112:1>:int,<f_f_1578@110:2>:int),
        P[<<close__1043@100:2>@108:0>](<f_f_1578@110:3>:bool,<f_f_1578@110:2>:int,<f_f_1578@110:5>:int)|- bot
        
        P[<close__1043@100:1>](<close__1043@100:0>:bool,<close__1043@100:1>:int),
        ((<close__1043@100:1> = 1) && ((<<close__1043@100:2>@108:0> = 2) && <close__1043@100:0>))
        |- P[<<close__1043@100:2>@108:0>](<close__1043@100:0>:bool,<close__1043@100:1>:int,
                                          <<close__1043@100:2>@108:0>:int)
        
        P[<f_1046@81:2>](<f_f_1577@98:1>:bool,<close__1043@100:0>:bool,<f_f_1577@98:0>:int),
        P[<<close__1043@83:2>@96:0>](<f_f_1577@98:1>:bool,<f_f_1577@98:0>:int,<close__1043@100:1>:int)|- P[<close__1043@100:1>](
        <close__1043@100:0>:bool,<close__1043@100:1>:int)
        
        P[<close__1043@83:1>](<close__1043@83:0>:bool,<close__1043@83:1>:int),
        ((<close__1043@83:1> = 3) && ((<<close__1043@83:2>@96:0> = <close__1043@83:1>) && <close__1043@83:0>))
        |- P[<<close__1043@83:2>@96:0>](<close__1043@83:0>:bool,<close__1043@83:1>:int,
                                        <<close__1043@83:2>@96:0>:int)
        
        P[<f_1046@81:2>](<close__1043@83:0>:bool,<f_1046@81:1>:bool,<close__1043@83:1>:int)|- P[<close__1043@83:1>](
        <close__1043@83:0>:bool,<close__1043@83:1>:int)
        
         ((<f_1046@81:2> = 1) && ((not <f_1046@81:0>) && <f_1046@81:1>))
        |- P[<f_1046@81:2>](<f_1046@81:0>:bool,<f_1046@81:1>:bool,<f_1046@81:2>:int)
      lower bounds:
        P[<f_1046@81:2>](<f_1046@81:0>:bool,<f_1046@81:1>:bool,<f_1046@81:2>:int) =
        ((<f_1046@81:2> = 1) && ((not <f_1046@81:0>) && <f_1046@81:1>))
        P[<fail_1589@128:0>](var342:bool) = false
        P[<<read__1038@112:2>@115:0>](var343:bool,var344:int,var345:int) = false
        P[<close__1043@83:1>](<close__1043@83:0>:bool,<close__1043@83:1>:int) =
        ((<close__1043@83:1> = 1) && (not <close__1043@83:0>))
        P[<<close__1043@83:2>@96:0>](<close__1043@83:0>:bool,<close__1043@83:1>:int,<<close__1043@83:2>@96:0>:int) =
        false
        P[<close__1043@100:1>](<close__1043@100:0>:bool,<close__1043@100:1>:int) = false
        P[<<close__1043@100:2>@108:0>](<close__1043@100:0>:bool,<close__1043@100:1>:int,<<close__1043@100:2>@108:0>:int) =
        false
      upper bounds:
        P[<<close__1043@100:2>@108:0>](var368:bool,var369:int,var370:int) = true
        P[<<close__1043@83:2>@96:0>](var357:bool,var358:int,var359:int) = true
      begin GenHcSolver.classify_pids(58253)[4]
        output:
          [<<close__1043@83:2>@96:0>;<<close__1043@100:2>@108:0>]
      end GenHcSolver.classify_pids(58253)[4] (0.000000 sec.)
      begin ApronInterface.convex_hull_interpolate(58264)[4]
        lb:false
        nub:false
        begin ExtFormula.Formula.case_analysis_boolean(58267)[5]
          ts: false
          
        end ExtFormula.Formula.case_analysis_boolean(58267)[5] (0.000000 sec.)
        begin ExtFormula.Formula.case_analysis_boolean(58272)[5]
          ts: false
          
        end ExtFormula.Formula.case_analysis_boolean(58272)[5] (0.000000 sec.)
        lb':(-1 >= 0)
        nub':(-1 >= 0)
        begin InterpProver.interpolate(58275)[5]
          begin InterpProver.interpolate_fresh(58276)[6]
            begin InterpProver.interpolate_log(58277)[7]
              input1: (-1 >= 0)
              input2: (-1 >= 0)
              begin InterpProver.interpolate_check(58278)[8]
                begin InterpProver.interpolate_simplify(58279)[9]
                  begin InterpProver.interpolate_quick(58294)[10]
                    
                  end InterpProver.interpolate_quick(58294)[10] (0.000000 sec.)
                  begin minimizing # of disjunctions(58298)[10]
                    input: false
                    output: false
                  end minimizing # of disjunctions(58298)[10] (0.000000 sec.)
                  
                end InterpProver.interpolate_simplify(58279)[9] (0.000000 sec.)
                
              end InterpProver.interpolate_check(58278)[8] (0.001000 sec.)
              output: false
            end InterpProver.interpolate_log(58277)[7] (0.001000 sec.)
            
          end InterpProver.interpolate_fresh(58276)[6] (0.001000 sec.)
          
        end InterpProver.interpolate(58275)[5] (0.001000 sec.)
        output:
          P[<<close__1043@83:2>@96:0>](<close__1043@83:0>:bool,<close__1043@83:1>:int,<<close__1043@83:2>@96:0>:int) =
          false
          P[<<close__1043@100:2>@108:0>](<close__1043@83:0>:bool,<close__1043@83:1>:int,<<close__1043@83:2>@96:0>:int) =
          false
      end ApronInterface.convex_hull_interpolate(58264)[4] (0.001000 sec.)
      Horn clauses:
        P[<fail_1589@128:0>](<fail_1589@128:0>:bool)|- bot
        
        P[<close__1043@100:1>](true:bool,1:int)|- bot
        
        P[<close__1043@83:1>](true:bool,3:int)|- bot
        
        P[<f_1046@81:2>](<close__1043@83:0>:bool,<f_1046@81:1>:bool,<close__1043@83:1>:int)|- P[<close__1043@83:1>](
        <close__1043@83:0>:bool,<close__1043@83:1>:int)
        
         ((<f_1046@81:2> = 1) && ((not <f_1046@81:0>) && <f_1046@81:1>))
        |- P[<f_1046@81:2>](<f_1046@81:0>:bool,<f_1046@81:1>:bool,<f_1046@81:2>:int)
      lower bounds:
        P[<f_1046@81:2>](<f_1046@81:0>:bool,<f_1046@81:1>:bool,<f_1046@81:2>:int) =
        ((<f_1046@81:2> = 1) && ((not <f_1046@81:0>) && <f_1046@81:1>))
        P[<fail_1589@128:0>](var378:bool) = false
        P[<close__1043@100:1>](var379:bool,var380:int) = false
        P[<close__1043@83:1>](<close__1043@83:0>:bool,<close__1043@83:1>:int) =
        ((<close__1043@83:1> = 1) && (not <close__1043@83:0>))
      upper bounds:
        P[<close__1043@100:1>](var395:bool,var396:int) = true
        P[<close__1043@83:1>](var387:bool,var388:int) = ((var388 <> 3) || (not var387))
      begin GenHcSolver.classify_pids(61479)[4]
        output:
          [<close__1043@83:1>;<close__1043@100:1>]
      end GenHcSolver.classify_pids(61479)[4] (0.001000 sec.)
      begin ApronInterface.convex_hull_interpolate(61500)[4]
        lb:((<close__1043@83:1> = 1) && (not <close__1043@83:0>))
        nub:(not ((<close__1043@83:1> <> 3) || (not <close__1043@83:0>)))
        begin ExtFormula.Formula.case_analysis_boolean(61509)[5]
          ts: ((<close__1043@83:1> = 1) && (not <close__1043@83:0>))
          
        end ExtFormula.Formula.case_analysis_boolean(61509)[5] (0.000000 sec.)
        begin ExtFormula.Formula.case_analysis_boolean(61536)[5]
          ts: ((<close__1043@83:1> = 3) && <close__1043@83:0>)
          
        end ExtFormula.Formula.case_analysis_boolean(61536)[5] (0.000000 sec.)
        lb':(((-1 >= 0) && (<close__1043@83:0> = true)) ||
             (((-1 + <close__1043@83:1>) = 0) && (<close__1043@83:0> = false)))
        nub':((((-3 + <close__1043@83:1>) = 0) && (<close__1043@83:0> = true)) ||
              ((-1 >= 0) && (<close__1043@83:0> = false)))
        begin InterpProver.interpolate(61555)[5]
          begin InterpProver.interpolate_fresh(61556)[6]
            begin InterpProver.interpolate_log(61557)[7]
              input1: (((-1 >= 0) && (<close__1043@83:0> = true)) ||
                       (((-1 + <close__1043@83:1>) = 0) && (<close__1043@83:0> = false)))
              input2: ((((-3 + <close__1043@83:1>) = 0) && (<close__1043@83:0> = true)) ||
                       ((-1 >= 0) && (<close__1043@83:0> = false)))
              begin InterpProver.interpolate_check(61558)[8]
                begin InterpProver.interpolate_simplify(61559)[9]
                  begin InterpProver.interpolate_quick(61614)[10]
                    begin CsisatInterface.interpolate_csisat_wrap(61623)[11]
                      begin CsisatInterface.interpolate_csisat_post_process(61624)[12]
                        begin CsisatInterface.interpolate_csisat_log(61625)[13]
                          input1: (not v_sep_close__1043_sep_83_sep_0 = true() & 1 = v_sep_close__1043_sep_83_sep_1)
                          input2: (3 = v_sep_close__1043_sep_83_sep_1 & v_sep_close__1043_sep_83_sep_0 = true())
                          begin CsisatInterface.interpolate_csisat_raw(61626)[14]
                            
                          end CsisatInterface.interpolate_csisat_raw(61626)[14] (0.000000 sec.)
                          output: not v_sep_close__1043_sep_83_sep_0 = true()
                          
                        end CsisatInterface.interpolate_csisat_log(61625)[13] (0.000000 sec.)
                        after simplification: not v_sep_close__1043_sep_83_sep_0 = true()
                        after dnf conversion: ((not v_sep_close__1043_sep_83_sep_0 = true()))
                        
                      end CsisatInterface.interpolate_csisat_post_process(61624)[12] (0.000000 sec.)
                      
                    end CsisatInterface.interpolate_csisat_wrap(61623)[11] (0.000000 sec.)
                    
                  end InterpProver.interpolate_quick(61614)[10] (0.000000 sec.)
                  
                end InterpProver.interpolate_simplify(61559)[9] (0.001000 sec.)
                
              end InterpProver.interpolate_check(61558)[8] (0.002000 sec.)
              output: (not <close__1043@83:0>)
            end InterpProver.interpolate_log(61557)[7] (0.002000 sec.)
            
          end InterpProver.interpolate_fresh(61556)[6] (0.002000 sec.)
          
        end InterpProver.interpolate(61555)[5] (0.002000 sec.)
        output:
          P[<close__1043@83:1>](<close__1043@83:0>:bool,<close__1043@83:1>:int) = (not <close__1043@83:0>)
          P[<close__1043@100:1>](<close__1043@83:0>:bool,<close__1043@83:1>:int) = (not <close__1043@83:0>)
      end ApronInterface.convex_hull_interpolate(61500)[4] (0.002000 sec.)
      Horn clauses:
        P[<fail_1589@128:0>](<fail_1589@128:0>:bool)|- bot
        
        P[<f_1046@81:2>](true:bool,<f_1046@81:1>:bool,<close__1043@83:1>:int)|- bot
        
         ((<f_1046@81:2> = 1) && ((not <f_1046@81:0>) && <f_1046@81:1>))
        |- P[<f_1046@81:2>](<f_1046@81:0>:bool,<f_1046@81:1>:bool,<f_1046@81:2>:int)
      lower bounds:
        P[<f_1046@81:2>](<f_1046@81:0>:bool,<f_1046@81:1>:bool,<f_1046@81:2>:int) =
        ((<f_1046@81:2> = 1) && ((not <f_1046@81:0>) && <f_1046@81:1>))
        P[<fail_1589@128:0>](var400:bool) = false
      upper bounds:
        P[<fail_1589@128:0>](var403:bool) = true
      begin GenHcSolver.classify_pids(62956)[4]
        output:
          [<fail_1589@128:0>]
      end GenHcSolver.classify_pids(62956)[4] (0.000000 sec.)
      lb:false
      nub:false
      begin ApronInterface.convex_hull_interpolate(62959)[4]
        lb:false
        nub:false
        begin ExtFormula.Formula.case_analysis_boolean(62962)[5]
          ts: false
          
        end ExtFormula.Formula.case_analysis_boolean(62962)[5] (0.000000 sec.)
        begin ExtFormula.Formula.case_analysis_boolean(62967)[5]
          ts: false
          
        end ExtFormula.Formula.case_analysis_boolean(62967)[5] (0.000000 sec.)
        lb':(-1 >= 0)
        nub':(-1 >= 0)
        begin InterpProver.interpolate(62970)[5]
          begin InterpProver.interpolate_fresh(62971)[6]
            begin InterpProver.interpolate_log(62972)[7]
              input1: (-1 >= 0)
              input2: (-1 >= 0)
              begin InterpProver.interpolate_check(62973)[8]
                begin InterpProver.interpolate_simplify(62974)[9]
                  begin InterpProver.interpolate_quick(62989)[10]
                    
                  end InterpProver.interpolate_quick(62989)[10] (0.000000 sec.)
                  begin minimizing # of disjunctions(62993)[10]
                    input: false
                    output: false
                  end minimizing # of disjunctions(62993)[10] (0.000000 sec.)
                  
                end InterpProver.interpolate_simplify(62974)[9] (0.001000 sec.)
                
              end InterpProver.interpolate_check(62973)[8] (0.001000 sec.)
              output: false
            end InterpProver.interpolate_log(62972)[7] (0.001000 sec.)
            
          end InterpProver.interpolate_fresh(62971)[6] (0.001000 sec.)
          
        end InterpProver.interpolate(62970)[5] (0.001000 sec.)
        output:
          P[<fail_1589@128:0>](var400:bool) = false
      end ApronInterface.convex_hull_interpolate(62959)[4] (0.001000 sec.)
      Horn clauses:
        P[<f_1046@81:2>](true:bool,<f_1046@81:1>:bool,<close__1043@83:1>:int)|- bot
        
         ((<f_1046@81:2> = 1) && ((not <f_1046@81:0>) && <f_1046@81:1>))
        |- P[<f_1046@81:2>](<f_1046@81:0>:bool,<f_1046@81:1>:bool,<f_1046@81:2>:int)
      lower bounds:
        P[<f_1046@81:2>](<f_1046@81:0>:bool,<f_1046@81:1>:bool,<f_1046@81:2>:int) =
        ((<f_1046@81:2> = 1) && ((not <f_1046@81:0>) && <f_1046@81:1>))
      upper bounds:
        P[<f_1046@81:2>](var404:bool,var405:bool,var406:int) = (not var404)
      begin GenHcSolver.classify_pids(63720)[4]
        output:
          [<f_1046@81:2>]
      end GenHcSolver.classify_pids(63720)[4] (0.000000 sec.)
      lb:((<f_1046@81:2> = 1) && ((not <f_1046@81:0>) && <f_1046@81:1>))
      nub:<f_1046@81:0>
      begin ApronInterface.convex_hull_interpolate(63723)[4]
        lb:((<f_1046@81:2> = 1) && ((not <f_1046@81:0>) && <f_1046@81:1>))
        nub:<f_1046@81:0>
        begin ExtFormula.Formula.case_analysis_boolean(63736)[5]
          ts: ((<f_1046@81:2> = 1) && ((not <f_1046@81:0>) && <f_1046@81:1>))
          
        end ExtFormula.Formula.case_analysis_boolean(63736)[5] (0.000000 sec.)
        begin ExtFormula.Formula.case_analysis_boolean(63778)[5]
          ts: <f_1046@81:0>
          
        end ExtFormula.Formula.case_analysis_boolean(63778)[5] (0.000000 sec.)
        lb':(((-1 >= 0) && ((<f_1046@81:0> = true) && (<f_1046@81:1> = true))) ||
             (((-1 >= 0) && ((<f_1046@81:0> = true) && (<f_1046@81:1> = false))) ||
              ((((-1 + <f_1046@81:2>) = 0) && ((<f_1046@81:0> = false) && (<f_1046@81:1> = true))) ||
               ((-1 >= 0) && ((<f_1046@81:0> = false) && (<f_1046@81:1> = false))))))
        nub':((<f_1046@81:0> = true) || ((-1 >= 0) && (<f_1046@81:0> = false)))
        begin InterpProver.interpolate(63786)[5]
          begin InterpProver.interpolate_fresh(63787)[6]
            begin InterpProver.interpolate_log(63788)[7]
              input1: (((-1 >= 0) && ((<f_1046@81:0> = true) && (<f_1046@81:1> = true))) ||
                       (((-1 >= 0) && ((<f_1046@81:0> = true) && (<f_1046@81:1> = false))) ||
                        ((((-1 + <f_1046@81:2>) = 0) && ((<f_1046@81:0> = false) && (<f_1046@81:1> = true))) ||
                         ((-1 >= 0) && ((<f_1046@81:0> = false) && (<f_1046@81:1> = false))))))
              input2: ((<f_1046@81:0> = true) || ((-1 >= 0) && (<f_1046@81:0> = false)))
              begin InterpProver.interpolate_check(63789)[8]
                begin InterpProver.interpolate_simplify(63790)[9]
                  begin InterpProver.interpolate_quick(63877)[10]
                    begin CsisatInterface.interpolate_csisat_wrap(63886)[11]
                      begin CsisatInterface.interpolate_csisat_post_process(63887)[12]
                        begin CsisatInterface.interpolate_csisat_log(63888)[13]
                          input1: not v_sep_f_1046_sep_81_sep_0 = true()
                          input2: v_sep_f_1046_sep_81_sep_0 = true()
                          begin CsisatInterface.interpolate_csisat_raw(63889)[14]
                            
                          end CsisatInterface.interpolate_csisat_raw(63889)[14] (0.000000 sec.)
                          output: not v_sep_f_1046_sep_81_sep_0 = true()
                          
                        end CsisatInterface.interpolate_csisat_log(63888)[13] (0.000000 sec.)
                        after simplification: not v_sep_f_1046_sep_81_sep_0 = true()
                        after dnf conversion: ((not v_sep_f_1046_sep_81_sep_0 = true()))
                        
                      end CsisatInterface.interpolate_csisat_post_process(63887)[12] (0.000000 sec.)
                      
                    end CsisatInterface.interpolate_csisat_wrap(63886)[11] (0.000000 sec.)
                    
                  end InterpProver.interpolate_quick(63877)[10] (0.000000 sec.)
                  
                end InterpProver.interpolate_simplify(63790)[9] (0.001000 sec.)
                
              end InterpProver.interpolate_check(63789)[8] (0.002000 sec.)
              output: (not <f_1046@81:0>)
            end InterpProver.interpolate_log(63788)[7] (0.002000 sec.)
            
          end InterpProver.interpolate_fresh(63787)[6] (0.002000 sec.)
          
        end InterpProver.interpolate(63786)[5] (0.002000 sec.)
        output:
          P[<f_1046@81:2>](<f_1046@81:0>:bool,<f_1046@81:1>:bool,<f_1046@81:2>:int) = (not <f_1046@81:0>)
      end ApronInterface.convex_hull_interpolate(63723)[4] (0.002000 sec.)
      begin HcSolver.check_validity(64047)[4]
        input:
          P[<fail_1589@128:0>](<fail_1589@128:0>:bool)|- bot
          
          P[<read__1038@119:1>](true:bool,<br_readit_1585@125:1>:int),
          ((<br_readit_1585@125:1> <> 1) && ((<br_readit_1585@125:1> <> 3) && <fail_1589@128:0>))
          |- P[<fail_1589@128:0>](<fail_1589@128:0>:bool)
          
          P[<f_1046@81:2>](<f_f_1579@117:1>:bool,<read__1038@119:0>:bool,<f_f_1579@117:0>:int),
          P[<<close__1043@83:2>@96:0>](<f_f_1579@117:1>:bool,<f_f_1579@117:0>:int,<f_f_1579@117:3>:int),
          P[<<close__1043@100:2>@108:0>](<read__1038@119:0>:bool,<f_f_1579@117:3>:int,<f_f_1579@117:2>:int),
          P[<<read__1038@112:2>@115:0>](<f_f_1579@117:1>:bool,<f_f_1579@117:0>:int,<read__1038@119:1>:int)|- P[<read__1038@119:1>](
          <read__1038@119:0>:bool,<read__1038@119:1>:int)
          
          P[<read__1038@112:1>](<read__1038@112:0>:bool,<read__1038@112:1>:int),
          ((<<read__1038@112:2>@115:0> = <read__1038@112:1>) && (not <read__1038@112:0>))
          |- P[<<read__1038@112:2>@115:0>](<read__1038@112:0>:bool,<read__1038@112:1>:int,
                                           <<read__1038@112:2>@115:0>:int)
          
          P[<f_1046@81:2>](<read__1038@112:0>:bool,<f_f_1578@110:3>:bool,<read__1038@112:1>:int),
          P[<<close__1043@83:2>@96:0>](<read__1038@112:0>:bool,<read__1038@112:1>:int,<f_f_1578@110:2>:int),
          P[<<close__1043@100:2>@108:0>](<f_f_1578@110:3>:bool,<f_f_1578@110:2>:int,<f_f_1578@110:5>:int)|- P[<read__1038@112:1>](
          <read__1038@112:0>:bool,<read__1038@112:1>:int)
          
          P[<close__1043@100:1>](<close__1043@100:0>:bool,<close__1043@100:1>:int),
          ((<close__1043@100:1> = 1) && ((<<close__1043@100:2>@108:0> = 2) && <close__1043@100:0>))
          |- P[<<close__1043@100:2>@108:0>](<close__1043@100:0>:bool,
                                            <close__1043@100:1>:int,<<close__1043@100:2>@108:0>:int)
          
          P[<f_1046@81:2>](<f_f_1577@98:1>:bool,<close__1043@100:0>:bool,<f_f_1577@98:0>:int),
          P[<<close__1043@83:2>@96:0>](<f_f_1577@98:1>:bool,<f_f_1577@98:0>:int,<close__1043@100:1>:int)|- P[<close__1043@100:1>](
          <close__1043@100:0>:bool,<close__1043@100:1>:int)
          
          P[<close__1043@83:1>](<close__1043@83:0>:bool,<close__1043@83:1>:int),
          ((<close__1043@83:1> = 3) && ((<<close__1043@83:2>@96:0> = <close__1043@83:1>) && <close__1043@83:0>))
          |- P[<<close__1043@83:2>@96:0>](<close__1043@83:0>:bool,<close__1043@83:1>:int,
                                          <<close__1043@83:2>@96:0>:int)
          
          P[<f_1046@81:2>](<close__1043@83:0>:bool,<f_1046@81:1>:bool,<close__1043@83:1>:int)|- P[<close__1043@83:1>](
          <close__1043@83:0>:bool,<close__1043@83:1>:int)
          
           ((<f_1046@81:2> = 1) && ((not <f_1046@81:0>) && <f_1046@81:1>))
          |- P[<f_1046@81:2>](<f_1046@81:0>:bool,<f_1046@81:1>:bool,<f_1046@81:2>:int)
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        
      end HcSolver.check_validity(64047)[4] (0.001999 sec.)
      solution:
        P[<fail_1589@128:0>](var400:bool) = false
        P[<read__1038@119:1>](<read__1038@112:0>:bool,<read__1038@112:1>:int) = false
        P[<<read__1038@112:2>@115:0>](var407:bool,var408:int,var409:int) = false
        P[<read__1038@112:1>](<read__1038@112:0>:bool,<read__1038@112:1>:int) = false
        P[<<close__1043@100:2>@108:0>](<close__1043@83:0>:bool,<close__1043@83:1>:int,<<close__1043@83:2>@96:0>:int) =
        false
        P[<close__1043@100:1>](<close__1043@83:0>:bool,<close__1043@83:1>:int) = (not <close__1043@83:0>)
        P[<<close__1043@83:2>@96:0>](<close__1043@83:0>:bool,<close__1043@83:1>:int,<<close__1043@83:2>@96:0>:int) =
        false
        P[<close__1043@83:1>](<close__1043@83:0>:bool,<close__1043@83:1>:int) = (not <close__1043@83:0>)
        P[<f_1046@81:2>](<f_1046@81:0>:bool,<f_1046@81:1>:bool,<f_1046@81:2>:int) = (not <f_1046@81:0>)
    end GenHcSolver.solve(49484)[3] (0.057991 sec.)
    begin YhornInterface.solve(64558)[3]
      begin HcSolver.solve_ub(64559)[4]
        encoded:
          P[<fail_1589@128:0>](<fail_1589@128:0>:int)|- bot
          
          P[<read__1038@119:1>](1:int,<br_readit_1585@125:1>:int),
          ((<br_readit_1585@125:1> <> 1) && ((<br_readit_1585@125:1> <> 3) && (<fail_1589@128:0> = 1)))
          |- P[<fail_1589@128:0>](<fail_1589@128:0>:int)
          
          P[<f_1046@81:2>](<f_f_1579@117:1>:int,<read__1038@119:0>:int,<f_f_1579@117:0>:int),
          P[<<close__1043@83:2>@96:0>](<f_f_1579@117:1>:int,<f_f_1579@117:0>:int,<f_f_1579@117:3>:int),
          P[<<close__1043@100:2>@108:0>](<read__1038@119:0>:int,<f_f_1579@117:3>:int,<f_f_1579@117:2>:int),
          P[<<read__1038@112:2>@115:0>](<f_f_1579@117:1>:int,<f_f_1579@117:0>:int,<read__1038@119:1>:int)|- P[<read__1038@119:1>](
          <read__1038@119:0>:int,<read__1038@119:1>:int)
          
          P[<read__1038@112:1>](<read__1038@112:0>:int,<read__1038@112:1>:int),
          ((<<read__1038@112:2>@115:0> = <read__1038@112:1>) && (not (
                                                                    <read__1038@112:0> = 1)))
          |- P[<<read__1038@112:2>@115:0>](<read__1038@112:0>:int,<read__1038@112:1>:int,
                                           <<read__1038@112:2>@115:0>:int)
          
          P[<f_1046@81:2>](<read__1038@112:0>:int,<f_f_1578@110:3>:int,<read__1038@112:1>:int),
          P[<<close__1043@83:2>@96:0>](<read__1038@112:0>:int,<read__1038@112:1>:int,<f_f_1578@110:2>:int),
          P[<<close__1043@100:2>@108:0>](<f_f_1578@110:3>:int,<f_f_1578@110:2>:int,<f_f_1578@110:5>:int)|- P[<read__1038@112:1>](
          <read__1038@112:0>:int,<read__1038@112:1>:int)
          
          P[<close__1043@100:1>](<close__1043@100:0>:int,<close__1043@100:1>:int),
          ((<close__1043@100:1> = 1) && ((<<close__1043@100:2>@108:0> = 2) && (<close__1043@100:0> = 1)))
          |- P[<<close__1043@100:2>@108:0>](<close__1043@100:0>:int,<close__1043@100:1>:int,
                                            <<close__1043@100:2>@108:0>:int)
          
          P[<f_1046@81:2>](<f_f_1577@98:1>:int,<close__1043@100:0>:int,<f_f_1577@98:0>:int),
          P[<<close__1043@83:2>@96:0>](<f_f_1577@98:1>:int,<f_f_1577@98:0>:int,<close__1043@100:1>:int)|- P[<close__1043@100:1>](
          <close__1043@100:0>:int,<close__1043@100:1>:int)
          
          P[<close__1043@83:1>](<close__1043@83:0>:int,<close__1043@83:1>:int),
          ((<close__1043@83:1> = 3) && ((<<close__1043@83:2>@96:0> = <close__1043@83:1>) && (<close__1043@83:0> = 1)))
          |- P[<<close__1043@83:2>@96:0>](<close__1043@83:0>:int,<close__1043@83:1>:int,
                                          <<close__1043@83:2>@96:0>:int)
          
          P[<f_1046@81:2>](<close__1043@83:0>:int,<f_1046@81:1>:int,<close__1043@83:1>:int)|- P[<close__1043@83:1>](
          <close__1043@83:0>:int,<close__1043@83:1>:int)
          
           ((<f_1046@81:2> = 1) && ((not (<f_1046@81:0> = 1)) && (<f_1046@81:1> = 1)))
          |- P[<f_1046@81:2>](<f_1046@81:0>:int,<f_1046@81:1>:int,<f_1046@81:2>:int)
        input to Yhorn:
          P[<fail_1589@128:0>](<fail_1589@128:0>:int)|- bot
          
          P[<read__1038@119:1>](var410:int,<br_readit_1585@125:1>:int),
          ((<br_readit_1585@125:1> <> 3) &&
           ((<br_readit_1585@125:1> <> 1) && ((var410 = 1) && (<fail_1589@128:0> = 1))))
          |- P[<fail_1589@128:0>](<fail_1589@128:0>:int)
          
          P[<f_1046@81:2>](<f_f_1579@117:1>:int,<read__1038@119:0>:int,<f_f_1579@117:0>:int),
          P[<<close__1043@83:2>@96:0>](<f_f_1579@117:1>:int,<f_f_1579@117:0>:int,<f_f_1579@117:3>:int),
          P[<<close__1043@100:2>@108:0>](<read__1038@119:0>:int,<f_f_1579@117:3>:int,<f_f_1579@117:2>:int),
          P[<<read__1038@112:2>@115:0>](<f_f_1579@117:1>:int,<f_f_1579@117:0>:int,<read__1038@119:1>:int)|- P[<read__1038@119:1>](
          <read__1038@119:0>:int,<read__1038@119:1>:int)
          
          P[<read__1038@112:1>](<read__1038@112:0>:int,<read__1038@112:1>:int),
          ((<<read__1038@112:2>@115:0> = <read__1038@112:1>) && (<read__1038@112:0> <> 1))
          |- P[<<read__1038@112:2>@115:0>](<read__1038@112:0>:int,<read__1038@112:1>:int,
                                           <<read__1038@112:2>@115:0>:int)
          
          P[<f_1046@81:2>](<read__1038@112:0>:int,<f_f_1578@110:3>:int,<read__1038@112:1>:int),
          P[<<close__1043@83:2>@96:0>](<read__1038@112:0>:int,<read__1038@112:1>:int,<f_f_1578@110:2>:int),
          P[<<close__1043@100:2>@108:0>](<f_f_1578@110:3>:int,<f_f_1578@110:2>:int,<f_f_1578@110:5>:int)|- P[<read__1038@112:1>](
          <read__1038@112:0>:int,<read__1038@112:1>:int)
          
          P[<close__1043@100:1>](<close__1043@100:0>:int,<close__1043@100:1>:int),
          ((<close__1043@100:0> = 1) && ((<<close__1043@100:2>@108:0> = 2) && (<close__1043@100:1> = 1)))
          |- P[<<close__1043@100:2>@108:0>](<close__1043@100:0>:int,<close__1043@100:1>:int,
                                            <<close__1043@100:2>@108:0>:int)
          
          P[<f_1046@81:2>](<f_f_1577@98:1>:int,<close__1043@100:0>:int,<f_f_1577@98:0>:int),
          P[<<close__1043@83:2>@96:0>](<f_f_1577@98:1>:int,<f_f_1577@98:0>:int,<close__1043@100:1>:int)|- P[<close__1043@100:1>](
          <close__1043@100:0>:int,<close__1043@100:1>:int)
          
          P[<close__1043@83:1>](<close__1043@83:0>:int,<close__1043@83:1>:int),
          ((<<close__1043@83:2>@96:0> = <close__1043@83:1>) && ((<close__1043@83:0> = 1) && (<close__1043@83:1> = 3)))
          |- P[<<close__1043@83:2>@96:0>](<close__1043@83:0>:int,<close__1043@83:1>:int,
                                          <<close__1043@83:2>@96:0>:int)
          
          P[<f_1046@81:2>](<close__1043@83:0>:int,<f_1046@81:1>:int,<close__1043@83:1>:int)|- P[<close__1043@83:1>](
          <close__1043@83:0>:int,<close__1043@83:1>:int)
          
           ((<f_1046@81:0> <> 1) && ((<f_1046@81:1> = 1) && (<f_1046@81:2> = 1)))
          |- P[<f_1046@81:2>](<f_1046@81:0>:int,<f_1046@81:1>:int,<f_1046@81:2>:int)Yhorn (Wed Sep 25 10:52:05 JST 2013)


(0=0) & (v_sep_fail_1589_sep_128_sep_0($318)) -> 1=0.
(($318-1=0) & ($319-1=0) & ($320-1<>0) & ($320-3<>0)) & (v_sep_read__1038_sep_119_sep_1($319,$320)) -> v_sep_fail_1589_sep_128_sep_0($318).
(0=0) & (v_sep_read__1038_sep_112_sep_2_sep_115_sep_0($321,$322,$323)) & (v_sep_close__1043_sep_100_sep_2_sep_108_sep_0($324,$325,$326)) & (v_sep_close__1043_sep_83_sep_2_sep_96_sep_0($321,$322,$325)) & (v_sep_f_1046_sep_81_sep_2($321,$324,$322)) -> v_sep_read__1038_sep_119_sep_1($324,$323).
(($327-1<>0) & ($328-$329=0)) & (v_sep_read__1038_sep_112_sep_1($327,$329)) -> v_sep_read__1038_sep_112_sep_2_sep_115_sep_0($327,$329,$328).
(0=0) & (v_sep_close__1043_sep_100_sep_2_sep_108_sep_0($330,$331,$332)) & (v_sep_close__1043_sep_83_sep_2_sep_96_sep_0($327,$329,$331)) & (v_sep_f_1046_sep_81_sep_2($327,$330,$329)) -> v_sep_read__1038_sep_112_sep_1($327,$329).
(($333-1=0) & ($334-2=0) & ($335-1=0)) & (v_sep_close__1043_sep_100_sep_1($335,$333)) -> v_sep_close__1043_sep_100_sep_2_sep_108_sep_0($335,$333,$334).
(0=0) & (v_sep_close__1043_sep_83_sep_2_sep_96_sep_0($336,$337,$333)) & (v_sep_f_1046_sep_81_sep_2($336,$335,$337)) -> v_sep_close__1043_sep_100_sep_1($335,$333).
(($338-3=0) & ($339-1=0) & (-$338+$340=0)) & (v_sep_close__1043_sep_83_sep_1($339,$338)) -> v_sep_close__1043_sep_83_sep_2_sep_96_sep_0($339,$338,$340).
(0=0) & (v_sep_f_1046_sep_81_sep_2($339,$341,$338)) -> v_sep_close__1043_sep_83_sep_1($339,$338).
($342-1=0) & ($341-1=0) & ($343-1<>0) -> v_sep_f_1046_sep_81_sep_2($343,$341,$342).


v_sep_close__1043_sep_100_sep_1: X
v_sep_close__1043_sep_100_sep_2_sep_108_sep_0: X
v_sep_close__1043_sep_83_sep_1: X
v_sep_close__1043_sep_83_sep_2_sep_96_sep_0: X
v_sep_f_1046_sep_81_sep_2: X
v_sep_fail_1589_sep_128_sep_0: X
v_sep_read__1038_sep_112_sep_1: X
v_sep_read__1038_sep_112_sep_2_sep_115_sep_0: X
v_sep_read__1038_sep_119_sep_1: X
....................
v_sep_close__1043_sep_100_sep_1: X
v_sep_close__1043_sep_100_sep_2_sep_108_sep_0: X
v_sep_close__1043_sep_83_sep_1: X
v_sep_close__1043_sep_83_sep_2_sep_96_sep_0: X
v_sep_f_1046_sep_81_sep_2: X
v_sep_fail_1589_sep_128_sep_0: X
v_sep_read__1038_sep_112_sep_1: X
v_sep_read__1038_sep_112_sep_2_sep_115_sep_0: X
v_sep_read__1038_sep_119_sep_1: X
......
v_sep_close__1043_sep_100_sep_1: X
v_sep_close__1043_sep_100_sep_2_sep_108_sep_0: X
v_sep_close__1043_sep_83_sep_1: X
v_sep_close__1043_sep_83_sep_2_sep_96_sep_0: X
v_sep_f_1046_sep_81_sep_2: X
v_sep_fail_1589_sep_128_sep_0: X
v_sep_read__1038_sep_112_sep_1: X
v_sep_read__1038_sep_112_sep_2_sep_115_sep_0: X
v_sep_read__1038_sep_119_sep_1: X
..........
v_sep_close__1043_sep_100_sep_1: X
v_sep_close__1043_sep_100_sep_2_sep_108_sep_0: X
v_sep_close__1043_sep_83_sep_1: X
v_sep_close__1043_sep_83_sep_2_sep_96_sep_0: X
v_sep_f_1046_sep_81_sep_2: X
v_sep_fail_1589_sep_128_sep_0: X
v_sep_read__1038_sep_112_sep_1: X
v_sep_read__1038_sep_112_sep_2_sep_115_sep_0: X
v_sep_read__1038_sep_119_sep_1: X
..............
v_sep_close__1043_sep_100_sep_1: X
v_sep_close__1043_sep_100_sep_2_sep_108_sep_0: X
v_sep_close__1043_sep_83_sep_1: X
v_sep_close__1043_sep_83_sep_2_sep_96_sep_0: X
v_sep_f_1046_sep_81_sep_2: X
v_sep_fail_1589_sep_128_sep_0: X
v_sep_read__1038_sep_112_sep_1: X
v_sep_read__1038_sep_112_sep_2_sep_115_sep_0: X
v_sep_read__1038_sep_119_sep_1: X
....................(0=0) & (v_sep_fail_1589_sep_128_sep_0($318)) -> 1=0.
(($318-1=0) & ($319-1=0) & ($320-1<>0) & ($320-3<>0)) & (v_sep_read__1038_sep_119_sep_1($319,$320)) -> v_sep_fail_1589_sep_128_sep_0($318).
(0=0) & (v_sep_read__1038_sep_112_sep_2_sep_115_sep_0($321,$322,$323)) & (v_sep_close__1043_sep_100_sep_2_sep_108_sep_0($324,$325,$326)) & (v_sep_close__1043_sep_83_sep_2_sep_96_sep_0($321,$322,$325)) & (v_sep_f_1046_sep_81_sep_2($321,$324,$322)) -> v_sep_read__1038_sep_119_sep_1($324,$323).
(($327-1<>0) & ($328-$329=0)) & (v_sep_read__1038_sep_112_sep_1($327,$329)) -> v_sep_read__1038_sep_112_sep_2_sep_115_sep_0($327,$329,$328).
(0=0) & (v_sep_close__1043_sep_100_sep_2_sep_108_sep_0($330,$331,$332)) & (v_sep_close__1043_sep_83_sep_2_sep_96_sep_0($327,$329,$331)) & (v_sep_f_1046_sep_81_sep_2($327,$330,$329)) -> v_sep_read__1038_sep_112_sep_1($327,$329).
(($333-1=0) & ($334-2=0) & ($335-1=0)) & (v_sep_close__1043_sep_100_sep_1($335,$333)) -> v_sep_close__1043_sep_100_sep_2_sep_108_sep_0($335,$333,$334).
(0=0) & (v_sep_close__1043_sep_83_sep_2_sep_96_sep_0($336,$337,$333)) & (v_sep_f_1046_sep_81_sep_2($336,$335,$337)) -> v_sep_close__1043_sep_100_sep_1($335,$333).
(($338-3=0) & ($339-1=0) & (-$338+$340=0)) & (v_sep_close__1043_sep_83_sep_1($339,$338)) -> v_sep_close__1043_sep_83_sep_2_sep_96_sep_0($339,$338,$340).
(0=0) & (v_sep_f_1046_sep_81_sep_2($339,$341,$338)) -> v_sep_close__1043_sep_83_sep_1($339,$338).
($342-1=0) & ($341-1=0) & ($343-1<>0) -> v_sep_f_1046_sep_81_sep_2($343,$341,$342).

        solution:
          P[<close__1043@100:1>]($385:bool,$387:int) = (3 <= $387)
          P[<<close__1043@100:2>@108:0>]($359:bool,$361:int,$363:int) = ((1 + $361) <= 0)
          P[<close__1043@83:1>]($390:bool,$392:int) = true
          P[<<close__1043@83:2>@96:0>]($366:bool,$368:int,$370:int) = (3 <= $370)
          P[<f_1046@81:2>]($373:bool,$375:bool,$377:int) = ((not $373) || (($373 && $375) || ($373 && (not $375))))
          P[<fail_1589@128:0>]($344:bool) = false
          P[<read__1038@112:1>]($380:bool,$382:int) = true
          P[<<read__1038@112:2>@115:0>]($352:bool,$354:int,$356:int) = true
          P[<read__1038@119:1>]($347:bool,$349:int) = false
        
      end HcSolver.solve_ub(64559)[4] (0.081988 sec.)
      begin HcSolver.check_validity(65194)[4]
        input:
          P[<fail_1589@128:0>](<fail_1589@128:0>:bool)|- bot
          
          P[<read__1038@119:1>](true:bool,<br_readit_1585@125:1>:int),
          ((<br_readit_1585@125:1> <> 1) && ((<br_readit_1585@125:1> <> 3) && <fail_1589@128:0>))
          |- P[<fail_1589@128:0>](<fail_1589@128:0>:bool)
          
          P[<f_1046@81:2>](<f_f_1579@117:1>:bool,<read__1038@119:0>:bool,<f_f_1579@117:0>:int),
          P[<<close__1043@83:2>@96:0>](<f_f_1579@117:1>:bool,<f_f_1579@117:0>:int,<f_f_1579@117:3>:int),
          P[<<close__1043@100:2>@108:0>](<read__1038@119:0>:bool,<f_f_1579@117:3>:int,<f_f_1579@117:2>:int),
          P[<<read__1038@112:2>@115:0>](<f_f_1579@117:1>:bool,<f_f_1579@117:0>:int,<read__1038@119:1>:int)|- P[<read__1038@119:1>](
          <read__1038@119:0>:bool,<read__1038@119:1>:int)
          
          P[<read__1038@112:1>](<read__1038@112:0>:bool,<read__1038@112:1>:int),
          ((<<read__1038@112:2>@115:0> = <read__1038@112:1>) && (not <read__1038@112:0>))
          |- P[<<read__1038@112:2>@115:0>](<read__1038@112:0>:bool,<read__1038@112:1>:int,
                                           <<read__1038@112:2>@115:0>:int)
          
          P[<f_1046@81:2>](<read__1038@112:0>:bool,<f_f_1578@110:3>:bool,<read__1038@112:1>:int),
          P[<<close__1043@83:2>@96:0>](<read__1038@112:0>:bool,<read__1038@112:1>:int,<f_f_1578@110:2>:int),
          P[<<close__1043@100:2>@108:0>](<f_f_1578@110:3>:bool,<f_f_1578@110:2>:int,<f_f_1578@110:5>:int)|- P[<read__1038@112:1>](
          <read__1038@112:0>:bool,<read__1038@112:1>:int)
          
          P[<close__1043@100:1>](<close__1043@100:0>:bool,<close__1043@100:1>:int),
          ((<close__1043@100:1> = 1) && ((<<close__1043@100:2>@108:0> = 2) && <close__1043@100:0>))
          |- P[<<close__1043@100:2>@108:0>](<close__1043@100:0>:bool,
                                            <close__1043@100:1>:int,<<close__1043@100:2>@108:0>:int)
          
          P[<f_1046@81:2>](<f_f_1577@98:1>:bool,<close__1043@100:0>:bool,<f_f_1577@98:0>:int),
          P[<<close__1043@83:2>@96:0>](<f_f_1577@98:1>:bool,<f_f_1577@98:0>:int,<close__1043@100:1>:int)|- P[<close__1043@100:1>](
          <close__1043@100:0>:bool,<close__1043@100:1>:int)
          
          P[<close__1043@83:1>](<close__1043@83:0>:bool,<close__1043@83:1>:int),
          ((<close__1043@83:1> = 3) && ((<<close__1043@83:2>@96:0> = <close__1043@83:1>) && <close__1043@83:0>))
          |- P[<<close__1043@83:2>@96:0>](<close__1043@83:0>:bool,<close__1043@83:1>:int,
                                          <<close__1043@83:2>@96:0>:int)
          
          P[<f_1046@81:2>](<close__1043@83:0>:bool,<f_1046@81:1>:bool,<close__1043@83:1>:int)|- P[<close__1043@83:1>](
          <close__1043@83:0>:bool,<close__1043@83:1>:int)
          
           ((<f_1046@81:2> = 1) && ((not <f_1046@81:0>) && <f_1046@81:1>))
          |- P[<f_1046@81:2>](<f_1046@81:0>:bool,<f_1046@81:1>:bool,<f_1046@81:2>:int)
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        
      end HcSolver.check_validity(65194)[4] (0.004999 sec.)
      solution:
        P[<close__1043@100:1>]($385:bool,$387:int) = (3 <= $387)
        P[<<close__1043@100:2>@108:0>]($359:bool,$361:int,$363:int) = ((1 + $361) <= 0)
        P[<close__1043@83:1>]($390:bool,$392:int) = true
        P[<<close__1043@83:2>@96:0>]($366:bool,$368:int,$370:int) = (3 <= $370)
        P[<f_1046@81:2>]($373:bool,$375:bool,$377:int) = ((not $373) || (($373 && $375) || ($373 && (not $375))))
        P[<fail_1589@128:0>]($344:bool) = false
        P[<read__1038@112:1>]($380:bool,$382:int) = true
        P[<<read__1038@112:2>@115:0>]($352:bool,$354:int,$356:int) = true
        P[<read__1038@119:1>]($347:bool,$349:int) = false
    end YhornInterface.solve(64558)[3] (0.086987 sec.)
    
  end RefTypeInfer.infer_etrs(29820)[2] (0.283957 sec.)
  refinement types:
    main_1574: X
    f_1582: v1:int -> X
    f_1583: v1:int -> v2:int -> X
    main_1056: v1:int -> v2:int -> (v3:unit -> X) -> X
    g_1052: v1:int -> v2:bool -> v3:int -> (v4:unit -> X) -> X
    next_1050: v1:int -> (v2:int -> X) -> X
    f_g_1581: v1:int -> v2:int -> v3:bool -> (v4:unit -> X) -> v6:int -> X
    f_1046: v1:bool -> v2:bool -> v3:{v3:int | (not v1)} -> (v4:unit -> X) -> X
    close__1043: v1:bool -> v2:{v2:int | (not v1)} -> (v3:{v3:int | false} -> X) -> X
    closeit_1041: v1:int -> (v2:int -> X) -> X
    br_closeit_1587: v1:bool -> v2:int -> (v3:int -> X) -> X
    f_f_1577: v1:int -> v2:bool -> v3:bool -> (v4:unit -> X) -> v6:int -> X
    close__1043: v1:bool -> v2:{v2:int | (not v1)} -> (v3:{v3:int | false} -> X) -> X
    closeit_1041: v1:int -> (v2:int -> X) -> X
    f_f_1578: v1:int -> v2:bool -> v3:int -> v4:bool -> (v5:unit -> X) -> v7:int -> X
    read__1038: v1:bool -> v2:{v2:int | false} -> (v3:{v3:int | false} -> X) -> X
    f_f_1579: v1:int -> v2:bool -> v3:int -> v4:int -> v5:bool -> (v6:unit -> X) -> v8:int -> X
    read__1038: v1:bool -> v2:{v2:int | false} -> (v3:int -> X) -> X
    readit_1036: v1:int -> (v2:int -> X) -> X
    br_readit_1585: v1:bool -> v2:int -> (v3:int -> X) -> X
    fail_1589: v1:{v1:bool | false} -> (v2:unit -> X) -> X
    f_1584: var436:int -> var435:int -> var434:unit -> X
    f_closeit_1576: var441:int -> (var440:int -> X) -> var438:unit -> X
    f_f_1580: var451:int ->
              var450:bool ->
              var449:int -> var448:int -> var447:int -> var446:bool -> (var445:unit -> X) -> var443:int -> X
    f_readit_1575: var454:int -> var453:unit -> X
    k_main_u_1525: var460:int -> var459:int -> (var458:unit -> X) -> var456:unit -> X
    loop_1030: var464:unit -> (var463:unit -> X) -> X
  abstraction types:
    main_1574: X
    f_1582: v1:int -> X
    f_1583: v1:int -> v2:int -> X
    main_1056: v1:int -> v2:int -> (v3:unit -> X) -> X
    g_1052: v1:int -> v2:bool -> v3:int -> (v4:unit -> X) -> X
    next_1050: v1:int -> (v2:int -> X) -> X
    f_g_1581: v1:int -> v2:int -> v3:bool -> (v4:unit -> X) -> v6:int -> X
    f_1046: v1:bool -> v2:bool -> v3:int[v3 -> (not v1)] -> (v4:unit -> X) -> X
    close__1043: var465:bool -> var466:int[var466 -> (not var465)] -> (var467:int -> X) -> X
    closeit_1041: var470:int -> (var471:int -> X) -> X
    br_closeit_1587: v1:bool -> v2:int -> (v3:int -> X) -> X
    f_f_1577: v1:int -> v2:bool -> v3:bool -> (v4:unit -> X) -> v6:int -> X
    f_f_1578: v1:int -> v2:bool -> v3:int -> v4:bool -> (v5:unit -> X) -> v7:int -> X
    read__1038: var474:bool -> var475:int -> (var476:int -> X) -> X
    f_f_1579: v1:int -> v2:bool -> v3:int -> v4:int -> v5:bool -> (v6:unit -> X) -> v8:int -> X
    readit_1036: v1:int -> (v2:int -> X) -> X
    br_readit_1585: v1:bool -> v2:int -> (v3:int -> X) -> X
    fail_1589: v1:bool -> (v2:unit -> X) -> X
    f_1584: var436:int -> var435:int -> var434:unit -> X
    f_closeit_1576: var441:int -> (var440:int -> X) -> var438:unit -> X
    f_f_1580: var451:int ->
              var450:bool ->
              var449:int -> var448:int -> var447:int -> var446:bool -> (var445:unit -> X) -> var443:int -> X
    f_readit_1575: var454:int -> var453:unit -> X
    k_main_u_1525: var460:int -> var459:int -> (var458:unit -> X) -> var456:unit -> X
    loop_1030: var464:unit -> (var463:unit -> X) -> X
  
end AbsTypeInfer.refine(29819)[1] (0.292955 sec.)
DONE!

Prefix of spurious counter-example::
0; 0; 0; 1; 0; 0; 0; 0; 0

Program with abstraction types (CEGAR-cycle 2)::
Main: main_1574
  main_1574 -> (rand_int f_1582)
  br_closeit_1587 b_1588 st_1042 k_closeit_1271 when b_1588 -> (k_closeit_1271 st_1042)
  br_closeit_1587 b_1588 st_1042 k_closeit_1271 when (not b_1588) ->
      (loop_1030 () (f_closeit_1576 st_1042 k_closeit_1271))
  br_readit_1585 b_1586 st_1037 k_readit_1206 when b_1586 -> (k_readit_1206 st_1037)
  br_readit_1585 b_1586 st_1037 k_readit_1206 when (not b_1586) -> (fail_1589 true (f_readit_1575 st_1037))
  close__1043 x_1044 st_1045 k_close__1309 when x_1044 -> (closeit_1041 st_1045 k_close__1309)
  close__1043 x_1044 st_1045 k_close__1309 when (not x_1044) -> (k_close__1309 st_1045)
  closeit_1041 st_1042 k_closeit_1271 when (st_1042 = 1) -> (k_closeit_1271 2)
  closeit_1041 st_1042 k_closeit_1271 when (not (st_1042 = 1)) ->
      (br_closeit_1587 (st_1042 = 3) st_1042 k_closeit_1271)
  f_1046 x_1047 y_1048 st_1049 k_f_1343 -> (close__1043 x_1047 st_1049 (f_f_1577 st_1049 x_1047 y_1048 k_f_1343))
  f_1582 x_1532 -> (rand_int (f_1583 x_1532))
  f_1583 x_1532 x_1545 -> (main_1056 x_1532 x_1545 (f_1584 x_1532 x_1545))
  f_1584 x_1532 x_1545 x_1529 -> end
  f_closeit_1576 st_1042 k_closeit_1271 x_1274 -> (k_closeit_1271 0)
  f_f_1577 st_1049 x_1047 y_1048 k_f_1343 x_1368 ->
      (close__1043 y_1048 x_1368 (f_f_1578 st_1049 x_1047 x_1368 y_1048 k_f_1343))
  f_f_1578 st_1049 x_1047 x_1368 y_1048 k_f_1343 x_1346 ->
      (read__1038 x_1047 st_1049 (f_f_1579 st_1049 x_1047 x_1346 x_1368 y_1048 k_f_1343))
  f_f_1579 st_1049 x_1047 x_1346 x_1368 y_1048 k_f_1343 x_1395 ->
      (read__1038 y_1048 x_1395 (f_f_1580 st_1049 x_1047 x_1346 x_1368 x_1395 y_1048 k_f_1343))
  f_f_1580 st_1049 x_1047 x_1346 x_1368 x_1395 y_1048 k_f_1343 x_1402 -> (f_1046 x_1047 y_1048 x_1402 k_f_1343)
  f_g_1581 b3_1053 st_1055 x_1054 k_g_1440 x_1462 -> (f_1046 x_1054 true x_1462 k_g_1440)
  f_readit_1575 st_1037 x_1209 -> _|_
  fail_1589 b k -> {fail} => (k ())
  g_1052 b3_1053 x_1054 st_1055 k_g_1440 when (b3_1053 > 0) ->
      (next_1050 st_1055 (f_g_1581 b3_1053 st_1055 x_1054 k_g_1440))
  g_1052 b3_1053 x_1054 st_1055 k_g_1440 when (not (b3_1053 > 0)) -> (f_1046 x_1054 false st_1055 k_g_1440)
  k_main_u_1525 b2_1057 b3_1058 k_main_1495 x_1498 -> (k_main_1495 ())
  loop_1030 x_1031 k_loop_1170 -> (loop_1030 () k_loop_1170)
  main_1056 b2_1057 b3_1058 k_main_1495 when (b2_1057 > 0) ->
      (g_1052 b3_1058 true 1 (k_main_u_1525 b2_1057 b3_1058 k_main_1495))
  main_1056 b2_1057 b3_1058 k_main_1495 when (not (b2_1057 > 0)) ->
      (g_1052 b3_1058 false 0 (k_main_u_1525 b2_1057 b3_1058 k_main_1495))
  next_1050 st_1051 k_next_1416 when (st_1051 = 0) -> (k_next_1416 1)
  next_1050 st_1051 k_next_1416 when (not (st_1051 = 0)) -> (k_next_1416 3)
  read__1038 x_1039 st_1040 k_read__1243 when x_1039 -> (readit_1036 st_1040 k_read__1243)
  read__1038 x_1039 st_1040 k_read__1243 when (not x_1039) -> (k_read__1243 st_1040)
  readit_1036 st_1037 k_readit_1206 when (st_1037 = 1) -> (k_readit_1206 1)
  readit_1036 st_1037 k_readit_1206 when (not (st_1037 = 1)) -> (br_readit_1585 (st_1037 = 3) st_1037 k_readit_1206)
Types:
  main_1574 : X
  close__1043 : (x_1:bool[x_1] -> x_2:int[(not x_1); x_2 >= 3] -> (int -> X) -> X)
  f_1046 : (x_1:bool[x_1] -> x_2:bool[x_2] -> x_3:int[(not x_1); x_3 >= 3] -> (unit -> X) -> X)
  fail_1589 : (x_1:bool[x_1] -> (unit -> X) -> X)
  loop_1030 : (unit -> (unit -> X) -> X)
  read__1038 : (x_1:bool[x_1] -> int -> (int -> X) -> X)
  
(2-1) Abstracting ... DONE!

(2-2) Checking HORS ... DONE!

Error trace::
  main_1574 ... --> 
  f_1582 ... --> 
  f_1583 ... --> 
  main_1056 [2/2] ... --> 
  g_1052 [1/2] ... --> 
  next_1050 [1/2] ... --> 
  f_g_1581 ... --> 
  f_1046 ... --> 
  close__1043 [2/2] ... --> 
  f_f_1577 ... --> 
  close__1043 [1/2] ... --> 
  closeit_1041 [1/2] ... --> 
  f_f_1578 ... --> 
  read__1038 [2/2] ... --> 
  f_f_1579 ... --> 
  read__1038 [1/2] ... --> 
  readit_1036 [2/2] ... --> 
  br_readit_1585 [2/2] ... --> 
  fail_1589 ... --> fail -->
  ERROR!

Spurious counter-example::
  0; 0; 0; 1; 0; 0; 0; 0; 1; 0; 0; 0; 0; 1; 0; 0; 1; 1; 0

(2-3) Checking counter-example ... DONE!

(2-4) Discovering predicates ... 
begin AbsTypeInfer.refine(67074)[1]
  program:
    main_1574  | true = ((Random.int 0) f_1582)
    br_closeit_1587 b_1588 st_1042 k_closeit_1271 | b_1588 = (k_closeit_1271 st_1042)
    br_closeit_1587 b_1588 st_1042 k_closeit_1271 | (not b_1588) = (loop_1030
                                                                    ()
                                                                    (
                                                                    f_closeit_1576 st_1042
                                                                    k_closeit_1271))
    br_readit_1585 b_1586 st_1037 k_readit_1206 | b_1586 = (k_readit_1206 st_1037)
    br_readit_1585 b_1586 st_1037 k_readit_1206 | (not b_1586) = (fail_1589 true
                                                                    (f_readit_1575 st_1037))
    close__1043 x_1044 st_1045 k_close__1309 | x_1044 = (closeit_1041 st_1045
                                                                    k_close__1309)
    close__1043 x_1044 st_1045 k_close__1309 | (not x_1044) = (k_close__1309 st_1045)
    closeit_1041 st_1042 k_closeit_1271 | (st_1042 = 1) = (k_closeit_1271 2)
    closeit_1041 st_1042 k_closeit_1271 | (not (st_1042 = 1)) = (br_closeit_1587 (
                                                                    st_1042 = 3)
                                                                    st_1042
                                                                    k_closeit_1271)
    f_1046 x_1047 y_1048 st_1049 k_f_1343 | true = (close__1043
                                                      x_1047
                                                      st_1049
                                                      (f_f_1577 st_1049
                                                                x_1047
                                                                y_1048
                                                                k_f_1343))
    f_1582 x_1532 | true = ((Random.int 0) (f_1583 x_1532))
    f_1583 x_1532 x_1545 | true = (main_1056 x_1532
                                             x_1545
                                             (f_1584 x_1532
                                                     x_1545))
    f_1584 x_1532 x_1545 x_1529 | true = end
    f_closeit_1576 st_1042 k_closeit_1271 x_1274 | true = (k_closeit_1271 0)
    f_f_1577 st_1049 x_1047 y_1048 k_f_1343 x_1368 | true = (close__1043
                                                               y_1048
                                                               x_1368
                                                               (f_f_1578 st_1049
                                                                    x_1047
                                                                    x_1368
                                                                    y_1048
                                                                    k_f_1343))
    f_f_1578 st_1049 x_1047 x_1368 y_1048 k_f_1343 x_1346 | true = (read__1038
                                                                    x_1047
                                                                    st_1049
                                                                    (
                                                                    f_f_1579
                                                                    st_1049
                                                                    x_1047
                                                                    x_1346
                                                                    x_1368
                                                                    y_1048
                                                                    k_f_1343))
    f_f_1579 st_1049 x_1047 x_1346 x_1368 y_1048 k_f_1343 x_1395 | true = (
    read__1038 y_1048
               x_1395
               (f_f_1580 st_1049
                         x_1047
                         x_1346
                         x_1368
                         x_1395
                         y_1048
                         k_f_1343))
    f_f_1580 st_1049 x_1047 x_1346 x_1368 x_1395 y_1048 k_f_1343 x_1402 | true = (
    f_1046 x_1047
           y_1048
           x_1402
           k_f_1343)
    f_g_1581 b3_1053 st_1055 x_1054 k_g_1440 x_1462 | true = (f_1046 x_1054
                                                                    true
                                                                    x_1462
                                                                    k_g_1440)
    f_readit_1575 st_1037 x_1209 | true = bot
    fail_1589 b k | true = (fail ())
    g_1052 b3_1053 x_1054 st_1055 k_g_1440 | (b3_1053 > 0) = (next_1050
                                                                st_1055
                                                                (f_g_1581 b3_1053
                                                                    st_1055
                                                                    x_1054
                                                                    k_g_1440))
    g_1052 b3_1053 x_1054 st_1055 k_g_1440 | (not (b3_1053 > 0)) = (f_1046 x_1054
                                                                    false
                                                                    st_1055
                                                                    k_g_1440)
    k_main_u_1525 b2_1057 b3_1058 k_main_1495 x_1498 | true = (k_main_1495 ())
    loop_1030 x_1031 k_loop_1170 | true = (loop_1030 ()
                                                     k_loop_1170)
    main_1056 b2_1057 b3_1058 k_main_1495 | (b2_1057 > 0) = (g_1052
                                                               b3_1058
                                                               true
                                                               1
                                                               (k_main_u_1525 b2_1057
                                                                    b3_1058
                                                                    k_main_1495))
    main_1056 b2_1057 b3_1058 k_main_1495 | (not (b2_1057 > 0)) = (g_1052
                                                                    b3_1058
                                                                    false
                                                                    0
                                                                    (
                                                                    k_main_u_1525 b2_1057
                                                                    b3_1058
                                                                    k_main_1495))
    next_1050 st_1051 k_next_1416 | (st_1051 = 0) = (k_next_1416 1)
    next_1050 st_1051 k_next_1416 | (not (st_1051 = 0)) = (k_next_1416 3)
    read__1038 x_1039 st_1040 k_read__1243 | x_1039 = (readit_1036 st_1040
                                                                   k_read__1243)
    read__1038 x_1039 st_1040 k_read__1243 | (not x_1039) = (k_read__1243 st_1040)
    readit_1036 st_1037 k_readit_1206 | (st_1037 = 1) = (k_readit_1206 1)
    readit_1036 st_1037 k_readit_1206 | (not (st_1037 = 1)) = (br_readit_1585 (
                                                                    st_1037 = 3)
                                                                    st_1037
                                                                    k_readit_1206)
    main_1574:X
    br_closeit_1587:bool -> int -> (int -> X) -> X
    br_readit_1585:bool -> int -> (int -> X) -> X
    close__1043:bool -> int -> (int -> X) -> X
    closeit_1041:int -> (int -> X) -> X
    f_1046:bool -> bool -> int -> (unit -> X) -> X
    f_1582:int -> X
    f_1583:int -> int -> X
    f_1584:int -> int -> unit -> X
    f_closeit_1576:int -> (int -> X) -> unit -> X
    f_f_1577:int -> bool -> bool -> (unit -> X) -> int -> X
    f_f_1578:int -> bool -> int -> bool -> (unit -> X) -> int -> X
    f_f_1579:int -> bool -> int -> int -> bool -> (unit -> X) -> int -> X
    f_f_1580:int -> bool -> int -> int -> int -> bool -> (unit -> X) -> int -> X
    f_g_1581:int -> int -> bool -> (unit -> X) -> int -> X
    f_readit_1575:int -> unit -> X
    fail_1589:bool -> (unit -> X) -> X
    g_1052:int -> bool -> int -> (unit -> X) -> X
    k_main_u_1525:int -> int -> (unit -> X) -> unit -> X
    loop_1030:unit -> (unit -> X) -> X
    main_1056:int -> int -> (unit -> X) -> X
    next_1050:int -> (int -> X) -> X
    read__1038:bool -> int -> (int -> X) -> X
    readit_1036:int -> (int -> X) -> X
  inlined functions: br_closeit_1587,br_readit_1585,closeit_1041,f_1582,f_1583,f_1584,f_closeit_1576,f_f_1577,f_f_1578,f_f_1579,f_f_1580,f_g_1581,f_readit_1575,g_1052,k_main_u_1525,main_1056,next_1050,readit_1036
  counterexample: 0:0:0:1:0:0:0:0:1:0:0:0:0:1:0:0:1:1:0
  error traces:
    [true.nop(<f_1582@134:0> = var479)
     [true.nop((<f_1583@137:0> = <f_1582@134:0>) && (<f_1583@137:1> = var480))
      [true.((<main_1056@139:0> = <f_1583@137:0>) && (<main_1056@139:1> = <f_1583@137:1>))
       [(not (<main_1056@139:0> > 0)).
        ((<g_1052@142:0> = <main_1056@139:1>) && ((<g_1052@142:1> = false) && (<g_1052@142:2> = 0)))
        [(<g_1052@142:0> > 0).(<next_1050@145:0> = <g_1052@142:2>)
         [(<next_1050@145:0> = 0).(<<next_1050@145:1>@148:0> = 1)
          [true.
           ((<f_g_1581@150:0> = <g_1052@142:0>) &&
            ((<f_g_1581@150:1> = <g_1052@142:2>) &&
             ((<f_g_1581@150:2> = <g_1052@142:1>) && (<f_g_1581@150:4> = <<next_1050@145:1>@148:0>))))
           [true.
            ((<f_1046@152:0> = <f_g_1581@150:2>) && ((<f_1046@152:1> = true) && (<f_1046@152:2> = <f_g_1581@150:4>)))
            [true.((<close__1043@154:0> = <f_1046@152:0>) && (<close__1043@154:1> = <f_1046@152:2>))
             [(not <close__1043@154:0>).(<<close__1043@154:2>@157:0> = <close__1043@154:1>)
              [true.
               ((<f_f_1577@159:0> = <f_1046@152:2>) &&
                ((<f_f_1577@159:1> = <f_1046@152:0>) &&
                 ((<f_f_1577@159:2> = <f_1046@152:1>) && (<f_f_1577@159:4> = <<close__1043@154:2>@157:0>))))
               [true.((<close__1043@161:0> = <f_f_1577@159:2>) && (<close__1043@161:1> = <f_f_1577@159:4>))
                [<close__1043@161:0>.(<closeit_1041@164:0> = <close__1043@161:1>)
                 [(<closeit_1041@164:0> = 1).(<<closeit_1041@164:1>@167:0> = 2)
                  [true.(<<close__1043@161:2>@169:0> = <<closeit_1041@164:1>@167:0>)
                   [true.
                    ((<f_f_1578@171:0> = <f_f_1577@159:0>) &&
                     ((<f_f_1578@171:1> = <f_f_1577@159:1>) &&
                      ((<f_f_1578@171:2> = <f_f_1577@159:4>) &&
                       ((<f_f_1578@171:3> = <f_f_1577@159:2>) && (<f_f_1578@171:5> = <<close__1043@161:2>@169:0>)))))
                    [true.((<read__1038@173:0> = <f_f_1578@171:1>) && (<read__1038@173:1> = <f_f_1578@171:0>))
                     [(not <read__1038@173:0>).(<<read__1038@173:2>@176:0> = <read__1038@173:1>)
                      [true.
                       ((<f_f_1579@178:0> = <f_f_1578@171:0>) &&
                        ((<f_f_1579@178:1> = <f_f_1578@171:1>) &&
                         ((<f_f_1579@178:2> = <f_f_1578@171:5>) &&
                          ((<f_f_1579@178:3> = <f_f_1578@171:2>) &&
                           ((<f_f_1579@178:4> = <f_f_1578@171:3>) && (<f_f_1579@178:6> = <<read__1038@173:2>@176:0>))))))
                       [true.((<read__1038@180:0> = <f_f_1579@178:4>) && (<read__1038@180:1> = <f_f_1579@178:6>))
                        [<read__1038@180:0>.(<readit_1036@183:0> = <read__1038@180:1>)
                         [(not (<readit_1036@183:0> = 1)).
                          ((<br_readit_1585@186:0> = (<readit_1036@183:0> = 3)) &&
                           (<br_readit_1585@186:1> = <readit_1036@183:0>))
                          [(not <br_readit_1585@186:0>).(<fail_1589@189:0> = true)[true.error
  begin RefTypeInfer.infer_etrs(67075)[2]
    horn clauses:
      P[<fail_1589@189:0>](<fail_1589@189:0>:bool)|- bot
      
      P[<br_readit_1585@186:1>](false:bool,<br_readit_1585@186:1>:int), <fail_1589@189:0>
      |- P[<fail_1589@189:0>](<fail_1589@189:0>:bool)
      
      P[<readit_1036@183:0>](<br_readit_1585@186:1>:int),
      ((<br_readit_1585@186:1> <> 1) && (<br_readit_1585@186:0> = (<br_readit_1585@186:1> = 3)))
      |- P[<br_readit_1585@186:1>](<br_readit_1585@186:0>:bool,<br_readit_1585@186:1>:int)
      
      P[<read__1038@180:1>](true:bool,<readit_1036@183:0>:int)|- P[<readit_1036@183:0>](<readit_1036@183:0>:int)
      
      P[<f_f_1579@178:6>](<f_f_1579@178:0>:int,<f_f_1579@178:1>:bool,<f_f_1579@178:2>:int,<f_f_1579@178:3>:int,<read__1038@180:0>:bool,<read__1038@180:1>:int)|- P[<read__1038@180:1>](
      <read__1038@180:0>:bool,<read__1038@180:1>:int)
      
      P[<f_f_1578@171:5>](<f_f_1579@178:0>:int,<f_f_1579@178:1>:bool,<f_f_1579@178:3>:int,<f_f_1579@178:4>:bool,<f_f_1579@178:2>:int),
      P[<<read__1038@173:2>@176:0>](<f_f_1579@178:1>:bool,<f_f_1579@178:0>:int,<f_f_1579@178:6>:int)|- P[<f_f_1579@178:6>](
      <f_f_1579@178:0>:int,<f_f_1579@178:1>:bool,<f_f_1579@178:2>:int,
      <f_f_1579@178:3>:int,<f_f_1579@178:4>:bool,<f_f_1579@178:6>:int)
      
      P[<read__1038@173:1>](<read__1038@173:0>:bool,<read__1038@173:1>:int),
      ((<<read__1038@173:2>@176:0> = <read__1038@173:1>) && (not <read__1038@173:0>))
      |- P[<<read__1038@173:2>@176:0>](<read__1038@173:0>:bool,<read__1038@173:1>:int,
                                       <<read__1038@173:2>@176:0>:int)
      
      P[<f_f_1578@171:5>](<read__1038@173:1>:int,<read__1038@173:0>:bool,<f_f_1578@171:2>:int,<f_f_1578@171:3>:bool,<f_f_1578@171:5>:int)|- P[<read__1038@173:1>](
      <read__1038@173:0>:bool,<read__1038@173:1>:int)
      
      P[<f_f_1577@159:4>](<f_f_1578@171:0>:int,<f_f_1578@171:1>:bool,<f_f_1578@171:3>:bool,<f_f_1578@171:2>:int),
      P[<<close__1043@161:2>@169:0>](<f_f_1578@171:3>:bool,<f_f_1578@171:2>:int,<f_f_1578@171:5>:int)|- P[<f_f_1578@171:5>](
      <f_f_1578@171:0>:int,<f_f_1578@171:1>:bool,<f_f_1578@171:2>:int,
      <f_f_1578@171:3>:bool,<f_f_1578@171:5>:int)
      
      P[<close__1043@161:1>](<close__1043@161:0>:bool,<close__1043@161:1>:int),
      P[<<closeit_1041@164:1>@167:0>](<close__1043@161:1>:int,<<close__1043@161:2>@169:0>:int), <close__1043@161:0>
      |- P[<<close__1043@161:2>@169:0>](<close__1043@161:0>:bool,<close__1043@161:1>:int,
                                        <<close__1043@161:2>@169:0>:int)
      
      P[<closeit_1041@164:0>](<closeit_1041@164:0>:int),
      ((<closeit_1041@164:0> = 1) && (<<closeit_1041@164:1>@167:0> = 2))
      |- P[<<closeit_1041@164:1>@167:0>](<closeit_1041@164:0>:int,<<closeit_1041@164:1>@167:0>:int)
      
      P[<close__1043@161:1>](true:bool,<closeit_1041@164:0>:int)|- P[<closeit_1041@164:0>](<closeit_1041@164:0>:int)
      
      P[<f_f_1577@159:4>](<f_f_1577@159:0>:int,<f_f_1577@159:1>:bool,<close__1043@161:0>:bool,<close__1043@161:1>:int)|- P[<close__1043@161:1>](
      <close__1043@161:0>:bool,<close__1043@161:1>:int)
      
      P[<f_1046@152:2>](<f_f_1577@159:1>:bool,<f_f_1577@159:2>:bool,<f_f_1577@159:0>:int),
      P[<<close__1043@154:2>@157:0>](<f_f_1577@159:1>:bool,<f_f_1577@159:0>:int,<f_f_1577@159:4>:int)|- P[<f_f_1577@159:4>](
      <f_f_1577@159:0>:int,<f_f_1577@159:1>:bool,<f_f_1577@159:2>:bool,
      <f_f_1577@159:4>:int)
      
      P[<close__1043@154:1>](<close__1043@154:0>:bool,<close__1043@154:1>:int),
      ((<<close__1043@154:2>@157:0> = <close__1043@154:1>) && (not <close__1043@154:0>))
      |- P[<<close__1043@154:2>@157:0>](<close__1043@154:0>:bool,<close__1043@154:1>:int,
                                        <<close__1043@154:2>@157:0>:int)
      
      P[<f_1046@152:2>](<close__1043@154:0>:bool,<f_1046@152:1>:bool,<close__1043@154:1>:int)|- P[<close__1043@154:1>](
      <close__1043@154:0>:bool,<close__1043@154:1>:int)
      
      P[<f_g_1581@150:4>](<f_g_1581@150:0>:int,<f_g_1581@150:1>:int,<f_1046@152:0>:bool,<f_1046@152:2>:int),
      <f_1046@152:1> |- P[<f_1046@152:2>](<f_1046@152:0>:bool,<f_1046@152:1>:bool,
                                          <f_1046@152:2>:int)
      
      P[<g_1052@142:2>](<f_g_1581@150:0>:int,<f_g_1581@150:2>:bool,<f_g_1581@150:1>:int),
      P[<<next_1050@145:1>@148:0>](<f_g_1581@150:1>:int,<f_g_1581@150:4>:int), (
      <f_g_1581@150:0> > 0)
      |- P[<f_g_1581@150:4>](<f_g_1581@150:0>:int,<f_g_1581@150:1>:int,
                             <f_g_1581@150:2>:bool,<f_g_1581@150:4>:int)
      
      P[<next_1050@145:0>](<next_1050@145:0>:int), ((<next_1050@145:0> = 0) && (<<next_1050@145:1>@148:0> = 1))
      |- P[<<next_1050@145:1>@148:0>](<next_1050@145:0>:int,<<next_1050@145:1>@148:0>:int)
      
      P[<g_1052@142:2>](<g_1052@142:0>:int,<g_1052@142:1>:bool,<next_1050@145:0>:int), (
      <g_1052@142:0> > 0) |- P[<next_1050@145:0>](<next_1050@145:0>:int)
      
      P[<main_1056@139:1>](<main_1056@139:0>:int,<g_1052@142:0>:int),
      ((<g_1052@142:2> = 0) && ((<main_1056@139:0> <= 0) && (not <g_1052@142:1>)))
      |- P[<g_1052@142:2>](<g_1052@142:0>:int,<g_1052@142:1>:bool,<g_1052@142:2>:int)
      
      P[<f_1583@137:1>](<main_1056@139:0>:int,<main_1056@139:1>:int)|- P[<main_1056@139:1>](
      <main_1056@139:0>:int,<main_1056@139:1>:int)
      
      P[<f_1582@134:0>](<f_1583@137:0>:int)|- P[<f_1583@137:1>](<f_1583@137:0>:int,
                                                                <f_1583@137:1>:int)
      
      |- P[<f_1582@134:0>](<f_1582@134:0>:int)
    call trees:
      <main_1574@131>
        <f_1582@134>
          <f_1583@137>
            <main_1056@139>
              <g_1052@142>
                <next_1050@145>
                </<next_1050@145:1>@148>
                <f_g_1581@150>
                  <f_1046@152>
                    <close__1043@154>
                    </<close__1043@154:2>@157>
                    <f_f_1577@159>
                      <close__1043@161>
                        <closeit_1041@164>
                        </<closeit_1041@164:1>@167>
                      </<close__1043@161:2>@169>
                      <f_f_1578@171>
                        <read__1038@173>
                        </<read__1038@173:2>@176>
                        <f_f_1579@178>
                          <read__1038@180>
                            <readit_1036@183>
                              <br_readit_1585@186>
                                <fail_1589@189>
    inlined horn clauses:
      P[<fail_1589@189:0>](<fail_1589@189:0>:bool)|- bot
      
      P[<read__1038@180:1>](true:bool,<br_readit_1585@186:1>:int),
      ((<br_readit_1585@186:1> <> 1) && ((<br_readit_1585@186:1> <> 3) && <fail_1589@189:0>))
      |- P[<fail_1589@189:0>](<fail_1589@189:0>:bool)
      
      P[<f_1046@152:2>](<f_f_1579@178:1>:bool,<read__1038@180:0>:bool,<f_f_1579@178:0>:int),
      P[<<close__1043@154:2>@157:0>](<f_f_1579@178:1>:bool,<f_f_1579@178:0>:int,<f_f_1579@178:3>:int),
      P[<<close__1043@161:2>@169:0>](<read__1038@180:0>:bool,<f_f_1579@178:3>:int,<f_f_1579@178:2>:int),
      P[<<read__1038@173:2>@176:0>](<f_f_1579@178:1>:bool,<f_f_1579@178:0>:int,<read__1038@180:1>:int)|- P[<read__1038@180:1>](
      <read__1038@180:0>:bool,<read__1038@180:1>:int)
      
      P[<read__1038@173:1>](<read__1038@173:0>:bool,<read__1038@173:1>:int),
      ((<<read__1038@173:2>@176:0> = <read__1038@173:1>) && (not <read__1038@173:0>))
      |- P[<<read__1038@173:2>@176:0>](<read__1038@173:0>:bool,<read__1038@173:1>:int,
                                       <<read__1038@173:2>@176:0>:int)
      
      P[<f_1046@152:2>](<read__1038@173:0>:bool,<f_f_1578@171:3>:bool,<read__1038@173:1>:int),
      P[<<close__1043@154:2>@157:0>](<read__1038@173:0>:bool,<read__1038@173:1>:int,<f_f_1578@171:2>:int),
      P[<<close__1043@161:2>@169:0>](<f_f_1578@171:3>:bool,<f_f_1578@171:2>:int,<f_f_1578@171:5>:int)|- P[<read__1038@173:1>](
      <read__1038@173:0>:bool,<read__1038@173:1>:int)
      
      P[<close__1043@161:1>](<close__1043@161:0>:bool,<close__1043@161:1>:int),
      ((<close__1043@161:1> = 1) && ((<<close__1043@161:2>@169:0> = 2) && <close__1043@161:0>))
      |- P[<<close__1043@161:2>@169:0>](<close__1043@161:0>:bool,<close__1043@161:1>:int,
                                        <<close__1043@161:2>@169:0>:int)
      
      P[<f_1046@152:2>](<f_f_1577@159:1>:bool,<close__1043@161:0>:bool,<f_f_1577@159:0>:int),
      P[<<close__1043@154:2>@157:0>](<f_f_1577@159:1>:bool,<f_f_1577@159:0>:int,<close__1043@161:1>:int)|- P[<close__1043@161:1>](
      <close__1043@161:0>:bool,<close__1043@161:1>:int)
      
      P[<close__1043@154:1>](<close__1043@154:0>:bool,<close__1043@154:1>:int),
      ((<<close__1043@154:2>@157:0> = <close__1043@154:1>) && (not <close__1043@154:0>))
      |- P[<<close__1043@154:2>@157:0>](<close__1043@154:0>:bool,<close__1043@154:1>:int,
                                        <<close__1043@154:2>@157:0>:int)
      
      P[<f_1046@152:2>](<close__1043@154:0>:bool,<f_1046@152:1>:bool,<close__1043@154:1>:int)|- P[<close__1043@154:1>](
      <close__1043@154:0>:bool,<close__1043@154:1>:int)
      
       ((<f_1046@152:2> = 1) && ((not <f_1046@152:0>) && <f_1046@152:1>))
      |- P[<f_1046@152:2>](<f_1046@152:0>:bool,<f_1046@152:1>:bool,<f_1046@152:2>:int)
    begin ParamSubstInfer.infer(70469)[3]
      
    end ParamSubstInfer.infer(70469)[3] (0.075988 sec.)
    inferred extra parameters:
      
    begin RefTypeInfer.elim_coeffs(70471)[3]
      
    end RefTypeInfer.elim_coeffs(70471)[3] (0.002000 sec.)
    begin GenHcSolver.solve(70993)[3]
      Horn clauses:
        P[<fail_1589@189:0>](<fail_1589@189:0>:bool)|- bot
        
        P[<read__1038@180:1>](true:bool,<br_readit_1585@186:1>:int),
        ((<br_readit_1585@186:1> <> 1) && ((<br_readit_1585@186:1> <> 3) && <fail_1589@189:0>))
        |- P[<fail_1589@189:0>](<fail_1589@189:0>:bool)
        
        P[<f_1046@152:2>](<f_f_1579@178:1>:bool,<read__1038@180:0>:bool,<f_f_1579@178:0>:int),
        P[<<close__1043@154:2>@157:0>](<f_f_1579@178:1>:bool,<f_f_1579@178:0>:int,<f_f_1579@178:3>:int),
        P[<<close__1043@161:2>@169:0>](<read__1038@180:0>:bool,<f_f_1579@178:3>:int,<f_f_1579@178:2>:int),
        P[<<read__1038@173:2>@176:0>](<f_f_1579@178:1>:bool,<f_f_1579@178:0>:int,<read__1038@180:1>:int)|- P[<read__1038@180:1>](
        <read__1038@180:0>:bool,<read__1038@180:1>:int)
        
        P[<read__1038@173:1>](<read__1038@173:0>:bool,<read__1038@173:1>:int),
        ((<<read__1038@173:2>@176:0> = <read__1038@173:1>) && (not <read__1038@173:0>))
        |- P[<<read__1038@173:2>@176:0>](<read__1038@173:0>:bool,<read__1038@173:1>:int,
                                         <<read__1038@173:2>@176:0>:int)
        
        P[<f_1046@152:2>](<read__1038@173:0>:bool,<f_f_1578@171:3>:bool,<read__1038@173:1>:int),
        P[<<close__1043@154:2>@157:0>](<read__1038@173:0>:bool,<read__1038@173:1>:int,<f_f_1578@171:2>:int),
        P[<<close__1043@161:2>@169:0>](<f_f_1578@171:3>:bool,<f_f_1578@171:2>:int,<f_f_1578@171:5>:int)|- P[<read__1038@173:1>](
        <read__1038@173:0>:bool,<read__1038@173:1>:int)
        
        P[<close__1043@161:1>](<close__1043@161:0>:bool,<close__1043@161:1>:int),
        ((<close__1043@161:1> = 1) && ((<<close__1043@161:2>@169:0> = 2) && <close__1043@161:0>))
        |- P[<<close__1043@161:2>@169:0>](<close__1043@161:0>:bool,<close__1043@161:1>:int,
                                          <<close__1043@161:2>@169:0>:int)
        
        P[<f_1046@152:2>](<f_f_1577@159:1>:bool,<close__1043@161:0>:bool,<f_f_1577@159:0>:int),
        P[<<close__1043@154:2>@157:0>](<f_f_1577@159:1>:bool,<f_f_1577@159:0>:int,<close__1043@161:1>:int)|- P[<close__1043@161:1>](
        <close__1043@161:0>:bool,<close__1043@161:1>:int)
        
        P[<close__1043@154:1>](<close__1043@154:0>:bool,<close__1043@154:1>:int),
        ((<<close__1043@154:2>@157:0> = <close__1043@154:1>) && (not <close__1043@154:0>))
        |- P[<<close__1043@154:2>@157:0>](<close__1043@154:0>:bool,<close__1043@154:1>:int,
                                          <<close__1043@154:2>@157:0>:int)
        
        P[<f_1046@152:2>](<close__1043@154:0>:bool,<f_1046@152:1>:bool,<close__1043@154:1>:int)|- P[<close__1043@154:1>](
        <close__1043@154:0>:bool,<close__1043@154:1>:int)
        
         ((<f_1046@152:2> = 1) && ((not <f_1046@152:0>) && <f_1046@152:1>))
        |- P[<f_1046@152:2>](<f_1046@152:0>:bool,<f_1046@152:1>:bool,
                             <f_1046@152:2>:int)
      lower bounds:
        P[<f_1046@152:2>](<f_1046@152:0>:bool,<f_1046@152:1>:bool,<f_1046@152:2>:int) =
        ((<f_1046@152:2> = 1) && ((not <f_1046@152:0>) && <f_1046@152:1>))
        P[<close__1043@154:1>](<close__1043@154:0>:bool,<close__1043@154:1>:int) =
        ((<close__1043@154:1> = 1) && (not <close__1043@154:0>))
        P[<<close__1043@154:2>@157:0>](<close__1043@154:0>:bool,<close__1043@154:1>:int,<<close__1043@154:2>@157:0>:int) =
        ((<close__1043@154:1> = 1) &&
         ((<<close__1043@154:2>@157:0> = <close__1043@154:1>) && (not <close__1043@154:0>)))
        P[<close__1043@161:1>](<close__1043@161:0>:bool,<close__1043@161:1>:int) =
        ((<close__1043@161:1> = 1) && <close__1043@161:0>)
        P[<<close__1043@161:2>@169:0>](<close__1043@161:0>:bool,<close__1043@161:1>:int,<<close__1043@161:2>@169:0>:int) =
        ((<<close__1043@161:2>@169:0> = 2) && ((<close__1043@161:1> = 1) && <close__1043@161:0>))
        P[<read__1038@173:1>](<read__1038@173:0>:bool,<read__1038@173:1>:int) =
        ((<read__1038@173:1> = 1) && (not <read__1038@173:0>))
        P[<<read__1038@173:2>@176:0>](<read__1038@173:0>:bool,<read__1038@173:1>:int,<<read__1038@173:2>@176:0>:int) =
        ((<read__1038@173:1> = 1) && ((<<read__1038@173:2>@176:0> = <read__1038@173:1>) && (not <read__1038@173:0>)))
        P[<read__1038@180:1>](<read__1038@180:0>:bool,<read__1038@180:1>:int) =
        ((<read__1038@180:1> = 1) && <read__1038@180:0>)
        P[<fail_1589@189:0>](<fail_1589@189:0>:bool) = false
      upper bounds:
        P[<read__1038@180:1>](var485:bool,var486:int) = ((var486 = 1) || ((var486 = 3) || (not var485)))
        P[<read__1038@173:1>](var482:bool,var483:int) = true
      begin GenHcSolver.classify_pids(78084)[4]
        output:
          [<read__1038@173:1>;<read__1038@180:1>]
      end GenHcSolver.classify_pids(78084)[4] (0.000000 sec.)
      begin ApronInterface.convex_hull_interpolate(78112)[4]
        lb:(((<read__1038@173:1> = 1) && (not <read__1038@173:0>)) || ((<read__1038@173:1> = 1) && <read__1038@173:0>))
        nub:(not ((<read__1038@173:1> = 1) || ((<read__1038@173:1> = 3) || (not <read__1038@173:0>))))
        lb':(((<read__1038@173:1> = 1) && (not <read__1038@173:0>)) || ((<read__1038@173:1> = 1) && <read__1038@173:0>))
        nub':(not ((<read__1038@173:1> = 1) || ((<read__1038@173:1> = 3) || (not <read__1038@173:0>))))
        begin InterpProver.interpolate(78113)[5]
          begin InterpProver.interpolate_fresh(78114)[6]
            begin InterpProver.interpolate_log(78115)[7]
              input1: (((<read__1038@173:1> = 1) && (not <read__1038@173:0>)) ||
                       ((<read__1038@173:1> = 1) && <read__1038@173:0>))
              input2: (not ((<read__1038@173:1> = 1) || ((<read__1038@173:1> = 3) || (not <read__1038@173:0>))))
              begin InterpProver.interpolate_check(78116)[8]
                begin InterpProver.interpolate_simplify(78117)[9]
                  begin InterpProver.interpolate_quick(78197)[10]
                    begin CsisatInterface.interpolate_csisat_wrap(78206)[11]
                      begin CsisatInterface.interpolate_csisat_post_process(78207)[12]
                        begin CsisatInterface.interpolate_csisat_log(78208)[13]
                          input1: 1 = v_sep_read__1038_sep_173_sep_1
                          input2: (not 1 = v_sep_read__1038_sep_173_sep_1 & not 3 = v_sep_read__1038_sep_173_sep_1 & v_sep_read__1038_sep_173_sep_0 = true())
                          begin CsisatInterface.interpolate_csisat_raw(78209)[14]
                            
                          end CsisatInterface.interpolate_csisat_raw(78209)[14] (0.000000 sec.)
                          output: 1 = v_sep_read__1038_sep_173_sep_1
                          
                        end CsisatInterface.interpolate_csisat_log(78208)[13] (0.000000 sec.)
                        after simplification: 1 = v_sep_read__1038_sep_173_sep_1
                        after dnf conversion: ((1 = v_sep_read__1038_sep_173_sep_1))
                        
                      end CsisatInterface.interpolate_csisat_post_process(78207)[12] (0.000000 sec.)
                      
                    end CsisatInterface.interpolate_csisat_wrap(78206)[11] (0.000000 sec.)
                    
                  end InterpProver.interpolate_quick(78197)[10] (0.000000 sec.)
                  
                end InterpProver.interpolate_simplify(78117)[9] (0.000000 sec.)
                
              end InterpProver.interpolate_check(78116)[8] (0.000000 sec.)
              output: (1 = <read__1038@173:1>)
            end InterpProver.interpolate_log(78115)[7] (0.000000 sec.)
            
          end InterpProver.interpolate_fresh(78114)[6] (0.000000 sec.)
          
        end InterpProver.interpolate(78113)[5] (0.000000 sec.)
        output:
          P[<read__1038@173:1>](<read__1038@173:0>:bool,<read__1038@173:1>:int) = (1 = <read__1038@173:1>)
          P[<read__1038@180:1>](<read__1038@173:0>:bool,<read__1038@173:1>:int) = (1 = <read__1038@173:1>)
      end ApronInterface.convex_hull_interpolate(78112)[4] (0.001000 sec.)
      Horn clauses:
        P[<fail_1589@189:0>](<fail_1589@189:0>:bool)|- bot
        
        P[<f_1046@152:2>](<f_f_1579@178:1>:bool,<read__1038@180:0>:bool,<f_f_1579@178:0>:int),
        P[<<close__1043@154:2>@157:0>](<f_f_1579@178:1>:bool,<f_f_1579@178:0>:int,<f_f_1579@178:3>:int),
        P[<<close__1043@161:2>@169:0>](<read__1038@180:0>:bool,<f_f_1579@178:3>:int,<f_f_1579@178:2>:int),
        P[<<read__1038@173:2>@176:0>](<f_f_1579@178:1>:bool,<f_f_1579@178:0>:int,<read__1038@180:1>:int),
        (1 <> <read__1038@180:1>) |- bot
        
         ((<read__1038@173:1> = 1) && ((<<read__1038@173:2>@176:0> = <read__1038@173:1>) && (not <read__1038@173:0>)))
        |- P[<<read__1038@173:2>@176:0>](<read__1038@173:0>:bool,<read__1038@173:1>:int,
                                         <<read__1038@173:2>@176:0>:int)
        
        P[<f_1046@152:2>](<read__1038@173:0>:bool,<f_f_1578@171:3>:bool,<read__1038@173:1>:int),
        P[<<close__1043@154:2>@157:0>](<read__1038@173:0>:bool,<read__1038@173:1>:int,<f_f_1578@171:2>:int),
        P[<<close__1043@161:2>@169:0>](<f_f_1578@171:3>:bool,<f_f_1578@171:2>:int,<f_f_1578@171:5>:int),
        (1 <> <read__1038@173:1>) |- bot
        
        P[<close__1043@161:1>](<close__1043@161:0>:bool,<close__1043@161:1>:int),
        ((<close__1043@161:1> = 1) && ((<<close__1043@161:2>@169:0> = 2) && <close__1043@161:0>))
        |- P[<<close__1043@161:2>@169:0>](<close__1043@161:0>:bool,<close__1043@161:1>:int,
                                          <<close__1043@161:2>@169:0>:int)
        
        P[<f_1046@152:2>](<f_f_1577@159:1>:bool,<close__1043@161:0>:bool,<f_f_1577@159:0>:int),
        P[<<close__1043@154:2>@157:0>](<f_f_1577@159:1>:bool,<f_f_1577@159:0>:int,<close__1043@161:1>:int)|- P[<close__1043@161:1>](
        <close__1043@161:0>:bool,<close__1043@161:1>:int)
        
        P[<close__1043@154:1>](<close__1043@154:0>:bool,<close__1043@154:1>:int),
        ((<<close__1043@154:2>@157:0> = <close__1043@154:1>) && (not <close__1043@154:0>))
        |- P[<<close__1043@154:2>@157:0>](<close__1043@154:0>:bool,<close__1043@154:1>:int,
                                          <<close__1043@154:2>@157:0>:int)
        
        P[<f_1046@152:2>](<close__1043@154:0>:bool,<f_1046@152:1>:bool,<close__1043@154:1>:int)|- P[<close__1043@154:1>](
        <close__1043@154:0>:bool,<close__1043@154:1>:int)
        
         ((<f_1046@152:2> = 1) && ((not <f_1046@152:0>) && <f_1046@152:1>))
        |- P[<f_1046@152:2>](<f_1046@152:0>:bool,<f_1046@152:1>:bool,
                             <f_1046@152:2>:int)
      lower bounds:
        P[<<read__1038@173:2>@176:0>](<read__1038@173:0>:bool,<read__1038@173:1>:int,<<read__1038@173:2>@176:0>:int) =
        ((<read__1038@173:1> = 1) && ((<<read__1038@173:2>@176:0> = <read__1038@173:1>) && (not <read__1038@173:0>)))
        P[<f_1046@152:2>](<f_1046@152:0>:bool,<f_1046@152:1>:bool,<f_1046@152:2>:int) =
        ((<f_1046@152:2> = 1) && ((not <f_1046@152:0>) && <f_1046@152:1>))
        P[<fail_1589@189:0>](var490:bool) = false
        P[<close__1043@154:1>](<close__1043@154:0>:bool,<close__1043@154:1>:int) =
        ((<close__1043@154:1> = 1) && (not <close__1043@154:0>))
        P[<<close__1043@154:2>@157:0>](<close__1043@154:0>:bool,<close__1043@154:1>:int,<<close__1043@154:2>@157:0>:int) =
        ((<close__1043@154:1> = 1) &&
         ((<<close__1043@154:2>@157:0> = <close__1043@154:1>) && (not <close__1043@154:0>)))
        P[<close__1043@161:1>](<close__1043@161:0>:bool,<close__1043@161:1>:int) =
        ((<close__1043@161:1> = 1) && <close__1043@161:0>)
        P[<<close__1043@161:2>@169:0>](<close__1043@161:0>:bool,<close__1043@161:1>:int,<<close__1043@161:2>@169:0>:int) =
        ((<<close__1043@161:2>@169:0> = 2) && ((<close__1043@161:1> = 1) && <close__1043@161:0>))
      upper bounds:
        P[<<close__1043@161:2>@169:0>](var498:bool,var499:int,var500:int) = true
        P[<<close__1043@154:2>@157:0>](var493:bool,var494:int,var495:int) = true
      begin GenHcSolver.classify_pids(86303)[4]
        output:
          [<<close__1043@154:2>@157:0>;<<close__1043@161:2>@169:0>]
      end GenHcSolver.classify_pids(86303)[4] (0.000000 sec.)
      begin ApronInterface.convex_hull_interpolate(86314)[4]
        lb:(((<close__1043@154:1> = 1) &&
             ((<<close__1043@154:2>@157:0> = <close__1043@154:1>) && (not <close__1043@154:0>))) ||
            ((<<close__1043@154:2>@157:0> = 2) && ((<close__1043@154:1> = 1) && <close__1043@154:0>)))
        nub:false
        lb':(((<close__1043@154:1> = 1) &&
              ((<<close__1043@154:2>@157:0> = <close__1043@154:1>) && (not <close__1043@154:0>))) ||
             ((<<close__1043@154:2>@157:0> = 2) && ((<close__1043@154:1> = 1) && <close__1043@154:0>)))
        nub':false
        begin InterpProver.interpolate(86315)[5]
          begin InterpProver.interpolate_fresh(86316)[6]
            begin InterpProver.interpolate_log(86317)[7]
              input1: (((<close__1043@154:1> = 1) &&
                        ((<<close__1043@154:2>@157:0> = <close__1043@154:1>) && (not <close__1043@154:0>))) ||
                       ((<<close__1043@154:2>@157:0> = 2) && ((<close__1043@154:1> = 1) && <close__1043@154:0>)))
              input2: false
              begin InterpProver.interpolate_check(86318)[8]
                begin InterpProver.interpolate_simplify(86319)[9]
                  begin InterpProver.interpolate_quick(86455)[10]
                    
                  end InterpProver.interpolate_quick(86455)[10] (0.000000 sec.)
                  
                end InterpProver.interpolate_simplify(86319)[9] (0.000000 sec.)
                
              end InterpProver.interpolate_check(86318)[8] (0.000000 sec.)
              output: true
            end InterpProver.interpolate_log(86317)[7] (0.000000 sec.)
            
          end InterpProver.interpolate_fresh(86316)[6] (0.000000 sec.)
          
        end InterpProver.interpolate(86315)[5] (0.000000 sec.)
        output:
          P[<<close__1043@154:2>@157:0>](<close__1043@154:0>:bool,<close__1043@154:1>:int,<<close__1043@154:2>@157:0>:int) =
          true
          P[<<close__1043@161:2>@169:0>](<close__1043@154:0>:bool,<close__1043@154:1>:int,<<close__1043@154:2>@157:0>:int) =
          true
      end ApronInterface.convex_hull_interpolate(86314)[4] (0.000999 sec.)
      Horn clauses:
        P[<fail_1589@189:0>](<fail_1589@189:0>:bool)|- bot
        
        P[<f_1046@152:2>](<f_f_1579@178:1>:bool,<read__1038@180:0>:bool,<f_f_1579@178:0>:int),
        P[<<read__1038@173:2>@176:0>](<f_f_1579@178:1>:bool,<f_f_1579@178:0>:int,<read__1038@180:1>:int),
        (1 <> <read__1038@180:1>) |- bot
        
         ((<read__1038@173:1> = 1) && ((<<read__1038@173:2>@176:0> = <read__1038@173:1>) && (not <read__1038@173:0>)))
        |- P[<<read__1038@173:2>@176:0>](<read__1038@173:0>:bool,<read__1038@173:1>:int,
                                         <<read__1038@173:2>@176:0>:int)
        
        P[<f_1046@152:2>](<read__1038@173:0>:bool,<f_f_1578@171:3>:bool,<read__1038@173:1>:int),
        (1 <> <read__1038@173:1>) |- bot
        
        P[<f_1046@152:2>](<f_f_1577@159:1>:bool,<close__1043@161:0>:bool,<f_f_1577@159:0>:int)|- P[<close__1043@161:1>](
        <close__1043@161:0>:bool,<close__1043@161:1>:int)
        
        P[<f_1046@152:2>](<close__1043@154:0>:bool,<f_1046@152:1>:bool,<close__1043@154:1>:int)|- P[<close__1043@154:1>](
        <close__1043@154:0>:bool,<close__1043@154:1>:int)
        
         ((<f_1046@152:2> = 1) && ((not <f_1046@152:0>) && <f_1046@152:1>))
        |- P[<f_1046@152:2>](<f_1046@152:0>:bool,<f_1046@152:1>:bool,
                             <f_1046@152:2>:int)
      lower bounds:
        P[<<read__1038@173:2>@176:0>](<read__1038@173:0>:bool,<read__1038@173:1>:int,<<read__1038@173:2>@176:0>:int) =
        ((<read__1038@173:1> = 1) && ((<<read__1038@173:2>@176:0> = <read__1038@173:1>) && (not <read__1038@173:0>)))
        P[<f_1046@152:2>](<f_1046@152:0>:bool,<f_1046@152:1>:bool,<f_1046@152:2>:int) =
        ((<f_1046@152:2> = 1) && ((not <f_1046@152:0>) && <f_1046@152:1>))
        P[<fail_1589@189:0>](var504:bool) = false
        P[<close__1043@161:1>](<close__1043@161:0>:bool,<close__1043@161:1>:int) = <close__1043@161:0>
        P[<close__1043@154:1>](<close__1043@154:0>:bool,<close__1043@154:1>:int) =
        ((<close__1043@154:1> = 1) && (not <close__1043@154:0>))
      upper bounds:
        P[<close__1043@161:1>](var511:bool,var512:int) = true
        P[<close__1043@154:1>](var507:bool,var508:int) = true
      begin GenHcSolver.classify_pids(91876)[4]
        output:
          [<close__1043@154:1>;<close__1043@161:1>]
      end GenHcSolver.classify_pids(91876)[4] (0.000000 sec.)
      begin ApronInterface.convex_hull_interpolate(91887)[4]
        lb:(((<close__1043@154:1> = 1) && (not <close__1043@154:0>)) || <close__1043@154:0>)
        nub:false
        lb':(((<close__1043@154:1> = 1) && (not <close__1043@154:0>)) || <close__1043@154:0>)
        nub':false
        begin InterpProver.interpolate(91888)[5]
          begin InterpProver.interpolate_fresh(91889)[6]
            begin InterpProver.interpolate_log(91890)[7]
              input1: (((<close__1043@154:1> = 1) && (not <close__1043@154:0>)) || <close__1043@154:0>)
              input2: false
              begin InterpProver.interpolate_check(91891)[8]
                begin InterpProver.interpolate_simplify(91892)[9]
                  begin InterpProver.interpolate_quick(91919)[10]
                    
                  end InterpProver.interpolate_quick(91919)[10] (0.000000 sec.)
                  
                end InterpProver.interpolate_simplify(91892)[9] (0.000000 sec.)
                
              end InterpProver.interpolate_check(91891)[8] (0.000000 sec.)
              output: true
            end InterpProver.interpolate_log(91890)[7] (0.000000 sec.)
            
          end InterpProver.interpolate_fresh(91889)[6] (0.000000 sec.)
          
        end InterpProver.interpolate(91888)[5] (0.000000 sec.)
        output:
          P[<close__1043@154:1>](<close__1043@154:0>:bool,<close__1043@154:1>:int) = true
          P[<close__1043@161:1>](<close__1043@154:0>:bool,<close__1043@154:1>:int) = true
      end ApronInterface.convex_hull_interpolate(91887)[4] (0.000000 sec.)
      Horn clauses:
        P[<fail_1589@189:0>](<fail_1589@189:0>:bool)|- bot
        
        P[<f_1046@152:2>](<f_f_1579@178:1>:bool,<read__1038@180:0>:bool,<f_f_1579@178:0>:int),
        P[<<read__1038@173:2>@176:0>](<f_f_1579@178:1>:bool,<f_f_1579@178:0>:int,<read__1038@180:1>:int),
        (1 <> <read__1038@180:1>) |- bot
        
         ((<read__1038@173:1> = 1) && ((<<read__1038@173:2>@176:0> = <read__1038@173:1>) && (not <read__1038@173:0>)))
        |- P[<<read__1038@173:2>@176:0>](<read__1038@173:0>:bool,<read__1038@173:1>:int,
                                         <<read__1038@173:2>@176:0>:int)
        
        P[<f_1046@152:2>](<read__1038@173:0>:bool,<f_f_1578@171:3>:bool,<read__1038@173:1>:int),
        (1 <> <read__1038@173:1>) |- bot
        
         ((<f_1046@152:2> = 1) && ((not <f_1046@152:0>) && <f_1046@152:1>))
        |- P[<f_1046@152:2>](<f_1046@152:0>:bool,<f_1046@152:1>:bool,
                             <f_1046@152:2>:int)
      lower bounds:
        P[<<read__1038@173:2>@176:0>](<read__1038@173:0>:bool,<read__1038@173:1>:int,<<read__1038@173:2>@176:0>:int) =
        ((<read__1038@173:1> = 1) && ((<<read__1038@173:2>@176:0> = <read__1038@173:1>) && (not <read__1038@173:0>)))
        P[<f_1046@152:2>](<f_1046@152:0>:bool,<f_1046@152:1>:bool,<f_1046@152:2>:int) =
        ((<f_1046@152:2> = 1) && ((not <f_1046@152:0>) && <f_1046@152:1>))
        P[<fail_1589@189:0>](var516:bool) = false
      upper bounds:
        P[<fail_1589@189:0>](var519:bool) = true
      begin GenHcSolver.classify_pids(94802)[4]
        output:
          [<fail_1589@189:0>]
      end GenHcSolver.classify_pids(94802)[4] (0.000000 sec.)
      lb:false
      nub:false
      begin ApronInterface.convex_hull_interpolate(94805)[4]
        lb:false
        nub:false
        lb':false
        nub':false
        begin InterpProver.interpolate(94806)[5]
          begin InterpProver.interpolate_fresh(94807)[6]
            begin InterpProver.interpolate_log(94808)[7]
              input1: false
              input2: false
              begin InterpProver.interpolate_check(94809)[8]
                begin InterpProver.interpolate_simplify(94810)[9]
                  begin InterpProver.interpolate_quick(94823)[10]
                    
                  end InterpProver.interpolate_quick(94823)[10] (0.000000 sec.)
                  begin minimizing # of disjunctions(94827)[10]
                    input: false
                    output: false
                  end minimizing # of disjunctions(94827)[10] (0.000000 sec.)
                  
                end InterpProver.interpolate_simplify(94810)[9] (0.000000 sec.)
                
              end InterpProver.interpolate_check(94809)[8] (0.000000 sec.)
              output: false
            end InterpProver.interpolate_log(94808)[7] (0.000000 sec.)
            
          end InterpProver.interpolate_fresh(94807)[6] (0.000000 sec.)
          
        end InterpProver.interpolate(94806)[5] (0.000000 sec.)
        output:
          P[<fail_1589@189:0>](var516:bool) = false
      end ApronInterface.convex_hull_interpolate(94805)[4] (0.000000 sec.)
      Horn clauses:
        P[<f_1046@152:2>](<f_f_1579@178:1>:bool,<read__1038@180:0>:bool,<f_f_1579@178:0>:int),
        P[<<read__1038@173:2>@176:0>](<f_f_1579@178:1>:bool,<f_f_1579@178:0>:int,<read__1038@180:1>:int),
        (1 <> <read__1038@180:1>) |- bot
        
         ((<read__1038@173:1> = 1) && ((<<read__1038@173:2>@176:0> = <read__1038@173:1>) && (not <read__1038@173:0>)))
        |- P[<<read__1038@173:2>@176:0>](<read__1038@173:0>:bool,<read__1038@173:1>:int,
                                         <<read__1038@173:2>@176:0>:int)
        
        P[<f_1046@152:2>](<read__1038@173:0>:bool,<f_f_1578@171:3>:bool,<read__1038@173:1>:int),
        (1 <> <read__1038@173:1>) |- bot
        
         ((<f_1046@152:2> = 1) && ((not <f_1046@152:0>) && <f_1046@152:1>))
        |- P[<f_1046@152:2>](<f_1046@152:0>:bool,<f_1046@152:1>:bool,
                             <f_1046@152:2>:int)
      lower bounds:
        P[<<read__1038@173:2>@176:0>](<read__1038@173:0>:bool,<read__1038@173:1>:int,<<read__1038@173:2>@176:0>:int) =
        ((<read__1038@173:1> = 1) && ((<<read__1038@173:2>@176:0> = <read__1038@173:1>) && (not <read__1038@173:0>)))
        P[<f_1046@152:2>](<f_1046@152:0>:bool,<f_1046@152:1>:bool,<f_1046@152:2>:int) =
        ((<f_1046@152:2> = 1) && ((not <f_1046@152:0>) && <f_1046@152:1>))
      upper bounds:
        P[<<read__1038@173:2>@176:0>](var520:bool,var521:int,var522:int) = ((var521 <> 1) || ((1 = var522) || var520))
      begin GenHcSolver.classify_pids(96789)[4]
        output:
          [<<read__1038@173:2>@176:0>]
      end GenHcSolver.classify_pids(96789)[4] (0.000000 sec.)
      lb:((<read__1038@173:1> = 1) && ((<<read__1038@173:2>@176:0> = <read__1038@173:1>) && (not <read__1038@173:0>)))
      nub:(not ((<read__1038@173:1> <> 1) || ((1 = <<read__1038@173:2>@176:0>) || <read__1038@173:0>)))
      begin ApronInterface.convex_hull_interpolate(96792)[4]
        lb:((<read__1038@173:1> = 1) && ((<<read__1038@173:2>@176:0> = <read__1038@173:1>) && (not <read__1038@173:0>)))
        nub:(not ((<read__1038@173:1> <> 1) || ((1 = <<read__1038@173:2>@176:0>) || <read__1038@173:0>)))
        lb':((<read__1038@173:1> = 1) &&
             ((<<read__1038@173:2>@176:0> = <read__1038@173:1>) && (not <read__1038@173:0>)))
        nub':(not ((<read__1038@173:1> <> 1) || ((1 = <<read__1038@173:2>@176:0>) || <read__1038@173:0>)))
        begin InterpProver.interpolate(96793)[5]
          begin InterpProver.interpolate_fresh(96794)[6]
            begin InterpProver.interpolate_log(96795)[7]
              input1: ((<read__1038@173:1> = 1) &&
                       ((<<read__1038@173:2>@176:0> = <read__1038@173:1>) && (not <read__1038@173:0>)))
              input2: (not ((<read__1038@173:1> <> 1) || ((1 = <<read__1038@173:2>@176:0>) || <read__1038@173:0>)))
              begin InterpProver.interpolate_check(96796)[8]
                begin InterpProver.interpolate_simplify(96797)[9]
                  begin InterpProver.interpolate_quick(96890)[10]
                    begin CsisatInterface.interpolate_csisat_wrap(96899)[11]
                      begin CsisatInterface.interpolate_csisat_post_process(96900)[12]
                        begin CsisatInterface.interpolate_csisat_log(96901)[13]
                          input1: (not v_sep_read__1038_sep_173_sep_0 = true() & 1 = v_sep_read__1038_sep_173_sep_1 & v_sep_read__1038_sep_173_sep_1 = v_sep_read__1038_sep_173_sep_2_sep_176_sep_0)
                          input2: (not 1 = v_sep_read__1038_sep_173_sep_2_sep_176_sep_0 & not v_sep_read__1038_sep_173_sep_0 = true() & 1 = v_sep_read__1038_sep_173_sep_1)
                          begin CsisatInterface.interpolate_csisat_raw(96902)[14]
                            
                          end CsisatInterface.interpolate_csisat_raw(96902)[14] (0.000000 sec.)
                          output: 1 = v_sep_read__1038_sep_173_sep_2_sep_176_sep_0
                          
                        end CsisatInterface.interpolate_csisat_log(96901)[13] (0.000000 sec.)
                        after simplification: 1 = v_sep_read__1038_sep_173_sep_2_sep_176_sep_0
                        after dnf conversion: ((1 = v_sep_read__1038_sep_173_sep_2_sep_176_sep_0))
                        
                      end CsisatInterface.interpolate_csisat_post_process(96900)[12] (0.000000 sec.)
                      
                    end CsisatInterface.interpolate_csisat_wrap(96899)[11] (0.000000 sec.)
                    
                  end InterpProver.interpolate_quick(96890)[10] (0.000000 sec.)
                  
                end InterpProver.interpolate_simplify(96797)[9] (0.001000 sec.)
                
              end InterpProver.interpolate_check(96796)[8] (0.001000 sec.)
              output: (1 = <<read__1038@173:2>@176:0>)
            end InterpProver.interpolate_log(96795)[7] (0.001000 sec.)
            
          end InterpProver.interpolate_fresh(96794)[6] (0.001000 sec.)
          
        end InterpProver.interpolate(96793)[5] (0.001000 sec.)
        output:
          P[<<read__1038@173:2>@176:0>](<read__1038@173:0>:bool,<read__1038@173:1>:int,<<read__1038@173:2>@176:0>:int) =
          (1 = <<read__1038@173:2>@176:0>)
      end ApronInterface.convex_hull_interpolate(96792)[4] (0.001000 sec.)
      Horn clauses:
        P[<f_1046@152:2>](<read__1038@173:0>:bool,<f_f_1578@171:3>:bool,<read__1038@173:1>:int),
        (1 <> <read__1038@173:1>) |- bot
        
         ((<f_1046@152:2> = 1) && ((not <f_1046@152:0>) && <f_1046@152:1>))
        |- P[<f_1046@152:2>](<f_1046@152:0>:bool,<f_1046@152:1>:bool,
                             <f_1046@152:2>:int)
      lower bounds:
        P[<f_1046@152:2>](<f_1046@152:0>:bool,<f_1046@152:1>:bool,<f_1046@152:2>:int) =
        ((<f_1046@152:2> = 1) && ((not <f_1046@152:0>) && <f_1046@152:1>))
      upper bounds:
        P[<f_1046@152:2>](var523:bool,var524:bool,var525:int) = (1 = var525)
      begin GenHcSolver.classify_pids(97910)[4]
        output:
          [<f_1046@152:2>]
      end GenHcSolver.classify_pids(97910)[4] (0.000000 sec.)
      lb:((<f_1046@152:2> = 1) && ((not <f_1046@152:0>) && <f_1046@152:1>))
      nub:(not (1 = <f_1046@152:2>))
      begin ApronInterface.convex_hull_interpolate(97913)[4]
        lb:((<f_1046@152:2> = 1) && ((not <f_1046@152:0>) && <f_1046@152:1>))
        nub:(not (1 = <f_1046@152:2>))
        lb':((<f_1046@152:2> = 1) && ((not <f_1046@152:0>) && <f_1046@152:1>))
        nub':(not (1 = <f_1046@152:2>))
        begin InterpProver.interpolate(97914)[5]
          begin InterpProver.interpolate_fresh(97915)[6]
            begin InterpProver.interpolate_log(97916)[7]
              input1: ((<f_1046@152:2> = 1) && ((not <f_1046@152:0>) && <f_1046@152:1>))
              input2: (not (1 = <f_1046@152:2>))
              begin InterpProver.interpolate_check(97917)[8]
                begin InterpProver.interpolate_simplify(97918)[9]
                  begin InterpProver.interpolate_quick(97961)[10]
                    begin CsisatInterface.interpolate_csisat_wrap(97970)[11]
                      begin CsisatInterface.interpolate_csisat_post_process(97971)[12]
                        begin CsisatInterface.interpolate_csisat_log(97972)[13]
                          input1: 1 = v_sep_f_1046_sep_152_sep_2
                          input2: not 1 = v_sep_f_1046_sep_152_sep_2
                          begin CsisatInterface.interpolate_csisat_raw(97973)[14]
                            
                          end CsisatInterface.interpolate_csisat_raw(97973)[14] (0.000000 sec.)
                          output: 1 = v_sep_f_1046_sep_152_sep_2
                          
                        end CsisatInterface.interpolate_csisat_log(97972)[13] (0.000000 sec.)
                        after simplification: 1 = v_sep_f_1046_sep_152_sep_2
                        after dnf conversion: ((1 = v_sep_f_1046_sep_152_sep_2))
                        
                      end CsisatInterface.interpolate_csisat_post_process(97971)[12] (0.000000 sec.)
                      
                    end CsisatInterface.interpolate_csisat_wrap(97970)[11] (0.000000 sec.)
                    
                  end InterpProver.interpolate_quick(97961)[10] (0.000000 sec.)
                  
                end InterpProver.interpolate_simplify(97918)[9] (0.001000 sec.)
                
              end InterpProver.interpolate_check(97917)[8] (0.001000 sec.)
              output: (1 = <f_1046@152:2>)
            end InterpProver.interpolate_log(97916)[7] (0.001000 sec.)
            
          end InterpProver.interpolate_fresh(97915)[6] (0.001000 sec.)
          
        end InterpProver.interpolate(97914)[5] (0.001000 sec.)
        output:
          P[<f_1046@152:2>](<f_1046@152:0>:bool,<f_1046@152:1>:bool,<f_1046@152:2>:int) = (1 = <f_1046@152:2>)
      end ApronInterface.convex_hull_interpolate(97913)[4] (0.001000 sec.)
      begin HcSolver.check_validity(98145)[4]
        input:
          P[<fail_1589@189:0>](<fail_1589@189:0>:bool)|- bot
          
          P[<read__1038@180:1>](true:bool,<br_readit_1585@186:1>:int),
          ((<br_readit_1585@186:1> <> 1) && ((<br_readit_1585@186:1> <> 3) && <fail_1589@189:0>))
          |- P[<fail_1589@189:0>](<fail_1589@189:0>:bool)
          
          P[<f_1046@152:2>](<f_f_1579@178:1>:bool,<read__1038@180:0>:bool,<f_f_1579@178:0>:int),
          P[<<close__1043@154:2>@157:0>](<f_f_1579@178:1>:bool,<f_f_1579@178:0>:int,<f_f_1579@178:3>:int),
          P[<<close__1043@161:2>@169:0>](<read__1038@180:0>:bool,<f_f_1579@178:3>:int,<f_f_1579@178:2>:int),
          P[<<read__1038@173:2>@176:0>](<f_f_1579@178:1>:bool,<f_f_1579@178:0>:int,<read__1038@180:1>:int)|- P[<read__1038@180:1>](
          <read__1038@180:0>:bool,<read__1038@180:1>:int)
          
          P[<read__1038@173:1>](<read__1038@173:0>:bool,<read__1038@173:1>:int),
          ((<<read__1038@173:2>@176:0> = <read__1038@173:1>) && (not <read__1038@173:0>))
          |- P[<<read__1038@173:2>@176:0>](<read__1038@173:0>:bool,<read__1038@173:1>:int,
                                           <<read__1038@173:2>@176:0>:int)
          
          P[<f_1046@152:2>](<read__1038@173:0>:bool,<f_f_1578@171:3>:bool,<read__1038@173:1>:int),
          P[<<close__1043@154:2>@157:0>](<read__1038@173:0>:bool,<read__1038@173:1>:int,<f_f_1578@171:2>:int),
          P[<<close__1043@161:2>@169:0>](<f_f_1578@171:3>:bool,<f_f_1578@171:2>:int,<f_f_1578@171:5>:int)|- P[<read__1038@173:1>](
          <read__1038@173:0>:bool,<read__1038@173:1>:int)
          
          P[<close__1043@161:1>](<close__1043@161:0>:bool,<close__1043@161:1>:int),
          ((<close__1043@161:1> = 1) && ((<<close__1043@161:2>@169:0> = 2) && <close__1043@161:0>))
          |- P[<<close__1043@161:2>@169:0>](<close__1043@161:0>:bool,
                                            <close__1043@161:1>:int,<<close__1043@161:2>@169:0>:int)
          
          P[<f_1046@152:2>](<f_f_1577@159:1>:bool,<close__1043@161:0>:bool,<f_f_1577@159:0>:int),
          P[<<close__1043@154:2>@157:0>](<f_f_1577@159:1>:bool,<f_f_1577@159:0>:int,<close__1043@161:1>:int)|- P[<close__1043@161:1>](
          <close__1043@161:0>:bool,<close__1043@161:1>:int)
          
          P[<close__1043@154:1>](<close__1043@154:0>:bool,<close__1043@154:1>:int),
          ((<<close__1043@154:2>@157:0> = <close__1043@154:1>) && (not <close__1043@154:0>))
          |- P[<<close__1043@154:2>@157:0>](<close__1043@154:0>:bool,
                                            <close__1043@154:1>:int,<<close__1043@154:2>@157:0>:int)
          
          P[<f_1046@152:2>](<close__1043@154:0>:bool,<f_1046@152:1>:bool,<close__1043@154:1>:int)|- P[<close__1043@154:1>](
          <close__1043@154:0>:bool,<close__1043@154:1>:int)
          
           ((<f_1046@152:2> = 1) && ((not <f_1046@152:0>) && <f_1046@152:1>))
          |- P[<f_1046@152:2>](<f_1046@152:0>:bool,<f_1046@152:1>:bool,
                               <f_1046@152:2>:int)
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        
      end HcSolver.check_validity(98145)[4] (0.004999 sec.)
      solution:
        P[<fail_1589@189:0>](var516:bool) = false
        P[<read__1038@180:1>](<read__1038@173:0>:bool,<read__1038@173:1>:int) = (1 = <read__1038@173:1>)
        P[<<read__1038@173:2>@176:0>](<read__1038@173:0>:bool,<read__1038@173:1>:int,<<read__1038@173:2>@176:0>:int) =
        (1 = <<read__1038@173:2>@176:0>)
        P[<read__1038@173:1>](<read__1038@173:0>:bool,<read__1038@173:1>:int) = (1 = <read__1038@173:1>)
        P[<<close__1043@161:2>@169:0>](<close__1043@154:0>:bool,<close__1043@154:1>:int,<<close__1043@154:2>@157:0>:int) =
        true
        P[<close__1043@161:1>](<close__1043@154:0>:bool,<close__1043@154:1>:int) = true
        P[<<close__1043@154:2>@157:0>](<close__1043@154:0>:bool,<close__1043@154:1>:int,<<close__1043@154:2>@157:0>:int) =
        true
        P[<close__1043@154:1>](<close__1043@154:0>:bool,<close__1043@154:1>:int) = true
        P[<f_1046@152:2>](<f_1046@152:0>:bool,<f_1046@152:1>:bool,<f_1046@152:2>:int) = (1 = <f_1046@152:2>)
    end GenHcSolver.solve(70993)[3] (0.120982 sec.)
    begin GenHcSolver.solve(98989)[3]
      Horn clauses:
        P[<fail_1589@189:0>](<fail_1589@189:0>:bool)|- bot
        
        P[<read__1038@180:1>](true:bool,<br_readit_1585@186:1>:int),
        ((<br_readit_1585@186:1> <> 1) && ((<br_readit_1585@186:1> <> 3) && <fail_1589@189:0>))
        |- P[<fail_1589@189:0>](<fail_1589@189:0>:bool)
        
        P[<f_1046@152:2>](<f_f_1579@178:1>:bool,<read__1038@180:0>:bool,<f_f_1579@178:0>:int),
        P[<<close__1043@154:2>@157:0>](<f_f_1579@178:1>:bool,<f_f_1579@178:0>:int,<f_f_1579@178:3>:int),
        P[<<close__1043@161:2>@169:0>](<read__1038@180:0>:bool,<f_f_1579@178:3>:int,<f_f_1579@178:2>:int),
        P[<<read__1038@173:2>@176:0>](<f_f_1579@178:1>:bool,<f_f_1579@178:0>:int,<read__1038@180:1>:int)|- P[<read__1038@180:1>](
        <read__1038@180:0>:bool,<read__1038@180:1>:int)
        
        P[<read__1038@173:1>](<read__1038@173:0>:bool,<read__1038@173:1>:int),
        ((<<read__1038@173:2>@176:0> = <read__1038@173:1>) && (not <read__1038@173:0>))
        |- P[<<read__1038@173:2>@176:0>](<read__1038@173:0>:bool,<read__1038@173:1>:int,
                                         <<read__1038@173:2>@176:0>:int)
        
        P[<f_1046@152:2>](<read__1038@173:0>:bool,<f_f_1578@171:3>:bool,<read__1038@173:1>:int),
        P[<<close__1043@154:2>@157:0>](<read__1038@173:0>:bool,<read__1038@173:1>:int,<f_f_1578@171:2>:int),
        P[<<close__1043@161:2>@169:0>](<f_f_1578@171:3>:bool,<f_f_1578@171:2>:int,<f_f_1578@171:5>:int)|- P[<read__1038@173:1>](
        <read__1038@173:0>:bool,<read__1038@173:1>:int)
        
        P[<close__1043@161:1>](<close__1043@161:0>:bool,<close__1043@161:1>:int),
        ((<close__1043@161:1> = 1) && ((<<close__1043@161:2>@169:0> = 2) && <close__1043@161:0>))
        |- P[<<close__1043@161:2>@169:0>](<close__1043@161:0>:bool,<close__1043@161:1>:int,
                                          <<close__1043@161:2>@169:0>:int)
        
        P[<f_1046@152:2>](<f_f_1577@159:1>:bool,<close__1043@161:0>:bool,<f_f_1577@159:0>:int),
        P[<<close__1043@154:2>@157:0>](<f_f_1577@159:1>:bool,<f_f_1577@159:0>:int,<close__1043@161:1>:int)|- P[<close__1043@161:1>](
        <close__1043@161:0>:bool,<close__1043@161:1>:int)
        
        P[<close__1043@154:1>](<close__1043@154:0>:bool,<close__1043@154:1>:int),
        ((<<close__1043@154:2>@157:0> = <close__1043@154:1>) && (not <close__1043@154:0>))
        |- P[<<close__1043@154:2>@157:0>](<close__1043@154:0>:bool,<close__1043@154:1>:int,
                                          <<close__1043@154:2>@157:0>:int)
        
        P[<f_1046@152:2>](<close__1043@154:0>:bool,<f_1046@152:1>:bool,<close__1043@154:1>:int)|- P[<close__1043@154:1>](
        <close__1043@154:0>:bool,<close__1043@154:1>:int)
        
         ((<f_1046@152:2> = 1) && ((not <f_1046@152:0>) && <f_1046@152:1>))
        |- P[<f_1046@152:2>](<f_1046@152:0>:bool,<f_1046@152:1>:bool,
                             <f_1046@152:2>:int)
      lower bounds:
        P[<f_1046@152:2>](<f_1046@152:0>:bool,<f_1046@152:1>:bool,<f_1046@152:2>:int) =
        ((<f_1046@152:2> = 1) && ((not <f_1046@152:0>) && <f_1046@152:1>))
        P[<close__1043@154:1>](<close__1043@154:0>:bool,<close__1043@154:1>:int) =
        ((<close__1043@154:1> = 1) && (not <close__1043@154:0>))
        P[<<close__1043@154:2>@157:0>](<close__1043@154:0>:bool,<close__1043@154:1>:int,<<close__1043@154:2>@157:0>:int) =
        ((<close__1043@154:1> = 1) &&
         ((<<close__1043@154:2>@157:0> = <close__1043@154:1>) && (not <close__1043@154:0>)))
        P[<close__1043@161:1>](<close__1043@161:0>:bool,<close__1043@161:1>:int) =
        ((<close__1043@161:1> = 1) && <close__1043@161:0>)
        P[<<close__1043@161:2>@169:0>](<close__1043@161:0>:bool,<close__1043@161:1>:int,<<close__1043@161:2>@169:0>:int) =
        ((<<close__1043@161:2>@169:0> = 2) && ((<close__1043@161:1> = 1) && <close__1043@161:0>))
        P[<read__1038@173:1>](<read__1038@173:0>:bool,<read__1038@173:1>:int) =
        ((<read__1038@173:1> = 1) && (not <read__1038@173:0>))
        P[<<read__1038@173:2>@176:0>](<read__1038@173:0>:bool,<read__1038@173:1>:int,<<read__1038@173:2>@176:0>:int) =
        ((<read__1038@173:1> = 1) && ((<<read__1038@173:2>@176:0> = <read__1038@173:1>) && (not <read__1038@173:0>)))
        P[<read__1038@180:1>](<read__1038@180:0>:bool,<read__1038@180:1>:int) =
        ((<read__1038@180:1> = 1) && <read__1038@180:0>)
        P[<fail_1589@189:0>](<fail_1589@189:0>:bool) = false
      upper bounds:
        P[<read__1038@180:1>](var530:bool,var531:int) = ((var531 = 1) || ((var531 = 3) || (not var530)))
        P[<read__1038@173:1>](var527:bool,var528:int) = true
      begin GenHcSolver.classify_pids(106080)[4]
        output:
          [<read__1038@173:1>;<read__1038@180:1>]
      end GenHcSolver.classify_pids(106080)[4] (0.000000 sec.)
      begin ApronInterface.convex_hull_interpolate(106108)[4]
        lb:(((<read__1038@173:1> = 1) && (not <read__1038@173:0>)) || ((<read__1038@173:1> = 1) && <read__1038@173:0>))
        nub:(not ((<read__1038@173:1> = 1) || ((<read__1038@173:1> = 3) || (not <read__1038@173:0>))))
        begin ExtFormula.Formula.case_analysis_boolean(106130)[5]
          ts: (<read__1038@173:1> = 1)
          
        end ExtFormula.Formula.case_analysis_boolean(106130)[5] (0.000000 sec.)
        begin ExtFormula.Formula.case_analysis_boolean(106160)[5]
          ts: ((<read__1038@173:1> <> 1) && ((<read__1038@173:1> <> 3) && <read__1038@173:0>))
          
        end ExtFormula.Formula.case_analysis_boolean(106160)[5] (0.000000 sec.)
        lb':((-1 + <read__1038@173:1>) = 0)
        nub':((<read__1038@173:0> = true) || ((-1 >= 0) && (<read__1038@173:0> = false)))
        begin InterpProver.interpolate(106201)[5]
          begin InterpProver.interpolate_fresh(106202)[6]
            begin InterpProver.interpolate_log(106203)[7]
              input1: ((-1 + <read__1038@173:1>) = 0)
              input2: ((<read__1038@173:0> = true) || ((-1 >= 0) && (<read__1038@173:0> = false)))
              begin InterpProver.interpolate_check(106204)[8]
                begin InterpProver.interpolate_simplify(106205)[9]
                  begin InterpProver.interpolate_quick(106239)[10]
                    begin CsisatInterface.interpolate_csisat_wrap(106242)[11]
                      begin CsisatInterface.interpolate_csisat_post_process(106243)[12]
                        begin CsisatInterface.interpolate_csisat_log(106244)[13]
                          input1: true
                          input2: true
                          begin CsisatInterface.interpolate_csisat_raw(106245)[14]
                            
                          end CsisatInterface.interpolate_csisat_raw(106245)[14] (0.000000 sec.)
                          
                        end CsisatInterface.interpolate_csisat_log(106244)[13] (0.000000 sec.)
                        
                      end CsisatInterface.interpolate_csisat_post_process(106243)[12] (0.000000 sec.)
                      
                    end CsisatInterface.interpolate_csisat_wrap(106242)[11] (0.000000 sec.)
                    
                  end InterpProver.interpolate_quick(106239)[10] (0.000000 sec.)
                  
                end InterpProver.interpolate_simplify(106205)[9] (0.000000 sec.)
                
              end InterpProver.interpolate_check(106204)[8] (0.000000 sec.)
              there is no interpolant
            end InterpProver.interpolate_log(106203)[7] (0.000000 sec.)
            
          end InterpProver.interpolate_fresh(106202)[6] (0.000000 sec.)
          
        end InterpProver.interpolate(106201)[5] (0.000000 sec.)
        begin InterpProver.interpolate(106262)[5]
          begin InterpProver.interpolate_fresh(106263)[6]
            begin InterpProver.interpolate_log(106264)[7]
              input1: ((-1 + <read__1038@173:1>) = 0)
              input2: (not ((<read__1038@173:1> = 1) || ((<read__1038@173:1> = 3) || (not <read__1038@173:0>))))
              begin InterpProver.interpolate_check(106265)[8]
                begin InterpProver.interpolate_simplify(106266)[9]
                  begin InterpProver.interpolate_quick(106365)[10]
                    begin CsisatInterface.interpolate_csisat_wrap(106374)[11]
                      begin CsisatInterface.interpolate_csisat_post_process(106375)[12]
                        begin CsisatInterface.interpolate_csisat_log(106376)[13]
                          input1: 1 = v_sep_read__1038_sep_173_sep_1
                          input2: (not 1 = v_sep_read__1038_sep_173_sep_1 & not 3 = v_sep_read__1038_sep_173_sep_1)
                          begin CsisatInterface.interpolate_csisat_raw(106377)[14]
                            
                          end CsisatInterface.interpolate_csisat_raw(106377)[14] (0.000000 sec.)
                          output: 1 = v_sep_read__1038_sep_173_sep_1
                          
                        end CsisatInterface.interpolate_csisat_log(106376)[13] (0.000000 sec.)
                        after simplification: 1 = v_sep_read__1038_sep_173_sep_1
                        after dnf conversion: ((1 = v_sep_read__1038_sep_173_sep_1))
                        
                      end CsisatInterface.interpolate_csisat_post_process(106375)[12] (0.000000 sec.)
                      
                    end CsisatInterface.interpolate_csisat_wrap(106374)[11] (0.000000 sec.)
                    
                  end InterpProver.interpolate_quick(106365)[10] (0.000000 sec.)
                  
                end InterpProver.interpolate_simplify(106266)[9] (0.000000 sec.)
                
              end InterpProver.interpolate_check(106265)[8] (0.001000 sec.)
              output: (1 = <read__1038@173:1>)
            end InterpProver.interpolate_log(106264)[7] (0.001000 sec.)
            
          end InterpProver.interpolate_fresh(106263)[6] (0.001000 sec.)
          
        end InterpProver.interpolate(106262)[5] (0.001000 sec.)
        begin InterpProver.interpolate(106409)[5]
          begin InterpProver.interpolate_fresh(106410)[6]
            begin InterpProver.interpolate_log(106411)[7]
              input1: ((-1 + <read__1038@173:1>) = 0)
              input2: false
              begin InterpProver.interpolate_check(106412)[8]
                begin InterpProver.interpolate_simplify(106413)[9]
                  begin InterpProver.interpolate_quick(106434)[10]
                    
                  end InterpProver.interpolate_quick(106434)[10] (0.000000 sec.)
                  
                end InterpProver.interpolate_simplify(106413)[9] (0.000000 sec.)
                
              end InterpProver.interpolate_check(106412)[8] (0.000000 sec.)
              output: true
            end InterpProver.interpolate_log(106411)[7] (0.000000 sec.)
            
          end InterpProver.interpolate_fresh(106410)[6] (0.000000 sec.)
          
        end InterpProver.interpolate(106409)[5] (0.000000 sec.)
        output:
          P[<read__1038@173:1>](<read__1038@173:0>:bool,<read__1038@173:1>:int) = true
          P[<read__1038@180:1>](<read__1038@173:0>:bool,<read__1038@173:1>:int) = (1 = <read__1038@173:1>)
      end ApronInterface.convex_hull_interpolate(106108)[4] (0.002000 sec.)
      Horn clauses:
        P[<fail_1589@189:0>](<fail_1589@189:0>:bool)|- bot
        
        P[<f_1046@152:2>](<f_f_1579@178:1>:bool,<read__1038@180:0>:bool,<f_f_1579@178:0>:int),
        P[<<close__1043@154:2>@157:0>](<f_f_1579@178:1>:bool,<f_f_1579@178:0>:int,<f_f_1579@178:3>:int),
        P[<<close__1043@161:2>@169:0>](<read__1038@180:0>:bool,<f_f_1579@178:3>:int,<f_f_1579@178:2>:int),
        P[<<read__1038@173:2>@176:0>](<f_f_1579@178:1>:bool,<f_f_1579@178:0>:int,<read__1038@180:1>:int),
        (1 <> <read__1038@180:1>) |- bot
        
         ((<<read__1038@173:2>@176:0> = <read__1038@173:1>) && (not <read__1038@173:0>))
        |- P[<<read__1038@173:2>@176:0>](<read__1038@173:0>:bool,<read__1038@173:1>:int,
                                         <<read__1038@173:2>@176:0>:int)
        
        P[<close__1043@161:1>](<close__1043@161:0>:bool,<close__1043@161:1>:int),
        ((<close__1043@161:1> = 1) && ((<<close__1043@161:2>@169:0> = 2) && <close__1043@161:0>))
        |- P[<<close__1043@161:2>@169:0>](<close__1043@161:0>:bool,<close__1043@161:1>:int,
                                          <<close__1043@161:2>@169:0>:int)
        
        P[<f_1046@152:2>](<f_f_1577@159:1>:bool,<close__1043@161:0>:bool,<f_f_1577@159:0>:int),
        P[<<close__1043@154:2>@157:0>](<f_f_1577@159:1>:bool,<f_f_1577@159:0>:int,<close__1043@161:1>:int)|- P[<close__1043@161:1>](
        <close__1043@161:0>:bool,<close__1043@161:1>:int)
        
        P[<close__1043@154:1>](<close__1043@154:0>:bool,<close__1043@154:1>:int),
        ((<<close__1043@154:2>@157:0> = <close__1043@154:1>) && (not <close__1043@154:0>))
        |- P[<<close__1043@154:2>@157:0>](<close__1043@154:0>:bool,<close__1043@154:1>:int,
                                          <<close__1043@154:2>@157:0>:int)
        
        P[<f_1046@152:2>](<close__1043@154:0>:bool,<f_1046@152:1>:bool,<close__1043@154:1>:int)|- P[<close__1043@154:1>](
        <close__1043@154:0>:bool,<close__1043@154:1>:int)
        
         ((<f_1046@152:2> = 1) && ((not <f_1046@152:0>) && <f_1046@152:1>))
        |- P[<f_1046@152:2>](<f_1046@152:0>:bool,<f_1046@152:1>:bool,
                             <f_1046@152:2>:int)
      lower bounds:
        P[<<read__1038@173:2>@176:0>](<read__1038@173:0>:bool,<read__1038@173:1>:int,<<read__1038@173:2>@176:0>:int) =
        ((<<read__1038@173:2>@176:0> = <read__1038@173:1>) && (not <read__1038@173:0>))
        P[<f_1046@152:2>](<f_1046@152:0>:bool,<f_1046@152:1>:bool,<f_1046@152:2>:int) =
        ((<f_1046@152:2> = 1) && ((not <f_1046@152:0>) && <f_1046@152:1>))
        P[<fail_1589@189:0>](var535:bool) = false
        P[<close__1043@154:1>](<close__1043@154:0>:bool,<close__1043@154:1>:int) =
        ((<close__1043@154:1> = 1) && (not <close__1043@154:0>))
        P[<<close__1043@154:2>@157:0>](<close__1043@154:0>:bool,<close__1043@154:1>:int,<<close__1043@154:2>@157:0>:int) =
        ((<close__1043@154:1> = 1) &&
         ((<<close__1043@154:2>@157:0> = <close__1043@154:1>) && (not <close__1043@154:0>)))
        P[<close__1043@161:1>](<close__1043@161:0>:bool,<close__1043@161:1>:int) =
        ((<close__1043@161:1> = 1) && <close__1043@161:0>)
        P[<<close__1043@161:2>@169:0>](<close__1043@161:0>:bool,<close__1043@161:1>:int,<<close__1043@161:2>@169:0>:int) =
        ((<<close__1043@161:2>@169:0> = 2) && ((<close__1043@161:1> = 1) && <close__1043@161:0>))
      upper bounds:
        P[<<close__1043@161:2>@169:0>](var543:bool,var544:int,var545:int) = true
        P[<<close__1043@154:2>@157:0>](var538:bool,var539:int,var540:int) = true
      begin GenHcSolver.classify_pids(113559)[4]
        output:
          [<<close__1043@154:2>@157:0>;<<close__1043@161:2>@169:0>]
      end GenHcSolver.classify_pids(113559)[4] (0.000000 sec.)
      begin ApronInterface.convex_hull_interpolate(113570)[4]
        lb:(((<close__1043@154:1> = 1) &&
             ((<<close__1043@154:2>@157:0> = <close__1043@154:1>) && (not <close__1043@154:0>))) ||
            ((<<close__1043@154:2>@157:0> = 2) && ((<close__1043@154:1> = 1) && <close__1043@154:0>)))
        nub:false
        begin ExtFormula.Formula.case_analysis_boolean(113629)[5]
          ts: ((<close__1043@154:1> = 1) &&
               (((<<close__1043@154:2>@157:0> = <close__1043@154:1>) && (not <close__1043@154:0>)) ||
                ((<<close__1043@154:2>@157:0> = 2) && <close__1043@154:0>)))
          
        end ExtFormula.Formula.case_analysis_boolean(113629)[5] (0.001000 sec.)
        begin ExtFormula.Formula.case_analysis_boolean(113691)[5]
          ts: false
          
        end ExtFormula.Formula.case_analysis_boolean(113691)[5] (0.000000 sec.)
        lb':(((((-2 + <<close__1043@154:2>@157:0>) = 0) && ((-1 + <close__1043@154:1>) = 0)) &&
              (<close__1043@154:0> = true)) ||
             ((((-1 + <<close__1043@154:2>@157:0>) = 0) && ((-1 + <close__1043@154:1>) = 0)) &&
              (<close__1043@154:0> = false)))
        nub':(-1 >= 0)
        begin InterpProver.interpolate(113694)[5]
          begin InterpProver.interpolate_fresh(113695)[6]
            begin InterpProver.interpolate_log(113696)[7]
              input1: (((((-2 + <<close__1043@154:2>@157:0>) = 0) && ((-1 + <close__1043@154:1>) = 0)) &&
                        (<close__1043@154:0> = true)) ||
                       ((((-1 + <<close__1043@154:2>@157:0>) = 0) && ((-1 + <close__1043@154:1>) = 0)) &&
                        (<close__1043@154:0> = false)))
              input2: (-1 >= 0)
              begin InterpProver.interpolate_check(113697)[8]
                begin InterpProver.interpolate_simplify(113698)[9]
                  begin InterpProver.interpolate_quick(113815)[10]
                    
                  end InterpProver.interpolate_quick(113815)[10] (0.000000 sec.)
                  
                end InterpProver.interpolate_simplify(113698)[9] (0.000000 sec.)
                
              end InterpProver.interpolate_check(113697)[8] (0.000000 sec.)
              output: true
            end InterpProver.interpolate_log(113696)[7] (0.000000 sec.)
            
          end InterpProver.interpolate_fresh(113695)[6] (0.000000 sec.)
          
        end InterpProver.interpolate(113694)[5] (0.000000 sec.)
        output:
          P[<<close__1043@154:2>@157:0>](<close__1043@154:0>:bool,<close__1043@154:1>:int,<<close__1043@154:2>@157:0>:int) =
          true
          P[<<close__1043@161:2>@169:0>](<close__1043@154:0>:bool,<close__1043@154:1>:int,<<close__1043@154:2>@157:0>:int) =
          true
      end ApronInterface.convex_hull_interpolate(113570)[4] (0.002000 sec.)
      Horn clauses:
        P[<fail_1589@189:0>](<fail_1589@189:0>:bool)|- bot
        
        P[<f_1046@152:2>](<f_f_1579@178:1>:bool,<read__1038@180:0>:bool,<f_f_1579@178:0>:int),
        P[<<read__1038@173:2>@176:0>](<f_f_1579@178:1>:bool,<f_f_1579@178:0>:int,<read__1038@180:1>:int),
        (1 <> <read__1038@180:1>) |- bot
        
         ((<<read__1038@173:2>@176:0> = <read__1038@173:1>) && (not <read__1038@173:0>))
        |- P[<<read__1038@173:2>@176:0>](<read__1038@173:0>:bool,<read__1038@173:1>:int,
                                         <<read__1038@173:2>@176:0>:int)
        
        P[<f_1046@152:2>](<f_f_1577@159:1>:bool,<close__1043@161:0>:bool,<f_f_1577@159:0>:int)|- P[<close__1043@161:1>](
        <close__1043@161:0>:bool,<close__1043@161:1>:int)
        
        P[<f_1046@152:2>](<close__1043@154:0>:bool,<f_1046@152:1>:bool,<close__1043@154:1>:int)|- P[<close__1043@154:1>](
        <close__1043@154:0>:bool,<close__1043@154:1>:int)
        
         ((<f_1046@152:2> = 1) && ((not <f_1046@152:0>) && <f_1046@152:1>))
        |- P[<f_1046@152:2>](<f_1046@152:0>:bool,<f_1046@152:1>:bool,
                             <f_1046@152:2>:int)
      lower bounds:
        P[<<read__1038@173:2>@176:0>](<read__1038@173:0>:bool,<read__1038@173:1>:int,<<read__1038@173:2>@176:0>:int) =
        ((<<read__1038@173:2>@176:0> = <read__1038@173:1>) && (not <read__1038@173:0>))
        P[<f_1046@152:2>](<f_1046@152:0>:bool,<f_1046@152:1>:bool,<f_1046@152:2>:int) =
        ((<f_1046@152:2> = 1) && ((not <f_1046@152:0>) && <f_1046@152:1>))
        P[<fail_1589@189:0>](var549:bool) = false
        P[<close__1043@161:1>](<close__1043@161:0>:bool,<close__1043@161:1>:int) = <close__1043@161:0>
        P[<close__1043@154:1>](<close__1043@154:0>:bool,<close__1043@154:1>:int) =
        ((<close__1043@154:1> = 1) && (not <close__1043@154:0>))
      upper bounds:
        P[<close__1043@161:1>](var556:bool,var557:int) = true
        P[<close__1043@154:1>](var552:bool,var553:int) = true
      begin GenHcSolver.classify_pids(118227)[4]
        output:
          [<close__1043@154:1>;<close__1043@161:1>]
      end GenHcSolver.classify_pids(118227)[4] (0.000000 sec.)
      begin ApronInterface.convex_hull_interpolate(118238)[4]
        lb:(((<close__1043@154:1> = 1) && (not <close__1043@154:0>)) || <close__1043@154:0>)
        nub:false
        begin ExtFormula.Formula.case_analysis_boolean(118248)[5]
          ts: (<close__1043@154:0> || ((<close__1043@154:1> = 1) && (not <close__1043@154:0>)))
          
        end ExtFormula.Formula.case_analysis_boolean(118248)[5] (0.000000 sec.)
        begin ExtFormula.Formula.case_analysis_boolean(118273)[5]
          ts: false
          
        end ExtFormula.Formula.case_analysis_boolean(118273)[5] (0.000000 sec.)
        lb':((<close__1043@154:0> = true) || (((-1 + <close__1043@154:1>) = 0) && (<close__1043@154:0> = false)))
        nub':(-1 >= 0)
        begin InterpProver.interpolate(118276)[5]
          begin InterpProver.interpolate_fresh(118277)[6]
            begin InterpProver.interpolate_log(118278)[7]
              input1: ((<close__1043@154:0> = true) ||
                       (((-1 + <close__1043@154:1>) = 0) && (<close__1043@154:0> = false)))
              input2: (-1 >= 0)
              begin InterpProver.interpolate_check(118279)[8]
                begin InterpProver.interpolate_simplify(118280)[9]
                  begin InterpProver.interpolate_quick(118313)[10]
                    
                  end InterpProver.interpolate_quick(118313)[10] (0.001000 sec.)
                  
                end InterpProver.interpolate_simplify(118280)[9] (0.001000 sec.)
                
              end InterpProver.interpolate_check(118279)[8] (0.001000 sec.)
              output: true
            end InterpProver.interpolate_log(118278)[7] (0.001000 sec.)
            
          end InterpProver.interpolate_fresh(118277)[6] (0.001000 sec.)
          
        end InterpProver.interpolate(118276)[5] (0.001000 sec.)
        output:
          P[<close__1043@154:1>](<close__1043@154:0>:bool,<close__1043@154:1>:int) = true
          P[<close__1043@161:1>](<close__1043@154:0>:bool,<close__1043@154:1>:int) = true
      end ApronInterface.convex_hull_interpolate(118238)[4] (0.002000 sec.)
      Horn clauses:
        P[<fail_1589@189:0>](<fail_1589@189:0>:bool)|- bot
        
        P[<f_1046@152:2>](<f_f_1579@178:1>:bool,<read__1038@180:0>:bool,<f_f_1579@178:0>:int),
        P[<<read__1038@173:2>@176:0>](<f_f_1579@178:1>:bool,<f_f_1579@178:0>:int,<read__1038@180:1>:int),
        (1 <> <read__1038@180:1>) |- bot
        
         ((<<read__1038@173:2>@176:0> = <read__1038@173:1>) && (not <read__1038@173:0>))
        |- P[<<read__1038@173:2>@176:0>](<read__1038@173:0>:bool,<read__1038@173:1>:int,
                                         <<read__1038@173:2>@176:0>:int)
        
         ((<f_1046@152:2> = 1) && ((not <f_1046@152:0>) && <f_1046@152:1>))
        |- P[<f_1046@152:2>](<f_1046@152:0>:bool,<f_1046@152:1>:bool,
                             <f_1046@152:2>:int)
      lower bounds:
        P[<<read__1038@173:2>@176:0>](<read__1038@173:0>:bool,<read__1038@173:1>:int,<<read__1038@173:2>@176:0>:int) =
        ((<<read__1038@173:2>@176:0> = <read__1038@173:1>) && (not <read__1038@173:0>))
        P[<f_1046@152:2>](<f_1046@152:0>:bool,<f_1046@152:1>:bool,<f_1046@152:2>:int) =
        ((<f_1046@152:2> = 1) && ((not <f_1046@152:0>) && <f_1046@152:1>))
        P[<fail_1589@189:0>](var561:bool) = false
      upper bounds:
        P[<fail_1589@189:0>](var564:bool) = true
      begin GenHcSolver.classify_pids(120452)[4]
        output:
          [<fail_1589@189:0>]
      end GenHcSolver.classify_pids(120452)[4] (0.000000 sec.)
      lb:false
      nub:false
      begin ApronInterface.convex_hull_interpolate(120455)[4]
        lb:false
        nub:false
        begin ExtFormula.Formula.case_analysis_boolean(120458)[5]
          ts: false
          
        end ExtFormula.Formula.case_analysis_boolean(120458)[5] (0.000000 sec.)
        begin ExtFormula.Formula.case_analysis_boolean(120463)[5]
          ts: false
          
        end ExtFormula.Formula.case_analysis_boolean(120463)[5] (0.000000 sec.)
        lb':(-1 >= 0)
        nub':(-1 >= 0)
        begin InterpProver.interpolate(120466)[5]
          begin InterpProver.interpolate_fresh(120467)[6]
            begin InterpProver.interpolate_log(120468)[7]
              input1: (-1 >= 0)
              input2: (-1 >= 0)
              begin InterpProver.interpolate_check(120469)[8]
                begin InterpProver.interpolate_simplify(120470)[9]
                  begin InterpProver.interpolate_quick(120485)[10]
                    
                  end InterpProver.interpolate_quick(120485)[10] (0.000000 sec.)
                  begin minimizing # of disjunctions(120489)[10]
                    input: false
                    output: false
                  end minimizing # of disjunctions(120489)[10] (0.000000 sec.)
                  
                end InterpProver.interpolate_simplify(120470)[9] (0.000000 sec.)
                
              end InterpProver.interpolate_check(120469)[8] (0.001000 sec.)
              output: false
            end InterpProver.interpolate_log(120468)[7] (0.001000 sec.)
            
          end InterpProver.interpolate_fresh(120467)[6] (0.001000 sec.)
          
        end InterpProver.interpolate(120466)[5] (0.001000 sec.)
        output:
          P[<fail_1589@189:0>](var561:bool) = false
      end ApronInterface.convex_hull_interpolate(120455)[4] (0.001000 sec.)
      Horn clauses:
        P[<f_1046@152:2>](<f_f_1579@178:1>:bool,<read__1038@180:0>:bool,<f_f_1579@178:0>:int),
        P[<<read__1038@173:2>@176:0>](<f_f_1579@178:1>:bool,<f_f_1579@178:0>:int,<read__1038@180:1>:int),
        (1 <> <read__1038@180:1>) |- bot
        
         ((<<read__1038@173:2>@176:0> = <read__1038@173:1>) && (not <read__1038@173:0>))
        |- P[<<read__1038@173:2>@176:0>](<read__1038@173:0>:bool,<read__1038@173:1>:int,
                                         <<read__1038@173:2>@176:0>:int)
        
         ((<f_1046@152:2> = 1) && ((not <f_1046@152:0>) && <f_1046@152:1>))
        |- P[<f_1046@152:2>](<f_1046@152:0>:bool,<f_1046@152:1>:bool,
                             <f_1046@152:2>:int)
      lower bounds:
        P[<<read__1038@173:2>@176:0>](<read__1038@173:0>:bool,<read__1038@173:1>:int,<<read__1038@173:2>@176:0>:int) =
        ((<<read__1038@173:2>@176:0> = <read__1038@173:1>) && (not <read__1038@173:0>))
        P[<f_1046@152:2>](<f_1046@152:0>:bool,<f_1046@152:1>:bool,<f_1046@152:2>:int) =
        ((<f_1046@152:2> = 1) && ((not <f_1046@152:0>) && <f_1046@152:1>))
      upper bounds:
        P[<f_1046@152:2>](var565:bool,var566:bool,var567:int) = ((1 = var567) || var565)
      begin GenHcSolver.classify_pids(121817)[4]
        output:
          [<f_1046@152:2>]
      end GenHcSolver.classify_pids(121817)[4] (0.000000 sec.)
      lb:((<f_1046@152:2> = 1) && ((not <f_1046@152:0>) && <f_1046@152:1>))
      nub:(not ((1 = <f_1046@152:2>) || <f_1046@152:0>))
      begin ApronInterface.convex_hull_interpolate(121820)[4]
        lb:((<f_1046@152:2> = 1) && ((not <f_1046@152:0>) && <f_1046@152:1>))
        nub:(not ((1 = <f_1046@152:2>) || <f_1046@152:0>))
        begin ExtFormula.Formula.case_analysis_boolean(121833)[5]
          ts: ((<f_1046@152:2> = 1) && ((not <f_1046@152:0>) && <f_1046@152:1>))
          
        end ExtFormula.Formula.case_analysis_boolean(121833)[5] (0.001000 sec.)
        begin ExtFormula.Formula.case_analysis_boolean(121884)[5]
          ts: ((1 <> <f_1046@152:2>) && (not <f_1046@152:0>))
          
        end ExtFormula.Formula.case_analysis_boolean(121884)[5] (0.000000 sec.)
        lb':(((-1 >= 0) && ((<f_1046@152:0> = true) && (<f_1046@152:1> = true))) ||
             (((-1 >= 0) && ((<f_1046@152:0> = true) && (<f_1046@152:1> = false))) ||
              ((((-1 + <f_1046@152:2>) = 0) && ((<f_1046@152:0> = false) && (<f_1046@152:1> = true))) ||
               ((-1 >= 0) && ((<f_1046@152:0> = false) && (<f_1046@152:1> = false))))))
        nub':(((-1 >= 0) && (<f_1046@152:0> = true)) || (<f_1046@152:0> = false))
        begin InterpProver.interpolate(121906)[5]
          begin InterpProver.interpolate_fresh(121907)[6]
            begin InterpProver.interpolate_log(121908)[7]
              input1: (((-1 >= 0) && ((<f_1046@152:0> = true) && (<f_1046@152:1> = true))) ||
                       (((-1 >= 0) && ((<f_1046@152:0> = true) && (<f_1046@152:1> = false))) ||
                        ((((-1 + <f_1046@152:2>) = 0) && ((<f_1046@152:0> = false) && (<f_1046@152:1> = true))) ||
                         ((-1 >= 0) && ((<f_1046@152:0> = false) && (<f_1046@152:1> = false))))))
              input2: (((-1 >= 0) && (<f_1046@152:0> = true)) || (<f_1046@152:0> = false))
              begin InterpProver.interpolate_check(121909)[8]
                begin InterpProver.interpolate_simplify(121910)[9]
                  begin InterpProver.interpolate_quick(121997)[10]
                    begin CsisatInterface.interpolate_csisat_wrap(122006)[11]
                      begin CsisatInterface.interpolate_csisat_post_process(122007)[12]
                        begin CsisatInterface.interpolate_csisat_log(122008)[13]
                          input1: not v_sep_f_1046_sep_152_sep_0 = true()
                          input2: not v_sep_f_1046_sep_152_sep_0 = true()
                          begin CsisatInterface.interpolate_csisat_raw(122009)[14]
                            csisat error: NelsonOppen: not a conjunction
                            
                          end CsisatInterface.interpolate_csisat_raw(122009)[14] (0.000000 sec.)
                          
                        end CsisatInterface.interpolate_csisat_log(122008)[13] (0.000000 sec.)
                        
                      end CsisatInterface.interpolate_csisat_post_process(122007)[12] (0.000000 sec.)
                      
                    end CsisatInterface.interpolate_csisat_wrap(122006)[11] (0.000000 sec.)
                    
                  end InterpProver.interpolate_quick(121997)[10] (0.000000 sec.)
                  
                end InterpProver.interpolate_simplify(121910)[9] (0.000000 sec.)
                
              end InterpProver.interpolate_check(121909)[8] (0.000000 sec.)
              there is no interpolant
            end InterpProver.interpolate_log(121908)[7] (0.000000 sec.)
            
          end InterpProver.interpolate_fresh(121907)[6] (0.000000 sec.)
          
        end InterpProver.interpolate(121906)[5] (0.000000 sec.)
        begin InterpProver.interpolate(122026)[5]
          begin InterpProver.interpolate_fresh(122027)[6]
            begin InterpProver.interpolate_log(122028)[7]
              input1: (((-1 >= 0) && ((<f_1046@152:0> = true) && (<f_1046@152:1> = true))) ||
                       (((-1 >= 0) && ((<f_1046@152:0> = true) && (<f_1046@152:1> = false))) ||
                        ((((-1 + <f_1046@152:2>) = 0) && ((<f_1046@152:0> = false) && (<f_1046@152:1> = true))) ||
                         ((-1 >= 0) && ((<f_1046@152:0> = false) && (<f_1046@152:1> = false))))))
              input2: (not ((1 = <f_1046@152:2>) || <f_1046@152:0>))
              begin InterpProver.interpolate_check(122029)[8]
                begin InterpProver.interpolate_simplify(122030)[9]
                  begin InterpProver.interpolate_quick(122140)[10]
                    begin CsisatInterface.interpolate_csisat_wrap(122149)[11]
                      begin CsisatInterface.interpolate_csisat_post_process(122150)[12]
                        begin CsisatInterface.interpolate_csisat_log(122151)[13]
                          input1: (not v_sep_f_1046_sep_152_sep_0 = true() & 1 = v_sep_f_1046_sep_152_sep_2)
                          input2: (not 1 = v_sep_f_1046_sep_152_sep_2 & not v_sep_f_1046_sep_152_sep_0 = true())
                          begin CsisatInterface.interpolate_csisat_raw(122152)[14]
                            
                          end CsisatInterface.interpolate_csisat_raw(122152)[14] (0.000000 sec.)
                          output: 1 = v_sep_f_1046_sep_152_sep_2
                          
                        end CsisatInterface.interpolate_csisat_log(122151)[13] (0.000000 sec.)
                        after simplification: 1 = v_sep_f_1046_sep_152_sep_2
                        after dnf conversion: ((1 = v_sep_f_1046_sep_152_sep_2))
                        
                      end CsisatInterface.interpolate_csisat_post_process(122150)[12] (0.000000 sec.)
                      
                    end CsisatInterface.interpolate_csisat_wrap(122149)[11] (0.000000 sec.)
                    
                  end InterpProver.interpolate_quick(122140)[10] (0.000999 sec.)
                  
                end InterpProver.interpolate_simplify(122030)[9] (0.000999 sec.)
                
              end InterpProver.interpolate_check(122029)[8] (0.001999 sec.)
              output: (1 = <f_1046@152:2>)
            end InterpProver.interpolate_log(122028)[7] (0.001999 sec.)
            
          end InterpProver.interpolate_fresh(122027)[6] (0.001999 sec.)
          
        end InterpProver.interpolate(122026)[5] (0.001999 sec.)
        output:
          P[<f_1046@152:2>](<f_1046@152:0>:bool,<f_1046@152:1>:bool,<f_1046@152:2>:int) = (1 = <f_1046@152:2>)
      end ApronInterface.convex_hull_interpolate(121820)[4] (0.003999 sec.)
      Horn clauses:
        P[<<read__1038@173:2>@176:0>](<f_f_1579@178:1>:bool,1:int,<read__1038@180:1>:int), (
        1 <> <read__1038@180:1>) |- bot
        
         ((<<read__1038@173:2>@176:0> = <read__1038@173:1>) && (not <read__1038@173:0>))
        |- P[<<read__1038@173:2>@176:0>](<read__1038@173:0>:bool,<read__1038@173:1>:int,
                                         <<read__1038@173:2>@176:0>:int)
      lower bounds:
        P[<<read__1038@173:2>@176:0>](<read__1038@173:0>:bool,<read__1038@173:1>:int,<<read__1038@173:2>@176:0>:int) =
        ((<<read__1038@173:2>@176:0> = <read__1038@173:1>) && (not <read__1038@173:0>))
      upper bounds:
        P[<<read__1038@173:2>@176:0>](var568:bool,var569:int,var570:int) = ((var569 <> 1) || (1 = var570))
      begin GenHcSolver.classify_pids(123107)[4]
        output:
          [<<read__1038@173:2>@176:0>]
      end GenHcSolver.classify_pids(123107)[4] (0.000000 sec.)
      lb:((<<read__1038@173:2>@176:0> = <read__1038@173:1>) && (not <read__1038@173:0>))
      nub:(not ((<read__1038@173:1> <> 1) || (1 = <<read__1038@173:2>@176:0>)))
      begin ApronInterface.convex_hull_interpolate(123110)[4]
        lb:((<<read__1038@173:2>@176:0> = <read__1038@173:1>) && (not <read__1038@173:0>))
        nub:(not ((<read__1038@173:1> <> 1) || (1 = <<read__1038@173:2>@176:0>)))
        begin ExtFormula.Formula.case_analysis_boolean(123122)[5]
          ts: ((<<read__1038@173:2>@176:0> = <read__1038@173:1>) && (not <read__1038@173:0>))
          
        end ExtFormula.Formula.case_analysis_boolean(123122)[5] (0.000999 sec.)
        begin ExtFormula.Formula.case_analysis_boolean(123158)[5]
          ts: ((<read__1038@173:1> = 1) && (1 <> <<read__1038@173:2>@176:0>))
          
        end ExtFormula.Formula.case_analysis_boolean(123158)[5] (0.000000 sec.)
        lb':(((-1 >= 0) && (<read__1038@173:0> = true)) ||
             (((<<read__1038@173:2>@176:0> + (-1 * <read__1038@173:1>)) = 0) && (<read__1038@173:0> = false)))
        nub':((-1 + <read__1038@173:1>) = 0)
        begin InterpProver.interpolate(123165)[5]
          begin InterpProver.interpolate_fresh(123166)[6]
            begin InterpProver.interpolate_log(123167)[7]
              input1: (((-1 >= 0) && (<read__1038@173:0> = true)) ||
                       (((<<read__1038@173:2>@176:0> + (-1 * <read__1038@173:1>)) = 0) && (<read__1038@173:0> = false)))
              input2: ((-1 + <read__1038@173:1>) = 0)
              begin InterpProver.interpolate_check(123168)[8]
                begin InterpProver.interpolate_simplify(123169)[9]
                  begin InterpProver.interpolate_quick(123208)[10]
                    begin CsisatInterface.interpolate_csisat_wrap(123214)[11]
                      begin CsisatInterface.interpolate_csisat_post_process(123215)[12]
                        begin CsisatInterface.interpolate_csisat_log(123216)[13]
                          input1: true
                          input2: 1 = v_sep_read__1038_sep_173_sep_1
                          begin CsisatInterface.interpolate_csisat_raw(123217)[14]
                            
                          end CsisatInterface.interpolate_csisat_raw(123217)[14] (0.000000 sec.)
                          
                        end CsisatInterface.interpolate_csisat_log(123216)[13] (0.000000 sec.)
                        
                      end CsisatInterface.interpolate_csisat_post_process(123215)[12] (0.000000 sec.)
                      
                    end CsisatInterface.interpolate_csisat_wrap(123214)[11] (0.000000 sec.)
                    
                  end InterpProver.interpolate_quick(123208)[10] (0.000000 sec.)
                  
                end InterpProver.interpolate_simplify(123169)[9] (0.000000 sec.)
                
              end InterpProver.interpolate_check(123168)[8] (0.001000 sec.)
              there is no interpolant
            end InterpProver.interpolate_log(123167)[7] (0.001000 sec.)
            
          end InterpProver.interpolate_fresh(123166)[6] (0.001000 sec.)
          
        end InterpProver.interpolate(123165)[5] (0.001000 sec.)
        begin InterpProver.interpolate(123227)[5]
          begin InterpProver.interpolate_fresh(123228)[6]
            begin InterpProver.interpolate_log(123229)[7]
              input1: (((-1 >= 0) && (<read__1038@173:0> = true)) ||
                       (((<<read__1038@173:2>@176:0> + (-1 * <read__1038@173:1>)) = 0) && (<read__1038@173:0> = false)))
              input2: (not ((<read__1038@173:1> <> 1) || (1 = <<read__1038@173:2>@176:0>)))
              begin InterpProver.interpolate_check(123230)[8]
                begin InterpProver.interpolate_simplify(123231)[9]
                  begin InterpProver.interpolate_quick(123301)[10]
                    begin CsisatInterface.interpolate_csisat_wrap(123310)[11]
                      begin CsisatInterface.interpolate_csisat_post_process(123311)[12]
                        begin CsisatInterface.interpolate_csisat_log(123312)[13]
                          input1: v_sep_read__1038_sep_173_sep_1 = v_sep_read__1038_sep_173_sep_2_sep_176_sep_0
                          input2: (not 1 = v_sep_read__1038_sep_173_sep_2_sep_176_sep_0 & 1 = v_sep_read__1038_sep_173_sep_1)
                          begin CsisatInterface.interpolate_csisat_raw(123313)[14]
                            
                          end CsisatInterface.interpolate_csisat_raw(123313)[14] (0.000000 sec.)
                          output: v_sep_read__1038_sep_173_sep_1 = v_sep_read__1038_sep_173_sep_2_sep_176_sep_0
                          
                        end CsisatInterface.interpolate_csisat_log(123312)[13] (0.000000 sec.)
                        after simplification: v_sep_read__1038_sep_173_sep_1 = v_sep_read__1038_sep_173_sep_2_sep_176_sep_0
                        after dnf conversion: ((v_sep_read__1038_sep_173_sep_1 = v_sep_read__1038_sep_173_sep_2_sep_176_sep_0))
                        
                      end CsisatInterface.interpolate_csisat_post_process(123311)[12] (0.000000 sec.)
                      
                    end CsisatInterface.interpolate_csisat_wrap(123310)[11] (0.000000 sec.)
                    
                  end InterpProver.interpolate_quick(123301)[10] (0.001000 sec.)
                  
                end InterpProver.interpolate_simplify(123231)[9] (0.001000 sec.)
                
              end InterpProver.interpolate_check(123230)[8] (0.001000 sec.)
              output: (<read__1038@173:1> = <<read__1038@173:2>@176:0>)
            end InterpProver.interpolate_log(123229)[7] (0.001000 sec.)
            
          end InterpProver.interpolate_fresh(123228)[6] (0.001000 sec.)
          
        end InterpProver.interpolate(123227)[5] (0.001000 sec.)
        output:
          P[<<read__1038@173:2>@176:0>](<read__1038@173:0>:bool,<read__1038@173:1>:int,<<read__1038@173:2>@176:0>:int) =
          (<read__1038@173:1> = <<read__1038@173:2>@176:0>)
      end ApronInterface.convex_hull_interpolate(123110)[4] (0.002999 sec.)
      begin HcSolver.check_validity(123480)[4]
        input:
          P[<fail_1589@189:0>](<fail_1589@189:0>:bool)|- bot
          
          P[<read__1038@180:1>](true:bool,<br_readit_1585@186:1>:int),
          ((<br_readit_1585@186:1> <> 1) && ((<br_readit_1585@186:1> <> 3) && <fail_1589@189:0>))
          |- P[<fail_1589@189:0>](<fail_1589@189:0>:bool)
          
          P[<f_1046@152:2>](<f_f_1579@178:1>:bool,<read__1038@180:0>:bool,<f_f_1579@178:0>:int),
          P[<<close__1043@154:2>@157:0>](<f_f_1579@178:1>:bool,<f_f_1579@178:0>:int,<f_f_1579@178:3>:int),
          P[<<close__1043@161:2>@169:0>](<read__1038@180:0>:bool,<f_f_1579@178:3>:int,<f_f_1579@178:2>:int),
          P[<<read__1038@173:2>@176:0>](<f_f_1579@178:1>:bool,<f_f_1579@178:0>:int,<read__1038@180:1>:int)|- P[<read__1038@180:1>](
          <read__1038@180:0>:bool,<read__1038@180:1>:int)
          
          P[<read__1038@173:1>](<read__1038@173:0>:bool,<read__1038@173:1>:int),
          ((<<read__1038@173:2>@176:0> = <read__1038@173:1>) && (not <read__1038@173:0>))
          |- P[<<read__1038@173:2>@176:0>](<read__1038@173:0>:bool,<read__1038@173:1>:int,
                                           <<read__1038@173:2>@176:0>:int)
          
          P[<f_1046@152:2>](<read__1038@173:0>:bool,<f_f_1578@171:3>:bool,<read__1038@173:1>:int),
          P[<<close__1043@154:2>@157:0>](<read__1038@173:0>:bool,<read__1038@173:1>:int,<f_f_1578@171:2>:int),
          P[<<close__1043@161:2>@169:0>](<f_f_1578@171:3>:bool,<f_f_1578@171:2>:int,<f_f_1578@171:5>:int)|- P[<read__1038@173:1>](
          <read__1038@173:0>:bool,<read__1038@173:1>:int)
          
          P[<close__1043@161:1>](<close__1043@161:0>:bool,<close__1043@161:1>:int),
          ((<close__1043@161:1> = 1) && ((<<close__1043@161:2>@169:0> = 2) && <close__1043@161:0>))
          |- P[<<close__1043@161:2>@169:0>](<close__1043@161:0>:bool,
                                            <close__1043@161:1>:int,<<close__1043@161:2>@169:0>:int)
          
          P[<f_1046@152:2>](<f_f_1577@159:1>:bool,<close__1043@161:0>:bool,<f_f_1577@159:0>:int),
          P[<<close__1043@154:2>@157:0>](<f_f_1577@159:1>:bool,<f_f_1577@159:0>:int,<close__1043@161:1>:int)|- P[<close__1043@161:1>](
          <close__1043@161:0>:bool,<close__1043@161:1>:int)
          
          P[<close__1043@154:1>](<close__1043@154:0>:bool,<close__1043@154:1>:int),
          ((<<close__1043@154:2>@157:0> = <close__1043@154:1>) && (not <close__1043@154:0>))
          |- P[<<close__1043@154:2>@157:0>](<close__1043@154:0>:bool,
                                            <close__1043@154:1>:int,<<close__1043@154:2>@157:0>:int)
          
          P[<f_1046@152:2>](<close__1043@154:0>:bool,<f_1046@152:1>:bool,<close__1043@154:1>:int)|- P[<close__1043@154:1>](
          <close__1043@154:0>:bool,<close__1043@154:1>:int)
          
           ((<f_1046@152:2> = 1) && ((not <f_1046@152:0>) && <f_1046@152:1>))
          |- P[<f_1046@152:2>](<f_1046@152:0>:bool,<f_1046@152:1>:bool,
                               <f_1046@152:2>:int)
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        
      end HcSolver.check_validity(123480)[4] (0.003999 sec.)
      solution:
        P[<fail_1589@189:0>](var561:bool) = false
        P[<read__1038@180:1>](<read__1038@173:0>:bool,<read__1038@173:1>:int) = (1 = <read__1038@173:1>)
        P[<<read__1038@173:2>@176:0>](<read__1038@173:0>:bool,<read__1038@173:1>:int,<<read__1038@173:2>@176:0>:int) =
        (<read__1038@173:1> = <<read__1038@173:2>@176:0>)
        P[<read__1038@173:1>](<read__1038@173:0>:bool,<read__1038@173:1>:int) = true
        P[<<close__1043@161:2>@169:0>](<close__1043@154:0>:bool,<close__1043@154:1>:int,<<close__1043@154:2>@157:0>:int) =
        true
        P[<close__1043@161:1>](<close__1043@154:0>:bool,<close__1043@154:1>:int) = true
        P[<<close__1043@154:2>@157:0>](<close__1043@154:0>:bool,<close__1043@154:1>:int,<<close__1043@154:2>@157:0>:int) =
        true
        P[<close__1043@154:1>](<close__1043@154:0>:bool,<close__1043@154:1>:int) = true
        P[<f_1046@152:2>](<f_1046@152:0>:bool,<f_1046@152:1>:bool,<f_1046@152:2>:int) = (1 = <f_1046@152:2>)
    end GenHcSolver.solve(98989)[3] (0.115982 sec.)
    begin YhornInterface.solve(124221)[3]
      begin HcSolver.solve_ub(124222)[4]
        encoded:
          P[<fail_1589@189:0>](<fail_1589@189:0>:int)|- bot
          
          P[<read__1038@180:1>](1:int,<br_readit_1585@186:1>:int),
          ((<br_readit_1585@186:1> <> 1) && ((<br_readit_1585@186:1> <> 3) && (<fail_1589@189:0> = 1)))
          |- P[<fail_1589@189:0>](<fail_1589@189:0>:int)
          
          P[<f_1046@152:2>](<f_f_1579@178:1>:int,<read__1038@180:0>:int,<f_f_1579@178:0>:int),
          P[<<close__1043@154:2>@157:0>](<f_f_1579@178:1>:int,<f_f_1579@178:0>:int,<f_f_1579@178:3>:int),
          P[<<close__1043@161:2>@169:0>](<read__1038@180:0>:int,<f_f_1579@178:3>:int,<f_f_1579@178:2>:int),
          P[<<read__1038@173:2>@176:0>](<f_f_1579@178:1>:int,<f_f_1579@178:0>:int,<read__1038@180:1>:int)|- P[<read__1038@180:1>](
          <read__1038@180:0>:int,<read__1038@180:1>:int)
          
          P[<read__1038@173:1>](<read__1038@173:0>:int,<read__1038@173:1>:int),
          ((<<read__1038@173:2>@176:0> = <read__1038@173:1>) && (not (
                                                                    <read__1038@173:0> = 1)))
          |- P[<<read__1038@173:2>@176:0>](<read__1038@173:0>:int,<read__1038@173:1>:int,
                                           <<read__1038@173:2>@176:0>:int)
          
          P[<f_1046@152:2>](<read__1038@173:0>:int,<f_f_1578@171:3>:int,<read__1038@173:1>:int),
          P[<<close__1043@154:2>@157:0>](<read__1038@173:0>:int,<read__1038@173:1>:int,<f_f_1578@171:2>:int),
          P[<<close__1043@161:2>@169:0>](<f_f_1578@171:3>:int,<f_f_1578@171:2>:int,<f_f_1578@171:5>:int)|- P[<read__1038@173:1>](
          <read__1038@173:0>:int,<read__1038@173:1>:int)
          
          P[<close__1043@161:1>](<close__1043@161:0>:int,<close__1043@161:1>:int),
          ((<close__1043@161:1> = 1) && ((<<close__1043@161:2>@169:0> = 2) && (<close__1043@161:0> = 1)))
          |- P[<<close__1043@161:2>@169:0>](<close__1043@161:0>:int,<close__1043@161:1>:int,
                                            <<close__1043@161:2>@169:0>:int)
          
          P[<f_1046@152:2>](<f_f_1577@159:1>:int,<close__1043@161:0>:int,<f_f_1577@159:0>:int),
          P[<<close__1043@154:2>@157:0>](<f_f_1577@159:1>:int,<f_f_1577@159:0>:int,<close__1043@161:1>:int)|- P[<close__1043@161:1>](
          <close__1043@161:0>:int,<close__1043@161:1>:int)
          
          P[<close__1043@154:1>](<close__1043@154:0>:int,<close__1043@154:1>:int),
          ((<<close__1043@154:2>@157:0> = <close__1043@154:1>) && (not (
                                                                    <close__1043@154:0> = 1)))
          |- P[<<close__1043@154:2>@157:0>](<close__1043@154:0>:int,<close__1043@154:1>:int,
                                            <<close__1043@154:2>@157:0>:int)
          
          P[<f_1046@152:2>](<close__1043@154:0>:int,<f_1046@152:1>:int,<close__1043@154:1>:int)|- P[<close__1043@154:1>](
          <close__1043@154:0>:int,<close__1043@154:1>:int)
          
           ((<f_1046@152:2> = 1) && ((not (<f_1046@152:0> = 1)) && (<f_1046@152:1> = 1)))
          |- P[<f_1046@152:2>](<f_1046@152:0>:int,<f_1046@152:1>:int,
                               <f_1046@152:2>:int)
        input to Yhorn:
          P[<fail_1589@189:0>](<fail_1589@189:0>:int)|- bot
          
          P[<read__1038@180:1>](var571:int,<br_readit_1585@186:1>:int),
          ((<br_readit_1585@186:1> <> 3) &&
           ((<br_readit_1585@186:1> <> 1) && ((var571 = 1) && (<fail_1589@189:0> = 1))))
          |- P[<fail_1589@189:0>](<fail_1589@189:0>:int)
          
          P[<f_1046@152:2>](<f_f_1579@178:1>:int,<read__1038@180:0>:int,<f_f_1579@178:0>:int),
          P[<<close__1043@154:2>@157:0>](<f_f_1579@178:1>:int,<f_f_1579@178:0>:int,<f_f_1579@178:3>:int),
          P[<<close__1043@161:2>@169:0>](<read__1038@180:0>:int,<f_f_1579@178:3>:int,<f_f_1579@178:2>:int),
          P[<<read__1038@173:2>@176:0>](<f_f_1579@178:1>:int,<f_f_1579@178:0>:int,<read__1038@180:1>:int)|- P[<read__1038@180:1>](
          <read__1038@180:0>:int,<read__1038@180:1>:int)
          
          P[<read__1038@173:1>](<read__1038@173:0>:int,<read__1038@173:1>:int),
          ((<<read__1038@173:2>@176:0> = <read__1038@173:1>) && (<read__1038@173:0> <> 1))
          |- P[<<read__1038@173:2>@176:0>](<read__1038@173:0>:int,<read__1038@173:1>:int,
                                           <<read__1038@173:2>@176:0>:int)
          
          P[<f_1046@152:2>](<read__1038@173:0>:int,<f_f_1578@171:3>:int,<read__1038@173:1>:int),
          P[<<close__1043@154:2>@157:0>](<read__1038@173:0>:int,<read__1038@173:1>:int,<f_f_1578@171:2>:int),
          P[<<close__1043@161:2>@169:0>](<f_f_1578@171:3>:int,<f_f_1578@171:2>:int,<f_f_1578@171:5>:int)|- P[<read__1038@173:1>](
          <read__1038@173:0>:int,<read__1038@173:1>:int)
          
          P[<close__1043@161:1>](<close__1043@161:0>:int,<close__1043@161:1>:int),
          ((<close__1043@161:0> = 1) && ((<<close__1043@161:2>@169:0> = 2) && (<close__1043@161:1> = 1)))
          |- P[<<close__1043@161:2>@169:0>](<close__1043@161:0>:int,<close__1043@161:1>:int,
                                            <<close__1043@161:2>@169:0>:int)
          
          P[<f_1046@152:2>](<f_f_1577@159:1>:int,<close__1043@161:0>:int,<f_f_1577@159:0>:int),
          P[<<close__1043@154:2>@157:0>](<f_f_1577@159:1>:int,<f_f_1577@159:0>:int,<close__1043@161:1>:int)|- P[<close__1043@161:1>](
          <close__1043@161:0>:int,<close__1043@161:1>:int)
          
          P[<close__1043@154:1>](<close__1043@154:0>:int,<close__1043@154:1>:int),
          ((<<close__1043@154:2>@157:0> = <close__1043@154:1>) && (<close__1043@154:0> <> 1))
          |- P[<<close__1043@154:2>@157:0>](<close__1043@154:0>:int,<close__1043@154:1>:int,
                                            <<close__1043@154:2>@157:0>:int)
          
          P[<f_1046@152:2>](<close__1043@154:0>:int,<f_1046@152:1>:int,<close__1043@154:1>:int)|- P[<close__1043@154:1>](
          <close__1043@154:0>:int,<close__1043@154:1>:int)
          
           ((<f_1046@152:0> <> 1) && ((<f_1046@152:1> = 1) && (<f_1046@152:2> = 1)))
          |- P[<f_1046@152:2>](<f_1046@152:0>:int,<f_1046@152:1>:int,
                               <f_1046@152:2>:int)Yhorn (Wed Sep 25 10:52:05 JST 2013)


(0=0) & (v_sep_fail_1589_sep_189_sep_0($673)) -> 1=0.
(($673-1=0) & ($674-1=0) & ($675-1<>0) & ($675-3<>0)) & (v_sep_read__1038_sep_180_sep_1($674,$675)) -> v_sep_fail_1589_sep_189_sep_0($673).
(0=0) & (v_sep_read__1038_sep_173_sep_2_sep_176_sep_0($676,$677,$678)) & (v_sep_close__1043_sep_161_sep_2_sep_169_sep_0($679,$680,$681)) & (v_sep_close__1043_sep_154_sep_2_sep_157_sep_0($676,$677,$680)) & (v_sep_f_1046_sep_152_sep_2($676,$679,$677)) -> v_sep_read__1038_sep_180_sep_1($679,$678).
(($682-1<>0) & ($683-$684=0)) & (v_sep_read__1038_sep_173_sep_1($682,$684)) -> v_sep_read__1038_sep_173_sep_2_sep_176_sep_0($682,$684,$683).
(0=0) & (v_sep_close__1043_sep_161_sep_2_sep_169_sep_0($685,$686,$687)) & (v_sep_close__1043_sep_154_sep_2_sep_157_sep_0($682,$684,$686)) & (v_sep_f_1046_sep_152_sep_2($682,$685,$684)) -> v_sep_read__1038_sep_173_sep_1($682,$684).
(($688-1=0) & ($689-2=0) & ($690-1=0)) & (v_sep_close__1043_sep_161_sep_1($690,$688)) -> v_sep_close__1043_sep_161_sep_2_sep_169_sep_0($690,$688,$689).
(0=0) & (v_sep_close__1043_sep_154_sep_2_sep_157_sep_0($691,$692,$688)) & (v_sep_f_1046_sep_152_sep_2($691,$690,$692)) -> v_sep_close__1043_sep_161_sep_1($690,$688).
(($693-1<>0) & ($694-$695=0)) & (v_sep_close__1043_sep_154_sep_1($693,$695)) -> v_sep_close__1043_sep_154_sep_2_sep_157_sep_0($693,$695,$694).
(0=0) & (v_sep_f_1046_sep_152_sep_2($693,$696,$695)) -> v_sep_close__1043_sep_154_sep_1($693,$695).
($697-1=0) & ($696-1=0) & ($698-1<>0) -> v_sep_f_1046_sep_152_sep_2($698,$696,$697).


v_sep_close__1043_sep_154_sep_1: X
v_sep_close__1043_sep_154_sep_2_sep_157_sep_0: X
v_sep_close__1043_sep_161_sep_1: X
v_sep_close__1043_sep_161_sep_2_sep_169_sep_0: X
v_sep_f_1046_sep_152_sep_2: X
v_sep_fail_1589_sep_189_sep_0: X
v_sep_read__1038_sep_173_sep_1: X
v_sep_read__1038_sep_173_sep_2_sep_176_sep_0: X
v_sep_read__1038_sep_180_sep_1: X
.....................Split disj [42] 1.153824
Reconstrcut: 3 ****)

v_sep_close__1043_sep_154_sep_1: X
v_sep_close__1043_sep_154_sep_2_sep_157_sep_0: X
v_sep_close__1043_sep_161_sep_1: X
v_sep_close__1043_sep_161_sep_2_sep_169_sep_0: X
v_sep_f_1046_sep_152_sep_2: X
v_sep_fail_1589_sep_189_sep_0: (X) | (X) | (X) | (X)
v_sep_read__1038_sep_173_sep_1: X
v_sep_read__1038_sep_173_sep_2_sep_176_sep_0: X
v_sep_read__1038_sep_180_sep_1: X
.........
v_sep_close__1043_sep_154_sep_1: X
v_sep_close__1043_sep_154_sep_2_sep_157_sep_0: X
v_sep_close__1043_sep_161_sep_1: X
v_sep_close__1043_sep_161_sep_2_sep_169_sep_0: X
v_sep_f_1046_sep_152_sep_2: X
v_sep_fail_1589_sep_189_sep_0: (X) | (X) | (X) | (X)
v_sep_read__1038_sep_173_sep_1: X
v_sep_read__1038_sep_173_sep_2_sep_176_sep_0: X
v_sep_read__1038_sep_180_sep_1: X
.........Split conj [48] 1.161823
(Reconstrcut: 14 ****)
v_sep_close__1043_sep_154_sep_1: X
v_sep_close__1043_sep_154_sep_2_sep_157_sep_0: X
v_sep_close__1043_sep_161_sep_1: X
v_sep_close__1043_sep_161_sep_2_sep_169_sep_0: X
v_sep_f_1046_sep_152_sep_2: X
v_sep_fail_1589_sep_189_sep_0: (X) | (X) | (X) | (X)
v_sep_read__1038_sep_173_sep_1: X
v_sep_read__1038_sep_173_sep_2_sep_176_sep_0: X
v_sep_read__1038_sep_180_sep_1: (X) & (X) & (X) & (X)
.........................
v_sep_close__1043_sep_154_sep_1: X
v_sep_close__1043_sep_154_sep_2_sep_157_sep_0: X
v_sep_close__1043_sep_161_sep_1: X
v_sep_close__1043_sep_161_sep_2_sep_169_sep_0: X
v_sep_f_1046_sep_152_sep_2: X
v_sep_fail_1589_sep_189_sep_0: (X) | (X) | (X) | (X)
v_sep_read__1038_sep_173_sep_1: X
v_sep_read__1038_sep_173_sep_2_sep_176_sep_0: X
v_sep_read__1038_sep_180_sep_1: (X) & (X) & (X) & (X)
.........
v_sep_close__1043_sep_154_sep_1: X
v_sep_close__1043_sep_154_sep_2_sep_157_sep_0: X
v_sep_close__1043_sep_161_sep_1: X
v_sep_close__1043_sep_161_sep_2_sep_169_sep_0: X
v_sep_f_1046_sep_152_sep_2: X
v_sep_fail_1589_sep_189_sep_0: (X) | (X) | (X) | (X)
v_sep_read__1038_sep_173_sep_1: X
v_sep_read__1038_sep_173_sep_2_sep_176_sep_0: X
v_sep_read__1038_sep_180_sep_1: (X) & (X) & (X) & (X)
.........................Split conj [54] 1.181819
(Reconstrcut: 22 ****)
v_sep_close__1043_sep_154_sep_1: X
v_sep_close__1043_sep_154_sep_2_sep_157_sep_0: X
v_sep_close__1043_sep_161_sep_1: X
v_sep_close__1043_sep_161_sep_2_sep_169_sep_0: X
v_sep_f_1046_sep_152_sep_2: X
v_sep_fail_1589_sep_189_sep_0: (X) | (X) | (X) | (X)
v_sep_read__1038_sep_173_sep_1: X
v_sep_read__1038_sep_173_sep_2_sep_176_sep_0: (X) & (X) & (X) & (X)
v_sep_read__1038_sep_180_sep_1: (X) & (X) & (X) & (X)
.................................
v_sep_close__1043_sep_154_sep_1: X
v_sep_close__1043_sep_154_sep_2_sep_157_sep_0: X
v_sep_close__1043_sep_161_sep_1: X
v_sep_close__1043_sep_161_sep_2_sep_169_sep_0: X
v_sep_f_1046_sep_152_sep_2: X
v_sep_fail_1589_sep_189_sep_0: (X) | (X) | (X) | (X)
v_sep_read__1038_sep_173_sep_1: X
v_sep_read__1038_sep_173_sep_2_sep_176_sep_0: (X) & (X) & (X) & (X)
v_sep_read__1038_sep_180_sep_1: (X) & (X) & (X) & (X)
.........
v_sep_close__1043_sep_154_sep_1: X
v_sep_close__1043_sep_154_sep_2_sep_157_sep_0: X
v_sep_close__1043_sep_161_sep_1: X
v_sep_close__1043_sep_161_sep_2_sep_169_sep_0: X
v_sep_f_1046_sep_152_sep_2: X
v_sep_fail_1589_sep_189_sep_0: (X) | (X) | (X) | (X)
v_sep_read__1038_sep_173_sep_1: X
v_sep_read__1038_sep_173_sep_2_sep_176_sep_0: (X) & (X) & (X) & (X)
v_sep_read__1038_sep_180_sep_1: (X) & (X) & (X) & (X)
.........................
v_sep_close__1043_sep_154_sep_1: X
v_sep_close__1043_sep_154_sep_2_sep_157_sep_0: X
v_sep_close__1043_sep_161_sep_1: X
v_sep_close__1043_sep_161_sep_2_sep_169_sep_0: X
v_sep_f_1046_sep_152_sep_2: X
v_sep_fail_1589_sep_189_sep_0: (X) | (X) | (X) | (X)
v_sep_read__1038_sep_173_sep_1: X
v_sep_read__1038_sep_173_sep_2_sep_176_sep_0: (X) & (X) & (X) & (X)
v_sep_read__1038_sep_180_sep_1: (X) & (X) & (X) & (X)
....................................Split conj [63] 1.217814
(Reconstrcut: 36 *****)
v_sep_close__1043_sep_154_sep_1: X
v_sep_close__1043_sep_154_sep_2_sep_157_sep_0: X
v_sep_close__1043_sep_161_sep_1: X
v_sep_close__1043_sep_161_sep_2_sep_169_sep_0: (X) & (X) & (X) & (X) & (X)
v_sep_f_1046_sep_152_sep_2: X
v_sep_fail_1589_sep_189_sep_0: (X) | (X) | (X) | (X)
v_sep_read__1038_sep_173_sep_1: X
v_sep_read__1038_sep_173_sep_2_sep_176_sep_0: (X) & (X) & (X) & (X)
v_sep_read__1038_sep_180_sep_1: (X) & (X) & (X) & (X)
.........................................
v_sep_close__1043_sep_154_sep_1: X
v_sep_close__1043_sep_154_sep_2_sep_157_sep_0: X
v_sep_close__1043_sep_161_sep_1: X
v_sep_close__1043_sep_161_sep_2_sep_169_sep_0: (X) & (X) & (X) & (X) & (X)
v_sep_f_1046_sep_152_sep_2: X
v_sep_fail_1589_sep_189_sep_0: (X) | (X) | (X) | (X)
v_sep_read__1038_sep_173_sep_1: X
v_sep_read__1038_sep_173_sep_2_sep_176_sep_0: (X) & (X) & (X) & (X)
v_sep_read__1038_sep_180_sep_1: (X) & (X) & (X) & (X)
.........
v_sep_close__1043_sep_154_sep_1: X
v_sep_close__1043_sep_154_sep_2_sep_157_sep_0: X
v_sep_close__1043_sep_161_sep_1: X
v_sep_close__1043_sep_161_sep_2_sep_169_sep_0: (X) & (X) & (X) & (X) & (X)
v_sep_f_1046_sep_152_sep_2: X
v_sep_fail_1589_sep_189_sep_0: (X) | (X) | (X) | (X)
v_sep_read__1038_sep_173_sep_1: X
v_sep_read__1038_sep_173_sep_2_sep_176_sep_0: (X) & (X) & (X) & (X)
v_sep_read__1038_sep_180_sep_1: (X) & (X) & (X) & (X)
.........................
v_sep_close__1043_sep_154_sep_1: X
v_sep_close__1043_sep_154_sep_2_sep_157_sep_0: X
v_sep_close__1043_sep_161_sep_1: X
v_sep_close__1043_sep_161_sep_2_sep_169_sep_0: (X) & (X) & (X) & (X) & (X)
v_sep_f_1046_sep_152_sep_2: X
v_sep_fail_1589_sep_189_sep_0: (X) | (X) | (X) | (X)
v_sep_read__1038_sep_173_sep_1: X
v_sep_read__1038_sep_173_sep_2_sep_176_sep_0: (X) & (X) & (X) & (X)
v_sep_read__1038_sep_180_sep_1: (X) & (X) & (X) & (X)
.......................................Split conj [71] 1.294802
(Reconstrcut: 48 ******)
v_sep_close__1043_sep_154_sep_1: X
v_sep_close__1043_sep_154_sep_2_sep_157_sep_0: (X) & (X) & (X) & (X) & (X) & (X)
v_sep_close__1043_sep_161_sep_1: X
v_sep_close__1043_sep_161_sep_2_sep_169_sep_0: (X) & (X) & (X) & (X) & (X)
v_sep_f_1046_sep_152_sep_2: X
v_sep_fail_1589_sep_189_sep_0: (X) | (X) | (X) | (X)
v_sep_read__1038_sep_173_sep_1: X
v_sep_read__1038_sep_173_sep_2_sep_176_sep_0: (X) & (X) & (X) & (X)
v_sep_read__1038_sep_180_sep_1: (X) & (X) & (X) & (X)
.......................................................
v_sep_close__1043_sep_154_sep_1: X
v_sep_close__1043_sep_154_sep_2_sep_157_sep_0: (X) & (X) & (X) & (X) & (X) & (X)
v_sep_close__1043_sep_161_sep_1: X
v_sep_close__1043_sep_161_sep_2_sep_169_sep_0: (X) & (X) & (X) & (X) & (X)
v_sep_f_1046_sep_152_sep_2: X
v_sep_fail_1589_sep_189_sep_0: (X) | (X) | (X) | (X)
v_sep_read__1038_sep_173_sep_1: X
v_sep_read__1038_sep_173_sep_2_sep_176_sep_0: (X) & (X) & (X) & (X)
v_sep_read__1038_sep_180_sep_1: (X) & (X) & (X) & (X)
.........
v_sep_close__1043_sep_154_sep_1: X
v_sep_close__1043_sep_154_sep_2_sep_157_sep_0: (X) & (X) & (X) & (X) & (X) & (X)
v_sep_close__1043_sep_161_sep_1: X
v_sep_close__1043_sep_161_sep_2_sep_169_sep_0: (X) & (X) & (X) & (X) & (X)
v_sep_f_1046_sep_152_sep_2: X
v_sep_fail_1589_sep_189_sep_0: (X) | (X) | (X) | (X)
v_sep_read__1038_sep_173_sep_1: X
v_sep_read__1038_sep_173_sep_2_sep_176_sep_0: (X) & (X) & (X) & (X)
v_sep_read__1038_sep_180_sep_1: (X) & (X) & (X) & (X)
.........................
v_sep_close__1043_sep_154_sep_1: X
v_sep_close__1043_sep_154_sep_2_sep_157_sep_0: (X) & (X) & (X) & (X) & (X) & (X)
v_sep_close__1043_sep_161_sep_1: X
v_sep_close__1043_sep_161_sep_2_sep_169_sep_0: (X) & (X) & (X) & (X) & (X)
v_sep_f_1046_sep_152_sep_2: X
v_sep_fail_1589_sep_189_sep_0: (X) | (X) | (X) | (X)
v_sep_read__1038_sep_173_sep_1: X
v_sep_read__1038_sep_173_sep_2_sep_176_sep_0: (X) & (X) & (X) & (X)
v_sep_read__1038_sep_180_sep_1: (X) & (X) & (X) & (X)
.............................................
v_sep_close__1043_sep_154_sep_1: X
v_sep_close__1043_sep_154_sep_2_sep_157_sep_0: (X) & (X) & (X) & (X) & (X) & (X)
v_sep_close__1043_sep_161_sep_1: X
v_sep_close__1043_sep_161_sep_2_sep_169_sep_0: (X) & (X) & (X) & (X) & (X)
v_sep_f_1046_sep_152_sep_2: X
v_sep_fail_1589_sep_189_sep_0: (X) | (X) | (X) | (X)
v_sep_read__1038_sep_173_sep_1: X
v_sep_read__1038_sep_173_sep_2_sep_176_sep_0: (X) & (X) & (X) & (X)
v_sep_read__1038_sep_180_sep_1: (X) & (X) & (X) & (X)
...................................................
v_sep_close__1043_sep_154_sep_1: X
v_sep_close__1043_sep_154_sep_2_sep_157_sep_0: (X) & (X) & (X) & (X) & (X) & (X)
v_sep_close__1043_sep_161_sep_1: X
v_sep_close__1043_sep_161_sep_2_sep_169_sep_0: (X) & (X) & (X) & (X) & (X)
v_sep_f_1046_sep_152_sep_2: X
v_sep_fail_1589_sep_189_sep_0: (X) | (X) | (X) | (X)
v_sep_read__1038_sep_173_sep_1: X
v_sep_read__1038_sep_173_sep_2_sep_176_sep_0: (X) & (X) & (X) & (X)
v_sep_read__1038_sep_180_sep_1: (X) & (X) & (X) & (X)
........................................................(0=0) & (v_sep_fail_1589_sep_189_sep_0($673)) -> 1=0.
(($673-1=0) & ($674-1=0) & ($675-1<>0) & ($675-3<>0)) & (v_sep_read__1038_sep_180_sep_1($674,$675)) -> v_sep_fail_1589_sep_189_sep_0($673).
(0=0) & (v_sep_read__1038_sep_173_sep_2_sep_176_sep_0($676,$677,$678)) & (v_sep_close__1043_sep_161_sep_2_sep_169_sep_0($679,$680,$681)) & (v_sep_close__1043_sep_154_sep_2_sep_157_sep_0($676,$677,$680)) & (v_sep_f_1046_sep_152_sep_2($676,$679,$677)) -> v_sep_read__1038_sep_180_sep_1($679,$678).
(($682-1<>0) & ($683-$684=0)) & (v_sep_read__1038_sep_173_sep_1($682,$684)) -> v_sep_read__1038_sep_173_sep_2_sep_176_sep_0($682,$684,$683).
(0=0) & (v_sep_close__1043_sep_161_sep_2_sep_169_sep_0($685,$686,$687)) & (v_sep_close__1043_sep_154_sep_2_sep_157_sep_0($682,$684,$686)) & (v_sep_f_1046_sep_152_sep_2($682,$685,$684)) -> v_sep_read__1038_sep_173_sep_1($682,$684).
(($688-1=0) & ($689-2=0) & ($690-1=0)) & (v_sep_close__1043_sep_161_sep_1($690,$688)) -> v_sep_close__1043_sep_161_sep_2_sep_169_sep_0($690,$688,$689).
(0=0) & (v_sep_close__1043_sep_154_sep_2_sep_157_sep_0($691,$692,$688)) & (v_sep_f_1046_sep_152_sep_2($691,$690,$692)) -> v_sep_close__1043_sep_161_sep_1($690,$688).
(($693-1<>0) & ($694-$695=0)) & (v_sep_close__1043_sep_154_sep_1($693,$695)) -> v_sep_close__1043_sep_154_sep_2_sep_157_sep_0($693,$695,$694).
(0=0) & (v_sep_f_1046_sep_152_sep_2($693,$696,$695)) -> v_sep_close__1043_sep_154_sep_1($693,$695).
($697-1=0) & ($696-1=0) & ($698-1<>0) -> v_sep_f_1046_sep_152_sep_2($698,$696,$697).

        solution:
          P[<close__1043@154:1>]($745:bool,$747:int) = true
          P[<<close__1043@154:2>@157:0>]($721:bool,$723:int,$725:int) = ($725 = $723)
          P[<close__1043@161:1>]($740:bool,$742:int) = true
          P[<<close__1043@161:2>@169:0>]($714:bool,$716:int,$718:int) = ($716 = 1)
          P[<f_1046@152:2>]($728:bool,$730:bool,$732:int) = ((not $728) || (($728 && $730) || ($728 && (not $730))))
          P[<fail_1589@189:0>]($699:bool) = false
          P[<read__1038@173:1>]($735:bool,$737:int) = true
          P[<<read__1038@173:2>@176:0>]($707:bool,$709:int,$711:int) = ($709 = $711)
          P[<read__1038@180:1>]($702:bool,$704:int) = ($704 = 1)
        
      end HcSolver.solve_ub(124222)[4] (0.356946 sec.)
      begin HcSolver.check_validity(124966)[4]
        input:
          P[<fail_1589@189:0>](<fail_1589@189:0>:bool)|- bot
          
          P[<read__1038@180:1>](true:bool,<br_readit_1585@186:1>:int),
          ((<br_readit_1585@186:1> <> 1) && ((<br_readit_1585@186:1> <> 3) && <fail_1589@189:0>))
          |- P[<fail_1589@189:0>](<fail_1589@189:0>:bool)
          
          P[<f_1046@152:2>](<f_f_1579@178:1>:bool,<read__1038@180:0>:bool,<f_f_1579@178:0>:int),
          P[<<close__1043@154:2>@157:0>](<f_f_1579@178:1>:bool,<f_f_1579@178:0>:int,<f_f_1579@178:3>:int),
          P[<<close__1043@161:2>@169:0>](<read__1038@180:0>:bool,<f_f_1579@178:3>:int,<f_f_1579@178:2>:int),
          P[<<read__1038@173:2>@176:0>](<f_f_1579@178:1>:bool,<f_f_1579@178:0>:int,<read__1038@180:1>:int)|- P[<read__1038@180:1>](
          <read__1038@180:0>:bool,<read__1038@180:1>:int)
          
          P[<read__1038@173:1>](<read__1038@173:0>:bool,<read__1038@173:1>:int),
          ((<<read__1038@173:2>@176:0> = <read__1038@173:1>) && (not <read__1038@173:0>))
          |- P[<<read__1038@173:2>@176:0>](<read__1038@173:0>:bool,<read__1038@173:1>:int,
                                           <<read__1038@173:2>@176:0>:int)
          
          P[<f_1046@152:2>](<read__1038@173:0>:bool,<f_f_1578@171:3>:bool,<read__1038@173:1>:int),
          P[<<close__1043@154:2>@157:0>](<read__1038@173:0>:bool,<read__1038@173:1>:int,<f_f_1578@171:2>:int),
          P[<<close__1043@161:2>@169:0>](<f_f_1578@171:3>:bool,<f_f_1578@171:2>:int,<f_f_1578@171:5>:int)|- P[<read__1038@173:1>](
          <read__1038@173:0>:bool,<read__1038@173:1>:int)
          
          P[<close__1043@161:1>](<close__1043@161:0>:bool,<close__1043@161:1>:int),
          ((<close__1043@161:1> = 1) && ((<<close__1043@161:2>@169:0> = 2) && <close__1043@161:0>))
          |- P[<<close__1043@161:2>@169:0>](<close__1043@161:0>:bool,
                                            <close__1043@161:1>:int,<<close__1043@161:2>@169:0>:int)
          
          P[<f_1046@152:2>](<f_f_1577@159:1>:bool,<close__1043@161:0>:bool,<f_f_1577@159:0>:int),
          P[<<close__1043@154:2>@157:0>](<f_f_1577@159:1>:bool,<f_f_1577@159:0>:int,<close__1043@161:1>:int)|- P[<close__1043@161:1>](
          <close__1043@161:0>:bool,<close__1043@161:1>:int)
          
          P[<close__1043@154:1>](<close__1043@154:0>:bool,<close__1043@154:1>:int),
          ((<<close__1043@154:2>@157:0> = <close__1043@154:1>) && (not <close__1043@154:0>))
          |- P[<<close__1043@154:2>@157:0>](<close__1043@154:0>:bool,
                                            <close__1043@154:1>:int,<<close__1043@154:2>@157:0>:int)
          
          P[<f_1046@152:2>](<close__1043@154:0>:bool,<f_1046@152:1>:bool,<close__1043@154:1>:int)|- P[<close__1043@154:1>](
          <close__1043@154:0>:bool,<close__1043@154:1>:int)
          
           ((<f_1046@152:2> = 1) && ((not <f_1046@152:0>) && <f_1046@152:1>))
          |- P[<f_1046@152:2>](<f_1046@152:0>:bool,<f_1046@152:1>:bool,
                               <f_1046@152:2>:int)
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        
      end HcSolver.check_validity(124966)[4] (0.004999 sec.)
      solution:
        P[<close__1043@154:1>]($745:bool,$747:int) = true
        P[<<close__1043@154:2>@157:0>]($721:bool,$723:int,$725:int) = ($725 = $723)
        P[<close__1043@161:1>]($740:bool,$742:int) = true
        P[<<close__1043@161:2>@169:0>]($714:bool,$716:int,$718:int) = ($716 = 1)
        P[<f_1046@152:2>]($728:bool,$730:bool,$732:int) = ((not $728) || (($728 && $730) || ($728 && (not $730))))
        P[<fail_1589@189:0>]($699:bool) = false
        P[<read__1038@173:1>]($735:bool,$737:int) = true
        P[<<read__1038@173:2>@176:0>]($707:bool,$709:int,$711:int) = ($709 = $711)
        P[<read__1038@180:1>]($702:bool,$704:int) = ($704 = 1)
    end YhornInterface.solve(124221)[3] (0.362945 sec.)
    
  end RefTypeInfer.infer_etrs(67075)[2] (0.697893 sec.)
  refinement types:
    main_1574: X
    f_1582: v1:int -> X
    f_1583: v1:int -> v2:int -> X
    main_1056: v1:int -> v2:int -> (v3:unit -> X) -> X
    g_1052: v1:int -> v2:bool -> v3:int -> (v4:unit -> X) -> X
    next_1050: v1:int -> (v2:int -> X) -> X
    f_g_1581: v1:int -> v2:int -> v3:bool -> (v4:unit -> X) -> v6:int -> X
    f_1046: v1:bool -> v2:bool -> v3:{v3:int | (1 = v3)} -> (v4:unit -> X) -> X
    close__1043: v1:bool -> v2:int -> (v3:int -> X) -> X
    f_f_1577: v1:int -> v2:bool -> v3:bool -> (v4:unit -> X) -> v6:int -> X
    close__1043: v1:bool -> v2:int -> (v3:int -> X) -> X
    closeit_1041: v1:int -> (v2:int -> X) -> X
    f_f_1578: v1:int -> v2:bool -> v3:int -> v4:bool -> (v5:unit -> X) -> v7:int -> X
    read__1038: v1:bool -> v2:int -> (v3:{v3:int | (v2 = v3)} -> X) -> X
    f_f_1579: v1:int -> v2:bool -> v3:int -> v4:int -> v5:bool -> (v6:unit -> X) -> v8:int -> X
    read__1038: v1:bool -> v2:{v2:int | (1 = v2)} -> (v3:int -> X) -> X
    readit_1036: v1:int -> (v2:int -> X) -> X
    br_readit_1585: v1:bool -> v2:int -> (v3:int -> X) -> X
    fail_1589: v1:{v1:bool | false} -> (v2:unit -> X) -> X
    br_closeit_1587: var598:bool -> var597:int -> (var596:int -> X) -> X
    f_1584: var602:int -> var601:int -> var600:unit -> X
    f_closeit_1576: var607:int -> (var606:int -> X) -> var604:unit -> X
    f_f_1580: var617:int ->
              var616:bool ->
              var615:int -> var614:int -> var613:int -> var612:bool -> (var611:unit -> X) -> var609:int -> X
    f_readit_1575: var620:int -> var619:unit -> X
    k_main_u_1525: var626:int -> var625:int -> (var624:unit -> X) -> var622:unit -> X
    loop_1030: var630:unit -> (var629:unit -> X) -> X
  abstraction types:
    main_1574: X
    f_1582: v1:int -> X
    f_1583: v1:int -> v2:int -> X
    main_1056: v1:int -> v2:int -> (v3:unit -> X) -> X
    g_1052: v1:int -> v2:bool -> v3:int -> (v4:unit -> X) -> X
    next_1050: v1:int -> (v2:int -> X) -> X
    f_g_1581: v1:int -> v2:int -> v3:bool -> (v4:unit -> X) -> v6:int -> X
    f_1046: v1:bool -> v2:bool -> v3:int[v3 -> (1 = v3)] -> (v4:unit -> X) -> X
    close__1043: var631:bool -> var632:int -> (var633:int -> X) -> X
    f_f_1577: v1:int -> v2:bool -> v3:bool -> (v4:unit -> X) -> v6:int -> X
    closeit_1041: v1:int -> (v2:int -> X) -> X
    f_f_1578: v1:int -> v2:bool -> v3:int -> v4:bool -> (v5:unit -> X) -> v7:int -> X
    read__1038: var636:bool ->
                var637:int[var637 -> (1 = var637)] -> (var638:int[var638 -> (
                                                                  var637 = var638)] -> X) -> X
    f_f_1579: v1:int -> v2:bool -> v3:int -> v4:int -> v5:bool -> (v6:unit -> X) -> v8:int -> X
    readit_1036: v1:int -> (v2:int -> X) -> X
    br_readit_1585: v1:bool -> v2:int -> (v3:int -> X) -> X
    fail_1589: v1:bool -> (v2:unit -> X) -> X
    br_closeit_1587: var598:bool -> var597:int -> (var596:int -> X) -> X
    f_1584: var602:int -> var601:int -> var600:unit -> X
    f_closeit_1576: var607:int -> (var606:int -> X) -> var604:unit -> X
    f_f_1580: var617:int ->
              var616:bool ->
              var615:int -> var614:int -> var613:int -> var612:bool -> (var611:unit -> X) -> var609:int -> X
    f_readit_1575: var620:int -> var619:unit -> X
    k_main_u_1525: var626:int -> var625:int -> (var624:unit -> X) -> var622:unit -> X
    loop_1030: var630:unit -> (var629:unit -> X) -> X
  
end AbsTypeInfer.refine(67074)[1] (0.705892 sec.)
DONE!

Prefix of spurious counter-example::
0; 0; 0; 1; 0; 0; 0; 0; 1; 0; 0; 0; 0; 1; 0; 0; 1

Program with abstraction types (CEGAR-cycle 3)::
Main: main_1574
  main_1574 -> (rand_int f_1582)
  br_closeit_1587 b_1588 st_1042 k_closeit_1271 when b_1588 -> (k_closeit_1271 st_1042)
  br_closeit_1587 b_1588 st_1042 k_closeit_1271 when (not b_1588) ->
      (loop_1030 () (f_closeit_1576 st_1042 k_closeit_1271))
  br_readit_1585 b_1586 st_1037 k_readit_1206 when b_1586 -> (k_readit_1206 st_1037)
  br_readit_1585 b_1586 st_1037 k_readit_1206 when (not b_1586) -> (fail_1589 true (f_readit_1575 st_1037))
  close__1043 x_1044 st_1045 k_close__1309 when x_1044 -> (closeit_1041 st_1045 k_close__1309)
  close__1043 x_1044 st_1045 k_close__1309 when (not x_1044) -> (k_close__1309 st_1045)
  closeit_1041 st_1042 k_closeit_1271 when (st_1042 = 1) -> (k_closeit_1271 2)
  closeit_1041 st_1042 k_closeit_1271 when (not (st_1042 = 1)) ->
      (br_closeit_1587 (st_1042 = 3) st_1042 k_closeit_1271)
  f_1046 x_1047 y_1048 st_1049 k_f_1343 -> (close__1043 x_1047 st_1049 (f_f_1577 st_1049 x_1047 y_1048 k_f_1343))
  f_1582 x_1532 -> (rand_int (f_1583 x_1532))
  f_1583 x_1532 x_1545 -> (main_1056 x_1532 x_1545 (f_1584 x_1532 x_1545))
  f_1584 x_1532 x_1545 x_1529 -> end
  f_closeit_1576 st_1042 k_closeit_1271 x_1274 -> (k_closeit_1271 0)
  f_f_1577 st_1049 x_1047 y_1048 k_f_1343 x_1368 ->
      (close__1043 y_1048 x_1368 (f_f_1578 st_1049 x_1047 x_1368 y_1048 k_f_1343))
  f_f_1578 st_1049 x_1047 x_1368 y_1048 k_f_1343 x_1346 ->
      (read__1038 x_1047 st_1049 (f_f_1579 st_1049 x_1047 x_1346 x_1368 y_1048 k_f_1343))
  f_f_1579 st_1049 x_1047 x_1346 x_1368 y_1048 k_f_1343 x_1395 ->
      (read__1038 y_1048 x_1395 (f_f_1580 st_1049 x_1047 x_1346 x_1368 x_1395 y_1048 k_f_1343))
  f_f_1580 st_1049 x_1047 x_1346 x_1368 x_1395 y_1048 k_f_1343 x_1402 -> (f_1046 x_1047 y_1048 x_1402 k_f_1343)
  f_g_1581 b3_1053 st_1055 x_1054 k_g_1440 x_1462 -> (f_1046 x_1054 true x_1462 k_g_1440)
  f_readit_1575 st_1037 x_1209 -> _|_
  fail_1589 b k -> {fail} => (k ())
  g_1052 b3_1053 x_1054 st_1055 k_g_1440 when (b3_1053 > 0) ->
      (next_1050 st_1055 (f_g_1581 b3_1053 st_1055 x_1054 k_g_1440))
  g_1052 b3_1053 x_1054 st_1055 k_g_1440 when (not (b3_1053 > 0)) -> (f_1046 x_1054 false st_1055 k_g_1440)
  k_main_u_1525 b2_1057 b3_1058 k_main_1495 x_1498 -> (k_main_1495 ())
  loop_1030 x_1031 k_loop_1170 -> (loop_1030 () k_loop_1170)
  main_1056 b2_1057 b3_1058 k_main_1495 when (b2_1057 > 0) ->
      (g_1052 b3_1058 true 1 (k_main_u_1525 b2_1057 b3_1058 k_main_1495))
  main_1056 b2_1057 b3_1058 k_main_1495 when (not (b2_1057 > 0)) ->
      (g_1052 b3_1058 false 0 (k_main_u_1525 b2_1057 b3_1058 k_main_1495))
  next_1050 st_1051 k_next_1416 when (st_1051 = 0) -> (k_next_1416 1)
  next_1050 st_1051 k_next_1416 when (not (st_1051 = 0)) -> (k_next_1416 3)
  read__1038 x_1039 st_1040 k_read__1243 when x_1039 -> (readit_1036 st_1040 k_read__1243)
  read__1038 x_1039 st_1040 k_read__1243 when (not x_1039) -> (k_read__1243 st_1040)
  readit_1036 st_1037 k_readit_1206 when (st_1037 = 1) -> (k_readit_1206 1)
  readit_1036 st_1037 k_readit_1206 when (not (st_1037 = 1)) -> (br_readit_1585 (st_1037 = 3) st_1037 k_readit_1206)
Types:
  main_1574 : X
  close__1043 : (x_1:bool[x_1] -> x_2:int[(not x_1); x_2 >= 3] -> (int -> X) -> X)
  f_1046 : (x_1:bool[x_1] -> x_2:bool[x_2] -> x_3:int[x_3 = 1; (not x_1); x_3 >= 3] -> (unit -> X) -> X)
  fail_1589 : (x_1:bool[x_1] -> (unit -> X) -> X)
  loop_1030 : (unit -> (unit -> X) -> X)
  read__1038 : (x_1:bool[x_1] -> x_2:int[x_2 = 1] -> (x_4:int[x_2 = x_4] -> X) -> X)
  
(3-1) Abstracting ... DONE!

(3-2) Checking HORS ... DONE!

Error trace::
  main_1574 ... --> 
  f_1582 ... --> 
  f_1583 ... --> 
  main_1056 [2/2] ... --> 
  g_1052 [2/2] ... --> 
  f_1046 ... --> 
  close__1043 [2/2] ... --> 
  f_f_1577 ... --> 
  close__1043 [2/2] ... --> 
  f_f_1578 ... --> 
  read__1038 [2/2] ... --> 
  f_f_1579 ... --> 
  read__1038 [1/2] ... --> 
  readit_1036 [2/2] ... --> 
  br_readit_1585 [2/2] ... --> 
  fail_1589 ... --> fail -->
  ERROR!

Spurious counter-example::
  0; 0; 0; 1; 1; 0; 1; 0; 1; 0; 1; 0; 0; 1; 1; 0

(3-3) Checking counter-example ... DONE!

(3-4) Discovering predicates ... 
begin AbsTypeInfer.refine(127419)[1]
  program:
    main_1574  | true = ((Random.int 0) f_1582)
    br_closeit_1587 b_1588 st_1042 k_closeit_1271 | b_1588 = (k_closeit_1271 st_1042)
    br_closeit_1587 b_1588 st_1042 k_closeit_1271 | (not b_1588) = (loop_1030
                                                                    ()
                                                                    (
                                                                    f_closeit_1576 st_1042
                                                                    k_closeit_1271))
    br_readit_1585 b_1586 st_1037 k_readit_1206 | b_1586 = (k_readit_1206 st_1037)
    br_readit_1585 b_1586 st_1037 k_readit_1206 | (not b_1586) = (fail_1589 true
                                                                    (f_readit_1575 st_1037))
    close__1043 x_1044 st_1045 k_close__1309 | x_1044 = (closeit_1041 st_1045
                                                                    k_close__1309)
    close__1043 x_1044 st_1045 k_close__1309 | (not x_1044) = (k_close__1309 st_1045)
    closeit_1041 st_1042 k_closeit_1271 | (st_1042 = 1) = (k_closeit_1271 2)
    closeit_1041 st_1042 k_closeit_1271 | (not (st_1042 = 1)) = (br_closeit_1587 (
                                                                    st_1042 = 3)
                                                                    st_1042
                                                                    k_closeit_1271)
    f_1046 x_1047 y_1048 st_1049 k_f_1343 | true = (close__1043
                                                      x_1047
                                                      st_1049
                                                      (f_f_1577 st_1049
                                                                x_1047
                                                                y_1048
                                                                k_f_1343))
    f_1582 x_1532 | true = ((Random.int 0) (f_1583 x_1532))
    f_1583 x_1532 x_1545 | true = (main_1056 x_1532
                                             x_1545
                                             (f_1584 x_1532
                                                     x_1545))
    f_1584 x_1532 x_1545 x_1529 | true = end
    f_closeit_1576 st_1042 k_closeit_1271 x_1274 | true = (k_closeit_1271 0)
    f_f_1577 st_1049 x_1047 y_1048 k_f_1343 x_1368 | true = (close__1043
                                                               y_1048
                                                               x_1368
                                                               (f_f_1578 st_1049
                                                                    x_1047
                                                                    x_1368
                                                                    y_1048
                                                                    k_f_1343))
    f_f_1578 st_1049 x_1047 x_1368 y_1048 k_f_1343 x_1346 | true = (read__1038
                                                                    x_1047
                                                                    st_1049
                                                                    (
                                                                    f_f_1579
                                                                    st_1049
                                                                    x_1047
                                                                    x_1346
                                                                    x_1368
                                                                    y_1048
                                                                    k_f_1343))
    f_f_1579 st_1049 x_1047 x_1346 x_1368 y_1048 k_f_1343 x_1395 | true = (
    read__1038 y_1048
               x_1395
               (f_f_1580 st_1049
                         x_1047
                         x_1346
                         x_1368
                         x_1395
                         y_1048
                         k_f_1343))
    f_f_1580 st_1049 x_1047 x_1346 x_1368 x_1395 y_1048 k_f_1343 x_1402 | true = (
    f_1046 x_1047
           y_1048
           x_1402
           k_f_1343)
    f_g_1581 b3_1053 st_1055 x_1054 k_g_1440 x_1462 | true = (f_1046 x_1054
                                                                    true
                                                                    x_1462
                                                                    k_g_1440)
    f_readit_1575 st_1037 x_1209 | true = bot
    fail_1589 b k | true = (fail ())
    g_1052 b3_1053 x_1054 st_1055 k_g_1440 | (b3_1053 > 0) = (next_1050
                                                                st_1055
                                                                (f_g_1581 b3_1053
                                                                    st_1055
                                                                    x_1054
                                                                    k_g_1440))
    g_1052 b3_1053 x_1054 st_1055 k_g_1440 | (not (b3_1053 > 0)) = (f_1046 x_1054
                                                                    false
                                                                    st_1055
                                                                    k_g_1440)
    k_main_u_1525 b2_1057 b3_1058 k_main_1495 x_1498 | true = (k_main_1495 ())
    loop_1030 x_1031 k_loop_1170 | true = (loop_1030 ()
                                                     k_loop_1170)
    main_1056 b2_1057 b3_1058 k_main_1495 | (b2_1057 > 0) = (g_1052
                                                               b3_1058
                                                               true
                                                               1
                                                               (k_main_u_1525 b2_1057
                                                                    b3_1058
                                                                    k_main_1495))
    main_1056 b2_1057 b3_1058 k_main_1495 | (not (b2_1057 > 0)) = (g_1052
                                                                    b3_1058
                                                                    false
                                                                    0
                                                                    (
                                                                    k_main_u_1525 b2_1057
                                                                    b3_1058
                                                                    k_main_1495))
    next_1050 st_1051 k_next_1416 | (st_1051 = 0) = (k_next_1416 1)
    next_1050 st_1051 k_next_1416 | (not (st_1051 = 0)) = (k_next_1416 3)
    read__1038 x_1039 st_1040 k_read__1243 | x_1039 = (readit_1036 st_1040
                                                                   k_read__1243)
    read__1038 x_1039 st_1040 k_read__1243 | (not x_1039) = (k_read__1243 st_1040)
    readit_1036 st_1037 k_readit_1206 | (st_1037 = 1) = (k_readit_1206 1)
    readit_1036 st_1037 k_readit_1206 | (not (st_1037 = 1)) = (br_readit_1585 (
                                                                    st_1037 = 3)
                                                                    st_1037
                                                                    k_readit_1206)
    main_1574:X
    br_closeit_1587:bool -> int -> (int -> X) -> X
    br_readit_1585:bool -> int -> (int -> X) -> X
    close__1043:bool -> int -> (int -> X) -> X
    closeit_1041:int -> (int -> X) -> X
    f_1046:bool -> bool -> int -> (unit -> X) -> X
    f_1582:int -> X
    f_1583:int -> int -> X
    f_1584:int -> int -> unit -> X
    f_closeit_1576:int -> (int -> X) -> unit -> X
    f_f_1577:int -> bool -> bool -> (unit -> X) -> int -> X
    f_f_1578:int -> bool -> int -> bool -> (unit -> X) -> int -> X
    f_f_1579:int -> bool -> int -> int -> bool -> (unit -> X) -> int -> X
    f_f_1580:int -> bool -> int -> int -> int -> bool -> (unit -> X) -> int -> X
    f_g_1581:int -> int -> bool -> (unit -> X) -> int -> X
    f_readit_1575:int -> unit -> X
    fail_1589:bool -> (unit -> X) -> X
    g_1052:int -> bool -> int -> (unit -> X) -> X
    k_main_u_1525:int -> int -> (unit -> X) -> unit -> X
    loop_1030:unit -> (unit -> X) -> X
    main_1056:int -> int -> (unit -> X) -> X
    next_1050:int -> (int -> X) -> X
    read__1038:bool -> int -> (int -> X) -> X
    readit_1036:int -> (int -> X) -> X
  inlined functions: br_closeit_1587,br_readit_1585,closeit_1041,f_1582,f_1583,f_1584,f_closeit_1576,f_f_1577,f_f_1578,f_f_1579,f_f_1580,f_g_1581,f_readit_1575,g_1052,k_main_u_1525,main_1056,next_1050,readit_1036
  counterexample: 0:0:0:1:1:0:1:0:1:0:1:0:0:1:1:0
  error traces:
    [true.nop(<f_1582@195:0> = var641)
     [true.nop((<f_1583@198:0> = <f_1582@195:0>) && (<f_1583@198:1> = var642))
      [true.((<main_1056@200:0> = <f_1583@198:0>) && (<main_1056@200:1> = <f_1583@198:1>))
       [(not (<main_1056@200:0> > 0)).
        ((<g_1052@203:0> = <main_1056@200:1>) && ((<g_1052@203:1> = false) && (<g_1052@203:2> = 0)))
        [(not (<g_1052@203:0> > 0)).
         ((<f_1046@206:0> = <g_1052@203:1>) && ((<f_1046@206:1> = false) && (<f_1046@206:2> = <g_1052@203:2>)))
         [true.((<close__1043@208:0> = <f_1046@206:0>) && (<close__1043@208:1> = <f_1046@206:2>))
          [(not <close__1043@208:0>).(<<close__1043@208:2>@211:0> = <close__1043@208:1>)
           [true.
            ((<f_f_1577@213:0> = <f_1046@206:2>) &&
             ((<f_f_1577@213:1> = <f_1046@206:0>) &&
              ((<f_f_1577@213:2> = <f_1046@206:1>) && (<f_f_1577@213:4> = <<close__1043@208:2>@211:0>))))
            [true.((<close__1043@215:0> = <f_f_1577@213:2>) && (<close__1043@215:1> = <f_f_1577@213:4>))
             [(not <close__1043@215:0>).(<<close__1043@215:2>@218:0> = <close__1043@215:1>)
              [true.
               ((<f_f_1578@220:0> = <f_f_1577@213:0>) &&
                ((<f_f_1578@220:1> = <f_f_1577@213:1>) &&
                 ((<f_f_1578@220:2> = <f_f_1577@213:4>) &&
                  ((<f_f_1578@220:3> = <f_f_1577@213:2>) && (<f_f_1578@220:5> = <<close__1043@215:2>@218:0>)))))
               [true.((<read__1038@222:0> = <f_f_1578@220:1>) && (<read__1038@222:1> = <f_f_1578@220:0>))
                [(not <read__1038@222:0>).(<<read__1038@222:2>@225:0> = <read__1038@222:1>)
                 [true.
                  ((<f_f_1579@227:0> = <f_f_1578@220:0>) &&
                   ((<f_f_1579@227:1> = <f_f_1578@220:1>) &&
                    ((<f_f_1579@227:2> = <f_f_1578@220:5>) &&
                     ((<f_f_1579@227:3> = <f_f_1578@220:2>) &&
                      ((<f_f_1579@227:4> = <f_f_1578@220:3>) && (<f_f_1579@227:6> = <<read__1038@222:2>@225:0>))))))
                  [true.((<read__1038@229:0> = <f_f_1579@227:4>) && (<read__1038@229:1> = <f_f_1579@227:6>))
                   [<read__1038@229:0>.(<readit_1036@232:0> = <read__1038@229:1>)
                    [(not (<readit_1036@232:0> = 1)).
                     ((<br_readit_1585@235:0> = (<readit_1036@232:0> = 3)) &&
                      (<br_readit_1585@235:1> = <readit_1036@232:0>))
                     [(not <br_readit_1585@235:0>).(<fail_1589@238:0> = true)[true.error
  begin RefTypeInfer.infer_etrs(127420)[2]
    horn clauses:
      P[<fail_1589@238:0>](<fail_1589@238:0>:bool)|- bot
      
      P[<br_readit_1585@235:1>](false:bool,<br_readit_1585@235:1>:int), <fail_1589@238:0>
      |- P[<fail_1589@238:0>](<fail_1589@238:0>:bool)
      
      P[<readit_1036@232:0>](<br_readit_1585@235:1>:int),
      ((<br_readit_1585@235:1> <> 1) && (<br_readit_1585@235:0> = (<br_readit_1585@235:1> = 3)))
      |- P[<br_readit_1585@235:1>](<br_readit_1585@235:0>:bool,<br_readit_1585@235:1>:int)
      
      P[<read__1038@229:1>](true:bool,<readit_1036@232:0>:int)|- P[<readit_1036@232:0>](<readit_1036@232:0>:int)
      
      P[<f_f_1579@227:6>](<f_f_1579@227:0>:int,<f_f_1579@227:1>:bool,<f_f_1579@227:2>:int,<f_f_1579@227:3>:int,<read__1038@229:0>:bool,<read__1038@229:1>:int)|- P[<read__1038@229:1>](
      <read__1038@229:0>:bool,<read__1038@229:1>:int)
      
      P[<f_f_1578@220:5>](<f_f_1579@227:0>:int,<f_f_1579@227:1>:bool,<f_f_1579@227:3>:int,<f_f_1579@227:4>:bool,<f_f_1579@227:2>:int),
      P[<<read__1038@222:2>@225:0>](<f_f_1579@227:1>:bool,<f_f_1579@227:0>:int,<f_f_1579@227:6>:int)|- P[<f_f_1579@227:6>](
      <f_f_1579@227:0>:int,<f_f_1579@227:1>:bool,<f_f_1579@227:2>:int,
      <f_f_1579@227:3>:int,<f_f_1579@227:4>:bool,<f_f_1579@227:6>:int)
      
      P[<read__1038@222:1>](<read__1038@222:0>:bool,<read__1038@222:1>:int),
      ((<<read__1038@222:2>@225:0> = <read__1038@222:1>) && (not <read__1038@222:0>))
      |- P[<<read__1038@222:2>@225:0>](<read__1038@222:0>:bool,<read__1038@222:1>:int,
                                       <<read__1038@222:2>@225:0>:int)
      
      P[<f_f_1578@220:5>](<read__1038@222:1>:int,<read__1038@222:0>:bool,<f_f_1578@220:2>:int,<f_f_1578@220:3>:bool,<f_f_1578@220:5>:int)|- P[<read__1038@222:1>](
      <read__1038@222:0>:bool,<read__1038@222:1>:int)
      
      P[<f_f_1577@213:4>](<f_f_1578@220:0>:int,<f_f_1578@220:1>:bool,<f_f_1578@220:3>:bool,<f_f_1578@220:2>:int),
      P[<<close__1043@215:2>@218:0>](<f_f_1578@220:3>:bool,<f_f_1578@220:2>:int,<f_f_1578@220:5>:int)|- P[<f_f_1578@220:5>](
      <f_f_1578@220:0>:int,<f_f_1578@220:1>:bool,<f_f_1578@220:2>:int,
      <f_f_1578@220:3>:bool,<f_f_1578@220:5>:int)
      
      P[<close__1043@215:1>](<close__1043@215:0>:bool,<close__1043@215:1>:int),
      ((<<close__1043@215:2>@218:0> = <close__1043@215:1>) && (not <close__1043@215:0>))
      |- P[<<close__1043@215:2>@218:0>](<close__1043@215:0>:bool,<close__1043@215:1>:int,
                                        <<close__1043@215:2>@218:0>:int)
      
      P[<f_f_1577@213:4>](<f_f_1577@213:0>:int,<f_f_1577@213:1>:bool,<close__1043@215:0>:bool,<close__1043@215:1>:int)|- P[<close__1043@215:1>](
      <close__1043@215:0>:bool,<close__1043@215:1>:int)
      
      P[<f_1046@206:2>](<f_f_1577@213:1>:bool,<f_f_1577@213:2>:bool,<f_f_1577@213:0>:int),
      P[<<close__1043@208:2>@211:0>](<f_f_1577@213:1>:bool,<f_f_1577@213:0>:int,<f_f_1577@213:4>:int)|- P[<f_f_1577@213:4>](
      <f_f_1577@213:0>:int,<f_f_1577@213:1>:bool,<f_f_1577@213:2>:bool,
      <f_f_1577@213:4>:int)
      
      P[<close__1043@208:1>](<close__1043@208:0>:bool,<close__1043@208:1>:int),
      ((<<close__1043@208:2>@211:0> = <close__1043@208:1>) && (not <close__1043@208:0>))
      |- P[<<close__1043@208:2>@211:0>](<close__1043@208:0>:bool,<close__1043@208:1>:int,
                                        <<close__1043@208:2>@211:0>:int)
      
      P[<f_1046@206:2>](<close__1043@208:0>:bool,<f_1046@206:1>:bool,<close__1043@208:1>:int)|- P[<close__1043@208:1>](
      <close__1043@208:0>:bool,<close__1043@208:1>:int)
      
      P[<g_1052@203:2>](<g_1052@203:0>:int,<f_1046@206:0>:bool,<f_1046@206:2>:int),
      ((<g_1052@203:0> <= 0) && (not <f_1046@206:1>))
      |- P[<f_1046@206:2>](<f_1046@206:0>:bool,<f_1046@206:1>:bool,<f_1046@206:2>:int)
      
      P[<main_1056@200:1>](<main_1056@200:0>:int,<g_1052@203:0>:int),
      ((<g_1052@203:2> = 0) && ((<main_1056@200:0> <= 0) && (not <g_1052@203:1>)))
      |- P[<g_1052@203:2>](<g_1052@203:0>:int,<g_1052@203:1>:bool,<g_1052@203:2>:int)
      
      P[<f_1583@198:1>](<main_1056@200:0>:int,<main_1056@200:1>:int)|- P[<main_1056@200:1>](
      <main_1056@200:0>:int,<main_1056@200:1>:int)
      
      P[<f_1582@195:0>](<f_1583@198:0>:int)|- P[<f_1583@198:1>](<f_1583@198:0>:int,
                                                                <f_1583@198:1>:int)
      
      |- P[<f_1582@195:0>](<f_1582@195:0>:int)
    call trees:
      <main_1574@192>
        <f_1582@195>
          <f_1583@198>
            <main_1056@200>
              <g_1052@203>
                <f_1046@206>
                  <close__1043@208>
                  </<close__1043@208:2>@211>
                  <f_f_1577@213>
                    <close__1043@215>
                    </<close__1043@215:2>@218>
                    <f_f_1578@220>
                      <read__1038@222>
                      </<read__1038@222:2>@225>
                      <f_f_1579@227>
                        <read__1038@229>
                          <readit_1036@232>
                            <br_readit_1585@235>
                              <fail_1589@238>
    inlined horn clauses:
      P[<fail_1589@238:0>](<fail_1589@238:0>:bool)|- bot
      
      P[<read__1038@229:1>](true:bool,<br_readit_1585@235:1>:int),
      ((<br_readit_1585@235:1> <> 1) && ((<br_readit_1585@235:1> <> 3) && <fail_1589@238:0>))
      |- P[<fail_1589@238:0>](<fail_1589@238:0>:bool)
      
      P[<f_1046@206:2>](<f_f_1579@227:1>:bool,<read__1038@229:0>:bool,<f_f_1579@227:0>:int),
      P[<<close__1043@208:2>@211:0>](<f_f_1579@227:1>:bool,<f_f_1579@227:0>:int,<f_f_1579@227:3>:int),
      P[<<close__1043@215:2>@218:0>](<read__1038@229:0>:bool,<f_f_1579@227:3>:int,<f_f_1579@227:2>:int),
      P[<<read__1038@222:2>@225:0>](<f_f_1579@227:1>:bool,<f_f_1579@227:0>:int,<read__1038@229:1>:int)|- P[<read__1038@229:1>](
      <read__1038@229:0>:bool,<read__1038@229:1>:int)
      
      P[<read__1038@222:1>](<read__1038@222:0>:bool,<read__1038@222:1>:int),
      ((<<read__1038@222:2>@225:0> = <read__1038@222:1>) && (not <read__1038@222:0>))
      |- P[<<read__1038@222:2>@225:0>](<read__1038@222:0>:bool,<read__1038@222:1>:int,
                                       <<read__1038@222:2>@225:0>:int)
      
      P[<f_1046@206:2>](<read__1038@222:0>:bool,<f_f_1578@220:3>:bool,<read__1038@222:1>:int),
      P[<<close__1043@208:2>@211:0>](<read__1038@222:0>:bool,<read__1038@222:1>:int,<f_f_1578@220:2>:int),
      P[<<close__1043@215:2>@218:0>](<f_f_1578@220:3>:bool,<f_f_1578@220:2>:int,<f_f_1578@220:5>:int)|- P[<read__1038@222:1>](
      <read__1038@222:0>:bool,<read__1038@222:1>:int)
      
      P[<close__1043@215:1>](<close__1043@215:0>:bool,<close__1043@215:1>:int),
      ((<<close__1043@215:2>@218:0> = <close__1043@215:1>) && (not <close__1043@215:0>))
      |- P[<<close__1043@215:2>@218:0>](<close__1043@215:0>:bool,<close__1043@215:1>:int,
                                        <<close__1043@215:2>@218:0>:int)
      
      P[<f_1046@206:2>](<f_f_1577@213:1>:bool,<close__1043@215:0>:bool,<f_f_1577@213:0>:int),
      P[<<close__1043@208:2>@211:0>](<f_f_1577@213:1>:bool,<f_f_1577@213:0>:int,<close__1043@215:1>:int)|- P[<close__1043@215:1>](
      <close__1043@215:0>:bool,<close__1043@215:1>:int)
      
      P[<close__1043@208:1>](<close__1043@208:0>:bool,<close__1043@208:1>:int),
      ((<<close__1043@208:2>@211:0> = <close__1043@208:1>) && (not <close__1043@208:0>))
      |- P[<<close__1043@208:2>@211:0>](<close__1043@208:0>:bool,<close__1043@208:1>:int,
                                        <<close__1043@208:2>@211:0>:int)
      
      P[<f_1046@206:2>](<close__1043@208:0>:bool,<f_1046@206:1>:bool,<close__1043@208:1>:int)|- P[<close__1043@208:1>](
      <close__1043@208:0>:bool,<close__1043@208:1>:int)
      
       ((<f_1046@206:2> = 0) && ((not <f_1046@206:1>) && (not <f_1046@206:0>)))
      |- P[<f_1046@206:2>](<f_1046@206:0>:bool,<f_1046@206:1>:bool,<f_1046@206:2>:int)
    begin ParamSubstInfer.infer(130119)[3]
      
    end ParamSubstInfer.infer(130119)[3] (0.127980 sec.)
    inferred extra parameters:
      
    begin RefTypeInfer.elim_coeffs(130121)[3]
      
    end RefTypeInfer.elim_coeffs(130121)[3] (0.003000 sec.)
    begin GenHcSolver.solve(130609)[3]
      Horn clauses:
        P[<fail_1589@238:0>](<fail_1589@238:0>:bool)|- bot
        
        P[<read__1038@229:1>](true:bool,<br_readit_1585@235:1>:int),
        ((<br_readit_1585@235:1> <> 1) && ((<br_readit_1585@235:1> <> 3) && <fail_1589@238:0>))
        |- P[<fail_1589@238:0>](<fail_1589@238:0>:bool)
        
        P[<f_1046@206:2>](<f_f_1579@227:1>:bool,<read__1038@229:0>:bool,<f_f_1579@227:0>:int),
        P[<<close__1043@208:2>@211:0>](<f_f_1579@227:1>:bool,<f_f_1579@227:0>:int,<f_f_1579@227:3>:int),
        P[<<close__1043@215:2>@218:0>](<read__1038@229:0>:bool,<f_f_1579@227:3>:int,<f_f_1579@227:2>:int),
        P[<<read__1038@222:2>@225:0>](<f_f_1579@227:1>:bool,<f_f_1579@227:0>:int,<read__1038@229:1>:int)|- P[<read__1038@229:1>](
        <read__1038@229:0>:bool,<read__1038@229:1>:int)
        
        P[<read__1038@222:1>](<read__1038@222:0>:bool,<read__1038@222:1>:int),
        ((<<read__1038@222:2>@225:0> = <read__1038@222:1>) && (not <read__1038@222:0>))
        |- P[<<read__1038@222:2>@225:0>](<read__1038@222:0>:bool,<read__1038@222:1>:int,
                                         <<read__1038@222:2>@225:0>:int)
        
        P[<f_1046@206:2>](<read__1038@222:0>:bool,<f_f_1578@220:3>:bool,<read__1038@222:1>:int),
        P[<<close__1043@208:2>@211:0>](<read__1038@222:0>:bool,<read__1038@222:1>:int,<f_f_1578@220:2>:int),
        P[<<close__1043@215:2>@218:0>](<f_f_1578@220:3>:bool,<f_f_1578@220:2>:int,<f_f_1578@220:5>:int)|- P[<read__1038@222:1>](
        <read__1038@222:0>:bool,<read__1038@222:1>:int)
        
        P[<close__1043@215:1>](<close__1043@215:0>:bool,<close__1043@215:1>:int),
        ((<<close__1043@215:2>@218:0> = <close__1043@215:1>) && (not <close__1043@215:0>))
        |- P[<<close__1043@215:2>@218:0>](<close__1043@215:0>:bool,<close__1043@215:1>:int,
                                          <<close__1043@215:2>@218:0>:int)
        
        P[<f_1046@206:2>](<f_f_1577@213:1>:bool,<close__1043@215:0>:bool,<f_f_1577@213:0>:int),
        P[<<close__1043@208:2>@211:0>](<f_f_1577@213:1>:bool,<f_f_1577@213:0>:int,<close__1043@215:1>:int)|- P[<close__1043@215:1>](
        <close__1043@215:0>:bool,<close__1043@215:1>:int)
        
        P[<close__1043@208:1>](<close__1043@208:0>:bool,<close__1043@208:1>:int),
        ((<<close__1043@208:2>@211:0> = <close__1043@208:1>) && (not <close__1043@208:0>))
        |- P[<<close__1043@208:2>@211:0>](<close__1043@208:0>:bool,<close__1043@208:1>:int,
                                          <<close__1043@208:2>@211:0>:int)
        
        P[<f_1046@206:2>](<close__1043@208:0>:bool,<f_1046@206:1>:bool,<close__1043@208:1>:int)|- P[<close__1043@208:1>](
        <close__1043@208:0>:bool,<close__1043@208:1>:int)
        
         ((<f_1046@206:2> = 0) && ((not <f_1046@206:1>) && (not <f_1046@206:0>)))
        |- P[<f_1046@206:2>](<f_1046@206:0>:bool,<f_1046@206:1>:bool,
                             <f_1046@206:2>:int)
      lower bounds:
        P[<f_1046@206:2>](<f_1046@206:0>:bool,<f_1046@206:1>:bool,<f_1046@206:2>:int) =
        ((<f_1046@206:2> = 0) && ((not <f_1046@206:1>) && (not <f_1046@206:0>)))
        P[<close__1043@208:1>](<close__1043@208:0>:bool,<close__1043@208:1>:int) =
        ((<close__1043@208:1> = 0) && (not <close__1043@208:0>))
        P[<<close__1043@208:2>@211:0>](<close__1043@208:0>:bool,<close__1043@208:1>:int,<<close__1043@208:2>@211:0>:int) =
        ((<close__1043@208:1> = 0) &&
         ((<<close__1043@208:2>@211:0> = <close__1043@208:1>) && (not <close__1043@208:0>)))
        P[<close__1043@215:1>](<close__1043@215:0>:bool,<close__1043@215:1>:int) =
        ((<close__1043@215:1> = 0) && (not <close__1043@215:0>))
        P[<<close__1043@215:2>@218:0>](<close__1043@215:0>:bool,<close__1043@215:1>:int,<<close__1043@215:2>@218:0>:int) =
        ((<close__1043@215:1> = 0) &&
         ((<<close__1043@215:2>@218:0> = <close__1043@215:1>) && (not <close__1043@215:0>)))
        P[<read__1038@222:1>](<read__1038@222:0>:bool,<read__1038@222:1>:int) =
        ((<read__1038@222:1> = 0) && (not <read__1038@222:0>))
        P[<<read__1038@222:2>@225:0>](<read__1038@222:0>:bool,<read__1038@222:1>:int,<<read__1038@222:2>@225:0>:int) =
        ((<read__1038@222:1> = 0) && ((<<read__1038@222:2>@225:0> = <read__1038@222:1>) && (not <read__1038@222:0>)))
        P[<read__1038@229:1>](<read__1038@229:0>:bool,<read__1038@229:1>:int) =
        ((<read__1038@229:1> = 0) && (not <read__1038@229:0>))
        P[<fail_1589@238:0>](<fail_1589@238:0>:bool) = false
      upper bounds:
        P[<read__1038@229:1>](var647:bool,var648:int) = ((var648 = 1) || ((var648 = 3) || (not var647)))
        P[<read__1038@222:1>](var644:bool,var645:int) = true
      begin GenHcSolver.classify_pids(136389)[4]
        output:
          [<read__1038@222:1>;<read__1038@229:1>]
      end GenHcSolver.classify_pids(136389)[4] (0.001000 sec.)
      begin ApronInterface.convex_hull_interpolate(136417)[4]
        lb:((<read__1038@222:1> = 0) && (not <read__1038@222:0>))
        nub:(not ((<read__1038@222:1> = 1) || ((<read__1038@222:1> = 3) || (not <read__1038@222:0>))))
        lb':((<read__1038@222:1> = 0) && (not <read__1038@222:0>))
        nub':(not ((<read__1038@222:1> = 1) || ((<read__1038@222:1> = 3) || (not <read__1038@222:0>))))
        begin InterpProver.interpolate(136418)[5]
          begin InterpProver.interpolate_fresh(136419)[6]
            begin InterpProver.interpolate_log(136420)[7]
              input1: ((<read__1038@222:1> = 0) && (not <read__1038@222:0>))
              input2: (not ((<read__1038@222:1> = 1) || ((<read__1038@222:1> = 3) || (not <read__1038@222:0>))))
              begin InterpProver.interpolate_check(136421)[8]
                begin InterpProver.interpolate_simplify(136422)[9]
                  begin InterpProver.interpolate_quick(136489)[10]
                    begin CsisatInterface.interpolate_csisat_wrap(136498)[11]
                      begin CsisatInterface.interpolate_csisat_post_process(136499)[12]
                        begin CsisatInterface.interpolate_csisat_log(136500)[13]
                          input1: (not v_sep_read__1038_sep_222_sep_0 = true() & 0 = v_sep_read__1038_sep_222_sep_1)
                          input2: (not 1 = v_sep_read__1038_sep_222_sep_1 & not 3 = v_sep_read__1038_sep_222_sep_1 & v_sep_read__1038_sep_222_sep_0 = true())
                          begin CsisatInterface.interpolate_csisat_raw(136501)[14]
                            
                          end CsisatInterface.interpolate_csisat_raw(136501)[14] (0.000000 sec.)
                          output: not v_sep_read__1038_sep_222_sep_0 = true()
                          
                        end CsisatInterface.interpolate_csisat_log(136500)[13] (0.000000 sec.)
                        after simplification: not v_sep_read__1038_sep_222_sep_0 = true()
                        after dnf conversion: ((not v_sep_read__1038_sep_222_sep_0 = true()))
                        
                      end CsisatInterface.interpolate_csisat_post_process(136499)[12] (0.000000 sec.)
                      
                    end CsisatInterface.interpolate_csisat_wrap(136498)[11] (0.000000 sec.)
                    
                  end InterpProver.interpolate_quick(136489)[10] (0.001000 sec.)
                  
                end InterpProver.interpolate_simplify(136422)[9] (0.001000 sec.)
                
              end InterpProver.interpolate_check(136421)[8] (0.001000 sec.)
              output: (not <read__1038@222:0>)
            end InterpProver.interpolate_log(136420)[7] (0.001000 sec.)
            
          end InterpProver.interpolate_fresh(136419)[6] (0.001000 sec.)
          
        end InterpProver.interpolate(136418)[5] (0.001000 sec.)
        output:
          P[<read__1038@222:1>](<read__1038@222:0>:bool,<read__1038@222:1>:int) = (not <read__1038@222:0>)
          P[<read__1038@229:1>](<read__1038@222:0>:bool,<read__1038@222:1>:int) = (not <read__1038@222:0>)
      end ApronInterface.convex_hull_interpolate(136417)[4] (0.001000 sec.)
      Horn clauses:
        P[<fail_1589@238:0>](<fail_1589@238:0>:bool)|- bot
        
        P[<f_1046@206:2>](<f_f_1579@227:1>:bool,true:bool,<f_f_1579@227:0>:int),
        P[<<close__1043@208:2>@211:0>](<f_f_1579@227:1>:bool,<f_f_1579@227:0>:int,<f_f_1579@227:3>:int),
        P[<<close__1043@215:2>@218:0>](true:bool,<f_f_1579@227:3>:int,<f_f_1579@227:2>:int),
        P[<<read__1038@222:2>@225:0>](<f_f_1579@227:1>:bool,<f_f_1579@227:0>:int,<read__1038@229:1>:int)|- bot
        
         ((<<read__1038@222:2>@225:0> = <read__1038@222:1>) && (not <read__1038@222:0>))
        |- P[<<read__1038@222:2>@225:0>](<read__1038@222:0>:bool,<read__1038@222:1>:int,
                                         <<read__1038@222:2>@225:0>:int)
        
        P[<f_1046@206:2>](true:bool,<f_f_1578@220:3>:bool,<read__1038@222:1>:int),
        P[<<close__1043@208:2>@211:0>](true:bool,<read__1038@222:1>:int,<f_f_1578@220:2>:int),
        P[<<close__1043@215:2>@218:0>](<f_f_1578@220:3>:bool,<f_f_1578@220:2>:int,<f_f_1578@220:5>:int)|- bot
        
        P[<close__1043@215:1>](<close__1043@215:0>:bool,<close__1043@215:1>:int),
        ((<<close__1043@215:2>@218:0> = <close__1043@215:1>) && (not <close__1043@215:0>))
        |- P[<<close__1043@215:2>@218:0>](<close__1043@215:0>:bool,<close__1043@215:1>:int,
                                          <<close__1043@215:2>@218:0>:int)
        
        P[<f_1046@206:2>](<f_f_1577@213:1>:bool,<close__1043@215:0>:bool,<f_f_1577@213:0>:int),
        P[<<close__1043@208:2>@211:0>](<f_f_1577@213:1>:bool,<f_f_1577@213:0>:int,<close__1043@215:1>:int)|- P[<close__1043@215:1>](
        <close__1043@215:0>:bool,<close__1043@215:1>:int)
        
        P[<close__1043@208:1>](<close__1043@208:0>:bool,<close__1043@208:1>:int),
        ((<<close__1043@208:2>@211:0> = <close__1043@208:1>) && (not <close__1043@208:0>))
        |- P[<<close__1043@208:2>@211:0>](<close__1043@208:0>:bool,<close__1043@208:1>:int,
                                          <<close__1043@208:2>@211:0>:int)
        
        P[<f_1046@206:2>](<close__1043@208:0>:bool,<f_1046@206:1>:bool,<close__1043@208:1>:int)|- P[<close__1043@208:1>](
        <close__1043@208:0>:bool,<close__1043@208:1>:int)
        
         ((<f_1046@206:2> = 0) && ((not <f_1046@206:1>) && (not <f_1046@206:0>)))
        |- P[<f_1046@206:2>](<f_1046@206:0>:bool,<f_1046@206:1>:bool,
                             <f_1046@206:2>:int)
      lower bounds:
        P[<<read__1038@222:2>@225:0>](<read__1038@222:0>:bool,<read__1038@222:1>:int,<<read__1038@222:2>@225:0>:int) =
        ((<<read__1038@222:2>@225:0> = <read__1038@222:1>) && (not <read__1038@222:0>))
        P[<f_1046@206:2>](<f_1046@206:0>:bool,<f_1046@206:1>:bool,<f_1046@206:2>:int) =
        ((<f_1046@206:2> = 0) && ((not <f_1046@206:1>) && (not <f_1046@206:0>)))
        P[<fail_1589@238:0>](var652:bool) = false
        P[<close__1043@208:1>](<close__1043@208:0>:bool,<close__1043@208:1>:int) =
        ((<close__1043@208:1> = 0) && (not <close__1043@208:0>))
        P[<<close__1043@208:2>@211:0>](<close__1043@208:0>:bool,<close__1043@208:1>:int,<<close__1043@208:2>@211:0>:int) =
        ((<close__1043@208:1> = 0) &&
         ((<<close__1043@208:2>@211:0> = <close__1043@208:1>) && (not <close__1043@208:0>)))
        P[<close__1043@215:1>](<close__1043@215:0>:bool,<close__1043@215:1>:int) =
        ((<close__1043@215:1> = 0) && (not <close__1043@215:0>))
        P[<<close__1043@215:2>@218:0>](<close__1043@215:0>:bool,<close__1043@215:1>:int,<<close__1043@215:2>@218:0>:int) =
        ((<close__1043@215:1> = 0) &&
         ((<<close__1043@215:2>@218:0> = <close__1043@215:1>) && (not <close__1043@215:0>)))
      upper bounds:
        P[<<close__1043@215:2>@218:0>](var660:bool,var661:int,var662:int) = true
        P[<<close__1043@208:2>@211:0>](var655:bool,var656:int,var657:int) = true
      begin GenHcSolver.classify_pids(142790)[4]
        output:
          [<<close__1043@208:2>@211:0>;<<close__1043@215:2>@218:0>]
      end GenHcSolver.classify_pids(142790)[4] (0.000000 sec.)
      begin ApronInterface.convex_hull_interpolate(142801)[4]
        lb:((<close__1043@208:1> = 0) &&
            ((<<close__1043@208:2>@211:0> = <close__1043@208:1>) && (not <close__1043@208:0>)))
        nub:false
        lb':((<close__1043@208:1> = 0) &&
             ((<<close__1043@208:2>@211:0> = <close__1043@208:1>) && (not <close__1043@208:0>)))
        nub':false
        begin InterpProver.interpolate(142802)[5]
          begin InterpProver.interpolate_fresh(142803)[6]
            begin InterpProver.interpolate_log(142804)[7]
              input1: ((<close__1043@208:1> = 0) &&
                       ((<<close__1043@208:2>@211:0> = <close__1043@208:1>) && (not <close__1043@208:0>)))
              input2: false
              begin InterpProver.interpolate_check(142805)[8]
                begin InterpProver.interpolate_simplify(142806)[9]
                  begin InterpProver.interpolate_quick(142844)[10]
                    
                  end InterpProver.interpolate_quick(142844)[10] (0.000000 sec.)
                  
                end InterpProver.interpolate_simplify(142806)[9] (0.000000 sec.)
                
              end InterpProver.interpolate_check(142805)[8] (0.000000 sec.)
              output: true
            end InterpProver.interpolate_log(142804)[7] (0.001000 sec.)
            
          end InterpProver.interpolate_fresh(142803)[6] (0.001000 sec.)
          
        end InterpProver.interpolate(142802)[5] (0.001000 sec.)
        output:
          P[<<close__1043@208:2>@211:0>](<close__1043@208:0>:bool,<close__1043@208:1>:int,<<close__1043@208:2>@211:0>:int) =
          true
          P[<<close__1043@215:2>@218:0>](<close__1043@208:0>:bool,<close__1043@208:1>:int,<<close__1043@208:2>@211:0>:int) =
          true
      end ApronInterface.convex_hull_interpolate(142801)[4] (0.001000 sec.)
      Horn clauses:
        P[<fail_1589@238:0>](<fail_1589@238:0>:bool)|- bot
        
        P[<f_1046@206:2>](<f_f_1579@227:1>:bool,true:bool,<f_f_1579@227:0>:int),
        P[<<read__1038@222:2>@225:0>](<f_f_1579@227:1>:bool,<f_f_1579@227:0>:int,<read__1038@229:1>:int)|- bot
        
         ((<<read__1038@222:2>@225:0> = <read__1038@222:1>) && (not <read__1038@222:0>))
        |- P[<<read__1038@222:2>@225:0>](<read__1038@222:0>:bool,<read__1038@222:1>:int,
                                         <<read__1038@222:2>@225:0>:int)
        
        P[<f_1046@206:2>](true:bool,<f_f_1578@220:3>:bool,<read__1038@222:1>:int)|- bot
        
        P[<f_1046@206:2>](<f_f_1577@213:1>:bool,<close__1043@215:0>:bool,<f_f_1577@213:0>:int)|- P[<close__1043@215:1>](
        <close__1043@215:0>:bool,<close__1043@215:1>:int)
        
        P[<f_1046@206:2>](<close__1043@208:0>:bool,<f_1046@206:1>:bool,<close__1043@208:1>:int)|- P[<close__1043@208:1>](
        <close__1043@208:0>:bool,<close__1043@208:1>:int)
        
         ((<f_1046@206:2> = 0) && ((not <f_1046@206:1>) && (not <f_1046@206:0>)))
        |- P[<f_1046@206:2>](<f_1046@206:0>:bool,<f_1046@206:1>:bool,
                             <f_1046@206:2>:int)
      lower bounds:
        P[<<read__1038@222:2>@225:0>](<read__1038@222:0>:bool,<read__1038@222:1>:int,<<read__1038@222:2>@225:0>:int) =
        ((<<read__1038@222:2>@225:0> = <read__1038@222:1>) && (not <read__1038@222:0>))
        P[<f_1046@206:2>](<f_1046@206:0>:bool,<f_1046@206:1>:bool,<f_1046@206:2>:int) =
        ((<f_1046@206:2> = 0) && ((not <f_1046@206:1>) && (not <f_1046@206:0>)))
        P[<fail_1589@238:0>](var666:bool) = false
        P[<close__1043@215:1>](<close__1043@215:0>:bool,<close__1043@215:1>:int) = (not <close__1043@215:0>)
        P[<close__1043@208:1>](<close__1043@208:0>:bool,<close__1043@208:1>:int) =
        ((<close__1043@208:1> = 0) && (not <close__1043@208:0>))
      upper bounds:
        P[<close__1043@215:1>](var673:bool,var674:int) = true
        P[<close__1043@208:1>](var669:bool,var670:int) = true
      begin GenHcSolver.classify_pids(146855)[4]
        output:
          [<close__1043@208:1>;<close__1043@215:1>]
      end GenHcSolver.classify_pids(146855)[4] (0.000000 sec.)
      begin ApronInterface.convex_hull_interpolate(146866)[4]
        lb:(((<close__1043@208:1> = 0) && (not <close__1043@208:0>)) || (not <close__1043@208:0>))
        nub:false
        lb':(((<close__1043@208:1> = 0) && (not <close__1043@208:0>)) || (not <close__1043@208:0>))
        nub':false
        begin InterpProver.interpolate(146867)[5]
          begin InterpProver.interpolate_fresh(146868)[6]
            begin InterpProver.interpolate_log(146869)[7]
              input1: (((<close__1043@208:1> = 0) && (not <close__1043@208:0>)) || (not <close__1043@208:0>))
              input2: false
              begin InterpProver.interpolate_check(146870)[8]
                begin InterpProver.interpolate_simplify(146871)[9]
                  begin InterpProver.interpolate_quick(146898)[10]
                    
                  end InterpProver.interpolate_quick(146898)[10] (0.000000 sec.)
                  
                end InterpProver.interpolate_simplify(146871)[9] (0.000999 sec.)
                
              end InterpProver.interpolate_check(146870)[8] (0.000999 sec.)
              output: true
            end InterpProver.interpolate_log(146869)[7] (0.000999 sec.)
            
          end InterpProver.interpolate_fresh(146868)[6] (0.000999 sec.)
          
        end InterpProver.interpolate(146867)[5] (0.000999 sec.)
        output:
          P[<close__1043@208:1>](<close__1043@208:0>:bool,<close__1043@208:1>:int) = true
          P[<close__1043@215:1>](<close__1043@208:0>:bool,<close__1043@208:1>:int) = true
      end ApronInterface.convex_hull_interpolate(146866)[4] (0.000999 sec.)
      Horn clauses:
        P[<fail_1589@238:0>](<fail_1589@238:0>:bool)|- bot
        
        P[<f_1046@206:2>](<f_f_1579@227:1>:bool,true:bool,<f_f_1579@227:0>:int),
        P[<<read__1038@222:2>@225:0>](<f_f_1579@227:1>:bool,<f_f_1579@227:0>:int,<read__1038@229:1>:int)|- bot
        
         ((<<read__1038@222:2>@225:0> = <read__1038@222:1>) && (not <read__1038@222:0>))
        |- P[<<read__1038@222:2>@225:0>](<read__1038@222:0>:bool,<read__1038@222:1>:int,
                                         <<read__1038@222:2>@225:0>:int)
        
        P[<f_1046@206:2>](true:bool,<f_f_1578@220:3>:bool,<read__1038@222:1>:int)|- bot
        
         ((<f_1046@206:2> = 0) && ((not <f_1046@206:1>) && (not <f_1046@206:0>)))
        |- P[<f_1046@206:2>](<f_1046@206:0>:bool,<f_1046@206:1>:bool,
                             <f_1046@206:2>:int)
      lower bounds:
        P[<<read__1038@222:2>@225:0>](<read__1038@222:0>:bool,<read__1038@222:1>:int,<<read__1038@222:2>@225:0>:int) =
        ((<<read__1038@222:2>@225:0> = <read__1038@222:1>) && (not <read__1038@222:0>))
        P[<f_1046@206:2>](<f_1046@206:0>:bool,<f_1046@206:1>:bool,<f_1046@206:2>:int) =
        ((<f_1046@206:2> = 0) && ((not <f_1046@206:1>) && (not <f_1046@206:0>)))
        P[<fail_1589@238:0>](var678:bool) = false
      upper bounds:
        P[<fail_1589@238:0>](var681:bool) = true
      begin GenHcSolver.classify_pids(148876)[4]
        output:
          [<fail_1589@238:0>]
      end GenHcSolver.classify_pids(148876)[4] (0.000000 sec.)
      lb:false
      nub:false
      begin ApronInterface.convex_hull_interpolate(148879)[4]
        lb:false
        nub:false
        lb':false
        nub':false
        begin InterpProver.interpolate(148880)[5]
          begin InterpProver.interpolate_fresh(148881)[6]
            begin InterpProver.interpolate_log(148882)[7]
              input1: false
              input2: false
              begin InterpProver.interpolate_check(148883)[8]
                begin InterpProver.interpolate_simplify(148884)[9]
                  begin InterpProver.interpolate_quick(148897)[10]
                    
                  end InterpProver.interpolate_quick(148897)[10] (0.000000 sec.)
                  begin minimizing # of disjunctions(148901)[10]
                    input: false
                    output: false
                  end minimizing # of disjunctions(148901)[10] (0.000000 sec.)
                  
                end InterpProver.interpolate_simplify(148884)[9] (0.000000 sec.)
                
              end InterpProver.interpolate_check(148883)[8] (0.000000 sec.)
              output: false
            end InterpProver.interpolate_log(148882)[7] (0.000000 sec.)
            
          end InterpProver.interpolate_fresh(148881)[6] (0.000000 sec.)
          
        end InterpProver.interpolate(148880)[5] (0.000000 sec.)
        output:
          P[<fail_1589@238:0>](var678:bool) = false
      end ApronInterface.convex_hull_interpolate(148879)[4] (0.000000 sec.)
      Horn clauses:
        P[<f_1046@206:2>](<f_f_1579@227:1>:bool,true:bool,<f_f_1579@227:0>:int),
        P[<<read__1038@222:2>@225:0>](<f_f_1579@227:1>:bool,<f_f_1579@227:0>:int,<read__1038@229:1>:int)|- bot
        
         ((<<read__1038@222:2>@225:0> = <read__1038@222:1>) && (not <read__1038@222:0>))
        |- P[<<read__1038@222:2>@225:0>](<read__1038@222:0>:bool,<read__1038@222:1>:int,
                                         <<read__1038@222:2>@225:0>:int)
        
        P[<f_1046@206:2>](true:bool,<f_f_1578@220:3>:bool,<read__1038@222:1>:int)|- bot
        
         ((<f_1046@206:2> = 0) && ((not <f_1046@206:1>) && (not <f_1046@206:0>)))
        |- P[<f_1046@206:2>](<f_1046@206:0>:bool,<f_1046@206:1>:bool,
                             <f_1046@206:2>:int)
      lower bounds:
        P[<<read__1038@222:2>@225:0>](<read__1038@222:0>:bool,<read__1038@222:1>:int,<<read__1038@222:2>@225:0>:int) =
        ((<<read__1038@222:2>@225:0> = <read__1038@222:1>) && (not <read__1038@222:0>))
        P[<f_1046@206:2>](<f_1046@206:0>:bool,<f_1046@206:1>:bool,<f_1046@206:2>:int) =
        ((<f_1046@206:2> = 0) && ((not <f_1046@206:1>) && (not <f_1046@206:0>)))
      upper bounds:
        P[<<read__1038@222:2>@225:0>](var682:bool,var683:int,var684:int) = true
      begin GenHcSolver.classify_pids(150012)[4]
        output:
          [<<read__1038@222:2>@225:0>]
      end GenHcSolver.classify_pids(150012)[4] (0.000000 sec.)
      lb:((<<read__1038@222:2>@225:0> = <read__1038@222:1>) && (not <read__1038@222:0>))
      nub:false
      begin ApronInterface.convex_hull_interpolate(150015)[4]
        lb:((<<read__1038@222:2>@225:0> = <read__1038@222:1>) && (not <read__1038@222:0>))
        nub:false
        lb':((<<read__1038@222:2>@225:0> = <read__1038@222:1>) && (not <read__1038@222:0>))
        nub':false
        begin InterpProver.interpolate(150016)[5]
          begin InterpProver.interpolate_fresh(150017)[6]
            begin InterpProver.interpolate_log(150018)[7]
              input1: ((<<read__1038@222:2>@225:0> = <read__1038@222:1>) && (not <read__1038@222:0>))
              input2: false
              begin InterpProver.interpolate_check(150019)[8]
                begin InterpProver.interpolate_simplify(150020)[9]
                  begin InterpProver.interpolate_quick(150046)[10]
                    
                  end InterpProver.interpolate_quick(150046)[10] (0.000000 sec.)
                  
                end InterpProver.interpolate_simplify(150020)[9] (0.000000 sec.)
                
              end InterpProver.interpolate_check(150019)[8] (0.000000 sec.)
              output: true
            end InterpProver.interpolate_log(150018)[7] (0.000000 sec.)
            
          end InterpProver.interpolate_fresh(150017)[6] (0.001000 sec.)
          
        end InterpProver.interpolate(150016)[5] (0.001000 sec.)
        output:
          P[<<read__1038@222:2>@225:0>](<read__1038@222:0>:bool,<read__1038@222:1>:int,<<read__1038@222:2>@225:0>:int) =
          true
      end ApronInterface.convex_hull_interpolate(150015)[4] (0.001000 sec.)
      Horn clauses:
        P[<f_1046@206:2>](<f_f_1579@227:1>:bool,true:bool,<f_f_1579@227:0>:int)|- bot
        
        P[<f_1046@206:2>](true:bool,<f_f_1578@220:3>:bool,<read__1038@222:1>:int)|- bot
        
         ((<f_1046@206:2> = 0) && ((not <f_1046@206:1>) && (not <f_1046@206:0>)))
        |- P[<f_1046@206:2>](<f_1046@206:0>:bool,<f_1046@206:1>:bool,
                             <f_1046@206:2>:int)
      lower bounds:
        P[<f_1046@206:2>](<f_1046@206:0>:bool,<f_1046@206:1>:bool,<f_1046@206:2>:int) =
        ((<f_1046@206:2> = 0) && ((not <f_1046@206:1>) && (not <f_1046@206:0>)))
      upper bounds:
        P[<f_1046@206:2>](var685:bool,var686:bool,var687:int) = ((not var686) && (not var685))
      begin GenHcSolver.classify_pids(150917)[4]
        output:
          [<f_1046@206:2>]
      end GenHcSolver.classify_pids(150917)[4] (0.000000 sec.)
      lb:((<f_1046@206:2> = 0) && ((not <f_1046@206:1>) && (not <f_1046@206:0>)))
      nub:(not ((not <f_1046@206:1>) && (not <f_1046@206:0>)))
      begin ApronInterface.convex_hull_interpolate(150920)[4]
        lb:((<f_1046@206:2> = 0) && ((not <f_1046@206:1>) && (not <f_1046@206:0>)))
        nub:(not ((not <f_1046@206:1>) && (not <f_1046@206:0>)))
        lb':((<f_1046@206:2> = 0) && ((not <f_1046@206:1>) && (not <f_1046@206:0>)))
        nub':(not ((not <f_1046@206:1>) && (not <f_1046@206:0>)))
        begin InterpProver.interpolate(150921)[5]
          begin InterpProver.interpolate_fresh(150922)[6]
            begin InterpProver.interpolate_log(150923)[7]
              input1: ((<f_1046@206:2> = 0) && ((not <f_1046@206:1>) && (not <f_1046@206:0>)))
              input2: (not ((not <f_1046@206:1>) && (not <f_1046@206:0>)))
              begin InterpProver.interpolate_check(150924)[8]
                begin InterpProver.interpolate_simplify(150925)[9]
                  begin InterpProver.interpolate_quick(150963)[10]
                    begin CsisatInterface.interpolate_csisat_wrap(150972)[11]
                      begin CsisatInterface.interpolate_csisat_post_process(150973)[12]
                        begin CsisatInterface.interpolate_csisat_log(150974)[13]
                          input1: (not v_sep_f_1046_sep_206_sep_0 = true() & not v_sep_f_1046_sep_206_sep_1 = true())
                          input2: (v_sep_f_1046_sep_206_sep_0 = true() | v_sep_f_1046_sep_206_sep_1 = true())
                          begin CsisatInterface.interpolate_csisat_raw(150975)[14]
                            
                          end CsisatInterface.interpolate_csisat_raw(150975)[14] (0.000000 sec.)
                          output: ((not v_sep_f_1046_sep_206_sep_1 = true() | v_sep_f_1046_sep_206_sep_0 = true()) & not v_sep_f_1046_sep_206_sep_0 = true())
                          
                        end CsisatInterface.interpolate_csisat_log(150974)[13] (0.000000 sec.)
                        after simplification: ((not v_sep_f_1046_sep_206_sep_1 = true() | v_sep_f_1046_sep_206_sep_0 = true()) & not v_sep_f_1046_sep_206_sep_0 = true())
                        after dnf conversion: ((not v_sep_f_1046_sep_206_sep_1 = true() & not v_sep_f_1046_sep_206_sep_0 = true()) | (v_sep_f_1046_sep_206_sep_0 = true() & not v_sep_f_1046_sep_206_sep_0 = true()))
                        
                      end CsisatInterface.interpolate_csisat_post_process(150973)[12] (0.000000 sec.)
                      
                    end CsisatInterface.interpolate_csisat_wrap(150972)[11] (0.000000 sec.)
                    
                  end InterpProver.interpolate_quick(150963)[10] (0.000000 sec.)
                  begin minimizing # of conjunctions(150995)[10]
                    input: ((not <f_1046@206:1>) && (not <f_1046@206:0>))
                    output: ((not <f_1046@206:0>) && (not <f_1046@206:1>))
                  end minimizing # of conjunctions(150995)[10] (0.000999 sec.)
                  
                end InterpProver.interpolate_simplify(150925)[9] (0.001999 sec.)
                
              end InterpProver.interpolate_check(150924)[8] (0.001999 sec.)
              output: ((not <f_1046@206:0>) && (not <f_1046@206:1>))
            end InterpProver.interpolate_log(150923)[7] (0.001999 sec.)
            
          end InterpProver.interpolate_fresh(150922)[6] (0.001999 sec.)
          
        end InterpProver.interpolate(150921)[5] (0.001999 sec.)
        output:
          P[<f_1046@206:2>](<f_1046@206:0>:bool,<f_1046@206:1>:bool,<f_1046@206:2>:int) =
          ((not <f_1046@206:0>) && (not <f_1046@206:1>))
      end ApronInterface.convex_hull_interpolate(150920)[4] (0.001999 sec.)
      begin HcSolver.check_validity(151232)[4]
        input:
          P[<fail_1589@238:0>](<fail_1589@238:0>:bool)|- bot
          
          P[<read__1038@229:1>](true:bool,<br_readit_1585@235:1>:int),
          ((<br_readit_1585@235:1> <> 1) && ((<br_readit_1585@235:1> <> 3) && <fail_1589@238:0>))
          |- P[<fail_1589@238:0>](<fail_1589@238:0>:bool)
          
          P[<f_1046@206:2>](<f_f_1579@227:1>:bool,<read__1038@229:0>:bool,<f_f_1579@227:0>:int),
          P[<<close__1043@208:2>@211:0>](<f_f_1579@227:1>:bool,<f_f_1579@227:0>:int,<f_f_1579@227:3>:int),
          P[<<close__1043@215:2>@218:0>](<read__1038@229:0>:bool,<f_f_1579@227:3>:int,<f_f_1579@227:2>:int),
          P[<<read__1038@222:2>@225:0>](<f_f_1579@227:1>:bool,<f_f_1579@227:0>:int,<read__1038@229:1>:int)|- P[<read__1038@229:1>](
          <read__1038@229:0>:bool,<read__1038@229:1>:int)
          
          P[<read__1038@222:1>](<read__1038@222:0>:bool,<read__1038@222:1>:int),
          ((<<read__1038@222:2>@225:0> = <read__1038@222:1>) && (not <read__1038@222:0>))
          |- P[<<read__1038@222:2>@225:0>](<read__1038@222:0>:bool,<read__1038@222:1>:int,
                                           <<read__1038@222:2>@225:0>:int)
          
          P[<f_1046@206:2>](<read__1038@222:0>:bool,<f_f_1578@220:3>:bool,<read__1038@222:1>:int),
          P[<<close__1043@208:2>@211:0>](<read__1038@222:0>:bool,<read__1038@222:1>:int,<f_f_1578@220:2>:int),
          P[<<close__1043@215:2>@218:0>](<f_f_1578@220:3>:bool,<f_f_1578@220:2>:int,<f_f_1578@220:5>:int)|- P[<read__1038@222:1>](
          <read__1038@222:0>:bool,<read__1038@222:1>:int)
          
          P[<close__1043@215:1>](<close__1043@215:0>:bool,<close__1043@215:1>:int),
          ((<<close__1043@215:2>@218:0> = <close__1043@215:1>) && (not <close__1043@215:0>))
          |- P[<<close__1043@215:2>@218:0>](<close__1043@215:0>:bool,
                                            <close__1043@215:1>:int,<<close__1043@215:2>@218:0>:int)
          
          P[<f_1046@206:2>](<f_f_1577@213:1>:bool,<close__1043@215:0>:bool,<f_f_1577@213:0>:int),
          P[<<close__1043@208:2>@211:0>](<f_f_1577@213:1>:bool,<f_f_1577@213:0>:int,<close__1043@215:1>:int)|- P[<close__1043@215:1>](
          <close__1043@215:0>:bool,<close__1043@215:1>:int)
          
          P[<close__1043@208:1>](<close__1043@208:0>:bool,<close__1043@208:1>:int),
          ((<<close__1043@208:2>@211:0> = <close__1043@208:1>) && (not <close__1043@208:0>))
          |- P[<<close__1043@208:2>@211:0>](<close__1043@208:0>:bool,
                                            <close__1043@208:1>:int,<<close__1043@208:2>@211:0>:int)
          
          P[<f_1046@206:2>](<close__1043@208:0>:bool,<f_1046@206:1>:bool,<close__1043@208:1>:int)|- P[<close__1043@208:1>](
          <close__1043@208:0>:bool,<close__1043@208:1>:int)
          
           ((<f_1046@206:2> = 0) && ((not <f_1046@206:1>) && (not <f_1046@206:0>)))
          |- P[<f_1046@206:2>](<f_1046@206:0>:bool,<f_1046@206:1>:bool,
                               <f_1046@206:2>:int)
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        
      end HcSolver.check_validity(151232)[4] (0.003000 sec.)
      solution:
        P[<fail_1589@238:0>](var678:bool) = false
        P[<read__1038@229:1>](<read__1038@222:0>:bool,<read__1038@222:1>:int) = (not <read__1038@222:0>)
        P[<<read__1038@222:2>@225:0>](<read__1038@222:0>:bool,<read__1038@222:1>:int,<<read__1038@222:2>@225:0>:int) =
        true
        P[<read__1038@222:1>](<read__1038@222:0>:bool,<read__1038@222:1>:int) = (not <read__1038@222:0>)
        P[<<close__1043@215:2>@218:0>](<close__1043@208:0>:bool,<close__1043@208:1>:int,<<close__1043@208:2>@211:0>:int) =
        true
        P[<close__1043@215:1>](<close__1043@208:0>:bool,<close__1043@208:1>:int) = true
        P[<<close__1043@208:2>@211:0>](<close__1043@208:0>:bool,<close__1043@208:1>:int,<<close__1043@208:2>@211:0>:int) =
        true
        P[<close__1043@208:1>](<close__1043@208:0>:bool,<close__1043@208:1>:int) = true
        P[<f_1046@206:2>](<f_1046@206:0>:bool,<f_1046@206:1>:bool,<f_1046@206:2>:int) =
        ((not <f_1046@206:0>) && (not <f_1046@206:1>))
    end GenHcSolver.solve(130609)[3] (0.097985 sec.)
    begin GenHcSolver.solve(151971)[3]
      Horn clauses:
        P[<fail_1589@238:0>](<fail_1589@238:0>:bool)|- bot
        
        P[<read__1038@229:1>](true:bool,<br_readit_1585@235:1>:int),
        ((<br_readit_1585@235:1> <> 1) && ((<br_readit_1585@235:1> <> 3) && <fail_1589@238:0>))
        |- P[<fail_1589@238:0>](<fail_1589@238:0>:bool)
        
        P[<f_1046@206:2>](<f_f_1579@227:1>:bool,<read__1038@229:0>:bool,<f_f_1579@227:0>:int),
        P[<<close__1043@208:2>@211:0>](<f_f_1579@227:1>:bool,<f_f_1579@227:0>:int,<f_f_1579@227:3>:int),
        P[<<close__1043@215:2>@218:0>](<read__1038@229:0>:bool,<f_f_1579@227:3>:int,<f_f_1579@227:2>:int),
        P[<<read__1038@222:2>@225:0>](<f_f_1579@227:1>:bool,<f_f_1579@227:0>:int,<read__1038@229:1>:int)|- P[<read__1038@229:1>](
        <read__1038@229:0>:bool,<read__1038@229:1>:int)
        
        P[<read__1038@222:1>](<read__1038@222:0>:bool,<read__1038@222:1>:int),
        ((<<read__1038@222:2>@225:0> = <read__1038@222:1>) && (not <read__1038@222:0>))
        |- P[<<read__1038@222:2>@225:0>](<read__1038@222:0>:bool,<read__1038@222:1>:int,
                                         <<read__1038@222:2>@225:0>:int)
        
        P[<f_1046@206:2>](<read__1038@222:0>:bool,<f_f_1578@220:3>:bool,<read__1038@222:1>:int),
        P[<<close__1043@208:2>@211:0>](<read__1038@222:0>:bool,<read__1038@222:1>:int,<f_f_1578@220:2>:int),
        P[<<close__1043@215:2>@218:0>](<f_f_1578@220:3>:bool,<f_f_1578@220:2>:int,<f_f_1578@220:5>:int)|- P[<read__1038@222:1>](
        <read__1038@222:0>:bool,<read__1038@222:1>:int)
        
        P[<close__1043@215:1>](<close__1043@215:0>:bool,<close__1043@215:1>:int),
        ((<<close__1043@215:2>@218:0> = <close__1043@215:1>) && (not <close__1043@215:0>))
        |- P[<<close__1043@215:2>@218:0>](<close__1043@215:0>:bool,<close__1043@215:1>:int,
                                          <<close__1043@215:2>@218:0>:int)
        
        P[<f_1046@206:2>](<f_f_1577@213:1>:bool,<close__1043@215:0>:bool,<f_f_1577@213:0>:int),
        P[<<close__1043@208:2>@211:0>](<f_f_1577@213:1>:bool,<f_f_1577@213:0>:int,<close__1043@215:1>:int)|- P[<close__1043@215:1>](
        <close__1043@215:0>:bool,<close__1043@215:1>:int)
        
        P[<close__1043@208:1>](<close__1043@208:0>:bool,<close__1043@208:1>:int),
        ((<<close__1043@208:2>@211:0> = <close__1043@208:1>) && (not <close__1043@208:0>))
        |- P[<<close__1043@208:2>@211:0>](<close__1043@208:0>:bool,<close__1043@208:1>:int,
                                          <<close__1043@208:2>@211:0>:int)
        
        P[<f_1046@206:2>](<close__1043@208:0>:bool,<f_1046@206:1>:bool,<close__1043@208:1>:int)|- P[<close__1043@208:1>](
        <close__1043@208:0>:bool,<close__1043@208:1>:int)
        
         ((<f_1046@206:2> = 0) && ((not <f_1046@206:1>) && (not <f_1046@206:0>)))
        |- P[<f_1046@206:2>](<f_1046@206:0>:bool,<f_1046@206:1>:bool,
                             <f_1046@206:2>:int)
      lower bounds:
        P[<f_1046@206:2>](<f_1046@206:0>:bool,<f_1046@206:1>:bool,<f_1046@206:2>:int) =
        ((<f_1046@206:2> = 0) && ((not <f_1046@206:1>) && (not <f_1046@206:0>)))
        P[<close__1043@208:1>](<close__1043@208:0>:bool,<close__1043@208:1>:int) =
        ((<close__1043@208:1> = 0) && (not <close__1043@208:0>))
        P[<<close__1043@208:2>@211:0>](<close__1043@208:0>:bool,<close__1043@208:1>:int,<<close__1043@208:2>@211:0>:int) =
        ((<close__1043@208:1> = 0) &&
         ((<<close__1043@208:2>@211:0> = <close__1043@208:1>) && (not <close__1043@208:0>)))
        P[<close__1043@215:1>](<close__1043@215:0>:bool,<close__1043@215:1>:int) =
        ((<close__1043@215:1> = 0) && (not <close__1043@215:0>))
        P[<<close__1043@215:2>@218:0>](<close__1043@215:0>:bool,<close__1043@215:1>:int,<<close__1043@215:2>@218:0>:int) =
        ((<close__1043@215:1> = 0) &&
         ((<<close__1043@215:2>@218:0> = <close__1043@215:1>) && (not <close__1043@215:0>)))
        P[<read__1038@222:1>](<read__1038@222:0>:bool,<read__1038@222:1>:int) =
        ((<read__1038@222:1> = 0) && (not <read__1038@222:0>))
        P[<<read__1038@222:2>@225:0>](<read__1038@222:0>:bool,<read__1038@222:1>:int,<<read__1038@222:2>@225:0>:int) =
        ((<read__1038@222:1> = 0) && ((<<read__1038@222:2>@225:0> = <read__1038@222:1>) && (not <read__1038@222:0>)))
        P[<read__1038@229:1>](<read__1038@229:0>:bool,<read__1038@229:1>:int) =
        ((<read__1038@229:1> = 0) && (not <read__1038@229:0>))
        P[<fail_1589@238:0>](<fail_1589@238:0>:bool) = false
      upper bounds:
        P[<read__1038@229:1>](var695:bool,var696:int) = ((var696 = 1) || ((var696 = 3) || (not var695)))
        P[<read__1038@222:1>](var692:bool,var693:int) = true
      begin GenHcSolver.classify_pids(157751)[4]
        output:
          [<read__1038@222:1>;<read__1038@229:1>]
      end GenHcSolver.classify_pids(157751)[4] (0.000000 sec.)
      begin ApronInterface.convex_hull_interpolate(157779)[4]
        lb:((<read__1038@222:1> = 0) && (not <read__1038@222:0>))
        nub:(not ((<read__1038@222:1> = 1) || ((<read__1038@222:1> = 3) || (not <read__1038@222:0>))))
        begin ExtFormula.Formula.case_analysis_boolean(157786)[5]
          ts: ((<read__1038@222:1> = 0) && (not <read__1038@222:0>))
          
        end ExtFormula.Formula.case_analysis_boolean(157786)[5] (0.000000 sec.)
        begin ExtFormula.Formula.case_analysis_boolean(157826)[5]
          ts: ((<read__1038@222:1> <> 1) && ((<read__1038@222:1> <> 3) && <read__1038@222:0>))
          
        end ExtFormula.Formula.case_analysis_boolean(157826)[5] (0.000000 sec.)
        lb':(((-1 >= 0) && (<read__1038@222:0> = true)) || ((<read__1038@222:1> = 0) && (<read__1038@222:0> = false)))
        nub':((<read__1038@222:0> = true) || ((-1 >= 0) && (<read__1038@222:0> = false)))
        begin InterpProver.interpolate(157867)[5]
          begin InterpProver.interpolate_fresh(157868)[6]
            begin InterpProver.interpolate_log(157869)[7]
              input1: (((-1 >= 0) && (<read__1038@222:0> = true)) ||
                       ((<read__1038@222:1> = 0) && (<read__1038@222:0> = false)))
              input2: ((<read__1038@222:0> = true) || ((-1 >= 0) && (<read__1038@222:0> = false)))
              begin InterpProver.interpolate_check(157870)[8]
                begin InterpProver.interpolate_simplify(157871)[9]
                  begin InterpProver.interpolate_quick(157914)[10]
                    begin CsisatInterface.interpolate_csisat_wrap(157923)[11]
                      begin CsisatInterface.interpolate_csisat_post_process(157924)[12]
                        begin CsisatInterface.interpolate_csisat_log(157925)[13]
                          input1: not v_sep_read__1038_sep_222_sep_0 = true()
                          input2: v_sep_read__1038_sep_222_sep_0 = true()
                          begin CsisatInterface.interpolate_csisat_raw(157926)[14]
                            
                          end CsisatInterface.interpolate_csisat_raw(157926)[14] (0.000000 sec.)
                          output: not v_sep_read__1038_sep_222_sep_0 = true()
                          
                        end CsisatInterface.interpolate_csisat_log(157925)[13] (0.000000 sec.)
                        after simplification: not v_sep_read__1038_sep_222_sep_0 = true()
                        after dnf conversion: ((not v_sep_read__1038_sep_222_sep_0 = true()))
                        
                      end CsisatInterface.interpolate_csisat_post_process(157924)[12] (0.000000 sec.)
                      
                    end CsisatInterface.interpolate_csisat_wrap(157923)[11] (0.000000 sec.)
                    
                  end InterpProver.interpolate_quick(157914)[10] (0.001000 sec.)
                  
                end InterpProver.interpolate_simplify(157871)[9] (0.001000 sec.)
                
              end InterpProver.interpolate_check(157870)[8] (0.001000 sec.)
              output: (not <read__1038@222:0>)
            end InterpProver.interpolate_log(157869)[7] (0.001000 sec.)
            
          end InterpProver.interpolate_fresh(157868)[6] (0.001000 sec.)
          
        end InterpProver.interpolate(157867)[5] (0.001000 sec.)
        output:
          P[<read__1038@222:1>](<read__1038@222:0>:bool,<read__1038@222:1>:int) = (not <read__1038@222:0>)
          P[<read__1038@229:1>](<read__1038@222:0>:bool,<read__1038@222:1>:int) = (not <read__1038@222:0>)
      end ApronInterface.convex_hull_interpolate(157779)[4] (0.001000 sec.)
      Horn clauses:
        P[<fail_1589@238:0>](<fail_1589@238:0>:bool)|- bot
        
        P[<f_1046@206:2>](<f_f_1579@227:1>:bool,true:bool,<f_f_1579@227:0>:int),
        P[<<close__1043@208:2>@211:0>](<f_f_1579@227:1>:bool,<f_f_1579@227:0>:int,<f_f_1579@227:3>:int),
        P[<<close__1043@215:2>@218:0>](true:bool,<f_f_1579@227:3>:int,<f_f_1579@227:2>:int),
        P[<<read__1038@222:2>@225:0>](<f_f_1579@227:1>:bool,<f_f_1579@227:0>:int,<read__1038@229:1>:int)|- bot
        
         ((<<read__1038@222:2>@225:0> = <read__1038@222:1>) && (not <read__1038@222:0>))
        |- P[<<read__1038@222:2>@225:0>](<read__1038@222:0>:bool,<read__1038@222:1>:int,
                                         <<read__1038@222:2>@225:0>:int)
        
        P[<f_1046@206:2>](true:bool,<f_f_1578@220:3>:bool,<read__1038@222:1>:int),
        P[<<close__1043@208:2>@211:0>](true:bool,<read__1038@222:1>:int,<f_f_1578@220:2>:int),
        P[<<close__1043@215:2>@218:0>](<f_f_1578@220:3>:bool,<f_f_1578@220:2>:int,<f_f_1578@220:5>:int)|- bot
        
        P[<close__1043@215:1>](<close__1043@215:0>:bool,<close__1043@215:1>:int),
        ((<<close__1043@215:2>@218:0> = <close__1043@215:1>) && (not <close__1043@215:0>))
        |- P[<<close__1043@215:2>@218:0>](<close__1043@215:0>:bool,<close__1043@215:1>:int,
                                          <<close__1043@215:2>@218:0>:int)
        
        P[<f_1046@206:2>](<f_f_1577@213:1>:bool,<close__1043@215:0>:bool,<f_f_1577@213:0>:int),
        P[<<close__1043@208:2>@211:0>](<f_f_1577@213:1>:bool,<f_f_1577@213:0>:int,<close__1043@215:1>:int)|- P[<close__1043@215:1>](
        <close__1043@215:0>:bool,<close__1043@215:1>:int)
        
        P[<close__1043@208:1>](<close__1043@208:0>:bool,<close__1043@208:1>:int),
        ((<<close__1043@208:2>@211:0> = <close__1043@208:1>) && (not <close__1043@208:0>))
        |- P[<<close__1043@208:2>@211:0>](<close__1043@208:0>:bool,<close__1043@208:1>:int,
                                          <<close__1043@208:2>@211:0>:int)
        
        P[<f_1046@206:2>](<close__1043@208:0>:bool,<f_1046@206:1>:bool,<close__1043@208:1>:int)|- P[<close__1043@208:1>](
        <close__1043@208:0>:bool,<close__1043@208:1>:int)
        
         ((<f_1046@206:2> = 0) && ((not <f_1046@206:1>) && (not <f_1046@206:0>)))
        |- P[<f_1046@206:2>](<f_1046@206:0>:bool,<f_1046@206:1>:bool,
                             <f_1046@206:2>:int)
      lower bounds:
        P[<<read__1038@222:2>@225:0>](<read__1038@222:0>:bool,<read__1038@222:1>:int,<<read__1038@222:2>@225:0>:int) =
        ((<<read__1038@222:2>@225:0> = <read__1038@222:1>) && (not <read__1038@222:0>))
        P[<f_1046@206:2>](<f_1046@206:0>:bool,<f_1046@206:1>:bool,<f_1046@206:2>:int) =
        ((<f_1046@206:2> = 0) && ((not <f_1046@206:1>) && (not <f_1046@206:0>)))
        P[<fail_1589@238:0>](var700:bool) = false
        P[<close__1043@208:1>](<close__1043@208:0>:bool,<close__1043@208:1>:int) =
        ((<close__1043@208:1> = 0) && (not <close__1043@208:0>))
        P[<<close__1043@208:2>@211:0>](<close__1043@208:0>:bool,<close__1043@208:1>:int,<<close__1043@208:2>@211:0>:int) =
        ((<close__1043@208:1> = 0) &&
         ((<<close__1043@208:2>@211:0> = <close__1043@208:1>) && (not <close__1043@208:0>)))
        P[<close__1043@215:1>](<close__1043@215:0>:bool,<close__1043@215:1>:int) =
        ((<close__1043@215:1> = 0) && (not <close__1043@215:0>))
        P[<<close__1043@215:2>@218:0>](<close__1043@215:0>:bool,<close__1043@215:1>:int,<<close__1043@215:2>@218:0>:int) =
        ((<close__1043@215:1> = 0) &&
         ((<<close__1043@215:2>@218:0> = <close__1043@215:1>) && (not <close__1043@215:0>)))
      upper bounds:
        P[<<close__1043@215:2>@218:0>](var708:bool,var709:int,var710:int) = true
        P[<<close__1043@208:2>@211:0>](var703:bool,var704:int,var705:int) = true
      begin GenHcSolver.classify_pids(164212)[4]
        output:
          [<<close__1043@208:2>@211:0>;<<close__1043@215:2>@218:0>]
      end GenHcSolver.classify_pids(164212)[4] (0.000000 sec.)
      begin ApronInterface.convex_hull_interpolate(164223)[4]
        lb:((<close__1043@208:1> = 0) &&
            ((<<close__1043@208:2>@211:0> = <close__1043@208:1>) && (not <close__1043@208:0>)))
        nub:false
        begin ExtFormula.Formula.case_analysis_boolean(164243)[5]
          ts: ((<close__1043@208:1> = 0) &&
               ((<<close__1043@208:2>@211:0> = <close__1043@208:1>) && (not <close__1043@208:0>)))
          
        end ExtFormula.Formula.case_analysis_boolean(164243)[5] (0.000000 sec.)
        begin ExtFormula.Formula.case_analysis_boolean(164278)[5]
          ts: false
          
        end ExtFormula.Formula.case_analysis_boolean(164278)[5] (0.000000 sec.)
        lb':(((-1 >= 0) && (<close__1043@208:0> = true)) ||
             (((<<close__1043@208:2>@211:0> = 0) && (<close__1043@208:1> = 0)) && (<close__1043@208:0> = false)))
        nub':(-1 >= 0)
        begin InterpProver.interpolate(164281)[5]
          begin InterpProver.interpolate_fresh(164282)[6]
            begin InterpProver.interpolate_log(164283)[7]
              input1: (((-1 >= 0) && (<close__1043@208:0> = true)) ||
                       (((<<close__1043@208:2>@211:0> = 0) && (<close__1043@208:1> = 0)) &&
                        (<close__1043@208:0> = false)))
              input2: (-1 >= 0)
              begin InterpProver.interpolate_check(164284)[8]
                begin InterpProver.interpolate_simplify(164285)[9]
                  begin InterpProver.interpolate_quick(164330)[10]
                    
                  end InterpProver.interpolate_quick(164330)[10] (0.000000 sec.)
                  
                end InterpProver.interpolate_simplify(164285)[9] (0.001000 sec.)
                
              end InterpProver.interpolate_check(164284)[8] (0.001000 sec.)
              output: true
            end InterpProver.interpolate_log(164283)[7] (0.001000 sec.)
            
          end InterpProver.interpolate_fresh(164282)[6] (0.001000 sec.)
          
        end InterpProver.interpolate(164281)[5] (0.001000 sec.)
        output:
          P[<<close__1043@208:2>@211:0>](<close__1043@208:0>:bool,<close__1043@208:1>:int,<<close__1043@208:2>@211:0>:int) =
          true
          P[<<close__1043@215:2>@218:0>](<close__1043@208:0>:bool,<close__1043@208:1>:int,<<close__1043@208:2>@211:0>:int) =
          true
      end ApronInterface.convex_hull_interpolate(164223)[4] (0.001000 sec.)
      Horn clauses:
        P[<fail_1589@238:0>](<fail_1589@238:0>:bool)|- bot
        
        P[<f_1046@206:2>](<f_f_1579@227:1>:bool,true:bool,<f_f_1579@227:0>:int),
        P[<<read__1038@222:2>@225:0>](<f_f_1579@227:1>:bool,<f_f_1579@227:0>:int,<read__1038@229:1>:int)|- bot
        
         ((<<read__1038@222:2>@225:0> = <read__1038@222:1>) && (not <read__1038@222:0>))
        |- P[<<read__1038@222:2>@225:0>](<read__1038@222:0>:bool,<read__1038@222:1>:int,
                                         <<read__1038@222:2>@225:0>:int)
        
        P[<f_1046@206:2>](true:bool,<f_f_1578@220:3>:bool,<read__1038@222:1>:int)|- bot
        
        P[<f_1046@206:2>](<f_f_1577@213:1>:bool,<close__1043@215:0>:bool,<f_f_1577@213:0>:int)|- P[<close__1043@215:1>](
        <close__1043@215:0>:bool,<close__1043@215:1>:int)
        
        P[<f_1046@206:2>](<close__1043@208:0>:bool,<f_1046@206:1>:bool,<close__1043@208:1>:int)|- P[<close__1043@208:1>](
        <close__1043@208:0>:bool,<close__1043@208:1>:int)
        
         ((<f_1046@206:2> = 0) && ((not <f_1046@206:1>) && (not <f_1046@206:0>)))
        |- P[<f_1046@206:2>](<f_1046@206:0>:bool,<f_1046@206:1>:bool,
                             <f_1046@206:2>:int)
      lower bounds:
        P[<<read__1038@222:2>@225:0>](<read__1038@222:0>:bool,<read__1038@222:1>:int,<<read__1038@222:2>@225:0>:int) =
        ((<<read__1038@222:2>@225:0> = <read__1038@222:1>) && (not <read__1038@222:0>))
        P[<f_1046@206:2>](<f_1046@206:0>:bool,<f_1046@206:1>:bool,<f_1046@206:2>:int) =
        ((<f_1046@206:2> = 0) && ((not <f_1046@206:1>) && (not <f_1046@206:0>)))
        P[<fail_1589@238:0>](var714:bool) = false
        P[<close__1043@215:1>](<close__1043@215:0>:bool,<close__1043@215:1>:int) = (not <close__1043@215:0>)
        P[<close__1043@208:1>](<close__1043@208:0>:bool,<close__1043@208:1>:int) =
        ((<close__1043@208:1> = 0) && (not <close__1043@208:0>))
      upper bounds:
        P[<close__1043@215:1>](var721:bool,var722:int) = true
        P[<close__1043@208:1>](var717:bool,var718:int) = true
      begin GenHcSolver.classify_pids(168343)[4]
        output:
          [<close__1043@208:1>;<close__1043@215:1>]
      end GenHcSolver.classify_pids(168343)[4] (0.000000 sec.)
      begin ApronInterface.convex_hull_interpolate(168354)[4]
        lb:(((<close__1043@208:1> = 0) && (not <close__1043@208:0>)) || (not <close__1043@208:0>))
        nub:false
        begin ExtFormula.Formula.case_analysis_boolean(168367)[5]
          ts: (not <close__1043@208:0>)
          
        end ExtFormula.Formula.case_analysis_boolean(168367)[5] (0.000000 sec.)
        begin ExtFormula.Formula.case_analysis_boolean(168377)[5]
          ts: false
          
        end ExtFormula.Formula.case_analysis_boolean(168377)[5] (0.000000 sec.)
        lb':(((-1 >= 0) && (<close__1043@208:0> = true)) || (<close__1043@208:0> = false))
        nub':(-1 >= 0)
        begin InterpProver.interpolate(168380)[5]
          begin InterpProver.interpolate_fresh(168381)[6]
            begin InterpProver.interpolate_log(168382)[7]
              input1: (((-1 >= 0) && (<close__1043@208:0> = true)) || (<close__1043@208:0> = false))
              input2: (-1 >= 0)
              begin InterpProver.interpolate_check(168383)[8]
                begin InterpProver.interpolate_simplify(168384)[9]
                  begin InterpProver.interpolate_quick(168411)[10]
                    
                  end InterpProver.interpolate_quick(168411)[10] (0.000000 sec.)
                  
                end InterpProver.interpolate_simplify(168384)[9] (0.001000 sec.)
                
              end InterpProver.interpolate_check(168383)[8] (0.001000 sec.)
              output: true
            end InterpProver.interpolate_log(168382)[7] (0.001000 sec.)
            
          end InterpProver.interpolate_fresh(168381)[6] (0.001000 sec.)
          
        end InterpProver.interpolate(168380)[5] (0.001000 sec.)
        output:
          P[<close__1043@208:1>](<close__1043@208:0>:bool,<close__1043@208:1>:int) = true
          P[<close__1043@215:1>](<close__1043@208:0>:bool,<close__1043@208:1>:int) = true
      end ApronInterface.convex_hull_interpolate(168354)[4] (0.001000 sec.)
      Horn clauses:
        P[<fail_1589@238:0>](<fail_1589@238:0>:bool)|- bot
        
        P[<f_1046@206:2>](<f_f_1579@227:1>:bool,true:bool,<f_f_1579@227:0>:int),
        P[<<read__1038@222:2>@225:0>](<f_f_1579@227:1>:bool,<f_f_1579@227:0>:int,<read__1038@229:1>:int)|- bot
        
         ((<<read__1038@222:2>@225:0> = <read__1038@222:1>) && (not <read__1038@222:0>))
        |- P[<<read__1038@222:2>@225:0>](<read__1038@222:0>:bool,<read__1038@222:1>:int,
                                         <<read__1038@222:2>@225:0>:int)
        
        P[<f_1046@206:2>](true:bool,<f_f_1578@220:3>:bool,<read__1038@222:1>:int)|- bot
        
         ((<f_1046@206:2> = 0) && ((not <f_1046@206:1>) && (not <f_1046@206:0>)))
        |- P[<f_1046@206:2>](<f_1046@206:0>:bool,<f_1046@206:1>:bool,
                             <f_1046@206:2>:int)
      lower bounds:
        P[<<read__1038@222:2>@225:0>](<read__1038@222:0>:bool,<read__1038@222:1>:int,<<read__1038@222:2>@225:0>:int) =
        ((<<read__1038@222:2>@225:0> = <read__1038@222:1>) && (not <read__1038@222:0>))
        P[<f_1046@206:2>](<f_1046@206:0>:bool,<f_1046@206:1>:bool,<f_1046@206:2>:int) =
        ((<f_1046@206:2> = 0) && ((not <f_1046@206:1>) && (not <f_1046@206:0>)))
        P[<fail_1589@238:0>](var726:bool) = false
      upper bounds:
        P[<fail_1589@238:0>](var729:bool) = true
      begin GenHcSolver.classify_pids(170391)[4]
        output:
          [<fail_1589@238:0>]
      end GenHcSolver.classify_pids(170391)[4] (0.000000 sec.)
      lb:false
      nub:false
      begin ApronInterface.convex_hull_interpolate(170394)[4]
        lb:false
        nub:false
        begin ExtFormula.Formula.case_analysis_boolean(170397)[5]
          ts: false
          
        end ExtFormula.Formula.case_analysis_boolean(170397)[5] (0.000000 sec.)
        begin ExtFormula.Formula.case_analysis_boolean(170402)[5]
          ts: false
          
        end ExtFormula.Formula.case_analysis_boolean(170402)[5] (0.000000 sec.)
        lb':(-1 >= 0)
        nub':(-1 >= 0)
        begin InterpProver.interpolate(170405)[5]
          begin InterpProver.interpolate_fresh(170406)[6]
            begin InterpProver.interpolate_log(170407)[7]
              input1: (-1 >= 0)
              input2: (-1 >= 0)
              begin InterpProver.interpolate_check(170408)[8]
                begin InterpProver.interpolate_simplify(170409)[9]
                  begin InterpProver.interpolate_quick(170424)[10]
                    
                  end InterpProver.interpolate_quick(170424)[10] (0.000000 sec.)
                  begin minimizing # of disjunctions(170428)[10]
                    input: false
                    output: false
                  end minimizing # of disjunctions(170428)[10] (0.000000 sec.)
                  
                end InterpProver.interpolate_simplify(170409)[9] (0.000000 sec.)
                
              end InterpProver.interpolate_check(170408)[8] (0.001000 sec.)
              output: false
            end InterpProver.interpolate_log(170407)[7] (0.001000 sec.)
            
          end InterpProver.interpolate_fresh(170406)[6] (0.001000 sec.)
          
        end InterpProver.interpolate(170405)[5] (0.001000 sec.)
        output:
          P[<fail_1589@238:0>](var726:bool) = false
      end ApronInterface.convex_hull_interpolate(170394)[4] (0.001000 sec.)
      Horn clauses:
        P[<f_1046@206:2>](<f_f_1579@227:1>:bool,true:bool,<f_f_1579@227:0>:int),
        P[<<read__1038@222:2>@225:0>](<f_f_1579@227:1>:bool,<f_f_1579@227:0>:int,<read__1038@229:1>:int)|- bot
        
         ((<<read__1038@222:2>@225:0> = <read__1038@222:1>) && (not <read__1038@222:0>))
        |- P[<<read__1038@222:2>@225:0>](<read__1038@222:0>:bool,<read__1038@222:1>:int,
                                         <<read__1038@222:2>@225:0>:int)
        
        P[<f_1046@206:2>](true:bool,<f_f_1578@220:3>:bool,<read__1038@222:1>:int)|- bot
        
         ((<f_1046@206:2> = 0) && ((not <f_1046@206:1>) && (not <f_1046@206:0>)))
        |- P[<f_1046@206:2>](<f_1046@206:0>:bool,<f_1046@206:1>:bool,
                             <f_1046@206:2>:int)
      lower bounds:
        P[<<read__1038@222:2>@225:0>](<read__1038@222:0>:bool,<read__1038@222:1>:int,<<read__1038@222:2>@225:0>:int) =
        ((<<read__1038@222:2>@225:0> = <read__1038@222:1>) && (not <read__1038@222:0>))
        P[<f_1046@206:2>](<f_1046@206:0>:bool,<f_1046@206:1>:bool,<f_1046@206:2>:int) =
        ((<f_1046@206:2> = 0) && ((not <f_1046@206:1>) && (not <f_1046@206:0>)))
      upper bounds:
        P[<<read__1038@222:2>@225:0>](var730:bool,var731:int,var732:int) = true
      begin GenHcSolver.classify_pids(171546)[4]
        output:
          [<<read__1038@222:2>@225:0>]
      end GenHcSolver.classify_pids(171546)[4] (0.000000 sec.)
      lb:((<<read__1038@222:2>@225:0> = <read__1038@222:1>) && (not <read__1038@222:0>))
      nub:false
      begin ApronInterface.convex_hull_interpolate(171549)[4]
        lb:((<<read__1038@222:2>@225:0> = <read__1038@222:1>) && (not <read__1038@222:0>))
        nub:false
        begin ExtFormula.Formula.case_analysis_boolean(171561)[5]
          ts: ((<<read__1038@222:2>@225:0> = <read__1038@222:1>) && (not <read__1038@222:0>))
          
        end ExtFormula.Formula.case_analysis_boolean(171561)[5] (0.000000 sec.)
        begin ExtFormula.Formula.case_analysis_boolean(171585)[5]
          ts: false
          
        end ExtFormula.Formula.case_analysis_boolean(171585)[5] (0.000000 sec.)
        lb':(((-1 >= 0) && (<read__1038@222:0> = true)) ||
             (((<<read__1038@222:2>@225:0> + (-1 * <read__1038@222:1>)) = 0) && (<read__1038@222:0> = false)))
        nub':(-1 >= 0)
        begin InterpProver.interpolate(171588)[5]
          begin InterpProver.interpolate_fresh(171589)[6]
            begin InterpProver.interpolate_log(171590)[7]
              input1: (((-1 >= 0) && (<read__1038@222:0> = true)) ||
                       (((<<read__1038@222:2>@225:0> + (-1 * <read__1038@222:1>)) = 0) && (<read__1038@222:0> = false)))
              input2: (-1 >= 0)
              begin InterpProver.interpolate_check(171591)[8]
                begin InterpProver.interpolate_simplify(171592)[9]
                  begin InterpProver.interpolate_quick(171628)[10]
                    
                  end InterpProver.interpolate_quick(171628)[10] (0.000000 sec.)
                  
                end InterpProver.interpolate_simplify(171592)[9] (0.001000 sec.)
                
              end InterpProver.interpolate_check(171591)[8] (0.001000 sec.)
              output: true
            end InterpProver.interpolate_log(171590)[7] (0.001000 sec.)
            
          end InterpProver.interpolate_fresh(171589)[6] (0.001000 sec.)
          
        end InterpProver.interpolate(171588)[5] (0.001000 sec.)
        output:
          P[<<read__1038@222:2>@225:0>](<read__1038@222:0>:bool,<read__1038@222:1>:int,<<read__1038@222:2>@225:0>:int) =
          true
      end ApronInterface.convex_hull_interpolate(171549)[4] (0.001999 sec.)
      Horn clauses:
        P[<f_1046@206:2>](<f_f_1579@227:1>:bool,true:bool,<f_f_1579@227:0>:int)|- bot
        
        P[<f_1046@206:2>](true:bool,<f_f_1578@220:3>:bool,<read__1038@222:1>:int)|- bot
        
         ((<f_1046@206:2> = 0) && ((not <f_1046@206:1>) && (not <f_1046@206:0>)))
        |- P[<f_1046@206:2>](<f_1046@206:0>:bool,<f_1046@206:1>:bool,
                             <f_1046@206:2>:int)
      lower bounds:
        P[<f_1046@206:2>](<f_1046@206:0>:bool,<f_1046@206:1>:bool,<f_1046@206:2>:int) =
        ((<f_1046@206:2> = 0) && ((not <f_1046@206:1>) && (not <f_1046@206:0>)))
      upper bounds:
        P[<f_1046@206:2>](var733:bool,var734:bool,var735:int) = ((not var734) && (not var733))
      begin GenHcSolver.classify_pids(172501)[4]
        output:
          [<f_1046@206:2>]
      end GenHcSolver.classify_pids(172501)[4] (0.000000 sec.)
      lb:((<f_1046@206:2> = 0) && ((not <f_1046@206:1>) && (not <f_1046@206:0>)))
      nub:(not ((not <f_1046@206:1>) && (not <f_1046@206:0>)))
      begin ApronInterface.convex_hull_interpolate(172504)[4]
        lb:((<f_1046@206:2> = 0) && ((not <f_1046@206:1>) && (not <f_1046@206:0>)))
        nub:(not ((not <f_1046@206:1>) && (not <f_1046@206:0>)))
        begin ExtFormula.Formula.case_analysis_boolean(172515)[5]
          ts: ((<f_1046@206:2> = 0) && ((not <f_1046@206:1>) && (not <f_1046@206:0>)))
          
        end ExtFormula.Formula.case_analysis_boolean(172515)[5] (0.001000 sec.)
        begin ExtFormula.Formula.case_analysis_boolean(172552)[5]
          ts: (<f_1046@206:1> || <f_1046@206:0>)
          
        end ExtFormula.Formula.case_analysis_boolean(172552)[5] (0.000000 sec.)
        lb':(((-1 >= 0) && ((<f_1046@206:1> = true) && (<f_1046@206:0> = true))) ||
             (((-1 >= 0) && ((<f_1046@206:1> = true) && (<f_1046@206:0> = false))) ||
              (((-1 >= 0) && ((<f_1046@206:1> = false) && (<f_1046@206:0> = true))) ||
               ((<f_1046@206:2> = 0) && ((<f_1046@206:1> = false) && (<f_1046@206:0> = false))))))
        nub':(((<f_1046@206:1> = true) && (<f_1046@206:0> = true)) ||
              (((<f_1046@206:1> = true) && (<f_1046@206:0> = false)) ||
               (((<f_1046@206:1> = false) && (<f_1046@206:0> = true)) ||
                ((-1 >= 0) && ((<f_1046@206:1> = false) && (<f_1046@206:0> = false))))))
        begin InterpProver.interpolate(172570)[5]
          begin InterpProver.interpolate_fresh(172571)[6]
            begin InterpProver.interpolate_log(172572)[7]
              input1: (((-1 >= 0) && ((<f_1046@206:1> = true) && (<f_1046@206:0> = true))) ||
                       (((-1 >= 0) && ((<f_1046@206:1> = true) && (<f_1046@206:0> = false))) ||
                        (((-1 >= 0) && ((<f_1046@206:1> = false) && (<f_1046@206:0> = true))) ||
                         ((<f_1046@206:2> = 0) && ((<f_1046@206:1> = false) && (<f_1046@206:0> = false))))))
              input2: (((<f_1046@206:1> = true) && (<f_1046@206:0> = true)) ||
                       (((<f_1046@206:1> = true) && (<f_1046@206:0> = false)) ||
                        (((<f_1046@206:1> = false) && (<f_1046@206:0> = true)) ||
                         ((-1 >= 0) && ((<f_1046@206:1> = false) && (<f_1046@206:0> = false))))))
              begin InterpProver.interpolate_check(172573)[8]
                begin InterpProver.interpolate_simplify(172574)[9]
                  begin InterpProver.interpolate_quick(172700)[10]
                    begin CsisatInterface.interpolate_csisat_wrap(172709)[11]
                      begin CsisatInterface.interpolate_csisat_post_process(172710)[12]
                        begin CsisatInterface.interpolate_csisat_log(172711)[13]
                          input1: (not v_sep_f_1046_sep_206_sep_0 = true() & not v_sep_f_1046_sep_206_sep_1 = true())
                          input2: ((not v_sep_f_1046_sep_206_sep_0 = true() & v_sep_f_1046_sep_206_sep_1 = true()) | (not v_sep_f_1046_sep_206_sep_1 = true() & v_sep_f_1046_sep_206_sep_0 = true()) | (v_sep_f_1046_sep_206_sep_0 = true() & v_sep_f_1046_sep_206_sep_1 = true()))
                          begin CsisatInterface.interpolate_csisat_raw(172712)[14]
                            
                          end CsisatInterface.interpolate_csisat_raw(172712)[14] (0.000000 sec.)
                          output: ((not v_sep_f_1046_sep_206_sep_1 = true() | v_sep_f_1046_sep_206_sep_0 = true()) & not v_sep_f_1046_sep_206_sep_0 = true())
                          
                        end CsisatInterface.interpolate_csisat_log(172711)[13] (0.000000 sec.)
                        after simplification: ((not v_sep_f_1046_sep_206_sep_1 = true() | v_sep_f_1046_sep_206_sep_0 = true()) & not v_sep_f_1046_sep_206_sep_0 = true())
                        after dnf conversion: ((not v_sep_f_1046_sep_206_sep_1 = true() & not v_sep_f_1046_sep_206_sep_0 = true()) | (v_sep_f_1046_sep_206_sep_0 = true() & not v_sep_f_1046_sep_206_sep_0 = true()))
                        
                      end CsisatInterface.interpolate_csisat_post_process(172710)[12] (0.000000 sec.)
                      
                    end CsisatInterface.interpolate_csisat_wrap(172709)[11] (0.000000 sec.)
                    
                  end InterpProver.interpolate_quick(172700)[10] (0.001000 sec.)
                  begin minimizing # of conjunctions(172732)[10]
                    input: ((not <f_1046@206:1>) && (not <f_1046@206:0>))
                    output: ((not <f_1046@206:0>) && (not <f_1046@206:1>))
                  end minimizing # of conjunctions(172732)[10] (0.002000 sec.)
                  
                end InterpProver.interpolate_simplify(172574)[9] (0.003000 sec.)
                
              end InterpProver.interpolate_check(172573)[8] (0.003000 sec.)
              output: ((not <f_1046@206:0>) && (not <f_1046@206:1>))
            end InterpProver.interpolate_log(172572)[7] (0.003999 sec.)
            
          end InterpProver.interpolate_fresh(172571)[6] (0.003999 sec.)
          
        end InterpProver.interpolate(172570)[5] (0.003999 sec.)
        output:
          P[<f_1046@206:2>](<f_1046@206:0>:bool,<f_1046@206:1>:bool,<f_1046@206:2>:int) =
          ((not <f_1046@206:0>) && (not <f_1046@206:1>))
      end ApronInterface.convex_hull_interpolate(172504)[4] (0.004999 sec.)
      begin HcSolver.check_validity(173083)[4]
        input:
          P[<fail_1589@238:0>](<fail_1589@238:0>:bool)|- bot
          
          P[<read__1038@229:1>](true:bool,<br_readit_1585@235:1>:int),
          ((<br_readit_1585@235:1> <> 1) && ((<br_readit_1585@235:1> <> 3) && <fail_1589@238:0>))
          |- P[<fail_1589@238:0>](<fail_1589@238:0>:bool)
          
          P[<f_1046@206:2>](<f_f_1579@227:1>:bool,<read__1038@229:0>:bool,<f_f_1579@227:0>:int),
          P[<<close__1043@208:2>@211:0>](<f_f_1579@227:1>:bool,<f_f_1579@227:0>:int,<f_f_1579@227:3>:int),
          P[<<close__1043@215:2>@218:0>](<read__1038@229:0>:bool,<f_f_1579@227:3>:int,<f_f_1579@227:2>:int),
          P[<<read__1038@222:2>@225:0>](<f_f_1579@227:1>:bool,<f_f_1579@227:0>:int,<read__1038@229:1>:int)|- P[<read__1038@229:1>](
          <read__1038@229:0>:bool,<read__1038@229:1>:int)
          
          P[<read__1038@222:1>](<read__1038@222:0>:bool,<read__1038@222:1>:int),
          ((<<read__1038@222:2>@225:0> = <read__1038@222:1>) && (not <read__1038@222:0>))
          |- P[<<read__1038@222:2>@225:0>](<read__1038@222:0>:bool,<read__1038@222:1>:int,
                                           <<read__1038@222:2>@225:0>:int)
          
          P[<f_1046@206:2>](<read__1038@222:0>:bool,<f_f_1578@220:3>:bool,<read__1038@222:1>:int),
          P[<<close__1043@208:2>@211:0>](<read__1038@222:0>:bool,<read__1038@222:1>:int,<f_f_1578@220:2>:int),
          P[<<close__1043@215:2>@218:0>](<f_f_1578@220:3>:bool,<f_f_1578@220:2>:int,<f_f_1578@220:5>:int)|- P[<read__1038@222:1>](
          <read__1038@222:0>:bool,<read__1038@222:1>:int)
          
          P[<close__1043@215:1>](<close__1043@215:0>:bool,<close__1043@215:1>:int),
          ((<<close__1043@215:2>@218:0> = <close__1043@215:1>) && (not <close__1043@215:0>))
          |- P[<<close__1043@215:2>@218:0>](<close__1043@215:0>:bool,
                                            <close__1043@215:1>:int,<<close__1043@215:2>@218:0>:int)
          
          P[<f_1046@206:2>](<f_f_1577@213:1>:bool,<close__1043@215:0>:bool,<f_f_1577@213:0>:int),
          P[<<close__1043@208:2>@211:0>](<f_f_1577@213:1>:bool,<f_f_1577@213:0>:int,<close__1043@215:1>:int)|- P[<close__1043@215:1>](
          <close__1043@215:0>:bool,<close__1043@215:1>:int)
          
          P[<close__1043@208:1>](<close__1043@208:0>:bool,<close__1043@208:1>:int),
          ((<<close__1043@208:2>@211:0> = <close__1043@208:1>) && (not <close__1043@208:0>))
          |- P[<<close__1043@208:2>@211:0>](<close__1043@208:0>:bool,
                                            <close__1043@208:1>:int,<<close__1043@208:2>@211:0>:int)
          
          P[<f_1046@206:2>](<close__1043@208:0>:bool,<f_1046@206:1>:bool,<close__1043@208:1>:int)|- P[<close__1043@208:1>](
          <close__1043@208:0>:bool,<close__1043@208:1>:int)
          
           ((<f_1046@206:2> = 0) && ((not <f_1046@206:1>) && (not <f_1046@206:0>)))
          |- P[<f_1046@206:2>](<f_1046@206:0>:bool,<f_1046@206:1>:bool,
                               <f_1046@206:2>:int)
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        
      end HcSolver.check_validity(173083)[4] (0.010998 sec.)
      solution:
        P[<fail_1589@238:0>](var726:bool) = false
        P[<read__1038@229:1>](<read__1038@222:0>:bool,<read__1038@222:1>:int) = (not <read__1038@222:0>)
        P[<<read__1038@222:2>@225:0>](<read__1038@222:0>:bool,<read__1038@222:1>:int,<<read__1038@222:2>@225:0>:int) =
        true
        P[<read__1038@222:1>](<read__1038@222:0>:bool,<read__1038@222:1>:int) = (not <read__1038@222:0>)
        P[<<close__1043@215:2>@218:0>](<close__1043@208:0>:bool,<close__1043@208:1>:int,<<close__1043@208:2>@211:0>:int) =
        true
        P[<close__1043@215:1>](<close__1043@208:0>:bool,<close__1043@208:1>:int) = true
        P[<<close__1043@208:2>@211:0>](<close__1043@208:0>:bool,<close__1043@208:1>:int,<<close__1043@208:2>@211:0>:int) =
        true
        P[<close__1043@208:1>](<close__1043@208:0>:bool,<close__1043@208:1>:int) = true
        P[<f_1046@206:2>](<f_1046@206:0>:bool,<f_1046@206:1>:bool,<f_1046@206:2>:int) =
        ((not <f_1046@206:0>) && (not <f_1046@206:1>))
    end GenHcSolver.solve(151971)[3] (0.100984 sec.)
    begin YhornInterface.solve(173822)[3]
      begin HcSolver.solve_ub(173823)[4]
        encoded:
          P[<fail_1589@238:0>](<fail_1589@238:0>:int)|- bot
          
          P[<read__1038@229:1>](1:int,<br_readit_1585@235:1>:int),
          ((<br_readit_1585@235:1> <> 1) && ((<br_readit_1585@235:1> <> 3) && (<fail_1589@238:0> = 1)))
          |- P[<fail_1589@238:0>](<fail_1589@238:0>:int)
          
          P[<f_1046@206:2>](<f_f_1579@227:1>:int,<read__1038@229:0>:int,<f_f_1579@227:0>:int),
          P[<<close__1043@208:2>@211:0>](<f_f_1579@227:1>:int,<f_f_1579@227:0>:int,<f_f_1579@227:3>:int),
          P[<<close__1043@215:2>@218:0>](<read__1038@229:0>:int,<f_f_1579@227:3>:int,<f_f_1579@227:2>:int),
          P[<<read__1038@222:2>@225:0>](<f_f_1579@227:1>:int,<f_f_1579@227:0>:int,<read__1038@229:1>:int)|- P[<read__1038@229:1>](
          <read__1038@229:0>:int,<read__1038@229:1>:int)
          
          P[<read__1038@222:1>](<read__1038@222:0>:int,<read__1038@222:1>:int),
          ((<<read__1038@222:2>@225:0> = <read__1038@222:1>) && (not (
                                                                    <read__1038@222:0> = 1)))
          |- P[<<read__1038@222:2>@225:0>](<read__1038@222:0>:int,<read__1038@222:1>:int,
                                           <<read__1038@222:2>@225:0>:int)
          
          P[<f_1046@206:2>](<read__1038@222:0>:int,<f_f_1578@220:3>:int,<read__1038@222:1>:int),
          P[<<close__1043@208:2>@211:0>](<read__1038@222:0>:int,<read__1038@222:1>:int,<f_f_1578@220:2>:int),
          P[<<close__1043@215:2>@218:0>](<f_f_1578@220:3>:int,<f_f_1578@220:2>:int,<f_f_1578@220:5>:int)|- P[<read__1038@222:1>](
          <read__1038@222:0>:int,<read__1038@222:1>:int)
          
          P[<close__1043@215:1>](<close__1043@215:0>:int,<close__1043@215:1>:int),
          ((<<close__1043@215:2>@218:0> = <close__1043@215:1>) && (not (
                                                                    <close__1043@215:0> = 1)))
          |- P[<<close__1043@215:2>@218:0>](<close__1043@215:0>:int,<close__1043@215:1>:int,
                                            <<close__1043@215:2>@218:0>:int)
          
          P[<f_1046@206:2>](<f_f_1577@213:1>:int,<close__1043@215:0>:int,<f_f_1577@213:0>:int),
          P[<<close__1043@208:2>@211:0>](<f_f_1577@213:1>:int,<f_f_1577@213:0>:int,<close__1043@215:1>:int)|- P[<close__1043@215:1>](
          <close__1043@215:0>:int,<close__1043@215:1>:int)
          
          P[<close__1043@208:1>](<close__1043@208:0>:int,<close__1043@208:1>:int),
          ((<<close__1043@208:2>@211:0> = <close__1043@208:1>) && (not (
                                                                    <close__1043@208:0> = 1)))
          |- P[<<close__1043@208:2>@211:0>](<close__1043@208:0>:int,<close__1043@208:1>:int,
                                            <<close__1043@208:2>@211:0>:int)
          
          P[<f_1046@206:2>](<close__1043@208:0>:int,<f_1046@206:1>:int,<close__1043@208:1>:int)|- P[<close__1043@208:1>](
          <close__1043@208:0>:int,<close__1043@208:1>:int)
          
           ((<f_1046@206:2> = 0) && ((not (<f_1046@206:1> = 1)) && (not (
                                                                    <f_1046@206:0> = 1))))
          |- P[<f_1046@206:2>](<f_1046@206:0>:int,<f_1046@206:1>:int,
                               <f_1046@206:2>:int)
        input to Yhorn:
          P[<fail_1589@238:0>](<fail_1589@238:0>:int)|- bot
          
          P[<read__1038@229:1>](var739:int,<br_readit_1585@235:1>:int),
          ((<br_readit_1585@235:1> <> 3) &&
           ((<br_readit_1585@235:1> <> 1) && ((var739 = 1) && (<fail_1589@238:0> = 1))))
          |- P[<fail_1589@238:0>](<fail_1589@238:0>:int)
          
          P[<f_1046@206:2>](<f_f_1579@227:1>:int,<read__1038@229:0>:int,<f_f_1579@227:0>:int),
          P[<<close__1043@208:2>@211:0>](<f_f_1579@227:1>:int,<f_f_1579@227:0>:int,<f_f_1579@227:3>:int),
          P[<<close__1043@215:2>@218:0>](<read__1038@229:0>:int,<f_f_1579@227:3>:int,<f_f_1579@227:2>:int),
          P[<<read__1038@222:2>@225:0>](<f_f_1579@227:1>:int,<f_f_1579@227:0>:int,<read__1038@229:1>:int)|- P[<read__1038@229:1>](
          <read__1038@229:0>:int,<read__1038@229:1>:int)
          
          P[<read__1038@222:1>](<read__1038@222:0>:int,<read__1038@222:1>:int),
          ((<<read__1038@222:2>@225:0> = <read__1038@222:1>) && (<read__1038@222:0> <> 1))
          |- P[<<read__1038@222:2>@225:0>](<read__1038@222:0>:int,<read__1038@222:1>:int,
                                           <<read__1038@222:2>@225:0>:int)
          
          P[<f_1046@206:2>](<read__1038@222:0>:int,<f_f_1578@220:3>:int,<read__1038@222:1>:int),
          P[<<close__1043@208:2>@211:0>](<read__1038@222:0>:int,<read__1038@222:1>:int,<f_f_1578@220:2>:int),
          P[<<close__1043@215:2>@218:0>](<f_f_1578@220:3>:int,<f_f_1578@220:2>:int,<f_f_1578@220:5>:int)|- P[<read__1038@222:1>](
          <read__1038@222:0>:int,<read__1038@222:1>:int)
          
          P[<close__1043@215:1>](<close__1043@215:0>:int,<close__1043@215:1>:int),
          ((<<close__1043@215:2>@218:0> = <close__1043@215:1>) && (<close__1043@215:0> <> 1))
          |- P[<<close__1043@215:2>@218:0>](<close__1043@215:0>:int,<close__1043@215:1>:int,
                                            <<close__1043@215:2>@218:0>:int)
          
          P[<f_1046@206:2>](<f_f_1577@213:1>:int,<close__1043@215:0>:int,<f_f_1577@213:0>:int),
          P[<<close__1043@208:2>@211:0>](<f_f_1577@213:1>:int,<f_f_1577@213:0>:int,<close__1043@215:1>:int)|- P[<close__1043@215:1>](
          <close__1043@215:0>:int,<close__1043@215:1>:int)
          
          P[<close__1043@208:1>](<close__1043@208:0>:int,<close__1043@208:1>:int),
          ((<<close__1043@208:2>@211:0> = <close__1043@208:1>) && (<close__1043@208:0> <> 1))
          |- P[<<close__1043@208:2>@211:0>](<close__1043@208:0>:int,<close__1043@208:1>:int,
                                            <<close__1043@208:2>@211:0>:int)
          
          P[<f_1046@206:2>](<close__1043@208:0>:int,<f_1046@206:1>:int,<close__1043@208:1>:int)|- P[<close__1043@208:1>](
          <close__1043@208:0>:int,<close__1043@208:1>:int)
          
           ((<f_1046@206:0> <> 1) && ((<f_1046@206:1> <> 1) && (<f_1046@206:2> = 0)))
          |- P[<f_1046@206:2>](<f_1046@206:0>:int,<f_1046@206:1>:int,
                               <f_1046@206:2>:int)Yhorn (Wed Sep 25 10:52:05 JST 2013)


(0=0) & (v_sep_fail_1589_sep_238_sep_0($2462)) -> 1=0.
(($2462-1=0) & ($2463-1=0) & ($2464-1<>0) & ($2464-3<>0)) & (v_sep_read__1038_sep_229_sep_1($2463,$2464)) -> v_sep_fail_1589_sep_238_sep_0($2462).
(0=0) & (v_sep_read__1038_sep_222_sep_2_sep_225_sep_0($2465,$2466,$2467)) & (v_sep_close__1043_sep_215_sep_2_sep_218_sep_0($2468,$2469,$2470)) & (v_sep_close__1043_sep_208_sep_2_sep_211_sep_0($2465,$2466,$2469)) & (v_sep_f_1046_sep_206_sep_2($2465,$2468,$2466)) -> v_sep_read__1038_sep_229_sep_1($2468,$2467).
(($2471-1<>0) & ($2472-$2473=0)) & (v_sep_read__1038_sep_222_sep_1($2471,$2473)) -> v_sep_read__1038_sep_222_sep_2_sep_225_sep_0($2471,$2473,$2472).
(0=0) & (v_sep_close__1043_sep_215_sep_2_sep_218_sep_0($2474,$2475,$2476)) & (v_sep_close__1043_sep_208_sep_2_sep_211_sep_0($2471,$2473,$2475)) & (v_sep_f_1046_sep_206_sep_2($2471,$2474,$2473)) -> v_sep_read__1038_sep_222_sep_1($2471,$2473).
(($2477-1<>0) & ($2478-$2479=0)) & (v_sep_close__1043_sep_215_sep_1($2477,$2479)) -> v_sep_close__1043_sep_215_sep_2_sep_218_sep_0($2477,$2479,$2478).
(0=0) & (v_sep_close__1043_sep_208_sep_2_sep_211_sep_0($2480,$2481,$2479)) & (v_sep_f_1046_sep_206_sep_2($2480,$2477,$2481)) -> v_sep_close__1043_sep_215_sep_1($2477,$2479).
(($2482-1<>0) & ($2483-$2484=0)) & (v_sep_close__1043_sep_208_sep_1($2482,$2484)) -> v_sep_close__1043_sep_208_sep_2_sep_211_sep_0($2482,$2484,$2483).
(0=0) & (v_sep_f_1046_sep_206_sep_2($2482,$2485,$2484)) -> v_sep_close__1043_sep_208_sep_1($2482,$2484).
($2486=0) & ($2485-1<>0) & ($2487-1<>0) -> v_sep_f_1046_sep_206_sep_2($2487,$2485,$2486).


v_sep_close__1043_sep_208_sep_1: X
v_sep_close__1043_sep_208_sep_2_sep_211_sep_0: X
v_sep_close__1043_sep_215_sep_1: X
v_sep_close__1043_sep_215_sep_2_sep_218_sep_0: X
v_sep_f_1046_sep_206_sep_2: X
v_sep_fail_1589_sep_238_sep_0: X
v_sep_read__1038_sep_222_sep_1: X
v_sep_read__1038_sep_222_sep_2_sep_225_sep_0: X
v_sep_read__1038_sep_229_sep_1: X
......................Split disj [48] 1.881713
Reconstrcut: 3 ****)

v_sep_close__1043_sep_208_sep_1: X
v_sep_close__1043_sep_208_sep_2_sep_211_sep_0: X
v_sep_close__1043_sep_215_sep_1: X
v_sep_close__1043_sep_215_sep_2_sep_218_sep_0: X
v_sep_f_1046_sep_206_sep_2: X
v_sep_fail_1589_sep_238_sep_0: (X) | (X) | (X) | (X)
v_sep_read__1038_sep_222_sep_1: X
v_sep_read__1038_sep_222_sep_2_sep_225_sep_0: X
v_sep_read__1038_sep_229_sep_1: X
.........Extend [54]1.884713
Reconstrcut: 10

v_sep_close__1043_sep_208_sep_1: X
v_sep_close__1043_sep_208_sep_2_sep_211_sep_0: X
v_sep_close__1043_sep_215_sep_1: X
v_sep_close__1043_sep_215_sep_2_sep_218_sep_0: X
v_sep_f_1046_sep_206_sep_2: X
v_sep_fail_1589_sep_238_sep_0: (X) | (X) | (X) | (X)
v_sep_read__1038_sep_222_sep_1: X
v_sep_read__1038_sep_222_sep_2_sep_225_sep_0: X
v_sep_read__1038_sep_229_sep_1: X
.........Split conj [54] 1.889712
(Reconstrcut: 14 ****)
v_sep_close__1043_sep_208_sep_1: X
v_sep_close__1043_sep_208_sep_2_sep_211_sep_0: X
v_sep_close__1043_sep_215_sep_1: X
v_sep_close__1043_sep_215_sep_2_sep_218_sep_0: X
v_sep_f_1046_sep_206_sep_2: X
v_sep_fail_1589_sep_238_sep_0: (X) | (X) | (X) | (X)
v_sep_read__1038_sep_222_sep_1: X
v_sep_read__1038_sep_222_sep_2_sep_225_sep_0: X
v_sep_read__1038_sep_229_sep_1: (X) & (X) & (X) & (X)
.........................Extend [60]1.895711
Reconstrcut: 10

v_sep_close__1043_sep_208_sep_1: X
v_sep_close__1043_sep_208_sep_2_sep_211_sep_0: X
v_sep_close__1043_sep_215_sep_1: X
v_sep_close__1043_sep_215_sep_2_sep_218_sep_0: X
v_sep_f_1046_sep_206_sep_2: X
v_sep_fail_1589_sep_238_sep_0: (X) | (X) | (X) | (X)
v_sep_read__1038_sep_222_sep_1: X
v_sep_read__1038_sep_222_sep_2_sep_225_sep_0: X
v_sep_read__1038_sep_229_sep_1: (X) & (X) & (X) & (X)
.........Extend [60]1.90071
Reconstrcut: 22

v_sep_close__1043_sep_208_sep_1: X
v_sep_close__1043_sep_208_sep_2_sep_211_sep_0: X
v_sep_close__1043_sep_215_sep_1: X
v_sep_close__1043_sep_215_sep_2_sep_218_sep_0: X
v_sep_f_1046_sep_206_sep_2: X
v_sep_fail_1589_sep_238_sep_0: (X) | (X) | (X) | (X)
v_sep_read__1038_sep_222_sep_1: X
v_sep_read__1038_sep_222_sep_2_sep_225_sep_0: X
v_sep_read__1038_sep_229_sep_1: (X) & (X) & (X) & (X)
.........................Split conj [60] 1.907709
(Reconstrcut: 22 ****)
v_sep_close__1043_sep_208_sep_1: X
v_sep_close__1043_sep_208_sep_2_sep_211_sep_0: X
v_sep_close__1043_sep_215_sep_1: X
v_sep_close__1043_sep_215_sep_2_sep_218_sep_0: X
v_sep_f_1046_sep_206_sep_2: X
v_sep_fail_1589_sep_238_sep_0: (X) | (X) | (X) | (X)
v_sep_read__1038_sep_222_sep_1: X
v_sep_read__1038_sep_222_sep_2_sep_225_sep_0: (X) & (X) & (X) & (X)
v_sep_read__1038_sep_229_sep_1: (X) & (X) & (X) & (X)
.................................Extend [69]1.915708
Reconstrcut: 10

v_sep_close__1043_sep_208_sep_1: X
v_sep_close__1043_sep_208_sep_2_sep_211_sep_0: X
v_sep_close__1043_sep_215_sep_1: X
v_sep_close__1043_sep_215_sep_2_sep_218_sep_0: X
v_sep_f_1046_sep_206_sep_2: X
v_sep_fail_1589_sep_238_sep_0: (X) | (X) | (X) | (X)
v_sep_read__1038_sep_222_sep_1: X
v_sep_read__1038_sep_222_sep_2_sep_225_sep_0: (X) & (X) & (X) & (X)
v_sep_read__1038_sep_229_sep_1: (X) & (X) & (X) & (X)
.........Extend [69]1.920707
Reconstrcut: 22

v_sep_close__1043_sep_208_sep_1: X
v_sep_close__1043_sep_208_sep_2_sep_211_sep_0: X
v_sep_close__1043_sep_215_sep_1: X
v_sep_close__1043_sep_215_sep_2_sep_218_sep_0: X
v_sep_f_1046_sep_206_sep_2: X
v_sep_fail_1589_sep_238_sep_0: (X) | (X) | (X) | (X)
v_sep_read__1038_sep_222_sep_1: X
v_sep_read__1038_sep_222_sep_2_sep_225_sep_0: (X) & (X) & (X) & (X)
v_sep_read__1038_sep_229_sep_1: (X) & (X) & (X) & (X)
.........................Split conj [69] 1.928706
(Reconstrcut: 36 *****)
v_sep_close__1043_sep_208_sep_1: X
v_sep_close__1043_sep_208_sep_2_sep_211_sep_0: X
v_sep_close__1043_sep_215_sep_1: X
v_sep_close__1043_sep_215_sep_2_sep_218_sep_0: (X) & (X) & (X) & (X) & (X)
v_sep_f_1046_sep_206_sep_2: X
v_sep_fail_1589_sep_238_sep_0: (X) | (X) | (X) | (X)
v_sep_read__1038_sep_222_sep_1: X
v_sep_read__1038_sep_222_sep_2_sep_225_sep_0: (X) & (X) & (X) & (X)
v_sep_read__1038_sep_229_sep_1: (X) & (X) & (X) & (X)
..............................................Extend [81]1.940704
Reconstrcut: 10

v_sep_close__1043_sep_208_sep_1: X
v_sep_close__1043_sep_208_sep_2_sep_211_sep_0: X
v_sep_close__1043_sep_215_sep_1: X
v_sep_close__1043_sep_215_sep_2_sep_218_sep_0: (X) & (X) & (X) & (X) & (X)
v_sep_f_1046_sep_206_sep_2: X
v_sep_fail_1589_sep_238_sep_0: (X) | (X) | (X) | (X)
v_sep_read__1038_sep_222_sep_1: X
v_sep_read__1038_sep_222_sep_2_sep_225_sep_0: (X) & (X) & (X) & (X)
v_sep_read__1038_sep_229_sep_1: (X) & (X) & (X) & (X)
.........Extend [81]1.944704
Reconstrcut: 22

v_sep_close__1043_sep_208_sep_1: X
v_sep_close__1043_sep_208_sep_2_sep_211_sep_0: X
v_sep_close__1043_sep_215_sep_1: X
v_sep_close__1043_sep_215_sep_2_sep_218_sep_0: (X) & (X) & (X) & (X) & (X)
v_sep_f_1046_sep_206_sep_2: X
v_sep_fail_1589_sep_238_sep_0: (X) | (X) | (X) | (X)
v_sep_read__1038_sep_222_sep_1: X
v_sep_read__1038_sep_222_sep_2_sep_225_sep_0: (X) & (X) & (X) & (X)
v_sep_read__1038_sep_229_sep_1: (X) & (X) & (X) & (X)
.........................Split conj [81] 1.953702
(Reconstrcut: 53 ******)
v_sep_close__1043_sep_208_sep_1: X
v_sep_close__1043_sep_208_sep_2_sep_211_sep_0: (X) & (X) & (X) & (X) & (X) & (X)
v_sep_close__1043_sep_215_sep_1: X
v_sep_close__1043_sep_215_sep_2_sep_218_sep_0: (X) & (X) & (X) & (X) & (X)
v_sep_f_1046_sep_206_sep_2: X
v_sep_fail_1589_sep_238_sep_0: (X) | (X) | (X) | (X)
v_sep_read__1038_sep_222_sep_1: X
v_sep_read__1038_sep_222_sep_2_sep_225_sep_0: (X) & (X) & (X) & (X)
v_sep_read__1038_sep_229_sep_1: (X) & (X) & (X) & (X)
............................................................Extend [96]1.970699
Reconstrcut: 10

v_sep_close__1043_sep_208_sep_1: X
v_sep_close__1043_sep_208_sep_2_sep_211_sep_0: (X) & (X) & (X) & (X) & (X) & (X)
v_sep_close__1043_sep_215_sep_1: X
v_sep_close__1043_sep_215_sep_2_sep_218_sep_0: (X) & (X) & (X) & (X) & (X)
v_sep_f_1046_sep_206_sep_2: X
v_sep_fail_1589_sep_238_sep_0: (X) | (X) | (X) | (X)
v_sep_read__1038_sep_222_sep_1: X
v_sep_read__1038_sep_222_sep_2_sep_225_sep_0: (X) & (X) & (X) & (X)
v_sep_read__1038_sep_229_sep_1: (X) & (X) & (X) & (X)
.........Extend [96]1.975698
Reconstrcut: 22

v_sep_close__1043_sep_208_sep_1: X
v_sep_close__1043_sep_208_sep_2_sep_211_sep_0: (X) & (X) & (X) & (X) & (X) & (X)
v_sep_close__1043_sep_215_sep_1: X
v_sep_close__1043_sep_215_sep_2_sep_218_sep_0: (X) & (X) & (X) & (X) & (X)
v_sep_f_1046_sep_206_sep_2: X
v_sep_fail_1589_sep_238_sep_0: (X) | (X) | (X) | (X)
v_sep_read__1038_sep_222_sep_1: X
v_sep_read__1038_sep_222_sep_2_sep_225_sep_0: (X) & (X) & (X) & (X)
v_sep_read__1038_sep_229_sep_1: (X) & (X) & (X) & (X)
.........................Split conj [96] 1.983697
(Reconstrcut: 73 *******)
v_sep_close__1043_sep_208_sep_1: X
v_sep_close__1043_sep_208_sep_2_sep_211_sep_0: (X) & (X) & (X) & (X) & (X) & (X)
v_sep_close__1043_sep_215_sep_1: X
v_sep_close__1043_sep_215_sep_2_sep_218_sep_0: (X) & (X) & (X) & (X) & (X)
v_sep_f_1046_sep_206_sep_2: (X) & (X) & (X) & (X) & (X) & (X) & (X)
v_sep_fail_1589_sep_238_sep_0: (X) | (X) | (X) | (X)
v_sep_read__1038_sep_222_sep_1: X
v_sep_read__1038_sep_222_sep_2_sep_225_sep_0: (X) & (X) & (X) & (X)
v_sep_read__1038_sep_229_sep_1: (X) & (X) & (X) & (X)
.............................................................Extend [126]2.012693
Reconstrcut: 10

v_sep_close__1043_sep_208_sep_1: X
v_sep_close__1043_sep_208_sep_2_sep_211_sep_0: (X) & (X) & (X) & (X) & (X) & (X)
v_sep_close__1043_sep_215_sep_1: X
v_sep_close__1043_sep_215_sep_2_sep_218_sep_0: (X) & (X) & (X) & (X) & (X)
v_sep_f_1046_sep_206_sep_2: (X) & (X) & (X) & (X) & (X) & (X) & (X)
v_sep_fail_1589_sep_238_sep_0: (X) | (X) | (X) | (X)
v_sep_read__1038_sep_222_sep_1: X
v_sep_read__1038_sep_222_sep_2_sep_225_sep_0: (X) & (X) & (X) & (X)
v_sep_read__1038_sep_229_sep_1: (X) & (X) & (X) & (X)
.........Extend [126]2.017692
Reconstrcut: 22

v_sep_close__1043_sep_208_sep_1: X
v_sep_close__1043_sep_208_sep_2_sep_211_sep_0: (X) & (X) & (X) & (X) & (X) & (X)
v_sep_close__1043_sep_215_sep_1: X
v_sep_close__1043_sep_215_sep_2_sep_218_sep_0: (X) & (X) & (X) & (X) & (X)
v_sep_f_1046_sep_206_sep_2: (X) & (X) & (X) & (X) & (X) & (X) & (X)
v_sep_fail_1589_sep_238_sep_0: (X) | (X) | (X) | (X)
v_sep_read__1038_sep_222_sep_1: X
v_sep_read__1038_sep_222_sep_2_sep_225_sep_0: (X) & (X) & (X) & (X)
v_sep_read__1038_sep_229_sep_1: (X) & (X) & (X) & (X)
.........................Split disj [126] 2.025691
Reconstrcut: 7 **)

v_sep_close__1043_sep_208_sep_1: X
v_sep_close__1043_sep_208_sep_2_sep_211_sep_0: (X) & (X) & (X) & (X) & (X) & (X)
v_sep_close__1043_sep_215_sep_1: X
v_sep_close__1043_sep_215_sep_2_sep_218_sep_0: (X) & (X) & (X) & (X) & (X)
v_sep_f_1046_sep_206_sep_2: (X) & (X) & (X) & (X) & (X) & (X) & (X)
v_sep_fail_1589_sep_238_sep_0: (X) | (X) | (X) | (X)
v_sep_read__1038_sep_222_sep_1: X
v_sep_read__1038_sep_222_sep_2_sep_225_sep_0: (X) & (X) & (X) & ((X) | (X))
v_sep_read__1038_sep_229_sep_1: (X) & (X) & (X) & (X)
................Extend [128]2.034689
Reconstrcut: 10

v_sep_close__1043_sep_208_sep_1: X
v_sep_close__1043_sep_208_sep_2_sep_211_sep_0: (X) & (X) & (X) & (X) & (X) & (X)
v_sep_close__1043_sep_215_sep_1: X
v_sep_close__1043_sep_215_sep_2_sep_218_sep_0: (X) & (X) & (X) & (X) & (X)
v_sep_f_1046_sep_206_sep_2: (X) & (X) & (X) & (X) & (X) & (X) & (X)
v_sep_fail_1589_sep_238_sep_0: (X) | (X) | (X) | (X)
v_sep_read__1038_sep_222_sep_1: X
v_sep_read__1038_sep_222_sep_2_sep_225_sep_0: (X) & (X) & (X) & ((X) | (X))
v_sep_read__1038_sep_229_sep_1: (X) & (X) & (X) & (X)
.........Split disj [128] 2.042688
Reconstrcut: 5 **)

v_sep_close__1043_sep_208_sep_1: X
v_sep_close__1043_sep_208_sep_2_sep_211_sep_0: (X) & (X) & (X) & (X) & (X) & (X)
v_sep_close__1043_sep_215_sep_1: X
v_sep_close__1043_sep_215_sep_2_sep_218_sep_0: (X) & (X) & (X) & (X) & (X)
v_sep_f_1046_sep_206_sep_2: (X) & (X) & (X) & (X) & (X) & (X) & (X)
v_sep_fail_1589_sep_238_sep_0: (X) | (X) | (X) | (X)
v_sep_read__1038_sep_222_sep_1: X
v_sep_read__1038_sep_222_sep_2_sep_225_sep_0: (X) & (X) & (X) & ((X) | (X))
v_sep_read__1038_sep_229_sep_1: (X) & (X) & ((X) | (X)) & (X)
...............Split disj [130] 2.053687
Reconstrcut: 3 **)

v_sep_close__1043_sep_208_sep_1: X
v_sep_close__1043_sep_208_sep_2_sep_211_sep_0: (X) & (X) & (X) & (X) & (X) & (X)
v_sep_close__1043_sep_215_sep_1: X
v_sep_close__1043_sep_215_sep_2_sep_218_sep_0: (X) & (X) & (X) & (X) & (X)
v_sep_f_1046_sep_206_sep_2: (X) & (X) & (X) & (X) & (X) & (X) & (X)
v_sep_fail_1589_sep_238_sep_0: (X) | ((X) | (X)) | (X) | (X)
v_sep_read__1038_sep_222_sep_1: X
v_sep_read__1038_sep_222_sep_2_sep_225_sep_0: (X) & (X) & (X) & ((X) | (X))
v_sep_read__1038_sep_229_sep_1: (X) & (X) & ((X) | (X)) & (X)
........Extend [132]2.061685
Reconstrcut: 12

v_sep_close__1043_sep_208_sep_1: X
v_sep_close__1043_sep_208_sep_2_sep_211_sep_0: (X) & (X) & (X) & (X) & (X) & (X)
v_sep_close__1043_sep_215_sep_1: X
v_sep_close__1043_sep_215_sep_2_sep_218_sep_0: (X) & (X) & (X) & (X) & (X)
v_sep_f_1046_sep_206_sep_2: (X) & (X) & (X) & (X) & (X) & (X) & (X)
v_sep_fail_1589_sep_238_sep_0: (X) | ((X) | (X)) | (X) | (X)
v_sep_read__1038_sep_222_sep_1: X
v_sep_read__1038_sep_222_sep_2_sep_225_sep_0: (X) & (X) & (X) & ((X) | (X))
v_sep_read__1038_sep_229_sep_1: (X) & (X) & ((X) | (X)) & (X)
...........Extend [132]2.069684
Reconstrcut: 26

v_sep_close__1043_sep_208_sep_1: X
v_sep_close__1043_sep_208_sep_2_sep_211_sep_0: (X) & (X) & (X) & (X) & (X) & (X)
v_sep_close__1043_sep_215_sep_1: X
v_sep_close__1043_sep_215_sep_2_sep_218_sep_0: (X) & (X) & (X) & (X) & (X)
v_sep_f_1046_sep_206_sep_2: (X) & (X) & (X) & (X) & (X) & (X) & (X)
v_sep_fail_1589_sep_238_sep_0: (X) | ((X) | (X)) | (X) | (X)
v_sep_read__1038_sep_222_sep_1: X
v_sep_read__1038_sep_222_sep_2_sep_225_sep_0: (X) & (X) & (X) & ((X) | (X))
v_sep_read__1038_sep_229_sep_1: (X) & (X) & ((X) | (X)) & (X)
...............................Split conj [132] 2.094681
(Reconstrcut: 12 **)
v_sep_close__1043_sep_208_sep_1: X
v_sep_close__1043_sep_208_sep_2_sep_211_sep_0: (X) & (X) & (X) & (X) & (X) & (X)
v_sep_close__1043_sep_215_sep_1: X
v_sep_close__1043_sep_215_sep_2_sep_218_sep_0: (X) & (X) & (X) & (X) & (X) & (X)
v_sep_f_1046_sep_206_sep_2: (X) & (X) & (X) & (X) & (X) & (X) & (X)
v_sep_fail_1589_sep_238_sep_0: (X) | ((X) | (X)) | (X) | (X)
v_sep_read__1038_sep_222_sep_1: X
v_sep_read__1038_sep_222_sep_2_sep_225_sep_0: (X) & (X) & (X) & ((X) | (X))
v_sep_read__1038_sep_229_sep_1: (X) & (X) & ((X) | (X)) & (X)
....................Extend [135]2.105679
Reconstrcut: 12

v_sep_close__1043_sep_208_sep_1: X
v_sep_close__1043_sep_208_sep_2_sep_211_sep_0: (X) & (X) & (X) & (X) & (X) & (X)
v_sep_close__1043_sep_215_sep_1: X
v_sep_close__1043_sep_215_sep_2_sep_218_sep_0: (X) & (X) & (X) & (X) & (X) & (X)
v_sep_f_1046_sep_206_sep_2: (X) & (X) & (X) & (X) & (X) & (X) & (X)
v_sep_fail_1589_sep_238_sep_0: (X) | ((X) | (X)) | (X) | (X)
v_sep_read__1038_sep_222_sep_1: X
v_sep_read__1038_sep_222_sep_2_sep_225_sep_0: (X) & (X) & (X) & ((X) | (X))
v_sep_read__1038_sep_229_sep_1: (X) & (X) & ((X) | (X)) & (X)
...........Extend [135]2.112678
Reconstrcut: 26

v_sep_close__1043_sep_208_sep_1: X
v_sep_close__1043_sep_208_sep_2_sep_211_sep_0: (X) & (X) & (X) & (X) & (X) & (X)
v_sep_close__1043_sep_215_sep_1: X
v_sep_close__1043_sep_215_sep_2_sep_218_sep_0: (X) & (X) & (X) & (X) & (X) & (X)
v_sep_f_1046_sep_206_sep_2: (X) & (X) & (X) & (X) & (X) & (X) & (X)
v_sep_fail_1589_sep_238_sep_0: (X) | ((X) | (X)) | (X) | (X)
v_sep_read__1038_sep_222_sep_1: X
v_sep_read__1038_sep_222_sep_2_sep_225_sep_0: (X) & (X) & (X) & ((X) | (X))
v_sep_read__1038_sep_229_sep_1: (X) & (X) & ((X) | (X)) & (X)
...............................Split conj [135] 2.119677
(Reconstrcut: 12 **)
v_sep_close__1043_sep_208_sep_1: X
v_sep_close__1043_sep_208_sep_2_sep_211_sep_0: (X) & (X) & (X) & (X) & (X) & (X) & (X)
v_sep_close__1043_sep_215_sep_1: X
v_sep_close__1043_sep_215_sep_2_sep_218_sep_0: (X) & (X) & (X) & (X) & (X) & (X)
v_sep_f_1046_sep_206_sep_2: (X) & (X) & (X) & (X) & (X) & (X) & (X)
v_sep_fail_1589_sep_238_sep_0: (X) | ((X) | (X)) | (X) | (X)
v_sep_read__1038_sep_222_sep_1: X
v_sep_read__1038_sep_222_sep_2_sep_225_sep_0: (X) & (X) & (X) & ((X) | (X))
v_sep_read__1038_sep_229_sep_1: (X) & (X) & ((X) | (X)) & (X)
....................Extend [138]2.126676
Reconstrcut: 12

v_sep_close__1043_sep_208_sep_1: X
v_sep_close__1043_sep_208_sep_2_sep_211_sep_0: (X) & (X) & (X) & (X) & (X) & (X) & (X)
v_sep_close__1043_sep_215_sep_1: X
v_sep_close__1043_sep_215_sep_2_sep_218_sep_0: (X) & (X) & (X) & (X) & (X) & (X)
v_sep_f_1046_sep_206_sep_2: (X) & (X) & (X) & (X) & (X) & (X) & (X)
v_sep_fail_1589_sep_238_sep_0: (X) | ((X) | (X)) | (X) | (X)
v_sep_read__1038_sep_222_sep_1: X
v_sep_read__1038_sep_222_sep_2_sep_225_sep_0: (X) & (X) & (X) & ((X) | (X))
v_sep_read__1038_sep_229_sep_1: (X) & (X) & ((X) | (X)) & (X)
...........Extend [138]2.133675
Reconstrcut: 26

v_sep_close__1043_sep_208_sep_1: X
v_sep_close__1043_sep_208_sep_2_sep_211_sep_0: (X) & (X) & (X) & (X) & (X) & (X) & (X)
v_sep_close__1043_sep_215_sep_1: X
v_sep_close__1043_sep_215_sep_2_sep_218_sep_0: (X) & (X) & (X) & (X) & (X) & (X)
v_sep_f_1046_sep_206_sep_2: (X) & (X) & (X) & (X) & (X) & (X) & (X)
v_sep_fail_1589_sep_238_sep_0: (X) | ((X) | (X)) | (X) | (X)
v_sep_read__1038_sep_222_sep_1: X
v_sep_read__1038_sep_222_sep_2_sep_225_sep_0: (X) & (X) & (X) & ((X) | (X))
v_sep_read__1038_sep_229_sep_1: (X) & (X) & ((X) | (X)) & (X)
...............................Split conj [138] 2.143673
(Reconstrcut: 12 **)
v_sep_close__1043_sep_208_sep_1: X
v_sep_close__1043_sep_208_sep_2_sep_211_sep_0: (X) & (X) & (X) & (X) & (X) & (X) & (X)
v_sep_close__1043_sep_215_sep_1: X
v_sep_close__1043_sep_215_sep_2_sep_218_sep_0: (X) & (X) & (X) & (X) & (X) & (X)
v_sep_f_1046_sep_206_sep_2: (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X)
v_sep_fail_1589_sep_238_sep_0: (X) | ((X) | (X)) | (X) | (X)
v_sep_read__1038_sep_222_sep_1: X
v_sep_read__1038_sep_222_sep_2_sep_225_sep_0: (X) & (X) & (X) & ((X) | (X))
v_sep_read__1038_sep_229_sep_1: (X) & (X) & ((X) | (X)) & (X)
................Extend [143]2.157671
Reconstrcut: 12

v_sep_close__1043_sep_208_sep_1: X
v_sep_close__1043_sep_208_sep_2_sep_211_sep_0: (X) & (X) & (X) & (X) & (X) & (X) & (X)
v_sep_close__1043_sep_215_sep_1: X
v_sep_close__1043_sep_215_sep_2_sep_218_sep_0: (X) & (X) & (X) & (X) & (X) & (X)
v_sep_f_1046_sep_206_sep_2: (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X)
v_sep_fail_1589_sep_238_sep_0: (X) | ((X) | (X)) | (X) | (X)
v_sep_read__1038_sep_222_sep_1: X
v_sep_read__1038_sep_222_sep_2_sep_225_sep_0: (X) & (X) & (X) & ((X) | (X))
v_sep_read__1038_sep_229_sep_1: (X) & (X) & ((X) | (X)) & (X)
...........Extend [143]2.16567
Reconstrcut: 26

v_sep_close__1043_sep_208_sep_1: X
v_sep_close__1043_sep_208_sep_2_sep_211_sep_0: (X) & (X) & (X) & (X) & (X) & (X) & (X)
v_sep_close__1043_sep_215_sep_1: X
v_sep_close__1043_sep_215_sep_2_sep_218_sep_0: (X) & (X) & (X) & (X) & (X) & (X)
v_sep_f_1046_sep_206_sep_2: (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X)
v_sep_fail_1589_sep_238_sep_0: (X) | ((X) | (X)) | (X) | (X)
v_sep_read__1038_sep_222_sep_1: X
v_sep_read__1038_sep_222_sep_2_sep_225_sep_0: (X) & (X) & (X) & ((X) | (X))
v_sep_read__1038_sep_229_sep_1: (X) & (X) & ((X) | (X)) & (X)
...............................Split disj [143] 2.176668
Reconstrcut: 7 **)

v_sep_close__1043_sep_208_sep_1: X
v_sep_close__1043_sep_208_sep_2_sep_211_sep_0: (X) & (X) & (X) & (X) & (X) & (X) & (X)
v_sep_close__1043_sep_215_sep_1: X
v_sep_close__1043_sep_215_sep_2_sep_218_sep_0: ((X) | (X)) & (X) & (X) & (X) & (X) & (X)
v_sep_f_1046_sep_206_sep_2: (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X)
v_sep_fail_1589_sep_238_sep_0: (X) | ((X) | (X)) | (X) | (X)
v_sep_read__1038_sep_222_sep_1: X
v_sep_read__1038_sep_222_sep_2_sep_225_sep_0: (X) & (X) & (X) & ((X) | (X))
v_sep_read__1038_sep_229_sep_1: (X) & (X) & ((X) | (X)) & (X)
.................Extend [145]2.186667
Reconstrcut: 12

v_sep_close__1043_sep_208_sep_1: X
v_sep_close__1043_sep_208_sep_2_sep_211_sep_0: (X) & (X) & (X) & (X) & (X) & (X) & (X)
v_sep_close__1043_sep_215_sep_1: X
v_sep_close__1043_sep_215_sep_2_sep_218_sep_0: ((X) | (X)) & (X) & (X) & (X) & (X) & (X)
v_sep_f_1046_sep_206_sep_2: (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X)
v_sep_fail_1589_sep_238_sep_0: (X) | ((X) | (X)) | (X) | (X)
v_sep_read__1038_sep_222_sep_1: X
v_sep_read__1038_sep_222_sep_2_sep_225_sep_0: (X) & (X) & (X) & ((X) | (X))
v_sep_read__1038_sep_229_sep_1: (X) & (X) & ((X) | (X)) & (X)
...........Split disj [145] 2.195665
Reconstrcut: 5 **)

v_sep_close__1043_sep_208_sep_1: X
v_sep_close__1043_sep_208_sep_2_sep_211_sep_0: (X) & (X) & (X) & (X) & (X) & (X) & (X)
v_sep_close__1043_sep_215_sep_1: X
v_sep_close__1043_sep_215_sep_2_sep_218_sep_0: ((X) | (X)) & (X) & (X) & (X) & (X) & (X)
v_sep_f_1046_sep_206_sep_2: (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X)
v_sep_fail_1589_sep_238_sep_0: (X) | ((X) | (X)) | (X) | (X)
v_sep_read__1038_sep_222_sep_1: X
v_sep_read__1038_sep_222_sep_2_sep_225_sep_0: (X) & (X) & (X) & ((X) | (X))
v_sep_read__1038_sep_229_sep_1: (X) & (X) & ((X) | ((X) | (X))) & (X)
................Split disj [147] 2.207664
Reconstrcut: 7 **)

v_sep_close__1043_sep_208_sep_1: X
v_sep_close__1043_sep_208_sep_2_sep_211_sep_0: (X) & (X) & (X) & (X) & (X) & (X) & (X)
v_sep_close__1043_sep_215_sep_1: X
v_sep_close__1043_sep_215_sep_2_sep_218_sep_0: ((X) | (X)) & ((X) | (X)) & (X) & (X) & (X) & (X)
v_sep_f_1046_sep_206_sep_2: (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X)
v_sep_fail_1589_sep_238_sep_0: (X) | ((X) | (X)) | (X) | (X)
v_sep_read__1038_sep_222_sep_1: X
v_sep_read__1038_sep_222_sep_2_sep_225_sep_0: (X) & (X) & (X) & ((X) | (X))
v_sep_read__1038_sep_229_sep_1: (X) & (X) & ((X) | ((X) | (X))) & (X)
.................Extend [149]2.216662
Reconstrcut: 12

v_sep_close__1043_sep_208_sep_1: X
v_sep_close__1043_sep_208_sep_2_sep_211_sep_0: (X) & (X) & (X) & (X) & (X) & (X) & (X)
v_sep_close__1043_sep_215_sep_1: X
v_sep_close__1043_sep_215_sep_2_sep_218_sep_0: ((X) | (X)) & ((X) | (X)) & (X) & (X) & (X) & (X)
v_sep_f_1046_sep_206_sep_2: (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X)
v_sep_fail_1589_sep_238_sep_0: (X) | ((X) | (X)) | (X) | (X)
v_sep_read__1038_sep_222_sep_1: X
v_sep_read__1038_sep_222_sep_2_sep_225_sep_0: (X) & (X) & (X) & ((X) | (X))
v_sep_read__1038_sep_229_sep_1: (X) & (X) & ((X) | ((X) | (X))) & (X)
............Split disj [149] 2.226661
Reconstrcut: 5 **)

v_sep_close__1043_sep_208_sep_1: X
v_sep_close__1043_sep_208_sep_2_sep_211_sep_0: (X) & (X) & (X) & (X) & (X) & (X) & (X)
v_sep_close__1043_sep_215_sep_1: X
v_sep_close__1043_sep_215_sep_2_sep_218_sep_0: ((X) | (X)) & ((X) | (X)) & (X) & (X) & (X) & (X)
v_sep_f_1046_sep_206_sep_2: (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X)
v_sep_fail_1589_sep_238_sep_0: (X) | ((X) | (X)) | (X) | (X)
v_sep_read__1038_sep_222_sep_1: X
v_sep_read__1038_sep_222_sep_2_sep_225_sep_0: (X) & (X) & (X) & ((X) | (X))
v_sep_read__1038_sep_229_sep_1: (X) & (X) & (((X) | (X)) | ((X) | (X))) & (X)
................
v_sep_close__1043_sep_208_sep_1: X
v_sep_close__1043_sep_208_sep_2_sep_211_sep_0: (X) & (X) & (X) & (X) & (X) & (X) & (X)
v_sep_close__1043_sep_215_sep_1: X
v_sep_close__1043_sep_215_sep_2_sep_218_sep_0: ((X) | (X)) & ((X) | (X)) & (X) & (X) & (X) & (X)
v_sep_f_1046_sep_206_sep_2: (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X)
v_sep_fail_1589_sep_238_sep_0: (X) | ((X) | (X)) | (X) | (X)
v_sep_read__1038_sep_222_sep_1: X
v_sep_read__1038_sep_222_sep_2_sep_225_sep_0: (X) & (X) & (X) & ((X) | (X))
v_sep_read__1038_sep_229_sep_1: (X) & (X) & (((X) | (X)) | ((X) | (X))) & (X)
.............
v_sep_close__1043_sep_208_sep_1: X
v_sep_close__1043_sep_208_sep_2_sep_211_sep_0: (X) & (X) & (X) & (X) & (X) & (X) & (X)
v_sep_close__1043_sep_215_sep_1: X
v_sep_close__1043_sep_215_sep_2_sep_218_sep_0: ((X) | (X)) & ((X) | (X)) & (X) & (X) & (X) & (X)
v_sep_f_1046_sep_206_sep_2: (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X)
v_sep_fail_1589_sep_238_sep_0: (X) | ((X) | (X)) | (X) | (X)
v_sep_read__1038_sep_222_sep_1: X
v_sep_read__1038_sep_222_sep_2_sep_225_sep_0: (X) & (X) & (X) & ((X) | (X))
v_sep_read__1038_sep_229_sep_1: (X) & (X) & (((X) | (X)) | ((X) | (X))) & (X)
.........................................
v_sep_close__1043_sep_208_sep_1: X
v_sep_close__1043_sep_208_sep_2_sep_211_sep_0: (X) & (X) & (X) & (X) & (X) & (X) & (X)
v_sep_close__1043_sep_215_sep_1: X
v_sep_close__1043_sep_215_sep_2_sep_218_sep_0: ((X) | (X)) & ((X) | (X)) & (X) & (X) & (X) & (X)
v_sep_f_1046_sep_206_sep_2: (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X)
v_sep_fail_1589_sep_238_sep_0: (X) | ((X) | (X)) | (X) | (X)
v_sep_read__1038_sep_222_sep_1: X
v_sep_read__1038_sep_222_sep_2_sep_225_sep_0: (X) & (X) & (X) & ((X) | (X))
v_sep_read__1038_sep_229_sep_1: (X) & (X) & (((X) | (X)) | ((X) | (X))) & (X)
.....................................................................
v_sep_close__1043_sep_208_sep_1: X
v_sep_close__1043_sep_208_sep_2_sep_211_sep_0: (X) & (X) & (X) & (X) & (X) & (X) & (X)
v_sep_close__1043_sep_215_sep_1: X
v_sep_close__1043_sep_215_sep_2_sep_218_sep_0: ((X) | (X)) & ((X) | (X)) & (X) & (X) & (X) & (X)
v_sep_f_1046_sep_206_sep_2: (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X)
v_sep_fail_1589_sep_238_sep_0: (X) | ((X) | (X)) | (X) | (X)
v_sep_read__1038_sep_222_sep_1: X
v_sep_read__1038_sep_222_sep_2_sep_225_sep_0: (X) & (X) & (X) & ((X) | (X))
v_sep_read__1038_sep_229_sep_1: (X) & (X) & (((X) | (X)) | ((X) | (X))) & (X)
...........................................................................
v_sep_close__1043_sep_208_sep_1: X
v_sep_close__1043_sep_208_sep_2_sep_211_sep_0: (X) & (X) & (X) & (X) & (X) & (X) & (X)
v_sep_close__1043_sep_215_sep_1: X
v_sep_close__1043_sep_215_sep_2_sep_218_sep_0: ((X) | (X)) & ((X) | (X)) & (X) & (X) & (X) & (X)
v_sep_f_1046_sep_206_sep_2: (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X)
v_sep_fail_1589_sep_238_sep_0: (X) | ((X) | (X)) | (X) | (X)
v_sep_read__1038_sep_222_sep_1: X
v_sep_read__1038_sep_222_sep_2_sep_225_sep_0: (X) & (X) & (X) & ((X) | (X))
v_sep_read__1038_sep_229_sep_1: (X) & (X) & (((X) | (X)) | ((X) | (X))) & (X)
.................................................................................(0=0) & (v_sep_fail_1589_sep_238_sep_0($2462)) -> 1=0.
(($2462-1=0) & ($2463-1=0) & ($2464-1<>0) & ($2464-3<>0)) & (v_sep_read__1038_sep_229_sep_1($2463,$2464)) -> v_sep_fail_1589_sep_238_sep_0($2462).
(0=0) & (v_sep_read__1038_sep_222_sep_2_sep_225_sep_0($2465,$2466,$2467)) & (v_sep_close__1043_sep_215_sep_2_sep_218_sep_0($2468,$2469,$2470)) & (v_sep_close__1043_sep_208_sep_2_sep_211_sep_0($2465,$2466,$2469)) & (v_sep_f_1046_sep_206_sep_2($2465,$2468,$2466)) -> v_sep_read__1038_sep_229_sep_1($2468,$2467).
(($2471-1<>0) & ($2472-$2473=0)) & (v_sep_read__1038_sep_222_sep_1($2471,$2473)) -> v_sep_read__1038_sep_222_sep_2_sep_225_sep_0($2471,$2473,$2472).
(0=0) & (v_sep_close__1043_sep_215_sep_2_sep_218_sep_0($2474,$2475,$2476)) & (v_sep_close__1043_sep_208_sep_2_sep_211_sep_0($2471,$2473,$2475)) & (v_sep_f_1046_sep_206_sep_2($2471,$2474,$2473)) -> v_sep_read__1038_sep_222_sep_1($2471,$2473).
(($2477-1<>0) & ($2478-$2479=0)) & (v_sep_close__1043_sep_215_sep_1($2477,$2479)) -> v_sep_close__1043_sep_215_sep_2_sep_218_sep_0($2477,$2479,$2478).
(0=0) & (v_sep_close__1043_sep_208_sep_2_sep_211_sep_0($2480,$2481,$2479)) & (v_sep_f_1046_sep_206_sep_2($2480,$2477,$2481)) -> v_sep_close__1043_sep_215_sep_1($2477,$2479).
(($2482-1<>0) & ($2483-$2484=0)) & (v_sep_close__1043_sep_208_sep_1($2482,$2484)) -> v_sep_close__1043_sep_208_sep_2_sep_211_sep_0($2482,$2484,$2483).
(0=0) & (v_sep_f_1046_sep_206_sep_2($2482,$2485,$2484)) -> v_sep_close__1043_sep_208_sep_1($2482,$2484).
($2486=0) & ($2485-1<>0) & ($2487-1<>0) -> v_sep_f_1046_sep_206_sep_2($2487,$2485,$2486).

        solution:
          P[<close__1043@208:1>]($2534:bool,$2536:int) = true
          P[<<close__1043@208:2>@211:0>]($2510:bool,$2512:int,$2514:int) = true
          P[<close__1043@215:1>]($2529:bool,$2531:int) = true
          P[<<close__1043@215:2>@218:0>]($2503:bool,$2505:int,$2507:int) = (not $2503)
          P[<f_1046@206:2>]($2517:bool,$2519:bool,$2521:int) =
          (($2521 <= 0) && (($2517 && $2519) || ((not $2517) || ($2517 && (not $2519)))))
          P[<fail_1589@238:0>]($2488:bool) = false
          P[<read__1038@222:1>]($2524:bool,$2526:int) = true
          P[<<read__1038@222:2>@225:0>]($2496:bool,$2498:int,$2500:int) = ($2500 <= $2498)
          P[<read__1038@229:1>]($2491:bool,$2493:int) = (($2493 <= 0) && (not $2491))
        
      end HcSolver.solve_ub(173823)[4] (0.892865 sec.)
      begin HcSolver.check_validity(174623)[4]
        input:
          P[<fail_1589@238:0>](<fail_1589@238:0>:bool)|- bot
          
          P[<read__1038@229:1>](true:bool,<br_readit_1585@235:1>:int),
          ((<br_readit_1585@235:1> <> 1) && ((<br_readit_1585@235:1> <> 3) && <fail_1589@238:0>))
          |- P[<fail_1589@238:0>](<fail_1589@238:0>:bool)
          
          P[<f_1046@206:2>](<f_f_1579@227:1>:bool,<read__1038@229:0>:bool,<f_f_1579@227:0>:int),
          P[<<close__1043@208:2>@211:0>](<f_f_1579@227:1>:bool,<f_f_1579@227:0>:int,<f_f_1579@227:3>:int),
          P[<<close__1043@215:2>@218:0>](<read__1038@229:0>:bool,<f_f_1579@227:3>:int,<f_f_1579@227:2>:int),
          P[<<read__1038@222:2>@225:0>](<f_f_1579@227:1>:bool,<f_f_1579@227:0>:int,<read__1038@229:1>:int)|- P[<read__1038@229:1>](
          <read__1038@229:0>:bool,<read__1038@229:1>:int)
          
          P[<read__1038@222:1>](<read__1038@222:0>:bool,<read__1038@222:1>:int),
          ((<<read__1038@222:2>@225:0> = <read__1038@222:1>) && (not <read__1038@222:0>))
          |- P[<<read__1038@222:2>@225:0>](<read__1038@222:0>:bool,<read__1038@222:1>:int,
                                           <<read__1038@222:2>@225:0>:int)
          
          P[<f_1046@206:2>](<read__1038@222:0>:bool,<f_f_1578@220:3>:bool,<read__1038@222:1>:int),
          P[<<close__1043@208:2>@211:0>](<read__1038@222:0>:bool,<read__1038@222:1>:int,<f_f_1578@220:2>:int),
          P[<<close__1043@215:2>@218:0>](<f_f_1578@220:3>:bool,<f_f_1578@220:2>:int,<f_f_1578@220:5>:int)|- P[<read__1038@222:1>](
          <read__1038@222:0>:bool,<read__1038@222:1>:int)
          
          P[<close__1043@215:1>](<close__1043@215:0>:bool,<close__1043@215:1>:int),
          ((<<close__1043@215:2>@218:0> = <close__1043@215:1>) && (not <close__1043@215:0>))
          |- P[<<close__1043@215:2>@218:0>](<close__1043@215:0>:bool,
                                            <close__1043@215:1>:int,<<close__1043@215:2>@218:0>:int)
          
          P[<f_1046@206:2>](<f_f_1577@213:1>:bool,<close__1043@215:0>:bool,<f_f_1577@213:0>:int),
          P[<<close__1043@208:2>@211:0>](<f_f_1577@213:1>:bool,<f_f_1577@213:0>:int,<close__1043@215:1>:int)|- P[<close__1043@215:1>](
          <close__1043@215:0>:bool,<close__1043@215:1>:int)
          
          P[<close__1043@208:1>](<close__1043@208:0>:bool,<close__1043@208:1>:int),
          ((<<close__1043@208:2>@211:0> = <close__1043@208:1>) && (not <close__1043@208:0>))
          |- P[<<close__1043@208:2>@211:0>](<close__1043@208:0>:bool,
                                            <close__1043@208:1>:int,<<close__1043@208:2>@211:0>:int)
          
          P[<f_1046@206:2>](<close__1043@208:0>:bool,<f_1046@206:1>:bool,<close__1043@208:1>:int)|- P[<close__1043@208:1>](
          <close__1043@208:0>:bool,<close__1043@208:1>:int)
          
           ((<f_1046@206:2> = 0) && ((not <f_1046@206:1>) && (not <f_1046@206:0>)))
          |- P[<f_1046@206:2>](<f_1046@206:0>:bool,<f_1046@206:1>:bool,
                               <f_1046@206:2>:int)
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        
      end HcSolver.check_validity(174623)[4] (0.006999 sec.)
      solution:
        P[<close__1043@208:1>]($2534:bool,$2536:int) = true
        P[<<close__1043@208:2>@211:0>]($2510:bool,$2512:int,$2514:int) = true
        P[<close__1043@215:1>]($2529:bool,$2531:int) = true
        P[<<close__1043@215:2>@218:0>]($2503:bool,$2505:int,$2507:int) = (not $2503)
        P[<f_1046@206:2>]($2517:bool,$2519:bool,$2521:int) =
        (($2521 <= 0) && (($2517 && $2519) || ((not $2517) || ($2517 && (not $2519)))))
        P[<fail_1589@238:0>]($2488:bool) = false
        P[<read__1038@222:1>]($2524:bool,$2526:int) = true
        P[<<read__1038@222:2>@225:0>]($2496:bool,$2498:int,$2500:int) = ($2500 <= $2498)
        P[<read__1038@229:1>]($2491:bool,$2493:int) = (($2493 <= 0) && (not $2491))
    end YhornInterface.solve(173822)[3] (0.899864 sec.)
    
  end RefTypeInfer.infer_etrs(127420)[2] (1.254808 sec.)
  refinement types:
    main_1574: X
    f_1582: v1:int -> X
    f_1583: v1:int -> v2:int -> X
    main_1056: v1:int -> v2:int -> (v3:unit -> X) -> X
    g_1052: v1:int -> v2:bool -> v3:int -> (v4:unit -> X) -> X
    f_1046: v1:bool -> v2:bool -> v3:{v3:int | ((not v1) && (not v2))} -> (v4:unit -> X) -> X
    close__1043: v1:bool -> v2:int -> (v3:int -> X) -> X
    f_f_1577: v1:int -> v2:bool -> v3:bool -> (v4:unit -> X) -> v6:int -> X
    close__1043: v1:bool -> v2:int -> (v3:int -> X) -> X
    f_f_1578: v1:int -> v2:bool -> v3:int -> v4:bool -> (v5:unit -> X) -> v7:int -> X
    read__1038: v1:bool -> v2:{v2:int | (not v1)} -> (v3:int -> X) -> X
    f_f_1579: v1:int -> v2:bool -> v3:int -> v4:int -> v5:bool -> (v6:unit -> X) -> v8:int -> X
    read__1038: v1:bool -> v2:{v2:int | (not v1)} -> (v3:int -> X) -> X
    readit_1036: v1:int -> (v2:int -> X) -> X
    br_readit_1585: v1:bool -> v2:int -> (v3:int -> X) -> X
    fail_1589: v1:{v1:bool | false} -> (v2:unit -> X) -> X
    br_closeit_1587: var764:bool -> var763:int -> (var762:int -> X) -> X
    closeit_1041: var768:int -> (var767:int -> X) -> X
    f_1584: var772:int -> var771:int -> var770:unit -> X
    f_closeit_1576: var777:int -> (var776:int -> X) -> var774:unit -> X
    f_f_1580: var787:int ->
              var786:bool ->
              var785:int -> var784:int -> var783:int -> var782:bool -> (var781:unit -> X) -> var779:int -> X
    f_g_1581: var794:int -> var793:int -> var792:bool -> (var791:unit -> X) -> var789:int -> X
    f_readit_1575: var797:int -> var796:unit -> X
    k_main_u_1525: var803:int -> var802:int -> (var801:unit -> X) -> var799:unit -> X
    loop_1030: var807:unit -> (var806:unit -> X) -> X
    next_1050: var811:int -> (var810:int -> X) -> X
  abstraction types:
    main_1574: X
    f_1582: v1:int -> X
    f_1583: v1:int -> v2:int -> X
    main_1056: v1:int -> v2:int -> (v3:unit -> X) -> X
    g_1052: v1:int -> v2:bool -> v3:int -> (v4:unit -> X) -> X
    f_1046: v1:bool -> v2:bool -> v3:int[v3 -> ((not v1) && (not v2))] -> (v4:unit -> X) -> X
    close__1043: var812:bool -> var813:int -> (var814:int -> X) -> X
    f_f_1577: v1:int -> v2:bool -> v3:bool -> (v4:unit -> X) -> v6:int -> X
    f_f_1578: v1:int -> v2:bool -> v3:int -> v4:bool -> (v5:unit -> X) -> v7:int -> X
    read__1038: var817:bool -> var818:int[var818 -> (not var817)] -> (var819:int -> X) -> X
    f_f_1579: v1:int -> v2:bool -> v3:int -> v4:int -> v5:bool -> (v6:unit -> X) -> v8:int -> X
    readit_1036: v1:int -> (v2:int -> X) -> X
    br_readit_1585: v1:bool -> v2:int -> (v3:int -> X) -> X
    fail_1589: v1:bool -> (v2:unit -> X) -> X
    br_closeit_1587: var764:bool -> var763:int -> (var762:int -> X) -> X
    closeit_1041: var768:int -> (var767:int -> X) -> X
    f_1584: var772:int -> var771:int -> var770:unit -> X
    f_closeit_1576: var777:int -> (var776:int -> X) -> var774:unit -> X
    f_f_1580: var787:int ->
              var786:bool ->
              var785:int -> var784:int -> var783:int -> var782:bool -> (var781:unit -> X) -> var779:int -> X
    f_g_1581: var794:int -> var793:int -> var792:bool -> (var791:unit -> X) -> var789:int -> X
    f_readit_1575: var797:int -> var796:unit -> X
    k_main_u_1525: var803:int -> var802:int -> (var801:unit -> X) -> var799:unit -> X
    loop_1030: var807:unit -> (var806:unit -> X) -> X
    next_1050: var811:int -> (var810:int -> X) -> X
  
end AbsTypeInfer.refine(127419)[1] (1.261808 sec.)
DONE!

Prefix of spurious counter-example::
0; 0; 0; 1; 1; 0; 1; 0; 1; 0; 1; 0; 0

Program with abstraction types (CEGAR-cycle 4)::
Main: main_1574
  main_1574 -> (rand_int f_1582)
  br_closeit_1587 b_1588 st_1042 k_closeit_1271 when b_1588 -> (k_closeit_1271 st_1042)
  br_closeit_1587 b_1588 st_1042 k_closeit_1271 when (not b_1588) ->
      (loop_1030 () (f_closeit_1576 st_1042 k_closeit_1271))
  br_readit_1585 b_1586 st_1037 k_readit_1206 when b_1586 -> (k_readit_1206 st_1037)
  br_readit_1585 b_1586 st_1037 k_readit_1206 when (not b_1586) -> (fail_1589 true (f_readit_1575 st_1037))
  close__1043 x_1044 st_1045 k_close__1309 when x_1044 -> (closeit_1041 st_1045 k_close__1309)
  close__1043 x_1044 st_1045 k_close__1309 when (not x_1044) -> (k_close__1309 st_1045)
  closeit_1041 st_1042 k_closeit_1271 when (st_1042 = 1) -> (k_closeit_1271 2)
  closeit_1041 st_1042 k_closeit_1271 when (not (st_1042 = 1)) ->
      (br_closeit_1587 (st_1042 = 3) st_1042 k_closeit_1271)
  f_1046 x_1047 y_1048 st_1049 k_f_1343 -> (close__1043 x_1047 st_1049 (f_f_1577 st_1049 x_1047 y_1048 k_f_1343))
  f_1582 x_1532 -> (rand_int (f_1583 x_1532))
  f_1583 x_1532 x_1545 -> (main_1056 x_1532 x_1545 (f_1584 x_1532 x_1545))
  f_1584 x_1532 x_1545 x_1529 -> end
  f_closeit_1576 st_1042 k_closeit_1271 x_1274 -> (k_closeit_1271 0)
  f_f_1577 st_1049 x_1047 y_1048 k_f_1343 x_1368 ->
      (close__1043 y_1048 x_1368 (f_f_1578 st_1049 x_1047 x_1368 y_1048 k_f_1343))
  f_f_1578 st_1049 x_1047 x_1368 y_1048 k_f_1343 x_1346 ->
      (read__1038 x_1047 st_1049 (f_f_1579 st_1049 x_1047 x_1346 x_1368 y_1048 k_f_1343))
  f_f_1579 st_1049 x_1047 x_1346 x_1368 y_1048 k_f_1343 x_1395 ->
      (read__1038 y_1048 x_1395 (f_f_1580 st_1049 x_1047 x_1346 x_1368 x_1395 y_1048 k_f_1343))
  f_f_1580 st_1049 x_1047 x_1346 x_1368 x_1395 y_1048 k_f_1343 x_1402 -> (f_1046 x_1047 y_1048 x_1402 k_f_1343)
  f_g_1581 b3_1053 st_1055 x_1054 k_g_1440 x_1462 -> (f_1046 x_1054 true x_1462 k_g_1440)
  f_readit_1575 st_1037 x_1209 -> _|_
  fail_1589 b k -> {fail} => (k ())
  g_1052 b3_1053 x_1054 st_1055 k_g_1440 when (b3_1053 > 0) ->
      (next_1050 st_1055 (f_g_1581 b3_1053 st_1055 x_1054 k_g_1440))
  g_1052 b3_1053 x_1054 st_1055 k_g_1440 when (not (b3_1053 > 0)) -> (f_1046 x_1054 false st_1055 k_g_1440)
  k_main_u_1525 b2_1057 b3_1058 k_main_1495 x_1498 -> (k_main_1495 ())
  loop_1030 x_1031 k_loop_1170 -> (loop_1030 () k_loop_1170)
  main_1056 b2_1057 b3_1058 k_main_1495 when (b2_1057 > 0) ->
      (g_1052 b3_1058 true 1 (k_main_u_1525 b2_1057 b3_1058 k_main_1495))
  main_1056 b2_1057 b3_1058 k_main_1495 when (not (b2_1057 > 0)) ->
      (g_1052 b3_1058 false 0 (k_main_u_1525 b2_1057 b3_1058 k_main_1495))
  next_1050 st_1051 k_next_1416 when (st_1051 = 0) -> (k_next_1416 1)
  next_1050 st_1051 k_next_1416 when (not (st_1051 = 0)) -> (k_next_1416 3)
  read__1038 x_1039 st_1040 k_read__1243 when x_1039 -> (readit_1036 st_1040 k_read__1243)
  read__1038 x_1039 st_1040 k_read__1243 when (not x_1039) -> (k_read__1243 st_1040)
  readit_1036 st_1037 k_readit_1206 when (st_1037 = 1) -> (k_readit_1206 1)
  readit_1036 st_1037 k_readit_1206 when (not (st_1037 = 1)) -> (br_readit_1585 (st_1037 = 3) st_1037 k_readit_1206)
Types:
  main_1574 : X
  close__1043 : (x_1:bool[x_1] -> x_2:int[(not x_1); x_2 >= 3] -> (int -> X) -> X)
  f_1046 : (x_1:bool[x_1] ->
            x_2:bool[x_2] -> x_3:int[(not x_1) && (not x_2); x_3 = 1; (not x_1); x_3 >= 3] -> (unit -> X) -> X)
  fail_1589 : (x_1:bool[x_1] -> (unit -> X) -> X)
  loop_1030 : (unit -> (unit -> X) -> X)
  read__1038 : (x_1:bool[x_1] -> x_2:int[(not x_1); x_2 = 1] -> (x_4:int[x_2 = x_4] -> X) -> X)
  
(4-1) Abstracting ... DONE!

(4-2) Checking HORS ... DONE!

Error trace::
  main_1574 ... --> 
  f_1582 ... --> 
  f_1583 ... --> 
  main_1056 [1/2] ... --> 
  g_1052 [1/2] ... --> 
  next_1050 [2/2] ... --> 
  f_g_1581 ... --> 
  f_1046 ... --> 
  close__1043 [1/2] ... --> 
  closeit_1041 [2/2] ... --> 
  br_closeit_1587 [1/2] ... --> 
  f_f_1577 ... --> 
  close__1043 [1/2] ... --> 
  closeit_1041 [1/2] ... --> 
  f_f_1578 ... --> 
  read__1038 [1/2] ... --> 
  readit_1036 [1/2] ... --> 
  f_f_1579 ... --> 
  read__1038 [1/2] ... --> 
  readit_1036 [2/2] ... --> 
  br_readit_1585 [2/2] ... --> 
  fail_1589 ... --> fail -->
  ERROR!

Spurious counter-example::
  0; 0; 0; 0; 0; 1; 0; 0; 0; 1; 0; 0; 0; 0; 0; 0; 0; 0; 0; 1; 1; 0

(4-3) Checking counter-example ... DONE!

(4-4) Discovering predicates ... 
begin AbsTypeInfer.refine(177781)[1]
  program:
    main_1574  | true = ((Random.int 0) f_1582)
    br_closeit_1587 b_1588 st_1042 k_closeit_1271 | b_1588 = (k_closeit_1271 st_1042)
    br_closeit_1587 b_1588 st_1042 k_closeit_1271 | (not b_1588) = (loop_1030
                                                                    ()
                                                                    (
                                                                    f_closeit_1576 st_1042
                                                                    k_closeit_1271))
    br_readit_1585 b_1586 st_1037 k_readit_1206 | b_1586 = (k_readit_1206 st_1037)
    br_readit_1585 b_1586 st_1037 k_readit_1206 | (not b_1586) = (fail_1589 true
                                                                    (f_readit_1575 st_1037))
    close__1043 x_1044 st_1045 k_close__1309 | x_1044 = (closeit_1041 st_1045
                                                                    k_close__1309)
    close__1043 x_1044 st_1045 k_close__1309 | (not x_1044) = (k_close__1309 st_1045)
    closeit_1041 st_1042 k_closeit_1271 | (st_1042 = 1) = (k_closeit_1271 2)
    closeit_1041 st_1042 k_closeit_1271 | (not (st_1042 = 1)) = (br_closeit_1587 (
                                                                    st_1042 = 3)
                                                                    st_1042
                                                                    k_closeit_1271)
    f_1046 x_1047 y_1048 st_1049 k_f_1343 | true = (close__1043
                                                      x_1047
                                                      st_1049
                                                      (f_f_1577 st_1049
                                                                x_1047
                                                                y_1048
                                                                k_f_1343))
    f_1582 x_1532 | true = ((Random.int 0) (f_1583 x_1532))
    f_1583 x_1532 x_1545 | true = (main_1056 x_1532
                                             x_1545
                                             (f_1584 x_1532
                                                     x_1545))
    f_1584 x_1532 x_1545 x_1529 | true = end
    f_closeit_1576 st_1042 k_closeit_1271 x_1274 | true = (k_closeit_1271 0)
    f_f_1577 st_1049 x_1047 y_1048 k_f_1343 x_1368 | true = (close__1043
                                                               y_1048
                                                               x_1368
                                                               (f_f_1578 st_1049
                                                                    x_1047
                                                                    x_1368
                                                                    y_1048
                                                                    k_f_1343))
    f_f_1578 st_1049 x_1047 x_1368 y_1048 k_f_1343 x_1346 | true = (read__1038
                                                                    x_1047
                                                                    st_1049
                                                                    (
                                                                    f_f_1579
                                                                    st_1049
                                                                    x_1047
                                                                    x_1346
                                                                    x_1368
                                                                    y_1048
                                                                    k_f_1343))
    f_f_1579 st_1049 x_1047 x_1346 x_1368 y_1048 k_f_1343 x_1395 | true = (
    read__1038 y_1048
               x_1395
               (f_f_1580 st_1049
                         x_1047
                         x_1346
                         x_1368
                         x_1395
                         y_1048
                         k_f_1343))
    f_f_1580 st_1049 x_1047 x_1346 x_1368 x_1395 y_1048 k_f_1343 x_1402 | true = (
    f_1046 x_1047
           y_1048
           x_1402
           k_f_1343)
    f_g_1581 b3_1053 st_1055 x_1054 k_g_1440 x_1462 | true = (f_1046 x_1054
                                                                    true
                                                                    x_1462
                                                                    k_g_1440)
    f_readit_1575 st_1037 x_1209 | true = bot
    fail_1589 b k | true = (fail ())
    g_1052 b3_1053 x_1054 st_1055 k_g_1440 | (b3_1053 > 0) = (next_1050
                                                                st_1055
                                                                (f_g_1581 b3_1053
                                                                    st_1055
                                                                    x_1054
                                                                    k_g_1440))
    g_1052 b3_1053 x_1054 st_1055 k_g_1440 | (not (b3_1053 > 0)) = (f_1046 x_1054
                                                                    false
                                                                    st_1055
                                                                    k_g_1440)
    k_main_u_1525 b2_1057 b3_1058 k_main_1495 x_1498 | true = (k_main_1495 ())
    loop_1030 x_1031 k_loop_1170 | true = (loop_1030 ()
                                                     k_loop_1170)
    main_1056 b2_1057 b3_1058 k_main_1495 | (b2_1057 > 0) = (g_1052
                                                               b3_1058
                                                               true
                                                               1
                                                               (k_main_u_1525 b2_1057
                                                                    b3_1058
                                                                    k_main_1495))
    main_1056 b2_1057 b3_1058 k_main_1495 | (not (b2_1057 > 0)) = (g_1052
                                                                    b3_1058
                                                                    false
                                                                    0
                                                                    (
                                                                    k_main_u_1525 b2_1057
                                                                    b3_1058
                                                                    k_main_1495))
    next_1050 st_1051 k_next_1416 | (st_1051 = 0) = (k_next_1416 1)
    next_1050 st_1051 k_next_1416 | (not (st_1051 = 0)) = (k_next_1416 3)
    read__1038 x_1039 st_1040 k_read__1243 | x_1039 = (readit_1036 st_1040
                                                                   k_read__1243)
    read__1038 x_1039 st_1040 k_read__1243 | (not x_1039) = (k_read__1243 st_1040)
    readit_1036 st_1037 k_readit_1206 | (st_1037 = 1) = (k_readit_1206 1)
    readit_1036 st_1037 k_readit_1206 | (not (st_1037 = 1)) = (br_readit_1585 (
                                                                    st_1037 = 3)
                                                                    st_1037
                                                                    k_readit_1206)
    main_1574:X
    br_closeit_1587:bool -> int -> (int -> X) -> X
    br_readit_1585:bool -> int -> (int -> X) -> X
    close__1043:bool -> int -> (int -> X) -> X
    closeit_1041:int -> (int -> X) -> X
    f_1046:bool -> bool -> int -> (unit -> X) -> X
    f_1582:int -> X
    f_1583:int -> int -> X
    f_1584:int -> int -> unit -> X
    f_closeit_1576:int -> (int -> X) -> unit -> X
    f_f_1577:int -> bool -> bool -> (unit -> X) -> int -> X
    f_f_1578:int -> bool -> int -> bool -> (unit -> X) -> int -> X
    f_f_1579:int -> bool -> int -> int -> bool -> (unit -> X) -> int -> X
    f_f_1580:int -> bool -> int -> int -> int -> bool -> (unit -> X) -> int -> X
    f_g_1581:int -> int -> bool -> (unit -> X) -> int -> X
    f_readit_1575:int -> unit -> X
    fail_1589:bool -> (unit -> X) -> X
    g_1052:int -> bool -> int -> (unit -> X) -> X
    k_main_u_1525:int -> int -> (unit -> X) -> unit -> X
    loop_1030:unit -> (unit -> X) -> X
    main_1056:int -> int -> (unit -> X) -> X
    next_1050:int -> (int -> X) -> X
    read__1038:bool -> int -> (int -> X) -> X
    readit_1036:int -> (int -> X) -> X
  inlined functions: br_closeit_1587,br_readit_1585,closeit_1041,f_1582,f_1583,f_1584,f_closeit_1576,f_f_1577,f_f_1578,f_f_1579,f_f_1580,f_g_1581,f_readit_1575,g_1052,k_main_u_1525,main_1056,next_1050,readit_1036
  counterexample: 0:0:0:0:0:1:0:0:0:1:0:0:0:0:0:0:0:0:0:1:1:0
  error traces:
    [true.nop(<f_1582@244:0> = var822)
     [true.nop((<f_1583@247:0> = <f_1582@244:0>) && (<f_1583@247:1> = var823))
      [true.((<main_1056@249:0> = <f_1583@247:0>) && (<main_1056@249:1> = <f_1583@247:1>))
       [(<main_1056@249:0> > 0).
        ((<g_1052@252:0> = <main_1056@249:1>) && ((<g_1052@252:1> = true) && (<g_1052@252:2> = 1)))
        [(<g_1052@252:0> > 0).(<next_1050@255:0> = <g_1052@252:2>)
         [(not (<next_1050@255:0> = 0)).(<<next_1050@255:1>@258:0> = 3)
          [true.
           ((<f_g_1581@260:0> = <g_1052@252:0>) &&
            ((<f_g_1581@260:1> = <g_1052@252:2>) &&
             ((<f_g_1581@260:2> = <g_1052@252:1>) && (<f_g_1581@260:4> = <<next_1050@255:1>@258:0>))))
           [true.
            ((<f_1046@262:0> = <f_g_1581@260:2>) && ((<f_1046@262:1> = true) && (<f_1046@262:2> = <f_g_1581@260:4>)))
            [true.((<close__1043@264:0> = <f_1046@262:0>) && (<close__1043@264:1> = <f_1046@262:2>))
             [<close__1043@264:0>.(<closeit_1041@267:0> = <close__1043@264:1>)
              [(not (<closeit_1041@267:0> = 1)).
               ((<br_closeit_1587@270:0> = (<closeit_1041@267:0> = 3)) &&
                (<br_closeit_1587@270:1> = <closeit_1041@267:0>))
               [<br_closeit_1587@270:0>.(<<br_closeit_1587@270:2>@273:0> = <br_closeit_1587@270:1>)
                [true.(<<closeit_1041@267:1>@275:0> = <<br_closeit_1587@270:2>@273:0>)
                 [true.(<<close__1043@264:2>@277:0> = <<closeit_1041@267:1>@275:0>)
                  [true.
                   ((<f_f_1577@279:0> = <f_1046@262:2>) &&
                    ((<f_f_1577@279:1> = <f_1046@262:0>) &&
                     ((<f_f_1577@279:2> = <f_1046@262:1>) && (<f_f_1577@279:4> = <<close__1043@264:2>@277:0>))))
                   [true.((<close__1043@281:0> = <f_f_1577@279:2>) && (<close__1043@281:1> = <f_f_1577@279:4>))
                    [<close__1043@281:0>.(<closeit_1041@284:0> = <close__1043@281:1>)
                     [(<closeit_1041@284:0> = 1).(<<closeit_1041@284:1>@287:0> = 2)
                      [true.(<<close__1043@281:2>@289:0> = <<closeit_1041@284:1>@287:0>)
                       [true.
                        ((<f_f_1578@291:0> = <f_f_1577@279:0>) &&
                         ((<f_f_1578@291:1> = <f_f_1577@279:1>) &&
                          ((<f_f_1578@291:2> = <f_f_1577@279:4>) &&
                           ((<f_f_1578@291:3> = <f_f_1577@279:2>) && (<f_f_1578@291:5> = <<close__1043@281:2>@289:0>)))))
                        [true.((<read__1038@293:0> = <f_f_1578@291:1>) && (<read__1038@293:1> = <f_f_1578@291:0>))
                         [<read__1038@293:0>.(<readit_1036@296:0> = <read__1038@293:1>)
                          [(<readit_1036@296:0> = 1).(<<readit_1036@296:1>@299:0> = 1)
                           [true.(<<read__1038@293:2>@301:0> = <<readit_1036@296:1>@299:0>)
                            [true.
                             ((<f_f_1579@303:0> = <f_f_1578@291:0>) &&
                              ((<f_f_1579@303:1> = <f_f_1578@291:1>) &&
                               ((<f_f_1579@303:2> = <f_f_1578@291:5>) &&
                                ((<f_f_1579@303:3> = <f_f_1578@291:2>) &&
                                 ((<f_f_1579@303:4> = <f_f_1578@291:3>) &&
                                  (<f_f_1579@303:6> = <<read__1038@293:2>@301:0>))))))
                             [true.((<read__1038@305:0> = <f_f_1579@303:4>) && (<read__1038@305:1> = <f_f_1579@303:6>))
                              [<read__1038@305:0>.(<readit_1036@308:0> = <read__1038@305:1>)
                               [(not (<readit_1036@308:0> = 1)).
                                ((<br_readit_1585@311:0> = (<readit_1036@308:0> = 3)) &&
                                 (<br_readit_1585@311:1> = <readit_1036@308:0>))
                                [(not <br_readit_1585@311:0>).(<fail_1589@314:0> = true)[true.error
  begin RefTypeInfer.infer_etrs(177782)[2]
    horn clauses:
      P[<fail_1589@314:0>](<fail_1589@314:0>:bool)|- bot
      
      P[<br_readit_1585@311:1>](false:bool,<br_readit_1585@311:1>:int), <fail_1589@314:0>
      |- P[<fail_1589@314:0>](<fail_1589@314:0>:bool)
      
      P[<readit_1036@308:0>](<br_readit_1585@311:1>:int),
      ((<br_readit_1585@311:1> <> 1) && (<br_readit_1585@311:0> = (<br_readit_1585@311:1> = 3)))
      |- P[<br_readit_1585@311:1>](<br_readit_1585@311:0>:bool,<br_readit_1585@311:1>:int)
      
      P[<read__1038@305:1>](true:bool,<readit_1036@308:0>:int)|- P[<readit_1036@308:0>](<readit_1036@308:0>:int)
      
      P[<f_f_1579@303:6>](<f_f_1579@303:0>:int,<f_f_1579@303:1>:bool,<f_f_1579@303:2>:int,<f_f_1579@303:3>:int,<read__1038@305:0>:bool,<read__1038@305:1>:int)|- P[<read__1038@305:1>](
      <read__1038@305:0>:bool,<read__1038@305:1>:int)
      
      P[<f_f_1578@291:5>](<f_f_1579@303:0>:int,<f_f_1579@303:1>:bool,<f_f_1579@303:3>:int,<f_f_1579@303:4>:bool,<f_f_1579@303:2>:int),
      P[<<read__1038@293:2>@301:0>](<f_f_1579@303:1>:bool,<f_f_1579@303:0>:int,<f_f_1579@303:6>:int)|- P[<f_f_1579@303:6>](
      <f_f_1579@303:0>:int,<f_f_1579@303:1>:bool,<f_f_1579@303:2>:int,
      <f_f_1579@303:3>:int,<f_f_1579@303:4>:bool,<f_f_1579@303:6>:int)
      
      P[<read__1038@293:1>](<read__1038@293:0>:bool,<read__1038@293:1>:int),
      P[<<readit_1036@296:1>@299:0>](<read__1038@293:1>:int,<<read__1038@293:2>@301:0>:int), <read__1038@293:0>
      |- P[<<read__1038@293:2>@301:0>](<read__1038@293:0>:bool,<read__1038@293:1>:int,
                                       <<read__1038@293:2>@301:0>:int)
      
      P[<readit_1036@296:0>](<readit_1036@296:0>:int), ((<readit_1036@296:0> = 1) && (<<readit_1036@296:1>@299:0> = 1))
      |- P[<<readit_1036@296:1>@299:0>](<readit_1036@296:0>:int,<<readit_1036@296:1>@299:0>:int)
      
      P[<read__1038@293:1>](true:bool,<readit_1036@296:0>:int)|- P[<readit_1036@296:0>](<readit_1036@296:0>:int)
      
      P[<f_f_1578@291:5>](<read__1038@293:1>:int,<read__1038@293:0>:bool,<f_f_1578@291:2>:int,<f_f_1578@291:3>:bool,<f_f_1578@291:5>:int)|- P[<read__1038@293:1>](
      <read__1038@293:0>:bool,<read__1038@293:1>:int)
      
      P[<f_f_1577@279:4>](<f_f_1578@291:0>:int,<f_f_1578@291:1>:bool,<f_f_1578@291:3>:bool,<f_f_1578@291:2>:int),
      P[<<close__1043@281:2>@289:0>](<f_f_1578@291:3>:bool,<f_f_1578@291:2>:int,<f_f_1578@291:5>:int)|- P[<f_f_1578@291:5>](
      <f_f_1578@291:0>:int,<f_f_1578@291:1>:bool,<f_f_1578@291:2>:int,
      <f_f_1578@291:3>:bool,<f_f_1578@291:5>:int)
      
      P[<close__1043@281:1>](<close__1043@281:0>:bool,<close__1043@281:1>:int),
      P[<<closeit_1041@284:1>@287:0>](<close__1043@281:1>:int,<<close__1043@281:2>@289:0>:int), <close__1043@281:0>
      |- P[<<close__1043@281:2>@289:0>](<close__1043@281:0>:bool,<close__1043@281:1>:int,
                                        <<close__1043@281:2>@289:0>:int)
      
      P[<closeit_1041@284:0>](<closeit_1041@284:0>:int),
      ((<closeit_1041@284:0> = 1) && (<<closeit_1041@284:1>@287:0> = 2))
      |- P[<<closeit_1041@284:1>@287:0>](<closeit_1041@284:0>:int,<<closeit_1041@284:1>@287:0>:int)
      
      P[<close__1043@281:1>](true:bool,<closeit_1041@284:0>:int)|- P[<closeit_1041@284:0>](<closeit_1041@284:0>:int)
      
      P[<f_f_1577@279:4>](<f_f_1577@279:0>:int,<f_f_1577@279:1>:bool,<close__1043@281:0>:bool,<close__1043@281:1>:int)|- P[<close__1043@281:1>](
      <close__1043@281:0>:bool,<close__1043@281:1>:int)
      
      P[<f_1046@262:2>](<f_f_1577@279:1>:bool,<f_f_1577@279:2>:bool,<f_f_1577@279:0>:int),
      P[<<close__1043@264:2>@277:0>](<f_f_1577@279:1>:bool,<f_f_1577@279:0>:int,<f_f_1577@279:4>:int)|- P[<f_f_1577@279:4>](
      <f_f_1577@279:0>:int,<f_f_1577@279:1>:bool,<f_f_1577@279:2>:bool,
      <f_f_1577@279:4>:int)
      
      P[<close__1043@264:1>](<close__1043@264:0>:bool,<close__1043@264:1>:int),
      P[<<closeit_1041@267:1>@275:0>](<close__1043@264:1>:int,<<close__1043@264:2>@277:0>:int), <close__1043@264:0>
      |- P[<<close__1043@264:2>@277:0>](<close__1043@264:0>:bool,<close__1043@264:1>:int,
                                        <<close__1043@264:2>@277:0>:int)
      
      P[<closeit_1041@267:0>](<closeit_1041@267:0>:int),
      P[<<br_closeit_1587@270:2>@273:0>]((<closeit_1041@267:0> = 3):bool,<closeit_1041@267:0>:int,<<closeit_1041@267:1>@275:0>:int),
      (<closeit_1041@267:0> <> 1)
      |- P[<<closeit_1041@267:1>@275:0>](<closeit_1041@267:0>:int,<<closeit_1041@267:1>@275:0>:int)
      
      P[<br_closeit_1587@270:1>](<br_closeit_1587@270:0>:bool,<br_closeit_1587@270:1>:int),
      ((<<br_closeit_1587@270:2>@273:0> = <br_closeit_1587@270:1>) && <br_closeit_1587@270:0>)
      |- P[<<br_closeit_1587@270:2>@273:0>](<br_closeit_1587@270:0>:bool,
                                            <br_closeit_1587@270:1>:int,
                                            <<br_closeit_1587@270:2>@273:0>:int)
      
      P[<closeit_1041@267:0>](<br_closeit_1587@270:1>:int),
      ((<br_closeit_1587@270:1> <> 1) && (<br_closeit_1587@270:0> = (<br_closeit_1587@270:1> = 3)))
      |- P[<br_closeit_1587@270:1>](<br_closeit_1587@270:0>:bool,<br_closeit_1587@270:1>:int)
      
      P[<close__1043@264:1>](true:bool,<closeit_1041@267:0>:int)|- P[<closeit_1041@267:0>](<closeit_1041@267:0>:int)
      
      P[<f_1046@262:2>](<close__1043@264:0>:bool,<f_1046@262:1>:bool,<close__1043@264:1>:int)|- P[<close__1043@264:1>](
      <close__1043@264:0>:bool,<close__1043@264:1>:int)
      
      P[<f_g_1581@260:4>](<f_g_1581@260:0>:int,<f_g_1581@260:1>:int,<f_1046@262:0>:bool,<f_1046@262:2>:int),
      <f_1046@262:1> |- P[<f_1046@262:2>](<f_1046@262:0>:bool,<f_1046@262:1>:bool,
                                          <f_1046@262:2>:int)
      
      P[<g_1052@252:2>](<f_g_1581@260:0>:int,<f_g_1581@260:2>:bool,<f_g_1581@260:1>:int),
      P[<<next_1050@255:1>@258:0>](<f_g_1581@260:1>:int,<f_g_1581@260:4>:int), (
      <f_g_1581@260:0> > 0)
      |- P[<f_g_1581@260:4>](<f_g_1581@260:0>:int,<f_g_1581@260:1>:int,
                             <f_g_1581@260:2>:bool,<f_g_1581@260:4>:int)
      
      P[<next_1050@255:0>](<next_1050@255:0>:int), ((<<next_1050@255:1>@258:0> = 3) && (<next_1050@255:0> <> 0))
      |- P[<<next_1050@255:1>@258:0>](<next_1050@255:0>:int,<<next_1050@255:1>@258:0>:int)
      
      P[<g_1052@252:2>](<g_1052@252:0>:int,<g_1052@252:1>:bool,<next_1050@255:0>:int), (
      <g_1052@252:0> > 0) |- P[<next_1050@255:0>](<next_1050@255:0>:int)
      
      P[<main_1056@249:1>](<main_1056@249:0>:int,<g_1052@252:0>:int),
      ((<g_1052@252:2> = 1) && ((<main_1056@249:0> > 0) && <g_1052@252:1>))
      |- P[<g_1052@252:2>](<g_1052@252:0>:int,<g_1052@252:1>:bool,<g_1052@252:2>:int)
      
      P[<f_1583@247:1>](<main_1056@249:0>:int,<main_1056@249:1>:int)|- P[<main_1056@249:1>](
      <main_1056@249:0>:int,<main_1056@249:1>:int)
      
      P[<f_1582@244:0>](<f_1583@247:0>:int)|- P[<f_1583@247:1>](<f_1583@247:0>:int,
                                                                <f_1583@247:1>:int)
      
      |- P[<f_1582@244:0>](<f_1582@244:0>:int)
    call trees:
      <main_1574@241>
        <f_1582@244>
          <f_1583@247>
            <main_1056@249>
              <g_1052@252>
                <next_1050@255>
                </<next_1050@255:1>@258>
                <f_g_1581@260>
                  <f_1046@262>
                    <close__1043@264>
                      <closeit_1041@267>
                        <br_closeit_1587@270>
                        </<br_closeit_1587@270:2>@273>
                      </<closeit_1041@267:1>@275>
                    </<close__1043@264:2>@277>
                    <f_f_1577@279>
                      <close__1043@281>
                        <closeit_1041@284>
                        </<closeit_1041@284:1>@287>
                      </<close__1043@281:2>@289>
                      <f_f_1578@291>
                        <read__1038@293>
                          <readit_1036@296>
                          </<readit_1036@296:1>@299>
                        </<read__1038@293:2>@301>
                        <f_f_1579@303>
                          <read__1038@305>
                            <readit_1036@308>
                              <br_readit_1585@311>
                                <fail_1589@314>
    inlined horn clauses:
      P[<fail_1589@314:0>](<fail_1589@314:0>:bool)|- bot
      
      P[<read__1038@305:1>](true:bool,<br_readit_1585@311:1>:int),
      ((<br_readit_1585@311:1> <> 1) && ((<br_readit_1585@311:1> <> 3) && <fail_1589@314:0>))
      |- P[<fail_1589@314:0>](<fail_1589@314:0>:bool)
      
      P[<f_1046@262:2>](<f_f_1579@303:1>:bool,<read__1038@305:0>:bool,<f_f_1579@303:0>:int),
      P[<<close__1043@264:2>@277:0>](<f_f_1579@303:1>:bool,<f_f_1579@303:0>:int,<f_f_1579@303:3>:int),
      P[<<close__1043@281:2>@289:0>](<read__1038@305:0>:bool,<f_f_1579@303:3>:int,<f_f_1579@303:2>:int),
      P[<<read__1038@293:2>@301:0>](<f_f_1579@303:1>:bool,<f_f_1579@303:0>:int,<read__1038@305:1>:int)|- P[<read__1038@305:1>](
      <read__1038@305:0>:bool,<read__1038@305:1>:int)
      
      P[<read__1038@293:1>](<read__1038@293:0>:bool,<read__1038@293:1>:int),
      ((<read__1038@293:1> = 1) && ((<<read__1038@293:2>@301:0> = 1) && <read__1038@293:0>))
      |- P[<<read__1038@293:2>@301:0>](<read__1038@293:0>:bool,<read__1038@293:1>:int,
                                       <<read__1038@293:2>@301:0>:int)
      
      P[<f_1046@262:2>](<read__1038@293:0>:bool,<f_f_1578@291:3>:bool,<read__1038@293:1>:int),
      P[<<close__1043@264:2>@277:0>](<read__1038@293:0>:bool,<read__1038@293:1>:int,<f_f_1578@291:2>:int),
      P[<<close__1043@281:2>@289:0>](<f_f_1578@291:3>:bool,<f_f_1578@291:2>:int,<f_f_1578@291:5>:int)|- P[<read__1038@293:1>](
      <read__1038@293:0>:bool,<read__1038@293:1>:int)
      
      P[<close__1043@281:1>](<close__1043@281:0>:bool,<close__1043@281:1>:int),
      ((<close__1043@281:1> = 1) && ((<<close__1043@281:2>@289:0> = 2) && <close__1043@281:0>))
      |- P[<<close__1043@281:2>@289:0>](<close__1043@281:0>:bool,<close__1043@281:1>:int,
                                        <<close__1043@281:2>@289:0>:int)
      
      P[<f_1046@262:2>](<f_f_1577@279:1>:bool,<close__1043@281:0>:bool,<f_f_1577@279:0>:int),
      P[<<close__1043@264:2>@277:0>](<f_f_1577@279:1>:bool,<f_f_1577@279:0>:int,<close__1043@281:1>:int)|- P[<close__1043@281:1>](
      <close__1043@281:0>:bool,<close__1043@281:1>:int)
      
      P[<close__1043@264:1>](<close__1043@264:0>:bool,<close__1043@264:1>:int),
      ((<close__1043@264:1> = 3) && ((<<close__1043@264:2>@277:0> = <close__1043@264:1>) && <close__1043@264:0>))
      |- P[<<close__1043@264:2>@277:0>](<close__1043@264:0>:bool,<close__1043@264:1>:int,
                                        <<close__1043@264:2>@277:0>:int)
      
      P[<f_1046@262:2>](<close__1043@264:0>:bool,<f_1046@262:1>:bool,<close__1043@264:1>:int)|- P[<close__1043@264:1>](
      <close__1043@264:0>:bool,<close__1043@264:1>:int)
      
       ((<f_1046@262:2> = 3) && (<f_1046@262:0> && <f_1046@262:1>))
      |- P[<f_1046@262:2>](<f_1046@262:0>:bool,<f_1046@262:1>:bool,<f_1046@262:2>:int)
    begin ParamSubstInfer.infer(182374)[3]
      
    end ParamSubstInfer.infer(182374)[3] (0.158975 sec.)
    inferred extra parameters:
      
    begin RefTypeInfer.elim_coeffs(182376)[3]
      
    end RefTypeInfer.elim_coeffs(182376)[3] (0.002000 sec.)
    begin GenHcSolver.solve(182971)[3]
      Horn clauses:
        P[<fail_1589@314:0>](<fail_1589@314:0>:bool)|- bot
        
        P[<read__1038@305:1>](true:bool,<br_readit_1585@311:1>:int),
        ((<br_readit_1585@311:1> <> 1) && ((<br_readit_1585@311:1> <> 3) && <fail_1589@314:0>))
        |- P[<fail_1589@314:0>](<fail_1589@314:0>:bool)
        
        P[<f_1046@262:2>](<f_f_1579@303:1>:bool,<read__1038@305:0>:bool,<f_f_1579@303:0>:int),
        P[<<close__1043@264:2>@277:0>](<f_f_1579@303:1>:bool,<f_f_1579@303:0>:int,<f_f_1579@303:3>:int),
        P[<<close__1043@281:2>@289:0>](<read__1038@305:0>:bool,<f_f_1579@303:3>:int,<f_f_1579@303:2>:int),
        P[<<read__1038@293:2>@301:0>](<f_f_1579@303:1>:bool,<f_f_1579@303:0>:int,<read__1038@305:1>:int)|- P[<read__1038@305:1>](
        <read__1038@305:0>:bool,<read__1038@305:1>:int)
        
        P[<read__1038@293:1>](<read__1038@293:0>:bool,<read__1038@293:1>:int),
        ((<read__1038@293:1> = 1) && ((<<read__1038@293:2>@301:0> = 1) && <read__1038@293:0>))
        |- P[<<read__1038@293:2>@301:0>](<read__1038@293:0>:bool,<read__1038@293:1>:int,
                                         <<read__1038@293:2>@301:0>:int)
        
        P[<f_1046@262:2>](<read__1038@293:0>:bool,<f_f_1578@291:3>:bool,<read__1038@293:1>:int),
        P[<<close__1043@264:2>@277:0>](<read__1038@293:0>:bool,<read__1038@293:1>:int,<f_f_1578@291:2>:int),
        P[<<close__1043@281:2>@289:0>](<f_f_1578@291:3>:bool,<f_f_1578@291:2>:int,<f_f_1578@291:5>:int)|- P[<read__1038@293:1>](
        <read__1038@293:0>:bool,<read__1038@293:1>:int)
        
        P[<close__1043@281:1>](<close__1043@281:0>:bool,<close__1043@281:1>:int),
        ((<close__1043@281:1> = 1) && ((<<close__1043@281:2>@289:0> = 2) && <close__1043@281:0>))
        |- P[<<close__1043@281:2>@289:0>](<close__1043@281:0>:bool,<close__1043@281:1>:int,
                                          <<close__1043@281:2>@289:0>:int)
        
        P[<f_1046@262:2>](<f_f_1577@279:1>:bool,<close__1043@281:0>:bool,<f_f_1577@279:0>:int),
        P[<<close__1043@264:2>@277:0>](<f_f_1577@279:1>:bool,<f_f_1577@279:0>:int,<close__1043@281:1>:int)|- P[<close__1043@281:1>](
        <close__1043@281:0>:bool,<close__1043@281:1>:int)
        
        P[<close__1043@264:1>](<close__1043@264:0>:bool,<close__1043@264:1>:int),
        ((<close__1043@264:1> = 3) && ((<<close__1043@264:2>@277:0> = <close__1043@264:1>) && <close__1043@264:0>))
        |- P[<<close__1043@264:2>@277:0>](<close__1043@264:0>:bool,<close__1043@264:1>:int,
                                          <<close__1043@264:2>@277:0>:int)
        
        P[<f_1046@262:2>](<close__1043@264:0>:bool,<f_1046@262:1>:bool,<close__1043@264:1>:int)|- P[<close__1043@264:1>](
        <close__1043@264:0>:bool,<close__1043@264:1>:int)
        
         ((<f_1046@262:2> = 3) && (<f_1046@262:0> && <f_1046@262:1>))
        |- P[<f_1046@262:2>](<f_1046@262:0>:bool,<f_1046@262:1>:bool,
                             <f_1046@262:2>:int)
      lower bounds:
        P[<f_1046@262:2>](<f_1046@262:0>:bool,<f_1046@262:1>:bool,<f_1046@262:2>:int) =
        ((<f_1046@262:2> = 3) && (<f_1046@262:0> && <f_1046@262:1>))
        P[<close__1043@264:1>](<close__1043@264:0>:bool,<close__1043@264:1>:int) =
        ((<close__1043@264:1> = 3) && <close__1043@264:0>)
        P[<<close__1043@264:2>@277:0>](<close__1043@264:0>:bool,<close__1043@264:1>:int,<<close__1043@264:2>@277:0>:int) =
        ((<close__1043@264:1> = 3) && ((<<close__1043@264:2>@277:0> = <close__1043@264:1>) && <close__1043@264:0>))
        P[<close__1043@281:1>](<close__1043@281:0>:bool,<close__1043@281:1>:int) =
        ((<close__1043@281:1> = 3) && <close__1043@281:0>)
        P[<<close__1043@281:2>@289:0>](<close__1043@281:0>:bool,<close__1043@281:1>:int,<<close__1043@281:2>@289:0>:int) =
        false
        P[<read__1038@293:1>](<read__1038@293:0>:bool,<read__1038@293:1>:int) = false
        P[<<read__1038@293:2>@301:0>](<read__1038@293:0>:bool,<read__1038@293:1>:int,<<read__1038@293:2>@301:0>:int) =
        false
        P[<read__1038@305:1>](<read__1038@305:0>:bool,<read__1038@305:1>:int) = false
        P[<fail_1589@314:0>](<fail_1589@314:0>:bool) = false
      upper bounds:
        P[<read__1038@305:1>](var833:bool,var834:int) = true
        P[<read__1038@293:1>](var828:bool,var829:int) = true
      begin GenHcSolver.classify_pids(187764)[4]
        output:
          [<read__1038@293:1>;<read__1038@305:1>]
      end GenHcSolver.classify_pids(187764)[4] (0.000000 sec.)
      begin ApronInterface.convex_hull_interpolate(187775)[4]
        lb:false
        nub:false
        lb':false
        nub':false
        begin InterpProver.interpolate(187776)[5]
          begin InterpProver.interpolate_fresh(187777)[6]
            begin InterpProver.interpolate_log(187778)[7]
              input1: false
              input2: false
              begin InterpProver.interpolate_check(187779)[8]
                begin InterpProver.interpolate_simplify(187780)[9]
                  begin InterpProver.interpolate_quick(187793)[10]
                    
                  end InterpProver.interpolate_quick(187793)[10] (0.000000 sec.)
                  begin minimizing # of disjunctions(187797)[10]
                    input: false
                    output: false
                  end minimizing # of disjunctions(187797)[10] (0.000000 sec.)
                  
                end InterpProver.interpolate_simplify(187780)[9] (0.000000 sec.)
                
              end InterpProver.interpolate_check(187779)[8] (0.000000 sec.)
              output: false
            end InterpProver.interpolate_log(187778)[7] (0.000000 sec.)
            
          end InterpProver.interpolate_fresh(187777)[6] (0.000000 sec.)
          
        end InterpProver.interpolate(187776)[5] (0.000999 sec.)
        output:
          P[<read__1038@293:1>](<read__1038@293:0>:bool,<read__1038@293:1>:int) = false
          P[<read__1038@305:1>](<read__1038@293:0>:bool,<read__1038@293:1>:int) = false
      end ApronInterface.convex_hull_interpolate(187775)[4] (0.000999 sec.)
      Horn clauses:
        P[<fail_1589@314:0>](<fail_1589@314:0>:bool)|- bot
        
        P[<f_1046@262:2>](<f_f_1579@303:1>:bool,<read__1038@305:0>:bool,<f_f_1579@303:0>:int),
        P[<<close__1043@264:2>@277:0>](<f_f_1579@303:1>:bool,<f_f_1579@303:0>:int,<f_f_1579@303:3>:int),
        P[<<close__1043@281:2>@289:0>](<read__1038@305:0>:bool,<f_f_1579@303:3>:int,<f_f_1579@303:2>:int),
        P[<<read__1038@293:2>@301:0>](<f_f_1579@303:1>:bool,<f_f_1579@303:0>:int,<read__1038@305:1>:int)|- bot
        
        P[<f_1046@262:2>](<read__1038@293:0>:bool,<f_f_1578@291:3>:bool,<read__1038@293:1>:int),
        P[<<close__1043@264:2>@277:0>](<read__1038@293:0>:bool,<read__1038@293:1>:int,<f_f_1578@291:2>:int),
        P[<<close__1043@281:2>@289:0>](<f_f_1578@291:3>:bool,<f_f_1578@291:2>:int,<f_f_1578@291:5>:int)|- bot
        
        P[<close__1043@281:1>](<close__1043@281:0>:bool,<close__1043@281:1>:int),
        ((<close__1043@281:1> = 1) && ((<<close__1043@281:2>@289:0> = 2) && <close__1043@281:0>))
        |- P[<<close__1043@281:2>@289:0>](<close__1043@281:0>:bool,<close__1043@281:1>:int,
                                          <<close__1043@281:2>@289:0>:int)
        
        P[<f_1046@262:2>](<f_f_1577@279:1>:bool,<close__1043@281:0>:bool,<f_f_1577@279:0>:int),
        P[<<close__1043@264:2>@277:0>](<f_f_1577@279:1>:bool,<f_f_1577@279:0>:int,<close__1043@281:1>:int)|- P[<close__1043@281:1>](
        <close__1043@281:0>:bool,<close__1043@281:1>:int)
        
        P[<close__1043@264:1>](<close__1043@264:0>:bool,<close__1043@264:1>:int),
        ((<close__1043@264:1> = 3) && ((<<close__1043@264:2>@277:0> = <close__1043@264:1>) && <close__1043@264:0>))
        |- P[<<close__1043@264:2>@277:0>](<close__1043@264:0>:bool,<close__1043@264:1>:int,
                                          <<close__1043@264:2>@277:0>:int)
        
        P[<f_1046@262:2>](<close__1043@264:0>:bool,<f_1046@262:1>:bool,<close__1043@264:1>:int)|- P[<close__1043@264:1>](
        <close__1043@264:0>:bool,<close__1043@264:1>:int)
        
         ((<f_1046@262:2> = 3) && (<f_1046@262:0> && <f_1046@262:1>))
        |- P[<f_1046@262:2>](<f_1046@262:0>:bool,<f_1046@262:1>:bool,
                             <f_1046@262:2>:int)
      lower bounds:
        P[<f_1046@262:2>](<f_1046@262:0>:bool,<f_1046@262:1>:bool,<f_1046@262:2>:int) =
        ((<f_1046@262:2> = 3) && (<f_1046@262:0> && <f_1046@262:1>))
        P[<fail_1589@314:0>](var844:bool) = false
        P[<<read__1038@293:2>@301:0>](var845:bool,var846:int,var847:int) = false
        P[<close__1043@264:1>](<close__1043@264:0>:bool,<close__1043@264:1>:int) =
        ((<close__1043@264:1> = 3) && <close__1043@264:0>)
        P[<<close__1043@264:2>@277:0>](<close__1043@264:0>:bool,<close__1043@264:1>:int,<<close__1043@264:2>@277:0>:int) =
        ((<close__1043@264:1> = 3) && ((<<close__1043@264:2>@277:0> = <close__1043@264:1>) && <close__1043@264:0>))
        P[<close__1043@281:1>](<close__1043@281:0>:bool,<close__1043@281:1>:int) =
        ((<close__1043@281:1> = 3) && <close__1043@281:0>)
        P[<<close__1043@281:2>@289:0>](<close__1043@281:0>:bool,<close__1043@281:1>:int,<<close__1043@281:2>@289:0>:int) =
        false
      upper bounds:
        P[<<close__1043@281:2>@289:0>](var870:bool,var871:int,var872:int) = true
        P[<<close__1043@264:2>@277:0>](var856:bool,var857:int,var858:int) =
        ((var857 <> 3) || ((var858 <> 1) || (not var856)))
      begin GenHcSolver.classify_pids(194003)[4]
        output:
          [<<close__1043@264:2>@277:0>;<<close__1043@281:2>@289:0>]
      end GenHcSolver.classify_pids(194003)[4] (0.001000 sec.)
      begin ApronInterface.convex_hull_interpolate(194031)[4]
        lb:((<close__1043@264:1> = 3) && ((<<close__1043@264:2>@277:0> = <close__1043@264:1>) && <close__1043@264:0>))
        nub:(not ((<close__1043@264:1> <> 3) || ((<<close__1043@264:2>@277:0> <> 1) || (not <close__1043@264:0>))))
        lb':((<close__1043@264:1> = 3) && ((<<close__1043@264:2>@277:0> = <close__1043@264:1>) && <close__1043@264:0>))
        nub':(not ((<close__1043@264:1> <> 3) || ((<<close__1043@264:2>@277:0> <> 1) || (not <close__1043@264:0>))))
        begin InterpProver.interpolate(194032)[5]
          begin InterpProver.interpolate_fresh(194033)[6]
            begin InterpProver.interpolate_log(194034)[7]
              input1: ((<close__1043@264:1> = 3) &&
                       ((<<close__1043@264:2>@277:0> = <close__1043@264:1>) && <close__1043@264:0>))
              input2: (not
                         ((<close__1043@264:1> <> 3) ||
                          ((<<close__1043@264:2>@277:0> <> 1) || (not <close__1043@264:0>))))
              begin InterpProver.interpolate_check(194035)[8]
                begin InterpProver.interpolate_simplify(194036)[9]
                  begin InterpProver.interpolate_quick(194117)[10]
                    begin CsisatInterface.interpolate_csisat_wrap(194126)[11]
                      begin CsisatInterface.interpolate_csisat_post_process(194127)[12]
                        begin CsisatInterface.interpolate_csisat_log(194128)[13]
                          input1: (3 = v_sep_close__1043_sep_264_sep_1 & v_sep_close__1043_sep_264_sep_0 = true() & v_sep_close__1043_sep_264_sep_1 = v_sep_close__1043_sep_264_sep_2_sep_277_sep_0)
                          input2: (1 = v_sep_close__1043_sep_264_sep_2_sep_277_sep_0 & 3 = v_sep_close__1043_sep_264_sep_1 & v_sep_close__1043_sep_264_sep_0 = true())
                          begin CsisatInterface.interpolate_csisat_raw(194129)[14]
                            
                          end CsisatInterface.interpolate_csisat_raw(194129)[14] (0.000000 sec.)
                          output: -1*v_sep_close__1043_sep_264_sep_2_sep_277_sep_0 <= -3
                          
                        end CsisatInterface.interpolate_csisat_log(194128)[13] (0.000000 sec.)
                        after simplification: -1*v_sep_close__1043_sep_264_sep_2_sep_277_sep_0 <= -3
                        after dnf conversion: ((-1*v_sep_close__1043_sep_264_sep_2_sep_277_sep_0 <= -3))
                        
                      end CsisatInterface.interpolate_csisat_post_process(194127)[12] (0.000000 sec.)
                      
                    end CsisatInterface.interpolate_csisat_wrap(194126)[11] (0.000000 sec.)
                    
                  end InterpProver.interpolate_quick(194117)[10] (0.001000 sec.)
                  
                end InterpProver.interpolate_simplify(194036)[9] (0.001000 sec.)
                
              end InterpProver.interpolate_check(194035)[8] (0.002000 sec.)
              output: (3 <= <<close__1043@264:2>@277:0>)
            end InterpProver.interpolate_log(194034)[7] (0.002000 sec.)
            
          end InterpProver.interpolate_fresh(194033)[6] (0.002000 sec.)
          
        end InterpProver.interpolate(194032)[5] (0.002000 sec.)
        output:
          P[<<close__1043@264:2>@277:0>](<close__1043@264:0>:bool,<close__1043@264:1>:int,<<close__1043@264:2>@277:0>:int) =
          (3 <= <<close__1043@264:2>@277:0>)
          P[<<close__1043@281:2>@289:0>](<close__1043@264:0>:bool,<close__1043@264:1>:int,<<close__1043@264:2>@277:0>:int) =
          (3 <= <<close__1043@264:2>@277:0>)
      end ApronInterface.convex_hull_interpolate(194031)[4] (0.002000 sec.)
      Horn clauses:
        P[<fail_1589@314:0>](<fail_1589@314:0>:bool)|- bot
        
        P[<f_1046@262:2>](<f_f_1579@303:1>:bool,<read__1038@305:0>:bool,<f_f_1579@303:0>:int),
        P[<<close__1043@281:2>@289:0>](<read__1038@305:0>:bool,<f_f_1579@303:3>:int,<f_f_1579@303:2>:int),
        P[<<read__1038@293:2>@301:0>](<f_f_1579@303:1>:bool,<f_f_1579@303:0>:int,<read__1038@305:1>:int),
        (3 <= <f_f_1579@303:3>) |- bot
        
        P[<f_1046@262:2>](<read__1038@293:0>:bool,<f_f_1578@291:3>:bool,<read__1038@293:1>:int),
        P[<<close__1043@281:2>@289:0>](<f_f_1578@291:3>:bool,<f_f_1578@291:2>:int,<f_f_1578@291:5>:int),
        (3 <= <f_f_1578@291:2>) |- bot
        
        P[<close__1043@281:1>](<close__1043@281:0>:bool,<close__1043@281:1>:int),
        ((<close__1043@281:1> = 1) && ((<<close__1043@281:2>@289:0> = 2) && <close__1043@281:0>))
        |- P[<<close__1043@281:2>@289:0>](<close__1043@281:0>:bool,<close__1043@281:1>:int,
                                          <<close__1043@281:2>@289:0>:int)
        
        P[<f_1046@262:2>](<f_f_1577@279:1>:bool,<close__1043@281:0>:bool,<f_f_1577@279:0>:int),
        (3 <= <close__1043@281:1>) |- P[<close__1043@281:1>](<close__1043@281:0>:bool,
                                                             <close__1043@281:1>:int)
        
        P[<f_1046@262:2>](<close__1043@264:0>:bool,<f_1046@262:1>:bool,<close__1043@264:1>:int)|- P[<close__1043@264:1>](
        <close__1043@264:0>:bool,<close__1043@264:1>:int)
        
         ((<f_1046@262:2> = 3) && (<f_1046@262:0> && <f_1046@262:1>))
        |- P[<f_1046@262:2>](<f_1046@262:0>:bool,<f_1046@262:1>:bool,
                             <f_1046@262:2>:int)
      lower bounds:
        P[<f_1046@262:2>](<f_1046@262:0>:bool,<f_1046@262:1>:bool,<f_1046@262:2>:int) =
        ((<f_1046@262:2> = 3) && (<f_1046@262:0> && <f_1046@262:1>))
        P[<fail_1589@314:0>](var885:bool) = false
        P[<<read__1038@293:2>@301:0>](var886:bool,var887:int,var888:int) = false
        P[<close__1043@281:1>](<close__1043@281:0>:bool,<close__1043@281:1>:int) =
        ((3 <= <close__1043@281:1>) && <close__1043@281:0>)
        P[<close__1043@264:1>](<close__1043@264:0>:bool,<close__1043@264:1>:int) =
        ((<close__1043@264:1> = 3) && <close__1043@264:0>)
        P[<<close__1043@281:2>@289:0>](<close__1043@281:0>:bool,<close__1043@281:1>:int,<<close__1043@281:2>@289:0>:int) =
        false
      upper bounds:
        P[<close__1043@281:1>](var907:bool,var908:int) = true
        P[<close__1043@264:1>](var897:bool,var898:int) = true
      begin GenHcSolver.classify_pids(199682)[4]
        output:
          [<close__1043@281:1>;<close__1043@264:1>]
      end GenHcSolver.classify_pids(199682)[4] (0.000000 sec.)
      begin ApronInterface.convex_hull_interpolate(199693)[4]
        lb:(((3 <= <close__1043@281:1>) && <close__1043@281:0>) || ((<close__1043@281:1> = 3) && <close__1043@281:0>))
        nub:false
        lb':(((3 <= <close__1043@281:1>) && <close__1043@281:0>) || ((<close__1043@281:1> = 3) && <close__1043@281:0>))
        nub':false
        begin InterpProver.interpolate(199694)[5]
          begin InterpProver.interpolate_fresh(199695)[6]
            begin InterpProver.interpolate_log(199696)[7]
              input1: (((3 <= <close__1043@281:1>) && <close__1043@281:0>) ||
                       ((<close__1043@281:1> = 3) && <close__1043@281:0>))
              input2: false
              begin InterpProver.interpolate_check(199697)[8]
                begin InterpProver.interpolate_simplify(199698)[9]
                  begin InterpProver.interpolate_quick(199754)[10]
                    
                  end InterpProver.interpolate_quick(199754)[10] (0.001000 sec.)
                  
                end InterpProver.interpolate_simplify(199698)[9] (0.001000 sec.)
                
              end InterpProver.interpolate_check(199697)[8] (0.001000 sec.)
              output: true
            end InterpProver.interpolate_log(199696)[7] (0.001000 sec.)
            
          end InterpProver.interpolate_fresh(199695)[6] (0.001000 sec.)
          
        end InterpProver.interpolate(199694)[5] (0.001000 sec.)
        output:
          P[<close__1043@281:1>](<close__1043@281:0>:bool,<close__1043@281:1>:int) = true
          P[<close__1043@264:1>](<close__1043@281:0>:bool,<close__1043@281:1>:int) = true
      end ApronInterface.convex_hull_interpolate(199693)[4] (0.002000 sec.)
      Horn clauses:
        P[<fail_1589@314:0>](<fail_1589@314:0>:bool)|- bot
        
        P[<f_1046@262:2>](<f_f_1579@303:1>:bool,<read__1038@305:0>:bool,<f_f_1579@303:0>:int),
        P[<<close__1043@281:2>@289:0>](<read__1038@305:0>:bool,<f_f_1579@303:3>:int,<f_f_1579@303:2>:int),
        P[<<read__1038@293:2>@301:0>](<f_f_1579@303:1>:bool,<f_f_1579@303:0>:int,<read__1038@305:1>:int),
        (3 <= <f_f_1579@303:3>) |- bot
        
        P[<f_1046@262:2>](<read__1038@293:0>:bool,<f_f_1578@291:3>:bool,<read__1038@293:1>:int),
        P[<<close__1043@281:2>@289:0>](<f_f_1578@291:3>:bool,<f_f_1578@291:2>:int,<f_f_1578@291:5>:int),
        (3 <= <f_f_1578@291:2>) |- bot
        
         ((<close__1043@281:1> = 1) && ((<<close__1043@281:2>@289:0> = 2) && <close__1043@281:0>))
        |- P[<<close__1043@281:2>@289:0>](<close__1043@281:0>:bool,<close__1043@281:1>:int,
                                          <<close__1043@281:2>@289:0>:int)
        
         ((<f_1046@262:2> = 3) && (<f_1046@262:0> && <f_1046@262:1>))
        |- P[<f_1046@262:2>](<f_1046@262:0>:bool,<f_1046@262:1>:bool,
                             <f_1046@262:2>:int)
      lower bounds:
        P[<<close__1043@281:2>@289:0>](<close__1043@281:0>:bool,<close__1043@281:1>:int,<<close__1043@281:2>@289:0>:int) =
        ((<close__1043@281:1> = 1) && ((<<close__1043@281:2>@289:0> = 2) && <close__1043@281:0>))
        P[<f_1046@262:2>](<f_1046@262:0>:bool,<f_1046@262:1>:bool,<f_1046@262:2>:int) =
        ((<f_1046@262:2> = 3) && (<f_1046@262:0> && <f_1046@262:1>))
        P[<fail_1589@314:0>](var921:bool) = false
        P[<<read__1038@293:2>@301:0>](var922:bool,var923:int,var924:int) = false
      upper bounds:
        P[<fail_1589@314:0>](var933:bool) = true
      begin GenHcSolver.classify_pids(202473)[4]
        output:
          [<fail_1589@314:0>]
      end GenHcSolver.classify_pids(202473)[4] (0.000000 sec.)
      lb:false
      nub:false
      begin ApronInterface.convex_hull_interpolate(202476)[4]
        lb:false
        nub:false
        lb':false
        nub':false
        begin InterpProver.interpolate(202477)[5]
          begin InterpProver.interpolate_fresh(202478)[6]
            begin InterpProver.interpolate_log(202479)[7]
              input1: false
              input2: false
              begin InterpProver.interpolate_check(202480)[8]
                begin InterpProver.interpolate_simplify(202481)[9]
                  begin InterpProver.interpolate_quick(202494)[10]
                    
                  end InterpProver.interpolate_quick(202494)[10] (0.000000 sec.)
                  begin minimizing # of disjunctions(202498)[10]
                    input: false
                    output: false
                  end minimizing # of disjunctions(202498)[10] (0.000000 sec.)
                  
                end InterpProver.interpolate_simplify(202481)[9] (0.000000 sec.)
                
              end InterpProver.interpolate_check(202480)[8] (0.000000 sec.)
              output: false
            end InterpProver.interpolate_log(202479)[7] (0.000000 sec.)
            
          end InterpProver.interpolate_fresh(202478)[6] (0.001000 sec.)
          
        end InterpProver.interpolate(202477)[5] (0.001000 sec.)
        output:
          P[<fail_1589@314:0>](var921:bool) = false
      end ApronInterface.convex_hull_interpolate(202476)[4] (0.001000 sec.)
      Horn clauses:
        P[<f_1046@262:2>](<f_f_1579@303:1>:bool,<read__1038@305:0>:bool,<f_f_1579@303:0>:int),
        P[<<close__1043@281:2>@289:0>](<read__1038@305:0>:bool,<f_f_1579@303:3>:int,<f_f_1579@303:2>:int),
        P[<<read__1038@293:2>@301:0>](<f_f_1579@303:1>:bool,<f_f_1579@303:0>:int,<read__1038@305:1>:int),
        (3 <= <f_f_1579@303:3>) |- bot
        
        P[<f_1046@262:2>](<read__1038@293:0>:bool,<f_f_1578@291:3>:bool,<read__1038@293:1>:int),
        P[<<close__1043@281:2>@289:0>](<f_f_1578@291:3>:bool,<f_f_1578@291:2>:int,<f_f_1578@291:5>:int),
        (3 <= <f_f_1578@291:2>) |- bot
        
         ((<close__1043@281:1> = 1) && ((<<close__1043@281:2>@289:0> = 2) && <close__1043@281:0>))
        |- P[<<close__1043@281:2>@289:0>](<close__1043@281:0>:bool,<close__1043@281:1>:int,
                                          <<close__1043@281:2>@289:0>:int)
        
         ((<f_1046@262:2> = 3) && (<f_1046@262:0> && <f_1046@262:1>))
        |- P[<f_1046@262:2>](<f_1046@262:0>:bool,<f_1046@262:1>:bool,
                             <f_1046@262:2>:int)
      lower bounds:
        P[<<close__1043@281:2>@289:0>](<close__1043@281:0>:bool,<close__1043@281:1>:int,<<close__1043@281:2>@289:0>:int) =
        ((<close__1043@281:1> = 1) && ((<<close__1043@281:2>@289:0> = 2) && <close__1043@281:0>))
        P[<f_1046@262:2>](<f_1046@262:0>:bool,<f_1046@262:1>:bool,<f_1046@262:2>:int) =
        ((<f_1046@262:2> = 3) && (<f_1046@262:0> && <f_1046@262:1>))
        P[<<read__1038@293:2>@301:0>](var937:bool,var938:int,var939:int) = false
      upper bounds:
        P[<<read__1038@293:2>@301:0>](var946:bool,var947:int,var948:int) = true
      begin GenHcSolver.classify_pids(203976)[4]
        output:
          [<<read__1038@293:2>@301:0>]
      end GenHcSolver.classify_pids(203976)[4] (0.000000 sec.)
      lb:false
      nub:false
      begin ApronInterface.convex_hull_interpolate(203979)[4]
        lb:false
        nub:false
        lb':false
        nub':false
        begin InterpProver.interpolate(203980)[5]
          begin InterpProver.interpolate_fresh(203981)[6]
            begin InterpProver.interpolate_log(203982)[7]
              input1: false
              input2: false
              begin InterpProver.interpolate_check(203983)[8]
                begin InterpProver.interpolate_simplify(203984)[9]
                  begin InterpProver.interpolate_quick(203997)[10]
                    
                  end InterpProver.interpolate_quick(203997)[10] (0.000000 sec.)
                  begin minimizing # of disjunctions(204001)[10]
                    input: false
                    output: false
                  end minimizing # of disjunctions(204001)[10] (0.000000 sec.)
                  
                end InterpProver.interpolate_simplify(203984)[9] (0.000000 sec.)
                
              end InterpProver.interpolate_check(203983)[8] (0.000000 sec.)
              output: false
            end InterpProver.interpolate_log(203982)[7] (0.000000 sec.)
            
          end InterpProver.interpolate_fresh(203981)[6] (0.000000 sec.)
          
        end InterpProver.interpolate(203980)[5] (0.000000 sec.)
        output:
          P[<<read__1038@293:2>@301:0>](var937:bool,var938:int,var939:int) = false
      end ApronInterface.convex_hull_interpolate(203979)[4] (0.000000 sec.)
      Horn clauses:
        P[<f_1046@262:2>](<read__1038@293:0>:bool,<f_f_1578@291:3>:bool,<read__1038@293:1>:int),
        P[<<close__1043@281:2>@289:0>](<f_f_1578@291:3>:bool,<f_f_1578@291:2>:int,<f_f_1578@291:5>:int),
        (3 <= <f_f_1578@291:2>) |- bot
        
         ((<close__1043@281:1> = 1) && ((<<close__1043@281:2>@289:0> = 2) && <close__1043@281:0>))
        |- P[<<close__1043@281:2>@289:0>](<close__1043@281:0>:bool,<close__1043@281:1>:int,
                                          <<close__1043@281:2>@289:0>:int)
        
         ((<f_1046@262:2> = 3) && (<f_1046@262:0> && <f_1046@262:1>))
        |- P[<f_1046@262:2>](<f_1046@262:0>:bool,<f_1046@262:1>:bool,
                             <f_1046@262:2>:int)
      lower bounds:
        P[<<close__1043@281:2>@289:0>](<close__1043@281:0>:bool,<close__1043@281:1>:int,<<close__1043@281:2>@289:0>:int) =
        ((<close__1043@281:1> = 1) && ((<<close__1043@281:2>@289:0> = 2) && <close__1043@281:0>))
        P[<f_1046@262:2>](<f_1046@262:0>:bool,<f_1046@262:1>:bool,<f_1046@262:2>:int) =
        ((<f_1046@262:2> = 3) && (<f_1046@262:0> && <f_1046@262:1>))
      upper bounds:
        P[<f_1046@262:2>](var949:bool,var950:bool,var951:int) = true
      begin GenHcSolver.classify_pids(205336)[4]
        output:
          [<f_1046@262:2>]
      end GenHcSolver.classify_pids(205336)[4] (0.000000 sec.)
      lb:((<f_1046@262:2> = 3) && (<f_1046@262:0> && <f_1046@262:1>))
      nub:false
      begin ApronInterface.convex_hull_interpolate(205339)[4]
        lb:((<f_1046@262:2> = 3) && (<f_1046@262:0> && <f_1046@262:1>))
        nub:false
        lb':((<f_1046@262:2> = 3) && (<f_1046@262:0> && <f_1046@262:1>))
        nub':false
        begin InterpProver.interpolate(205340)[5]
          begin InterpProver.interpolate_fresh(205341)[6]
            begin InterpProver.interpolate_log(205342)[7]
              input1: ((<f_1046@262:2> = 3) && (<f_1046@262:0> && <f_1046@262:1>))
              input2: false
              begin InterpProver.interpolate_check(205343)[8]
                begin InterpProver.interpolate_simplify(205344)[9]
                  begin InterpProver.interpolate_quick(205381)[10]
                    
                  end InterpProver.interpolate_quick(205381)[10] (0.000000 sec.)
                  
                end InterpProver.interpolate_simplify(205344)[9] (0.000000 sec.)
                
              end InterpProver.interpolate_check(205343)[8] (0.000000 sec.)
              output: true
            end InterpProver.interpolate_log(205342)[7] (0.000000 sec.)
            
          end InterpProver.interpolate_fresh(205341)[6] (0.000000 sec.)
          
        end InterpProver.interpolate(205340)[5] (0.000000 sec.)
        output:
          P[<f_1046@262:2>](<f_1046@262:0>:bool,<f_1046@262:1>:bool,<f_1046@262:2>:int) = true
      end ApronInterface.convex_hull_interpolate(205339)[4] (0.000000 sec.)
      Horn clauses:
        P[<<close__1043@281:2>@289:0>](<f_f_1578@291:3>:bool,<f_f_1578@291:2>:int,<f_f_1578@291:5>:int),
        (3 <= <f_f_1578@291:2>) |- bot
        
         ((<close__1043@281:1> = 1) && ((<<close__1043@281:2>@289:0> = 2) && <close__1043@281:0>))
        |- P[<<close__1043@281:2>@289:0>](<close__1043@281:0>:bool,<close__1043@281:1>:int,
                                          <<close__1043@281:2>@289:0>:int)
      lower bounds:
        P[<<close__1043@281:2>@289:0>](<close__1043@281:0>:bool,<close__1043@281:1>:int,<<close__1043@281:2>@289:0>:int) =
        ((<close__1043@281:1> = 1) && ((<<close__1043@281:2>@289:0> = 2) && <close__1043@281:0>))
      upper bounds:
        P[<<close__1043@281:2>@289:0>](var952:bool,var953:int,var954:int) = (3 > var953)
      begin GenHcSolver.classify_pids(206387)[4]
        output:
          [<<close__1043@281:2>@289:0>]
      end GenHcSolver.classify_pids(206387)[4] (0.000000 sec.)
      lb:((<close__1043@281:1> = 1) && ((<<close__1043@281:2>@289:0> = 2) && <close__1043@281:0>))
      nub:(not (3 > <close__1043@281:1>))
      begin ApronInterface.convex_hull_interpolate(206390)[4]
        lb:((<close__1043@281:1> = 1) && ((<<close__1043@281:2>@289:0> = 2) && <close__1043@281:0>))
        nub:(not (3 > <close__1043@281:1>))
        lb':((<close__1043@281:1> = 1) && ((<<close__1043@281:2>@289:0> = 2) && <close__1043@281:0>))
        nub':(not (3 > <close__1043@281:1>))
        begin InterpProver.interpolate(206391)[5]
          begin InterpProver.interpolate_fresh(206392)[6]
            begin InterpProver.interpolate_log(206393)[7]
              input1: ((<close__1043@281:1> = 1) && ((<<close__1043@281:2>@289:0> = 2) && <close__1043@281:0>))
              input2: (not (3 > <close__1043@281:1>))
              begin InterpProver.interpolate_check(206394)[8]
                begin InterpProver.interpolate_simplify(206395)[9]
                  begin InterpProver.interpolate_quick(206446)[10]
                    begin CsisatInterface.interpolate_csisat_wrap(206455)[11]
                      begin CsisatInterface.interpolate_csisat_post_process(206456)[12]
                        begin CsisatInterface.interpolate_csisat_log(206457)[13]
                          input1: 1 = v_sep_close__1043_sep_281_sep_1
                          input2: 3 <= v_sep_close__1043_sep_281_sep_1
                          begin CsisatInterface.interpolate_csisat_raw(206458)[14]
                            
                          end CsisatInterface.interpolate_csisat_raw(206458)[14] (0.000000 sec.)
                          output: v_sep_close__1043_sep_281_sep_1 <= 1
                          
                        end CsisatInterface.interpolate_csisat_log(206457)[13] (0.000000 sec.)
                        after simplification: v_sep_close__1043_sep_281_sep_1 <= 1
                        after dnf conversion: ((v_sep_close__1043_sep_281_sep_1 <= 1))
                        
                      end CsisatInterface.interpolate_csisat_post_process(206456)[12] (0.000000 sec.)
                      
                    end CsisatInterface.interpolate_csisat_wrap(206455)[11] (0.000000 sec.)
                    
                  end InterpProver.interpolate_quick(206446)[10] (0.000000 sec.)
                  
                end InterpProver.interpolate_simplify(206395)[9] (0.000000 sec.)
                
              end InterpProver.interpolate_check(206394)[8] (0.000999 sec.)
              output: (<close__1043@281:1> <= 1)
            end InterpProver.interpolate_log(206393)[7] (0.000999 sec.)
            
          end InterpProver.interpolate_fresh(206392)[6] (0.000999 sec.)
          
        end InterpProver.interpolate(206391)[5] (0.000999 sec.)
        output:
          P[<<close__1043@281:2>@289:0>](<close__1043@281:0>:bool,<close__1043@281:1>:int,<<close__1043@281:2>@289:0>:int) =
          (<close__1043@281:1> <= 1)
      end ApronInterface.convex_hull_interpolate(206390)[4] (0.000999 sec.)
      begin HcSolver.check_validity(206662)[4]
        input:
          P[<fail_1589@314:0>](<fail_1589@314:0>:bool)|- bot
          
          P[<read__1038@305:1>](true:bool,<br_readit_1585@311:1>:int),
          ((<br_readit_1585@311:1> <> 1) && ((<br_readit_1585@311:1> <> 3) && <fail_1589@314:0>))
          |- P[<fail_1589@314:0>](<fail_1589@314:0>:bool)
          
          P[<f_1046@262:2>](<f_f_1579@303:1>:bool,<read__1038@305:0>:bool,<f_f_1579@303:0>:int),
          P[<<close__1043@264:2>@277:0>](<f_f_1579@303:1>:bool,<f_f_1579@303:0>:int,<f_f_1579@303:3>:int),
          P[<<close__1043@281:2>@289:0>](<read__1038@305:0>:bool,<f_f_1579@303:3>:int,<f_f_1579@303:2>:int),
          P[<<read__1038@293:2>@301:0>](<f_f_1579@303:1>:bool,<f_f_1579@303:0>:int,<read__1038@305:1>:int)|- P[<read__1038@305:1>](
          <read__1038@305:0>:bool,<read__1038@305:1>:int)
          
          P[<read__1038@293:1>](<read__1038@293:0>:bool,<read__1038@293:1>:int),
          ((<read__1038@293:1> = 1) && ((<<read__1038@293:2>@301:0> = 1) && <read__1038@293:0>))
          |- P[<<read__1038@293:2>@301:0>](<read__1038@293:0>:bool,<read__1038@293:1>:int,
                                           <<read__1038@293:2>@301:0>:int)
          
          P[<f_1046@262:2>](<read__1038@293:0>:bool,<f_f_1578@291:3>:bool,<read__1038@293:1>:int),
          P[<<close__1043@264:2>@277:0>](<read__1038@293:0>:bool,<read__1038@293:1>:int,<f_f_1578@291:2>:int),
          P[<<close__1043@281:2>@289:0>](<f_f_1578@291:3>:bool,<f_f_1578@291:2>:int,<f_f_1578@291:5>:int)|- P[<read__1038@293:1>](
          <read__1038@293:0>:bool,<read__1038@293:1>:int)
          
          P[<close__1043@281:1>](<close__1043@281:0>:bool,<close__1043@281:1>:int),
          ((<close__1043@281:1> = 1) && ((<<close__1043@281:2>@289:0> = 2) && <close__1043@281:0>))
          |- P[<<close__1043@281:2>@289:0>](<close__1043@281:0>:bool,
                                            <close__1043@281:1>:int,<<close__1043@281:2>@289:0>:int)
          
          P[<f_1046@262:2>](<f_f_1577@279:1>:bool,<close__1043@281:0>:bool,<f_f_1577@279:0>:int),
          P[<<close__1043@264:2>@277:0>](<f_f_1577@279:1>:bool,<f_f_1577@279:0>:int,<close__1043@281:1>:int)|- P[<close__1043@281:1>](
          <close__1043@281:0>:bool,<close__1043@281:1>:int)
          
          P[<close__1043@264:1>](<close__1043@264:0>:bool,<close__1043@264:1>:int),
          ((<close__1043@264:1> = 3) && ((<<close__1043@264:2>@277:0> = <close__1043@264:1>) && <close__1043@264:0>))
          |- P[<<close__1043@264:2>@277:0>](<close__1043@264:0>:bool,
                                            <close__1043@264:1>:int,<<close__1043@264:2>@277:0>:int)
          
          P[<f_1046@262:2>](<close__1043@264:0>:bool,<f_1046@262:1>:bool,<close__1043@264:1>:int)|- P[<close__1043@264:1>](
          <close__1043@264:0>:bool,<close__1043@264:1>:int)
          
           ((<f_1046@262:2> = 3) && (<f_1046@262:0> && <f_1046@262:1>))
          |- P[<f_1046@262:2>](<f_1046@262:0>:bool,<f_1046@262:1>:bool,
                               <f_1046@262:2>:int)
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        
      end HcSolver.check_validity(206662)[4] (0.005000 sec.)
      solution:
        P[<fail_1589@314:0>](var921:bool) = false
        P[<read__1038@305:1>](<read__1038@293:0>:bool,<read__1038@293:1>:int) = false
        P[<<read__1038@293:2>@301:0>](var937:bool,var938:int,var939:int) = false
        P[<read__1038@293:1>](<read__1038@293:0>:bool,<read__1038@293:1>:int) = false
        P[<<close__1043@281:2>@289:0>](<close__1043@281:0>:bool,<close__1043@281:1>:int,<<close__1043@281:2>@289:0>:int) =
        (<close__1043@281:1> <= 1)
        P[<close__1043@281:1>](<close__1043@281:0>:bool,<close__1043@281:1>:int) = true
        P[<<close__1043@264:2>@277:0>](<close__1043@264:0>:bool,<close__1043@264:1>:int,<<close__1043@264:2>@277:0>:int) =
        (3 <= <<close__1043@264:2>@277:0>)
        P[<close__1043@264:1>](<close__1043@281:0>:bool,<close__1043@281:1>:int) = true
        P[<f_1046@262:2>](<f_1046@262:0>:bool,<f_1046@262:1>:bool,<f_1046@262:2>:int) = true
    end GenHcSolver.solve(182971)[3] (0.101985 sec.)
    begin GenHcSolver.solve(207406)[3]
      Horn clauses:
        P[<fail_1589@314:0>](<fail_1589@314:0>:bool)|- bot
        
        P[<read__1038@305:1>](true:bool,<br_readit_1585@311:1>:int),
        ((<br_readit_1585@311:1> <> 1) && ((<br_readit_1585@311:1> <> 3) && <fail_1589@314:0>))
        |- P[<fail_1589@314:0>](<fail_1589@314:0>:bool)
        
        P[<f_1046@262:2>](<f_f_1579@303:1>:bool,<read__1038@305:0>:bool,<f_f_1579@303:0>:int),
        P[<<close__1043@264:2>@277:0>](<f_f_1579@303:1>:bool,<f_f_1579@303:0>:int,<f_f_1579@303:3>:int),
        P[<<close__1043@281:2>@289:0>](<read__1038@305:0>:bool,<f_f_1579@303:3>:int,<f_f_1579@303:2>:int),
        P[<<read__1038@293:2>@301:0>](<f_f_1579@303:1>:bool,<f_f_1579@303:0>:int,<read__1038@305:1>:int)|- P[<read__1038@305:1>](
        <read__1038@305:0>:bool,<read__1038@305:1>:int)
        
        P[<read__1038@293:1>](<read__1038@293:0>:bool,<read__1038@293:1>:int),
        ((<read__1038@293:1> = 1) && ((<<read__1038@293:2>@301:0> = 1) && <read__1038@293:0>))
        |- P[<<read__1038@293:2>@301:0>](<read__1038@293:0>:bool,<read__1038@293:1>:int,
                                         <<read__1038@293:2>@301:0>:int)
        
        P[<f_1046@262:2>](<read__1038@293:0>:bool,<f_f_1578@291:3>:bool,<read__1038@293:1>:int),
        P[<<close__1043@264:2>@277:0>](<read__1038@293:0>:bool,<read__1038@293:1>:int,<f_f_1578@291:2>:int),
        P[<<close__1043@281:2>@289:0>](<f_f_1578@291:3>:bool,<f_f_1578@291:2>:int,<f_f_1578@291:5>:int)|- P[<read__1038@293:1>](
        <read__1038@293:0>:bool,<read__1038@293:1>:int)
        
        P[<close__1043@281:1>](<close__1043@281:0>:bool,<close__1043@281:1>:int),
        ((<close__1043@281:1> = 1) && ((<<close__1043@281:2>@289:0> = 2) && <close__1043@281:0>))
        |- P[<<close__1043@281:2>@289:0>](<close__1043@281:0>:bool,<close__1043@281:1>:int,
                                          <<close__1043@281:2>@289:0>:int)
        
        P[<f_1046@262:2>](<f_f_1577@279:1>:bool,<close__1043@281:0>:bool,<f_f_1577@279:0>:int),
        P[<<close__1043@264:2>@277:0>](<f_f_1577@279:1>:bool,<f_f_1577@279:0>:int,<close__1043@281:1>:int)|- P[<close__1043@281:1>](
        <close__1043@281:0>:bool,<close__1043@281:1>:int)
        
        P[<close__1043@264:1>](<close__1043@264:0>:bool,<close__1043@264:1>:int),
        ((<close__1043@264:1> = 3) && ((<<close__1043@264:2>@277:0> = <close__1043@264:1>) && <close__1043@264:0>))
        |- P[<<close__1043@264:2>@277:0>](<close__1043@264:0>:bool,<close__1043@264:1>:int,
                                          <<close__1043@264:2>@277:0>:int)
        
        P[<f_1046@262:2>](<close__1043@264:0>:bool,<f_1046@262:1>:bool,<close__1043@264:1>:int)|- P[<close__1043@264:1>](
        <close__1043@264:0>:bool,<close__1043@264:1>:int)
        
         ((<f_1046@262:2> = 3) && (<f_1046@262:0> && <f_1046@262:1>))
        |- P[<f_1046@262:2>](<f_1046@262:0>:bool,<f_1046@262:1>:bool,
                             <f_1046@262:2>:int)
      lower bounds:
        P[<f_1046@262:2>](<f_1046@262:0>:bool,<f_1046@262:1>:bool,<f_1046@262:2>:int) =
        ((<f_1046@262:2> = 3) && (<f_1046@262:0> && <f_1046@262:1>))
        P[<close__1043@264:1>](<close__1043@264:0>:bool,<close__1043@264:1>:int) =
        ((<close__1043@264:1> = 3) && <close__1043@264:0>)
        P[<<close__1043@264:2>@277:0>](<close__1043@264:0>:bool,<close__1043@264:1>:int,<<close__1043@264:2>@277:0>:int) =
        ((<close__1043@264:1> = 3) && ((<<close__1043@264:2>@277:0> = <close__1043@264:1>) && <close__1043@264:0>))
        P[<close__1043@281:1>](<close__1043@281:0>:bool,<close__1043@281:1>:int) =
        ((<close__1043@281:1> = 3) && <close__1043@281:0>)
        P[<<close__1043@281:2>@289:0>](<close__1043@281:0>:bool,<close__1043@281:1>:int,<<close__1043@281:2>@289:0>:int) =
        false
        P[<read__1038@293:1>](<read__1038@293:0>:bool,<read__1038@293:1>:int) = false
        P[<<read__1038@293:2>@301:0>](<read__1038@293:0>:bool,<read__1038@293:1>:int,<<read__1038@293:2>@301:0>:int) =
        false
        P[<read__1038@305:1>](<read__1038@305:0>:bool,<read__1038@305:1>:int) = false
        P[<fail_1589@314:0>](<fail_1589@314:0>:bool) = false
      upper bounds:
        P[<read__1038@305:1>](var964:bool,var965:int) = true
        P[<read__1038@293:1>](var959:bool,var960:int) = true
      begin GenHcSolver.classify_pids(212199)[4]
        output:
          [<read__1038@293:1>;<read__1038@305:1>]
      end GenHcSolver.classify_pids(212199)[4] (0.000000 sec.)
      begin ApronInterface.convex_hull_interpolate(212210)[4]
        lb:false
        nub:false
        begin ExtFormula.Formula.case_analysis_boolean(212213)[5]
          ts: false
          
        end ExtFormula.Formula.case_analysis_boolean(212213)[5] (0.000000 sec.)
        begin ExtFormula.Formula.case_analysis_boolean(212218)[5]
          ts: false
          
        end ExtFormula.Formula.case_analysis_boolean(212218)[5] (0.000000 sec.)
        lb':(-1 >= 0)
        nub':(-1 >= 0)
        begin InterpProver.interpolate(212221)[5]
          begin InterpProver.interpolate_fresh(212222)[6]
            begin InterpProver.interpolate_log(212223)[7]
              input1: (-1 >= 0)
              input2: (-1 >= 0)
              begin InterpProver.interpolate_check(212224)[8]
                begin InterpProver.interpolate_simplify(212225)[9]
                  begin InterpProver.interpolate_quick(212240)[10]
                    
                  end InterpProver.interpolate_quick(212240)[10] (0.000000 sec.)
                  begin minimizing # of disjunctions(212244)[10]
                    input: false
                    output: false
                  end minimizing # of disjunctions(212244)[10] (0.000000 sec.)
                  
                end InterpProver.interpolate_simplify(212225)[9] (0.000000 sec.)
                
              end InterpProver.interpolate_check(212224)[8] (0.001000 sec.)
              output: false
            end InterpProver.interpolate_log(212223)[7] (0.001000 sec.)
            
          end InterpProver.interpolate_fresh(212222)[6] (0.001000 sec.)
          
        end InterpProver.interpolate(212221)[5] (0.001000 sec.)
        output:
          P[<read__1038@293:1>](<read__1038@293:0>:bool,<read__1038@293:1>:int) = false
          P[<read__1038@305:1>](<read__1038@293:0>:bool,<read__1038@293:1>:int) = false
      end ApronInterface.convex_hull_interpolate(212210)[4] (0.001000 sec.)
      Horn clauses:
        P[<fail_1589@314:0>](<fail_1589@314:0>:bool)|- bot
        
        P[<f_1046@262:2>](<f_f_1579@303:1>:bool,<read__1038@305:0>:bool,<f_f_1579@303:0>:int),
        P[<<close__1043@264:2>@277:0>](<f_f_1579@303:1>:bool,<f_f_1579@303:0>:int,<f_f_1579@303:3>:int),
        P[<<close__1043@281:2>@289:0>](<read__1038@305:0>:bool,<f_f_1579@303:3>:int,<f_f_1579@303:2>:int),
        P[<<read__1038@293:2>@301:0>](<f_f_1579@303:1>:bool,<f_f_1579@303:0>:int,<read__1038@305:1>:int)|- bot
        
        P[<f_1046@262:2>](<read__1038@293:0>:bool,<f_f_1578@291:3>:bool,<read__1038@293:1>:int),
        P[<<close__1043@264:2>@277:0>](<read__1038@293:0>:bool,<read__1038@293:1>:int,<f_f_1578@291:2>:int),
        P[<<close__1043@281:2>@289:0>](<f_f_1578@291:3>:bool,<f_f_1578@291:2>:int,<f_f_1578@291:5>:int)|- bot
        
        P[<close__1043@281:1>](<close__1043@281:0>:bool,<close__1043@281:1>:int),
        ((<close__1043@281:1> = 1) && ((<<close__1043@281:2>@289:0> = 2) && <close__1043@281:0>))
        |- P[<<close__1043@281:2>@289:0>](<close__1043@281:0>:bool,<close__1043@281:1>:int,
                                          <<close__1043@281:2>@289:0>:int)
        
        P[<f_1046@262:2>](<f_f_1577@279:1>:bool,<close__1043@281:0>:bool,<f_f_1577@279:0>:int),
        P[<<close__1043@264:2>@277:0>](<f_f_1577@279:1>:bool,<f_f_1577@279:0>:int,<close__1043@281:1>:int)|- P[<close__1043@281:1>](
        <close__1043@281:0>:bool,<close__1043@281:1>:int)
        
        P[<close__1043@264:1>](<close__1043@264:0>:bool,<close__1043@264:1>:int),
        ((<close__1043@264:1> = 3) && ((<<close__1043@264:2>@277:0> = <close__1043@264:1>) && <close__1043@264:0>))
        |- P[<<close__1043@264:2>@277:0>](<close__1043@264:0>:bool,<close__1043@264:1>:int,
                                          <<close__1043@264:2>@277:0>:int)
        
        P[<f_1046@262:2>](<close__1043@264:0>:bool,<f_1046@262:1>:bool,<close__1043@264:1>:int)|- P[<close__1043@264:1>](
        <close__1043@264:0>:bool,<close__1043@264:1>:int)
        
         ((<f_1046@262:2> = 3) && (<f_1046@262:0> && <f_1046@262:1>))
        |- P[<f_1046@262:2>](<f_1046@262:0>:bool,<f_1046@262:1>:bool,
                             <f_1046@262:2>:int)
      lower bounds:
        P[<f_1046@262:2>](<f_1046@262:0>:bool,<f_1046@262:1>:bool,<f_1046@262:2>:int) =
        ((<f_1046@262:2> = 3) && (<f_1046@262:0> && <f_1046@262:1>))
        P[<fail_1589@314:0>](var975:bool) = false
        P[<<read__1038@293:2>@301:0>](var976:bool,var977:int,var978:int) = false
        P[<close__1043@264:1>](<close__1043@264:0>:bool,<close__1043@264:1>:int) =
        ((<close__1043@264:1> = 3) && <close__1043@264:0>)
        P[<<close__1043@264:2>@277:0>](<close__1043@264:0>:bool,<close__1043@264:1>:int,<<close__1043@264:2>@277:0>:int) =
        ((<close__1043@264:1> = 3) && ((<<close__1043@264:2>@277:0> = <close__1043@264:1>) && <close__1043@264:0>))
        P[<close__1043@281:1>](<close__1043@281:0>:bool,<close__1043@281:1>:int) =
        ((<close__1043@281:1> = 3) && <close__1043@281:0>)
        P[<<close__1043@281:2>@289:0>](<close__1043@281:0>:bool,<close__1043@281:1>:int,<<close__1043@281:2>@289:0>:int) =
        false
      upper bounds:
        P[<<close__1043@281:2>@289:0>](var1001:bool,var1002:int,var1003:int) = true
        P[<<close__1043@264:2>@277:0>](var987:bool,var988:int,var989:int) =
        ((var988 <> 3) || ((var989 <> 1) || (not var987)))
      begin GenHcSolver.classify_pids(218457)[4]
        output:
          [<<close__1043@264:2>@277:0>;<<close__1043@281:2>@289:0>]
      end GenHcSolver.classify_pids(218457)[4] (0.000000 sec.)
      begin ApronInterface.convex_hull_interpolate(218485)[4]
        lb:((<close__1043@264:1> = 3) && ((<<close__1043@264:2>@277:0> = <close__1043@264:1>) && <close__1043@264:0>))
        nub:(not ((<close__1043@264:1> <> 3) || ((<<close__1043@264:2>@277:0> <> 1) || (not <close__1043@264:0>))))
        begin ExtFormula.Formula.case_analysis_boolean(218508)[5]
          ts: ((<close__1043@264:1> = 3) &&
               ((<<close__1043@264:2>@277:0> = <close__1043@264:1>) && <close__1043@264:0>))
          
        end ExtFormula.Formula.case_analysis_boolean(218508)[5] (0.000000 sec.)
        begin ExtFormula.Formula.case_analysis_boolean(218562)[5]
          ts: ((<close__1043@264:1> = 3) && ((<<close__1043@264:2>@277:0> = 1) && <close__1043@264:0>))
          
        end ExtFormula.Formula.case_analysis_boolean(218562)[5] (0.000000 sec.)
        lb':(((((-3 + <<close__1043@264:2>@277:0>) = 0) && ((-3 + <close__1043@264:1>) = 0)) &&
              (<close__1043@264:0> = true)) || ((-1 >= 0) && (<close__1043@264:0> = false)))
        nub':(((((-1 + <<close__1043@264:2>@277:0>) = 0) && ((-3 + <close__1043@264:1>) = 0)) &&
               (<close__1043@264:0> = true)) || ((-1 >= 0) && (<close__1043@264:0> = false)))
        begin InterpProver.interpolate(218594)[5]
          begin InterpProver.interpolate_fresh(218595)[6]
            begin InterpProver.interpolate_log(218596)[7]
              input1: (((((-3 + <<close__1043@264:2>@277:0>) = 0) && ((-3 + <close__1043@264:1>) = 0)) &&
                        (<close__1043@264:0> = true)) || ((-1 >= 0) && (<close__1043@264:0> = false)))
              input2: (((((-1 + <<close__1043@264:2>@277:0>) = 0) && ((-3 + <close__1043@264:1>) = 0)) &&
                        (<close__1043@264:0> = true)) || ((-1 >= 0) && (<close__1043@264:0> = false)))
              begin InterpProver.interpolate_check(218597)[8]
                begin InterpProver.interpolate_simplify(218598)[9]
                  begin InterpProver.interpolate_quick(218687)[10]
                    begin CsisatInterface.interpolate_csisat_wrap(218696)[11]
                      begin CsisatInterface.interpolate_csisat_post_process(218697)[12]
                        begin CsisatInterface.interpolate_csisat_log(218698)[13]
                          input1: (3 = v_sep_close__1043_sep_264_sep_1 & 3 = v_sep_close__1043_sep_264_sep_2_sep_277_sep_0 & v_sep_close__1043_sep_264_sep_0 = true())
                          input2: (1 = v_sep_close__1043_sep_264_sep_2_sep_277_sep_0 & 3 = v_sep_close__1043_sep_264_sep_1 & v_sep_close__1043_sep_264_sep_0 = true())
                          begin CsisatInterface.interpolate_csisat_raw(218699)[14]
                            
                          end CsisatInterface.interpolate_csisat_raw(218699)[14] (0.000000 sec.)
                          output: -1*v_sep_close__1043_sep_264_sep_2_sep_277_sep_0 <= -3
                          
                        end CsisatInterface.interpolate_csisat_log(218698)[13] (0.000000 sec.)
                        after simplification: -1*v_sep_close__1043_sep_264_sep_2_sep_277_sep_0 <= -3
                        after dnf conversion: ((-1*v_sep_close__1043_sep_264_sep_2_sep_277_sep_0 <= -3))
                        
                      end CsisatInterface.interpolate_csisat_post_process(218697)[12] (0.000000 sec.)
                      
                    end CsisatInterface.interpolate_csisat_wrap(218696)[11] (0.000000 sec.)
                    
                  end InterpProver.interpolate_quick(218687)[10] (0.001000 sec.)
                  
                end InterpProver.interpolate_simplify(218598)[9] (0.001000 sec.)
                
              end InterpProver.interpolate_check(218597)[8] (0.002000 sec.)
              output: (3 <= <<close__1043@264:2>@277:0>)
            end InterpProver.interpolate_log(218596)[7] (0.002000 sec.)
            
          end InterpProver.interpolate_fresh(218595)[6] (0.002000 sec.)
          
        end InterpProver.interpolate(218594)[5] (0.002000 sec.)
        output:
          P[<<close__1043@264:2>@277:0>](<close__1043@264:0>:bool,<close__1043@264:1>:int,<<close__1043@264:2>@277:0>:int) =
          (3 <= <<close__1043@264:2>@277:0>)
          P[<<close__1043@281:2>@289:0>](<close__1043@264:0>:bool,<close__1043@264:1>:int,<<close__1043@264:2>@277:0>:int) =
          (3 <= <<close__1043@264:2>@277:0>)
      end ApronInterface.convex_hull_interpolate(218485)[4] (0.002999 sec.)
      Horn clauses:
        P[<fail_1589@314:0>](<fail_1589@314:0>:bool)|- bot
        
        P[<f_1046@262:2>](<f_f_1579@303:1>:bool,<read__1038@305:0>:bool,<f_f_1579@303:0>:int),
        P[<<close__1043@281:2>@289:0>](<read__1038@305:0>:bool,<f_f_1579@303:3>:int,<f_f_1579@303:2>:int),
        P[<<read__1038@293:2>@301:0>](<f_f_1579@303:1>:bool,<f_f_1579@303:0>:int,<read__1038@305:1>:int),
        (3 <= <f_f_1579@303:3>) |- bot
        
        P[<f_1046@262:2>](<read__1038@293:0>:bool,<f_f_1578@291:3>:bool,<read__1038@293:1>:int),
        P[<<close__1043@281:2>@289:0>](<f_f_1578@291:3>:bool,<f_f_1578@291:2>:int,<f_f_1578@291:5>:int),
        (3 <= <f_f_1578@291:2>) |- bot
        
        P[<close__1043@281:1>](<close__1043@281:0>:bool,<close__1043@281:1>:int),
        ((<close__1043@281:1> = 1) && ((<<close__1043@281:2>@289:0> = 2) && <close__1043@281:0>))
        |- P[<<close__1043@281:2>@289:0>](<close__1043@281:0>:bool,<close__1043@281:1>:int,
                                          <<close__1043@281:2>@289:0>:int)
        
        P[<f_1046@262:2>](<f_f_1577@279:1>:bool,<close__1043@281:0>:bool,<f_f_1577@279:0>:int),
        (3 <= <close__1043@281:1>) |- P[<close__1043@281:1>](<close__1043@281:0>:bool,
                                                             <close__1043@281:1>:int)
        
        P[<f_1046@262:2>](<close__1043@264:0>:bool,<f_1046@262:1>:bool,<close__1043@264:1>:int)|- P[<close__1043@264:1>](
        <close__1043@264:0>:bool,<close__1043@264:1>:int)
        
         ((<f_1046@262:2> = 3) && (<f_1046@262:0> && <f_1046@262:1>))
        |- P[<f_1046@262:2>](<f_1046@262:0>:bool,<f_1046@262:1>:bool,
                             <f_1046@262:2>:int)
      lower bounds:
        P[<f_1046@262:2>](<f_1046@262:0>:bool,<f_1046@262:1>:bool,<f_1046@262:2>:int) =
        ((<f_1046@262:2> = 3) && (<f_1046@262:0> && <f_1046@262:1>))
        P[<fail_1589@314:0>](var1016:bool) = false
        P[<<read__1038@293:2>@301:0>](var1017:bool,var1018:int,var1019:int) = false
        P[<close__1043@281:1>](<close__1043@281:0>:bool,<close__1043@281:1>:int) =
        ((3 <= <close__1043@281:1>) && <close__1043@281:0>)
        P[<close__1043@264:1>](<close__1043@264:0>:bool,<close__1043@264:1>:int) =
        ((<close__1043@264:1> = 3) && <close__1043@264:0>)
        P[<<close__1043@281:2>@289:0>](<close__1043@281:0>:bool,<close__1043@281:1>:int,<<close__1043@281:2>@289:0>:int) =
        false
      upper bounds:
        P[<close__1043@281:1>](var1038:bool,var1039:int) = true
        P[<close__1043@264:1>](var1028:bool,var1029:int) = true
      begin GenHcSolver.classify_pids(224275)[4]
        output:
          [<close__1043@281:1>;<close__1043@264:1>]
      end GenHcSolver.classify_pids(224275)[4] (0.001000 sec.)
      begin ApronInterface.convex_hull_interpolate(224286)[4]
        lb:(((3 <= <close__1043@281:1>) && <close__1043@281:0>) || ((<close__1043@281:1> = 3) && <close__1043@281:0>))
        nub:false
        begin ExtFormula.Formula.case_analysis_boolean(224317)[5]
          ts: (<close__1043@281:0> && (3 <= <close__1043@281:1>))
          
        end ExtFormula.Formula.case_analysis_boolean(224317)[5] (0.000000 sec.)
        begin ExtFormula.Formula.case_analysis_boolean(224341)[5]
          ts: false
          
        end ExtFormula.Formula.case_analysis_boolean(224341)[5] (0.000000 sec.)
        lb':((((-3 + <close__1043@281:1>) >= 0) && (<close__1043@281:0> = true)) ||
             ((-1 >= 0) && (<close__1043@281:0> = false)))
        nub':(-1 >= 0)
        begin InterpProver.interpolate(224344)[5]
          begin InterpProver.interpolate_fresh(224345)[6]
            begin InterpProver.interpolate_log(224346)[7]
              input1: ((((-3 + <close__1043@281:1>) >= 0) && (<close__1043@281:0> = true)) ||
                       ((-1 >= 0) && (<close__1043@281:0> = false)))
              input2: (-1 >= 0)
              begin InterpProver.interpolate_check(224347)[8]
                begin InterpProver.interpolate_simplify(224348)[9]
                  begin InterpProver.interpolate_quick(224395)[10]
                    
                  end InterpProver.interpolate_quick(224395)[10] (0.000000 sec.)
                  
                end InterpProver.interpolate_simplify(224348)[9] (0.000000 sec.)
                
              end InterpProver.interpolate_check(224347)[8] (0.000000 sec.)
              output: true
            end InterpProver.interpolate_log(224346)[7] (0.001000 sec.)
            
          end InterpProver.interpolate_fresh(224345)[6] (0.001000 sec.)
          
        end InterpProver.interpolate(224344)[5] (0.001000 sec.)
        output:
          P[<close__1043@281:1>](<close__1043@281:0>:bool,<close__1043@281:1>:int) = true
          P[<close__1043@264:1>](<close__1043@281:0>:bool,<close__1043@281:1>:int) = true
      end ApronInterface.convex_hull_interpolate(224286)[4] (0.001000 sec.)
      Horn clauses:
        P[<fail_1589@314:0>](<fail_1589@314:0>:bool)|- bot
        
        P[<f_1046@262:2>](<f_f_1579@303:1>:bool,<read__1038@305:0>:bool,<f_f_1579@303:0>:int),
        P[<<close__1043@281:2>@289:0>](<read__1038@305:0>:bool,<f_f_1579@303:3>:int,<f_f_1579@303:2>:int),
        P[<<read__1038@293:2>@301:0>](<f_f_1579@303:1>:bool,<f_f_1579@303:0>:int,<read__1038@305:1>:int),
        (3 <= <f_f_1579@303:3>) |- bot
        
        P[<f_1046@262:2>](<read__1038@293:0>:bool,<f_f_1578@291:3>:bool,<read__1038@293:1>:int),
        P[<<close__1043@281:2>@289:0>](<f_f_1578@291:3>:bool,<f_f_1578@291:2>:int,<f_f_1578@291:5>:int),
        (3 <= <f_f_1578@291:2>) |- bot
        
         ((<close__1043@281:1> = 1) && ((<<close__1043@281:2>@289:0> = 2) && <close__1043@281:0>))
        |- P[<<close__1043@281:2>@289:0>](<close__1043@281:0>:bool,<close__1043@281:1>:int,
                                          <<close__1043@281:2>@289:0>:int)
        
         ((<f_1046@262:2> = 3) && (<f_1046@262:0> && <f_1046@262:1>))
        |- P[<f_1046@262:2>](<f_1046@262:0>:bool,<f_1046@262:1>:bool,
                             <f_1046@262:2>:int)
      lower bounds:
        P[<<close__1043@281:2>@289:0>](<close__1043@281:0>:bool,<close__1043@281:1>:int,<<close__1043@281:2>@289:0>:int) =
        ((<close__1043@281:1> = 1) && ((<<close__1043@281:2>@289:0> = 2) && <close__1043@281:0>))
        P[<f_1046@262:2>](<f_1046@262:0>:bool,<f_1046@262:1>:bool,<f_1046@262:2>:int) =
        ((<f_1046@262:2> = 3) && (<f_1046@262:0> && <f_1046@262:1>))
        P[<fail_1589@314:0>](var1052:bool) = false
        P[<<read__1038@293:2>@301:0>](var1053:bool,var1054:int,var1055:int) = false
      upper bounds:
        P[<fail_1589@314:0>](var1064:bool) = true
      begin GenHcSolver.classify_pids(227116)[4]
        output:
          [<fail_1589@314:0>]
      end GenHcSolver.classify_pids(227116)[4] (0.000000 sec.)
      lb:false
      nub:false
      begin ApronInterface.convex_hull_interpolate(227119)[4]
        lb:false
        nub:false
        begin ExtFormula.Formula.case_analysis_boolean(227122)[5]
          ts: false
          
        end ExtFormula.Formula.case_analysis_boolean(227122)[5] (0.000000 sec.)
        begin ExtFormula.Formula.case_analysis_boolean(227127)[5]
          ts: false
          
        end ExtFormula.Formula.case_analysis_boolean(227127)[5] (0.000000 sec.)
        lb':(-1 >= 0)
        nub':(-1 >= 0)
        begin InterpProver.interpolate(227130)[5]
          begin InterpProver.interpolate_fresh(227131)[6]
            begin InterpProver.interpolate_log(227132)[7]
              input1: (-1 >= 0)
              input2: (-1 >= 0)
              begin InterpProver.interpolate_check(227133)[8]
                begin InterpProver.interpolate_simplify(227134)[9]
                  begin InterpProver.interpolate_quick(227149)[10]
                    
                  end InterpProver.interpolate_quick(227149)[10] (0.000000 sec.)
                  begin minimizing # of disjunctions(227153)[10]
                    input: false
                    output: false
                  end minimizing # of disjunctions(227153)[10] (0.000000 sec.)
                  
                end InterpProver.interpolate_simplify(227134)[9] (0.001000 sec.)
                
              end InterpProver.interpolate_check(227133)[8] (0.001000 sec.)
              output: false
            end InterpProver.interpolate_log(227132)[7] (0.001000 sec.)
            
          end InterpProver.interpolate_fresh(227131)[6] (0.001000 sec.)
          
        end InterpProver.interpolate(227130)[5] (0.001000 sec.)
        output:
          P[<fail_1589@314:0>](var1052:bool) = false
      end ApronInterface.convex_hull_interpolate(227119)[4] (0.001000 sec.)
      Horn clauses:
        P[<f_1046@262:2>](<f_f_1579@303:1>:bool,<read__1038@305:0>:bool,<f_f_1579@303:0>:int),
        P[<<close__1043@281:2>@289:0>](<read__1038@305:0>:bool,<f_f_1579@303:3>:int,<f_f_1579@303:2>:int),
        P[<<read__1038@293:2>@301:0>](<f_f_1579@303:1>:bool,<f_f_1579@303:0>:int,<read__1038@305:1>:int),
        (3 <= <f_f_1579@303:3>) |- bot
        
        P[<f_1046@262:2>](<read__1038@293:0>:bool,<f_f_1578@291:3>:bool,<read__1038@293:1>:int),
        P[<<close__1043@281:2>@289:0>](<f_f_1578@291:3>:bool,<f_f_1578@291:2>:int,<f_f_1578@291:5>:int),
        (3 <= <f_f_1578@291:2>) |- bot
        
         ((<close__1043@281:1> = 1) && ((<<close__1043@281:2>@289:0> = 2) && <close__1043@281:0>))
        |- P[<<close__1043@281:2>@289:0>](<close__1043@281:0>:bool,<close__1043@281:1>:int,
                                          <<close__1043@281:2>@289:0>:int)
        
         ((<f_1046@262:2> = 3) && (<f_1046@262:0> && <f_1046@262:1>))
        |- P[<f_1046@262:2>](<f_1046@262:0>:bool,<f_1046@262:1>:bool,
                             <f_1046@262:2>:int)
      lower bounds:
        P[<<close__1043@281:2>@289:0>](<close__1043@281:0>:bool,<close__1043@281:1>:int,<<close__1043@281:2>@289:0>:int) =
        ((<close__1043@281:1> = 1) && ((<<close__1043@281:2>@289:0> = 2) && <close__1043@281:0>))
        P[<f_1046@262:2>](<f_1046@262:0>:bool,<f_1046@262:1>:bool,<f_1046@262:2>:int) =
        ((<f_1046@262:2> = 3) && (<f_1046@262:0> && <f_1046@262:1>))
        P[<<read__1038@293:2>@301:0>](var1068:bool,var1069:int,var1070:int) = false
      upper bounds:
        P[<<read__1038@293:2>@301:0>](var1077:bool,var1078:int,var1079:int) = true
      begin GenHcSolver.classify_pids(228638)[4]
        output:
          [<<read__1038@293:2>@301:0>]
      end GenHcSolver.classify_pids(228638)[4] (0.000000 sec.)
      lb:false
      nub:false
      begin ApronInterface.convex_hull_interpolate(228641)[4]
        lb:false
        nub:false
        begin ExtFormula.Formula.case_analysis_boolean(228644)[5]
          ts: false
          
        end ExtFormula.Formula.case_analysis_boolean(228644)[5] (0.000000 sec.)
        begin ExtFormula.Formula.case_analysis_boolean(228649)[5]
          ts: false
          
        end ExtFormula.Formula.case_analysis_boolean(228649)[5] (0.000000 sec.)
        lb':(-1 >= 0)
        nub':(-1 >= 0)
        begin InterpProver.interpolate(228652)[5]
          begin InterpProver.interpolate_fresh(228653)[6]
            begin InterpProver.interpolate_log(228654)[7]
              input1: (-1 >= 0)
              input2: (-1 >= 0)
              begin InterpProver.interpolate_check(228655)[8]
                begin InterpProver.interpolate_simplify(228656)[9]
                  begin InterpProver.interpolate_quick(228671)[10]
                    
                  end InterpProver.interpolate_quick(228671)[10] (0.000000 sec.)
                  begin minimizing # of disjunctions(228675)[10]
                    input: false
                    output: false
                  end minimizing # of disjunctions(228675)[10] (0.000000 sec.)
                  
                end InterpProver.interpolate_simplify(228656)[9] (0.000000 sec.)
                
              end InterpProver.interpolate_check(228655)[8] (0.000000 sec.)
              output: false
            end InterpProver.interpolate_log(228654)[7] (0.000000 sec.)
            
          end InterpProver.interpolate_fresh(228653)[6] (0.000000 sec.)
          
        end InterpProver.interpolate(228652)[5] (0.000000 sec.)
        output:
          P[<<read__1038@293:2>@301:0>](var1068:bool,var1069:int,var1070:int) = false
      end ApronInterface.convex_hull_interpolate(228641)[4] (0.000000 sec.)
      Horn clauses:
        P[<f_1046@262:2>](<read__1038@293:0>:bool,<f_f_1578@291:3>:bool,<read__1038@293:1>:int),
        P[<<close__1043@281:2>@289:0>](<f_f_1578@291:3>:bool,<f_f_1578@291:2>:int,<f_f_1578@291:5>:int),
        (3 <= <f_f_1578@291:2>) |- bot
        
         ((<close__1043@281:1> = 1) && ((<<close__1043@281:2>@289:0> = 2) && <close__1043@281:0>))
        |- P[<<close__1043@281:2>@289:0>](<close__1043@281:0>:bool,<close__1043@281:1>:int,
                                          <<close__1043@281:2>@289:0>:int)
        
         ((<f_1046@262:2> = 3) && (<f_1046@262:0> && <f_1046@262:1>))
        |- P[<f_1046@262:2>](<f_1046@262:0>:bool,<f_1046@262:1>:bool,
                             <f_1046@262:2>:int)
      lower bounds:
        P[<<close__1043@281:2>@289:0>](<close__1043@281:0>:bool,<close__1043@281:1>:int,<<close__1043@281:2>@289:0>:int) =
        ((<close__1043@281:1> = 1) && ((<<close__1043@281:2>@289:0> = 2) && <close__1043@281:0>))
        P[<f_1046@262:2>](<f_1046@262:0>:bool,<f_1046@262:1>:bool,<f_1046@262:2>:int) =
        ((<f_1046@262:2> = 3) && (<f_1046@262:0> && <f_1046@262:1>))
      upper bounds:
        P[<f_1046@262:2>](var1080:bool,var1081:bool,var1082:int) = true
      begin GenHcSolver.classify_pids(230017)[4]
        output:
          [<f_1046@262:2>]
      end GenHcSolver.classify_pids(230017)[4] (0.000000 sec.)
      lb:((<f_1046@262:2> = 3) && (<f_1046@262:0> && <f_1046@262:1>))
      nub:false
      begin ApronInterface.convex_hull_interpolate(230020)[4]
        lb:((<f_1046@262:2> = 3) && (<f_1046@262:0> && <f_1046@262:1>))
        nub:false
        begin ExtFormula.Formula.case_analysis_boolean(230033)[5]
          ts: ((<f_1046@262:2> = 3) && (<f_1046@262:0> && <f_1046@262:1>))
          
        end ExtFormula.Formula.case_analysis_boolean(230033)[5] (0.001000 sec.)
        begin ExtFormula.Formula.case_analysis_boolean(230075)[5]
          ts: false
          
        end ExtFormula.Formula.case_analysis_boolean(230075)[5] (0.000000 sec.)
        lb':((((-3 + <f_1046@262:2>) = 0) && ((<f_1046@262:0> = true) && (<f_1046@262:1> = true))) ||
             (((-1 >= 0) && ((<f_1046@262:0> = true) && (<f_1046@262:1> = false))) ||
              (((-1 >= 0) && ((<f_1046@262:0> = false) && (<f_1046@262:1> = true))) ||
               ((-1 >= 0) && ((<f_1046@262:0> = false) && (<f_1046@262:1> = false))))))
        nub':(-1 >= 0)
        begin InterpProver.interpolate(230078)[5]
          begin InterpProver.interpolate_fresh(230079)[6]
            begin InterpProver.interpolate_log(230080)[7]
              input1: ((((-3 + <f_1046@262:2>) = 0) && ((<f_1046@262:0> = true) && (<f_1046@262:1> = true))) ||
                       (((-1 >= 0) && ((<f_1046@262:0> = true) && (<f_1046@262:1> = false))) ||
                        (((-1 >= 0) && ((<f_1046@262:0> = false) && (<f_1046@262:1> = true))) ||
                         ((-1 >= 0) && ((<f_1046@262:0> = false) && (<f_1046@262:1> = false))))))
              input2: (-1 >= 0)
              begin InterpProver.interpolate_check(230081)[8]
                begin InterpProver.interpolate_simplify(230082)[9]
                  begin InterpProver.interpolate_quick(230161)[10]
                    
                  end InterpProver.interpolate_quick(230161)[10] (0.000000 sec.)
                  
                end InterpProver.interpolate_simplify(230082)[9] (0.000000 sec.)
                
              end InterpProver.interpolate_check(230081)[8] (0.000000 sec.)
              output: true
            end InterpProver.interpolate_log(230080)[7] (0.000000 sec.)
            
          end InterpProver.interpolate_fresh(230079)[6] (0.000000 sec.)
          
        end InterpProver.interpolate(230078)[5] (0.000000 sec.)
        output:
          P[<f_1046@262:2>](<f_1046@262:0>:bool,<f_1046@262:1>:bool,<f_1046@262:2>:int) = true
      end ApronInterface.convex_hull_interpolate(230020)[4] (0.001000 sec.)
      Horn clauses:
        P[<<close__1043@281:2>@289:0>](<f_f_1578@291:3>:bool,<f_f_1578@291:2>:int,<f_f_1578@291:5>:int),
        (3 <= <f_f_1578@291:2>) |- bot
        
         ((<close__1043@281:1> = 1) && ((<<close__1043@281:2>@289:0> = 2) && <close__1043@281:0>))
        |- P[<<close__1043@281:2>@289:0>](<close__1043@281:0>:bool,<close__1043@281:1>:int,
                                          <<close__1043@281:2>@289:0>:int)
      lower bounds:
        P[<<close__1043@281:2>@289:0>](<close__1043@281:0>:bool,<close__1043@281:1>:int,<<close__1043@281:2>@289:0>:int) =
        ((<close__1043@281:1> = 1) && ((<<close__1043@281:2>@289:0> = 2) && <close__1043@281:0>))
      upper bounds:
        P[<<close__1043@281:2>@289:0>](var1083:bool,var1084:int,var1085:int) = (3 > var1084)
      begin GenHcSolver.classify_pids(231169)[4]
        output:
          [<<close__1043@281:2>@289:0>]
      end GenHcSolver.classify_pids(231169)[4] (0.000000 sec.)
      lb:((<close__1043@281:1> = 1) && ((<<close__1043@281:2>@289:0> = 2) && <close__1043@281:0>))
      nub:(not (3 > <close__1043@281:1>))
      begin ApronInterface.convex_hull_interpolate(231172)[4]
        lb:((<close__1043@281:1> = 1) && ((<<close__1043@281:2>@289:0> = 2) && <close__1043@281:0>))
        nub:(not (3 > <close__1043@281:1>))
        begin ExtFormula.Formula.case_analysis_boolean(231189)[5]
          ts: ((<close__1043@281:1> = 1) && ((<<close__1043@281:2>@289:0> = 2) && <close__1043@281:0>))
          
        end ExtFormula.Formula.case_analysis_boolean(231189)[5] (0.000000 sec.)
        begin ExtFormula.Formula.case_analysis_boolean(231225)[5]
          ts: (3 <= <close__1043@281:1>)
          
        end ExtFormula.Formula.case_analysis_boolean(231225)[5] (0.000000 sec.)
        lb':(((((-2 + <<close__1043@281:2>@289:0>) = 0) && ((-1 + <close__1043@281:1>) = 0)) &&
              (<close__1043@281:0> = true)) || ((-1 >= 0) && (<close__1043@281:0> = false)))
        nub':((-3 + <close__1043@281:1>) >= 0)
        begin InterpProver.interpolate(231230)[5]
          begin InterpProver.interpolate_fresh(231231)[6]
            begin InterpProver.interpolate_log(231232)[7]
              input1: (((((-2 + <<close__1043@281:2>@289:0>) = 0) && ((-1 + <close__1043@281:1>) = 0)) &&
                        (<close__1043@281:0> = true)) || ((-1 >= 0) && (<close__1043@281:0> = false)))
              input2: ((-3 + <close__1043@281:1>) >= 0)
              begin InterpProver.interpolate_check(231233)[8]
                begin InterpProver.interpolate_simplify(231234)[9]
                  begin InterpProver.interpolate_quick(231295)[10]
                    begin CsisatInterface.interpolate_csisat_wrap(231304)[11]
                      begin CsisatInterface.interpolate_csisat_post_process(231305)[12]
                        begin CsisatInterface.interpolate_csisat_log(231306)[13]
                          input1: 1 = v_sep_close__1043_sep_281_sep_1
                          input2: 3 <= v_sep_close__1043_sep_281_sep_1
                          begin CsisatInterface.interpolate_csisat_raw(231307)[14]
                            
                          end CsisatInterface.interpolate_csisat_raw(231307)[14] (0.000000 sec.)
                          output: v_sep_close__1043_sep_281_sep_1 <= 1
                          
                        end CsisatInterface.interpolate_csisat_log(231306)[13] (0.000000 sec.)
                        after simplification: v_sep_close__1043_sep_281_sep_1 <= 1
                        after dnf conversion: ((v_sep_close__1043_sep_281_sep_1 <= 1))
                        
                      end CsisatInterface.interpolate_csisat_post_process(231305)[12] (0.000000 sec.)
                      
                    end CsisatInterface.interpolate_csisat_wrap(231304)[11] (0.000000 sec.)
                    
                  end InterpProver.interpolate_quick(231295)[10] (0.001000 sec.)
                  
                end InterpProver.interpolate_simplify(231234)[9] (0.002000 sec.)
                
              end InterpProver.interpolate_check(231233)[8] (0.002000 sec.)
              output: (<close__1043@281:1> <= 1)
            end InterpProver.interpolate_log(231232)[7] (0.002000 sec.)
            
          end InterpProver.interpolate_fresh(231231)[6] (0.002000 sec.)
          
        end InterpProver.interpolate(231230)[5] (0.002000 sec.)
        output:
          P[<<close__1043@281:2>@289:0>](<close__1043@281:0>:bool,<close__1043@281:1>:int,<<close__1043@281:2>@289:0>:int) =
          (<close__1043@281:1> <= 1)
      end ApronInterface.convex_hull_interpolate(231172)[4] (0.002000 sec.)
      begin HcSolver.check_validity(231509)[4]
        input:
          P[<fail_1589@314:0>](<fail_1589@314:0>:bool)|- bot
          
          P[<read__1038@305:1>](true:bool,<br_readit_1585@311:1>:int),
          ((<br_readit_1585@311:1> <> 1) && ((<br_readit_1585@311:1> <> 3) && <fail_1589@314:0>))
          |- P[<fail_1589@314:0>](<fail_1589@314:0>:bool)
          
          P[<f_1046@262:2>](<f_f_1579@303:1>:bool,<read__1038@305:0>:bool,<f_f_1579@303:0>:int),
          P[<<close__1043@264:2>@277:0>](<f_f_1579@303:1>:bool,<f_f_1579@303:0>:int,<f_f_1579@303:3>:int),
          P[<<close__1043@281:2>@289:0>](<read__1038@305:0>:bool,<f_f_1579@303:3>:int,<f_f_1579@303:2>:int),
          P[<<read__1038@293:2>@301:0>](<f_f_1579@303:1>:bool,<f_f_1579@303:0>:int,<read__1038@305:1>:int)|- P[<read__1038@305:1>](
          <read__1038@305:0>:bool,<read__1038@305:1>:int)
          
          P[<read__1038@293:1>](<read__1038@293:0>:bool,<read__1038@293:1>:int),
          ((<read__1038@293:1> = 1) && ((<<read__1038@293:2>@301:0> = 1) && <read__1038@293:0>))
          |- P[<<read__1038@293:2>@301:0>](<read__1038@293:0>:bool,<read__1038@293:1>:int,
                                           <<read__1038@293:2>@301:0>:int)
          
          P[<f_1046@262:2>](<read__1038@293:0>:bool,<f_f_1578@291:3>:bool,<read__1038@293:1>:int),
          P[<<close__1043@264:2>@277:0>](<read__1038@293:0>:bool,<read__1038@293:1>:int,<f_f_1578@291:2>:int),
          P[<<close__1043@281:2>@289:0>](<f_f_1578@291:3>:bool,<f_f_1578@291:2>:int,<f_f_1578@291:5>:int)|- P[<read__1038@293:1>](
          <read__1038@293:0>:bool,<read__1038@293:1>:int)
          
          P[<close__1043@281:1>](<close__1043@281:0>:bool,<close__1043@281:1>:int),
          ((<close__1043@281:1> = 1) && ((<<close__1043@281:2>@289:0> = 2) && <close__1043@281:0>))
          |- P[<<close__1043@281:2>@289:0>](<close__1043@281:0>:bool,
                                            <close__1043@281:1>:int,<<close__1043@281:2>@289:0>:int)
          
          P[<f_1046@262:2>](<f_f_1577@279:1>:bool,<close__1043@281:0>:bool,<f_f_1577@279:0>:int),
          P[<<close__1043@264:2>@277:0>](<f_f_1577@279:1>:bool,<f_f_1577@279:0>:int,<close__1043@281:1>:int)|- P[<close__1043@281:1>](
          <close__1043@281:0>:bool,<close__1043@281:1>:int)
          
          P[<close__1043@264:1>](<close__1043@264:0>:bool,<close__1043@264:1>:int),
          ((<close__1043@264:1> = 3) && ((<<close__1043@264:2>@277:0> = <close__1043@264:1>) && <close__1043@264:0>))
          |- P[<<close__1043@264:2>@277:0>](<close__1043@264:0>:bool,
                                            <close__1043@264:1>:int,<<close__1043@264:2>@277:0>:int)
          
          P[<f_1046@262:2>](<close__1043@264:0>:bool,<f_1046@262:1>:bool,<close__1043@264:1>:int)|- P[<close__1043@264:1>](
          <close__1043@264:0>:bool,<close__1043@264:1>:int)
          
           ((<f_1046@262:2> = 3) && (<f_1046@262:0> && <f_1046@262:1>))
          |- P[<f_1046@262:2>](<f_1046@262:0>:bool,<f_1046@262:1>:bool,
                               <f_1046@262:2>:int)
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        
      end HcSolver.check_validity(231509)[4] (0.002999 sec.)
      solution:
        P[<fail_1589@314:0>](var1052:bool) = false
        P[<read__1038@305:1>](<read__1038@293:0>:bool,<read__1038@293:1>:int) = false
        P[<<read__1038@293:2>@301:0>](var1068:bool,var1069:int,var1070:int) = false
        P[<read__1038@293:1>](<read__1038@293:0>:bool,<read__1038@293:1>:int) = false
        P[<<close__1043@281:2>@289:0>](<close__1043@281:0>:bool,<close__1043@281:1>:int,<<close__1043@281:2>@289:0>:int) =
        (<close__1043@281:1> <= 1)
        P[<close__1043@281:1>](<close__1043@281:0>:bool,<close__1043@281:1>:int) = true
        P[<<close__1043@264:2>@277:0>](<close__1043@264:0>:bool,<close__1043@264:1>:int,<<close__1043@264:2>@277:0>:int) =
        (3 <= <<close__1043@264:2>@277:0>)
        P[<close__1043@264:1>](<close__1043@281:0>:bool,<close__1043@281:1>:int) = true
        P[<f_1046@262:2>](<f_1046@262:0>:bool,<f_1046@262:1>:bool,<f_1046@262:2>:int) = true
    end GenHcSolver.solve(207406)[3] (0.107983 sec.)
    begin YhornInterface.solve(232253)[3]
      begin HcSolver.solve_ub(232254)[4]
        encoded:
          P[<fail_1589@314:0>](<fail_1589@314:0>:int)|- bot
          
          P[<read__1038@305:1>](1:int,<br_readit_1585@311:1>:int),
          ((<br_readit_1585@311:1> <> 1) && ((<br_readit_1585@311:1> <> 3) && (<fail_1589@314:0> = 1)))
          |- P[<fail_1589@314:0>](<fail_1589@314:0>:int)
          
          P[<f_1046@262:2>](<f_f_1579@303:1>:int,<read__1038@305:0>:int,<f_f_1579@303:0>:int),
          P[<<close__1043@264:2>@277:0>](<f_f_1579@303:1>:int,<f_f_1579@303:0>:int,<f_f_1579@303:3>:int),
          P[<<close__1043@281:2>@289:0>](<read__1038@305:0>:int,<f_f_1579@303:3>:int,<f_f_1579@303:2>:int),
          P[<<read__1038@293:2>@301:0>](<f_f_1579@303:1>:int,<f_f_1579@303:0>:int,<read__1038@305:1>:int)|- P[<read__1038@305:1>](
          <read__1038@305:0>:int,<read__1038@305:1>:int)
          
          P[<read__1038@293:1>](<read__1038@293:0>:int,<read__1038@293:1>:int),
          ((<read__1038@293:1> = 1) && ((<<read__1038@293:2>@301:0> = 1) && (<read__1038@293:0> = 1)))
          |- P[<<read__1038@293:2>@301:0>](<read__1038@293:0>:int,<read__1038@293:1>:int,
                                           <<read__1038@293:2>@301:0>:int)
          
          P[<f_1046@262:2>](<read__1038@293:0>:int,<f_f_1578@291:3>:int,<read__1038@293:1>:int),
          P[<<close__1043@264:2>@277:0>](<read__1038@293:0>:int,<read__1038@293:1>:int,<f_f_1578@291:2>:int),
          P[<<close__1043@281:2>@289:0>](<f_f_1578@291:3>:int,<f_f_1578@291:2>:int,<f_f_1578@291:5>:int)|- P[<read__1038@293:1>](
          <read__1038@293:0>:int,<read__1038@293:1>:int)
          
          P[<close__1043@281:1>](<close__1043@281:0>:int,<close__1043@281:1>:int),
          ((<close__1043@281:1> = 1) && ((<<close__1043@281:2>@289:0> = 2) && (<close__1043@281:0> = 1)))
          |- P[<<close__1043@281:2>@289:0>](<close__1043@281:0>:int,<close__1043@281:1>:int,
                                            <<close__1043@281:2>@289:0>:int)
          
          P[<f_1046@262:2>](<f_f_1577@279:1>:int,<close__1043@281:0>:int,<f_f_1577@279:0>:int),
          P[<<close__1043@264:2>@277:0>](<f_f_1577@279:1>:int,<f_f_1577@279:0>:int,<close__1043@281:1>:int)|- P[<close__1043@281:1>](
          <close__1043@281:0>:int,<close__1043@281:1>:int)
          
          P[<close__1043@264:1>](<close__1043@264:0>:int,<close__1043@264:1>:int),
          ((<close__1043@264:1> = 3) &&
           ((<<close__1043@264:2>@277:0> = <close__1043@264:1>) && (<close__1043@264:0> = 1)))
          |- P[<<close__1043@264:2>@277:0>](<close__1043@264:0>:int,<close__1043@264:1>:int,
                                            <<close__1043@264:2>@277:0>:int)
          
          P[<f_1046@262:2>](<close__1043@264:0>:int,<f_1046@262:1>:int,<close__1043@264:1>:int)|- P[<close__1043@264:1>](
          <close__1043@264:0>:int,<close__1043@264:1>:int)
          
           ((<f_1046@262:2> = 3) && ((<f_1046@262:0> = 1) && (<f_1046@262:1> = 1)))
          |- P[<f_1046@262:2>](<f_1046@262:0>:int,<f_1046@262:1>:int,
                               <f_1046@262:2>:int)
        input to Yhorn:
          P[<fail_1589@314:0>](<fail_1589@314:0>:int)|- bot
          
          P[<read__1038@305:1>](var1086:int,<br_readit_1585@311:1>:int),
          ((<br_readit_1585@311:1> <> 3) &&
           ((<br_readit_1585@311:1> <> 1) && ((var1086 = 1) && (<fail_1589@314:0> = 1))))
          |- P[<fail_1589@314:0>](<fail_1589@314:0>:int)
          
          P[<f_1046@262:2>](<f_f_1579@303:1>:int,<read__1038@305:0>:int,<f_f_1579@303:0>:int),
          P[<<close__1043@264:2>@277:0>](<f_f_1579@303:1>:int,<f_f_1579@303:0>:int,<f_f_1579@303:3>:int),
          P[<<close__1043@281:2>@289:0>](<read__1038@305:0>:int,<f_f_1579@303:3>:int,<f_f_1579@303:2>:int),
          P[<<read__1038@293:2>@301:0>](<f_f_1579@303:1>:int,<f_f_1579@303:0>:int,<read__1038@305:1>:int)|- P[<read__1038@305:1>](
          <read__1038@305:0>:int,<read__1038@305:1>:int)
          
          P[<read__1038@293:1>](<read__1038@293:0>:int,<read__1038@293:1>:int),
          ((<read__1038@293:0> = 1) && ((<<read__1038@293:2>@301:0> = 1) && (<read__1038@293:1> = 1)))
          |- P[<<read__1038@293:2>@301:0>](<read__1038@293:0>:int,<read__1038@293:1>:int,
                                           <<read__1038@293:2>@301:0>:int)
          
          P[<f_1046@262:2>](<read__1038@293:0>:int,<f_f_1578@291:3>:int,<read__1038@293:1>:int),
          P[<<close__1043@264:2>@277:0>](<read__1038@293:0>:int,<read__1038@293:1>:int,<f_f_1578@291:2>:int),
          P[<<close__1043@281:2>@289:0>](<f_f_1578@291:3>:int,<f_f_1578@291:2>:int,<f_f_1578@291:5>:int)|- P[<read__1038@293:1>](
          <read__1038@293:0>:int,<read__1038@293:1>:int)
          
          P[<close__1043@281:1>](<close__1043@281:0>:int,<close__1043@281:1>:int),
          ((<close__1043@281:0> = 1) && ((<<close__1043@281:2>@289:0> = 2) && (<close__1043@281:1> = 1)))
          |- P[<<close__1043@281:2>@289:0>](<close__1043@281:0>:int,<close__1043@281:1>:int,
                                            <<close__1043@281:2>@289:0>:int)
          
          P[<f_1046@262:2>](<f_f_1577@279:1>:int,<close__1043@281:0>:int,<f_f_1577@279:0>:int),
          P[<<close__1043@264:2>@277:0>](<f_f_1577@279:1>:int,<f_f_1577@279:0>:int,<close__1043@281:1>:int)|- P[<close__1043@281:1>](
          <close__1043@281:0>:int,<close__1043@281:1>:int)
          
          P[<close__1043@264:1>](<close__1043@264:0>:int,<close__1043@264:1>:int),
          ((<<close__1043@264:2>@277:0> = <close__1043@264:1>) &&
           ((<close__1043@264:0> = 1) && (<close__1043@264:1> = 3)))
          |- P[<<close__1043@264:2>@277:0>](<close__1043@264:0>:int,<close__1043@264:1>:int,
                                            <<close__1043@264:2>@277:0>:int)
          
          P[<f_1046@262:2>](<close__1043@264:0>:int,<f_1046@262:1>:int,<close__1043@264:1>:int)|- P[<close__1043@264:1>](
          <close__1043@264:0>:int,<close__1043@264:1>:int)
          
           ((<f_1046@262:1> = 1) && ((<f_1046@262:0> = 1) && (<f_1046@262:2> = 3)))
          |- P[<f_1046@262:2>](<f_1046@262:0>:int,<f_1046@262:1>:int,
                               <f_1046@262:2>:int)Yhorn (Wed Sep 25 10:52:05 JST 2013)


(0=0) & (v_sep_fail_1589_sep_314_sep_0($6783)) -> 1=0.
(($6783-1=0) & ($6784-1=0) & ($6785-1<>0) & ($6785-3<>0)) & (v_sep_read__1038_sep_305_sep_1($6784,$6785)) -> v_sep_fail_1589_sep_314_sep_0($6783).
(0=0) & (v_sep_read__1038_sep_293_sep_2_sep_301_sep_0($6786,$6787,$6788)) & (v_sep_close__1043_sep_281_sep_2_sep_289_sep_0($6789,$6790,$6791)) & (v_sep_close__1043_sep_264_sep_2_sep_277_sep_0($6786,$6787,$6790)) & (v_sep_f_1046_sep_262_sep_2($6786,$6789,$6787)) -> v_sep_read__1038_sep_305_sep_1($6789,$6788).
(($6792-1=0) & ($6793-1=0) & ($6794-1=0)) & (v_sep_read__1038_sep_293_sep_1($6794,$6792)) -> v_sep_read__1038_sep_293_sep_2_sep_301_sep_0($6794,$6792,$6793).
(0=0) & (v_sep_close__1043_sep_281_sep_2_sep_289_sep_0($6795,$6796,$6797)) & (v_sep_close__1043_sep_264_sep_2_sep_277_sep_0($6794,$6792,$6796)) & (v_sep_f_1046_sep_262_sep_2($6794,$6795,$6792)) -> v_sep_read__1038_sep_293_sep_1($6794,$6792).
(($6798-1=0) & ($6799-2=0) & ($6800-1=0)) & (v_sep_close__1043_sep_281_sep_1($6800,$6798)) -> v_sep_close__1043_sep_281_sep_2_sep_289_sep_0($6800,$6798,$6799).
(0=0) & (v_sep_close__1043_sep_264_sep_2_sep_277_sep_0($6801,$6802,$6798)) & (v_sep_f_1046_sep_262_sep_2($6801,$6800,$6802)) -> v_sep_close__1043_sep_281_sep_1($6800,$6798).
(($6803-3=0) & ($6804-1=0) & (-$6803+$6805=0)) & (v_sep_close__1043_sep_264_sep_1($6804,$6803)) -> v_sep_close__1043_sep_264_sep_2_sep_277_sep_0($6804,$6803,$6805).
(0=0) & (v_sep_f_1046_sep_262_sep_2($6804,$6806,$6803)) -> v_sep_close__1043_sep_264_sep_1($6804,$6803).
($6807-3=0) & ($6808-1=0) & ($6806-1=0) -> v_sep_f_1046_sep_262_sep_2($6808,$6806,$6807).


v_sep_close__1043_sep_264_sep_1: X
v_sep_close__1043_sep_264_sep_2_sep_277_sep_0: X
v_sep_close__1043_sep_281_sep_1: X
v_sep_close__1043_sep_281_sep_2_sep_289_sep_0: X
v_sep_f_1046_sep_262_sep_2: X
v_sep_fail_1589_sep_314_sep_0: X
v_sep_read__1038_sep_293_sep_1: X
v_sep_read__1038_sep_293_sep_2_sep_301_sep_0: X
v_sep_read__1038_sep_305_sep_1: X
...................
v_sep_close__1043_sep_264_sep_1: X
v_sep_close__1043_sep_264_sep_2_sep_277_sep_0: X
v_sep_close__1043_sep_281_sep_1: X
v_sep_close__1043_sep_281_sep_2_sep_289_sep_0: X
v_sep_f_1046_sep_262_sep_2: X
v_sep_fail_1589_sep_314_sep_0: X
v_sep_read__1038_sep_293_sep_1: X
v_sep_read__1038_sep_293_sep_2_sep_301_sep_0: X
v_sep_read__1038_sep_305_sep_1: X
......
v_sep_close__1043_sep_264_sep_1: X
v_sep_close__1043_sep_264_sep_2_sep_277_sep_0: X
v_sep_close__1043_sep_281_sep_1: X
v_sep_close__1043_sep_281_sep_2_sep_289_sep_0: X
v_sep_f_1046_sep_262_sep_2: X
v_sep_fail_1589_sep_314_sep_0: X
v_sep_read__1038_sep_293_sep_1: X
v_sep_read__1038_sep_293_sep_2_sep_301_sep_0: X
v_sep_read__1038_sep_305_sep_1: X
..........
v_sep_close__1043_sep_264_sep_1: X
v_sep_close__1043_sep_264_sep_2_sep_277_sep_0: X
v_sep_close__1043_sep_281_sep_1: X
v_sep_close__1043_sep_281_sep_2_sep_289_sep_0: X
v_sep_f_1046_sep_262_sep_2: X
v_sep_fail_1589_sep_314_sep_0: X
v_sep_read__1038_sep_293_sep_1: X
v_sep_read__1038_sep_293_sep_2_sep_301_sep_0: X
v_sep_read__1038_sep_305_sep_1: X
.............
v_sep_close__1043_sep_264_sep_1: X
v_sep_close__1043_sep_264_sep_2_sep_277_sep_0: X
v_sep_close__1043_sep_281_sep_1: X
v_sep_close__1043_sep_281_sep_2_sep_289_sep_0: X
v_sep_f_1046_sep_262_sep_2: X
v_sep_fail_1589_sep_314_sep_0: X
v_sep_read__1038_sep_293_sep_1: X
v_sep_read__1038_sep_293_sep_2_sep_301_sep_0: X
v_sep_read__1038_sep_305_sep_1: X
...................(0=0) & (v_sep_fail_1589_sep_314_sep_0($6783)) -> 1=0.
(($6783-1=0) & ($6784-1=0) & ($6785-1<>0) & ($6785-3<>0)) & (v_sep_read__1038_sep_305_sep_1($6784,$6785)) -> v_sep_fail_1589_sep_314_sep_0($6783).
(0=0) & (v_sep_read__1038_sep_293_sep_2_sep_301_sep_0($6786,$6787,$6788)) & (v_sep_close__1043_sep_281_sep_2_sep_289_sep_0($6789,$6790,$6791)) & (v_sep_close__1043_sep_264_sep_2_sep_277_sep_0($6786,$6787,$6790)) & (v_sep_f_1046_sep_262_sep_2($6786,$6789,$6787)) -> v_sep_read__1038_sep_305_sep_1($6789,$6788).
(($6792-1=0) & ($6793-1=0) & ($6794-1=0)) & (v_sep_read__1038_sep_293_sep_1($6794,$6792)) -> v_sep_read__1038_sep_293_sep_2_sep_301_sep_0($6794,$6792,$6793).
(0=0) & (v_sep_close__1043_sep_281_sep_2_sep_289_sep_0($6795,$6796,$6797)) & (v_sep_close__1043_sep_264_sep_2_sep_277_sep_0($6794,$6792,$6796)) & (v_sep_f_1046_sep_262_sep_2($6794,$6795,$6792)) -> v_sep_read__1038_sep_293_sep_1($6794,$6792).
(($6798-1=0) & ($6799-2=0) & ($6800-1=0)) & (v_sep_close__1043_sep_281_sep_1($6800,$6798)) -> v_sep_close__1043_sep_281_sep_2_sep_289_sep_0($6800,$6798,$6799).
(0=0) & (v_sep_close__1043_sep_264_sep_2_sep_277_sep_0($6801,$6802,$6798)) & (v_sep_f_1046_sep_262_sep_2($6801,$6800,$6802)) -> v_sep_close__1043_sep_281_sep_1($6800,$6798).
(($6803-3=0) & ($6804-1=0) & (-$6803+$6805=0)) & (v_sep_close__1043_sep_264_sep_1($6804,$6803)) -> v_sep_close__1043_sep_264_sep_2_sep_277_sep_0($6804,$6803,$6805).
(0=0) & (v_sep_f_1046_sep_262_sep_2($6804,$6806,$6803)) -> v_sep_close__1043_sep_264_sep_1($6804,$6803).
($6807-3=0) & ($6808-1=0) & ($6806-1=0) -> v_sep_f_1046_sep_262_sep_2($6808,$6806,$6807).

        solution:
          P[<close__1043@264:1>]($6855:bool,$6857:int) = true
          P[<<close__1043@264:2>@277:0>]($6831:bool,$6833:int,$6835:int) = (3 <= $6835)
          P[<close__1043@281:1>]($6850:bool,$6852:int) = (3 <= $6852)
          P[<<close__1043@281:2>@289:0>]($6824:bool,$6826:int,$6828:int) = ((1 + $6826) <= 0)
          P[<f_1046@262:2>]($6838:bool,$6840:bool,$6842:int) =
          ((not $6838) || (($6838 && $6840) || ($6838 && (not $6840))))
          P[<fail_1589@314:0>]($6809:bool) = false
          P[<read__1038@293:1>]($6845:bool,$6847:int) = false
          P[<<read__1038@293:2>@301:0>]($6817:bool,$6819:int,$6821:int) = false
          P[<read__1038@305:1>]($6812:bool,$6814:int) = false
        
      end HcSolver.solve_ub(232254)[4] (0.068990 sec.)
      begin HcSolver.check_validity(232878)[4]
        input:
          P[<fail_1589@314:0>](<fail_1589@314:0>:bool)|- bot
          
          P[<read__1038@305:1>](true:bool,<br_readit_1585@311:1>:int),
          ((<br_readit_1585@311:1> <> 1) && ((<br_readit_1585@311:1> <> 3) && <fail_1589@314:0>))
          |- P[<fail_1589@314:0>](<fail_1589@314:0>:bool)
          
          P[<f_1046@262:2>](<f_f_1579@303:1>:bool,<read__1038@305:0>:bool,<f_f_1579@303:0>:int),
          P[<<close__1043@264:2>@277:0>](<f_f_1579@303:1>:bool,<f_f_1579@303:0>:int,<f_f_1579@303:3>:int),
          P[<<close__1043@281:2>@289:0>](<read__1038@305:0>:bool,<f_f_1579@303:3>:int,<f_f_1579@303:2>:int),
          P[<<read__1038@293:2>@301:0>](<f_f_1579@303:1>:bool,<f_f_1579@303:0>:int,<read__1038@305:1>:int)|- P[<read__1038@305:1>](
          <read__1038@305:0>:bool,<read__1038@305:1>:int)
          
          P[<read__1038@293:1>](<read__1038@293:0>:bool,<read__1038@293:1>:int),
          ((<read__1038@293:1> = 1) && ((<<read__1038@293:2>@301:0> = 1) && <read__1038@293:0>))
          |- P[<<read__1038@293:2>@301:0>](<read__1038@293:0>:bool,<read__1038@293:1>:int,
                                           <<read__1038@293:2>@301:0>:int)
          
          P[<f_1046@262:2>](<read__1038@293:0>:bool,<f_f_1578@291:3>:bool,<read__1038@293:1>:int),
          P[<<close__1043@264:2>@277:0>](<read__1038@293:0>:bool,<read__1038@293:1>:int,<f_f_1578@291:2>:int),
          P[<<close__1043@281:2>@289:0>](<f_f_1578@291:3>:bool,<f_f_1578@291:2>:int,<f_f_1578@291:5>:int)|- P[<read__1038@293:1>](
          <read__1038@293:0>:bool,<read__1038@293:1>:int)
          
          P[<close__1043@281:1>](<close__1043@281:0>:bool,<close__1043@281:1>:int),
          ((<close__1043@281:1> = 1) && ((<<close__1043@281:2>@289:0> = 2) && <close__1043@281:0>))
          |- P[<<close__1043@281:2>@289:0>](<close__1043@281:0>:bool,
                                            <close__1043@281:1>:int,<<close__1043@281:2>@289:0>:int)
          
          P[<f_1046@262:2>](<f_f_1577@279:1>:bool,<close__1043@281:0>:bool,<f_f_1577@279:0>:int),
          P[<<close__1043@264:2>@277:0>](<f_f_1577@279:1>:bool,<f_f_1577@279:0>:int,<close__1043@281:1>:int)|- P[<close__1043@281:1>](
          <close__1043@281:0>:bool,<close__1043@281:1>:int)
          
          P[<close__1043@264:1>](<close__1043@264:0>:bool,<close__1043@264:1>:int),
          ((<close__1043@264:1> = 3) && ((<<close__1043@264:2>@277:0> = <close__1043@264:1>) && <close__1043@264:0>))
          |- P[<<close__1043@264:2>@277:0>](<close__1043@264:0>:bool,
                                            <close__1043@264:1>:int,<<close__1043@264:2>@277:0>:int)
          
          P[<f_1046@262:2>](<close__1043@264:0>:bool,<f_1046@262:1>:bool,<close__1043@264:1>:int)|- P[<close__1043@264:1>](
          <close__1043@264:0>:bool,<close__1043@264:1>:int)
          
           ((<f_1046@262:2> = 3) && (<f_1046@262:0> && <f_1046@262:1>))
          |- P[<f_1046@262:2>](<f_1046@262:0>:bool,<f_1046@262:1>:bool,
                               <f_1046@262:2>:int)
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        
      end HcSolver.check_validity(232878)[4] (0.005999 sec.)
      solution:
        P[<close__1043@264:1>]($6855:bool,$6857:int) = true
        P[<<close__1043@264:2>@277:0>]($6831:bool,$6833:int,$6835:int) = (3 <= $6835)
        P[<close__1043@281:1>]($6850:bool,$6852:int) = (3 <= $6852)
        P[<<close__1043@281:2>@289:0>]($6824:bool,$6826:int,$6828:int) = ((1 + $6826) <= 0)
        P[<f_1046@262:2>]($6838:bool,$6840:bool,$6842:int) =
        ((not $6838) || (($6838 && $6840) || ($6838 && (not $6840))))
        P[<fail_1589@314:0>]($6809:bool) = false
        P[<read__1038@293:1>]($6845:bool,$6847:int) = false
        P[<<read__1038@293:2>@301:0>]($6817:bool,$6819:int,$6821:int) = false
        P[<read__1038@305:1>]($6812:bool,$6814:int) = false
    end YhornInterface.solve(232253)[3] (0.074989 sec.)
    
  end RefTypeInfer.infer_etrs(177782)[2] (0.468928 sec.)
  refinement types:
    main_1574: X
    f_1582: v1:int -> X
    f_1583: v1:int -> v2:int -> X
    main_1056: v1:int -> v2:int -> (v3:unit -> X) -> X
    g_1052: v1:int -> v2:bool -> v3:int -> (v4:unit -> X) -> X
    next_1050: v1:int -> (v2:int -> X) -> X
    f_g_1581: v1:int -> v2:int -> v3:bool -> (v4:unit -> X) -> v6:int -> X
    f_1046: v1:bool -> v2:bool -> v3:int -> (v4:unit -> X) -> X
    close__1043: v1:bool -> v2:int -> (v3:{v3:int | (3 <= v3)} -> X) -> X
    closeit_1041: v1:int -> (v2:int -> X) -> X
    br_closeit_1587: v1:bool -> v2:int -> (v3:int -> X) -> X
    f_f_1577: v1:int -> v2:bool -> v3:bool -> (v4:unit -> X) -> v6:int -> X
    close__1043: v1:bool -> v2:int -> (v3:{v3:int | (v2 <= 1)} -> X) -> X
    closeit_1041: v1:int -> (v2:int -> X) -> X
    f_f_1578: v1:int -> v2:bool -> v3:int -> v4:bool -> (v5:unit -> X) -> v7:int -> X
    read__1038: v1:bool -> v2:{v2:int | false} -> (v3:{v3:int | false} -> X) -> X
    readit_1036: v1:int -> (v2:int -> X) -> X
    f_f_1579: v1:int -> v2:bool -> v3:int -> v4:int -> v5:bool -> (v6:unit -> X) -> v8:int -> X
    read__1038: v1:bool -> v2:{v2:int | false} -> (v3:int -> X) -> X
    readit_1036: v1:int -> (v2:int -> X) -> X
    br_readit_1585: v1:bool -> v2:int -> (v3:int -> X) -> X
    fail_1589: v1:{v1:bool | false} -> (v2:unit -> X) -> X
    f_1584: var1112:int -> var1111:int -> var1110:unit -> X
    f_closeit_1576: var1117:int -> (var1116:int -> X) -> var1114:unit -> X
    f_f_1580: var1127:int ->
              var1126:bool ->
              var1125:int -> var1124:int -> var1123:int -> var1122:bool -> (var1121:unit -> X) -> var1119:int -> X
    f_readit_1575: var1130:int -> var1129:unit -> X
    k_main_u_1525: var1136:int -> var1135:int -> (var1134:unit -> X) -> var1132:unit -> X
    loop_1030: var1140:unit -> (var1139:unit -> X) -> X
  abstraction types:
    main_1574: X
    f_1582: v1:int -> X
    f_1583: v1:int -> v2:int -> X
    main_1056: v1:int -> v2:int -> (v3:unit -> X) -> X
    g_1052: v1:int -> v2:bool -> v3:int -> (v4:unit -> X) -> X
    next_1050: v1:int -> (v2:int -> X) -> X
    f_g_1581: v1:int -> v2:int -> v3:bool -> (v4:unit -> X) -> v6:int -> X
    f_1046: v1:bool -> v2:bool -> v3:int -> (v4:unit -> X) -> X
    close__1043: var1141:bool ->
                 var1142:int -> (var1143:int[var1143 -> (3 <= var1143),
                                             var1143 -> (var1142 <= 1)] -> X) -> X
    closeit_1041: var1146:int -> (var1147:int -> X) -> X
    br_closeit_1587: v1:bool -> v2:int -> (v3:int -> X) -> X
    f_f_1577: v1:int -> v2:bool -> v3:bool -> (v4:unit -> X) -> v6:int -> X
    f_f_1578: v1:int -> v2:bool -> v3:int -> v4:bool -> (v5:unit -> X) -> v7:int -> X
    read__1038: var1150:bool -> var1151:int -> (var1152:int -> X) -> X
    readit_1036: var1155:int -> (var1156:int -> X) -> X
    f_f_1579: v1:int -> v2:bool -> v3:int -> v4:int -> v5:bool -> (v6:unit -> X) -> v8:int -> X
    br_readit_1585: v1:bool -> v2:int -> (v3:int -> X) -> X
    fail_1589: v1:bool -> (v2:unit -> X) -> X
    f_1584: var1112:int -> var1111:int -> var1110:unit -> X
    f_closeit_1576: var1117:int -> (var1116:int -> X) -> var1114:unit -> X
    f_f_1580: var1127:int ->
              var1126:bool ->
              var1125:int -> var1124:int -> var1123:int -> var1122:bool -> (var1121:unit -> X) -> var1119:int -> X
    f_readit_1575: var1130:int -> var1129:unit -> X
    k_main_u_1525: var1136:int -> var1135:int -> (var1134:unit -> X) -> var1132:unit -> X
    loop_1030: var1140:unit -> (var1139:unit -> X) -> X
  
end AbsTypeInfer.refine(177781)[1] (0.481926 sec.)
DONE!

Prefix of spurious counter-example::
0; 0; 0; 0; 0; 1; 0; 0; 0; 1; 0; 0; 0; 0

Program with abstraction types (CEGAR-cycle 5)::
Main: main_1574
  main_1574 -> (rand_int f_1582)
  br_closeit_1587 b_1588 st_1042 k_closeit_1271 when b_1588 -> (k_closeit_1271 st_1042)
  br_closeit_1587 b_1588 st_1042 k_closeit_1271 when (not b_1588) ->
      (loop_1030 () (f_closeit_1576 st_1042 k_closeit_1271))
  br_readit_1585 b_1586 st_1037 k_readit_1206 when b_1586 -> (k_readit_1206 st_1037)
  br_readit_1585 b_1586 st_1037 k_readit_1206 when (not b_1586) -> (fail_1589 true (f_readit_1575 st_1037))
  close__1043 x_1044 st_1045 k_close__1309 when x_1044 -> (closeit_1041 st_1045 k_close__1309)
  close__1043 x_1044 st_1045 k_close__1309 when (not x_1044) -> (k_close__1309 st_1045)
  closeit_1041 st_1042 k_closeit_1271 when (st_1042 = 1) -> (k_closeit_1271 2)
  closeit_1041 st_1042 k_closeit_1271 when (not (st_1042 = 1)) ->
      (br_closeit_1587 (st_1042 = 3) st_1042 k_closeit_1271)
  f_1046 x_1047 y_1048 st_1049 k_f_1343 -> (close__1043 x_1047 st_1049 (f_f_1577 st_1049 x_1047 y_1048 k_f_1343))
  f_1582 x_1532 -> (rand_int (f_1583 x_1532))
  f_1583 x_1532 x_1545 -> (main_1056 x_1532 x_1545 (f_1584 x_1532 x_1545))
  f_1584 x_1532 x_1545 x_1529 -> end
  f_closeit_1576 st_1042 k_closeit_1271 x_1274 -> (k_closeit_1271 0)
  f_f_1577 st_1049 x_1047 y_1048 k_f_1343 x_1368 ->
      (close__1043 y_1048 x_1368 (f_f_1578 st_1049 x_1047 x_1368 y_1048 k_f_1343))
  f_f_1578 st_1049 x_1047 x_1368 y_1048 k_f_1343 x_1346 ->
      (read__1038 x_1047 st_1049 (f_f_1579 st_1049 x_1047 x_1346 x_1368 y_1048 k_f_1343))
  f_f_1579 st_1049 x_1047 x_1346 x_1368 y_1048 k_f_1343 x_1395 ->
      (read__1038 y_1048 x_1395 (f_f_1580 st_1049 x_1047 x_1346 x_1368 x_1395 y_1048 k_f_1343))
  f_f_1580 st_1049 x_1047 x_1346 x_1368 x_1395 y_1048 k_f_1343 x_1402 -> (f_1046 x_1047 y_1048 x_1402 k_f_1343)
  f_g_1581 b3_1053 st_1055 x_1054 k_g_1440 x_1462 -> (f_1046 x_1054 true x_1462 k_g_1440)
  f_readit_1575 st_1037 x_1209 -> _|_
  fail_1589 b k -> {fail} => (k ())
  g_1052 b3_1053 x_1054 st_1055 k_g_1440 when (b3_1053 > 0) ->
      (next_1050 st_1055 (f_g_1581 b3_1053 st_1055 x_1054 k_g_1440))
  g_1052 b3_1053 x_1054 st_1055 k_g_1440 when (not (b3_1053 > 0)) -> (f_1046 x_1054 false st_1055 k_g_1440)
  k_main_u_1525 b2_1057 b3_1058 k_main_1495 x_1498 -> (k_main_1495 ())
  loop_1030 x_1031 k_loop_1170 -> (loop_1030 () k_loop_1170)
  main_1056 b2_1057 b3_1058 k_main_1495 when (b2_1057 > 0) ->
      (g_1052 b3_1058 true 1 (k_main_u_1525 b2_1057 b3_1058 k_main_1495))
  main_1056 b2_1057 b3_1058 k_main_1495 when (not (b2_1057 > 0)) ->
      (g_1052 b3_1058 false 0 (k_main_u_1525 b2_1057 b3_1058 k_main_1495))
  next_1050 st_1051 k_next_1416 when (st_1051 = 0) -> (k_next_1416 1)
  next_1050 st_1051 k_next_1416 when (not (st_1051 = 0)) -> (k_next_1416 3)
  read__1038 x_1039 st_1040 k_read__1243 when x_1039 -> (readit_1036 st_1040 k_read__1243)
  read__1038 x_1039 st_1040 k_read__1243 when (not x_1039) -> (k_read__1243 st_1040)
  readit_1036 st_1037 k_readit_1206 when (st_1037 = 1) -> (k_readit_1206 1)
  readit_1036 st_1037 k_readit_1206 when (not (st_1037 = 1)) -> (br_readit_1585 (st_1037 = 3) st_1037 k_readit_1206)
Types:
  main_1574 : X
  close__1043 : (x_1:bool[x_1] -> x_2:int[(not x_1); x_2 >= 3] -> (x_4:int[x_2 <= 1; x_4 >= 3] -> X) -> X)
  f_1046 : (x_1:bool[x_1] ->
            x_2:bool[x_2] -> x_3:int[(not x_1) && (not x_2); x_3 = 1; (not x_1); x_3 >= 3] -> (unit -> X) -> X)
  fail_1589 : (x_1:bool[x_1] -> (unit -> X) -> X)
  loop_1030 : (unit -> (unit -> X) -> X)
  read__1038 : (x_1:bool[x_1] -> x_2:int[(not x_1); x_2 = 1] -> (x_4:int[x_2 = x_4] -> X) -> X)
  
(5-1) Abstracting ... DONE!

(5-2) Checking HORS ... DONE!

Error trace::
  main_1574 ... --> 
  f_1582 ... --> 
  f_1583 ... --> 
  main_1056 [1/2] ... --> 
  g_1052 [1/2] ... --> 
  next_1050 [2/2] ... --> 
  f_g_1581 ... --> 
  f_1046 ... --> 
  close__1043 [1/2] ... --> 
  closeit_1041 [2/2] ... --> 
  br_closeit_1587 [1/2] ... --> 
  f_f_1577 ... --> 
  close__1043 [1/2] ... --> 
  closeit_1041 [2/2] ... --> 
  br_closeit_1587 [1/2] ... --> 
  f_f_1578 ... --> 
  read__1038 [1/2] ... --> 
  readit_1036 [2/2] ... --> 
  br_readit_1585 [2/2] ... --> 
  fail_1589 ... --> fail -->
  ERROR!

Spurious counter-example::
  0; 0; 0; 0; 0; 1; 0; 0; 0; 1; 0; 0; 0; 1; 0; 0; 0; 1; 1; 0

(5-3) Checking counter-example ... DONE!

(5-4) Discovering predicates ... 
begin AbsTypeInfer.refine(236269)[1]
  program:
    main_1574  | true = ((Random.int 0) f_1582)
    br_closeit_1587 b_1588 st_1042 k_closeit_1271 | b_1588 = (k_closeit_1271 st_1042)
    br_closeit_1587 b_1588 st_1042 k_closeit_1271 | (not b_1588) = (loop_1030
                                                                    ()
                                                                    (
                                                                    f_closeit_1576 st_1042
                                                                    k_closeit_1271))
    br_readit_1585 b_1586 st_1037 k_readit_1206 | b_1586 = (k_readit_1206 st_1037)
    br_readit_1585 b_1586 st_1037 k_readit_1206 | (not b_1586) = (fail_1589 true
                                                                    (f_readit_1575 st_1037))
    close__1043 x_1044 st_1045 k_close__1309 | x_1044 = (closeit_1041 st_1045
                                                                    k_close__1309)
    close__1043 x_1044 st_1045 k_close__1309 | (not x_1044) = (k_close__1309 st_1045)
    closeit_1041 st_1042 k_closeit_1271 | (st_1042 = 1) = (k_closeit_1271 2)
    closeit_1041 st_1042 k_closeit_1271 | (not (st_1042 = 1)) = (br_closeit_1587 (
                                                                    st_1042 = 3)
                                                                    st_1042
                                                                    k_closeit_1271)
    f_1046 x_1047 y_1048 st_1049 k_f_1343 | true = (close__1043
                                                      x_1047
                                                      st_1049
                                                      (f_f_1577 st_1049
                                                                x_1047
                                                                y_1048
                                                                k_f_1343))
    f_1582 x_1532 | true = ((Random.int 0) (f_1583 x_1532))
    f_1583 x_1532 x_1545 | true = (main_1056 x_1532
                                             x_1545
                                             (f_1584 x_1532
                                                     x_1545))
    f_1584 x_1532 x_1545 x_1529 | true = end
    f_closeit_1576 st_1042 k_closeit_1271 x_1274 | true = (k_closeit_1271 0)
    f_f_1577 st_1049 x_1047 y_1048 k_f_1343 x_1368 | true = (close__1043
                                                               y_1048
                                                               x_1368
                                                               (f_f_1578 st_1049
                                                                    x_1047
                                                                    x_1368
                                                                    y_1048
                                                                    k_f_1343))
    f_f_1578 st_1049 x_1047 x_1368 y_1048 k_f_1343 x_1346 | true = (read__1038
                                                                    x_1047
                                                                    st_1049
                                                                    (
                                                                    f_f_1579
                                                                    st_1049
                                                                    x_1047
                                                                    x_1346
                                                                    x_1368
                                                                    y_1048
                                                                    k_f_1343))
    f_f_1579 st_1049 x_1047 x_1346 x_1368 y_1048 k_f_1343 x_1395 | true = (
    read__1038 y_1048
               x_1395
               (f_f_1580 st_1049
                         x_1047
                         x_1346
                         x_1368
                         x_1395
                         y_1048
                         k_f_1343))
    f_f_1580 st_1049 x_1047 x_1346 x_1368 x_1395 y_1048 k_f_1343 x_1402 | true = (
    f_1046 x_1047
           y_1048
           x_1402
           k_f_1343)
    f_g_1581 b3_1053 st_1055 x_1054 k_g_1440 x_1462 | true = (f_1046 x_1054
                                                                    true
                                                                    x_1462
                                                                    k_g_1440)
    f_readit_1575 st_1037 x_1209 | true = bot
    fail_1589 b k | true = (fail ())
    g_1052 b3_1053 x_1054 st_1055 k_g_1440 | (b3_1053 > 0) = (next_1050
                                                                st_1055
                                                                (f_g_1581 b3_1053
                                                                    st_1055
                                                                    x_1054
                                                                    k_g_1440))
    g_1052 b3_1053 x_1054 st_1055 k_g_1440 | (not (b3_1053 > 0)) = (f_1046 x_1054
                                                                    false
                                                                    st_1055
                                                                    k_g_1440)
    k_main_u_1525 b2_1057 b3_1058 k_main_1495 x_1498 | true = (k_main_1495 ())
    loop_1030 x_1031 k_loop_1170 | true = (loop_1030 ()
                                                     k_loop_1170)
    main_1056 b2_1057 b3_1058 k_main_1495 | (b2_1057 > 0) = (g_1052
                                                               b3_1058
                                                               true
                                                               1
                                                               (k_main_u_1525 b2_1057
                                                                    b3_1058
                                                                    k_main_1495))
    main_1056 b2_1057 b3_1058 k_main_1495 | (not (b2_1057 > 0)) = (g_1052
                                                                    b3_1058
                                                                    false
                                                                    0
                                                                    (
                                                                    k_main_u_1525 b2_1057
                                                                    b3_1058
                                                                    k_main_1495))
    next_1050 st_1051 k_next_1416 | (st_1051 = 0) = (k_next_1416 1)
    next_1050 st_1051 k_next_1416 | (not (st_1051 = 0)) = (k_next_1416 3)
    read__1038 x_1039 st_1040 k_read__1243 | x_1039 = (readit_1036 st_1040
                                                                   k_read__1243)
    read__1038 x_1039 st_1040 k_read__1243 | (not x_1039) = (k_read__1243 st_1040)
    readit_1036 st_1037 k_readit_1206 | (st_1037 = 1) = (k_readit_1206 1)
    readit_1036 st_1037 k_readit_1206 | (not (st_1037 = 1)) = (br_readit_1585 (
                                                                    st_1037 = 3)
                                                                    st_1037
                                                                    k_readit_1206)
    main_1574:X
    br_closeit_1587:bool -> int -> (int -> X) -> X
    br_readit_1585:bool -> int -> (int -> X) -> X
    close__1043:bool -> int -> (int -> X) -> X
    closeit_1041:int -> (int -> X) -> X
    f_1046:bool -> bool -> int -> (unit -> X) -> X
    f_1582:int -> X
    f_1583:int -> int -> X
    f_1584:int -> int -> unit -> X
    f_closeit_1576:int -> (int -> X) -> unit -> X
    f_f_1577:int -> bool -> bool -> (unit -> X) -> int -> X
    f_f_1578:int -> bool -> int -> bool -> (unit -> X) -> int -> X
    f_f_1579:int -> bool -> int -> int -> bool -> (unit -> X) -> int -> X
    f_f_1580:int -> bool -> int -> int -> int -> bool -> (unit -> X) -> int -> X
    f_g_1581:int -> int -> bool -> (unit -> X) -> int -> X
    f_readit_1575:int -> unit -> X
    fail_1589:bool -> (unit -> X) -> X
    g_1052:int -> bool -> int -> (unit -> X) -> X
    k_main_u_1525:int -> int -> (unit -> X) -> unit -> X
    loop_1030:unit -> (unit -> X) -> X
    main_1056:int -> int -> (unit -> X) -> X
    next_1050:int -> (int -> X) -> X
    read__1038:bool -> int -> (int -> X) -> X
    readit_1036:int -> (int -> X) -> X
  inlined functions: br_closeit_1587,br_readit_1585,closeit_1041,f_1582,f_1583,f_1584,f_closeit_1576,f_f_1577,f_f_1578,f_f_1579,f_f_1580,f_g_1581,f_readit_1575,g_1052,k_main_u_1525,main_1056,next_1050,readit_1036
  counterexample: 0:0:0:0:0:1:0:0:0:1:0:0:0:1:0:0:0:1:1:0
  error traces:
    [true.nop(<f_1582@320:0> = var1159)
     [true.nop((<f_1583@323:0> = <f_1582@320:0>) && (<f_1583@323:1> = var1160))
      [true.((<main_1056@325:0> = <f_1583@323:0>) && (<main_1056@325:1> = <f_1583@323:1>))
       [(<main_1056@325:0> > 0).
        ((<g_1052@328:0> = <main_1056@325:1>) && ((<g_1052@328:1> = true) && (<g_1052@328:2> = 1)))
        [(<g_1052@328:0> > 0).(<next_1050@331:0> = <g_1052@328:2>)
         [(not (<next_1050@331:0> = 0)).(<<next_1050@331:1>@334:0> = 3)
          [true.
           ((<f_g_1581@336:0> = <g_1052@328:0>) &&
            ((<f_g_1581@336:1> = <g_1052@328:2>) &&
             ((<f_g_1581@336:2> = <g_1052@328:1>) && (<f_g_1581@336:4> = <<next_1050@331:1>@334:0>))))
           [true.
            ((<f_1046@338:0> = <f_g_1581@336:2>) && ((<f_1046@338:1> = true) && (<f_1046@338:2> = <f_g_1581@336:4>)))
            [true.((<close__1043@340:0> = <f_1046@338:0>) && (<close__1043@340:1> = <f_1046@338:2>))
             [<close__1043@340:0>.(<closeit_1041@343:0> = <close__1043@340:1>)
              [(not (<closeit_1041@343:0> = 1)).
               ((<br_closeit_1587@346:0> = (<closeit_1041@343:0> = 3)) &&
                (<br_closeit_1587@346:1> = <closeit_1041@343:0>))
               [<br_closeit_1587@346:0>.(<<br_closeit_1587@346:2>@349:0> = <br_closeit_1587@346:1>)
                [true.(<<closeit_1041@343:1>@351:0> = <<br_closeit_1587@346:2>@349:0>)
                 [true.(<<close__1043@340:2>@353:0> = <<closeit_1041@343:1>@351:0>)
                  [true.
                   ((<f_f_1577@355:0> = <f_1046@338:2>) &&
                    ((<f_f_1577@355:1> = <f_1046@338:0>) &&
                     ((<f_f_1577@355:2> = <f_1046@338:1>) && (<f_f_1577@355:4> = <<close__1043@340:2>@353:0>))))
                   [true.((<close__1043@357:0> = <f_f_1577@355:2>) && (<close__1043@357:1> = <f_f_1577@355:4>))
                    [<close__1043@357:0>.(<closeit_1041@360:0> = <close__1043@357:1>)
                     [(not (<closeit_1041@360:0> = 1)).
                      ((<br_closeit_1587@363:0> = (<closeit_1041@360:0> = 3)) &&
                       (<br_closeit_1587@363:1> = <closeit_1041@360:0>))
                      [<br_closeit_1587@363:0>.(<<br_closeit_1587@363:2>@366:0> = <br_closeit_1587@363:1>)
                       [true.(<<closeit_1041@360:1>@368:0> = <<br_closeit_1587@363:2>@366:0>)
                        [true.(<<close__1043@357:2>@370:0> = <<closeit_1041@360:1>@368:0>)
                         [true.
                          ((<f_f_1578@372:0> = <f_f_1577@355:0>) &&
                           ((<f_f_1578@372:1> = <f_f_1577@355:1>) &&
                            ((<f_f_1578@372:2> = <f_f_1577@355:4>) &&
                             ((<f_f_1578@372:3> = <f_f_1577@355:2>) && (<f_f_1578@372:5> = <<close__1043@357:2>@370:0>)))))
                          [true.((<read__1038@374:0> = <f_f_1578@372:1>) && (<read__1038@374:1> = <f_f_1578@372:0>))
                           [<read__1038@374:0>.(<readit_1036@377:0> = <read__1038@374:1>)
                            [(not (<readit_1036@377:0> = 1)).
                             ((<br_readit_1585@380:0> = (<readit_1036@377:0> = 3)) &&
                              (<br_readit_1585@380:1> = <readit_1036@377:0>))
                             [(not <br_readit_1585@380:0>).(<fail_1589@383:0> = true)[true.error
  begin RefTypeInfer.infer_etrs(236270)[2]
    horn clauses:
      P[<fail_1589@383:0>](<fail_1589@383:0>:bool)|- bot
      
      P[<br_readit_1585@380:1>](false:bool,<br_readit_1585@380:1>:int), <fail_1589@383:0>
      |- P[<fail_1589@383:0>](<fail_1589@383:0>:bool)
      
      P[<readit_1036@377:0>](<br_readit_1585@380:1>:int),
      ((<br_readit_1585@380:1> <> 1) && (<br_readit_1585@380:0> = (<br_readit_1585@380:1> = 3)))
      |- P[<br_readit_1585@380:1>](<br_readit_1585@380:0>:bool,<br_readit_1585@380:1>:int)
      
      P[<read__1038@374:1>](true:bool,<readit_1036@377:0>:int)|- P[<readit_1036@377:0>](<readit_1036@377:0>:int)
      
      P[<f_f_1578@372:5>](<read__1038@374:1>:int,<read__1038@374:0>:bool,<f_f_1578@372:2>:int,<f_f_1578@372:3>:bool,<f_f_1578@372:5>:int)|- P[<read__1038@374:1>](
      <read__1038@374:0>:bool,<read__1038@374:1>:int)
      
      P[<f_f_1577@355:4>](<f_f_1578@372:0>:int,<f_f_1578@372:1>:bool,<f_f_1578@372:3>:bool,<f_f_1578@372:2>:int),
      P[<<close__1043@357:2>@370:0>](<f_f_1578@372:3>:bool,<f_f_1578@372:2>:int,<f_f_1578@372:5>:int)|- P[<f_f_1578@372:5>](
      <f_f_1578@372:0>:int,<f_f_1578@372:1>:bool,<f_f_1578@372:2>:int,
      <f_f_1578@372:3>:bool,<f_f_1578@372:5>:int)
      
      P[<close__1043@357:1>](<close__1043@357:0>:bool,<close__1043@357:1>:int),
      P[<<closeit_1041@360:1>@368:0>](<close__1043@357:1>:int,<<close__1043@357:2>@370:0>:int), <close__1043@357:0>
      |- P[<<close__1043@357:2>@370:0>](<close__1043@357:0>:bool,<close__1043@357:1>:int,
                                        <<close__1043@357:2>@370:0>:int)
      
      P[<closeit_1041@360:0>](<closeit_1041@360:0>:int),
      P[<<br_closeit_1587@363:2>@366:0>]((<closeit_1041@360:0> = 3):bool,<closeit_1041@360:0>:int,<<closeit_1041@360:1>@368:0>:int),
      (<closeit_1041@360:0> <> 1)
      |- P[<<closeit_1041@360:1>@368:0>](<closeit_1041@360:0>:int,<<closeit_1041@360:1>@368:0>:int)
      
      P[<br_closeit_1587@363:1>](<br_closeit_1587@363:0>:bool,<br_closeit_1587@363:1>:int),
      ((<<br_closeit_1587@363:2>@366:0> = <br_closeit_1587@363:1>) && <br_closeit_1587@363:0>)
      |- P[<<br_closeit_1587@363:2>@366:0>](<br_closeit_1587@363:0>:bool,
                                            <br_closeit_1587@363:1>:int,
                                            <<br_closeit_1587@363:2>@366:0>:int)
      
      P[<closeit_1041@360:0>](<br_closeit_1587@363:1>:int),
      ((<br_closeit_1587@363:1> <> 1) && (<br_closeit_1587@363:0> = (<br_closeit_1587@363:1> = 3)))
      |- P[<br_closeit_1587@363:1>](<br_closeit_1587@363:0>:bool,<br_closeit_1587@363:1>:int)
      
      P[<close__1043@357:1>](true:bool,<closeit_1041@360:0>:int)|- P[<closeit_1041@360:0>](<closeit_1041@360:0>:int)
      
      P[<f_f_1577@355:4>](<f_f_1577@355:0>:int,<f_f_1577@355:1>:bool,<close__1043@357:0>:bool,<close__1043@357:1>:int)|- P[<close__1043@357:1>](
      <close__1043@357:0>:bool,<close__1043@357:1>:int)
      
      P[<f_1046@338:2>](<f_f_1577@355:1>:bool,<f_f_1577@355:2>:bool,<f_f_1577@355:0>:int),
      P[<<close__1043@340:2>@353:0>](<f_f_1577@355:1>:bool,<f_f_1577@355:0>:int,<f_f_1577@355:4>:int)|- P[<f_f_1577@355:4>](
      <f_f_1577@355:0>:int,<f_f_1577@355:1>:bool,<f_f_1577@355:2>:bool,
      <f_f_1577@355:4>:int)
      
      P[<close__1043@340:1>](<close__1043@340:0>:bool,<close__1043@340:1>:int),
      P[<<closeit_1041@343:1>@351:0>](<close__1043@340:1>:int,<<close__1043@340:2>@353:0>:int), <close__1043@340:0>
      |- P[<<close__1043@340:2>@353:0>](<close__1043@340:0>:bool,<close__1043@340:1>:int,
                                        <<close__1043@340:2>@353:0>:int)
      
      P[<closeit_1041@343:0>](<closeit_1041@343:0>:int),
      P[<<br_closeit_1587@346:2>@349:0>]((<closeit_1041@343:0> = 3):bool,<closeit_1041@343:0>:int,<<closeit_1041@343:1>@351:0>:int),
      (<closeit_1041@343:0> <> 1)
      |- P[<<closeit_1041@343:1>@351:0>](<closeit_1041@343:0>:int,<<closeit_1041@343:1>@351:0>:int)
      
      P[<br_closeit_1587@346:1>](<br_closeit_1587@346:0>:bool,<br_closeit_1587@346:1>:int),
      ((<<br_closeit_1587@346:2>@349:0> = <br_closeit_1587@346:1>) && <br_closeit_1587@346:0>)
      |- P[<<br_closeit_1587@346:2>@349:0>](<br_closeit_1587@346:0>:bool,
                                            <br_closeit_1587@346:1>:int,
                                            <<br_closeit_1587@346:2>@349:0>:int)
      
      P[<closeit_1041@343:0>](<br_closeit_1587@346:1>:int),
      ((<br_closeit_1587@346:1> <> 1) && (<br_closeit_1587@346:0> = (<br_closeit_1587@346:1> = 3)))
      |- P[<br_closeit_1587@346:1>](<br_closeit_1587@346:0>:bool,<br_closeit_1587@346:1>:int)
      
      P[<close__1043@340:1>](true:bool,<closeit_1041@343:0>:int)|- P[<closeit_1041@343:0>](<closeit_1041@343:0>:int)
      
      P[<f_1046@338:2>](<close__1043@340:0>:bool,<f_1046@338:1>:bool,<close__1043@340:1>:int)|- P[<close__1043@340:1>](
      <close__1043@340:0>:bool,<close__1043@340:1>:int)
      
      P[<f_g_1581@336:4>](<f_g_1581@336:0>:int,<f_g_1581@336:1>:int,<f_1046@338:0>:bool,<f_1046@338:2>:int),
      <f_1046@338:1> |- P[<f_1046@338:2>](<f_1046@338:0>:bool,<f_1046@338:1>:bool,
                                          <f_1046@338:2>:int)
      
      P[<g_1052@328:2>](<f_g_1581@336:0>:int,<f_g_1581@336:2>:bool,<f_g_1581@336:1>:int),
      P[<<next_1050@331:1>@334:0>](<f_g_1581@336:1>:int,<f_g_1581@336:4>:int), (
      <f_g_1581@336:0> > 0)
      |- P[<f_g_1581@336:4>](<f_g_1581@336:0>:int,<f_g_1581@336:1>:int,
                             <f_g_1581@336:2>:bool,<f_g_1581@336:4>:int)
      
      P[<next_1050@331:0>](<next_1050@331:0>:int), ((<<next_1050@331:1>@334:0> = 3) && (<next_1050@331:0> <> 0))
      |- P[<<next_1050@331:1>@334:0>](<next_1050@331:0>:int,<<next_1050@331:1>@334:0>:int)
      
      P[<g_1052@328:2>](<g_1052@328:0>:int,<g_1052@328:1>:bool,<next_1050@331:0>:int), (
      <g_1052@328:0> > 0) |- P[<next_1050@331:0>](<next_1050@331:0>:int)
      
      P[<main_1056@325:1>](<main_1056@325:0>:int,<g_1052@328:0>:int),
      ((<g_1052@328:2> = 1) && ((<main_1056@325:0> > 0) && <g_1052@328:1>))
      |- P[<g_1052@328:2>](<g_1052@328:0>:int,<g_1052@328:1>:bool,<g_1052@328:2>:int)
      
      P[<f_1583@323:1>](<main_1056@325:0>:int,<main_1056@325:1>:int)|- P[<main_1056@325:1>](
      <main_1056@325:0>:int,<main_1056@325:1>:int)
      
      P[<f_1582@320:0>](<f_1583@323:0>:int)|- P[<f_1583@323:1>](<f_1583@323:0>:int,
                                                                <f_1583@323:1>:int)
      
      |- P[<f_1582@320:0>](<f_1582@320:0>:int)
    call trees:
      <main_1574@317>
        <f_1582@320>
          <f_1583@323>
            <main_1056@325>
              <g_1052@328>
                <next_1050@331>
                </<next_1050@331:1>@334>
                <f_g_1581@336>
                  <f_1046@338>
                    <close__1043@340>
                      <closeit_1041@343>
                        <br_closeit_1587@346>
                        </<br_closeit_1587@346:2>@349>
                      </<closeit_1041@343:1>@351>
                    </<close__1043@340:2>@353>
                    <f_f_1577@355>
                      <close__1043@357>
                        <closeit_1041@360>
                          <br_closeit_1587@363>
                          </<br_closeit_1587@363:2>@366>
                        </<closeit_1041@360:1>@368>
                      </<close__1043@357:2>@370>
                      <f_f_1578@372>
                        <read__1038@374>
                          <readit_1036@377>
                            <br_readit_1585@380>
                              <fail_1589@383>
    inlined horn clauses:
      P[<fail_1589@383:0>](<fail_1589@383:0>:bool)|- bot
      
      P[<read__1038@374:1>](true:bool,<br_readit_1585@380:1>:int),
      ((<br_readit_1585@380:1> <> 1) && ((<br_readit_1585@380:1> <> 3) && <fail_1589@383:0>))
      |- P[<fail_1589@383:0>](<fail_1589@383:0>:bool)
      
      P[<f_1046@338:2>](<read__1038@374:0>:bool,<f_f_1578@372:3>:bool,<read__1038@374:1>:int),
      P[<<close__1043@340:2>@353:0>](<read__1038@374:0>:bool,<read__1038@374:1>:int,<f_f_1578@372:2>:int),
      P[<<close__1043@357:2>@370:0>](<f_f_1578@372:3>:bool,<f_f_1578@372:2>:int,<f_f_1578@372:5>:int)|- P[<read__1038@374:1>](
      <read__1038@374:0>:bool,<read__1038@374:1>:int)
      
      P[<close__1043@357:1>](<close__1043@357:0>:bool,<close__1043@357:1>:int),
      ((<close__1043@357:1> = 3) && ((<<close__1043@357:2>@370:0> = <close__1043@357:1>) && <close__1043@357:0>))
      |- P[<<close__1043@357:2>@370:0>](<close__1043@357:0>:bool,<close__1043@357:1>:int,
                                        <<close__1043@357:2>@370:0>:int)
      
      P[<f_1046@338:2>](<f_f_1577@355:1>:bool,<close__1043@357:0>:bool,<f_f_1577@355:0>:int),
      P[<<close__1043@340:2>@353:0>](<f_f_1577@355:1>:bool,<f_f_1577@355:0>:int,<close__1043@357:1>:int)|- P[<close__1043@357:1>](
      <close__1043@357:0>:bool,<close__1043@357:1>:int)
      
      P[<close__1043@340:1>](<close__1043@340:0>:bool,<close__1043@340:1>:int),
      ((<close__1043@340:1> = 3) && ((<<close__1043@340:2>@353:0> = <close__1043@340:1>) && <close__1043@340:0>))
      |- P[<<close__1043@340:2>@353:0>](<close__1043@340:0>:bool,<close__1043@340:1>:int,
                                        <<close__1043@340:2>@353:0>:int)
      
      P[<f_1046@338:2>](<close__1043@340:0>:bool,<f_1046@338:1>:bool,<close__1043@340:1>:int)|- P[<close__1043@340:1>](
      <close__1043@340:0>:bool,<close__1043@340:1>:int)
      
       ((<f_1046@338:2> = 3) && (<f_1046@338:0> && <f_1046@338:1>))
      |- P[<f_1046@338:2>](<f_1046@338:0>:bool,<f_1046@338:1>:bool,<f_1046@338:2>:int)
    begin ParamSubstInfer.infer(240924)[3]
      
    end ParamSubstInfer.infer(240924)[3] (0.237964 sec.)
    inferred extra parameters:
      
    begin RefTypeInfer.elim_coeffs(240926)[3]
      
    end RefTypeInfer.elim_coeffs(240926)[3] (0.000000 sec.)
    begin GenHcSolver.solve(241441)[3]
      Horn clauses:
        P[<fail_1589@383:0>](<fail_1589@383:0>:bool)|- bot
        
        P[<read__1038@374:1>](true:bool,<br_readit_1585@380:1>:int),
        ((<br_readit_1585@380:1> <> 1) && ((<br_readit_1585@380:1> <> 3) && <fail_1589@383:0>))
        |- P[<fail_1589@383:0>](<fail_1589@383:0>:bool)
        
        P[<f_1046@338:2>](<read__1038@374:0>:bool,<f_f_1578@372:3>:bool,<read__1038@374:1>:int),
        P[<<close__1043@340:2>@353:0>](<read__1038@374:0>:bool,<read__1038@374:1>:int,<f_f_1578@372:2>:int),
        P[<<close__1043@357:2>@370:0>](<f_f_1578@372:3>:bool,<f_f_1578@372:2>:int,<f_f_1578@372:5>:int)|- P[<read__1038@374:1>](
        <read__1038@374:0>:bool,<read__1038@374:1>:int)
        
        P[<close__1043@357:1>](<close__1043@357:0>:bool,<close__1043@357:1>:int),
        ((<close__1043@357:1> = 3) && ((<<close__1043@357:2>@370:0> = <close__1043@357:1>) && <close__1043@357:0>))
        |- P[<<close__1043@357:2>@370:0>](<close__1043@357:0>:bool,<close__1043@357:1>:int,
                                          <<close__1043@357:2>@370:0>:int)
        
        P[<f_1046@338:2>](<f_f_1577@355:1>:bool,<close__1043@357:0>:bool,<f_f_1577@355:0>:int),
        P[<<close__1043@340:2>@353:0>](<f_f_1577@355:1>:bool,<f_f_1577@355:0>:int,<close__1043@357:1>:int)|- P[<close__1043@357:1>](
        <close__1043@357:0>:bool,<close__1043@357:1>:int)
        
        P[<close__1043@340:1>](<close__1043@340:0>:bool,<close__1043@340:1>:int),
        ((<close__1043@340:1> = 3) && ((<<close__1043@340:2>@353:0> = <close__1043@340:1>) && <close__1043@340:0>))
        |- P[<<close__1043@340:2>@353:0>](<close__1043@340:0>:bool,<close__1043@340:1>:int,
                                          <<close__1043@340:2>@353:0>:int)
        
        P[<f_1046@338:2>](<close__1043@340:0>:bool,<f_1046@338:1>:bool,<close__1043@340:1>:int)|- P[<close__1043@340:1>](
        <close__1043@340:0>:bool,<close__1043@340:1>:int)
        
         ((<f_1046@338:2> = 3) && (<f_1046@338:0> && <f_1046@338:1>))
        |- P[<f_1046@338:2>](<f_1046@338:0>:bool,<f_1046@338:1>:bool,
                             <f_1046@338:2>:int)
      lower bounds:
        P[<f_1046@338:2>](<f_1046@338:0>:bool,<f_1046@338:1>:bool,<f_1046@338:2>:int) =
        ((<f_1046@338:2> = 3) && (<f_1046@338:0> && <f_1046@338:1>))
        P[<close__1043@340:1>](<close__1043@340:0>:bool,<close__1043@340:1>:int) =
        ((<close__1043@340:1> = 3) && <close__1043@340:0>)
        P[<<close__1043@340:2>@353:0>](<close__1043@340:0>:bool,<close__1043@340:1>:int,<<close__1043@340:2>@353:0>:int) =
        ((<close__1043@340:1> = 3) && ((<<close__1043@340:2>@353:0> = <close__1043@340:1>) && <close__1043@340:0>))
        P[<close__1043@357:1>](<close__1043@357:0>:bool,<close__1043@357:1>:int) =
        ((<close__1043@357:1> = 3) && <close__1043@357:0>)
        P[<<close__1043@357:2>@370:0>](<close__1043@357:0>:bool,<close__1043@357:1>:int,<<close__1043@357:2>@370:0>:int) =
        ((<close__1043@357:1> = 3) && ((<<close__1043@357:2>@370:0> = <close__1043@357:1>) && <close__1043@357:0>))
        P[<read__1038@374:1>](<read__1038@374:0>:bool,<read__1038@374:1>:int) =
        ((<read__1038@374:1> = 3) && <read__1038@374:0>)
        P[<fail_1589@383:0>](<fail_1589@383:0>:bool) = false
      upper bounds:
        P[<<close__1043@357:2>@370:0>](var1168:bool,var1169:int,var1170:int) = true
        P[<<close__1043@340:2>@353:0>](var1162:bool,var1163:int,var1164:int) = true
      begin GenHcSolver.classify_pids(246521)[4]
        output:
          [<<close__1043@340:2>@353:0>;<<close__1043@357:2>@370:0>]
      end GenHcSolver.classify_pids(246521)[4] (0.000000 sec.)
      begin ApronInterface.convex_hull_interpolate(246532)[4]
        lb:((<close__1043@340:1> = 3) && ((<<close__1043@340:2>@353:0> = <close__1043@340:1>) && <close__1043@340:0>))
        nub:false
        lb':((<close__1043@340:1> = 3) && ((<<close__1043@340:2>@353:0> = <close__1043@340:1>) && <close__1043@340:0>))
        nub':false
        begin InterpProver.interpolate(246533)[5]
          begin InterpProver.interpolate_fresh(246534)[6]
            begin InterpProver.interpolate_log(246535)[7]
              input1: ((<close__1043@340:1> = 3) &&
                       ((<<close__1043@340:2>@353:0> = <close__1043@340:1>) && <close__1043@340:0>))
              input2: false
              begin InterpProver.interpolate_check(246536)[8]
                begin InterpProver.interpolate_simplify(246537)[9]
                  begin InterpProver.interpolate_quick(246580)[10]
                    
                  end InterpProver.interpolate_quick(246580)[10] (0.000000 sec.)
                  
                end InterpProver.interpolate_simplify(246537)[9] (0.000000 sec.)
                
              end InterpProver.interpolate_check(246536)[8] (0.000000 sec.)
              output: true
            end InterpProver.interpolate_log(246535)[7] (0.000000 sec.)
            
          end InterpProver.interpolate_fresh(246534)[6] (0.000000 sec.)
          
        end InterpProver.interpolate(246533)[5] (0.000000 sec.)
        output:
          P[<<close__1043@340:2>@353:0>](<close__1043@340:0>:bool,<close__1043@340:1>:int,<<close__1043@340:2>@353:0>:int) =
          true
          P[<<close__1043@357:2>@370:0>](<close__1043@340:0>:bool,<close__1043@340:1>:int,<<close__1043@340:2>@353:0>:int) =
          true
      end ApronInterface.convex_hull_interpolate(246532)[4] (0.001000 sec.)
      Horn clauses:
        P[<fail_1589@383:0>](<fail_1589@383:0>:bool)|- bot
        
        P[<read__1038@374:1>](true:bool,<br_readit_1585@380:1>:int),
        ((<br_readit_1585@380:1> <> 1) && ((<br_readit_1585@380:1> <> 3) && <fail_1589@383:0>))
        |- P[<fail_1589@383:0>](<fail_1589@383:0>:bool)
        
        P[<f_1046@338:2>](<read__1038@374:0>:bool,<f_f_1578@372:3>:bool,<read__1038@374:1>:int)|- P[<read__1038@374:1>](
        <read__1038@374:0>:bool,<read__1038@374:1>:int)
        
        P[<f_1046@338:2>](<f_f_1577@355:1>:bool,<close__1043@357:0>:bool,<f_f_1577@355:0>:int)|- P[<close__1043@357:1>](
        <close__1043@357:0>:bool,<close__1043@357:1>:int)
        
        P[<f_1046@338:2>](<close__1043@340:0>:bool,<f_1046@338:1>:bool,<close__1043@340:1>:int)|- P[<close__1043@340:1>](
        <close__1043@340:0>:bool,<close__1043@340:1>:int)
        
         ((<f_1046@338:2> = 3) && (<f_1046@338:0> && <f_1046@338:1>))
        |- P[<f_1046@338:2>](<f_1046@338:0>:bool,<f_1046@338:1>:bool,
                             <f_1046@338:2>:int)
      lower bounds:
        P[<f_1046@338:2>](<f_1046@338:0>:bool,<f_1046@338:1>:bool,<f_1046@338:2>:int) =
        ((<f_1046@338:2> = 3) && (<f_1046@338:0> && <f_1046@338:1>))
        P[<read__1038@374:1>](<read__1038@374:0>:bool,<read__1038@374:1>:int) =
        ((<read__1038@374:1> = 3) && <read__1038@374:0>)
        P[<close__1043@357:1>](<close__1043@357:0>:bool,<close__1043@357:1>:int) = <close__1043@357:0>
        P[<close__1043@340:1>](<close__1043@340:0>:bool,<close__1043@340:1>:int) =
        ((<close__1043@340:1> = 3) && <close__1043@340:0>)
        P[<fail_1589@383:0>](<fail_1589@383:0>:bool) = false
      upper bounds:
        P[<close__1043@357:1>](var1173:bool,var1174:int) = true
        P[<close__1043@340:1>](var1171:bool,var1172:int) = true
      begin GenHcSolver.classify_pids(251287)[4]
        output:
          [<close__1043@340:1>;<close__1043@357:1>]
      end GenHcSolver.classify_pids(251287)[4] (0.000000 sec.)
      begin ApronInterface.convex_hull_interpolate(251298)[4]
        lb:(((<close__1043@340:1> = 3) && <close__1043@340:0>) || <close__1043@340:0>)
        nub:false
        lb':(((<close__1043@340:1> = 3) && <close__1043@340:0>) || <close__1043@340:0>)
        nub':false
        begin InterpProver.interpolate(251299)[5]
          begin InterpProver.interpolate_fresh(251300)[6]
            begin InterpProver.interpolate_log(251301)[7]
              input1: (((<close__1043@340:1> = 3) && <close__1043@340:0>) || <close__1043@340:0>)
              input2: false
              begin InterpProver.interpolate_check(251302)[8]
                begin InterpProver.interpolate_simplify(251303)[9]
                  begin InterpProver.interpolate_quick(251333)[10]
                    
                  end InterpProver.interpolate_quick(251333)[10] (0.000000 sec.)
                  
                end InterpProver.interpolate_simplify(251303)[9] (0.000000 sec.)
                
              end InterpProver.interpolate_check(251302)[8] (0.000000 sec.)
              output: true
            end InterpProver.interpolate_log(251301)[7] (0.000000 sec.)
            
          end InterpProver.interpolate_fresh(251300)[6] (0.000000 sec.)
          
        end InterpProver.interpolate(251299)[5] (0.000000 sec.)
        output:
          P[<close__1043@340:1>](<close__1043@340:0>:bool,<close__1043@340:1>:int) = true
          P[<close__1043@357:1>](<close__1043@340:0>:bool,<close__1043@340:1>:int) = true
      end ApronInterface.convex_hull_interpolate(251298)[4] (0.000000 sec.)
      Horn clauses:
        P[<fail_1589@383:0>](<fail_1589@383:0>:bool)|- bot
        
        P[<read__1038@374:1>](true:bool,<br_readit_1585@380:1>:int),
        ((<br_readit_1585@380:1> <> 1) && ((<br_readit_1585@380:1> <> 3) && <fail_1589@383:0>))
        |- P[<fail_1589@383:0>](<fail_1589@383:0>:bool)
        
        P[<f_1046@338:2>](<read__1038@374:0>:bool,<f_f_1578@372:3>:bool,<read__1038@374:1>:int)|- P[<read__1038@374:1>](
        <read__1038@374:0>:bool,<read__1038@374:1>:int)
        
         ((<f_1046@338:2> = 3) && (<f_1046@338:0> && <f_1046@338:1>))
        |- P[<f_1046@338:2>](<f_1046@338:0>:bool,<f_1046@338:1>:bool,
                             <f_1046@338:2>:int)
      lower bounds:
        P[<f_1046@338:2>](<f_1046@338:0>:bool,<f_1046@338:1>:bool,<f_1046@338:2>:int) =
        ((<f_1046@338:2> = 3) && (<f_1046@338:0> && <f_1046@338:1>))
        P[<read__1038@374:1>](<read__1038@374:0>:bool,<read__1038@374:1>:int) =
        ((<read__1038@374:1> = 3) && <read__1038@374:0>)
        P[<fail_1589@383:0>](<fail_1589@383:0>:bool) = false
      upper bounds:
        P[<fail_1589@383:0>](var1176:bool) = true
      begin GenHcSolver.classify_pids(253614)[4]
        output:
          [<fail_1589@383:0>]
      end GenHcSolver.classify_pids(253614)[4] (0.000000 sec.)
      lb:false
      nub:false
      begin ApronInterface.convex_hull_interpolate(253617)[4]
        lb:false
        nub:false
        lb':false
        nub':false
        begin InterpProver.interpolate(253618)[5]
          begin InterpProver.interpolate_fresh(253619)[6]
            begin InterpProver.interpolate_log(253620)[7]
              input1: false
              input2: false
              begin InterpProver.interpolate_check(253621)[8]
                begin InterpProver.interpolate_simplify(253622)[9]
                  begin InterpProver.interpolate_quick(253635)[10]
                    
                  end InterpProver.interpolate_quick(253635)[10] (0.000000 sec.)
                  begin minimizing # of disjunctions(253639)[10]
                    input: false
                    output: false
                  end minimizing # of disjunctions(253639)[10] (0.000000 sec.)
                  
                end InterpProver.interpolate_simplify(253622)[9] (0.000000 sec.)
                
              end InterpProver.interpolate_check(253621)[8] (0.000000 sec.)
              output: false
            end InterpProver.interpolate_log(253620)[7] (0.000000 sec.)
            
          end InterpProver.interpolate_fresh(253619)[6] (0.000000 sec.)
          
        end InterpProver.interpolate(253618)[5] (0.000000 sec.)
        output:
          P[<fail_1589@383:0>](<fail_1589@383:0>:bool) = false
      end ApronInterface.convex_hull_interpolate(253617)[4] (0.000000 sec.)
      Horn clauses:
        P[<read__1038@374:1>](true:bool,<br_readit_1585@380:1>:int),
        ((<br_readit_1585@380:1> <> 1) && (<br_readit_1585@380:1> <> 3)) |- bot
        
        P[<f_1046@338:2>](<read__1038@374:0>:bool,<f_f_1578@372:3>:bool,<read__1038@374:1>:int)|- P[<read__1038@374:1>](
        <read__1038@374:0>:bool,<read__1038@374:1>:int)
        
         ((<f_1046@338:2> = 3) && (<f_1046@338:0> && <f_1046@338:1>))
        |- P[<f_1046@338:2>](<f_1046@338:0>:bool,<f_1046@338:1>:bool,
                             <f_1046@338:2>:int)
      lower bounds:
        P[<f_1046@338:2>](<f_1046@338:0>:bool,<f_1046@338:1>:bool,<f_1046@338:2>:int) =
        ((<f_1046@338:2> = 3) && (<f_1046@338:0> && <f_1046@338:1>))
        P[<read__1038@374:1>](<read__1038@374:0>:bool,<read__1038@374:1>:int) =
        ((<read__1038@374:1> = 3) && <read__1038@374:0>)
      upper bounds:
        P[<read__1038@374:1>](var1177:bool,var1178:int) = ((var1178 = 1) || ((var1178 = 3) || (not var1177)))
      begin GenHcSolver.classify_pids(255329)[4]
        output:
          [<read__1038@374:1>]
      end GenHcSolver.classify_pids(255329)[4] (0.000000 sec.)
      lb:((<read__1038@374:1> = 3) && <read__1038@374:0>)
      nub:(not ((<read__1038@374:1> = 1) || ((<read__1038@374:1> = 3) || (not <read__1038@374:0>))))
      begin ApronInterface.convex_hull_interpolate(255332)[4]
        lb:((<read__1038@374:1> = 3) && <read__1038@374:0>)
        nub:(not ((<read__1038@374:1> = 1) || ((<read__1038@374:1> = 3) || (not <read__1038@374:0>))))
        lb':((<read__1038@374:1> = 3) && <read__1038@374:0>)
        nub':(not ((<read__1038@374:1> = 1) || ((<read__1038@374:1> = 3) || (not <read__1038@374:0>))))
        begin InterpProver.interpolate(255333)[5]
          begin InterpProver.interpolate_fresh(255334)[6]
            begin InterpProver.interpolate_log(255335)[7]
              input1: ((<read__1038@374:1> = 3) && <read__1038@374:0>)
              input2: (not ((<read__1038@374:1> = 1) || ((<read__1038@374:1> = 3) || (not <read__1038@374:0>))))
              begin InterpProver.interpolate_check(255336)[8]
                begin InterpProver.interpolate_simplify(255337)[9]
                  begin InterpProver.interpolate_quick(255408)[10]
                    begin CsisatInterface.interpolate_csisat_wrap(255417)[11]
                      begin CsisatInterface.interpolate_csisat_post_process(255418)[12]
                        begin CsisatInterface.interpolate_csisat_log(255419)[13]
                          input1: (3 = v_sep_read__1038_sep_374_sep_1 & v_sep_read__1038_sep_374_sep_0 = true())
                          input2: (not 1 = v_sep_read__1038_sep_374_sep_1 & not 3 = v_sep_read__1038_sep_374_sep_1 & v_sep_read__1038_sep_374_sep_0 = true())
                          begin CsisatInterface.interpolate_csisat_raw(255420)[14]
                            
                          end CsisatInterface.interpolate_csisat_raw(255420)[14] (0.000000 sec.)
                          output: 3 = v_sep_read__1038_sep_374_sep_1
                          
                        end CsisatInterface.interpolate_csisat_log(255419)[13] (0.000000 sec.)
                        after simplification: 3 = v_sep_read__1038_sep_374_sep_1
                        after dnf conversion: ((3 = v_sep_read__1038_sep_374_sep_1))
                        
                      end CsisatInterface.interpolate_csisat_post_process(255418)[12] (0.000000 sec.)
                      
                    end CsisatInterface.interpolate_csisat_wrap(255417)[11] (0.000000 sec.)
                    
                  end InterpProver.interpolate_quick(255408)[10] (0.001000 sec.)
                  
                end InterpProver.interpolate_simplify(255337)[9] (0.001000 sec.)
                
              end InterpProver.interpolate_check(255336)[8] (0.001000 sec.)
              output: (3 = <read__1038@374:1>)
            end InterpProver.interpolate_log(255335)[7] (0.001000 sec.)
            
          end InterpProver.interpolate_fresh(255334)[6] (0.001000 sec.)
          
        end InterpProver.interpolate(255333)[5] (0.001000 sec.)
        output:
          P[<read__1038@374:1>](<read__1038@374:0>:bool,<read__1038@374:1>:int) = (3 = <read__1038@374:1>)
      end ApronInterface.convex_hull_interpolate(255332)[4] (0.001000 sec.)
      Horn clauses:
        P[<f_1046@338:2>](<read__1038@374:0>:bool,<f_f_1578@372:3>:bool,<read__1038@374:1>:int),
        (3 <> <read__1038@374:1>) |- bot
        
         ((<f_1046@338:2> = 3) && (<f_1046@338:0> && <f_1046@338:1>))
        |- P[<f_1046@338:2>](<f_1046@338:0>:bool,<f_1046@338:1>:bool,
                             <f_1046@338:2>:int)
      lower bounds:
        P[<f_1046@338:2>](<f_1046@338:0>:bool,<f_1046@338:1>:bool,<f_1046@338:2>:int) =
        ((<f_1046@338:2> = 3) && (<f_1046@338:0> && <f_1046@338:1>))
      upper bounds:
        P[<f_1046@338:2>](var1179:bool,var1180:bool,var1181:int) = (3 = var1181)
      begin GenHcSolver.classify_pids(256277)[4]
        output:
          [<f_1046@338:2>]
      end GenHcSolver.classify_pids(256277)[4] (0.000000 sec.)
      lb:((<f_1046@338:2> = 3) && (<f_1046@338:0> && <f_1046@338:1>))
      nub:(not (3 = <f_1046@338:2>))
      begin ApronInterface.convex_hull_interpolate(256280)[4]
        lb:((<f_1046@338:2> = 3) && (<f_1046@338:0> && <f_1046@338:1>))
        nub:(not (3 = <f_1046@338:2>))
        lb':((<f_1046@338:2> = 3) && (<f_1046@338:0> && <f_1046@338:1>))
        nub':(not (3 = <f_1046@338:2>))
        begin InterpProver.interpolate(256281)[5]
          begin InterpProver.interpolate_fresh(256282)[6]
            begin InterpProver.interpolate_log(256283)[7]
              input1: ((<f_1046@338:2> = 3) && (<f_1046@338:0> && <f_1046@338:1>))
              input2: (not (3 = <f_1046@338:2>))
              begin InterpProver.interpolate_check(256284)[8]
                begin InterpProver.interpolate_simplify(256285)[9]
                  begin InterpProver.interpolate_quick(256328)[10]
                    begin CsisatInterface.interpolate_csisat_wrap(256337)[11]
                      begin CsisatInterface.interpolate_csisat_post_process(256338)[12]
                        begin CsisatInterface.interpolate_csisat_log(256339)[13]
                          input1: 3 = v_sep_f_1046_sep_338_sep_2
                          input2: not 3 = v_sep_f_1046_sep_338_sep_2
                          begin CsisatInterface.interpolate_csisat_raw(256340)[14]
                            
                          end CsisatInterface.interpolate_csisat_raw(256340)[14] (0.000000 sec.)
                          output: 3 = v_sep_f_1046_sep_338_sep_2
                          
                        end CsisatInterface.interpolate_csisat_log(256339)[13] (0.000000 sec.)
                        after simplification: 3 = v_sep_f_1046_sep_338_sep_2
                        after dnf conversion: ((3 = v_sep_f_1046_sep_338_sep_2))
                        
                      end CsisatInterface.interpolate_csisat_post_process(256338)[12] (0.000000 sec.)
                      
                    end CsisatInterface.interpolate_csisat_wrap(256337)[11] (0.000000 sec.)
                    
                  end InterpProver.interpolate_quick(256328)[10] (0.000000 sec.)
                  
                end InterpProver.interpolate_simplify(256285)[9] (0.000000 sec.)
                
              end InterpProver.interpolate_check(256284)[8] (0.001000 sec.)
              output: (3 = <f_1046@338:2>)
            end InterpProver.interpolate_log(256283)[7] (0.001000 sec.)
            
          end InterpProver.interpolate_fresh(256282)[6] (0.001000 sec.)
          
        end InterpProver.interpolate(256281)[5] (0.001000 sec.)
        output:
          P[<f_1046@338:2>](<f_1046@338:0>:bool,<f_1046@338:1>:bool,<f_1046@338:2>:int) = (3 = <f_1046@338:2>)
      end ApronInterface.convex_hull_interpolate(256280)[4] (0.001000 sec.)
      begin HcSolver.check_validity(256512)[4]
        input:
          P[<fail_1589@383:0>](<fail_1589@383:0>:bool)|- bot
          
          P[<read__1038@374:1>](true:bool,<br_readit_1585@380:1>:int),
          ((<br_readit_1585@380:1> <> 1) && ((<br_readit_1585@380:1> <> 3) && <fail_1589@383:0>))
          |- P[<fail_1589@383:0>](<fail_1589@383:0>:bool)
          
          P[<f_1046@338:2>](<read__1038@374:0>:bool,<f_f_1578@372:3>:bool,<read__1038@374:1>:int),
          P[<<close__1043@340:2>@353:0>](<read__1038@374:0>:bool,<read__1038@374:1>:int,<f_f_1578@372:2>:int),
          P[<<close__1043@357:2>@370:0>](<f_f_1578@372:3>:bool,<f_f_1578@372:2>:int,<f_f_1578@372:5>:int)|- P[<read__1038@374:1>](
          <read__1038@374:0>:bool,<read__1038@374:1>:int)
          
          P[<close__1043@357:1>](<close__1043@357:0>:bool,<close__1043@357:1>:int),
          ((<close__1043@357:1> = 3) && ((<<close__1043@357:2>@370:0> = <close__1043@357:1>) && <close__1043@357:0>))
          |- P[<<close__1043@357:2>@370:0>](<close__1043@357:0>:bool,
                                            <close__1043@357:1>:int,<<close__1043@357:2>@370:0>:int)
          
          P[<f_1046@338:2>](<f_f_1577@355:1>:bool,<close__1043@357:0>:bool,<f_f_1577@355:0>:int),
          P[<<close__1043@340:2>@353:0>](<f_f_1577@355:1>:bool,<f_f_1577@355:0>:int,<close__1043@357:1>:int)|- P[<close__1043@357:1>](
          <close__1043@357:0>:bool,<close__1043@357:1>:int)
          
          P[<close__1043@340:1>](<close__1043@340:0>:bool,<close__1043@340:1>:int),
          ((<close__1043@340:1> = 3) && ((<<close__1043@340:2>@353:0> = <close__1043@340:1>) && <close__1043@340:0>))
          |- P[<<close__1043@340:2>@353:0>](<close__1043@340:0>:bool,
                                            <close__1043@340:1>:int,<<close__1043@340:2>@353:0>:int)
          
          P[<f_1046@338:2>](<close__1043@340:0>:bool,<f_1046@338:1>:bool,<close__1043@340:1>:int)|- P[<close__1043@340:1>](
          <close__1043@340:0>:bool,<close__1043@340:1>:int)
          
           ((<f_1046@338:2> = 3) && (<f_1046@338:0> && <f_1046@338:1>))
          |- P[<f_1046@338:2>](<f_1046@338:0>:bool,<f_1046@338:1>:bool,
                               <f_1046@338:2>:int)
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        
      end HcSolver.check_validity(256512)[4] (0.001999 sec.)
      solution:
        P[<fail_1589@383:0>](<fail_1589@383:0>:bool) = false
        P[<read__1038@374:1>](<read__1038@374:0>:bool,<read__1038@374:1>:int) = (3 = <read__1038@374:1>)
        P[<<close__1043@357:2>@370:0>](<close__1043@340:0>:bool,<close__1043@340:1>:int,<<close__1043@340:2>@353:0>:int) =
        true
        P[<close__1043@357:1>](<close__1043@340:0>:bool,<close__1043@340:1>:int) = true
        P[<<close__1043@340:2>@353:0>](<close__1043@340:0>:bool,<close__1043@340:1>:int,<<close__1043@340:2>@353:0>:int) =
        true
        P[<close__1043@340:1>](<close__1043@340:0>:bool,<close__1043@340:1>:int) = true
        P[<f_1046@338:2>](<f_1046@338:0>:bool,<f_1046@338:1>:bool,<f_1046@338:2>:int) = (3 = <f_1046@338:2>)
    end GenHcSolver.solve(241441)[3] (0.063990 sec.)
    begin GenHcSolver.solve(257169)[3]
      Horn clauses:
        P[<fail_1589@383:0>](<fail_1589@383:0>:bool)|- bot
        
        P[<read__1038@374:1>](true:bool,<br_readit_1585@380:1>:int),
        ((<br_readit_1585@380:1> <> 1) && ((<br_readit_1585@380:1> <> 3) && <fail_1589@383:0>))
        |- P[<fail_1589@383:0>](<fail_1589@383:0>:bool)
        
        P[<f_1046@338:2>](<read__1038@374:0>:bool,<f_f_1578@372:3>:bool,<read__1038@374:1>:int),
        P[<<close__1043@340:2>@353:0>](<read__1038@374:0>:bool,<read__1038@374:1>:int,<f_f_1578@372:2>:int),
        P[<<close__1043@357:2>@370:0>](<f_f_1578@372:3>:bool,<f_f_1578@372:2>:int,<f_f_1578@372:5>:int)|- P[<read__1038@374:1>](
        <read__1038@374:0>:bool,<read__1038@374:1>:int)
        
        P[<close__1043@357:1>](<close__1043@357:0>:bool,<close__1043@357:1>:int),
        ((<close__1043@357:1> = 3) && ((<<close__1043@357:2>@370:0> = <close__1043@357:1>) && <close__1043@357:0>))
        |- P[<<close__1043@357:2>@370:0>](<close__1043@357:0>:bool,<close__1043@357:1>:int,
                                          <<close__1043@357:2>@370:0>:int)
        
        P[<f_1046@338:2>](<f_f_1577@355:1>:bool,<close__1043@357:0>:bool,<f_f_1577@355:0>:int),
        P[<<close__1043@340:2>@353:0>](<f_f_1577@355:1>:bool,<f_f_1577@355:0>:int,<close__1043@357:1>:int)|- P[<close__1043@357:1>](
        <close__1043@357:0>:bool,<close__1043@357:1>:int)
        
        P[<close__1043@340:1>](<close__1043@340:0>:bool,<close__1043@340:1>:int),
        ((<close__1043@340:1> = 3) && ((<<close__1043@340:2>@353:0> = <close__1043@340:1>) && <close__1043@340:0>))
        |- P[<<close__1043@340:2>@353:0>](<close__1043@340:0>:bool,<close__1043@340:1>:int,
                                          <<close__1043@340:2>@353:0>:int)
        
        P[<f_1046@338:2>](<close__1043@340:0>:bool,<f_1046@338:1>:bool,<close__1043@340:1>:int)|- P[<close__1043@340:1>](
        <close__1043@340:0>:bool,<close__1043@340:1>:int)
        
         ((<f_1046@338:2> = 3) && (<f_1046@338:0> && <f_1046@338:1>))
        |- P[<f_1046@338:2>](<f_1046@338:0>:bool,<f_1046@338:1>:bool,
                             <f_1046@338:2>:int)
      lower bounds:
        P[<f_1046@338:2>](<f_1046@338:0>:bool,<f_1046@338:1>:bool,<f_1046@338:2>:int) =
        ((<f_1046@338:2> = 3) && (<f_1046@338:0> && <f_1046@338:1>))
        P[<close__1043@340:1>](<close__1043@340:0>:bool,<close__1043@340:1>:int) =
        ((<close__1043@340:1> = 3) && <close__1043@340:0>)
        P[<<close__1043@340:2>@353:0>](<close__1043@340:0>:bool,<close__1043@340:1>:int,<<close__1043@340:2>@353:0>:int) =
        ((<close__1043@340:1> = 3) && ((<<close__1043@340:2>@353:0> = <close__1043@340:1>) && <close__1043@340:0>))
        P[<close__1043@357:1>](<close__1043@357:0>:bool,<close__1043@357:1>:int) =
        ((<close__1043@357:1> = 3) && <close__1043@357:0>)
        P[<<close__1043@357:2>@370:0>](<close__1043@357:0>:bool,<close__1043@357:1>:int,<<close__1043@357:2>@370:0>:int) =
        ((<close__1043@357:1> = 3) && ((<<close__1043@357:2>@370:0> = <close__1043@357:1>) && <close__1043@357:0>))
        P[<read__1038@374:1>](<read__1038@374:0>:bool,<read__1038@374:1>:int) =
        ((<read__1038@374:1> = 3) && <read__1038@374:0>)
        P[<fail_1589@383:0>](<fail_1589@383:0>:bool) = false
      upper bounds:
        P[<<close__1043@357:2>@370:0>](var1189:bool,var1190:int,var1191:int) = true
        P[<<close__1043@340:2>@353:0>](var1183:bool,var1184:int,var1185:int) = true
      begin GenHcSolver.classify_pids(262249)[4]
        output:
          [<<close__1043@340:2>@353:0>;<<close__1043@357:2>@370:0>]
      end GenHcSolver.classify_pids(262249)[4] (0.000000 sec.)
      begin ApronInterface.convex_hull_interpolate(262260)[4]
        lb:((<close__1043@340:1> = 3) && ((<<close__1043@340:2>@353:0> = <close__1043@340:1>) && <close__1043@340:0>))
        nub:false
        begin ExtFormula.Formula.case_analysis_boolean(262283)[5]
          ts: ((<close__1043@340:1> = 3) &&
               ((<<close__1043@340:2>@353:0> = <close__1043@340:1>) && <close__1043@340:0>))
          
        end ExtFormula.Formula.case_analysis_boolean(262283)[5] (0.000000 sec.)
        begin ExtFormula.Formula.case_analysis_boolean(262323)[5]
          ts: false
          
        end ExtFormula.Formula.case_analysis_boolean(262323)[5] (0.000000 sec.)
        lb':(((((-3 + <<close__1043@340:2>@353:0>) = 0) && ((-3 + <close__1043@340:1>) = 0)) &&
              (<close__1043@340:0> = true)) || ((-1 >= 0) && (<close__1043@340:0> = false)))
        nub':(-1 >= 0)
        begin InterpProver.interpolate(262326)[5]
          begin InterpProver.interpolate_fresh(262327)[6]
            begin InterpProver.interpolate_log(262328)[7]
              input1: (((((-3 + <<close__1043@340:2>@353:0>) = 0) && ((-3 + <close__1043@340:1>) = 0)) &&
                        (<close__1043@340:0> = true)) || ((-1 >= 0) && (<close__1043@340:0> = false)))
              input2: (-1 >= 0)
              begin InterpProver.interpolate_check(262329)[8]
                begin InterpProver.interpolate_simplify(262330)[9]
                  begin InterpProver.interpolate_quick(262386)[10]
                    
                  end InterpProver.interpolate_quick(262386)[10] (0.000000 sec.)
                  
                end InterpProver.interpolate_simplify(262330)[9] (0.000999 sec.)
                
              end InterpProver.interpolate_check(262329)[8] (0.000999 sec.)
              output: true
            end InterpProver.interpolate_log(262328)[7] (0.000999 sec.)
            
          end InterpProver.interpolate_fresh(262327)[6] (0.000999 sec.)
          
        end InterpProver.interpolate(262326)[5] (0.000999 sec.)
        output:
          P[<<close__1043@340:2>@353:0>](<close__1043@340:0>:bool,<close__1043@340:1>:int,<<close__1043@340:2>@353:0>:int) =
          true
          P[<<close__1043@357:2>@370:0>](<close__1043@340:0>:bool,<close__1043@340:1>:int,<<close__1043@340:2>@353:0>:int) =
          true
      end ApronInterface.convex_hull_interpolate(262260)[4] (0.000999 sec.)
      Horn clauses:
        P[<fail_1589@383:0>](<fail_1589@383:0>:bool)|- bot
        
        P[<read__1038@374:1>](true:bool,<br_readit_1585@380:1>:int),
        ((<br_readit_1585@380:1> <> 1) && ((<br_readit_1585@380:1> <> 3) && <fail_1589@383:0>))
        |- P[<fail_1589@383:0>](<fail_1589@383:0>:bool)
        
        P[<f_1046@338:2>](<read__1038@374:0>:bool,<f_f_1578@372:3>:bool,<read__1038@374:1>:int)|- P[<read__1038@374:1>](
        <read__1038@374:0>:bool,<read__1038@374:1>:int)
        
        P[<f_1046@338:2>](<f_f_1577@355:1>:bool,<close__1043@357:0>:bool,<f_f_1577@355:0>:int)|- P[<close__1043@357:1>](
        <close__1043@357:0>:bool,<close__1043@357:1>:int)
        
        P[<f_1046@338:2>](<close__1043@340:0>:bool,<f_1046@338:1>:bool,<close__1043@340:1>:int)|- P[<close__1043@340:1>](
        <close__1043@340:0>:bool,<close__1043@340:1>:int)
        
         ((<f_1046@338:2> = 3) && (<f_1046@338:0> && <f_1046@338:1>))
        |- P[<f_1046@338:2>](<f_1046@338:0>:bool,<f_1046@338:1>:bool,
                             <f_1046@338:2>:int)
      lower bounds:
        P[<f_1046@338:2>](<f_1046@338:0>:bool,<f_1046@338:1>:bool,<f_1046@338:2>:int) =
        ((<f_1046@338:2> = 3) && (<f_1046@338:0> && <f_1046@338:1>))
        P[<read__1038@374:1>](<read__1038@374:0>:bool,<read__1038@374:1>:int) =
        ((<read__1038@374:1> = 3) && <read__1038@374:0>)
        P[<close__1043@357:1>](<close__1043@357:0>:bool,<close__1043@357:1>:int) = <close__1043@357:0>
        P[<close__1043@340:1>](<close__1043@340:0>:bool,<close__1043@340:1>:int) =
        ((<close__1043@340:1> = 3) && <close__1043@340:0>)
        P[<fail_1589@383:0>](<fail_1589@383:0>:bool) = false
      upper bounds:
        P[<close__1043@357:1>](var1194:bool,var1195:int) = true
        P[<close__1043@340:1>](var1192:bool,var1193:int) = true
      begin GenHcSolver.classify_pids(267095)[4]
        output:
          [<close__1043@340:1>;<close__1043@357:1>]
      end GenHcSolver.classify_pids(267095)[4] (0.000000 sec.)
      begin ApronInterface.convex_hull_interpolate(267106)[4]
        lb:(((<close__1043@340:1> = 3) && <close__1043@340:0>) || <close__1043@340:0>)
        nub:false
        begin ExtFormula.Formula.case_analysis_boolean(267122)[5]
          ts: <close__1043@340:0>
          
        end ExtFormula.Formula.case_analysis_boolean(267122)[5] (0.000000 sec.)
        begin ExtFormula.Formula.case_analysis_boolean(267132)[5]
          ts: false
          
        end ExtFormula.Formula.case_analysis_boolean(267132)[5] (0.000000 sec.)
        lb':((<close__1043@340:0> = true) || ((-1 >= 0) && (<close__1043@340:0> = false)))
        nub':(-1 >= 0)
        begin InterpProver.interpolate(267135)[5]
          begin InterpProver.interpolate_fresh(267136)[6]
            begin InterpProver.interpolate_log(267137)[7]
              input1: ((<close__1043@340:0> = true) || ((-1 >= 0) && (<close__1043@340:0> = false)))
              input2: (-1 >= 0)
              begin InterpProver.interpolate_check(267138)[8]
                begin InterpProver.interpolate_simplify(267139)[9]
                  begin InterpProver.interpolate_quick(267166)[10]
                    
                  end InterpProver.interpolate_quick(267166)[10] (0.000000 sec.)
                  
                end InterpProver.interpolate_simplify(267139)[9] (0.000000 sec.)
                
              end InterpProver.interpolate_check(267138)[8] (0.000000 sec.)
              output: true
            end InterpProver.interpolate_log(267137)[7] (0.000000 sec.)
            
          end InterpProver.interpolate_fresh(267136)[6] (0.000000 sec.)
          
        end InterpProver.interpolate(267135)[5] (0.000000 sec.)
        output:
          P[<close__1043@340:1>](<close__1043@340:0>:bool,<close__1043@340:1>:int) = true
          P[<close__1043@357:1>](<close__1043@340:0>:bool,<close__1043@340:1>:int) = true
      end ApronInterface.convex_hull_interpolate(267106)[4] (0.000000 sec.)
      Horn clauses:
        P[<fail_1589@383:0>](<fail_1589@383:0>:bool)|- bot
        
        P[<read__1038@374:1>](true:bool,<br_readit_1585@380:1>:int),
        ((<br_readit_1585@380:1> <> 1) && ((<br_readit_1585@380:1> <> 3) && <fail_1589@383:0>))
        |- P[<fail_1589@383:0>](<fail_1589@383:0>:bool)
        
        P[<f_1046@338:2>](<read__1038@374:0>:bool,<f_f_1578@372:3>:bool,<read__1038@374:1>:int)|- P[<read__1038@374:1>](
        <read__1038@374:0>:bool,<read__1038@374:1>:int)
        
         ((<f_1046@338:2> = 3) && (<f_1046@338:0> && <f_1046@338:1>))
        |- P[<f_1046@338:2>](<f_1046@338:0>:bool,<f_1046@338:1>:bool,
                             <f_1046@338:2>:int)
      lower bounds:
        P[<f_1046@338:2>](<f_1046@338:0>:bool,<f_1046@338:1>:bool,<f_1046@338:2>:int) =
        ((<f_1046@338:2> = 3) && (<f_1046@338:0> && <f_1046@338:1>))
        P[<read__1038@374:1>](<read__1038@374:0>:bool,<read__1038@374:1>:int) =
        ((<read__1038@374:1> = 3) && <read__1038@374:0>)
        P[<fail_1589@383:0>](<fail_1589@383:0>:bool) = false
      upper bounds:
        P[<fail_1589@383:0>](var1197:bool) = true
      begin GenHcSolver.classify_pids(269449)[4]
        output:
          [<fail_1589@383:0>]
      end GenHcSolver.classify_pids(269449)[4] (0.000000 sec.)
      lb:false
      nub:false
      begin ApronInterface.convex_hull_interpolate(269452)[4]
        lb:false
        nub:false
        begin ExtFormula.Formula.case_analysis_boolean(269455)[5]
          ts: false
          
        end ExtFormula.Formula.case_analysis_boolean(269455)[5] (0.000000 sec.)
        begin ExtFormula.Formula.case_analysis_boolean(269460)[5]
          ts: false
          
        end ExtFormula.Formula.case_analysis_boolean(269460)[5] (0.000000 sec.)
        lb':(-1 >= 0)
        nub':(-1 >= 0)
        begin InterpProver.interpolate(269463)[5]
          begin InterpProver.interpolate_fresh(269464)[6]
            begin InterpProver.interpolate_log(269465)[7]
              input1: (-1 >= 0)
              input2: (-1 >= 0)
              begin InterpProver.interpolate_check(269466)[8]
                begin InterpProver.interpolate_simplify(269467)[9]
                  begin InterpProver.interpolate_quick(269482)[10]
                    
                  end InterpProver.interpolate_quick(269482)[10] (0.000000 sec.)
                  begin minimizing # of disjunctions(269486)[10]
                    input: false
                    output: false
                  end minimizing # of disjunctions(269486)[10] (0.000000 sec.)
                  
                end InterpProver.interpolate_simplify(269467)[9] (0.000000 sec.)
                
              end InterpProver.interpolate_check(269466)[8] (0.000000 sec.)
              output: false
            end InterpProver.interpolate_log(269465)[7] (0.000000 sec.)
            
          end InterpProver.interpolate_fresh(269464)[6] (0.000000 sec.)
          
        end InterpProver.interpolate(269463)[5] (0.000000 sec.)
        output:
          P[<fail_1589@383:0>](<fail_1589@383:0>:bool) = false
      end ApronInterface.convex_hull_interpolate(269452)[4] (0.000000 sec.)
      Horn clauses:
        P[<read__1038@374:1>](true:bool,<br_readit_1585@380:1>:int),
        ((<br_readit_1585@380:1> <> 1) && (<br_readit_1585@380:1> <> 3)) |- bot
        
        P[<f_1046@338:2>](<read__1038@374:0>:bool,<f_f_1578@372:3>:bool,<read__1038@374:1>:int)|- P[<read__1038@374:1>](
        <read__1038@374:0>:bool,<read__1038@374:1>:int)
        
         ((<f_1046@338:2> = 3) && (<f_1046@338:0> && <f_1046@338:1>))
        |- P[<f_1046@338:2>](<f_1046@338:0>:bool,<f_1046@338:1>:bool,
                             <f_1046@338:2>:int)
      lower bounds:
        P[<f_1046@338:2>](<f_1046@338:0>:bool,<f_1046@338:1>:bool,<f_1046@338:2>:int) =
        ((<f_1046@338:2> = 3) && (<f_1046@338:0> && <f_1046@338:1>))
        P[<read__1038@374:1>](<read__1038@374:0>:bool,<read__1038@374:1>:int) =
        ((<read__1038@374:1> = 3) && <read__1038@374:0>)
      upper bounds:
        P[<read__1038@374:1>](var1198:bool,var1199:int) = ((var1199 = 1) || ((var1199 = 3) || (not var1198)))
      begin GenHcSolver.classify_pids(271183)[4]
        output:
          [<read__1038@374:1>]
      end GenHcSolver.classify_pids(271183)[4] (0.000000 sec.)
      lb:((<read__1038@374:1> = 3) && <read__1038@374:0>)
      nub:(not ((<read__1038@374:1> = 1) || ((<read__1038@374:1> = 3) || (not <read__1038@374:0>))))
      begin ApronInterface.convex_hull_interpolate(271186)[4]
        lb:((<read__1038@374:1> = 3) && <read__1038@374:0>)
        nub:(not ((<read__1038@374:1> = 1) || ((<read__1038@374:1> = 3) || (not <read__1038@374:0>))))
        begin ExtFormula.Formula.case_analysis_boolean(271195)[5]
          ts: ((<read__1038@374:1> = 3) && <read__1038@374:0>)
          
        end ExtFormula.Formula.case_analysis_boolean(271195)[5] (0.000000 sec.)
        begin ExtFormula.Formula.case_analysis_boolean(271239)[5]
          ts: ((<read__1038@374:1> <> 1) && ((<read__1038@374:1> <> 3) && <read__1038@374:0>))
          
        end ExtFormula.Formula.case_analysis_boolean(271239)[5] (0.000000 sec.)
        lb':((((-3 + <read__1038@374:1>) = 0) && (<read__1038@374:0> = true)) ||
             ((-1 >= 0) && (<read__1038@374:0> = false)))
        nub':((<read__1038@374:0> = true) || ((-1 >= 0) && (<read__1038@374:0> = false)))
        begin InterpProver.interpolate(271280)[5]
          begin InterpProver.interpolate_fresh(271281)[6]
            begin InterpProver.interpolate_log(271282)[7]
              input1: ((((-3 + <read__1038@374:1>) = 0) && (<read__1038@374:0> = true)) ||
                       ((-1 >= 0) && (<read__1038@374:0> = false)))
              input2: ((<read__1038@374:0> = true) || ((-1 >= 0) && (<read__1038@374:0> = false)))
              begin InterpProver.interpolate_check(271283)[8]
                begin InterpProver.interpolate_simplify(271284)[9]
                  begin InterpProver.interpolate_quick(271331)[10]
                    begin CsisatInterface.interpolate_csisat_wrap(271340)[11]
                      begin CsisatInterface.interpolate_csisat_post_process(271341)[12]
                        begin CsisatInterface.interpolate_csisat_log(271342)[13]
                          input1: v_sep_read__1038_sep_374_sep_0 = true()
                          input2: v_sep_read__1038_sep_374_sep_0 = true()
                          begin CsisatInterface.interpolate_csisat_raw(271343)[14]
                            csisat error: NelsonOppen: not a conjunction
                            
                          end CsisatInterface.interpolate_csisat_raw(271343)[14] (0.000000 sec.)
                          
                        end CsisatInterface.interpolate_csisat_log(271342)[13] (0.000000 sec.)
                        
                      end CsisatInterface.interpolate_csisat_post_process(271341)[12] (0.000000 sec.)
                      
                    end CsisatInterface.interpolate_csisat_wrap(271340)[11] (0.000000 sec.)
                    
                  end InterpProver.interpolate_quick(271331)[10] (0.001000 sec.)
                  
                end InterpProver.interpolate_simplify(271284)[9] (0.001000 sec.)
                
              end InterpProver.interpolate_check(271283)[8] (0.001000 sec.)
              there is no interpolant
            end InterpProver.interpolate_log(271282)[7] (0.001000 sec.)
            
          end InterpProver.interpolate_fresh(271281)[6] (0.001000 sec.)
          
        end InterpProver.interpolate(271280)[5] (0.001000 sec.)
        begin InterpProver.interpolate(271360)[5]
          begin InterpProver.interpolate_fresh(271361)[6]
            begin InterpProver.interpolate_log(271362)[7]
              input1: ((((-3 + <read__1038@374:1>) = 0) && (<read__1038@374:0> = true)) ||
                       ((-1 >= 0) && (<read__1038@374:0> = false)))
              input2: (not ((<read__1038@374:1> = 1) || ((<read__1038@374:1> = 3) || (not <read__1038@374:0>))))
              begin InterpProver.interpolate_check(271363)[8]
                begin InterpProver.interpolate_simplify(271364)[9]
                  begin InterpProver.interpolate_quick(271444)[10]
                    begin CsisatInterface.interpolate_csisat_wrap(271453)[11]
                      begin CsisatInterface.interpolate_csisat_post_process(271454)[12]
                        begin CsisatInterface.interpolate_csisat_log(271455)[13]
                          input1: (3 = v_sep_read__1038_sep_374_sep_1 & v_sep_read__1038_sep_374_sep_0 = true())
                          input2: (not 1 = v_sep_read__1038_sep_374_sep_1 & not 3 = v_sep_read__1038_sep_374_sep_1 & v_sep_read__1038_sep_374_sep_0 = true())
                          begin CsisatInterface.interpolate_csisat_raw(271456)[14]
                            
                          end CsisatInterface.interpolate_csisat_raw(271456)[14] (0.000000 sec.)
                          output: 3 = v_sep_read__1038_sep_374_sep_1
                          
                        end CsisatInterface.interpolate_csisat_log(271455)[13] (0.000000 sec.)
                        after simplification: 3 = v_sep_read__1038_sep_374_sep_1
                        after dnf conversion: ((3 = v_sep_read__1038_sep_374_sep_1))
                        
                      end CsisatInterface.interpolate_csisat_post_process(271454)[12] (0.000000 sec.)
                      
                    end CsisatInterface.interpolate_csisat_wrap(271453)[11] (0.000000 sec.)
                    
                  end InterpProver.interpolate_quick(271444)[10] (0.001000 sec.)
                  
                end InterpProver.interpolate_simplify(271364)[9] (0.001000 sec.)
                
              end InterpProver.interpolate_check(271363)[8] (0.001999 sec.)
              output: (3 = <read__1038@374:1>)
            end InterpProver.interpolate_log(271362)[7] (0.001999 sec.)
            
          end InterpProver.interpolate_fresh(271361)[6] (0.001999 sec.)
          
        end InterpProver.interpolate(271360)[5] (0.001999 sec.)
        output:
          P[<read__1038@374:1>](<read__1038@374:0>:bool,<read__1038@374:1>:int) = (3 = <read__1038@374:1>)
      end ApronInterface.convex_hull_interpolate(271186)[4] (0.002999 sec.)
      Horn clauses:
        P[<f_1046@338:2>](<read__1038@374:0>:bool,<f_f_1578@372:3>:bool,<read__1038@374:1>:int),
        (3 <> <read__1038@374:1>) |- bot
        
         ((<f_1046@338:2> = 3) && (<f_1046@338:0> && <f_1046@338:1>))
        |- P[<f_1046@338:2>](<f_1046@338:0>:bool,<f_1046@338:1>:bool,
                             <f_1046@338:2>:int)
      lower bounds:
        P[<f_1046@338:2>](<f_1046@338:0>:bool,<f_1046@338:1>:bool,<f_1046@338:2>:int) =
        ((<f_1046@338:2> = 3) && (<f_1046@338:0> && <f_1046@338:1>))
      upper bounds:
        P[<f_1046@338:2>](var1200:bool,var1201:bool,var1202:int) = (3 = var1202)
      begin GenHcSolver.classify_pids(272313)[4]
        output:
          [<f_1046@338:2>]
      end GenHcSolver.classify_pids(272313)[4] (0.000000 sec.)
      lb:((<f_1046@338:2> = 3) && (<f_1046@338:0> && <f_1046@338:1>))
      nub:(not (3 = <f_1046@338:2>))
      begin ApronInterface.convex_hull_interpolate(272316)[4]
        lb:((<f_1046@338:2> = 3) && (<f_1046@338:0> && <f_1046@338:1>))
        nub:(not (3 = <f_1046@338:2>))
        begin ExtFormula.Formula.case_analysis_boolean(272329)[5]
          ts: ((<f_1046@338:2> = 3) && (<f_1046@338:0> && <f_1046@338:1>))
          
        end ExtFormula.Formula.case_analysis_boolean(272329)[5] (0.001000 sec.)
        begin ExtFormula.Formula.case_analysis_boolean(272373)[5]
          ts: (3 <> <f_1046@338:2>)
          
        end ExtFormula.Formula.case_analysis_boolean(272373)[5] (0.000000 sec.)
        lb':((((-3 + <f_1046@338:2>) = 0) && ((<f_1046@338:0> = true) && (<f_1046@338:1> = true))) ||
             (((-1 >= 0) && ((<f_1046@338:0> = true) && (<f_1046@338:1> = false))) ||
              (((-1 >= 0) && ((<f_1046@338:0> = false) && (<f_1046@338:1> = true))) ||
               ((-1 >= 0) && ((<f_1046@338:0> = false) && (<f_1046@338:1> = false))))))
        nub':true
        begin InterpProver.interpolate(272378)[5]
          begin InterpProver.interpolate_fresh(272379)[6]
            begin InterpProver.interpolate_log(272380)[7]
              input1: ((((-3 + <f_1046@338:2>) = 0) && ((<f_1046@338:0> = true) && (<f_1046@338:1> = true))) ||
                       (((-1 >= 0) && ((<f_1046@338:0> = true) && (<f_1046@338:1> = false))) ||
                        (((-1 >= 0) && ((<f_1046@338:0> = false) && (<f_1046@338:1> = true))) ||
                         ((-1 >= 0) && ((<f_1046@338:0> = false) && (<f_1046@338:1> = false))))))
              input2: true
              begin InterpProver.interpolate_check(272381)[8]
                begin InterpProver.interpolate_simplify(272382)[9]
                  begin InterpProver.interpolate_quick(272460)[10]
                    begin CsisatInterface.interpolate_csisat_wrap(272463)[11]
                      begin CsisatInterface.interpolate_csisat_post_process(272464)[12]
                        begin CsisatInterface.interpolate_csisat_log(272465)[13]
                          input1: true
                          input2: true
                          begin CsisatInterface.interpolate_csisat_raw(272466)[14]
                            
                          end CsisatInterface.interpolate_csisat_raw(272466)[14] (0.000000 sec.)
                          
                        end CsisatInterface.interpolate_csisat_log(272465)[13] (0.000000 sec.)
                        
                      end CsisatInterface.interpolate_csisat_post_process(272464)[12] (0.000000 sec.)
                      
                    end CsisatInterface.interpolate_csisat_wrap(272463)[11] (0.000000 sec.)
                    
                  end InterpProver.interpolate_quick(272460)[10] (0.000000 sec.)
                  
                end InterpProver.interpolate_simplify(272382)[9] (0.000000 sec.)
                
              end InterpProver.interpolate_check(272381)[8] (0.000000 sec.)
              there is no interpolant
            end InterpProver.interpolate_log(272380)[7] (0.001000 sec.)
            
          end InterpProver.interpolate_fresh(272379)[6] (0.001000 sec.)
          
        end InterpProver.interpolate(272378)[5] (0.001000 sec.)
        begin InterpProver.interpolate(272474)[5]
          begin InterpProver.interpolate_fresh(272475)[6]
            begin InterpProver.interpolate_log(272476)[7]
              input1: ((((-3 + <f_1046@338:2>) = 0) && ((<f_1046@338:0> = true) && (<f_1046@338:1> = true))) ||
                       (((-1 >= 0) && ((<f_1046@338:0> = true) && (<f_1046@338:1> = false))) ||
                        (((-1 >= 0) && ((<f_1046@338:0> = false) && (<f_1046@338:1> = true))) ||
                         ((-1 >= 0) && ((<f_1046@338:0> = false) && (<f_1046@338:1> = false))))))
              input2: (not (3 = <f_1046@338:2>))
              begin InterpProver.interpolate_check(272477)[8]
                begin InterpProver.interpolate_simplify(272478)[9]
                  begin InterpProver.interpolate_quick(272562)[10]
                    begin CsisatInterface.interpolate_csisat_wrap(272571)[11]
                      begin CsisatInterface.interpolate_csisat_post_process(272572)[12]
                        begin CsisatInterface.interpolate_csisat_log(272573)[13]
                          input1: 3 = v_sep_f_1046_sep_338_sep_2
                          input2: not 3 = v_sep_f_1046_sep_338_sep_2
                          begin CsisatInterface.interpolate_csisat_raw(272574)[14]
                            
                          end CsisatInterface.interpolate_csisat_raw(272574)[14] (0.000000 sec.)
                          output: 3 = v_sep_f_1046_sep_338_sep_2
                          
                        end CsisatInterface.interpolate_csisat_log(272573)[13] (0.000000 sec.)
                        after simplification: 3 = v_sep_f_1046_sep_338_sep_2
                        after dnf conversion: ((3 = v_sep_f_1046_sep_338_sep_2))
                        
                      end CsisatInterface.interpolate_csisat_post_process(272572)[12] (0.000000 sec.)
                      
                    end CsisatInterface.interpolate_csisat_wrap(272571)[11] (0.000000 sec.)
                    
                  end InterpProver.interpolate_quick(272562)[10] (0.000000 sec.)
                  
                end InterpProver.interpolate_simplify(272478)[9] (0.000000 sec.)
                
              end InterpProver.interpolate_check(272477)[8] (0.000000 sec.)
              output: (3 = <f_1046@338:2>)
            end InterpProver.interpolate_log(272476)[7] (0.000000 sec.)
            
          end InterpProver.interpolate_fresh(272475)[6] (0.000000 sec.)
          
        end InterpProver.interpolate(272474)[5] (0.000000 sec.)
        output:
          P[<f_1046@338:2>](<f_1046@338:0>:bool,<f_1046@338:1>:bool,<f_1046@338:2>:int) = (3 = <f_1046@338:2>)
      end ApronInterface.convex_hull_interpolate(272316)[4] (0.002000 sec.)
      begin HcSolver.check_validity(272746)[4]
        input:
          P[<fail_1589@383:0>](<fail_1589@383:0>:bool)|- bot
          
          P[<read__1038@374:1>](true:bool,<br_readit_1585@380:1>:int),
          ((<br_readit_1585@380:1> <> 1) && ((<br_readit_1585@380:1> <> 3) && <fail_1589@383:0>))
          |- P[<fail_1589@383:0>](<fail_1589@383:0>:bool)
          
          P[<f_1046@338:2>](<read__1038@374:0>:bool,<f_f_1578@372:3>:bool,<read__1038@374:1>:int),
          P[<<close__1043@340:2>@353:0>](<read__1038@374:0>:bool,<read__1038@374:1>:int,<f_f_1578@372:2>:int),
          P[<<close__1043@357:2>@370:0>](<f_f_1578@372:3>:bool,<f_f_1578@372:2>:int,<f_f_1578@372:5>:int)|- P[<read__1038@374:1>](
          <read__1038@374:0>:bool,<read__1038@374:1>:int)
          
          P[<close__1043@357:1>](<close__1043@357:0>:bool,<close__1043@357:1>:int),
          ((<close__1043@357:1> = 3) && ((<<close__1043@357:2>@370:0> = <close__1043@357:1>) && <close__1043@357:0>))
          |- P[<<close__1043@357:2>@370:0>](<close__1043@357:0>:bool,
                                            <close__1043@357:1>:int,<<close__1043@357:2>@370:0>:int)
          
          P[<f_1046@338:2>](<f_f_1577@355:1>:bool,<close__1043@357:0>:bool,<f_f_1577@355:0>:int),
          P[<<close__1043@340:2>@353:0>](<f_f_1577@355:1>:bool,<f_f_1577@355:0>:int,<close__1043@357:1>:int)|- P[<close__1043@357:1>](
          <close__1043@357:0>:bool,<close__1043@357:1>:int)
          
          P[<close__1043@340:1>](<close__1043@340:0>:bool,<close__1043@340:1>:int),
          ((<close__1043@340:1> = 3) && ((<<close__1043@340:2>@353:0> = <close__1043@340:1>) && <close__1043@340:0>))
          |- P[<<close__1043@340:2>@353:0>](<close__1043@340:0>:bool,
                                            <close__1043@340:1>:int,<<close__1043@340:2>@353:0>:int)
          
          P[<f_1046@338:2>](<close__1043@340:0>:bool,<f_1046@338:1>:bool,<close__1043@340:1>:int)|- P[<close__1043@340:1>](
          <close__1043@340:0>:bool,<close__1043@340:1>:int)
          
           ((<f_1046@338:2> = 3) && (<f_1046@338:0> && <f_1046@338:1>))
          |- P[<f_1046@338:2>](<f_1046@338:0>:bool,<f_1046@338:1>:bool,
                               <f_1046@338:2>:int)
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        
      end HcSolver.check_validity(272746)[4] (0.010998 sec.)
      solution:
        P[<fail_1589@383:0>](<fail_1589@383:0>:bool) = false
        P[<read__1038@374:1>](<read__1038@374:0>:bool,<read__1038@374:1>:int) = (3 = <read__1038@374:1>)
        P[<<close__1043@357:2>@370:0>](<close__1043@340:0>:bool,<close__1043@340:1>:int,<<close__1043@340:2>@353:0>:int) =
        true
        P[<close__1043@357:1>](<close__1043@340:0>:bool,<close__1043@340:1>:int) = true
        P[<<close__1043@340:2>@353:0>](<close__1043@340:0>:bool,<close__1043@340:1>:int,<<close__1043@340:2>@353:0>:int) =
        true
        P[<close__1043@340:1>](<close__1043@340:0>:bool,<close__1043@340:1>:int) = true
        P[<f_1046@338:2>](<f_1046@338:0>:bool,<f_1046@338:1>:bool,<f_1046@338:2>:int) = (3 = <f_1046@338:2>)
    end GenHcSolver.solve(257169)[3] (0.053992 sec.)
    begin YhornInterface.solve(273403)[3]
      begin HcSolver.solve_ub(273404)[4]
        encoded:
          P[<fail_1589@383:0>](<fail_1589@383:0>:int)|- bot
          
          P[<read__1038@374:1>](1:int,<br_readit_1585@380:1>:int),
          ((<br_readit_1585@380:1> <> 1) && ((<br_readit_1585@380:1> <> 3) && (<fail_1589@383:0> = 1)))
          |- P[<fail_1589@383:0>](<fail_1589@383:0>:int)
          
          P[<f_1046@338:2>](<read__1038@374:0>:int,<f_f_1578@372:3>:int,<read__1038@374:1>:int),
          P[<<close__1043@340:2>@353:0>](<read__1038@374:0>:int,<read__1038@374:1>:int,<f_f_1578@372:2>:int),
          P[<<close__1043@357:2>@370:0>](<f_f_1578@372:3>:int,<f_f_1578@372:2>:int,<f_f_1578@372:5>:int)|- P[<read__1038@374:1>](
          <read__1038@374:0>:int,<read__1038@374:1>:int)
          
          P[<close__1043@357:1>](<close__1043@357:0>:int,<close__1043@357:1>:int),
          ((<close__1043@357:1> = 3) &&
           ((<<close__1043@357:2>@370:0> = <close__1043@357:1>) && (<close__1043@357:0> = 1)))
          |- P[<<close__1043@357:2>@370:0>](<close__1043@357:0>:int,<close__1043@357:1>:int,
                                            <<close__1043@357:2>@370:0>:int)
          
          P[<f_1046@338:2>](<f_f_1577@355:1>:int,<close__1043@357:0>:int,<f_f_1577@355:0>:int),
          P[<<close__1043@340:2>@353:0>](<f_f_1577@355:1>:int,<f_f_1577@355:0>:int,<close__1043@357:1>:int)|- P[<close__1043@357:1>](
          <close__1043@357:0>:int,<close__1043@357:1>:int)
          
          P[<close__1043@340:1>](<close__1043@340:0>:int,<close__1043@340:1>:int),
          ((<close__1043@340:1> = 3) &&
           ((<<close__1043@340:2>@353:0> = <close__1043@340:1>) && (<close__1043@340:0> = 1)))
          |- P[<<close__1043@340:2>@353:0>](<close__1043@340:0>:int,<close__1043@340:1>:int,
                                            <<close__1043@340:2>@353:0>:int)
          
          P[<f_1046@338:2>](<close__1043@340:0>:int,<f_1046@338:1>:int,<close__1043@340:1>:int)|- P[<close__1043@340:1>](
          <close__1043@340:0>:int,<close__1043@340:1>:int)
          
           ((<f_1046@338:2> = 3) && ((<f_1046@338:0> = 1) && (<f_1046@338:1> = 1)))
          |- P[<f_1046@338:2>](<f_1046@338:0>:int,<f_1046@338:1>:int,
                               <f_1046@338:2>:int)
        input to Yhorn:
          P[<fail_1589@383:0>](<fail_1589@383:0>:int)|- bot
          
          P[<read__1038@374:1>](var1203:int,<br_readit_1585@380:1>:int),
          ((<br_readit_1585@380:1> <> 3) &&
           ((<br_readit_1585@380:1> <> 1) && ((var1203 = 1) && (<fail_1589@383:0> = 1))))
          |- P[<fail_1589@383:0>](<fail_1589@383:0>:int)
          
          P[<f_1046@338:2>](<read__1038@374:0>:int,<f_f_1578@372:3>:int,<read__1038@374:1>:int),
          P[<<close__1043@340:2>@353:0>](<read__1038@374:0>:int,<read__1038@374:1>:int,<f_f_1578@372:2>:int),
          P[<<close__1043@357:2>@370:0>](<f_f_1578@372:3>:int,<f_f_1578@372:2>:int,<f_f_1578@372:5>:int)|- P[<read__1038@374:1>](
          <read__1038@374:0>:int,<read__1038@374:1>:int)
          
          P[<close__1043@357:1>](<close__1043@357:0>:int,<close__1043@357:1>:int),
          ((<<close__1043@357:2>@370:0> = <close__1043@357:1>) &&
           ((<close__1043@357:0> = 1) && (<close__1043@357:1> = 3)))
          |- P[<<close__1043@357:2>@370:0>](<close__1043@357:0>:int,<close__1043@357:1>:int,
                                            <<close__1043@357:2>@370:0>:int)
          
          P[<f_1046@338:2>](<f_f_1577@355:1>:int,<close__1043@357:0>:int,<f_f_1577@355:0>:int),
          P[<<close__1043@340:2>@353:0>](<f_f_1577@355:1>:int,<f_f_1577@355:0>:int,<close__1043@357:1>:int)|- P[<close__1043@357:1>](
          <close__1043@357:0>:int,<close__1043@357:1>:int)
          
          P[<close__1043@340:1>](<close__1043@340:0>:int,<close__1043@340:1>:int),
          ((<<close__1043@340:2>@353:0> = <close__1043@340:1>) &&
           ((<close__1043@340:0> = 1) && (<close__1043@340:1> = 3)))
          |- P[<<close__1043@340:2>@353:0>](<close__1043@340:0>:int,<close__1043@340:1>:int,
                                            <<close__1043@340:2>@353:0>:int)
          
          P[<f_1046@338:2>](<close__1043@340:0>:int,<f_1046@338:1>:int,<close__1043@340:1>:int)|- P[<close__1043@340:1>](
          <close__1043@340:0>:int,<close__1043@340:1>:int)
          
           ((<f_1046@338:1> = 1) && ((<f_1046@338:0> = 1) && (<f_1046@338:2> = 3)))
          |- P[<f_1046@338:2>](<f_1046@338:0>:int,<f_1046@338:1>:int,
                               <f_1046@338:2>:int)Yhorn (Wed Sep 25 10:52:05 JST 2013)


(0=0) & (v_sep_fail_1589_sep_383_sep_0($7119)) -> 1=0.
(($7119-1=0) & ($7120-1=0) & ($7121-1<>0) & ($7121-3<>0)) & (v_sep_read__1038_sep_374_sep_1($7120,$7121)) -> v_sep_fail_1589_sep_383_sep_0($7119).
(0=0) & (v_sep_close__1043_sep_357_sep_2_sep_370_sep_0($7122,$7123,$7124)) & (v_sep_close__1043_sep_340_sep_2_sep_353_sep_0($7125,$7126,$7123)) & (v_sep_f_1046_sep_338_sep_2($7125,$7122,$7126)) -> v_sep_read__1038_sep_374_sep_1($7125,$7126).
(($7127-3=0) & ($7128-1=0) & (-$7127+$7129=0)) & (v_sep_close__1043_sep_357_sep_1($7128,$7127)) -> v_sep_close__1043_sep_357_sep_2_sep_370_sep_0($7128,$7127,$7129).
(0=0) & (v_sep_close__1043_sep_340_sep_2_sep_353_sep_0($7130,$7131,$7127)) & (v_sep_f_1046_sep_338_sep_2($7130,$7128,$7131)) -> v_sep_close__1043_sep_357_sep_1($7128,$7127).
(($7132-3=0) & ($7133-1=0) & (-$7132+$7134=0)) & (v_sep_close__1043_sep_340_sep_1($7133,$7132)) -> v_sep_close__1043_sep_340_sep_2_sep_353_sep_0($7133,$7132,$7134).
(0=0) & (v_sep_f_1046_sep_338_sep_2($7133,$7135,$7132)) -> v_sep_close__1043_sep_340_sep_1($7133,$7132).
($7136-3=0) & ($7137-1=0) & ($7135-1=0) -> v_sep_f_1046_sep_338_sep_2($7137,$7135,$7136).


v_sep_close__1043_sep_340_sep_1: X
v_sep_close__1043_sep_340_sep_2_sep_353_sep_0: X
v_sep_close__1043_sep_357_sep_1: X
v_sep_close__1043_sep_357_sep_2_sep_370_sep_0: X
v_sep_f_1046_sep_338_sep_2: X
v_sep_fail_1589_sep_383_sep_0: X
v_sep_read__1038_sep_374_sep_1: X
..............Split disj [30] 3.60645
Reconstrcut: 3 ****)

v_sep_close__1043_sep_340_sep_1: X
v_sep_close__1043_sep_340_sep_2_sep_353_sep_0: X
v_sep_close__1043_sep_357_sep_1: X
v_sep_close__1043_sep_357_sep_2_sep_370_sep_0: X
v_sep_f_1046_sep_338_sep_2: X
v_sep_fail_1589_sep_383_sep_0: (X) | (X) | (X) | (X)
v_sep_read__1038_sep_374_sep_1: X
.........
v_sep_close__1043_sep_340_sep_1: X
v_sep_close__1043_sep_340_sep_2_sep_353_sep_0: X
v_sep_close__1043_sep_357_sep_1: X
v_sep_close__1043_sep_357_sep_2_sep_370_sep_0: X
v_sep_f_1046_sep_338_sep_2: X
v_sep_fail_1589_sep_383_sep_0: (X) | (X) | (X) | (X)
v_sep_read__1038_sep_374_sep_1: X
.........Split conj [36] 3.615449
(Reconstrcut: 14 ****)
v_sep_close__1043_sep_340_sep_1: X
v_sep_close__1043_sep_340_sep_2_sep_353_sep_0: X
v_sep_close__1043_sep_357_sep_1: X
v_sep_close__1043_sep_357_sep_2_sep_370_sep_0: X
v_sep_f_1046_sep_338_sep_2: X
v_sep_fail_1589_sep_383_sep_0: (X) | (X) | (X) | (X)
v_sep_read__1038_sep_374_sep_1: (X) & (X) & (X) & (X)
.....................
v_sep_close__1043_sep_340_sep_1: X
v_sep_close__1043_sep_340_sep_2_sep_353_sep_0: X
v_sep_close__1043_sep_357_sep_1: X
v_sep_close__1043_sep_357_sep_2_sep_370_sep_0: X
v_sep_f_1046_sep_338_sep_2: X
v_sep_fail_1589_sep_383_sep_0: (X) | (X) | (X) | (X)
v_sep_read__1038_sep_374_sep_1: (X) & (X) & (X) & (X)
.........
v_sep_close__1043_sep_340_sep_1: X
v_sep_close__1043_sep_340_sep_2_sep_353_sep_0: X
v_sep_close__1043_sep_357_sep_1: X
v_sep_close__1043_sep_357_sep_2_sep_370_sep_0: X
v_sep_f_1046_sep_338_sep_2: X
v_sep_fail_1589_sep_383_sep_0: (X) | (X) | (X) | (X)
v_sep_read__1038_sep_374_sep_1: (X) & (X) & (X) & (X)
.....................Split conj [42] 3.635446
(Reconstrcut: 22 ****)
v_sep_close__1043_sep_340_sep_1: X
v_sep_close__1043_sep_340_sep_2_sep_353_sep_0: X
v_sep_close__1043_sep_357_sep_1: X
v_sep_close__1043_sep_357_sep_2_sep_370_sep_0: (X) & (X) & (X) & (X)
v_sep_f_1046_sep_338_sep_2: X
v_sep_fail_1589_sep_383_sep_0: (X) | (X) | (X) | (X)
v_sep_read__1038_sep_374_sep_1: (X) & (X) & (X) & (X)
.........................
v_sep_close__1043_sep_340_sep_1: X
v_sep_close__1043_sep_340_sep_2_sep_353_sep_0: X
v_sep_close__1043_sep_357_sep_1: X
v_sep_close__1043_sep_357_sep_2_sep_370_sep_0: (X) & (X) & (X) & (X)
v_sep_f_1046_sep_338_sep_2: X
v_sep_fail_1589_sep_383_sep_0: (X) | (X) | (X) | (X)
v_sep_read__1038_sep_374_sep_1: (X) & (X) & (X) & (X)
.........
v_sep_close__1043_sep_340_sep_1: X
v_sep_close__1043_sep_340_sep_2_sep_353_sep_0: X
v_sep_close__1043_sep_357_sep_1: X
v_sep_close__1043_sep_357_sep_2_sep_370_sep_0: (X) & (X) & (X) & (X)
v_sep_f_1046_sep_338_sep_2: X
v_sep_fail_1589_sep_383_sep_0: (X) | (X) | (X) | (X)
v_sep_read__1038_sep_374_sep_1: (X) & (X) & (X) & (X)
.....................Split conj [48] 3.657443
(Reconstrcut: 32 *****)
v_sep_close__1043_sep_340_sep_1: X
v_sep_close__1043_sep_340_sep_2_sep_353_sep_0: (X) & (X) & (X) & (X) & (X)
v_sep_close__1043_sep_357_sep_1: X
v_sep_close__1043_sep_357_sep_2_sep_370_sep_0: (X) & (X) & (X) & (X)
v_sep_f_1046_sep_338_sep_2: X
v_sep_fail_1589_sep_383_sep_0: (X) | (X) | (X) | (X)
v_sep_read__1038_sep_374_sep_1: (X) & (X) & (X) & (X)
................................
v_sep_close__1043_sep_340_sep_1: X
v_sep_close__1043_sep_340_sep_2_sep_353_sep_0: (X) & (X) & (X) & (X) & (X)
v_sep_close__1043_sep_357_sep_1: X
v_sep_close__1043_sep_357_sep_2_sep_370_sep_0: (X) & (X) & (X) & (X)
v_sep_f_1046_sep_338_sep_2: X
v_sep_fail_1589_sep_383_sep_0: (X) | (X) | (X) | (X)
v_sep_read__1038_sep_374_sep_1: (X) & (X) & (X) & (X)
.........
v_sep_close__1043_sep_340_sep_1: X
v_sep_close__1043_sep_340_sep_2_sep_353_sep_0: (X) & (X) & (X) & (X) & (X)
v_sep_close__1043_sep_357_sep_1: X
v_sep_close__1043_sep_357_sep_2_sep_370_sep_0: (X) & (X) & (X) & (X)
v_sep_f_1046_sep_338_sep_2: X
v_sep_fail_1589_sep_383_sep_0: (X) | (X) | (X) | (X)
v_sep_read__1038_sep_374_sep_1: (X) & (X) & (X) & (X)
.....................
v_sep_close__1043_sep_340_sep_1: X
v_sep_close__1043_sep_340_sep_2_sep_353_sep_0: (X) & (X) & (X) & (X) & (X)
v_sep_close__1043_sep_357_sep_1: X
v_sep_close__1043_sep_357_sep_2_sep_370_sep_0: (X) & (X) & (X) & (X)
v_sep_f_1046_sep_338_sep_2: X
v_sep_fail_1589_sep_383_sep_0: (X) | (X) | (X) | (X)
v_sep_read__1038_sep_374_sep_1: (X) & (X) & (X) & (X)
.............................
v_sep_close__1043_sep_340_sep_1: X
v_sep_close__1043_sep_340_sep_2_sep_353_sep_0: (X) & (X) & (X) & (X) & (X)
v_sep_close__1043_sep_357_sep_1: X
v_sep_close__1043_sep_357_sep_2_sep_370_sep_0: (X) & (X) & (X) & (X)
v_sep_f_1046_sep_338_sep_2: X
v_sep_fail_1589_sep_383_sep_0: (X) | (X) | (X) | (X)
v_sep_read__1038_sep_374_sep_1: (X) & (X) & (X) & (X)
................................
v_sep_close__1043_sep_340_sep_1: X
v_sep_close__1043_sep_340_sep_2_sep_353_sep_0: (X) & (X) & (X) & (X) & (X)
v_sep_close__1043_sep_357_sep_1: X
v_sep_close__1043_sep_357_sep_2_sep_370_sep_0: (X) & (X) & (X) & (X)
v_sep_f_1046_sep_338_sep_2: X
v_sep_fail_1589_sep_383_sep_0: (X) | (X) | (X) | (X)
v_sep_read__1038_sep_374_sep_1: (X) & (X) & (X) & (X)
.................................(0=0) & (v_sep_fail_1589_sep_383_sep_0($7119)) -> 1=0.
(($7119-1=0) & ($7120-1=0) & ($7121-1<>0) & ($7121-3<>0)) & (v_sep_read__1038_sep_374_sep_1($7120,$7121)) -> v_sep_fail_1589_sep_383_sep_0($7119).
(0=0) & (v_sep_close__1043_sep_357_sep_2_sep_370_sep_0($7122,$7123,$7124)) & (v_sep_close__1043_sep_340_sep_2_sep_353_sep_0($7125,$7126,$7123)) & (v_sep_f_1046_sep_338_sep_2($7125,$7122,$7126)) -> v_sep_read__1038_sep_374_sep_1($7125,$7126).
(($7127-3=0) & ($7128-1=0) & (-$7127+$7129=0)) & (v_sep_close__1043_sep_357_sep_1($7128,$7127)) -> v_sep_close__1043_sep_357_sep_2_sep_370_sep_0($7128,$7127,$7129).
(0=0) & (v_sep_close__1043_sep_340_sep_2_sep_353_sep_0($7130,$7131,$7127)) & (v_sep_f_1046_sep_338_sep_2($7130,$7128,$7131)) -> v_sep_close__1043_sep_357_sep_1($7128,$7127).
(($7132-3=0) & ($7133-1=0) & (-$7132+$7134=0)) & (v_sep_close__1043_sep_340_sep_1($7133,$7132)) -> v_sep_close__1043_sep_340_sep_2_sep_353_sep_0($7133,$7132,$7134).
(0=0) & (v_sep_f_1046_sep_338_sep_2($7133,$7135,$7132)) -> v_sep_close__1043_sep_340_sep_1($7133,$7132).
($7136-3=0) & ($7137-1=0) & ($7135-1=0) -> v_sep_f_1046_sep_338_sep_2($7137,$7135,$7136).

        solution:
          P[<close__1043@340:1>]($7172:bool,$7174:int) = true
          P[<<close__1043@340:2>@353:0>]($7153:bool,$7155:int,$7157:int) = ((3 <= $7155) && ($7157 = $7155))
          P[<close__1043@357:1>]($7167:bool,$7169:int) = true
          P[<<close__1043@357:2>@370:0>]($7146:bool,$7148:int,$7150:int) = ($7148 = 3)
          P[<f_1046@338:2>]($7160:bool,$7162:bool,$7164:int) =
          ((not $7160) || (($7160 && $7162) || ($7160 && (not $7162))))
          P[<fail_1589@383:0>]($7138:bool) = false
          P[<read__1038@374:1>]($7141:bool,$7143:int) = ($7143 = 3)
        
      end HcSolver.solve_ub(273404)[4] (0.165975 sec.)
      begin HcSolver.check_validity(274108)[4]
        input:
          P[<fail_1589@383:0>](<fail_1589@383:0>:bool)|- bot
          
          P[<read__1038@374:1>](true:bool,<br_readit_1585@380:1>:int),
          ((<br_readit_1585@380:1> <> 1) && ((<br_readit_1585@380:1> <> 3) && <fail_1589@383:0>))
          |- P[<fail_1589@383:0>](<fail_1589@383:0>:bool)
          
          P[<f_1046@338:2>](<read__1038@374:0>:bool,<f_f_1578@372:3>:bool,<read__1038@374:1>:int),
          P[<<close__1043@340:2>@353:0>](<read__1038@374:0>:bool,<read__1038@374:1>:int,<f_f_1578@372:2>:int),
          P[<<close__1043@357:2>@370:0>](<f_f_1578@372:3>:bool,<f_f_1578@372:2>:int,<f_f_1578@372:5>:int)|- P[<read__1038@374:1>](
          <read__1038@374:0>:bool,<read__1038@374:1>:int)
          
          P[<close__1043@357:1>](<close__1043@357:0>:bool,<close__1043@357:1>:int),
          ((<close__1043@357:1> = 3) && ((<<close__1043@357:2>@370:0> = <close__1043@357:1>) && <close__1043@357:0>))
          |- P[<<close__1043@357:2>@370:0>](<close__1043@357:0>:bool,
                                            <close__1043@357:1>:int,<<close__1043@357:2>@370:0>:int)
          
          P[<f_1046@338:2>](<f_f_1577@355:1>:bool,<close__1043@357:0>:bool,<f_f_1577@355:0>:int),
          P[<<close__1043@340:2>@353:0>](<f_f_1577@355:1>:bool,<f_f_1577@355:0>:int,<close__1043@357:1>:int)|- P[<close__1043@357:1>](
          <close__1043@357:0>:bool,<close__1043@357:1>:int)
          
          P[<close__1043@340:1>](<close__1043@340:0>:bool,<close__1043@340:1>:int),
          ((<close__1043@340:1> = 3) && ((<<close__1043@340:2>@353:0> = <close__1043@340:1>) && <close__1043@340:0>))
          |- P[<<close__1043@340:2>@353:0>](<close__1043@340:0>:bool,
                                            <close__1043@340:1>:int,<<close__1043@340:2>@353:0>:int)
          
          P[<f_1046@338:2>](<close__1043@340:0>:bool,<f_1046@338:1>:bool,<close__1043@340:1>:int)|- P[<close__1043@340:1>](
          <close__1043@340:0>:bool,<close__1043@340:1>:int)
          
           ((<f_1046@338:2> = 3) && (<f_1046@338:0> && <f_1046@338:1>))
          |- P[<f_1046@338:2>](<f_1046@338:0>:bool,<f_1046@338:1>:bool,
                               <f_1046@338:2>:int)
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        
      end HcSolver.check_validity(274108)[4] (0.003999 sec.)
      solution:
        P[<close__1043@340:1>]($7172:bool,$7174:int) = true
        P[<<close__1043@340:2>@353:0>]($7153:bool,$7155:int,$7157:int) = ((3 <= $7155) && ($7157 = $7155))
        P[<close__1043@357:1>]($7167:bool,$7169:int) = true
        P[<<close__1043@357:2>@370:0>]($7146:bool,$7148:int,$7150:int) = ($7148 = 3)
        P[<f_1046@338:2>]($7160:bool,$7162:bool,$7164:int) =
        ((not $7160) || (($7160 && $7162) || ($7160 && (not $7162))))
        P[<fail_1589@383:0>]($7138:bool) = false
        P[<read__1038@374:1>]($7141:bool,$7143:int) = ($7143 = 3)
    end YhornInterface.solve(273403)[3] (0.170974 sec.)
    
  end RefTypeInfer.infer_etrs(236270)[2] (0.552916 sec.)
  refinement types:
    main_1574: X
    f_1582: v1:int -> X
    f_1583: v1:int -> v2:int -> X
    main_1056: v1:int -> v2:int -> (v3:unit -> X) -> X
    g_1052: v1:int -> v2:bool -> v3:int -> (v4:unit -> X) -> X
    next_1050: v1:int -> (v2:int -> X) -> X
    f_g_1581: v1:int -> v2:int -> v3:bool -> (v4:unit -> X) -> v6:int -> X
    f_1046: v1:bool -> v2:bool -> v3:{v3:int | (3 = v3)} -> (v4:unit -> X) -> X
    close__1043: v1:bool -> v2:int -> (v3:int -> X) -> X
    closeit_1041: v1:int -> (v2:int -> X) -> X
    br_closeit_1587: v1:bool -> v2:int -> (v3:int -> X) -> X
    f_f_1577: v1:int -> v2:bool -> v3:bool -> (v4:unit -> X) -> v6:int -> X
    close__1043: v1:bool -> v2:int -> (v3:int -> X) -> X
    closeit_1041: v1:int -> (v2:int -> X) -> X
    br_closeit_1587: v1:bool -> v2:int -> (v3:int -> X) -> X
    f_f_1578: v1:int -> v2:bool -> v3:int -> v4:bool -> (v5:unit -> X) -> v7:int -> X
    read__1038: v1:bool -> v2:{v2:int | (3 = v2)} -> (v3:int -> X) -> X
    readit_1036: v1:int -> (v2:int -> X) -> X
    br_readit_1585: v1:bool -> v2:int -> (v3:int -> X) -> X
    fail_1589: v1:{v1:bool | false} -> (v2:unit -> X) -> X
    f_1584: var1227:int -> var1226:int -> var1225:unit -> X
    f_closeit_1576: var1232:int -> (var1231:int -> X) -> var1229:unit -> X
    f_f_1579: var1241:int ->
              var1240:bool -> var1239:int -> var1238:int -> var1237:bool -> (var1236:unit -> X) -> var1234:int -> X
    f_f_1580: var1251:int ->
              var1250:bool ->
              var1249:int -> var1248:int -> var1247:int -> var1246:bool -> (var1245:unit -> X) -> var1243:int -> X
    f_readit_1575: var1254:int -> var1253:unit -> X
    k_main_u_1525: var1260:int -> var1259:int -> (var1258:unit -> X) -> var1256:unit -> X
    loop_1030: var1264:unit -> (var1263:unit -> X) -> X
  abstraction types:
    main_1574: X
    f_1582: v1:int -> X
    f_1583: v1:int -> v2:int -> X
    main_1056: v1:int -> v2:int -> (v3:unit -> X) -> X
    g_1052: v1:int -> v2:bool -> v3:int -> (v4:unit -> X) -> X
    next_1050: v1:int -> (v2:int -> X) -> X
    f_g_1581: v1:int -> v2:int -> v3:bool -> (v4:unit -> X) -> v6:int -> X
    f_1046: v1:bool -> v2:bool -> v3:int[v3 -> (3 = v3)] -> (v4:unit -> X) -> X
    close__1043: var1265:bool -> var1266:int -> (var1267:int -> X) -> X
    closeit_1041: var1270:int -> (var1271:int -> X) -> X
    br_closeit_1587: var1274:bool -> var1275:int -> (var1276:int -> X) -> X
    f_f_1577: v1:int -> v2:bool -> v3:bool -> (v4:unit -> X) -> v6:int -> X
    f_f_1578: v1:int -> v2:bool -> v3:int -> v4:bool -> (v5:unit -> X) -> v7:int -> X
    read__1038: v1:bool -> v2:int[v2 -> (3 = v2)] -> (v3:int -> X) -> X
    readit_1036: v1:int -> (v2:int -> X) -> X
    br_readit_1585: v1:bool -> v2:int -> (v3:int -> X) -> X
    fail_1589: v1:bool -> (v2:unit -> X) -> X
    f_1584: var1227:int -> var1226:int -> var1225:unit -> X
    f_closeit_1576: var1232:int -> (var1231:int -> X) -> var1229:unit -> X
    f_f_1579: var1241:int ->
              var1240:bool -> var1239:int -> var1238:int -> var1237:bool -> (var1236:unit -> X) -> var1234:int -> X
    f_f_1580: var1251:int ->
              var1250:bool ->
              var1249:int -> var1248:int -> var1247:int -> var1246:bool -> (var1245:unit -> X) -> var1243:int -> X
    f_readit_1575: var1254:int -> var1253:unit -> X
    k_main_u_1525: var1260:int -> var1259:int -> (var1258:unit -> X) -> var1256:unit -> X
    loop_1030: var1264:unit -> (var1263:unit -> X) -> X
  
end AbsTypeInfer.refine(236269)[1] (0.559915 sec.)
DONE!

Prefix of spurious counter-example::
0; 0; 0; 0; 0; 1; 0; 0; 0; 1; 0; 0; 0; 1; 0; 0; 0; 1; 1

Program with abstraction types (CEGAR-cycle 6)::
Main: main_1574
  main_1574 -> (rand_int f_1582)
  br_closeit_1587 b_1588 st_1042 k_closeit_1271 when b_1588 -> (k_closeit_1271 st_1042)
  br_closeit_1587 b_1588 st_1042 k_closeit_1271 when (not b_1588) ->
      (loop_1030 () (f_closeit_1576 st_1042 k_closeit_1271))
  br_readit_1585 b_1586 st_1037 k_readit_1206 when b_1586 -> (k_readit_1206 st_1037)
  br_readit_1585 b_1586 st_1037 k_readit_1206 when (not b_1586) -> (fail_1589 true (f_readit_1575 st_1037))
  close__1043 x_1044 st_1045 k_close__1309 when x_1044 -> (closeit_1041 st_1045 k_close__1309)
  close__1043 x_1044 st_1045 k_close__1309 when (not x_1044) -> (k_close__1309 st_1045)
  closeit_1041 st_1042 k_closeit_1271 when (st_1042 = 1) -> (k_closeit_1271 2)
  closeit_1041 st_1042 k_closeit_1271 when (not (st_1042 = 1)) ->
      (br_closeit_1587 (st_1042 = 3) st_1042 k_closeit_1271)
  f_1046 x_1047 y_1048 st_1049 k_f_1343 -> (close__1043 x_1047 st_1049 (f_f_1577 st_1049 x_1047 y_1048 k_f_1343))
  f_1582 x_1532 -> (rand_int (f_1583 x_1532))
  f_1583 x_1532 x_1545 -> (main_1056 x_1532 x_1545 (f_1584 x_1532 x_1545))
  f_1584 x_1532 x_1545 x_1529 -> end
  f_closeit_1576 st_1042 k_closeit_1271 x_1274 -> (k_closeit_1271 0)
  f_f_1577 st_1049 x_1047 y_1048 k_f_1343 x_1368 ->
      (close__1043 y_1048 x_1368 (f_f_1578 st_1049 x_1047 x_1368 y_1048 k_f_1343))
  f_f_1578 st_1049 x_1047 x_1368 y_1048 k_f_1343 x_1346 ->
      (read__1038 x_1047 st_1049 (f_f_1579 st_1049 x_1047 x_1346 x_1368 y_1048 k_f_1343))
  f_f_1579 st_1049 x_1047 x_1346 x_1368 y_1048 k_f_1343 x_1395 ->
      (read__1038 y_1048 x_1395 (f_f_1580 st_1049 x_1047 x_1346 x_1368 x_1395 y_1048 k_f_1343))
  f_f_1580 st_1049 x_1047 x_1346 x_1368 x_1395 y_1048 k_f_1343 x_1402 -> (f_1046 x_1047 y_1048 x_1402 k_f_1343)
  f_g_1581 b3_1053 st_1055 x_1054 k_g_1440 x_1462 -> (f_1046 x_1054 true x_1462 k_g_1440)
  f_readit_1575 st_1037 x_1209 -> _|_
  fail_1589 b k -> {fail} => (k ())
  g_1052 b3_1053 x_1054 st_1055 k_g_1440 when (b3_1053 > 0) ->
      (next_1050 st_1055 (f_g_1581 b3_1053 st_1055 x_1054 k_g_1440))
  g_1052 b3_1053 x_1054 st_1055 k_g_1440 when (not (b3_1053 > 0)) -> (f_1046 x_1054 false st_1055 k_g_1440)
  k_main_u_1525 b2_1057 b3_1058 k_main_1495 x_1498 -> (k_main_1495 ())
  loop_1030 x_1031 k_loop_1170 -> (loop_1030 () k_loop_1170)
  main_1056 b2_1057 b3_1058 k_main_1495 when (b2_1057 > 0) ->
      (g_1052 b3_1058 true 1 (k_main_u_1525 b2_1057 b3_1058 k_main_1495))
  main_1056 b2_1057 b3_1058 k_main_1495 when (not (b2_1057 > 0)) ->
      (g_1052 b3_1058 false 0 (k_main_u_1525 b2_1057 b3_1058 k_main_1495))
  next_1050 st_1051 k_next_1416 when (st_1051 = 0) -> (k_next_1416 1)
  next_1050 st_1051 k_next_1416 when (not (st_1051 = 0)) -> (k_next_1416 3)
  read__1038 x_1039 st_1040 k_read__1243 when x_1039 -> (readit_1036 st_1040 k_read__1243)
  read__1038 x_1039 st_1040 k_read__1243 when (not x_1039) -> (k_read__1243 st_1040)
  readit_1036 st_1037 k_readit_1206 when (st_1037 = 1) -> (k_readit_1206 1)
  readit_1036 st_1037 k_readit_1206 when (not (st_1037 = 1)) -> (br_readit_1585 (st_1037 = 3) st_1037 k_readit_1206)
Types:
  main_1574 : X
  close__1043 : (x_1:bool[x_1] -> x_2:int[(not x_1); x_2 >= 3] -> (x_4:int[x_2 <= 1; x_4 >= 3] -> X) -> X)
  f_1046 : (x_1:bool[x_1] ->
            x_2:bool[x_2] -> x_3:int[x_3 = 3; (not x_1) && (not x_2); x_3 = 1; (not x_1); x_3 >= 3] -> (unit -> X) -> X)
  fail_1589 : (x_1:bool[x_1] -> (unit -> X) -> X)
  loop_1030 : (unit -> (unit -> X) -> X)
  read__1038 : (x_1:bool[x_1] -> x_2:int[x_2 = 3; (not x_1); x_2 = 1] -> (x_4:int[x_2 = x_4] -> X) -> X)
  
(6-1) Abstracting ... DONE!

(6-2) Checking HORS ... DONE!

Safe!

Refinement Types:
  close_: ((x_1:{true} -> ({x_2:int | not x_1} -> Bottom)) /\ (x_3:{true} -> ({x_4:int | x_4 >= 3 && x_3} -> int)) /\ 
           (x_6:{true} -> ({x_7:int | x_7 >= 3 && x_6} -> {x_8:int | x_8 >= 3})) /\ 
           (x_9:{true} -> ({x_10:int | x_10 < 3 && x_9} -> int)) /\ 
           (x_12:{true} -> ({x_13:int | x_13 < 3 && x_12} -> ({x_14:int | x_14 >= 3} \/ {x_15:int | x_15 < 3}))) /\ 
           ({false} -> ({x_17:int | x_17 >= 3} -> int)) /\ 
           ({false} -> ({x_20:int | x_20 >= 3} -> {x_21:int | x_21 >= 3})) /\ 
           ({false} -> (x_23:{x_23:int | x_23 >= 3} -> {x_24:int | x_24 >= 3 && x_23 > 1})) /\ 
           ({false} -> ({x_26:int | x_26 < 3} -> int)) /\ 
           (x_28:{false} -> ({x_29:int | x_29 >= 3 && not x_28} -> int)) /\ 
           (x_31:{false} -> ({x_32:int | x_32 >= 3 && not x_31} -> {x_33:int | x_33 >= 3})) /\ 
           (x_34:{false} -> (x_35:{x_35:int | x_35 >= 3 && not x_34} -> {x_36:int | x_36 >= 3 && x_35 > 1})) /\ 
           (x_37:{false} -> ({x_38:int | x_38 < 3 && not x_37} -> int)) /\ 
           (x_40:{false} -> ({x_41:int | x_41 < 3 && not x_40} -> ({x_42:int | x_42 >= 3} \/ {x_43:int | x_43 < 3}))) /\
           (x_44:{false} ->
                (x_45:{x_45:int | x_45 < 3 && not x_44} ->
                     ({x_46:int | x_46 >= 3 && x_45 <= 1} \/ {x_47:int | 
                      x_47 < 3 && x_45 <= 1} \/ {x_48:int | x_48 >= 3 && x_45 > 1} \/ {x_49:int | 
                      x_49 < 3 && x_45 > 1}))) /\
           (x_50:{false} -> ({x_51:int | x_51 >= 3 && x_50} -> int)) /\ 
           (x_53:{false} -> ({x_54:int | x_54 < 3 && x_53} -> int)))
  f: ((x_1:{true} ->
           (x_2:{true} ->
                ({x_3:int | (((not (not x_1 && not x_2) && x_1) && x_3 >= 3) && x_3 <> 1) && x_3 = 3} -> Bottom))) /\
      (x_4:{true} ->
           (x_5:{true} ->
                ({x_6:int | (((not (not x_4 && not x_5) && x_4) && x_6 < 3) && x_6 = 1) && x_6 <> 3} -> Bottom))) /\
      (x_7:{true} ->
           (x_8:{false} ->
                ({x_9:int | (((not (not x_7 && not x_8) && x_7) && x_9 < 3) && x_9 = 1) && x_9 <> 3} -> Bottom))) /\
      (x_10:{false} ->
           (x_11:{true} ->
                ({x_12:int | (((not (not x_10 && not x_11) && not x_10) && x_12 < 3) && x_12 = 1) && x_12 <> 3} ->
                     Bottom))) /\
      (x_13:{false} ->
           (x_14:{false} ->
                ({x_15:int | ((((not x_14 && not x_13) && not x_13) && x_15 >= 3) && x_15 = 1) && x_15 = 3} -> Bottom))) /\
      (x_16:{false} ->
           (x_17:{false} ->
                ({x_18:int | ((((not x_17 && not x_16) && not x_16) && x_18 < 3) && x_18 = 1) && x_18 = 3} -> Bottom))) /\
      (x_19:{false} ->
           (x_20:{false} ->
                ({x_21:int | ((((not x_20 && not x_19) && not x_19) && x_21 >= 3) && x_21 <> 1) && x_21 = 3} -> Bottom))) /\
      (x_22:{false} ->
           (x_23:{false} ->
                ({x_24:int | ((((not x_23 && not x_22) && not x_22) && x_24 < 3) && x_24 <> 1) && x_24 = 3} -> Bottom))) /\
      (x_25:{false} ->
           (x_26:{false} ->
                ({x_27:int | ((((not x_26 && not x_25) && not x_25) && x_27 >= 3) && x_27 = 1) && x_27 <> 3} -> Bottom))) /\
      (x_28:{false} ->
           (x_29:{false} ->
                ({x_30:int | ((((not x_29 && not x_28) && not x_28) && x_30 < 3) && x_30 = 1) && x_30 <> 3} -> Bottom))) /\
      (x_31:{false} ->
           (x_32:{false} ->
                ({x_33:int | ((((not x_32 && not x_31) && not x_31) && x_33 >= 3) && x_33 <> 1) && x_33 <> 3} -> Bottom))) /\
      (x_34:{false} ->
           (x_35:{false} ->
                ({x_36:int | ((((not x_35 && not x_34) && not x_34) && x_36 < 3) && x_36 <> 1) && x_36 <> 3} -> Bottom))))
  loop: (unit -> Bottom)
  read_: ((x_1:{true} -> ({x_2:int | not x_1} -> Bottom)) /\ 
          (x_3:{true} -> (x_4:{x_4:int | x_4 = 1 && x_3} -> {x_5:int | x_4 = x_5})) /\ 
          (x_6:{true} -> (x_7:{x_7:int | (x_6 && x_7 <> 1) && x_7 = 3} -> {x_8:int | x_7 = x_8})) /\ 
          (x_9:{false} -> (x_10:{x_10:int | not x_9} -> {x_11:int | x_10 = x_11})) /\ 
          (x_12:{false} -> (x_13:{x_13:int | x_13 = 1 && x_12} -> {x_14:int | x_13 = x_14})))

cycles: 6
total: 7.427 sec
  abst: 0.168 sec
  mc: 2.991 sec
  refine: 3.681 sec
    exparam: 0.687 sec
