MoCHi: Model Checker for Higher-Order Programs
  TRecS version: 1.30
  OCaml version: 4.00.1
  Command: ../mochi.opt -gchi enc-rev_tricky.ml

parsed::
 let k1_1030 k_1031 r1_1032 r2_1033 =
   let u_1060 = if r2_1033 > 0 then
                  ()
                else
                  {fail} () 
   in
     k_1031 (r1_1032 + 1) (r2_1033 - 1) 
 in
 let rec h_1034 x_1035 y_1036 k_1037 =
   if x_1035 = 0 then
     k_1037 0 y_1036
   else
     h_1034 (x_1035 - 1) y_1036 (k1_1030 k_1037) 
 in
 let k2_1038 r1_1039 r2_1040 = let u_1120 = if r2_1040 = 0 then
                                              ()
                                            else
                                              {fail} () 
                               in
                                 r1_1039 
 in
 let rev_1041 x_1042 = h_1034 x_1042 x_1042 k2_1038 
 in
 let main_1043 n_1044 = if rev_1041 n_1044 >= n_1044 then
                          ()
                        else
                          {fail} () 
 in
   ()

set_target::
 let k1_1030 k_1031 r1_1032 r2_1033 =
   let u_1060 = if r2_1033 > 0 then
                  ()
                else
                  {fail} () 
   in
     k_1031 (r1_1032 + 1) (r2_1033 - 1) 
 in
 let rec h_1034 x_1035 y_1036 k_1037 =
   if x_1035 = 0 then
     k_1037 0 y_1036
   else
     h_1034 (x_1035 - 1) y_1036 (k1_1030 k_1037) 
 in
 let k2_1038 r1_1039 r2_1040 = let u_1120 = if r2_1040 = 0 then
                                              ()
                                            else
                                              {fail} () 
                               in
                                 r1_1039 
 in
 let rev_1041 x_1042 = h_1034 x_1042 x_1042 k2_1038 
 in
 let main_1043 n_1044 = if rev_1041 n_1044 >= n_1044 then
                          ()
                        else
                          {fail} () 
 in
 let main_1138 = let arg1_1137 = rand_int () 
                 in
                   main_1043 arg1_1137 
 in
   ()

copy_poly::
 let k1_1141 (k_1031:(int -> (int -> int))) (r1_1032:int) (r2_1033:int) =
   let u_1060 = if r2_1033 > 0 then
                  ()
                else
                  {fail} () 
   in
     k_1031 (r1_1032 + 1) (r2_1033 - 1) 
 in
 let rec h_1140 (x_1035:int) (y_1036:int) (k_1037:(int -> (int -> int))) =
   if x_1035 = 0 then
     k_1037 0 y_1036
   else
     h_1140 (x_1035 - 1) y_1036 (k1_1141 k_1037) 
 in
 let k2_1139 (r1_1039:int) (r2_1040:int) = let u_1120 = if r2_1040 = 0 then
                                                          ()
                                                        else
                                                          {fail} () 
                                           in
                                             r1_1039 
 in
 let rev_1041 (x_1042:int) = h_1140 x_1042 x_1042 k2_1139 
 in
 let main_1043 (n_1044:int) = if rev_1041 n_1044 >= n_1044 then
                                ()
                              else
                                {fail} () 
 in
 let main_1138 = let arg1_1137 = rand_int () 
                 in
                   main_1043 arg1_1137 
 in
   ()

CPS::
 let k1_1141 (k_1031:(int -> (int -> ((int -> X) -> X)))) (r1_1032:int) (r2_1033:int) (k_k1_1188:(
   int -> X)) =
   let k_k1_u_1201 (x_1191:unit) = k_1031 (r1_1032 + 1) (r2_1033 - 1) k_k1_1188 
   in
     if r2_1033 > 0 then
       k_k1_u_1201 ()
     else
       {|fail|} () k_k1_u_1201 
 in
 let rec h_1140 (x_1035:int) (y_1036:int) (k_1037:(int -> (int -> ((int -> X) -> X)))) (k_h_1249:(
   int -> X)) =
   if x_1035 = 0 then
     k_1037 0 y_1036 k_h_1249
   else
     h_1140 (x_1035 - 1) y_1036 (k1_1141 k_1037) k_h_1249 
 in
 let k2_1139 (r1_1039:int) (r2_1040:int) (k_k2_1318:(int -> X)) =
   let k_k2_u_1331 (x_1321:unit) = k_k2_1318 r1_1039 
   in
     if r2_1040 = 0 then
       k_k2_u_1331 ()
     else
       {|fail|} () k_k2_u_1331 
 in
 let rev_1041 (x_1042:int) (k_rev_1346:(int -> X)) = h_1140 x_1042 x_1042 k2_1139 k_rev_1346 
 in
 let main_1043 (n_1044:int) (k_main_1388:(unit -> X)) =
   rev_1041 n_1044 (fun x_1391 -> (if x_1391 >= n_1044 then
                                     k_main_1388 ()
                                   else
                                     {|fail|} () k_main_1388)) 
 in
   rand_int_cps () (fun x_1419 -> main_1043 x_1419 (fun x_1416 -> end))

Program with abstraction types (CEGAR-cycle 0)::
Main: main_1444
  main_1444 -> (rand_int f_1446)
  f_1446 x_1419 -> (main_1043 x_1419 (f_1447 x_1419))
  f_1447 x_1419 x_1416 -> end
  f_main_1445 n_1044 k_main_1388 x_1391 when (x_1391 >= n_1044) -> (k_main_1388 ())
  f_main_1445 n_1044 k_main_1388 x_1391 when (not (x_1391 >= n_1044)) -> (fail_1450 true k_main_1388)
  fail_1448 b k -> {fail} => (k ())
  fail_1449 b k -> {fail} => (k ())
  fail_1450 b k -> {fail} => (k ())
  h_1140 x_1035 y_1036 k_1037 k_h_1249 when (x_1035 = 0) -> (k_1037 0 y_1036 k_h_1249)
  h_1140 x_1035 y_1036 k_1037 k_h_1249 when (not (x_1035 = 0)) ->
      (h_1140 (x_1035 - 1) y_1036 (k1_1141 k_1037) k_h_1249)
  k1_1141 k_1031 r1_1032 r2_1033 k_k1_1188 when (r2_1033 > 0) -> (k_k1_u_1201 r1_1032 r2_1033 k_1031 k_k1_1188 ())
  k1_1141 k_1031 r1_1032 r2_1033 k_k1_1188 when (not (r2_1033 > 0)) ->
      (fail_1448 true (k_k1_u_1201 r1_1032 r2_1033 k_1031 k_k1_1188))
  k2_1139 r1_1039 r2_1040 k_k2_1318 when (r2_1040 = 0) -> (k_k2_u_1331 r1_1039 r2_1040 k_k2_1318 ())
  k2_1139 r1_1039 r2_1040 k_k2_1318 when (not (r2_1040 = 0)) ->
      (fail_1449 true (k_k2_u_1331 r1_1039 r2_1040 k_k2_1318))
  k_k1_u_1201 r1_1032 r2_1033 k_1031 k_k1_1188 x_1191 -> (k_1031 (r1_1032 + 1) (r2_1033 - 1) k_k1_1188)
  k_k2_u_1331 r1_1039 r2_1040 k_k2_1318 x_1321 -> (k_k2_1318 r1_1039)
  main_1043 n_1044 k_main_1388 -> (rev_1041 n_1044 (f_main_1445 n_1044 k_main_1388))
  rev_1041 x_1042 k_rev_1346 -> (h_1140 x_1042 x_1042 k2_1139 k_rev_1346)
Types:
  main_1444 : X
  fail_1448 : (x_1:bool[x_1] -> (unit -> X) -> X)
  fail_1449 : (x_1:bool[x_1] -> (unit -> X) -> X)
  fail_1450 : (x_1:bool[x_1] -> (unit -> X) -> X)
  h_1140 : (int -> int -> (int -> int -> (int -> X) -> X) -> (int -> X) -> X)
  
(0-1) Abstracting ... DONE!

(0-2) Checking HORS ... DONE!

Error trace::
  main_1444 ... --> 
  f_1446 ... --> 
  main_1043 ... --> 
  rev_1041 ... --> 
  h_1140 [1/2] ... --> 
  k2_1139 [2/2] ... --> 
  fail_1449 ... --> fail -->
  ERROR!

Spurious counter-example::
  0; 0; 0; 0; 0; 1; 0

(0-3) Checking counter-example ... DONE!

(0-4) Discovering predicates ... 
begin AbsTypeInfer.refine(135)[1]
  program:
    main_1444  | true = ((Random.int 0) f_1446)
    f_1446 x_1419 | true = (main_1043 x_1419
                                      (f_1447 x_1419))
    f_1447 x_1419 x_1416 | true = end
    f_main_1445 n_1044 k_main_1388 x_1391 | (x_1391 >= n_1044) = (k_main_1388 ())
    f_main_1445 n_1044 k_main_1388 x_1391 | (not (x_1391 >= n_1044)) = (
    fail_1450 true
              k_main_1388)
    fail_1448 b k | true = (fail ())
    fail_1449 b k | true = (fail ())
    fail_1450 b k | true = (fail ())
    h_1140 x_1035 y_1036 k_1037 k_h_1249 | (x_1035 = 0) = (k_1037 0
                                                                  y_1036
                                                                  k_h_1249)
    h_1140 x_1035 y_1036 k_1037 k_h_1249 | (not (x_1035 = 0)) = (h_1140 (
                                                                    x_1035 - 1)
                                                                    y_1036
                                                                    (k1_1141 k_1037)
                                                                    k_h_1249)
    k1_1141 k_1031 r1_1032 r2_1033 k_k1_1188 | (r2_1033 > 0) = (k_k1_u_1201 r1_1032
                                                                    r2_1033
                                                                    k_1031
                                                                    k_k1_1188
                                                                    ())
    k1_1141 k_1031 r1_1032 r2_1033 k_k1_1188 | (not (r2_1033 > 0)) = (
    fail_1448 true
              (k_k1_u_1201 r1_1032
                           r2_1033
                           k_1031
                           k_k1_1188))
    k2_1139 r1_1039 r2_1040 k_k2_1318 | (r2_1040 = 0) = (k_k2_u_1331 r1_1039
                                                                    r2_1040
                                                                    k_k2_1318
                                                                    ())
    k2_1139 r1_1039 r2_1040 k_k2_1318 | (not (r2_1040 = 0)) = (fail_1449 true
                                                                    (k_k2_u_1331 r1_1039
                                                                    r2_1040
                                                                    k_k2_1318))
    k_k1_u_1201 r1_1032 r2_1033 k_1031 k_k1_1188 x_1191 | true = (k_1031 (
                                                                    r1_1032 + 1)
                                                                    (r2_1033 - 1)
                                                                    k_k1_1188)
    k_k2_u_1331 r1_1039 r2_1040 k_k2_1318 x_1321 | true = (k_k2_1318 r1_1039)
    main_1043 n_1044 k_main_1388 | true = (rev_1041 n_1044
                                                    (f_main_1445 n_1044
                                                                 k_main_1388))
    rev_1041 x_1042 k_rev_1346 | true = (h_1140 x_1042
                                                x_1042
                                                k2_1139
                                                k_rev_1346)
    main_1444:X
    f_1446:int -> X
    f_1447:int -> unit -> X
    f_main_1445:int -> (unit -> X) -> int -> X
    fail_1448:bool -> (unit -> X) -> X
    fail_1449:bool -> (unit -> X) -> X
    fail_1450:bool -> (unit -> X) -> X
    h_1140:int -> int -> (int -> int -> (int -> X) -> X) -> (int -> X) -> X
    k1_1141:(int -> int -> (int -> X) -> X) -> int -> int -> (int -> X) -> X
    k2_1139:int -> int -> (int -> X) -> X
    k_k1_u_1201:int -> int -> (int -> int -> (int -> X) -> X) -> (int -> X) -> unit -> X
    k_k2_u_1331:int -> int -> (int -> X) -> unit -> X
    main_1043:int -> (unit -> X) -> X
    rev_1041:int -> (int -> X) -> X
  inlined functions: f_1446,f_1447,f_main_1445,k1_1141,k2_1139,k_k1_u_1201,k_k2_u_1331,main_1043,rev_1041
  counterexample: 0:0:0:0:0:1:0
  error traces:
    [true.nop(<f_1446@4:0> = var2)
     [true.(<main_1043@6:0> = <f_1446@4:0>)
      [true.(<rev_1041@8:0> = <main_1043@6:0>)
       [true.((<h_1140@10:0> = <rev_1041@8:0>) && (<h_1140@10:1> = <rev_1041@8:0>))
        [(<h_1140@10:0> = 0).((<<h_1140@10:2>@13:0> = 0) && (<<h_1140@10:2>@13:1> = <h_1140@10:1>))
         [true.((<k2_1139@15:0> = <<h_1140@10:2>@13:0>) && (<k2_1139@15:1> = <<h_1140@10:2>@13:1>))
          [(not (<k2_1139@15:1> = 0)).(<fail_1449@18:0> = true)[true.error
  begin RefTypeInfer.infer_etrs(136)[2]
    horn clauses:
      P[<fail_1449@18:0>](<fail_1449@18:0>:bool)|- bot
      
      P[<k2_1139@15:1>](<k2_1139@15:0>:int,<k2_1139@15:1>:int), ((<k2_1139@15:1> <> 0) && <fail_1449@18:0>)
      |- P[<fail_1449@18:0>](<fail_1449@18:0>:bool)
      
      P[<rev_1041@8:0>](<h_1140@10:0>:int),
      P[<<h_1140@10:2>@13:1>](<h_1140@10:0>:int,<h_1140@10:0>:int,<k2_1139@15:0>:int,<k2_1139@15:1>:int)|- P[<k2_1139@15:1>](
      <k2_1139@15:0>:int,<k2_1139@15:1>:int)
      
      P[<h_1140@10:1>](<h_1140@10:0>:int,<h_1140@10:1>:int),
      ((<h_1140@10:0> = 0) && ((<<h_1140@10:2>@13:0> = 0) && (<<h_1140@10:2>@13:1> = <h_1140@10:1>)))
      |- P[<<h_1140@10:2>@13:1>](<h_1140@10:0>:int,<h_1140@10:1>:int,
                                 <<h_1140@10:2>@13:0>:int,<<h_1140@10:2>@13:1>:int)
      
      P[<rev_1041@8:0>](<h_1140@10:1>:int), (<h_1140@10:1> = <h_1140@10:0>)
      |- P[<h_1140@10:1>](<h_1140@10:0>:int,<h_1140@10:1>:int)
      
      P[<main_1043@6:0>](<rev_1041@8:0>:int)|- P[<rev_1041@8:0>](<rev_1041@8:0>:int)
      
      P[<f_1446@4:0>](<main_1043@6:0>:int)|- P[<main_1043@6:0>](<main_1043@6:0>:int)
      
      |- P[<f_1446@4:0>](<f_1446@4:0>:int)
    call trees:
      <main_1444@1>
        <f_1446@4>
          <main_1043@6>
            <rev_1041@8>
              <h_1140@10>
              </<h_1140@10:2>@13>
              <k2_1139@15>
                <fail_1449@18>
    inlined horn clauses:
      P[<fail_1449@18:0>](<fail_1449@18:0>:bool)|- bot
      
      P[<<h_1140@10:2>@13:1>](var3:int,var3:int,<k2_1139@15:0>:int,<k2_1139@15:1>:int),
      ((<k2_1139@15:1> <> 0) && <fail_1449@18:0>) |- P[<fail_1449@18:0>](
      <fail_1449@18:0>:bool)
      
      P[<h_1140@10:1>](<h_1140@10:0>:int,<h_1140@10:1>:int),
      ((<h_1140@10:0> = 0) && ((<<h_1140@10:2>@13:0> = 0) && (<<h_1140@10:2>@13:1> = <h_1140@10:1>)))
      |- P[<<h_1140@10:2>@13:1>](<h_1140@10:0>:int,<h_1140@10:1>:int,
                                 <<h_1140@10:2>@13:0>:int,<<h_1140@10:2>@13:1>:int)
      
       (<h_1140@10:1> = <h_1140@10:0>) |- P[<h_1140@10:1>](<h_1140@10:0>:int,
                                                           <h_1140@10:1>:int)
    begin ParamSubstInfer.infer(1144)[3]
      
    end ParamSubstInfer.infer(1144)[3] (0.008999 sec.)
    inferred extra parameters:
      
    begin RefTypeInfer.elim_coeffs(1146)[3]
      
    end RefTypeInfer.elim_coeffs(1146)[3] (0.000000 sec.)
    begin GenHcSolver.solve(1339)[3]
      Horn clauses:
        P[<fail_1449@18:0>](<fail_1449@18:0>:bool)|- bot
        
        P[<<h_1140@10:2>@13:1>](var3:int,var3:int,<k2_1139@15:0>:int,<k2_1139@15:1>:int),
        ((<k2_1139@15:1> <> 0) && <fail_1449@18:0>) |- P[<fail_1449@18:0>](
        <fail_1449@18:0>:bool)
        
        P[<h_1140@10:1>](<h_1140@10:0>:int,<h_1140@10:1>:int),
        ((<h_1140@10:0> = 0) && ((<<h_1140@10:2>@13:0> = 0) && (<<h_1140@10:2>@13:1> = <h_1140@10:1>)))
        |- P[<<h_1140@10:2>@13:1>](<h_1140@10:0>:int,<h_1140@10:1>:int,
                                   <<h_1140@10:2>@13:0>:int,<<h_1140@10:2>@13:1>:int)
        
         (<h_1140@10:1> = <h_1140@10:0>) |- P[<h_1140@10:1>](<h_1140@10:0>:int,
                                                             <h_1140@10:1>:int)
      lower bounds:
        P[<h_1140@10:1>](<h_1140@10:0>:int,<h_1140@10:1>:int) = (<h_1140@10:1> = <h_1140@10:0>)
        P[<<h_1140@10:2>@13:1>](<h_1140@10:0>:int,<h_1140@10:1>:int,<<h_1140@10:2>@13:0>:int,<<h_1140@10:2>@13:1>:int) =
        ((<h_1140@10:0> = 0) &&
         ((<<h_1140@10:2>@13:0> = 0) && ((<h_1140@10:1> = <<h_1140@10:2>@13:1>) && (<h_1140@10:1> = <h_1140@10:0>))))
        P[<fail_1449@18:0>](<fail_1449@18:0>:bool) = false
      upper bounds:
        P[<fail_1449@18:0>](var5:bool) = true
      begin GenHcSolver.classify_pids(2649)[4]
        output:
          [<fail_1449@18:0>]
      end GenHcSolver.classify_pids(2649)[4] (0.000000 sec.)
      lb:false
      nub:false
      begin ApronInterface.convex_hull_interpolate(2652)[4]
        lb:false
        nub:false
        lb':false
        nub':false
        begin InterpProver.interpolate(2653)[5]
          begin InterpProver.interpolate_fresh(2654)[6]
            begin InterpProver.interpolate_log(2655)[7]
              input1: false
              input2: false
              begin InterpProver.interpolate_check(2656)[8]
                begin InterpProver.interpolate_simplify(2657)[9]
                  begin InterpProver.interpolate_quick(2670)[10]
                    
                  end InterpProver.interpolate_quick(2670)[10] (0.000000 sec.)
                  begin minimizing # of disjunctions(2674)[10]
                    input: false
                    output: false
                  end minimizing # of disjunctions(2674)[10] (0.000000 sec.)
                  
                end InterpProver.interpolate_simplify(2657)[9] (0.001000 sec.)
                
              end InterpProver.interpolate_check(2656)[8] (0.001000 sec.)
              output: false
            end InterpProver.interpolate_log(2655)[7] (0.001000 sec.)
            
          end InterpProver.interpolate_fresh(2654)[6] (0.001000 sec.)
          
        end InterpProver.interpolate(2653)[5] (0.001000 sec.)
        output:
          P[<fail_1449@18:0>](<fail_1449@18:0>:bool) = false
      end ApronInterface.convex_hull_interpolate(2652)[4] (0.001000 sec.)
      Horn clauses:
        P[<<h_1140@10:2>@13:1>](var3:int,var3:int,<k2_1139@15:0>:int,<k2_1139@15:1>:int), (<k2_1139@15:1> <> 0) |- bot
        
        P[<h_1140@10:1>](<h_1140@10:0>:int,<h_1140@10:1>:int),
        ((<h_1140@10:0> = 0) && ((<<h_1140@10:2>@13:0> = 0) && (<<h_1140@10:2>@13:1> = <h_1140@10:1>)))
        |- P[<<h_1140@10:2>@13:1>](<h_1140@10:0>:int,<h_1140@10:1>:int,
                                   <<h_1140@10:2>@13:0>:int,<<h_1140@10:2>@13:1>:int)
        
         (<h_1140@10:1> = <h_1140@10:0>) |- P[<h_1140@10:1>](<h_1140@10:0>:int,
                                                             <h_1140@10:1>:int)
      lower bounds:
        P[<h_1140@10:1>](<h_1140@10:0>:int,<h_1140@10:1>:int) = (<h_1140@10:1> = <h_1140@10:0>)
        P[<<h_1140@10:2>@13:1>](<h_1140@10:0>:int,<h_1140@10:1>:int,<<h_1140@10:2>@13:0>:int,<<h_1140@10:2>@13:1>:int) =
        ((<h_1140@10:0> = 0) &&
         ((<<h_1140@10:2>@13:0> = 0) && ((<h_1140@10:1> = <<h_1140@10:2>@13:1>) && (<h_1140@10:1> = <h_1140@10:0>))))
      upper bounds:
        P[<<h_1140@10:2>@13:1>](var6:int,var7:int,var8:int,var9:int) = ((var9 = 0) || (var6 <> var7))
      begin GenHcSolver.classify_pids(4288)[4]
        output:
          [<<h_1140@10:2>@13:1>]
      end GenHcSolver.classify_pids(4288)[4] (0.000000 sec.)
      lb:((<h_1140@10:0> = 0) &&
          ((<<h_1140@10:2>@13:0> = 0) && ((<h_1140@10:1> = <<h_1140@10:2>@13:1>) && (<h_1140@10:1> = <h_1140@10:0>))))
      nub:(not ((<<h_1140@10:2>@13:1> = 0) || (<h_1140@10:0> <> <h_1140@10:1>)))
      begin ApronInterface.convex_hull_interpolate(4291)[4]
        lb:((<h_1140@10:0> = 0) &&
            ((<<h_1140@10:2>@13:0> = 0) && ((<h_1140@10:1> = <<h_1140@10:2>@13:1>) && (<h_1140@10:1> = <h_1140@10:0>))))
        nub:(not ((<<h_1140@10:2>@13:1> = 0) || (<h_1140@10:0> <> <h_1140@10:1>)))
        lb':((<h_1140@10:0> = 0) &&
             ((<<h_1140@10:2>@13:0> = 0) && ((<h_1140@10:1> = <<h_1140@10:2>@13:1>) && (<h_1140@10:1> = <h_1140@10:0>))))
        nub':(not ((<<h_1140@10:2>@13:1> = 0) || (<h_1140@10:0> <> <h_1140@10:1>)))
        begin InterpProver.interpolate(4292)[5]
          begin InterpProver.interpolate_fresh(4293)[6]
            begin InterpProver.interpolate_log(4294)[7]
              input1: ((<h_1140@10:0> = 0) &&
                       ((<<h_1140@10:2>@13:0> = 0) &&
                        ((<h_1140@10:1> = <<h_1140@10:2>@13:1>) && (<h_1140@10:1> = <h_1140@10:0>))))
              input2: (not ((<<h_1140@10:2>@13:1> = 0) || (<h_1140@10:0> <> <h_1140@10:1>)))
              begin InterpProver.interpolate_check(4295)[8]
                begin InterpProver.interpolate_simplify(4296)[9]
                  begin InterpProver.interpolate_quick(4471)[10]
                    begin CsisatInterface.interpolate_csisat_wrap(4480)[11]
                      begin CsisatInterface.interpolate_csisat_post_process(4481)[12]
                        begin CsisatInterface.interpolate_csisat_log(4482)[13]
                          input1: (0 = v_sep_h_1140_sep_10_sep_0 & v_sep_h_1140_sep_10_sep_0 = v_sep_h_1140_sep_10_sep_2_sep_13_sep_1 & v_sep_h_1140_sep_10_sep_1 = v_sep_h_1140_sep_10_sep_2_sep_13_sep_1)
                          input2: (not 0 = v_sep_h_1140_sep_10_sep_2_sep_13_sep_1 & v_sep_h_1140_sep_10_sep_0 = v_sep_h_1140_sep_10_sep_1)
                          begin CsisatInterface.interpolate_csisat_raw(4483)[14]
                            
                          end CsisatInterface.interpolate_csisat_raw(4483)[14] (0.000000 sec.)
                          output: 0 = v_sep_h_1140_sep_10_sep_2_sep_13_sep_1
                          
                        end CsisatInterface.interpolate_csisat_log(4482)[13] (0.000000 sec.)
                        after simplification: 0 = v_sep_h_1140_sep_10_sep_2_sep_13_sep_1
                        after dnf conversion: ((0 = v_sep_h_1140_sep_10_sep_2_sep_13_sep_1))
                        
                      end CsisatInterface.interpolate_csisat_post_process(4481)[12] (0.000000 sec.)
                      
                    end CsisatInterface.interpolate_csisat_wrap(4480)[11] (0.000000 sec.)
                    
                  end InterpProver.interpolate_quick(4471)[10] (0.000000 sec.)
                  
                end InterpProver.interpolate_simplify(4296)[9] (0.001000 sec.)
                
              end InterpProver.interpolate_check(4295)[8] (0.002000 sec.)
              output: (0 = <<h_1140@10:2>@13:1>)
            end InterpProver.interpolate_log(4294)[7] (0.002000 sec.)
            
          end InterpProver.interpolate_fresh(4293)[6] (0.002000 sec.)
          
        end InterpProver.interpolate(4292)[5] (0.002000 sec.)
        output:
          P[<<h_1140@10:2>@13:1>](<h_1140@10:0>:int,<h_1140@10:1>:int,<<h_1140@10:2>@13:0>:int,<<h_1140@10:2>@13:1>:int) =
          (0 = <<h_1140@10:2>@13:1>)
      end ApronInterface.convex_hull_interpolate(4291)[4] (0.002000 sec.)
      Horn clauses:
        P[<h_1140@10:1>](0:int,<<h_1140@10:2>@13:1>:int), (0 <> <<h_1140@10:2>@13:1>) |- bot
        
         (<h_1140@10:1> = <h_1140@10:0>) |- P[<h_1140@10:1>](<h_1140@10:0>:int,
                                                             <h_1140@10:1>:int)
      lower bounds:
        P[<h_1140@10:1>](<h_1140@10:0>:int,<h_1140@10:1>:int) = (<h_1140@10:1> = <h_1140@10:0>)
      upper bounds:
        P[<h_1140@10:1>](var10:int,var11:int) = ((var10 <> 0) || (0 = var11))
      begin GenHcSolver.classify_pids(5144)[4]
        output:
          [<h_1140@10:1>]
      end GenHcSolver.classify_pids(5144)[4] (0.000000 sec.)
      lb:(<h_1140@10:1> = <h_1140@10:0>)
      nub:(not ((<h_1140@10:0> <> 0) || (0 = <h_1140@10:1>)))
      begin ApronInterface.convex_hull_interpolate(5147)[4]
        lb:(<h_1140@10:1> = <h_1140@10:0>)
        nub:(not ((<h_1140@10:0> <> 0) || (0 = <h_1140@10:1>)))
        lb':(<h_1140@10:1> = <h_1140@10:0>)
        nub':(not ((<h_1140@10:0> <> 0) || (0 = <h_1140@10:1>)))
        begin InterpProver.interpolate(5148)[5]
          begin InterpProver.interpolate_fresh(5149)[6]
            begin InterpProver.interpolate_log(5150)[7]
              input1: (<h_1140@10:1> = <h_1140@10:0>)
              input2: (not ((<h_1140@10:0> <> 0) || (0 = <h_1140@10:1>)))
              begin InterpProver.interpolate_check(5151)[8]
                begin InterpProver.interpolate_simplify(5152)[9]
                  begin InterpProver.interpolate_quick(5183)[10]
                    begin CsisatInterface.interpolate_csisat_wrap(5192)[11]
                      begin CsisatInterface.interpolate_csisat_post_process(5193)[12]
                        begin CsisatInterface.interpolate_csisat_log(5194)[13]
                          input1: v_sep_h_1140_sep_10_sep_0 = v_sep_h_1140_sep_10_sep_1
                          input2: (not 0 = v_sep_h_1140_sep_10_sep_1 & 0 = v_sep_h_1140_sep_10_sep_0)
                          begin CsisatInterface.interpolate_csisat_raw(5195)[14]
                            
                          end CsisatInterface.interpolate_csisat_raw(5195)[14] (0.000000 sec.)
                          output: v_sep_h_1140_sep_10_sep_0 = v_sep_h_1140_sep_10_sep_1
                          
                        end CsisatInterface.interpolate_csisat_log(5194)[13] (0.000000 sec.)
                        after simplification: v_sep_h_1140_sep_10_sep_0 = v_sep_h_1140_sep_10_sep_1
                        after dnf conversion: ((v_sep_h_1140_sep_10_sep_0 = v_sep_h_1140_sep_10_sep_1))
                        
                      end CsisatInterface.interpolate_csisat_post_process(5193)[12] (0.000000 sec.)
                      
                    end CsisatInterface.interpolate_csisat_wrap(5192)[11] (0.000000 sec.)
                    
                  end InterpProver.interpolate_quick(5183)[10] (0.000000 sec.)
                  
                end InterpProver.interpolate_simplify(5152)[9] (0.000000 sec.)
                
              end InterpProver.interpolate_check(5151)[8] (0.001000 sec.)
              output: (<h_1140@10:0> = <h_1140@10:1>)
            end InterpProver.interpolate_log(5150)[7] (0.001000 sec.)
            
          end InterpProver.interpolate_fresh(5149)[6] (0.001000 sec.)
          
        end InterpProver.interpolate(5148)[5] (0.001000 sec.)
        output:
          P[<h_1140@10:1>](<h_1140@10:0>:int,<h_1140@10:1>:int) = (<h_1140@10:0> = <h_1140@10:1>)
      end ApronInterface.convex_hull_interpolate(5147)[4] (0.001000 sec.)
      begin HcSolver.check_validity(5309)[4]
        input:
          P[<fail_1449@18:0>](<fail_1449@18:0>:bool)|- bot
          
          P[<<h_1140@10:2>@13:1>](var3:int,var3:int,<k2_1139@15:0>:int,<k2_1139@15:1>:int),
          ((<k2_1139@15:1> <> 0) && <fail_1449@18:0>) |- P[<fail_1449@18:0>](
          <fail_1449@18:0>:bool)
          
          P[<h_1140@10:1>](<h_1140@10:0>:int,<h_1140@10:1>:int),
          ((<h_1140@10:0> = 0) && ((<<h_1140@10:2>@13:0> = 0) && (<<h_1140@10:2>@13:1> = <h_1140@10:1>)))
          |- P[<<h_1140@10:2>@13:1>](<h_1140@10:0>:int,<h_1140@10:1>:int,
                                     <<h_1140@10:2>@13:0>:int,<<h_1140@10:2>@13:1>:int)
          
           (<h_1140@10:1> = <h_1140@10:0>) |- P[<h_1140@10:1>](<h_1140@10:0>:int,
                                                               <h_1140@10:1>:int)
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        
      end HcSolver.check_validity(5309)[4] (0.001000 sec.)
      solution:
        P[<fail_1449@18:0>](<fail_1449@18:0>:bool) = false
        P[<<h_1140@10:2>@13:1>](<h_1140@10:0>:int,<h_1140@10:1>:int,<<h_1140@10:2>@13:0>:int,<<h_1140@10:2>@13:1>:int) =
        (0 = <<h_1140@10:2>@13:1>)
        P[<h_1140@10:1>](<h_1140@10:0>:int,<h_1140@10:1>:int) = (<h_1140@10:0> = <h_1140@10:1>)
    end GenHcSolver.solve(1339)[3] (0.028996 sec.)
    begin GenHcSolver.solve(5647)[3]
      Horn clauses:
        P[<fail_1449@18:0>](<fail_1449@18:0>:bool)|- bot
        
        P[<<h_1140@10:2>@13:1>](var3:int,var3:int,<k2_1139@15:0>:int,<k2_1139@15:1>:int),
        ((<k2_1139@15:1> <> 0) && <fail_1449@18:0>) |- P[<fail_1449@18:0>](
        <fail_1449@18:0>:bool)
        
        P[<h_1140@10:1>](<h_1140@10:0>:int,<h_1140@10:1>:int),
        ((<h_1140@10:0> = 0) && ((<<h_1140@10:2>@13:0> = 0) && (<<h_1140@10:2>@13:1> = <h_1140@10:1>)))
        |- P[<<h_1140@10:2>@13:1>](<h_1140@10:0>:int,<h_1140@10:1>:int,
                                   <<h_1140@10:2>@13:0>:int,<<h_1140@10:2>@13:1>:int)
        
         (<h_1140@10:1> = <h_1140@10:0>) |- P[<h_1140@10:1>](<h_1140@10:0>:int,
                                                             <h_1140@10:1>:int)
      lower bounds:
        P[<h_1140@10:1>](<h_1140@10:0>:int,<h_1140@10:1>:int) = (<h_1140@10:1> = <h_1140@10:0>)
        P[<<h_1140@10:2>@13:1>](<h_1140@10:0>:int,<h_1140@10:1>:int,<<h_1140@10:2>@13:0>:int,<<h_1140@10:2>@13:1>:int) =
        ((<h_1140@10:0> = 0) &&
         ((<<h_1140@10:2>@13:0> = 0) && ((<h_1140@10:1> = <<h_1140@10:2>@13:1>) && (<h_1140@10:1> = <h_1140@10:0>))))
        P[<fail_1449@18:0>](<fail_1449@18:0>:bool) = false
      upper bounds:
        P[<fail_1449@18:0>](var13:bool) = true
      begin GenHcSolver.classify_pids(6957)[4]
        output:
          [<fail_1449@18:0>]
      end GenHcSolver.classify_pids(6957)[4] (0.000000 sec.)
      lb:false
      nub:false
      begin ApronInterface.convex_hull_interpolate(6960)[4]
        lb:false
        nub:false
        begin ExtFormula.Formula.case_analysis_boolean(6963)[5]
          ts: false
          
        end ExtFormula.Formula.case_analysis_boolean(6963)[5] (0.000000 sec.)
        begin ExtFormula.Formula.case_analysis_boolean(6968)[5]
          ts: false
          
        end ExtFormula.Formula.case_analysis_boolean(6968)[5] (0.000000 sec.)
        lb':(-1 >= 0)
        nub':(-1 >= 0)
        begin InterpProver.interpolate(6971)[5]
          begin InterpProver.interpolate_fresh(6972)[6]
            begin InterpProver.interpolate_log(6973)[7]
              input1: (-1 >= 0)
              input2: (-1 >= 0)
              begin InterpProver.interpolate_check(6974)[8]
                begin InterpProver.interpolate_simplify(6975)[9]
                  begin InterpProver.interpolate_quick(6990)[10]
                    
                  end InterpProver.interpolate_quick(6990)[10] (0.000000 sec.)
                  begin minimizing # of disjunctions(6994)[10]
                    input: false
                    output: false
                  end minimizing # of disjunctions(6994)[10] (0.000000 sec.)
                  
                end InterpProver.interpolate_simplify(6975)[9] (0.000000 sec.)
                
              end InterpProver.interpolate_check(6974)[8] (0.000999 sec.)
              output: false
            end InterpProver.interpolate_log(6973)[7] (0.000999 sec.)
            
          end InterpProver.interpolate_fresh(6972)[6] (0.000999 sec.)
          
        end InterpProver.interpolate(6971)[5] (0.000999 sec.)
        output:
          P[<fail_1449@18:0>](<fail_1449@18:0>:bool) = false
      end ApronInterface.convex_hull_interpolate(6960)[4] (0.000999 sec.)
      Horn clauses:
        P[<<h_1140@10:2>@13:1>](var3:int,var3:int,<k2_1139@15:0>:int,<k2_1139@15:1>:int), (<k2_1139@15:1> <> 0) |- bot
        
        P[<h_1140@10:1>](<h_1140@10:0>:int,<h_1140@10:1>:int),
        ((<h_1140@10:0> = 0) && ((<<h_1140@10:2>@13:0> = 0) && (<<h_1140@10:2>@13:1> = <h_1140@10:1>)))
        |- P[<<h_1140@10:2>@13:1>](<h_1140@10:0>:int,<h_1140@10:1>:int,
                                   <<h_1140@10:2>@13:0>:int,<<h_1140@10:2>@13:1>:int)
        
         (<h_1140@10:1> = <h_1140@10:0>) |- P[<h_1140@10:1>](<h_1140@10:0>:int,
                                                             <h_1140@10:1>:int)
      lower bounds:
        P[<h_1140@10:1>](<h_1140@10:0>:int,<h_1140@10:1>:int) = (<h_1140@10:1> = <h_1140@10:0>)
        P[<<h_1140@10:2>@13:1>](<h_1140@10:0>:int,<h_1140@10:1>:int,<<h_1140@10:2>@13:0>:int,<<h_1140@10:2>@13:1>:int) =
        ((<h_1140@10:0> = 0) &&
         ((<<h_1140@10:2>@13:0> = 0) && ((<h_1140@10:1> = <<h_1140@10:2>@13:1>) && (<h_1140@10:1> = <h_1140@10:0>))))
      upper bounds:
        P[<<h_1140@10:2>@13:1>](var14:int,var15:int,var16:int,var17:int) = ((var17 = 0) || (var14 <> var15))
      begin GenHcSolver.classify_pids(8615)[4]
        output:
          [<<h_1140@10:2>@13:1>]
      end GenHcSolver.classify_pids(8615)[4] (0.000000 sec.)
      lb:((<h_1140@10:0> = 0) &&
          ((<<h_1140@10:2>@13:0> = 0) && ((<h_1140@10:1> = <<h_1140@10:2>@13:1>) && (<h_1140@10:1> = <h_1140@10:0>))))
      nub:(not ((<<h_1140@10:2>@13:1> = 0) || (<h_1140@10:0> <> <h_1140@10:1>)))
      begin ApronInterface.convex_hull_interpolate(8618)[4]
        lb:((<h_1140@10:0> = 0) &&
            ((<<h_1140@10:2>@13:0> = 0) && ((<h_1140@10:1> = <<h_1140@10:2>@13:1>) && (<h_1140@10:1> = <h_1140@10:0>))))
        nub:(not ((<<h_1140@10:2>@13:1> = 0) || (<h_1140@10:0> <> <h_1140@10:1>)))
        begin ExtFormula.Formula.case_analysis_boolean(8662)[5]
          ts: ((<h_1140@10:0> = 0) &&
               ((<<h_1140@10:2>@13:0> = 0) &&
                ((<h_1140@10:1> = <<h_1140@10:2>@13:1>) && (<h_1140@10:1> = <h_1140@10:0>))))
          
        end ExtFormula.Formula.case_analysis_boolean(8662)[5] (0.000000 sec.)
        begin ExtFormula.Formula.case_analysis_boolean(8685)[5]
          ts: ((<<h_1140@10:2>@13:1> <> 0) && (<h_1140@10:0> = <h_1140@10:1>))
          
        end ExtFormula.Formula.case_analysis_boolean(8685)[5] (0.000000 sec.)
        lb':((<<h_1140@10:2>@13:1> = 0) && ((<<h_1140@10:2>@13:0> = 0) && ((<h_1140@10:1> = 0) && (<h_1140@10:0> = 0))))
        nub':((<h_1140@10:1> + (-1 * <h_1140@10:0>)) = 0)
        begin InterpProver.interpolate(8691)[5]
          begin InterpProver.interpolate_fresh(8692)[6]
            begin InterpProver.interpolate_log(8693)[7]
              input1: ((<<h_1140@10:2>@13:1> = 0) &&
                       ((<<h_1140@10:2>@13:0> = 0) && ((<h_1140@10:1> = 0) && (<h_1140@10:0> = 0))))
              input2: ((<h_1140@10:1> + (-1 * <h_1140@10:0>)) = 0)
              begin InterpProver.interpolate_check(8694)[8]
                begin InterpProver.interpolate_simplify(8695)[9]
                  begin InterpProver.interpolate_quick(8753)[10]
                    begin CsisatInterface.interpolate_csisat_wrap(8762)[11]
                      begin CsisatInterface.interpolate_csisat_post_process(8763)[12]
                        begin CsisatInterface.interpolate_csisat_log(8764)[13]
                          input1: (0 = v_sep_h_1140_sep_10_sep_0 & 0 = v_sep_h_1140_sep_10_sep_1)
                          input2: v_sep_h_1140_sep_10_sep_0 = v_sep_h_1140_sep_10_sep_1
                          begin CsisatInterface.interpolate_csisat_raw(8765)[14]
                            
                          end CsisatInterface.interpolate_csisat_raw(8765)[14] (0.000000 sec.)
                          
                        end CsisatInterface.interpolate_csisat_log(8764)[13] (0.000000 sec.)
                        
                      end CsisatInterface.interpolate_csisat_post_process(8763)[12] (0.000000 sec.)
                      
                    end CsisatInterface.interpolate_csisat_wrap(8762)[11] (0.000000 sec.)
                    
                  end InterpProver.interpolate_quick(8753)[10] (0.001000 sec.)
                  
                end InterpProver.interpolate_simplify(8695)[9] (0.002000 sec.)
                
              end InterpProver.interpolate_check(8694)[8] (0.002000 sec.)
              there is no interpolant
            end InterpProver.interpolate_log(8693)[7] (0.002000 sec.)
            
          end InterpProver.interpolate_fresh(8692)[6] (0.002000 sec.)
          
        end InterpProver.interpolate(8691)[5] (0.002000 sec.)
        begin InterpProver.interpolate(8775)[5]
          begin InterpProver.interpolate_fresh(8776)[6]
            begin InterpProver.interpolate_log(8777)[7]
              input1: ((<<h_1140@10:2>@13:1> = 0) &&
                       ((<<h_1140@10:2>@13:0> = 0) && ((<h_1140@10:1> = 0) && (<h_1140@10:0> = 0))))
              input2: (not ((<<h_1140@10:2>@13:1> = 0) || (<h_1140@10:0> <> <h_1140@10:1>)))
              begin InterpProver.interpolate_check(8778)[8]
                begin InterpProver.interpolate_simplify(8779)[9]
                  begin InterpProver.interpolate_quick(8862)[10]
                    begin CsisatInterface.interpolate_csisat_wrap(8871)[11]
                      begin CsisatInterface.interpolate_csisat_post_process(8872)[12]
                        begin CsisatInterface.interpolate_csisat_log(8873)[13]
                          input1: (0 = v_sep_h_1140_sep_10_sep_0 & 0 = v_sep_h_1140_sep_10_sep_1 & 0 = v_sep_h_1140_sep_10_sep_2_sep_13_sep_1)
                          input2: (not 0 = v_sep_h_1140_sep_10_sep_2_sep_13_sep_1 & v_sep_h_1140_sep_10_sep_0 = v_sep_h_1140_sep_10_sep_1)
                          begin CsisatInterface.interpolate_csisat_raw(8874)[14]
                            
                          end CsisatInterface.interpolate_csisat_raw(8874)[14] (0.000000 sec.)
                          output: 0 = v_sep_h_1140_sep_10_sep_2_sep_13_sep_1
                          
                        end CsisatInterface.interpolate_csisat_log(8873)[13] (0.000000 sec.)
                        after simplification: 0 = v_sep_h_1140_sep_10_sep_2_sep_13_sep_1
                        after dnf conversion: ((0 = v_sep_h_1140_sep_10_sep_2_sep_13_sep_1))
                        
                      end CsisatInterface.interpolate_csisat_post_process(8872)[12] (0.000000 sec.)
                      
                    end CsisatInterface.interpolate_csisat_wrap(8871)[11] (0.000000 sec.)
                    
                  end InterpProver.interpolate_quick(8862)[10] (0.000000 sec.)
                  
                end InterpProver.interpolate_simplify(8779)[9] (0.000999 sec.)
                
              end InterpProver.interpolate_check(8778)[8] (0.000999 sec.)
              output: (0 = <<h_1140@10:2>@13:1>)
            end InterpProver.interpolate_log(8777)[7] (0.000999 sec.)
            
          end InterpProver.interpolate_fresh(8776)[6] (0.000999 sec.)
          
        end InterpProver.interpolate(8775)[5] (0.000999 sec.)
        output:
          P[<<h_1140@10:2>@13:1>](<h_1140@10:0>:int,<h_1140@10:1>:int,<<h_1140@10:2>@13:0>:int,<<h_1140@10:2>@13:1>:int) =
          (0 = <<h_1140@10:2>@13:1>)
      end ApronInterface.convex_hull_interpolate(8618)[4] (0.003999 sec.)
      Horn clauses:
        P[<h_1140@10:1>](0:int,<<h_1140@10:2>@13:1>:int), (0 <> <<h_1140@10:2>@13:1>) |- bot
        
         (<h_1140@10:1> = <h_1140@10:0>) |- P[<h_1140@10:1>](<h_1140@10:0>:int,
                                                             <h_1140@10:1>:int)
      lower bounds:
        P[<h_1140@10:1>](<h_1140@10:0>:int,<h_1140@10:1>:int) = (<h_1140@10:1> = <h_1140@10:0>)
      upper bounds:
        P[<h_1140@10:1>](var18:int,var19:int) = ((var18 <> 0) || (0 = var19))
      begin GenHcSolver.classify_pids(9535)[4]
        output:
          [<h_1140@10:1>]
      end GenHcSolver.classify_pids(9535)[4] (0.000000 sec.)
      lb:(<h_1140@10:1> = <h_1140@10:0>)
      nub:(not ((<h_1140@10:0> <> 0) || (0 = <h_1140@10:1>)))
      begin ApronInterface.convex_hull_interpolate(9538)[4]
        lb:(<h_1140@10:1> = <h_1140@10:0>)
        nub:(not ((<h_1140@10:0> <> 0) || (0 = <h_1140@10:1>)))
        begin ExtFormula.Formula.case_analysis_boolean(9543)[5]
          ts: (<h_1140@10:1> = <h_1140@10:0>)
          
        end ExtFormula.Formula.case_analysis_boolean(9543)[5] (0.000000 sec.)
        begin ExtFormula.Formula.case_analysis_boolean(9557)[5]
          ts: ((<h_1140@10:0> = 0) && (0 <> <h_1140@10:1>))
          
        end ExtFormula.Formula.case_analysis_boolean(9557)[5] (0.000000 sec.)
        lb':((<h_1140@10:1> + (-1 * <h_1140@10:0>)) = 0)
        nub':(<h_1140@10:0> = 0)
        begin InterpProver.interpolate(9562)[5]
          begin InterpProver.interpolate_fresh(9563)[6]
            begin InterpProver.interpolate_log(9564)[7]
              input1: ((<h_1140@10:1> + (-1 * <h_1140@10:0>)) = 0)
              input2: (<h_1140@10:0> = 0)
              begin InterpProver.interpolate_check(9565)[8]
                begin InterpProver.interpolate_simplify(9566)[9]
                  begin InterpProver.interpolate_quick(9583)[10]
                    begin CsisatInterface.interpolate_csisat_wrap(9589)[11]
                      begin CsisatInterface.interpolate_csisat_post_process(9590)[12]
                        begin CsisatInterface.interpolate_csisat_log(9591)[13]
                          input1: true
                          input2: 0 = v_sep_h_1140_sep_10_sep_0
                          begin CsisatInterface.interpolate_csisat_raw(9592)[14]
                            
                          end CsisatInterface.interpolate_csisat_raw(9592)[14] (0.000000 sec.)
                          
                        end CsisatInterface.interpolate_csisat_log(9591)[13] (0.000000 sec.)
                        
                      end CsisatInterface.interpolate_csisat_post_process(9590)[12] (0.000000 sec.)
                      
                    end CsisatInterface.interpolate_csisat_wrap(9589)[11] (0.000000 sec.)
                    
                  end InterpProver.interpolate_quick(9583)[10] (0.001000 sec.)
                  
                end InterpProver.interpolate_simplify(9566)[9] (0.001000 sec.)
                
              end InterpProver.interpolate_check(9565)[8] (0.001000 sec.)
              there is no interpolant
            end InterpProver.interpolate_log(9564)[7] (0.001000 sec.)
            
          end InterpProver.interpolate_fresh(9563)[6] (0.001000 sec.)
          
        end InterpProver.interpolate(9562)[5] (0.001000 sec.)
        begin InterpProver.interpolate(9601)[5]
          begin InterpProver.interpolate_fresh(9602)[6]
            begin InterpProver.interpolate_log(9603)[7]
              input1: ((<h_1140@10:1> + (-1 * <h_1140@10:0>)) = 0)
              input2: (not ((<h_1140@10:0> <> 0) || (0 = <h_1140@10:1>)))
              begin InterpProver.interpolate_check(9604)[8]
                begin InterpProver.interpolate_simplify(9605)[9]
                  begin InterpProver.interpolate_quick(9636)[10]
                    begin CsisatInterface.interpolate_csisat_wrap(9645)[11]
                      begin CsisatInterface.interpolate_csisat_post_process(9646)[12]
                        begin CsisatInterface.interpolate_csisat_log(9647)[13]
                          input1: v_sep_h_1140_sep_10_sep_0 = v_sep_h_1140_sep_10_sep_1
                          input2: (not 0 = v_sep_h_1140_sep_10_sep_1 & 0 = v_sep_h_1140_sep_10_sep_0)
                          begin CsisatInterface.interpolate_csisat_raw(9648)[14]
                            
                          end CsisatInterface.interpolate_csisat_raw(9648)[14] (0.000000 sec.)
                          output: v_sep_h_1140_sep_10_sep_0 = v_sep_h_1140_sep_10_sep_1
                          
                        end CsisatInterface.interpolate_csisat_log(9647)[13] (0.000000 sec.)
                        after simplification: v_sep_h_1140_sep_10_sep_0 = v_sep_h_1140_sep_10_sep_1
                        after dnf conversion: ((v_sep_h_1140_sep_10_sep_0 = v_sep_h_1140_sep_10_sep_1))
                        
                      end CsisatInterface.interpolate_csisat_post_process(9646)[12] (0.000000 sec.)
                      
                    end CsisatInterface.interpolate_csisat_wrap(9645)[11] (0.000000 sec.)
                    
                  end InterpProver.interpolate_quick(9636)[10] (0.000000 sec.)
                  
                end InterpProver.interpolate_simplify(9605)[9] (0.000000 sec.)
                
              end InterpProver.interpolate_check(9604)[8] (0.000999 sec.)
              output: (<h_1140@10:0> = <h_1140@10:1>)
            end InterpProver.interpolate_log(9603)[7] (0.001999 sec.)
            
          end InterpProver.interpolate_fresh(9602)[6] (0.001999 sec.)
          
        end InterpProver.interpolate(9601)[5] (0.001999 sec.)
        output:
          P[<h_1140@10:1>](<h_1140@10:0>:int,<h_1140@10:1>:int) = (<h_1140@10:0> = <h_1140@10:1>)
      end ApronInterface.convex_hull_interpolate(9538)[4] (0.002999 sec.)
      begin HcSolver.check_validity(9762)[4]
        input:
          P[<fail_1449@18:0>](<fail_1449@18:0>:bool)|- bot
          
          P[<<h_1140@10:2>@13:1>](var3:int,var3:int,<k2_1139@15:0>:int,<k2_1139@15:1>:int),
          ((<k2_1139@15:1> <> 0) && <fail_1449@18:0>) |- P[<fail_1449@18:0>](
          <fail_1449@18:0>:bool)
          
          P[<h_1140@10:1>](<h_1140@10:0>:int,<h_1140@10:1>:int),
          ((<h_1140@10:0> = 0) && ((<<h_1140@10:2>@13:0> = 0) && (<<h_1140@10:2>@13:1> = <h_1140@10:1>)))
          |- P[<<h_1140@10:2>@13:1>](<h_1140@10:0>:int,<h_1140@10:1>:int,
                                     <<h_1140@10:2>@13:0>:int,<<h_1140@10:2>@13:1>:int)
          
           (<h_1140@10:1> = <h_1140@10:0>) |- P[<h_1140@10:1>](<h_1140@10:0>:int,
                                                               <h_1140@10:1>:int)
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        
      end HcSolver.check_validity(9762)[4] (0.002000 sec.)
      solution:
        P[<fail_1449@18:0>](<fail_1449@18:0>:bool) = false
        P[<<h_1140@10:2>@13:1>](<h_1140@10:0>:int,<h_1140@10:1>:int,<<h_1140@10:2>@13:0>:int,<<h_1140@10:2>@13:1>:int) =
        (0 = <<h_1140@10:2>@13:1>)
        P[<h_1140@10:1>](<h_1140@10:0>:int,<h_1140@10:1>:int) = (<h_1140@10:0> = <h_1140@10:1>)
    end GenHcSolver.solve(5647)[3] (0.031995 sec.)
    begin YhornInterface.solve(10100)[3]
      begin HcSolver.solve_ub(10101)[4]
        encoded:
          P[<fail_1449@18:0>](<fail_1449@18:0>:int)|- bot
          
          P[<<h_1140@10:2>@13:1>](var3:int,var3:int,<k2_1139@15:0>:int,<k2_1139@15:1>:int),
          ((<k2_1139@15:1> <> 0) && (<fail_1449@18:0> = 1)) |- P[<fail_1449@18:0>](
          <fail_1449@18:0>:int)
          
          P[<h_1140@10:1>](<h_1140@10:0>:int,<h_1140@10:1>:int),
          ((<h_1140@10:0> = 0) && ((<<h_1140@10:2>@13:0> = 0) && (<<h_1140@10:2>@13:1> = <h_1140@10:1>)))
          |- P[<<h_1140@10:2>@13:1>](<h_1140@10:0>:int,<h_1140@10:1>:int,
                                     <<h_1140@10:2>@13:0>:int,<<h_1140@10:2>@13:1>:int)
          
           (<h_1140@10:1> = <h_1140@10:0>) |- P[<h_1140@10:1>](<h_1140@10:0>:int,
                                                               <h_1140@10:1>:int)
        input to Yhorn:
          P[<fail_1449@18:0>](<fail_1449@18:0>:int)|- bot
          
          P[<<h_1140@10:2>@13:1>](var3:int,var3:int,<k2_1139@15:0>:int,<k2_1139@15:1>:int),
          ((<k2_1139@15:1> <> 0) && (<fail_1449@18:0> = 1)) |- P[<fail_1449@18:0>](
          <fail_1449@18:0>:int)
          
          P[<h_1140@10:1>](<h_1140@10:0>:int,<h_1140@10:1>:int),
          ((<<h_1140@10:2>@13:1> = <h_1140@10:1>) && ((<<h_1140@10:2>@13:0> = 0) && (<h_1140@10:0> = 0)))
          |- P[<<h_1140@10:2>@13:1>](<h_1140@10:0>:int,<h_1140@10:1>:int,
                                     <<h_1140@10:2>@13:0>:int,<<h_1140@10:2>@13:1>:int)
          Yhorn (Wed Sep 25 10:52:05 JST 2013)


(0=0) & (v_sep_fail_1449_sep_18_sep_0($9)) -> 1=0.
(($9-1=0) & ($10<>0)) & (v_sep_h_1140_sep_10_sep_2_sep_13_sep_1($11,$11,$12,$10)) -> v_sep_fail_1449_sep_18_sep_0($9).
(($13=0) & ($14=0) & ($15-$16=0)) & (v_sep_h_1140_sep_10_sep_1($13,$16)) -> v_sep_h_1140_sep_10_sep_2_sep_13_sep_1($13,$16,$14,$15).
-$13+$16=0 -> v_sep_h_1140_sep_10_sep_1($13,$16).


v_sep_fail_1449_sep_18_sep_0: X
v_sep_h_1140_sep_10_sep_1: X
v_sep_h_1140_sep_10_sep_2_sep_13_sep_1: X
.....Split disj [14] 0.266958
Reconstrcut: 3 **)

v_sep_fail_1449_sep_18_sep_0: (X) | (X)
v_sep_h_1140_sep_10_sep_1: X
v_sep_h_1140_sep_10_sep_2_sep_13_sep_1: X
.....
v_sep_fail_1449_sep_18_sep_0: (X) | (X)
v_sep_h_1140_sep_10_sep_1: X
v_sep_h_1140_sep_10_sep_2_sep_13_sep_1: X
.....Split conj [16] 0.271957
(Reconstrcut: 8 **)
v_sep_fail_1449_sep_18_sep_0: (X) | (X)
v_sep_h_1140_sep_10_sep_1: X
v_sep_h_1140_sep_10_sep_2_sep_13_sep_1: (X) & (X)
.......
v_sep_fail_1449_sep_18_sep_0: (X) | (X)
v_sep_h_1140_sep_10_sep_1: X
v_sep_h_1140_sep_10_sep_2_sep_13_sep_1: (X) & (X)
.....
v_sep_fail_1449_sep_18_sep_0: (X) | (X)
v_sep_h_1140_sep_10_sep_1: X
v_sep_h_1140_sep_10_sep_2_sep_13_sep_1: (X) & (X)
.......
v_sep_fail_1449_sep_18_sep_0: (X) | (X)
v_sep_h_1140_sep_10_sep_1: X
v_sep_h_1140_sep_10_sep_2_sep_13_sep_1: (X) & (X)
.......(0=0) & (v_sep_fail_1449_sep_18_sep_0($9)) -> 1=0.
(($9-1=0) & ($10<>0)) & (v_sep_h_1140_sep_10_sep_2_sep_13_sep_1($11,$11,$12,$10)) -> v_sep_fail_1449_sep_18_sep_0($9).
(($13=0) & ($14=0) & ($15-$16=0)) & (v_sep_h_1140_sep_10_sep_1($13,$16)) -> v_sep_h_1140_sep_10_sep_2_sep_13_sep_1($13,$16,$14,$15).
-$13+$16=0 -> v_sep_h_1140_sep_10_sep_1($13,$16).

           (<h_1140@10:1> = <h_1140@10:0>) |- P[<h_1140@10:1>](<h_1140@10:0>:int,
                                                               <h_1140@10:1>:int)
        solution:
          P[<fail_1449@18:0>]($17:bool) = false
          P[<h_1140@10:1>]($29:int,$31:int) = true
          P[<<h_1140@10:2>@13:1>]($20:int,$22:int,$24:int,$26:int) = ($22 = ($26 + $20))
        
      end HcSolver.solve_ub(10101)[4] (0.025996 sec.)
      begin HcSolver.check_validity(10258)[4]
        input:
          P[<fail_1449@18:0>](<fail_1449@18:0>:bool)|- bot
          
          P[<<h_1140@10:2>@13:1>](var3:int,var3:int,<k2_1139@15:0>:int,<k2_1139@15:1>:int),
          ((<k2_1139@15:1> <> 0) && <fail_1449@18:0>) |- P[<fail_1449@18:0>](
          <fail_1449@18:0>:bool)
          
          P[<h_1140@10:1>](<h_1140@10:0>:int,<h_1140@10:1>:int),
          ((<h_1140@10:0> = 0) && ((<<h_1140@10:2>@13:0> = 0) && (<<h_1140@10:2>@13:1> = <h_1140@10:1>)))
          |- P[<<h_1140@10:2>@13:1>](<h_1140@10:0>:int,<h_1140@10:1>:int,
                                     <<h_1140@10:2>@13:0>:int,<<h_1140@10:2>@13:1>:int)
          
           (<h_1140@10:1> = <h_1140@10:0>) |- P[<h_1140@10:1>](<h_1140@10:0>:int,
                                                               <h_1140@10:1>:int)
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        
      end HcSolver.check_validity(10258)[4] (0.002000 sec.)
      solution:
        P[<fail_1449@18:0>]($17:bool) = false
        P[<h_1140@10:1>]($29:int,$31:int) = true
        P[<<h_1140@10:2>@13:1>]($20:int,$22:int,$24:int,$26:int) = ($22 = ($26 + $20))
    end YhornInterface.solve(10100)[3] (0.027996 sec.)
    
  end RefTypeInfer.infer_etrs(136)[2] (0.101985 sec.)
  refinement types:
    main_1444: X
    f_1446: v1:int -> X
    main_1043: v1:int -> (v2:unit -> X) -> X
    rev_1041: v1:int -> (v2:int -> X) -> X
    h_1140: v1:int ->
            v2:{v2:int | (v1 = v2)} -> (v3:int -> v4:{v4:int | (0 = v4)} -> (v5:int -> X) -> X) -> (v8:int -> X) -> X
    k2_1139: v1:int -> v2:int -> (v3:int -> X) -> X
    fail_1449: v1:{v1:bool | false} -> (v2:unit -> X) -> X
    f_1447: var34:int -> var33:unit -> X
    f_main_1445: var39:int -> (var38:unit -> X) -> var36:int -> X
    fail_1448: var43:bool -> (var42:unit -> X) -> X
    fail_1450: var47:bool -> (var46:unit -> X) -> X
    k1_1141: (var57:int -> var56:int -> (var55:int -> X) -> X) -> var52:int -> var51:int -> (var50:int -> X) -> X
    k_k1_u_1201: var68:int ->
                 var67:int -> (var66:int -> var65:int -> (var64:int -> X) -> X) -> (var61:int -> X) -> var59:unit -> X
    k_k2_u_1331: var74:int -> var73:int -> (var72:int -> X) -> var70:unit -> X
  abstraction types:
    main_1444: X
    f_1446: v1:int -> X
    main_1043: v1:int -> (v2:unit -> X) -> X
    rev_1041: v1:int -> (v2:int -> X) -> X
    h_1140: v1:int ->
            v2:int[v2 -> (v1 = v2)] -> (v3:int -> v4:int[v4 -> (0 = v4)] -> (v5:int -> X) -> X) -> (v8:int -> X) -> X
    k2_1139: v1:int -> v2:int -> (v3:int -> X) -> X
    fail_1449: v1:bool -> (v2:unit -> X) -> X
    f_1447: var34:int -> var33:unit -> X
    f_main_1445: var39:int -> (var38:unit -> X) -> var36:int -> X
    fail_1448: var43:bool -> (var42:unit -> X) -> X
    fail_1450: var47:bool -> (var46:unit -> X) -> X
    k1_1141: (var57:int -> var56:int -> (var55:int -> X) -> X) -> var52:int -> var51:int -> (var50:int -> X) -> X
    k_k1_u_1201: var68:int ->
                 var67:int -> (var66:int -> var65:int -> (var64:int -> X) -> X) -> (var61:int -> X) -> var59:unit -> X
    k_k2_u_1331: var74:int -> var73:int -> (var72:int -> X) -> var70:unit -> X
  
end AbsTypeInfer.refine(135)[1] (0.105984 sec.)
DONE!

Prefix of spurious counter-example::
0; 0; 0; 0; 0; 1

Program with abstraction types (CEGAR-cycle 1)::
Main: main_1444
  main_1444 -> (rand_int f_1446)
  f_1446 x_1419 -> (main_1043 x_1419 (f_1447 x_1419))
  f_1447 x_1419 x_1416 -> end
  f_main_1445 n_1044 k_main_1388 x_1391 when (x_1391 >= n_1044) -> (k_main_1388 ())
  f_main_1445 n_1044 k_main_1388 x_1391 when (not (x_1391 >= n_1044)) -> (fail_1450 true k_main_1388)
  fail_1448 b k -> {fail} => (k ())
  fail_1449 b k -> {fail} => (k ())
  fail_1450 b k -> {fail} => (k ())
  h_1140 x_1035 y_1036 k_1037 k_h_1249 when (x_1035 = 0) -> (k_1037 0 y_1036 k_h_1249)
  h_1140 x_1035 y_1036 k_1037 k_h_1249 when (not (x_1035 = 0)) ->
      (h_1140 (x_1035 - 1) y_1036 (k1_1141 k_1037) k_h_1249)
  k1_1141 k_1031 r1_1032 r2_1033 k_k1_1188 when (r2_1033 > 0) -> (k_k1_u_1201 r1_1032 r2_1033 k_1031 k_k1_1188 ())
  k1_1141 k_1031 r1_1032 r2_1033 k_k1_1188 when (not (r2_1033 > 0)) ->
      (fail_1448 true (k_k1_u_1201 r1_1032 r2_1033 k_1031 k_k1_1188))
  k2_1139 r1_1039 r2_1040 k_k2_1318 when (r2_1040 = 0) -> (k_k2_u_1331 r1_1039 r2_1040 k_k2_1318 ())
  k2_1139 r1_1039 r2_1040 k_k2_1318 when (not (r2_1040 = 0)) ->
      (fail_1449 true (k_k2_u_1331 r1_1039 r2_1040 k_k2_1318))
  k_k1_u_1201 r1_1032 r2_1033 k_1031 k_k1_1188 x_1191 -> (k_1031 (r1_1032 + 1) (r2_1033 - 1) k_k1_1188)
  k_k2_u_1331 r1_1039 r2_1040 k_k2_1318 x_1321 -> (k_k2_1318 r1_1039)
  main_1043 n_1044 k_main_1388 -> (rev_1041 n_1044 (f_main_1445 n_1044 k_main_1388))
  rev_1041 x_1042 k_rev_1346 -> (h_1140 x_1042 x_1042 k2_1139 k_rev_1346)
Types:
  main_1444 : X
  fail_1448 : (x_1:bool[x_1] -> (unit -> X) -> X)
  fail_1449 : (x_1:bool[x_1] -> (unit -> X) -> X)
  fail_1450 : (x_1:bool[x_1] -> (unit -> X) -> X)
  h_1140 : (x_1:int -> x_2:int[x_1 = x_2] -> (int -> x_5:int[x_5 = 0] -> (int -> X) -> X) -> (int -> X) -> X)
  
(1-1) Abstracting ... DONE!

(1-2) Checking HORS ... DONE!

Error trace::
  main_1444 ... --> 
  f_1446 ... --> 
  main_1043 ... --> 
  rev_1041 ... --> 
  h_1140 [2/2] ... --> 
  h_1140 [1/2] ... --> 
  k1_1141 [2/2] ... --> 
  fail_1448 ... --> fail -->
  ERROR!

Spurious counter-example::
  0; 0; 0; 0; 1; 0; 1; 0

(1-3) Checking counter-example ... DONE!

(1-4) Discovering predicates ... 
begin AbsTypeInfer.refine(10906)[1]
  program:
    main_1444  | true = ((Random.int 0) f_1446)
    f_1446 x_1419 | true = (main_1043 x_1419
                                      (f_1447 x_1419))
    f_1447 x_1419 x_1416 | true = end
    f_main_1445 n_1044 k_main_1388 x_1391 | (x_1391 >= n_1044) = (k_main_1388 ())
    f_main_1445 n_1044 k_main_1388 x_1391 | (not (x_1391 >= n_1044)) = (
    fail_1450 true
              k_main_1388)
    fail_1448 b k | true = (fail ())
    fail_1449 b k | true = (fail ())
    fail_1450 b k | true = (fail ())
    h_1140 x_1035 y_1036 k_1037 k_h_1249 | (x_1035 = 0) = (k_1037 0
                                                                  y_1036
                                                                  k_h_1249)
    h_1140 x_1035 y_1036 k_1037 k_h_1249 | (not (x_1035 = 0)) = (h_1140 (
                                                                    x_1035 - 1)
                                                                    y_1036
                                                                    (k1_1141 k_1037)
                                                                    k_h_1249)
    k1_1141 k_1031 r1_1032 r2_1033 k_k1_1188 | (r2_1033 > 0) = (k_k1_u_1201 r1_1032
                                                                    r2_1033
                                                                    k_1031
                                                                    k_k1_1188
                                                                    ())
    k1_1141 k_1031 r1_1032 r2_1033 k_k1_1188 | (not (r2_1033 > 0)) = (
    fail_1448 true
              (k_k1_u_1201 r1_1032
                           r2_1033
                           k_1031
                           k_k1_1188))
    k2_1139 r1_1039 r2_1040 k_k2_1318 | (r2_1040 = 0) = (k_k2_u_1331 r1_1039
                                                                    r2_1040
                                                                    k_k2_1318
                                                                    ())
    k2_1139 r1_1039 r2_1040 k_k2_1318 | (not (r2_1040 = 0)) = (fail_1449 true
                                                                    (k_k2_u_1331 r1_1039
                                                                    r2_1040
                                                                    k_k2_1318))
    k_k1_u_1201 r1_1032 r2_1033 k_1031 k_k1_1188 x_1191 | true = (k_1031 (
                                                                    r1_1032 + 1)
                                                                    (r2_1033 - 1)
                                                                    k_k1_1188)
    k_k2_u_1331 r1_1039 r2_1040 k_k2_1318 x_1321 | true = (k_k2_1318 r1_1039)
    main_1043 n_1044 k_main_1388 | true = (rev_1041 n_1044
                                                    (f_main_1445 n_1044
                                                                 k_main_1388))
    rev_1041 x_1042 k_rev_1346 | true = (h_1140 x_1042
                                                x_1042
                                                k2_1139
                                                k_rev_1346)
    main_1444:X
    f_1446:int -> X
    f_1447:int -> unit -> X
    f_main_1445:int -> (unit -> X) -> int -> X
    fail_1448:bool -> (unit -> X) -> X
    fail_1449:bool -> (unit -> X) -> X
    fail_1450:bool -> (unit -> X) -> X
    h_1140:int -> int -> (int -> int -> (int -> X) -> X) -> (int -> X) -> X
    k1_1141:(int -> int -> (int -> X) -> X) -> int -> int -> (int -> X) -> X
    k2_1139:int -> int -> (int -> X) -> X
    k_k1_u_1201:int -> int -> (int -> int -> (int -> X) -> X) -> (int -> X) -> unit -> X
    k_k2_u_1331:int -> int -> (int -> X) -> unit -> X
    main_1043:int -> (unit -> X) -> X
    rev_1041:int -> (int -> X) -> X
  inlined functions: f_1446,f_1447,f_main_1445,k1_1141,k2_1139,k_k1_u_1201,k_k2_u_1331,main_1043,rev_1041
  counterexample: 0:0:0:0:1:0:1:0
  error traces:
    [true.nop(<f_1446@24:0> = var75)
     [true.(<main_1043@26:0> = <f_1446@24:0>)
      [true.(<rev_1041@28:0> = <main_1043@26:0>)
       [true.((<h_1140@30:0> = <rev_1041@28:0>) && (<h_1140@30:1> = <rev_1041@28:0>))
        [(not (<h_1140@30:0> = 0)).((<h_1140@33:0> = (<h_1140@30:0> - 1)) && (<h_1140@33:1> = <h_1140@30:1>))
         [(<h_1140@33:0> = 0).((<<h_1140@33:2>@36:0> = 0) && (<<h_1140@33:2>@36:1> = <h_1140@33:1>))
          [true.((<k1_1141@38:1> = <<h_1140@33:2>@36:0>) && (<k1_1141@38:2> = <<h_1140@33:2>@36:1>))
           [(not (<k1_1141@38:2> > 0)).(<fail_1448@41:0> = true)[true.error
  begin RefTypeInfer.infer_etrs(10907)[2]
    horn clauses:
      P[<fail_1448@41:0>](<fail_1448@41:0>:bool)|- bot
      
      P[<k1_1141@38:2>](<k1_1141@38:1>:int,<k1_1141@38:2>:int), ((<k1_1141@38:2> <= 0) && <fail_1448@41:0>)
      |- P[<fail_1448@41:0>](<fail_1448@41:0>:bool)
      
      P[<h_1140@30:1>](<h_1140@30:0>:int,<h_1140@33:1>:int),
      P[<<h_1140@33:2>@36:1>]((-1 + <h_1140@30:0>):int,<h_1140@33:1>:int,<k1_1141@38:1>:int,<k1_1141@38:2>:int),
      (<h_1140@30:0> <> 0) |- P[<k1_1141@38:2>](<k1_1141@38:1>:int,<k1_1141@38:2>:int)
      
      P[<h_1140@33:1>](<h_1140@33:0>:int,<h_1140@33:1>:int),
      ((<h_1140@33:0> = 0) && ((<<h_1140@33:2>@36:0> = 0) && (<<h_1140@33:2>@36:1> = <h_1140@33:1>)))
      |- P[<<h_1140@33:2>@36:1>](<h_1140@33:0>:int,<h_1140@33:1>:int,
                                 <<h_1140@33:2>@36:0>:int,<<h_1140@33:2>@36:1>:int)
      
      P[<h_1140@30:1>]((1 + <h_1140@33:0>):int,<h_1140@33:1>:int), ((1 + <h_1140@33:0>) <> 0)
      |- P[<h_1140@33:1>](<h_1140@33:0>:int,<h_1140@33:1>:int)
      
      P[<rev_1041@28:0>](<h_1140@30:1>:int), (<h_1140@30:1> = <h_1140@30:0>)
      |- P[<h_1140@30:1>](<h_1140@30:0>:int,<h_1140@30:1>:int)
      
      P[<main_1043@26:0>](<rev_1041@28:0>:int)|- P[<rev_1041@28:0>](<rev_1041@28:0>:int)
      
      P[<f_1446@24:0>](<main_1043@26:0>:int)|- P[<main_1043@26:0>](<main_1043@26:0>:int)
      
      |- P[<f_1446@24:0>](<f_1446@24:0>:int)
    call trees:
      <main_1444@21>
        <f_1446@24>
          <main_1043@26>
            <rev_1041@28>
              <h_1140@30>
                <h_1140@33>
                </<h_1140@33:2>@36>
                <k1_1141@38>
                  <fail_1448@41>
    inlined horn clauses:
      P[<fail_1448@41:0>](<fail_1448@41:0>:bool)|- bot
      
      P[<h_1140@30:1>](var77:int,var76:int),
      P[<<h_1140@33:2>@36:1>]((-1 + var77):int,var76:int,<k1_1141@38:1>:int,<k1_1141@38:2>:int),
      ((<k1_1141@38:2> <= 0) && ((var77 <> 0) && <fail_1448@41:0>)) |- P[<fail_1448@41:0>](
      <fail_1448@41:0>:bool)
      
      P[<h_1140@33:1>](<h_1140@33:0>:int,<h_1140@33:1>:int),
      ((<h_1140@33:0> = 0) && ((<<h_1140@33:2>@36:0> = 0) && (<<h_1140@33:2>@36:1> = <h_1140@33:1>)))
      |- P[<<h_1140@33:2>@36:1>](<h_1140@33:0>:int,<h_1140@33:1>:int,
                                 <<h_1140@33:2>@36:0>:int,<<h_1140@33:2>@36:1>:int)
      
      P[<h_1140@30:1>]((1 + <h_1140@33:0>):int,<h_1140@33:1>:int), ((1 + <h_1140@33:0>) <> 0)
      |- P[<h_1140@33:1>](<h_1140@33:0>:int,<h_1140@33:1>:int)
      
       (<h_1140@30:1> = <h_1140@30:0>) |- P[<h_1140@30:1>](<h_1140@30:0>:int,
                                                           <h_1140@30:1>:int)
    begin ParamSubstInfer.infer(12249)[3]
      
    end ParamSubstInfer.infer(12249)[3] (0.031995 sec.)
    inferred extra parameters:
      
    begin RefTypeInfer.elim_coeffs(12251)[3]
      
    end RefTypeInfer.elim_coeffs(12251)[3] (0.000999 sec.)
    begin GenHcSolver.solve(12518)[3]
      Horn clauses:
        P[<fail_1448@41:0>](<fail_1448@41:0>:bool)|- bot
        
        P[<h_1140@30:1>](var77:int,var76:int),
        P[<<h_1140@33:2>@36:1>]((-1 + var77):int,var76:int,<k1_1141@38:1>:int,<k1_1141@38:2>:int),
        ((<k1_1141@38:2> <= 0) && ((var77 <> 0) && <fail_1448@41:0>)) |- P[<fail_1448@41:0>](
        <fail_1448@41:0>:bool)
        
        P[<h_1140@33:1>](<h_1140@33:0>:int,<h_1140@33:1>:int),
        ((<h_1140@33:0> = 0) && ((<<h_1140@33:2>@36:0> = 0) && (<<h_1140@33:2>@36:1> = <h_1140@33:1>)))
        |- P[<<h_1140@33:2>@36:1>](<h_1140@33:0>:int,<h_1140@33:1>:int,
                                   <<h_1140@33:2>@36:0>:int,<<h_1140@33:2>@36:1>:int)
        
        P[<h_1140@30:1>]((1 + <h_1140@33:0>):int,<h_1140@33:1>:int), (
        (1 + <h_1140@33:0>) <> 0) |- P[<h_1140@33:1>](<h_1140@33:0>:int,
                                                      <h_1140@33:1>:int)
        
         (<h_1140@30:1> = <h_1140@30:0>) |- P[<h_1140@30:1>](<h_1140@30:0>:int,
                                                             <h_1140@30:1>:int)
      lower bounds:
        P[<h_1140@30:1>](<h_1140@30:0>:int,<h_1140@30:1>:int) = (<h_1140@30:1> = <h_1140@30:0>)
        P[<h_1140@33:1>](<h_1140@33:0>:int,<h_1140@33:1>:int) =
        (((1 + <h_1140@33:0>) <> 0) && (<h_1140@33:1> = (1 + <h_1140@33:0>)))
        P[<<h_1140@33:2>@36:1>](<h_1140@33:0>:int,<h_1140@33:1>:int,<<h_1140@33:2>@36:0>:int,<<h_1140@33:2>@36:1>:int) =
        ((<h_1140@33:0> = 0) &&
         ((<<h_1140@33:2>@36:0> = 0) &&
          ((<h_1140@33:1> = (1 + <h_1140@33:0>)) && (<<h_1140@33:2>@36:1> = <h_1140@33:1>))))
        P[<fail_1448@41:0>](<fail_1448@41:0>:bool) = false
      upper bounds:
        P[<h_1140@33:1>](var82:int,var83:int) = true
        P[<h_1140@30:1>](var79:int,var80:int) = ((var79 <> 1) || (var80 > 0))
      begin GenHcSolver.classify_pids(15845)[4]
        output:
          [<h_1140@30:1>;<h_1140@33:1>]
      end GenHcSolver.classify_pids(15845)[4] (0.001000 sec.)
      begin ApronInterface.convex_hull_interpolate(15868)[4]
        lb:((<h_1140@30:1> = <h_1140@30:0>) || (((1 + <h_1140@30:0>) <> 0) && (<h_1140@30:1> = (1 + <h_1140@30:0>))))
        nub:(not ((<h_1140@30:0> <> 1) || (<h_1140@30:1> > 0)))
        lb':((<h_1140@30:1> = <h_1140@30:0>) || (((1 + <h_1140@30:0>) <> 0) && (<h_1140@30:1> = (1 + <h_1140@30:0>))))
        nub':(not ((<h_1140@30:0> <> 1) || (<h_1140@30:1> > 0)))
        begin InterpProver.interpolate(15869)[5]
          begin InterpProver.interpolate_fresh(15870)[6]
            begin InterpProver.interpolate_log(15871)[7]
              input1: ((<h_1140@30:1> = <h_1140@30:0>) ||
                       (((1 + <h_1140@30:0>) <> 0) && (<h_1140@30:1> = (1 + <h_1140@30:0>))))
              input2: (not ((<h_1140@30:0> <> 1) || (<h_1140@30:1> > 0)))
              begin InterpProver.interpolate_check(15872)[8]
                begin InterpProver.interpolate_simplify(15873)[9]
                  begin InterpProver.interpolate_quick(15950)[10]
                    begin CsisatInterface.interpolate_csisat_wrap(15959)[11]
                      begin CsisatInterface.interpolate_csisat_post_process(15960)[12]
                        begin CsisatInterface.interpolate_csisat_log(15961)[13]
                          input1: ((not 0 = (1 + v_sep_h_1140_sep_30_sep_0) & v_sep_h_1140_sep_30_sep_1 = (1 + v_sep_h_1140_sep_30_sep_0)) | v_sep_h_1140_sep_30_sep_0 = v_sep_h_1140_sep_30_sep_1)
                          input2: (1 = v_sep_h_1140_sep_30_sep_0 & v_sep_h_1140_sep_30_sep_1 <= 0)
                          begin CsisatInterface.interpolate_csisat_raw(15962)[14]
                            
                          end CsisatInterface.interpolate_csisat_raw(15962)[14] (0.001000 sec.)
                          output: ((v_sep_h_1140_sep_30_sep_0 + -1*v_sep_h_1140_sep_30_sep_1) <= -1 | (-2*v_sep_h_1140_sep_30_sep_1 + 2*v_sep_h_1140_sep_30_sep_0) <= 0)
                          
                        end CsisatInterface.interpolate_csisat_log(15961)[13] (0.001000 sec.)
                        after simplification: ((v_sep_h_1140_sep_30_sep_0 + -1*v_sep_h_1140_sep_30_sep_1) <= -1 | (-2*v_sep_h_1140_sep_30_sep_1 + 2*v_sep_h_1140_sep_30_sep_0) <= 0)
                        after dnf conversion: (((v_sep_h_1140_sep_30_sep_0 + -1*v_sep_h_1140_sep_30_sep_1) <= -1) | ((-2*v_sep_h_1140_sep_30_sep_1 + 2*v_sep_h_1140_sep_30_sep_0) <= 0))
                        
                      end CsisatInterface.interpolate_csisat_post_process(15960)[12] (0.001000 sec.)
                      
                    end CsisatInterface.interpolate_csisat_wrap(15959)[11] (0.001000 sec.)
                    
                  end InterpProver.interpolate_quick(15950)[10] (0.001000 sec.)
                  
                end InterpProver.interpolate_simplify(15873)[9] (0.001000 sec.)
                
              end InterpProver.interpolate_check(15872)[8] (0.002000 sec.)
              output: (<h_1140@30:0> <= <h_1140@30:1>)
            end InterpProver.interpolate_log(15871)[7] (0.002000 sec.)
            
          end InterpProver.interpolate_fresh(15870)[6] (0.002000 sec.)
          
        end InterpProver.interpolate(15869)[5] (0.002000 sec.)
        output:
          P[<h_1140@30:1>](<h_1140@30:0>:int,<h_1140@30:1>:int) = (<h_1140@30:0> <= <h_1140@30:1>)
          P[<h_1140@33:1>](<h_1140@30:0>:int,<h_1140@30:1>:int) = (<h_1140@30:0> <= <h_1140@30:1>)
      end ApronInterface.convex_hull_interpolate(15868)[4] (0.002000 sec.)
      Horn clauses:
        P[<fail_1448@41:0>](<fail_1448@41:0>:bool)|- bot
        
        P[<<h_1140@33:2>@36:1>]((-1 + var77):int,var76:int,<k1_1141@38:1>:int,<k1_1141@38:2>:int),
        ((<k1_1141@38:2> <= 0) && ((var77 <> 0) && ((var77 <= var76) && <fail_1448@41:0>)))
        |- P[<fail_1448@41:0>](<fail_1448@41:0>:bool)
        
        
        ((<h_1140@33:0> = 0) &&
         ((<<h_1140@33:2>@36:0> = 0) && ((<h_1140@33:0> <= <h_1140@33:1>) && (<<h_1140@33:2>@36:1> = <h_1140@33:1>))))
        |- P[<<h_1140@33:2>@36:1>](<h_1140@33:0>:int,<h_1140@33:1>:int,
                                   <<h_1140@33:2>@36:0>:int,<<h_1140@33:2>@36:1>:int)
      lower bounds:
        P[<<h_1140@33:2>@36:1>](<h_1140@33:0>:int,<h_1140@33:1>:int,<<h_1140@33:2>@36:0>:int,<<h_1140@33:2>@36:1>:int) =
        ((<h_1140@33:0> = 0) &&
         ((<<h_1140@33:2>@36:0> = 0) && ((<h_1140@33:0> <= <h_1140@33:1>) && (<<h_1140@33:2>@36:1> = <h_1140@33:1>))))
        P[<fail_1448@41:0>](<fail_1448@41:0>:bool) = false
      upper bounds:
        P[<fail_1448@41:0>](var85:bool) = true
      begin GenHcSolver.classify_pids(19380)[4]
        output:
          [<fail_1448@41:0>]
      end GenHcSolver.classify_pids(19380)[4] (0.000000 sec.)
      lb:false
      nub:false
      begin ApronInterface.convex_hull_interpolate(19383)[4]
        lb:false
        nub:false
        lb':false
        nub':false
        begin InterpProver.interpolate(19384)[5]
          begin InterpProver.interpolate_fresh(19385)[6]
            begin InterpProver.interpolate_log(19386)[7]
              input1: false
              input2: false
              begin InterpProver.interpolate_check(19387)[8]
                begin InterpProver.interpolate_simplify(19388)[9]
                  begin InterpProver.interpolate_quick(19401)[10]
                    
                  end InterpProver.interpolate_quick(19401)[10] (0.000000 sec.)
                  begin minimizing # of disjunctions(19405)[10]
                    input: false
                    output: false
                  end minimizing # of disjunctions(19405)[10] (0.000000 sec.)
                  
                end InterpProver.interpolate_simplify(19388)[9] (0.000000 sec.)
                
              end InterpProver.interpolate_check(19387)[8] (0.000000 sec.)
              output: false
            end InterpProver.interpolate_log(19386)[7] (0.000000 sec.)
            
          end InterpProver.interpolate_fresh(19385)[6] (0.000000 sec.)
          
        end InterpProver.interpolate(19384)[5] (0.000000 sec.)
        output:
          P[<fail_1448@41:0>](<fail_1448@41:0>:bool) = false
      end ApronInterface.convex_hull_interpolate(19383)[4] (0.000000 sec.)
      Horn clauses:
        P[<<h_1140@33:2>@36:1>]((-1 + var77):int,var76:int,<k1_1141@38:1>:int,<k1_1141@38:2>:int),
        ((var77 <= var76) && ((var77 <> 0) && (<k1_1141@38:2> <= 0))) |- bot
        
        
        ((<h_1140@33:0> = 0) &&
         ((<<h_1140@33:2>@36:0> = 0) && ((<h_1140@33:0> <= <h_1140@33:1>) && (<<h_1140@33:2>@36:1> = <h_1140@33:1>))))
        |- P[<<h_1140@33:2>@36:1>](<h_1140@33:0>:int,<h_1140@33:1>:int,
                                   <<h_1140@33:2>@36:0>:int,<<h_1140@33:2>@36:1>:int)
      lower bounds:
        P[<<h_1140@33:2>@36:1>](<h_1140@33:0>:int,<h_1140@33:1>:int,<<h_1140@33:2>@36:0>:int,<<h_1140@33:2>@36:1>:int) =
        ((<h_1140@33:0> = 0) &&
         ((<<h_1140@33:2>@36:0> = 0) && ((<h_1140@33:0> <= <h_1140@33:1>) && (<<h_1140@33:2>@36:1> = <h_1140@33:1>))))
      upper bounds:
        P[<<h_1140@33:2>@36:1>](var86:int,var87:int,var88:int,var89:int) =
        ((var89 > 0) || (((1 + var86) = 0) || ((1 + var86) > var87)))
      begin GenHcSolver.classify_pids(21942)[4]
        output:
          [<<h_1140@33:2>@36:1>]
      end GenHcSolver.classify_pids(21942)[4] (0.000000 sec.)
      lb:((<h_1140@33:0> = 0) &&
          ((<<h_1140@33:2>@36:0> = 0) && ((<h_1140@33:0> <= <h_1140@33:1>) && (<<h_1140@33:2>@36:1> = <h_1140@33:1>))))
      nub:(not ((<<h_1140@33:2>@36:1> > 0) || (((1 + <h_1140@33:0>) = 0) || ((1 + <h_1140@33:0>) > <h_1140@33:1>))))
      begin ApronInterface.convex_hull_interpolate(21945)[4]
        lb:((<h_1140@33:0> = 0) &&
            ((<<h_1140@33:2>@36:0> = 0) && ((<h_1140@33:0> <= <h_1140@33:1>) && (<<h_1140@33:2>@36:1> = <h_1140@33:1>))))
        nub:(not ((<<h_1140@33:2>@36:1> > 0) || (((1 + <h_1140@33:0>) = 0) || ((1 + <h_1140@33:0>) > <h_1140@33:1>))))
        lb':((<h_1140@33:0> = 0) &&
             ((<<h_1140@33:2>@36:0> = 0) &&
              ((<h_1140@33:0> <= <h_1140@33:1>) && (<<h_1140@33:2>@36:1> = <h_1140@33:1>))))
        nub':(not ((<<h_1140@33:2>@36:1> > 0) || (((1 + <h_1140@33:0>) = 0) || ((1 + <h_1140@33:0>) > <h_1140@33:1>))))
        begin InterpProver.interpolate(21946)[5]
          begin InterpProver.interpolate_fresh(21947)[6]
            begin InterpProver.interpolate_log(21948)[7]
              input1: ((<h_1140@33:0> = 0) &&
                       ((<<h_1140@33:2>@36:0> = 0) &&
                        ((<h_1140@33:0> <= <h_1140@33:1>) && (<<h_1140@33:2>@36:1> = <h_1140@33:1>))))
              input2: (not
                         ((<<h_1140@33:2>@36:1> > 0) ||
                          (((1 + <h_1140@33:0>) = 0) || ((1 + <h_1140@33:0>) > <h_1140@33:1>))))
              begin InterpProver.interpolate_check(21949)[8]
                begin InterpProver.interpolate_simplify(21950)[9]
                  begin InterpProver.interpolate_quick(22170)[10]
                    begin CsisatInterface.interpolate_csisat_wrap(22179)[11]
                      begin CsisatInterface.interpolate_csisat_post_process(22180)[12]
                        begin CsisatInterface.interpolate_csisat_log(22181)[13]
                          input1: (0 = v_sep_h_1140_sep_33_sep_0 & v_sep_h_1140_sep_33_sep_1 = v_sep_h_1140_sep_33_sep_2_sep_36_sep_1 & v_sep_h_1140_sep_33_sep_0 <= v_sep_h_1140_sep_33_sep_1)
                          input2: (not 0 = (1 + v_sep_h_1140_sep_33_sep_0) & v_sep_h_1140_sep_33_sep_2_sep_36_sep_1 <= 0 & (1 + v_sep_h_1140_sep_33_sep_0) <= v_sep_h_1140_sep_33_sep_1)
                          begin CsisatInterface.interpolate_csisat_raw(22182)[14]
                            
                          end CsisatInterface.interpolate_csisat_raw(22182)[14] (0.000000 sec.)
                          output: (-2*v_sep_h_1140_sep_33_sep_0 + -2*v_sep_h_1140_sep_33_sep_2_sep_36_sep_1 + 2*v_sep_h_1140_sep_33_sep_1) <= 0
                          
                        end CsisatInterface.interpolate_csisat_log(22181)[13] (0.000000 sec.)
                        after simplification: (-2*v_sep_h_1140_sep_33_sep_0 + -2*v_sep_h_1140_sep_33_sep_2_sep_36_sep_1 + 2*v_sep_h_1140_sep_33_sep_1) <= 0
                        after dnf conversion: (((-2*v_sep_h_1140_sep_33_sep_0 + -2*v_sep_h_1140_sep_33_sep_2_sep_36_sep_1 + 2*v_sep_h_1140_sep_33_sep_1) <= 0))
                        
                      end CsisatInterface.interpolate_csisat_post_process(22180)[12] (0.000000 sec.)
                      
                    end CsisatInterface.interpolate_csisat_wrap(22179)[11] (0.000000 sec.)
                    
                  end InterpProver.interpolate_quick(22170)[10] (0.000999 sec.)
                  
                end InterpProver.interpolate_simplify(21950)[9] (0.002999 sec.)
                
              end InterpProver.interpolate_check(21949)[8] (0.003999 sec.)
              output: (<h_1140@33:1> <= (<h_1140@33:0> + <<h_1140@33:2>@36:1>))
            end InterpProver.interpolate_log(21948)[7] (0.003999 sec.)
            
          end InterpProver.interpolate_fresh(21947)[6] (0.003999 sec.)
          
        end InterpProver.interpolate(21946)[5] (0.003999 sec.)
        output:
          P[<<h_1140@33:2>@36:1>](<h_1140@33:0>:int,<h_1140@33:1>:int,<<h_1140@33:2>@36:0>:int,<<h_1140@33:2>@36:1>:int) =
          (<h_1140@33:1> <= (<h_1140@33:0> + <<h_1140@33:2>@36:1>))
      end ApronInterface.convex_hull_interpolate(21945)[4] (0.003999 sec.)
      begin HcSolver.check_validity(22641)[4]
        input:
          P[<fail_1448@41:0>](<fail_1448@41:0>:bool)|- bot
          
          P[<h_1140@30:1>](var77:int,var76:int),
          P[<<h_1140@33:2>@36:1>]((-1 + var77):int,var76:int,<k1_1141@38:1>:int,<k1_1141@38:2>:int),
          ((<k1_1141@38:2> <= 0) && ((var77 <> 0) && <fail_1448@41:0>)) |- P[<fail_1448@41:0>](
          <fail_1448@41:0>:bool)
          
          P[<h_1140@33:1>](<h_1140@33:0>:int,<h_1140@33:1>:int),
          ((<h_1140@33:0> = 0) && ((<<h_1140@33:2>@36:0> = 0) && (<<h_1140@33:2>@36:1> = <h_1140@33:1>)))
          |- P[<<h_1140@33:2>@36:1>](<h_1140@33:0>:int,<h_1140@33:1>:int,
                                     <<h_1140@33:2>@36:0>:int,<<h_1140@33:2>@36:1>:int)
          
          P[<h_1140@30:1>]((1 + <h_1140@33:0>):int,<h_1140@33:1>:int), (
          (1 + <h_1140@33:0>) <> 0) |- P[<h_1140@33:1>](<h_1140@33:0>:int,
                                                        <h_1140@33:1>:int)
          
           (<h_1140@30:1> = <h_1140@30:0>) |- P[<h_1140@30:1>](<h_1140@30:0>:int,
                                                               <h_1140@30:1>:int)
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        
      end HcSolver.check_validity(22641)[4] (0.003999 sec.)
      solution:
        P[<fail_1448@41:0>](<fail_1448@41:0>:bool) = false
        P[<<h_1140@33:2>@36:1>](<h_1140@33:0>:int,<h_1140@33:1>:int,<<h_1140@33:2>@36:0>:int,<<h_1140@33:2>@36:1>:int) =
        (<h_1140@33:1> <= (<h_1140@33:0> + <<h_1140@33:2>@36:1>))
        P[<h_1140@33:1>](<h_1140@30:0>:int,<h_1140@30:1>:int) = (<h_1140@30:0> <= <h_1140@30:1>)
        P[<h_1140@30:1>](<h_1140@30:0>:int,<h_1140@30:1>:int) = (<h_1140@30:0> <= <h_1140@30:1>)
    end GenHcSolver.solve(12518)[3] (0.061991 sec.)
    begin GenHcSolver.solve(23341)[3]
      Horn clauses:
        P[<fail_1448@41:0>](<fail_1448@41:0>:bool)|- bot
        
        P[<h_1140@30:1>](var77:int,var76:int),
        P[<<h_1140@33:2>@36:1>]((-1 + var77):int,var76:int,<k1_1141@38:1>:int,<k1_1141@38:2>:int),
        ((<k1_1141@38:2> <= 0) && ((var77 <> 0) && <fail_1448@41:0>)) |- P[<fail_1448@41:0>](
        <fail_1448@41:0>:bool)
        
        P[<h_1140@33:1>](<h_1140@33:0>:int,<h_1140@33:1>:int),
        ((<h_1140@33:0> = 0) && ((<<h_1140@33:2>@36:0> = 0) && (<<h_1140@33:2>@36:1> = <h_1140@33:1>)))
        |- P[<<h_1140@33:2>@36:1>](<h_1140@33:0>:int,<h_1140@33:1>:int,
                                   <<h_1140@33:2>@36:0>:int,<<h_1140@33:2>@36:1>:int)
        
        P[<h_1140@30:1>]((1 + <h_1140@33:0>):int,<h_1140@33:1>:int), (
        (1 + <h_1140@33:0>) <> 0) |- P[<h_1140@33:1>](<h_1140@33:0>:int,
                                                      <h_1140@33:1>:int)
        
         (<h_1140@30:1> = <h_1140@30:0>) |- P[<h_1140@30:1>](<h_1140@30:0>:int,
                                                             <h_1140@30:1>:int)
      lower bounds:
        P[<h_1140@30:1>](<h_1140@30:0>:int,<h_1140@30:1>:int) = (<h_1140@30:1> = <h_1140@30:0>)
        P[<h_1140@33:1>](<h_1140@33:0>:int,<h_1140@33:1>:int) =
        (((1 + <h_1140@33:0>) <> 0) && (<h_1140@33:1> = (1 + <h_1140@33:0>)))
        P[<<h_1140@33:2>@36:1>](<h_1140@33:0>:int,<h_1140@33:1>:int,<<h_1140@33:2>@36:0>:int,<<h_1140@33:2>@36:1>:int) =
        ((<h_1140@33:0> = 0) &&
         ((<<h_1140@33:2>@36:0> = 0) &&
          ((<h_1140@33:1> = (1 + <h_1140@33:0>)) && (<<h_1140@33:2>@36:1> = <h_1140@33:1>))))
        P[<fail_1448@41:0>](<fail_1448@41:0>:bool) = false
      upper bounds:
        P[<h_1140@33:1>](var94:int,var95:int) = true
        P[<h_1140@30:1>](var91:int,var92:int) = ((var91 <> 1) || (var92 > 0))
      begin GenHcSolver.classify_pids(26668)[4]
        output:
          [<h_1140@30:1>;<h_1140@33:1>]
      end GenHcSolver.classify_pids(26668)[4] (0.000000 sec.)
      begin ApronInterface.convex_hull_interpolate(26691)[4]
        lb:((<h_1140@30:1> = <h_1140@30:0>) || (((1 + <h_1140@30:0>) <> 0) && (<h_1140@30:1> = (1 + <h_1140@30:0>))))
        nub:(not ((<h_1140@30:0> <> 1) || (<h_1140@30:1> > 0)))
        begin ExtFormula.Formula.case_analysis_boolean(26717)[5]
          ts: ((<h_1140@30:1> = <h_1140@30:0>) || (((1 + <h_1140@30:0>) <> 0) && (<h_1140@30:1> = (1 + <h_1140@30:0>))))
          
        end ExtFormula.Formula.case_analysis_boolean(26717)[5] (0.000000 sec.)
        begin ExtFormula.Formula.case_analysis_boolean(26738)[5]
          ts: ((<h_1140@30:0> = 1) && (<h_1140@30:1> <= 0))
          
        end ExtFormula.Formula.case_analysis_boolean(26738)[5] (0.000000 sec.)
        lb':(((<h_1140@30:1> + (-1 * <h_1140@30:0>)) >= 0) && (((1 + (-1 * <h_1140@30:1>)) + <h_1140@30:0>) >= 0))
        nub':(((-1 + <h_1140@30:0>) = 0) && ((-1 * <h_1140@30:1>) >= 0))
        begin InterpProver.interpolate(26744)[5]
          begin InterpProver.interpolate_fresh(26745)[6]
            begin InterpProver.interpolate_log(26746)[7]
              input1: (((<h_1140@30:1> + (-1 * <h_1140@30:0>)) >= 0) &&
                       (((1 + (-1 * <h_1140@30:1>)) + <h_1140@30:0>) >= 0))
              input2: (((-1 + <h_1140@30:0>) = 0) && ((-1 * <h_1140@30:1>) >= 0))
              begin InterpProver.interpolate_check(26747)[8]
                begin InterpProver.interpolate_simplify(26748)[9]
                  begin InterpProver.interpolate_quick(26815)[10]
                    begin CsisatInterface.interpolate_csisat_wrap(26824)[11]
                      begin CsisatInterface.interpolate_csisat_post_process(26825)[12]
                        begin CsisatInterface.interpolate_csisat_log(26826)[13]
                          input1: (v_sep_h_1140_sep_30_sep_0 <= v_sep_h_1140_sep_30_sep_1 & v_sep_h_1140_sep_30_sep_1 <= (1 + v_sep_h_1140_sep_30_sep_0))
                          input2: (1 = v_sep_h_1140_sep_30_sep_0 & v_sep_h_1140_sep_30_sep_1 <= 0)
                          begin CsisatInterface.interpolate_csisat_raw(26827)[14]
                            
                          end CsisatInterface.interpolate_csisat_raw(26827)[14] (0.000000 sec.)
                          output: (-2*v_sep_h_1140_sep_30_sep_1 + 2*v_sep_h_1140_sep_30_sep_0) <= 0
                          
                        end CsisatInterface.interpolate_csisat_log(26826)[13] (0.000000 sec.)
                        after simplification: (-2*v_sep_h_1140_sep_30_sep_1 + 2*v_sep_h_1140_sep_30_sep_0) <= 0
                        after dnf conversion: (((-2*v_sep_h_1140_sep_30_sep_1 + 2*v_sep_h_1140_sep_30_sep_0) <= 0))
                        
                      end CsisatInterface.interpolate_csisat_post_process(26825)[12] (0.000000 sec.)
                      
                    end CsisatInterface.interpolate_csisat_wrap(26824)[11] (0.000000 sec.)
                    
                  end InterpProver.interpolate_quick(26815)[10] (0.001000 sec.)
                  
                end InterpProver.interpolate_simplify(26748)[9] (0.001000 sec.)
                
              end InterpProver.interpolate_check(26747)[8] (0.001000 sec.)
              output: (<h_1140@30:0> <= <h_1140@30:1>)
            end InterpProver.interpolate_log(26746)[7] (0.001999 sec.)
            
          end InterpProver.interpolate_fresh(26745)[6] (0.001999 sec.)
          
        end InterpProver.interpolate(26744)[5] (0.001999 sec.)
        output:
          P[<h_1140@30:1>](<h_1140@30:0>:int,<h_1140@30:1>:int) = (<h_1140@30:0> <= <h_1140@30:1>)
          P[<h_1140@33:1>](<h_1140@30:0>:int,<h_1140@30:1>:int) = (<h_1140@30:0> <= <h_1140@30:1>)
      end ApronInterface.convex_hull_interpolate(26691)[4] (0.002999 sec.)
      Horn clauses:
        P[<fail_1448@41:0>](<fail_1448@41:0>:bool)|- bot
        
        P[<<h_1140@33:2>@36:1>]((-1 + var77):int,var76:int,<k1_1141@38:1>:int,<k1_1141@38:2>:int),
        ((<k1_1141@38:2> <= 0) && ((var77 <> 0) && ((var77 <= var76) && <fail_1448@41:0>)))
        |- P[<fail_1448@41:0>](<fail_1448@41:0>:bool)
        
        
        ((<h_1140@33:0> = 0) &&
         ((<<h_1140@33:2>@36:0> = 0) && ((<h_1140@33:0> <= <h_1140@33:1>) && (<<h_1140@33:2>@36:1> = <h_1140@33:1>))))
        |- P[<<h_1140@33:2>@36:1>](<h_1140@33:0>:int,<h_1140@33:1>:int,
                                   <<h_1140@33:2>@36:0>:int,<<h_1140@33:2>@36:1>:int)
      lower bounds:
        P[<<h_1140@33:2>@36:1>](<h_1140@33:0>:int,<h_1140@33:1>:int,<<h_1140@33:2>@36:0>:int,<<h_1140@33:2>@36:1>:int) =
        ((<h_1140@33:0> = 0) &&
         ((<<h_1140@33:2>@36:0> = 0) && ((<h_1140@33:0> <= <h_1140@33:1>) && (<<h_1140@33:2>@36:1> = <h_1140@33:1>))))
        P[<fail_1448@41:0>](<fail_1448@41:0>:bool) = false
      upper bounds:
        P[<fail_1448@41:0>](var97:bool) = true
      begin GenHcSolver.classify_pids(30236)[4]
        output:
          [<fail_1448@41:0>]
      end GenHcSolver.classify_pids(30236)[4] (0.000000 sec.)
      lb:false
      nub:false
      begin ApronInterface.convex_hull_interpolate(30239)[4]
        lb:false
        nub:false
        begin ExtFormula.Formula.case_analysis_boolean(30242)[5]
          ts: false
          
        end ExtFormula.Formula.case_analysis_boolean(30242)[5] (0.000000 sec.)
        begin ExtFormula.Formula.case_analysis_boolean(30247)[5]
          ts: false
          
        end ExtFormula.Formula.case_analysis_boolean(30247)[5] (0.000000 sec.)
        lb':(-1 >= 0)
        nub':(-1 >= 0)
        begin InterpProver.interpolate(30250)[5]
          begin InterpProver.interpolate_fresh(30251)[6]
            begin InterpProver.interpolate_log(30252)[7]
              input1: (-1 >= 0)
              input2: (-1 >= 0)
              begin InterpProver.interpolate_check(30253)[8]
                begin InterpProver.interpolate_simplify(30254)[9]
                  begin InterpProver.interpolate_quick(30269)[10]
                    
                  end InterpProver.interpolate_quick(30269)[10] (0.000000 sec.)
                  begin minimizing # of disjunctions(30273)[10]
                    input: false
                    output: false
                  end minimizing # of disjunctions(30273)[10] (0.000000 sec.)
                  
                end InterpProver.interpolate_simplify(30254)[9] (0.000000 sec.)
                
              end InterpProver.interpolate_check(30253)[8] (0.000000 sec.)
              output: false
            end InterpProver.interpolate_log(30252)[7] (0.000000 sec.)
            
          end InterpProver.interpolate_fresh(30251)[6] (0.000000 sec.)
          
        end InterpProver.interpolate(30250)[5] (0.000000 sec.)
        output:
          P[<fail_1448@41:0>](<fail_1448@41:0>:bool) = false
      end ApronInterface.convex_hull_interpolate(30239)[4] (0.001000 sec.)
      Horn clauses:
        P[<<h_1140@33:2>@36:1>]((-1 + var77):int,var76:int,<k1_1141@38:1>:int,<k1_1141@38:2>:int),
        ((var77 <= var76) && ((var77 <> 0) && (<k1_1141@38:2> <= 0))) |- bot
        
        
        ((<h_1140@33:0> = 0) &&
         ((<<h_1140@33:2>@36:0> = 0) && ((<h_1140@33:0> <= <h_1140@33:1>) && (<<h_1140@33:2>@36:1> = <h_1140@33:1>))))
        |- P[<<h_1140@33:2>@36:1>](<h_1140@33:0>:int,<h_1140@33:1>:int,
                                   <<h_1140@33:2>@36:0>:int,<<h_1140@33:2>@36:1>:int)
      lower bounds:
        P[<<h_1140@33:2>@36:1>](<h_1140@33:0>:int,<h_1140@33:1>:int,<<h_1140@33:2>@36:0>:int,<<h_1140@33:2>@36:1>:int) =
        ((<h_1140@33:0> = 0) &&
         ((<<h_1140@33:2>@36:0> = 0) && ((<h_1140@33:0> <= <h_1140@33:1>) && (<<h_1140@33:2>@36:1> = <h_1140@33:1>))))
      upper bounds:
        P[<<h_1140@33:2>@36:1>](var98:int,var99:int,var100:int,var101:int) =
        ((var101 > 0) || (((1 + var98) = 0) || ((1 + var98) > var99)))
      begin GenHcSolver.classify_pids(32817)[4]
        output:
          [<<h_1140@33:2>@36:1>]
      end GenHcSolver.classify_pids(32817)[4] (0.000000 sec.)
      lb:((<h_1140@33:0> = 0) &&
          ((<<h_1140@33:2>@36:0> = 0) && ((<h_1140@33:0> <= <h_1140@33:1>) && (<<h_1140@33:2>@36:1> = <h_1140@33:1>))))
      nub:(not ((<<h_1140@33:2>@36:1> > 0) || (((1 + <h_1140@33:0>) = 0) || ((1 + <h_1140@33:0>) > <h_1140@33:1>))))
      begin ApronInterface.convex_hull_interpolate(32820)[4]
        lb:((<h_1140@33:0> = 0) &&
            ((<<h_1140@33:2>@36:0> = 0) && ((<h_1140@33:0> <= <h_1140@33:1>) && (<<h_1140@33:2>@36:1> = <h_1140@33:1>))))
        nub:(not ((<<h_1140@33:2>@36:1> > 0) || (((1 + <h_1140@33:0>) = 0) || ((1 + <h_1140@33:0>) > <h_1140@33:1>))))
        begin ExtFormula.Formula.case_analysis_boolean(32864)[5]
          ts: ((<h_1140@33:0> = 0) &&
               ((<<h_1140@33:2>@36:0> = 0) &&
                ((<h_1140@33:0> <= <h_1140@33:1>) && (<<h_1140@33:2>@36:1> = <h_1140@33:1>))))
          
        end ExtFormula.Formula.case_analysis_boolean(32864)[5] (0.000000 sec.)
        begin ExtFormula.Formula.case_analysis_boolean(32910)[5]
          ts: ((<<h_1140@33:2>@36:1> <= 0) && (((1 + <h_1140@33:0>) <> 0) && ((1 + <h_1140@33:0>) <= <h_1140@33:1>)))
          
        end ExtFormula.Formula.case_analysis_boolean(32910)[5] (0.001000 sec.)
        lb':(((<<h_1140@33:2>@36:1> + (-1 * <h_1140@33:1>)) = 0) &&
             ((<<h_1140@33:2>@36:0> = 0) && ((<h_1140@33:0> = 0) && (<h_1140@33:1> >= 0))))
        nub':((((-1 + <h_1140@33:1>) + (-1 * <h_1140@33:0>)) >= 0) && ((-1 * <<h_1140@33:2>@36:1>) >= 0))
        begin InterpProver.interpolate(32919)[5]
          begin InterpProver.interpolate_fresh(32920)[6]
            begin InterpProver.interpolate_log(32921)[7]
              input1: (((<<h_1140@33:2>@36:1> + (-1 * <h_1140@33:1>)) = 0) &&
                       ((<<h_1140@33:2>@36:0> = 0) && ((<h_1140@33:0> = 0) && (<h_1140@33:1> >= 0))))
              input2: ((((-1 + <h_1140@33:1>) + (-1 * <h_1140@33:0>)) >= 0) && ((-1 * <<h_1140@33:2>@36:1>) >= 0))
              begin InterpProver.interpolate_check(32922)[8]
                begin InterpProver.interpolate_simplify(32923)[9]
                  begin InterpProver.interpolate_quick(33076)[10]
                    begin CsisatInterface.interpolate_csisat_wrap(33085)[11]
                      begin CsisatInterface.interpolate_csisat_post_process(33086)[12]
                        begin CsisatInterface.interpolate_csisat_log(33087)[13]
                          input1: (0 = v_sep_h_1140_sep_33_sep_0 & v_sep_h_1140_sep_33_sep_1 = v_sep_h_1140_sep_33_sep_2_sep_36_sep_1 & 0 <= v_sep_h_1140_sep_33_sep_1)
                          input2: (v_sep_h_1140_sep_33_sep_2_sep_36_sep_1 <= 0 & (1 + v_sep_h_1140_sep_33_sep_0) <= v_sep_h_1140_sep_33_sep_1)
                          begin CsisatInterface.interpolate_csisat_raw(33088)[14]
                            
                          end CsisatInterface.interpolate_csisat_raw(33088)[14] (0.000000 sec.)
                          output: (-2*v_sep_h_1140_sep_33_sep_0 + -2*v_sep_h_1140_sep_33_sep_2_sep_36_sep_1 + 2*v_sep_h_1140_sep_33_sep_1) <= 0
                          
                        end CsisatInterface.interpolate_csisat_log(33087)[13] (0.000000 sec.)
                        after simplification: (-2*v_sep_h_1140_sep_33_sep_0 + -2*v_sep_h_1140_sep_33_sep_2_sep_36_sep_1 + 2*v_sep_h_1140_sep_33_sep_1) <= 0
                        after dnf conversion: (((-2*v_sep_h_1140_sep_33_sep_0 + -2*v_sep_h_1140_sep_33_sep_2_sep_36_sep_1 + 2*v_sep_h_1140_sep_33_sep_1) <= 0))
                        
                      end CsisatInterface.interpolate_csisat_post_process(33086)[12] (0.000000 sec.)
                      
                    end CsisatInterface.interpolate_csisat_wrap(33085)[11] (0.000000 sec.)
                    
                  end InterpProver.interpolate_quick(33076)[10] (0.001000 sec.)
                  
                end InterpProver.interpolate_simplify(32923)[9] (0.001000 sec.)
                
              end InterpProver.interpolate_check(32922)[8] (0.001999 sec.)
              output: (<h_1140@33:1> <= (<h_1140@33:0> + <<h_1140@33:2>@36:1>))
            end InterpProver.interpolate_log(32921)[7] (0.001999 sec.)
            
          end InterpProver.interpolate_fresh(32920)[6] (0.001999 sec.)
          
        end InterpProver.interpolate(32919)[5] (0.001999 sec.)
        output:
          P[<<h_1140@33:2>@36:1>](<h_1140@33:0>:int,<h_1140@33:1>:int,<<h_1140@33:2>@36:0>:int,<<h_1140@33:2>@36:1>:int) =
          (<h_1140@33:1> <= (<h_1140@33:0> + <<h_1140@33:2>@36:1>))
      end ApronInterface.convex_hull_interpolate(32820)[4] (0.003999 sec.)
      begin HcSolver.check_validity(33537)[4]
        input:
          P[<fail_1448@41:0>](<fail_1448@41:0>:bool)|- bot
          
          P[<h_1140@30:1>](var77:int,var76:int),
          P[<<h_1140@33:2>@36:1>]((-1 + var77):int,var76:int,<k1_1141@38:1>:int,<k1_1141@38:2>:int),
          ((<k1_1141@38:2> <= 0) && ((var77 <> 0) && <fail_1448@41:0>)) |- P[<fail_1448@41:0>](
          <fail_1448@41:0>:bool)
          
          P[<h_1140@33:1>](<h_1140@33:0>:int,<h_1140@33:1>:int),
          ((<h_1140@33:0> = 0) && ((<<h_1140@33:2>@36:0> = 0) && (<<h_1140@33:2>@36:1> = <h_1140@33:1>)))
          |- P[<<h_1140@33:2>@36:1>](<h_1140@33:0>:int,<h_1140@33:1>:int,
                                     <<h_1140@33:2>@36:0>:int,<<h_1140@33:2>@36:1>:int)
          
          P[<h_1140@30:1>]((1 + <h_1140@33:0>):int,<h_1140@33:1>:int), (
          (1 + <h_1140@33:0>) <> 0) |- P[<h_1140@33:1>](<h_1140@33:0>:int,
                                                        <h_1140@33:1>:int)
          
           (<h_1140@30:1> = <h_1140@30:0>) |- P[<h_1140@30:1>](<h_1140@30:0>:int,
                                                               <h_1140@30:1>:int)
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        
      end HcSolver.check_validity(33537)[4] (0.008999 sec.)
      solution:
        P[<fail_1448@41:0>](<fail_1448@41:0>:bool) = false
        P[<<h_1140@33:2>@36:1>](<h_1140@33:0>:int,<h_1140@33:1>:int,<<h_1140@33:2>@36:0>:int,<<h_1140@33:2>@36:1>:int) =
        (<h_1140@33:1> <= (<h_1140@33:0> + <<h_1140@33:2>@36:1>))
        P[<h_1140@33:1>](<h_1140@30:0>:int,<h_1140@30:1>:int) = (<h_1140@30:0> <= <h_1140@30:1>)
        P[<h_1140@30:1>](<h_1140@30:0>:int,<h_1140@30:1>:int) = (<h_1140@30:0> <= <h_1140@30:1>)
    end GenHcSolver.solve(23341)[3] (0.060991 sec.)
    begin YhornInterface.solve(34237)[3]
      begin HcSolver.solve_ub(34238)[4]
        encoded:
          P[<fail_1448@41:0>](<fail_1448@41:0>:int)|- bot
          
          P[<h_1140@30:1>](var77:int,var76:int),
          P[<<h_1140@33:2>@36:1>]((-1 + var77):int,var76:int,<k1_1141@38:1>:int,<k1_1141@38:2>:int),
          ((<k1_1141@38:2> <= 0) && ((var77 <> 0) && (<fail_1448@41:0> = 1)))
          |- P[<fail_1448@41:0>](<fail_1448@41:0>:int)
          
          P[<h_1140@33:1>](<h_1140@33:0>:int,<h_1140@33:1>:int),
          ((<h_1140@33:0> = 0) && ((<<h_1140@33:2>@36:0> = 0) && (<<h_1140@33:2>@36:1> = <h_1140@33:1>)))
          |- P[<<h_1140@33:2>@36:1>](<h_1140@33:0>:int,<h_1140@33:1>:int,
                                     <<h_1140@33:2>@36:0>:int,<<h_1140@33:2>@36:1>:int)
          
          P[<h_1140@30:1>]((1 + <h_1140@33:0>):int,<h_1140@33:1>:int), (
          (1 + <h_1140@33:0>) <> 0) |- P[<h_1140@33:1>](<h_1140@33:0>:int,
                                                        <h_1140@33:1>:int)
          
           (<h_1140@30:1> = <h_1140@30:0>) |- P[<h_1140@30:1>](<h_1140@30:0>:int,
                                                               <h_1140@30:1>:int)
        input to Yhorn:
          P[<fail_1448@41:0>](<fail_1448@41:0>:int)|- bot
          
          P[<h_1140@30:1>](var77:int,var76:int),
          P[<<h_1140@33:2>@36:1>](var102:int,var76:int,<k1_1141@38:1>:int,<k1_1141@38:2>:int),
          (((1 + var102) = var77) && ((var77 <> 0) && ((<k1_1141@38:2> <= 0) && (<fail_1448@41:0> = 1))))
          |- P[<fail_1448@41:0>](<fail_1448@41:0>:int)
          
          P[<h_1140@33:1>](<h_1140@33:0>:int,<h_1140@33:1>:int),
          ((<<h_1140@33:2>@36:1> = <h_1140@33:1>) && ((<<h_1140@33:2>@36:0> = 0) && (<h_1140@33:0> = 0)))
          |- P[<<h_1140@33:2>@36:1>](<h_1140@33:0>:int,<h_1140@33:1>:int,
                                     <<h_1140@33:2>@36:0>:int,<<h_1140@33:2>@36:1>:int)
          
          P[<h_1140@30:1>](var103:int,<h_1140@33:1>:int),
          ((var103 = (1 + <h_1140@33:0>)) && ((1 + <h_1140@33:0>) <> 0))
          |- P[<h_1140@33:1>](<h_1140@33:0>:int,<h_1140@33:1>:int)
          Yhorn (Wed Sep 25 10:52:05 JST 2013)


(0=0) & (v_sep_fail_1448_sep_41_sep_0($174)) -> 1=0.
(($174-1=0) & ($175<=0) & ($176<>0) & (-$176+$177+1=0)) & (v_sep_h_1140_sep_33_sep_2_sep_36_sep_1($177,$178,$179,$175)) & (v_sep_h_1140_sep_30_sep_1($176,$178)) -> v_sep_fail_1448_sep_41_sep_0($174).
(($180=0) & ($181=0) & ($182-$183=0)) & (v_sep_h_1140_sep_33_sep_1($180,$183)) -> v_sep_h_1140_sep_33_sep_2_sep_36_sep_1($180,$183,$181,$182).
(($180+1<>0) & (-$180+$184-1=0)) & (v_sep_h_1140_sep_30_sep_1($184,$183)) -> v_sep_h_1140_sep_33_sep_1($180,$183).
$185-$186=0 -> v_sep_h_1140_sep_30_sep_1($186,$185).


v_sep_fail_1448_sep_41_sep_0: X
v_sep_h_1140_sep_30_sep_1: X
v_sep_h_1140_sep_33_sep_1: X
v_sep_h_1140_sep_33_sep_2_sep_36_sep_1: X
.........
v_sep_fail_1448_sep_41_sep_0: X
v_sep_h_1140_sep_30_sep_1: X
v_sep_h_1140_sep_33_sep_1: X
v_sep_h_1140_sep_33_sep_2_sep_36_sep_1: X
......
v_sep_fail_1448_sep_41_sep_0: X
v_sep_h_1140_sep_30_sep_1: X
v_sep_h_1140_sep_33_sep_1: X
v_sep_h_1140_sep_33_sep_2_sep_36_sep_1: X
.......
v_sep_fail_1448_sep_41_sep_0: X
v_sep_h_1140_sep_30_sep_1: X
v_sep_h_1140_sep_33_sep_1: X
v_sep_h_1140_sep_33_sep_2_sep_36_sep_1: X
.........(0=0) & (v_sep_fail_1448_sep_41_sep_0($174)) -> 1=0.
(($174-1=0) & ($175<=0) & ($176<>0) & (-$176+$177+1=0)) & (v_sep_h_1140_sep_33_sep_2_sep_36_sep_1($177,$178,$179,$175)) & (v_sep_h_1140_sep_30_sep_1($176,$178)) -> v_sep_fail_1448_sep_41_sep_0($174).
(($180=0) & ($181=0) & ($182-$183=0)) & (v_sep_h_1140_sep_33_sep_1($180,$183)) -> v_sep_h_1140_sep_33_sep_2_sep_36_sep_1($180,$183,$181,$182).
(($180+1<>0) & (-$180+$184-1=0)) & (v_sep_h_1140_sep_30_sep_1($184,$183)) -> v_sep_h_1140_sep_33_sep_1($180,$183).
$185-$186=0 -> v_sep_h_1140_sep_30_sep_1($186,$185).

           (<h_1140@30:1> = <h_1140@30:0>) |- P[<h_1140@30:1>](<h_1140@30:0>:int,
                                                               <h_1140@30:1>:int)
        solution:
          P[<fail_1448@41:0>]($187:bool) = false
          P[<h_1140@30:1>]($199:int,$201:int) = ($199 <= $201)
          P[<h_1140@33:1>]($204:int,$206:int) = ((1 + $204) <= $206)
          P[<<h_1140@33:2>@36:1>]($190:int,$192:int,$194:int,$196:int) = ((1 + $192) <= ((2 * $196) + $190))
        
      end HcSolver.solve_ub(34238)[4] (0.023996 sec.)
      begin HcSolver.check_validity(34520)[4]
        input:
          P[<fail_1448@41:0>](<fail_1448@41:0>:bool)|- bot
          
          P[<h_1140@30:1>](var77:int,var76:int),
          P[<<h_1140@33:2>@36:1>]((-1 + var77):int,var76:int,<k1_1141@38:1>:int,<k1_1141@38:2>:int),
          ((<k1_1141@38:2> <= 0) && ((var77 <> 0) && <fail_1448@41:0>)) |- P[<fail_1448@41:0>](
          <fail_1448@41:0>:bool)
          
          P[<h_1140@33:1>](<h_1140@33:0>:int,<h_1140@33:1>:int),
          ((<h_1140@33:0> = 0) && ((<<h_1140@33:2>@36:0> = 0) && (<<h_1140@33:2>@36:1> = <h_1140@33:1>)))
          |- P[<<h_1140@33:2>@36:1>](<h_1140@33:0>:int,<h_1140@33:1>:int,
                                     <<h_1140@33:2>@36:0>:int,<<h_1140@33:2>@36:1>:int)
          
          P[<h_1140@30:1>]((1 + <h_1140@33:0>):int,<h_1140@33:1>:int), (
          (1 + <h_1140@33:0>) <> 0) |- P[<h_1140@33:1>](<h_1140@33:0>:int,
                                                        <h_1140@33:1>:int)
          
           (<h_1140@30:1> = <h_1140@30:0>) |- P[<h_1140@30:1>](<h_1140@30:0>:int,
                                                               <h_1140@30:1>:int)
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        
      end HcSolver.check_validity(34520)[4] (0.007999 sec.)
      solution:
        P[<fail_1448@41:0>]($187:bool) = false
        P[<h_1140@30:1>]($199:int,$201:int) = ($199 <= $201)
        P[<h_1140@33:1>]($204:int,$206:int) = ((1 + $204) <= $206)
        P[<<h_1140@33:2>@36:1>]($190:int,$192:int,$194:int,$196:int) = ((1 + $192) <= ((2 * $196) + $190))
    end YhornInterface.solve(34237)[3] (0.031995 sec.)
    
  end RefTypeInfer.infer_etrs(10907)[2] (0.194970 sec.)
  refinement types:
    main_1444: X
    f_1446: v1:int -> X
    main_1043: v1:int -> (v2:unit -> X) -> X
    rev_1041: v1:int -> (v2:int -> X) -> X
    h_1140: v1:int -> v2:{v2:int | (v1 <= v2)} -> (v3:int -> v4:int -> (v5:int -> X) -> X) -> (v8:int -> X) -> X
    h_1140: v1:int ->
            v2:{v2:int | (v1 <= v2)} ->
            (v3:int -> v4:{v4:int | (v2 <= (v1 + v4))} -> (v5:int -> X) -> X) -> (v8:int -> X) -> X
    k1_1141: (v1:int -> v2:int -> (v3:int -> X) -> X) -> v6:int -> v7:int -> (v8:int -> X) -> X
    fail_1448: v1:{v1:bool | false} -> (v2:unit -> X) -> X
    f_1447: var130:int -> var129:unit -> X
    f_main_1445: var135:int -> (var134:unit -> X) -> var132:int -> X
    fail_1449: var139:bool -> (var138:unit -> X) -> X
    fail_1450: var143:bool -> (var142:unit -> X) -> X
    k2_1139: var148:int -> var147:int -> (var146:int -> X) -> X
    k_k1_u_1201: var159:int ->
                 var158:int ->
                 (var157:int -> var156:int -> (var155:int -> X) -> X) -> (var152:int -> X) -> var150:unit -> X
    k_k2_u_1331: var165:int -> var164:int -> (var163:int -> X) -> var161:unit -> X
  abstraction types:
    main_1444: X
    f_1446: v1:int -> X
    main_1043: v1:int -> (v2:unit -> X) -> X
    rev_1041: v1:int -> (v2:int -> X) -> X
    h_1140: var166:int ->
            var167:int[var167 -> (var166 <= var167)] ->
            (var168:int -> var169:int[var169 -> (var167 <= (var166 + var169))] -> (var170:int -> X) -> X) ->
            (var173:int -> X) -> X
    k1_1141: (v1:int -> v2:int -> (v3:int -> X) -> X) -> v6:int -> v7:int -> (v8:int -> X) -> X
    fail_1448: v1:bool -> (v2:unit -> X) -> X
    f_1447: var130:int -> var129:unit -> X
    f_main_1445: var135:int -> (var134:unit -> X) -> var132:int -> X
    fail_1449: var139:bool -> (var138:unit -> X) -> X
    fail_1450: var143:bool -> (var142:unit -> X) -> X
    k2_1139: var148:int -> var147:int -> (var146:int -> X) -> X
    k_k1_u_1201: var159:int ->
                 var158:int ->
                 (var157:int -> var156:int -> (var155:int -> X) -> X) -> (var152:int -> X) -> var150:unit -> X
    k_k2_u_1331: var165:int -> var164:int -> (var163:int -> X) -> var161:unit -> X
  
end AbsTypeInfer.refine(10906)[1] (0.202969 sec.)
DONE!

Prefix of spurious counter-example::
0; 0; 0; 0; 1; 0; 1

Program with abstraction types (CEGAR-cycle 2)::
Main: main_1444
  main_1444 -> (rand_int f_1446)
  f_1446 x_1419 -> (main_1043 x_1419 (f_1447 x_1419))
  f_1447 x_1419 x_1416 -> end
  f_main_1445 n_1044 k_main_1388 x_1391 when (x_1391 >= n_1044) -> (k_main_1388 ())
  f_main_1445 n_1044 k_main_1388 x_1391 when (not (x_1391 >= n_1044)) -> (fail_1450 true k_main_1388)
  fail_1448 b k -> {fail} => (k ())
  fail_1449 b k -> {fail} => (k ())
  fail_1450 b k -> {fail} => (k ())
  h_1140 x_1035 y_1036 k_1037 k_h_1249 when (x_1035 = 0) -> (k_1037 0 y_1036 k_h_1249)
  h_1140 x_1035 y_1036 k_1037 k_h_1249 when (not (x_1035 = 0)) ->
      (h_1140 (x_1035 - 1) y_1036 (k1_1141 k_1037) k_h_1249)
  k1_1141 k_1031 r1_1032 r2_1033 k_k1_1188 when (r2_1033 > 0) -> (k_k1_u_1201 r1_1032 r2_1033 k_1031 k_k1_1188 ())
  k1_1141 k_1031 r1_1032 r2_1033 k_k1_1188 when (not (r2_1033 > 0)) ->
      (fail_1448 true (k_k1_u_1201 r1_1032 r2_1033 k_1031 k_k1_1188))
  k2_1139 r1_1039 r2_1040 k_k2_1318 when (r2_1040 = 0) -> (k_k2_u_1331 r1_1039 r2_1040 k_k2_1318 ())
  k2_1139 r1_1039 r2_1040 k_k2_1318 when (not (r2_1040 = 0)) ->
      (fail_1449 true (k_k2_u_1331 r1_1039 r2_1040 k_k2_1318))
  k_k1_u_1201 r1_1032 r2_1033 k_1031 k_k1_1188 x_1191 -> (k_1031 (r1_1032 + 1) (r2_1033 - 1) k_k1_1188)
  k_k2_u_1331 r1_1039 r2_1040 k_k2_1318 x_1321 -> (k_k2_1318 r1_1039)
  main_1043 n_1044 k_main_1388 -> (rev_1041 n_1044 (f_main_1445 n_1044 k_main_1388))
  rev_1041 x_1042 k_rev_1346 -> (h_1140 x_1042 x_1042 k2_1139 k_rev_1346)
Types:
  main_1444 : X
  fail_1448 : (x_1:bool[x_1] -> (unit -> X) -> X)
  fail_1449 : (x_1:bool[x_1] -> (unit -> X) -> X)
  fail_1450 : (x_1:bool[x_1] -> (unit -> X) -> X)
  h_1140 : (x_1:int ->
            x_2:int[x_1 <= x_2; x_1 = x_2] ->
            (int -> x_5:int[x_1 >= x_2 - x_5; x_5 = 0] -> (int -> X) -> X) -> (int -> X) -> X)
  
(2-1) Abstracting ... DONE!

(2-2) Checking HORS ... DONE!

Error trace::
  main_1444 ... --> 
  f_1446 ... --> 
  main_1043 ... --> 
  rev_1041 ... --> 
  h_1140 [1/2] ... --> 
  k2_1139 [1/2] ... --> 
  k_k2_u_1331 ... --> 
  f_main_1445 [2/2] ... --> 
  fail_1450 ... --> fail -->
  ERROR!

Spurious counter-example::
  0; 0; 0; 0; 0; 0; 0; 1; 0

(2-3) Checking counter-example ... DONE!

(2-4) Discovering predicates ... 
begin AbsTypeInfer.refine(36455)[1]
  program:
    main_1444  | true = ((Random.int 0) f_1446)
    f_1446 x_1419 | true = (main_1043 x_1419
                                      (f_1447 x_1419))
    f_1447 x_1419 x_1416 | true = end
    f_main_1445 n_1044 k_main_1388 x_1391 | (x_1391 >= n_1044) = (k_main_1388 ())
    f_main_1445 n_1044 k_main_1388 x_1391 | (not (x_1391 >= n_1044)) = (
    fail_1450 true
              k_main_1388)
    fail_1448 b k | true = (fail ())
    fail_1449 b k | true = (fail ())
    fail_1450 b k | true = (fail ())
    h_1140 x_1035 y_1036 k_1037 k_h_1249 | (x_1035 = 0) = (k_1037 0
                                                                  y_1036
                                                                  k_h_1249)
    h_1140 x_1035 y_1036 k_1037 k_h_1249 | (not (x_1035 = 0)) = (h_1140 (
                                                                    x_1035 - 1)
                                                                    y_1036
                                                                    (k1_1141 k_1037)
                                                                    k_h_1249)
    k1_1141 k_1031 r1_1032 r2_1033 k_k1_1188 | (r2_1033 > 0) = (k_k1_u_1201 r1_1032
                                                                    r2_1033
                                                                    k_1031
                                                                    k_k1_1188
                                                                    ())
    k1_1141 k_1031 r1_1032 r2_1033 k_k1_1188 | (not (r2_1033 > 0)) = (
    fail_1448 true
              (k_k1_u_1201 r1_1032
                           r2_1033
                           k_1031
                           k_k1_1188))
    k2_1139 r1_1039 r2_1040 k_k2_1318 | (r2_1040 = 0) = (k_k2_u_1331 r1_1039
                                                                    r2_1040
                                                                    k_k2_1318
                                                                    ())
    k2_1139 r1_1039 r2_1040 k_k2_1318 | (not (r2_1040 = 0)) = (fail_1449 true
                                                                    (k_k2_u_1331 r1_1039
                                                                    r2_1040
                                                                    k_k2_1318))
    k_k1_u_1201 r1_1032 r2_1033 k_1031 k_k1_1188 x_1191 | true = (k_1031 (
                                                                    r1_1032 + 1)
                                                                    (r2_1033 - 1)
                                                                    k_k1_1188)
    k_k2_u_1331 r1_1039 r2_1040 k_k2_1318 x_1321 | true = (k_k2_1318 r1_1039)
    main_1043 n_1044 k_main_1388 | true = (rev_1041 n_1044
                                                    (f_main_1445 n_1044
                                                                 k_main_1388))
    rev_1041 x_1042 k_rev_1346 | true = (h_1140 x_1042
                                                x_1042
                                                k2_1139
                                                k_rev_1346)
    main_1444:X
    f_1446:int -> X
    f_1447:int -> unit -> X
    f_main_1445:int -> (unit -> X) -> int -> X
    fail_1448:bool -> (unit -> X) -> X
    fail_1449:bool -> (unit -> X) -> X
    fail_1450:bool -> (unit -> X) -> X
    h_1140:int -> int -> (int -> int -> (int -> X) -> X) -> (int -> X) -> X
    k1_1141:(int -> int -> (int -> X) -> X) -> int -> int -> (int -> X) -> X
    k2_1139:int -> int -> (int -> X) -> X
    k_k1_u_1201:int -> int -> (int -> int -> (int -> X) -> X) -> (int -> X) -> unit -> X
    k_k2_u_1331:int -> int -> (int -> X) -> unit -> X
    main_1043:int -> (unit -> X) -> X
    rev_1041:int -> (int -> X) -> X
  inlined functions: f_1446,f_1447,f_main_1445,k1_1141,k2_1139,k_k1_u_1201,k_k2_u_1331,main_1043,rev_1041
  counterexample: 0:0:0:0:0:0:0:1:0
  error traces:
    [true.nop(<f_1446@47:0> = var176)
     [true.(<main_1043@49:0> = <f_1446@47:0>)
      [true.(<rev_1041@51:0> = <main_1043@49:0>)
       [true.((<h_1140@53:0> = <rev_1041@51:0>) && (<h_1140@53:1> = <rev_1041@51:0>))
        [(<h_1140@53:0> = 0).((<<h_1140@53:2>@56:0> = 0) && (<<h_1140@53:2>@56:1> = <h_1140@53:1>))
         [true.((<k2_1139@58:0> = <<h_1140@53:2>@56:0>) && (<k2_1139@58:1> = <<h_1140@53:2>@56:1>))
          [(<k2_1139@58:1> = 0).
           ((<k_k2_u_1331@61:0> = <k2_1139@58:0>) &&
            ((<k_k2_u_1331@61:1> = <k2_1139@58:1>) && (<k_k2_u_1331@61:3> = ())))
           [true.(<<k_k2_u_1331@61:2>@63:0> = <k_k2_u_1331@61:0>)
            [true.(<<k2_1139@58:2>@65:0> = <<k_k2_u_1331@61:2>@63:0>)
             [true.(<<<h_1140@53:2>@56:2>@67:0> = <<k2_1139@58:2>@65:0>)
              [true.(<<h_1140@53:3>@69:0> = <<<h_1140@53:2>@56:2>@67:0>)
               [true.(<<rev_1041@51:1>@71:0> = <<h_1140@53:3>@69:0>)
                [true.((<f_main_1445@73:0> = <main_1043@49:0>) && (<f_main_1445@73:2> = <<rev_1041@51:1>@71:0>))
                 [(not (<f_main_1445@73:2> >= <f_main_1445@73:0>)).(<fail_1450@76:0> = true)[true.error
  begin RefTypeInfer.infer_etrs(36456)[2]
    horn clauses:
      P[<fail_1450@76:0>](<fail_1450@76:0>:bool)|- bot
      
      P[<f_main_1445@73:2>](<f_main_1445@73:0>:int,<f_main_1445@73:2>:int),
      ((<f_main_1445@73:2> < <f_main_1445@73:0>) && <fail_1450@76:0>) |- P[<fail_1450@76:0>](
      <fail_1450@76:0>:bool)
      
      P[<main_1043@49:0>](<f_main_1445@73:0>:int),
      P[<<rev_1041@51:1>@71:0>](<f_main_1445@73:0>:int,<f_main_1445@73:2>:int)|- P[<f_main_1445@73:2>](
      <f_main_1445@73:0>:int,<f_main_1445@73:2>:int)
      
      P[<rev_1041@51:0>](<rev_1041@51:0>:int),
      P[<<h_1140@53:3>@69:0>](<rev_1041@51:0>:int,<rev_1041@51:0>:int,<<rev_1041@51:1>@71:0>:int)|- P[<<rev_1041@51:1>@71:0>](
      <rev_1041@51:0>:int,<<rev_1041@51:1>@71:0>:int)
      
      P[<h_1140@53:1>](<h_1140@53:0>:int,<h_1140@53:1>:int),
      P[<<<h_1140@53:2>@56:2>@67:0>](<h_1140@53:0>:int,<h_1140@53:1>:int,0:int,<h_1140@53:1>:int,<<h_1140@53:3>@69:0>:int),
      (<h_1140@53:0> = 0) |- P[<<h_1140@53:3>@69:0>](<h_1140@53:0>:int,
                                                     <h_1140@53:1>:int,
                                                     <<h_1140@53:3>@69:0>:int)
      
      P[<rev_1041@51:0>](<h_1140@53:0>:int),
      P[<<k2_1139@58:2>@65:0>](<<h_1140@53:2>@56:0>:int,<<h_1140@53:2>@56:1>:int,<<<h_1140@53:2>@56:2>@67:0>:int),
      P[<h_1140@53:1>](<h_1140@53:0>:int,<h_1140@53:1>:int), (<h_1140@53:0> = <h_1140@53:1>)
      |- P[<<<h_1140@53:2>@56:2>@67:0>](<h_1140@53:0>:int,<h_1140@53:1>:int,
                                        <<h_1140@53:2>@56:0>:int,<<h_1140@53:2>@56:1>:int,
                                        <<<h_1140@53:2>@56:2>@67:0>:int)
      
      P[<k2_1139@58:1>](<k2_1139@58:0>:int,<k2_1139@58:1>:int),
      P[<<k_k2_u_1331@61:2>@63:0>](<k2_1139@58:0>:int,<k2_1139@58:1>:int,<<k2_1139@58:2>@65:0>:int),
      (<k2_1139@58:1> = 0) |- P[<<k2_1139@58:2>@65:0>](<k2_1139@58:0>:int,
                                                       <k2_1139@58:1>:int,
                                                       <<k2_1139@58:2>@65:0>:int)
      
      P[<k_k2_u_1331@61:3>](<k_k2_u_1331@61:0>:int,<k_k2_u_1331@61:1>:int,<k_k2_u_1331@61:3>:unit),
      (<<k_k2_u_1331@61:2>@63:0> = <k_k2_u_1331@61:0>)
      |- P[<<k_k2_u_1331@61:2>@63:0>](<k_k2_u_1331@61:0>:int,<k_k2_u_1331@61:1>:int,
                                      <<k_k2_u_1331@61:2>@63:0>:int)
      
      P[<k2_1139@58:1>](<k_k2_u_1331@61:0>:int,<k_k2_u_1331@61:1>:int), (
      <k_k2_u_1331@61:1> = 0)
      |- P[<k_k2_u_1331@61:3>](<k_k2_u_1331@61:0>:int,<k_k2_u_1331@61:1>:int,
                               <k_k2_u_1331@61:3>:unit)
      
      P[<rev_1041@51:0>](<h_1140@53:0>:int),
      P[<<h_1140@53:2>@56:1>](<h_1140@53:0>:int,<h_1140@53:0>:int,<k2_1139@58:0>:int,<k2_1139@58:1>:int)|- P[<k2_1139@58:1>](
      <k2_1139@58:0>:int,<k2_1139@58:1>:int)
      
      P[<h_1140@53:1>](<h_1140@53:0>:int,<h_1140@53:1>:int),
      ((<h_1140@53:0> = 0) && ((<<h_1140@53:2>@56:0> = 0) && (<<h_1140@53:2>@56:1> = <h_1140@53:1>)))
      |- P[<<h_1140@53:2>@56:1>](<h_1140@53:0>:int,<h_1140@53:1>:int,
                                 <<h_1140@53:2>@56:0>:int,<<h_1140@53:2>@56:1>:int)
      
      P[<rev_1041@51:0>](<h_1140@53:1>:int), (<h_1140@53:1> = <h_1140@53:0>)
      |- P[<h_1140@53:1>](<h_1140@53:0>:int,<h_1140@53:1>:int)
      
      P[<main_1043@49:0>](<rev_1041@51:0>:int)|- P[<rev_1041@51:0>](<rev_1041@51:0>:int)
      
      P[<f_1446@47:0>](<main_1043@49:0>:int)|- P[<main_1043@49:0>](<main_1043@49:0>:int)
      
      |- P[<f_1446@47:0>](<f_1446@47:0>:int)
    call trees:
      <main_1444@44>
        <f_1446@47>
          <main_1043@49>
            <rev_1041@51>
              <h_1140@53>
              </<h_1140@53:2>@56>
              <k2_1139@58>
                <k_k2_u_1331@61>
                </<k_k2_u_1331@61:2>@63>
              </<k2_1139@58:2>@65>
              <<<h_1140@53:2>@56:2>@67>
              </<h_1140@53:3>@69>
            </<rev_1041@51:1>@71>
            <f_main_1445@73>
              <fail_1450@76>
    inlined horn clauses:
      P[<fail_1450@76:0>](<fail_1450@76:0>:bool)|- bot
      
      P[<<h_1140@53:3>@69:0>](<f_main_1445@73:0>:int,<f_main_1445@73:0>:int,<f_main_1445@73:2>:int),
      ((<f_main_1445@73:2> < <f_main_1445@73:0>) && <fail_1450@76:0>) |- P[<fail_1450@76:0>](
      <fail_1450@76:0>:bool)
      
      P[<h_1140@53:1>](<h_1140@53:0>:int,<h_1140@53:1>:int),
      P[<<<h_1140@53:2>@56:2>@67:0>](<h_1140@53:0>:int,<h_1140@53:1>:int,0:int,<h_1140@53:1>:int,<<h_1140@53:3>@69:0>:int),
      (<h_1140@53:0> = 0) |- P[<<h_1140@53:3>@69:0>](<h_1140@53:0>:int,
                                                     <h_1140@53:1>:int,
                                                     <<h_1140@53:3>@69:0>:int)
      
      P[<<h_1140@53:2>@56:1>](var181:int,var181:int,<<h_1140@53:2>@56:0>:int,<<h_1140@53:2>@56:1>:int),
      P[<h_1140@53:1>](<h_1140@53:0>:int,<h_1140@53:1>:int),
      ((<<h_1140@53:2>@56:1> = 0) &&
       ((<h_1140@53:0> = <h_1140@53:1>) && (<<<h_1140@53:2>@56:2>@67:0> = <<h_1140@53:2>@56:0>)))
      |- P[<<<h_1140@53:2>@56:2>@67:0>](<h_1140@53:0>:int,<h_1140@53:1>:int,
                                        <<h_1140@53:2>@56:0>:int,<<h_1140@53:2>@56:1>:int,
                                        <<<h_1140@53:2>@56:2>@67:0>:int)
      
      P[<h_1140@53:1>](<h_1140@53:0>:int,<h_1140@53:1>:int),
      ((<h_1140@53:0> = 0) && ((<<h_1140@53:2>@56:0> = 0) && (<<h_1140@53:2>@56:1> = <h_1140@53:1>)))
      |- P[<<h_1140@53:2>@56:1>](<h_1140@53:0>:int,<h_1140@53:1>:int,
                                 <<h_1140@53:2>@56:0>:int,<<h_1140@53:2>@56:1>:int)
      
       (<h_1140@53:1> = <h_1140@53:0>) |- P[<h_1140@53:1>](<h_1140@53:0>:int,
                                                           <h_1140@53:1>:int)
    begin ParamSubstInfer.infer(38405)[3]
      
    end ParamSubstInfer.infer(38405)[3] (0.169974 sec.)
    inferred extra parameters:
      
    begin RefTypeInfer.elim_coeffs(38407)[3]
      
    end RefTypeInfer.elim_coeffs(38407)[3] (0.002999 sec.)
    begin GenHcSolver.solve(38768)[3]
      Horn clauses:
        P[<fail_1450@76:0>](<fail_1450@76:0>:bool)|- bot
        
        P[<<h_1140@53:3>@69:0>](<f_main_1445@73:0>:int,<f_main_1445@73:0>:int,<f_main_1445@73:2>:int),
        ((<f_main_1445@73:2> < <f_main_1445@73:0>) && <fail_1450@76:0>) |- P[<fail_1450@76:0>](
        <fail_1450@76:0>:bool)
        
        P[<h_1140@53:1>](<h_1140@53:0>:int,<h_1140@53:1>:int),
        P[<<<h_1140@53:2>@56:2>@67:0>](<h_1140@53:0>:int,<h_1140@53:1>:int,0:int,<h_1140@53:1>:int,<<h_1140@53:3>@69:0>:int),
        (<h_1140@53:0> = 0) |- P[<<h_1140@53:3>@69:0>](<h_1140@53:0>:int,
                                                       <h_1140@53:1>:int,
                                                       <<h_1140@53:3>@69:0>:int)
        
        P[<<h_1140@53:2>@56:1>](var181:int,var181:int,<<h_1140@53:2>@56:0>:int,<<h_1140@53:2>@56:1>:int),
        P[<h_1140@53:1>](<h_1140@53:0>:int,<h_1140@53:1>:int),
        ((<<h_1140@53:2>@56:1> = 0) &&
         ((<h_1140@53:0> = <h_1140@53:1>) && (<<<h_1140@53:2>@56:2>@67:0> = <<h_1140@53:2>@56:0>)))
        |- P[<<<h_1140@53:2>@56:2>@67:0>](<h_1140@53:0>:int,<h_1140@53:1>:int,
                                          <<h_1140@53:2>@56:0>:int,<<h_1140@53:2>@56:1>:int,
                                          <<<h_1140@53:2>@56:2>@67:0>:int)
        
        P[<h_1140@53:1>](<h_1140@53:0>:int,<h_1140@53:1>:int),
        ((<h_1140@53:0> = 0) && ((<<h_1140@53:2>@56:0> = 0) && (<<h_1140@53:2>@56:1> = <h_1140@53:1>)))
        |- P[<<h_1140@53:2>@56:1>](<h_1140@53:0>:int,<h_1140@53:1>:int,
                                   <<h_1140@53:2>@56:0>:int,<<h_1140@53:2>@56:1>:int)
        
         (<h_1140@53:1> = <h_1140@53:0>) |- P[<h_1140@53:1>](<h_1140@53:0>:int,
                                                             <h_1140@53:1>:int)
      lower bounds:
        P[<h_1140@53:1>](<h_1140@53:0>:int,<h_1140@53:1>:int) = (<h_1140@53:1> = <h_1140@53:0>)
        P[<<h_1140@53:2>@56:1>](<h_1140@53:0>:int,<h_1140@53:1>:int,<<h_1140@53:2>@56:0>:int,<<h_1140@53:2>@56:1>:int) =
        ((<h_1140@53:0> = 0) &&
         ((<<h_1140@53:2>@56:0> = 0) && ((<h_1140@53:1> = <<h_1140@53:2>@56:1>) && (<h_1140@53:1> = <h_1140@53:0>))))
        P[<<<h_1140@53:2>@56:2>@67:0>](<h_1140@53:0>:int,<h_1140@53:1>:int,<<h_1140@53:2>@56:0>:int,<<h_1140@53:2>@56:1>:int,<<<h_1140@53:2>@56:2>@67:0>:int) =
        ((<<h_1140@53:2>@56:1> = 0) &&
         ((<<h_1140@53:2>@56:0> = 0) &&
          ((<<<h_1140@53:2>@56:2>@67:0> = <<h_1140@53:2>@56:0>) && (<h_1140@53:1> = <h_1140@53:0>))))
        P[<<h_1140@53:3>@69:0>](<h_1140@53:0>:int,<h_1140@53:1>:int,<<h_1140@53:3>@69:0>:int) =
        ((<h_1140@53:0> = 0) && ((<h_1140@53:1> = 0) && (<<h_1140@53:3>@69:0> = 0)))
        P[<fail_1450@76:0>](<fail_1450@76:0>:bool) = false
      upper bounds:
        P[<fail_1450@76:0>](var183:bool) = true
      begin GenHcSolver.classify_pids(41262)[4]
        output:
          [<fail_1450@76:0>]
      end GenHcSolver.classify_pids(41262)[4] (0.000000 sec.)
      lb:false
      nub:false
      begin ApronInterface.convex_hull_interpolate(41265)[4]
        lb:false
        nub:false
        lb':false
        nub':false
        begin InterpProver.interpolate(41266)[5]
          begin InterpProver.interpolate_fresh(41267)[6]
            begin InterpProver.interpolate_log(41268)[7]
              input1: false
              input2: false
              begin InterpProver.interpolate_check(41269)[8]
                begin InterpProver.interpolate_simplify(41270)[9]
                  begin InterpProver.interpolate_quick(41283)[10]
                    
                  end InterpProver.interpolate_quick(41283)[10] (0.000000 sec.)
                  begin minimizing # of disjunctions(41287)[10]
                    input: false
                    output: false
                  end minimizing # of disjunctions(41287)[10] (0.000000 sec.)
                  
                end InterpProver.interpolate_simplify(41270)[9] (0.000000 sec.)
                
              end InterpProver.interpolate_check(41269)[8] (0.000000 sec.)
              output: false
            end InterpProver.interpolate_log(41268)[7] (0.000000 sec.)
            
          end InterpProver.interpolate_fresh(41267)[6] (0.000000 sec.)
          
        end InterpProver.interpolate(41266)[5] (0.000000 sec.)
        output:
          P[<fail_1450@76:0>](<fail_1450@76:0>:bool) = false
      end ApronInterface.convex_hull_interpolate(41265)[4] (0.000000 sec.)
      Horn clauses:
        P[<<h_1140@53:3>@69:0>](<f_main_1445@73:0>:int,<f_main_1445@73:0>:int,<f_main_1445@73:2>:int),
        (<f_main_1445@73:2> < <f_main_1445@73:0>) |- bot
        
        P[<h_1140@53:1>](<h_1140@53:0>:int,<h_1140@53:1>:int),
        P[<<<h_1140@53:2>@56:2>@67:0>](<h_1140@53:0>:int,<h_1140@53:1>:int,0:int,<h_1140@53:1>:int,<<h_1140@53:3>@69:0>:int),
        (<h_1140@53:0> = 0) |- P[<<h_1140@53:3>@69:0>](<h_1140@53:0>:int,
                                                       <h_1140@53:1>:int,
                                                       <<h_1140@53:3>@69:0>:int)
        
        P[<<h_1140@53:2>@56:1>](var181:int,var181:int,<<h_1140@53:2>@56:0>:int,<<h_1140@53:2>@56:1>:int),
        P[<h_1140@53:1>](<h_1140@53:0>:int,<h_1140@53:1>:int),
        ((<<h_1140@53:2>@56:1> = 0) &&
         ((<h_1140@53:0> = <h_1140@53:1>) && (<<<h_1140@53:2>@56:2>@67:0> = <<h_1140@53:2>@56:0>)))
        |- P[<<<h_1140@53:2>@56:2>@67:0>](<h_1140@53:0>:int,<h_1140@53:1>:int,
                                          <<h_1140@53:2>@56:0>:int,<<h_1140@53:2>@56:1>:int,
                                          <<<h_1140@53:2>@56:2>@67:0>:int)
        
        P[<h_1140@53:1>](<h_1140@53:0>:int,<h_1140@53:1>:int),
        ((<h_1140@53:0> = 0) && ((<<h_1140@53:2>@56:0> = 0) && (<<h_1140@53:2>@56:1> = <h_1140@53:1>)))
        |- P[<<h_1140@53:2>@56:1>](<h_1140@53:0>:int,<h_1140@53:1>:int,
                                   <<h_1140@53:2>@56:0>:int,<<h_1140@53:2>@56:1>:int)
        
         (<h_1140@53:1> = <h_1140@53:0>) |- P[<h_1140@53:1>](<h_1140@53:0>:int,
                                                             <h_1140@53:1>:int)
      lower bounds:
        P[<h_1140@53:1>](<h_1140@53:0>:int,<h_1140@53:1>:int) = (<h_1140@53:1> = <h_1140@53:0>)
        P[<<h_1140@53:2>@56:1>](<h_1140@53:0>:int,<h_1140@53:1>:int,<<h_1140@53:2>@56:0>:int,<<h_1140@53:2>@56:1>:int) =
        ((<h_1140@53:0> = 0) &&
         ((<<h_1140@53:2>@56:0> = 0) && ((<h_1140@53:1> = <<h_1140@53:2>@56:1>) && (<h_1140@53:1> = <h_1140@53:0>))))
        P[<<<h_1140@53:2>@56:2>@67:0>](<h_1140@53:0>:int,<h_1140@53:1>:int,<<h_1140@53:2>@56:0>:int,<<h_1140@53:2>@56:1>:int,<<<h_1140@53:2>@56:2>@67:0>:int) =
        ((<<h_1140@53:2>@56:1> = 0) &&
         ((<<h_1140@53:2>@56:0> = 0) &&
          ((<<<h_1140@53:2>@56:2>@67:0> = <<h_1140@53:2>@56:0>) && (<h_1140@53:1> = <h_1140@53:0>))))
        P[<<h_1140@53:3>@69:0>](<h_1140@53:0>:int,<h_1140@53:1>:int,<<h_1140@53:3>@69:0>:int) =
        ((<h_1140@53:0> = 0) && ((<h_1140@53:1> = 0) && (<<h_1140@53:3>@69:0> = 0)))
      upper bounds:
        P[<<h_1140@53:3>@69:0>](var184:int,var185:int,var186:int) = ((var186 >= var184) || (var184 <> var185))
      begin GenHcSolver.classify_pids(44234)[4]
        output:
          [<<h_1140@53:3>@69:0>]
      end GenHcSolver.classify_pids(44234)[4] (0.000000 sec.)
      lb:((<h_1140@53:0> = 0) && ((<h_1140@53:1> = 0) && (<<h_1140@53:3>@69:0> = 0)))
      nub:(not ((<<h_1140@53:3>@69:0> >= <h_1140@53:0>) || (<h_1140@53:0> <> <h_1140@53:1>)))
      begin ApronInterface.convex_hull_interpolate(44237)[4]
        lb:((<h_1140@53:0> = 0) && ((<h_1140@53:1> = 0) && (<<h_1140@53:3>@69:0> = 0)))
        nub:(not ((<<h_1140@53:3>@69:0> >= <h_1140@53:0>) || (<h_1140@53:0> <> <h_1140@53:1>)))
        lb':((<h_1140@53:0> = 0) && ((<h_1140@53:1> = 0) && (<<h_1140@53:3>@69:0> = 0)))
        nub':(not ((<<h_1140@53:3>@69:0> >= <h_1140@53:0>) || (<h_1140@53:0> <> <h_1140@53:1>)))
        begin InterpProver.interpolate(44238)[5]
          begin InterpProver.interpolate_fresh(44239)[6]
            begin InterpProver.interpolate_log(44240)[7]
              input1: ((<h_1140@53:0> = 0) && ((<h_1140@53:1> = 0) && (<<h_1140@53:3>@69:0> = 0)))
              input2: (not ((<<h_1140@53:3>@69:0> >= <h_1140@53:0>) || (<h_1140@53:0> <> <h_1140@53:1>)))
              begin InterpProver.interpolate_check(44241)[8]
                begin InterpProver.interpolate_simplify(44242)[9]
                  begin InterpProver.interpolate_quick(44305)[10]
                    begin CsisatInterface.interpolate_csisat_wrap(44314)[11]
                      begin CsisatInterface.interpolate_csisat_post_process(44315)[12]
                        begin CsisatInterface.interpolate_csisat_log(44316)[13]
                          input1: (0 = v_sep_h_1140_sep_53_sep_0 & 0 = v_sep_h_1140_sep_53_sep_1 & 0 = v_sep_h_1140_sep_53_sep_3_sep_69_sep_0)
                          input2: (v_sep_h_1140_sep_53_sep_0 = v_sep_h_1140_sep_53_sep_1 & (1 + v_sep_h_1140_sep_53_sep_3_sep_69_sep_0) <= v_sep_h_1140_sep_53_sep_0)
                          begin CsisatInterface.interpolate_csisat_raw(44317)[14]
                            
                          end CsisatInterface.interpolate_csisat_raw(44317)[14] (0.000000 sec.)
                          output: (-2*v_sep_h_1140_sep_53_sep_3_sep_69_sep_0 + 2*v_sep_h_1140_sep_53_sep_0) <= 0
                          
                        end CsisatInterface.interpolate_csisat_log(44316)[13] (0.000000 sec.)
                        after simplification: (-2*v_sep_h_1140_sep_53_sep_3_sep_69_sep_0 + 2*v_sep_h_1140_sep_53_sep_0) <= 0
                        after dnf conversion: (((-2*v_sep_h_1140_sep_53_sep_3_sep_69_sep_0 + 2*v_sep_h_1140_sep_53_sep_0) <= 0))
                        
                      end CsisatInterface.interpolate_csisat_post_process(44315)[12] (0.000000 sec.)
                      
                    end CsisatInterface.interpolate_csisat_wrap(44314)[11] (0.000000 sec.)
                    
                  end InterpProver.interpolate_quick(44305)[10] (0.000000 sec.)
                  
                end InterpProver.interpolate_simplify(44242)[9] (0.001000 sec.)
                
              end InterpProver.interpolate_check(44241)[8] (0.002000 sec.)
              output: (<h_1140@53:0> <= <<h_1140@53:3>@69:0>)
            end InterpProver.interpolate_log(44240)[7] (0.002000 sec.)
            
          end InterpProver.interpolate_fresh(44239)[6] (0.002000 sec.)
          
        end InterpProver.interpolate(44238)[5] (0.002000 sec.)
        output:
          P[<<h_1140@53:3>@69:0>](<h_1140@53:0>:int,<h_1140@53:1>:int,<<h_1140@53:3>@69:0>:int) =
          (<h_1140@53:0> <= <<h_1140@53:3>@69:0>)
      end ApronInterface.convex_hull_interpolate(44237)[4] (0.002000 sec.)
      Horn clauses:
        P[<h_1140@53:1>](0:int,<h_1140@53:1>:int),
        P[<<<h_1140@53:2>@56:2>@67:0>](0:int,<h_1140@53:1>:int,0:int,<h_1140@53:1>:int,<<h_1140@53:3>@69:0>:int),
        (0 > <<h_1140@53:3>@69:0>) |- bot
        
        P[<<h_1140@53:2>@56:1>](var181:int,var181:int,<<h_1140@53:2>@56:0>:int,<<h_1140@53:2>@56:1>:int),
        P[<h_1140@53:1>](<h_1140@53:0>:int,<h_1140@53:1>:int),
        ((<<h_1140@53:2>@56:1> = 0) &&
         ((<h_1140@53:0> = <h_1140@53:1>) && (<<<h_1140@53:2>@56:2>@67:0> = <<h_1140@53:2>@56:0>)))
        |- P[<<<h_1140@53:2>@56:2>@67:0>](<h_1140@53:0>:int,<h_1140@53:1>:int,
                                          <<h_1140@53:2>@56:0>:int,<<h_1140@53:2>@56:1>:int,
                                          <<<h_1140@53:2>@56:2>@67:0>:int)
        
        P[<h_1140@53:1>](<h_1140@53:0>:int,<h_1140@53:1>:int),
        ((<h_1140@53:0> = 0) && ((<<h_1140@53:2>@56:0> = 0) && (<<h_1140@53:2>@56:1> = <h_1140@53:1>)))
        |- P[<<h_1140@53:2>@56:1>](<h_1140@53:0>:int,<h_1140@53:1>:int,
                                   <<h_1140@53:2>@56:0>:int,<<h_1140@53:2>@56:1>:int)
        
         (<h_1140@53:1> = <h_1140@53:0>) |- P[<h_1140@53:1>](<h_1140@53:0>:int,
                                                             <h_1140@53:1>:int)
      lower bounds:
        P[<h_1140@53:1>](<h_1140@53:0>:int,<h_1140@53:1>:int) = (<h_1140@53:1> = <h_1140@53:0>)
        P[<<h_1140@53:2>@56:1>](<h_1140@53:0>:int,<h_1140@53:1>:int,<<h_1140@53:2>@56:0>:int,<<h_1140@53:2>@56:1>:int) =
        ((<h_1140@53:0> = 0) &&
         ((<<h_1140@53:2>@56:0> = 0) && ((<h_1140@53:1> = <<h_1140@53:2>@56:1>) && (<h_1140@53:1> = <h_1140@53:0>))))
        P[<<<h_1140@53:2>@56:2>@67:0>](<h_1140@53:0>:int,<h_1140@53:1>:int,<<h_1140@53:2>@56:0>:int,<<h_1140@53:2>@56:1>:int,<<<h_1140@53:2>@56:2>@67:0>:int) =
        ((<<h_1140@53:2>@56:1> = 0) &&
         ((<<h_1140@53:2>@56:0> = 0) &&
          ((<<<h_1140@53:2>@56:2>@67:0> = <<h_1140@53:2>@56:0>) && (<h_1140@53:1> = <h_1140@53:0>))))
      upper bounds:
        P[<<<h_1140@53:2>@56:2>@67:0>](var187:int,var188:int,var189:int,var190:int,var191:int) =
        ((var187 <> 0) || ((var188 <> 0) || ((var189 <> 0) || ((var190 <> 0) || (0 <= var191)))))
      begin GenHcSolver.classify_pids(47047)[4]
        output:
          [<<<h_1140@53:2>@56:2>@67:0>]
      end GenHcSolver.classify_pids(47047)[4] (0.000000 sec.)
      lb:((<<h_1140@53:2>@56:1> = 0) &&
          ((<<h_1140@53:2>@56:0> = 0) &&
           ((<<<h_1140@53:2>@56:2>@67:0> = <<h_1140@53:2>@56:0>) && (<h_1140@53:1> = <h_1140@53:0>))))
      nub:(not
             ((<h_1140@53:0> <> 0) ||
              ((<h_1140@53:1> <> 0) ||
               ((<<h_1140@53:2>@56:0> <> 0) || ((<<h_1140@53:2>@56:1> <> 0) || (0 <= <<<h_1140@53:2>@56:2>@67:0>))))))
      begin ApronInterface.convex_hull_interpolate(47050)[4]
        lb:((<<h_1140@53:2>@56:1> = 0) &&
            ((<<h_1140@53:2>@56:0> = 0) &&
             ((<<<h_1140@53:2>@56:2>@67:0> = <<h_1140@53:2>@56:0>) && (<h_1140@53:1> = <h_1140@53:0>))))
        nub:(not
               ((<h_1140@53:0> <> 0) ||
                ((<h_1140@53:1> <> 0) ||
                 ((<<h_1140@53:2>@56:0> <> 0) || ((<<h_1140@53:2>@56:1> <> 0) || (0 <= <<<h_1140@53:2>@56:2>@67:0>))))))
        lb':((<<h_1140@53:2>@56:1> = 0) &&
             ((<<h_1140@53:2>@56:0> = 0) &&
              ((<<<h_1140@53:2>@56:2>@67:0> = <<h_1140@53:2>@56:0>) && (<h_1140@53:1> = <h_1140@53:0>))))
        nub':(not
                ((<h_1140@53:0> <> 0) ||
                 ((<h_1140@53:1> <> 0) ||
                  ((<<h_1140@53:2>@56:0> <> 0) || ((<<h_1140@53:2>@56:1> <> 0) || (0 <= <<<h_1140@53:2>@56:2>@67:0>))))))
        begin InterpProver.interpolate(47051)[5]
          begin InterpProver.interpolate_fresh(47052)[6]
            begin InterpProver.interpolate_log(47053)[7]
              input1: ((<<h_1140@53:2>@56:1> = 0) &&
                       ((<<h_1140@53:2>@56:0> = 0) &&
                        ((<<<h_1140@53:2>@56:2>@67:0> = <<h_1140@53:2>@56:0>) && (<h_1140@53:1> = <h_1140@53:0>))))
              input2: (not
                         ((<h_1140@53:0> <> 0) ||
                          ((<h_1140@53:1> <> 0) ||
                           ((<<h_1140@53:2>@56:0> <> 0) ||
                            ((<<h_1140@53:2>@56:1> <> 0) || (0 <= <<<h_1140@53:2>@56:2>@67:0>))))))
              begin InterpProver.interpolate_check(47054)[8]
                begin InterpProver.interpolate_simplify(47055)[9]
                  begin InterpProver.interpolate_quick(47210)[10]
                    begin CsisatInterface.interpolate_csisat_wrap(47219)[11]
                      begin CsisatInterface.interpolate_csisat_post_process(47220)[12]
                        begin CsisatInterface.interpolate_csisat_log(47221)[13]
                          input1: (0 = v_sep_h_1140_sep_53_sep_2_sep_56_sep_0 & 0 = v_sep_h_1140_sep_53_sep_2_sep_56_sep_1 & v_sep_h_1140_sep_53_sep_0 = v_sep_h_1140_sep_53_sep_1 & v_sep_h_1140_sep_53_sep_2_sep_56_sep_0 = v_sep_h_1140_sep_53_sep_2_sep_56_sep_2_sep_67_sep_0)
                          input2: (0 = v_sep_h_1140_sep_53_sep_0 & 0 = v_sep_h_1140_sep_53_sep_1 & 0 = v_sep_h_1140_sep_53_sep_2_sep_56_sep_0 & 0 = v_sep_h_1140_sep_53_sep_2_sep_56_sep_1 & (1 + v_sep_h_1140_sep_53_sep_2_sep_56_sep_2_sep_67_sep_0) <= 0)
                          begin CsisatInterface.interpolate_csisat_raw(47222)[14]
                            
                          end CsisatInterface.interpolate_csisat_raw(47222)[14] (0.000000 sec.)
                          output: -2*v_sep_h_1140_sep_53_sep_2_sep_56_sep_2_sep_67_sep_0 <= 0
                          
                        end CsisatInterface.interpolate_csisat_log(47221)[13] (0.000000 sec.)
                        after simplification: -2*v_sep_h_1140_sep_53_sep_2_sep_56_sep_2_sep_67_sep_0 <= 0
                        after dnf conversion: ((-2*v_sep_h_1140_sep_53_sep_2_sep_56_sep_2_sep_67_sep_0 <= 0))
                        
                      end CsisatInterface.interpolate_csisat_post_process(47220)[12] (0.000000 sec.)
                      
                    end CsisatInterface.interpolate_csisat_wrap(47219)[11] (0.000000 sec.)
                    
                  end InterpProver.interpolate_quick(47210)[10] (0.001000 sec.)
                  
                end InterpProver.interpolate_simplify(47055)[9] (0.001000 sec.)
                
              end InterpProver.interpolate_check(47054)[8] (0.002000 sec.)
              output: (0 <= <<<h_1140@53:2>@56:2>@67:0>)
            end InterpProver.interpolate_log(47053)[7] (0.002000 sec.)
            
          end InterpProver.interpolate_fresh(47052)[6] (0.002000 sec.)
          
        end InterpProver.interpolate(47051)[5] (0.002000 sec.)
        output:
          P[<<<h_1140@53:2>@56:2>@67:0>](<h_1140@53:0>:int,<h_1140@53:1>:int,<<h_1140@53:2>@56:0>:int,<<h_1140@53:2>@56:1>:int,<<<h_1140@53:2>@56:2>@67:0>:int) =
          (0 <= <<<h_1140@53:2>@56:2>@67:0>)
      end ApronInterface.convex_hull_interpolate(47050)[4] (0.002000 sec.)
      Horn clauses:
        P[<<h_1140@53:2>@56:1>](var181:int,var181:int,<<<h_1140@53:2>@56:2>@67:0>:int,0:int),
        P[<h_1140@53:1>](<h_1140@53:0>:int,<h_1140@53:0>:int), (0 > <<<h_1140@53:2>@56:2>@67:0>) |- bot
        
        P[<h_1140@53:1>](<h_1140@53:0>:int,<h_1140@53:1>:int),
        ((<h_1140@53:0> = 0) && ((<<h_1140@53:2>@56:0> = 0) && (<<h_1140@53:2>@56:1> = <h_1140@53:1>)))
        |- P[<<h_1140@53:2>@56:1>](<h_1140@53:0>:int,<h_1140@53:1>:int,
                                   <<h_1140@53:2>@56:0>:int,<<h_1140@53:2>@56:1>:int)
        
         (<h_1140@53:1> = <h_1140@53:0>) |- P[<h_1140@53:1>](<h_1140@53:0>:int,
                                                             <h_1140@53:1>:int)
      lower bounds:
        P[<h_1140@53:1>](<h_1140@53:0>:int,<h_1140@53:1>:int) = (<h_1140@53:1> = <h_1140@53:0>)
        P[<<h_1140@53:2>@56:1>](<h_1140@53:0>:int,<h_1140@53:1>:int,<<h_1140@53:2>@56:0>:int,<<h_1140@53:2>@56:1>:int) =
        ((<h_1140@53:0> = 0) &&
         ((<<h_1140@53:2>@56:0> = 0) && ((<h_1140@53:1> = <<h_1140@53:2>@56:1>) && (<h_1140@53:1> = <h_1140@53:0>))))
      upper bounds:
        P[<<h_1140@53:2>@56:1>](var192:int,var193:int,var194:int,var195:int) =
        ((var195 <> 0) || ((0 <= var194) || (var192 <> var193)))
      begin GenHcSolver.classify_pids(48990)[4]
        output:
          [<<h_1140@53:2>@56:1>]
      end GenHcSolver.classify_pids(48990)[4] (0.000000 sec.)
      lb:((<h_1140@53:0> = 0) &&
          ((<<h_1140@53:2>@56:0> = 0) && ((<h_1140@53:1> = <<h_1140@53:2>@56:1>) && (<h_1140@53:1> = <h_1140@53:0>))))
      nub:(not ((<<h_1140@53:2>@56:1> <> 0) || ((0 <= <<h_1140@53:2>@56:0>) || (<h_1140@53:0> <> <h_1140@53:1>))))
      begin ApronInterface.convex_hull_interpolate(48993)[4]
        lb:((<h_1140@53:0> = 0) &&
            ((<<h_1140@53:2>@56:0> = 0) && ((<h_1140@53:1> = <<h_1140@53:2>@56:1>) && (<h_1140@53:1> = <h_1140@53:0>))))
        nub:(not ((<<h_1140@53:2>@56:1> <> 0) || ((0 <= <<h_1140@53:2>@56:0>) || (<h_1140@53:0> <> <h_1140@53:1>))))
        lb':((<h_1140@53:0> = 0) &&
             ((<<h_1140@53:2>@56:0> = 0) && ((<h_1140@53:1> = <<h_1140@53:2>@56:1>) && (<h_1140@53:1> = <h_1140@53:0>))))
        nub':(not ((<<h_1140@53:2>@56:1> <> 0) || ((0 <= <<h_1140@53:2>@56:0>) || (<h_1140@53:0> <> <h_1140@53:1>))))
        begin InterpProver.interpolate(48994)[5]
          begin InterpProver.interpolate_fresh(48995)[6]
            begin InterpProver.interpolate_log(48996)[7]
              input1: ((<h_1140@53:0> = 0) &&
                       ((<<h_1140@53:2>@56:0> = 0) &&
                        ((<h_1140@53:1> = <<h_1140@53:2>@56:1>) && (<h_1140@53:1> = <h_1140@53:0>))))
              input2: (not
                         ((<<h_1140@53:2>@56:1> <> 0) ||
                          ((0 <= <<h_1140@53:2>@56:0>) || (<h_1140@53:0> <> <h_1140@53:1>))))
              begin InterpProver.interpolate_check(48997)[8]
                begin InterpProver.interpolate_simplify(48998)[9]
                  begin InterpProver.interpolate_quick(49139)[10]
                    begin CsisatInterface.interpolate_csisat_wrap(49148)[11]
                      begin CsisatInterface.interpolate_csisat_post_process(49149)[12]
                        begin CsisatInterface.interpolate_csisat_log(49150)[13]
                          input1: (0 = v_sep_h_1140_sep_53_sep_0 & 0 = v_sep_h_1140_sep_53_sep_2_sep_56_sep_0 & v_sep_h_1140_sep_53_sep_0 = v_sep_h_1140_sep_53_sep_2_sep_56_sep_1 & v_sep_h_1140_sep_53_sep_1 = v_sep_h_1140_sep_53_sep_2_sep_56_sep_1)
                          input2: (0 = v_sep_h_1140_sep_53_sep_2_sep_56_sep_1 & v_sep_h_1140_sep_53_sep_0 = v_sep_h_1140_sep_53_sep_1 & (1 + v_sep_h_1140_sep_53_sep_2_sep_56_sep_0) <= 0)
                          begin CsisatInterface.interpolate_csisat_raw(49151)[14]
                            
                          end CsisatInterface.interpolate_csisat_raw(49151)[14] (0.000000 sec.)
                          output: -2*v_sep_h_1140_sep_53_sep_2_sep_56_sep_0 <= 0
                          
                        end CsisatInterface.interpolate_csisat_log(49150)[13] (0.000000 sec.)
                        after simplification: -2*v_sep_h_1140_sep_53_sep_2_sep_56_sep_0 <= 0
                        after dnf conversion: ((-2*v_sep_h_1140_sep_53_sep_2_sep_56_sep_0 <= 0))
                        
                      end CsisatInterface.interpolate_csisat_post_process(49149)[12] (0.000000 sec.)
                      
                    end CsisatInterface.interpolate_csisat_wrap(49148)[11] (0.000000 sec.)
                    
                  end InterpProver.interpolate_quick(49139)[10] (0.001000 sec.)
                  
                end InterpProver.interpolate_simplify(48998)[9] (0.001000 sec.)
                
              end InterpProver.interpolate_check(48997)[8] (0.001000 sec.)
              output: (0 <= <<h_1140@53:2>@56:0>)
            end InterpProver.interpolate_log(48996)[7] (0.001000 sec.)
            
          end InterpProver.interpolate_fresh(48995)[6] (0.001000 sec.)
          
        end InterpProver.interpolate(48994)[5] (0.001000 sec.)
        output:
          P[<<h_1140@53:2>@56:1>](<h_1140@53:0>:int,<h_1140@53:1>:int,<<h_1140@53:2>@56:0>:int,<<h_1140@53:2>@56:1>:int) =
          (0 <= <<h_1140@53:2>@56:0>)
      end ApronInterface.convex_hull_interpolate(48993)[4] (0.002000 sec.)
      Horn clauses:
         (<h_1140@53:1> = <h_1140@53:0>) |- P[<h_1140@53:1>](<h_1140@53:0>:int,
                                                             <h_1140@53:1>:int)
      lower bounds:
        P[<h_1140@53:1>](<h_1140@53:0>:int,<h_1140@53:1>:int) = (<h_1140@53:1> = <h_1140@53:0>)
      upper bounds:
        P[<h_1140@53:1>](var196:int,var197:int) = true
      begin GenHcSolver.classify_pids(49566)[4]
        output:
          [<h_1140@53:1>]
      end GenHcSolver.classify_pids(49566)[4] (0.000000 sec.)
      lb:(<h_1140@53:1> = <h_1140@53:0>)
      nub:false
      begin ApronInterface.convex_hull_interpolate(49569)[4]
        lb:(<h_1140@53:1> = <h_1140@53:0>)
        nub:false
        lb':(<h_1140@53:1> = <h_1140@53:0>)
        nub':false
        begin InterpProver.interpolate(49570)[5]
          begin InterpProver.interpolate_fresh(49571)[6]
            begin InterpProver.interpolate_log(49572)[7]
              input1: (<h_1140@53:1> = <h_1140@53:0>)
              input2: false
              begin InterpProver.interpolate_check(49573)[8]
                begin InterpProver.interpolate_simplify(49574)[9]
                  begin InterpProver.interpolate_quick(49589)[10]
                    
                  end InterpProver.interpolate_quick(49589)[10] (0.000000 sec.)
                  
                end InterpProver.interpolate_simplify(49574)[9] (0.000000 sec.)
                
              end InterpProver.interpolate_check(49573)[8] (0.000000 sec.)
              output: true
            end InterpProver.interpolate_log(49572)[7] (0.000000 sec.)
            
          end InterpProver.interpolate_fresh(49571)[6] (0.000000 sec.)
          
        end InterpProver.interpolate(49570)[5] (0.000000 sec.)
        output:
          P[<h_1140@53:1>](<h_1140@53:0>:int,<h_1140@53:1>:int) = true
      end ApronInterface.convex_hull_interpolate(49569)[4] (0.000000 sec.)
      begin HcSolver.check_validity(49654)[4]
        input:
          P[<fail_1450@76:0>](<fail_1450@76:0>:bool)|- bot
          
          P[<<h_1140@53:3>@69:0>](<f_main_1445@73:0>:int,<f_main_1445@73:0>:int,<f_main_1445@73:2>:int),
          ((<f_main_1445@73:2> < <f_main_1445@73:0>) && <fail_1450@76:0>) |- P[<fail_1450@76:0>](
          <fail_1450@76:0>:bool)
          
          P[<h_1140@53:1>](<h_1140@53:0>:int,<h_1140@53:1>:int),
          P[<<<h_1140@53:2>@56:2>@67:0>](<h_1140@53:0>:int,<h_1140@53:1>:int,0:int,<h_1140@53:1>:int,<<h_1140@53:3>@69:0>:int),
          (<h_1140@53:0> = 0) |- P[<<h_1140@53:3>@69:0>](<h_1140@53:0>:int,
                                                         <h_1140@53:1>:int,
                                                         <<h_1140@53:3>@69:0>:int)
          
          P[<<h_1140@53:2>@56:1>](var181:int,var181:int,<<h_1140@53:2>@56:0>:int,<<h_1140@53:2>@56:1>:int),
          P[<h_1140@53:1>](<h_1140@53:0>:int,<h_1140@53:1>:int),
          ((<<h_1140@53:2>@56:1> = 0) &&
           ((<h_1140@53:0> = <h_1140@53:1>) && (<<<h_1140@53:2>@56:2>@67:0> = <<h_1140@53:2>@56:0>)))
          |- P[<<<h_1140@53:2>@56:2>@67:0>](<h_1140@53:0>:int,<h_1140@53:1>:int,
                                            <<h_1140@53:2>@56:0>:int,
                                            <<h_1140@53:2>@56:1>:int,
                                            <<<h_1140@53:2>@56:2>@67:0>:int)
          
          P[<h_1140@53:1>](<h_1140@53:0>:int,<h_1140@53:1>:int),
          ((<h_1140@53:0> = 0) && ((<<h_1140@53:2>@56:0> = 0) && (<<h_1140@53:2>@56:1> = <h_1140@53:1>)))
          |- P[<<h_1140@53:2>@56:1>](<h_1140@53:0>:int,<h_1140@53:1>:int,
                                     <<h_1140@53:2>@56:0>:int,<<h_1140@53:2>@56:1>:int)
          
           (<h_1140@53:1> = <h_1140@53:0>) |- P[<h_1140@53:1>](<h_1140@53:0>:int,
                                                               <h_1140@53:1>:int)
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        
      end HcSolver.check_validity(49654)[4] (0.004000 sec.)
      solution:
        P[<fail_1450@76:0>](<fail_1450@76:0>:bool) = false
        P[<<h_1140@53:3>@69:0>](<h_1140@53:0>:int,<h_1140@53:1>:int,<<h_1140@53:3>@69:0>:int) =
        (<h_1140@53:0> <= <<h_1140@53:3>@69:0>)
        P[<<<h_1140@53:2>@56:2>@67:0>](<h_1140@53:0>:int,<h_1140@53:1>:int,<<h_1140@53:2>@56:0>:int,<<h_1140@53:2>@56:1>:int,<<<h_1140@53:2>@56:2>@67:0>:int) =
        (0 <= <<<h_1140@53:2>@56:2>@67:0>)
        P[<<h_1140@53:2>@56:1>](<h_1140@53:0>:int,<h_1140@53:1>:int,<<h_1140@53:2>@56:0>:int,<<h_1140@53:2>@56:1>:int) =
        (0 <= <<h_1140@53:2>@56:0>)
        P[<h_1140@53:1>](<h_1140@53:0>:int,<h_1140@53:1>:int) = true
    end GenHcSolver.solve(38768)[3] (0.068990 sec.)
    begin GenHcSolver.solve(50285)[3]
      Horn clauses:
        P[<fail_1450@76:0>](<fail_1450@76:0>:bool)|- bot
        
        P[<<h_1140@53:3>@69:0>](<f_main_1445@73:0>:int,<f_main_1445@73:0>:int,<f_main_1445@73:2>:int),
        ((<f_main_1445@73:2> < <f_main_1445@73:0>) && <fail_1450@76:0>) |- P[<fail_1450@76:0>](
        <fail_1450@76:0>:bool)
        
        P[<h_1140@53:1>](<h_1140@53:0>:int,<h_1140@53:1>:int),
        P[<<<h_1140@53:2>@56:2>@67:0>](<h_1140@53:0>:int,<h_1140@53:1>:int,0:int,<h_1140@53:1>:int,<<h_1140@53:3>@69:0>:int),
        (<h_1140@53:0> = 0) |- P[<<h_1140@53:3>@69:0>](<h_1140@53:0>:int,
                                                       <h_1140@53:1>:int,
                                                       <<h_1140@53:3>@69:0>:int)
        
        P[<<h_1140@53:2>@56:1>](var181:int,var181:int,<<h_1140@53:2>@56:0>:int,<<h_1140@53:2>@56:1>:int),
        P[<h_1140@53:1>](<h_1140@53:0>:int,<h_1140@53:1>:int),
        ((<<h_1140@53:2>@56:1> = 0) &&
         ((<h_1140@53:0> = <h_1140@53:1>) && (<<<h_1140@53:2>@56:2>@67:0> = <<h_1140@53:2>@56:0>)))
        |- P[<<<h_1140@53:2>@56:2>@67:0>](<h_1140@53:0>:int,<h_1140@53:1>:int,
                                          <<h_1140@53:2>@56:0>:int,<<h_1140@53:2>@56:1>:int,
                                          <<<h_1140@53:2>@56:2>@67:0>:int)
        
        P[<h_1140@53:1>](<h_1140@53:0>:int,<h_1140@53:1>:int),
        ((<h_1140@53:0> = 0) && ((<<h_1140@53:2>@56:0> = 0) && (<<h_1140@53:2>@56:1> = <h_1140@53:1>)))
        |- P[<<h_1140@53:2>@56:1>](<h_1140@53:0>:int,<h_1140@53:1>:int,
                                   <<h_1140@53:2>@56:0>:int,<<h_1140@53:2>@56:1>:int)
        
         (<h_1140@53:1> = <h_1140@53:0>) |- P[<h_1140@53:1>](<h_1140@53:0>:int,
                                                             <h_1140@53:1>:int)
      lower bounds:
        P[<h_1140@53:1>](<h_1140@53:0>:int,<h_1140@53:1>:int) = (<h_1140@53:1> = <h_1140@53:0>)
        P[<<h_1140@53:2>@56:1>](<h_1140@53:0>:int,<h_1140@53:1>:int,<<h_1140@53:2>@56:0>:int,<<h_1140@53:2>@56:1>:int) =
        ((<h_1140@53:0> = 0) &&
         ((<<h_1140@53:2>@56:0> = 0) && ((<h_1140@53:1> = <<h_1140@53:2>@56:1>) && (<h_1140@53:1> = <h_1140@53:0>))))
        P[<<<h_1140@53:2>@56:2>@67:0>](<h_1140@53:0>:int,<h_1140@53:1>:int,<<h_1140@53:2>@56:0>:int,<<h_1140@53:2>@56:1>:int,<<<h_1140@53:2>@56:2>@67:0>:int) =
        ((<<h_1140@53:2>@56:1> = 0) &&
         ((<<h_1140@53:2>@56:0> = 0) &&
          ((<<<h_1140@53:2>@56:2>@67:0> = <<h_1140@53:2>@56:0>) && (<h_1140@53:1> = <h_1140@53:0>))))
        P[<<h_1140@53:3>@69:0>](<h_1140@53:0>:int,<h_1140@53:1>:int,<<h_1140@53:3>@69:0>:int) =
        ((<h_1140@53:0> = 0) && ((<h_1140@53:1> = 0) && (<<h_1140@53:3>@69:0> = 0)))
        P[<fail_1450@76:0>](<fail_1450@76:0>:bool) = false
      upper bounds:
        P[<fail_1450@76:0>](var199:bool) = true
      begin GenHcSolver.classify_pids(52779)[4]
        output:
          [<fail_1450@76:0>]
      end GenHcSolver.classify_pids(52779)[4] (0.000000 sec.)
      lb:false
      nub:false
      begin ApronInterface.convex_hull_interpolate(52782)[4]
        lb:false
        nub:false
        begin ExtFormula.Formula.case_analysis_boolean(52785)[5]
          ts: false
          
        end ExtFormula.Formula.case_analysis_boolean(52785)[5] (0.000000 sec.)
        begin ExtFormula.Formula.case_analysis_boolean(52790)[5]
          ts: false
          
        end ExtFormula.Formula.case_analysis_boolean(52790)[5] (0.000000 sec.)
        lb':(-1 >= 0)
        nub':(-1 >= 0)
        begin InterpProver.interpolate(52793)[5]
          begin InterpProver.interpolate_fresh(52794)[6]
            begin InterpProver.interpolate_log(52795)[7]
              input1: (-1 >= 0)
              input2: (-1 >= 0)
              begin InterpProver.interpolate_check(52796)[8]
                begin InterpProver.interpolate_simplify(52797)[9]
                  begin InterpProver.interpolate_quick(52812)[10]
                    
                  end InterpProver.interpolate_quick(52812)[10] (0.000000 sec.)
                  begin minimizing # of disjunctions(52816)[10]
                    input: false
                    output: false
                  end minimizing # of disjunctions(52816)[10] (0.000000 sec.)
                  
                end InterpProver.interpolate_simplify(52797)[9] (0.000000 sec.)
                
              end InterpProver.interpolate_check(52796)[8] (0.001000 sec.)
              output: false
            end InterpProver.interpolate_log(52795)[7] (0.001000 sec.)
            
          end InterpProver.interpolate_fresh(52794)[6] (0.001000 sec.)
          
        end InterpProver.interpolate(52793)[5] (0.001000 sec.)
        output:
          P[<fail_1450@76:0>](<fail_1450@76:0>:bool) = false
      end ApronInterface.convex_hull_interpolate(52782)[4] (0.001000 sec.)
      Horn clauses:
        P[<<h_1140@53:3>@69:0>](<f_main_1445@73:0>:int,<f_main_1445@73:0>:int,<f_main_1445@73:2>:int),
        (<f_main_1445@73:2> < <f_main_1445@73:0>) |- bot
        
        P[<h_1140@53:1>](<h_1140@53:0>:int,<h_1140@53:1>:int),
        P[<<<h_1140@53:2>@56:2>@67:0>](<h_1140@53:0>:int,<h_1140@53:1>:int,0:int,<h_1140@53:1>:int,<<h_1140@53:3>@69:0>:int),
        (<h_1140@53:0> = 0) |- P[<<h_1140@53:3>@69:0>](<h_1140@53:0>:int,
                                                       <h_1140@53:1>:int,
                                                       <<h_1140@53:3>@69:0>:int)
        
        P[<<h_1140@53:2>@56:1>](var181:int,var181:int,<<h_1140@53:2>@56:0>:int,<<h_1140@53:2>@56:1>:int),
        P[<h_1140@53:1>](<h_1140@53:0>:int,<h_1140@53:1>:int),
        ((<<h_1140@53:2>@56:1> = 0) &&
         ((<h_1140@53:0> = <h_1140@53:1>) && (<<<h_1140@53:2>@56:2>@67:0> = <<h_1140@53:2>@56:0>)))
        |- P[<<<h_1140@53:2>@56:2>@67:0>](<h_1140@53:0>:int,<h_1140@53:1>:int,
                                          <<h_1140@53:2>@56:0>:int,<<h_1140@53:2>@56:1>:int,
                                          <<<h_1140@53:2>@56:2>@67:0>:int)
        
        P[<h_1140@53:1>](<h_1140@53:0>:int,<h_1140@53:1>:int),
        ((<h_1140@53:0> = 0) && ((<<h_1140@53:2>@56:0> = 0) && (<<h_1140@53:2>@56:1> = <h_1140@53:1>)))
        |- P[<<h_1140@53:2>@56:1>](<h_1140@53:0>:int,<h_1140@53:1>:int,
                                   <<h_1140@53:2>@56:0>:int,<<h_1140@53:2>@56:1>:int)
        
         (<h_1140@53:1> = <h_1140@53:0>) |- P[<h_1140@53:1>](<h_1140@53:0>:int,
                                                             <h_1140@53:1>:int)
      lower bounds:
        P[<h_1140@53:1>](<h_1140@53:0>:int,<h_1140@53:1>:int) = (<h_1140@53:1> = <h_1140@53:0>)
        P[<<h_1140@53:2>@56:1>](<h_1140@53:0>:int,<h_1140@53:1>:int,<<h_1140@53:2>@56:0>:int,<<h_1140@53:2>@56:1>:int) =
        ((<h_1140@53:0> = 0) &&
         ((<<h_1140@53:2>@56:0> = 0) && ((<h_1140@53:1> = <<h_1140@53:2>@56:1>) && (<h_1140@53:1> = <h_1140@53:0>))))
        P[<<<h_1140@53:2>@56:2>@67:0>](<h_1140@53:0>:int,<h_1140@53:1>:int,<<h_1140@53:2>@56:0>:int,<<h_1140@53:2>@56:1>:int,<<<h_1140@53:2>@56:2>@67:0>:int) =
        ((<<h_1140@53:2>@56:1> = 0) &&
         ((<<h_1140@53:2>@56:0> = 0) &&
          ((<<<h_1140@53:2>@56:2>@67:0> = <<h_1140@53:2>@56:0>) && (<h_1140@53:1> = <h_1140@53:0>))))
        P[<<h_1140@53:3>@69:0>](<h_1140@53:0>:int,<h_1140@53:1>:int,<<h_1140@53:3>@69:0>:int) =
        ((<h_1140@53:0> = 0) && ((<h_1140@53:1> = 0) && (<<h_1140@53:3>@69:0> = 0)))
      upper bounds:
        P[<<h_1140@53:3>@69:0>](var200:int,var201:int,var202:int) = ((var202 >= var200) || (var200 <> var201))
      begin GenHcSolver.classify_pids(55770)[4]
        output:
          [<<h_1140@53:3>@69:0>]
      end GenHcSolver.classify_pids(55770)[4] (0.000000 sec.)
      lb:((<h_1140@53:0> = 0) && ((<h_1140@53:1> = 0) && (<<h_1140@53:3>@69:0> = 0)))
      nub:(not ((<<h_1140@53:3>@69:0> >= <h_1140@53:0>) || (<h_1140@53:0> <> <h_1140@53:1>)))
      begin ApronInterface.convex_hull_interpolate(55773)[4]
        lb:((<h_1140@53:0> = 0) && ((<h_1140@53:1> = 0) && (<<h_1140@53:3>@69:0> = 0)))
        nub:(not ((<<h_1140@53:3>@69:0> >= <h_1140@53:0>) || (<h_1140@53:0> <> <h_1140@53:1>)))
        begin ExtFormula.Formula.case_analysis_boolean(55786)[5]
          ts: ((<h_1140@53:0> = 0) && ((<h_1140@53:1> = 0) && (<<h_1140@53:3>@69:0> = 0)))
          
        end ExtFormula.Formula.case_analysis_boolean(55786)[5] (0.000000 sec.)
        begin ExtFormula.Formula.case_analysis_boolean(55809)[5]
          ts: ((<<h_1140@53:3>@69:0> < <h_1140@53:0>) && (<h_1140@53:0> = <h_1140@53:1>))
          
        end ExtFormula.Formula.case_analysis_boolean(55809)[5] (0.000000 sec.)
        lb':((<<h_1140@53:3>@69:0> = 0) && ((<h_1140@53:1> = 0) && (<h_1140@53:0> = 0)))
        nub':(((<h_1140@53:1> + (-1 * <h_1140@53:0>)) = 0) &&
              (((-1 + (-1 * <<h_1140@53:3>@69:0>)) + <h_1140@53:0>) >= 0))
        begin InterpProver.interpolate(55816)[5]
          begin InterpProver.interpolate_fresh(55817)[6]
            begin InterpProver.interpolate_log(55818)[7]
              input1: ((<<h_1140@53:3>@69:0> = 0) && ((<h_1140@53:1> = 0) && (<h_1140@53:0> = 0)))
              input2: (((<h_1140@53:1> + (-1 * <h_1140@53:0>)) = 0) &&
                       (((-1 + (-1 * <<h_1140@53:3>@69:0>)) + <h_1140@53:0>) >= 0))
              begin InterpProver.interpolate_check(55819)[8]
                begin InterpProver.interpolate_simplify(55820)[9]
                  begin InterpProver.interpolate_quick(55889)[10]
                    begin CsisatInterface.interpolate_csisat_wrap(55898)[11]
                      begin CsisatInterface.interpolate_csisat_post_process(55899)[12]
                        begin CsisatInterface.interpolate_csisat_log(55900)[13]
                          input1: (0 = v_sep_h_1140_sep_53_sep_0 & 0 = v_sep_h_1140_sep_53_sep_1 & 0 = v_sep_h_1140_sep_53_sep_3_sep_69_sep_0)
                          input2: (v_sep_h_1140_sep_53_sep_0 = v_sep_h_1140_sep_53_sep_1 & (1 + v_sep_h_1140_sep_53_sep_3_sep_69_sep_0) <= v_sep_h_1140_sep_53_sep_0)
                          begin CsisatInterface.interpolate_csisat_raw(55901)[14]
                            
                          end CsisatInterface.interpolate_csisat_raw(55901)[14] (0.000000 sec.)
                          output: (-2*v_sep_h_1140_sep_53_sep_3_sep_69_sep_0 + 2*v_sep_h_1140_sep_53_sep_0) <= 0
                          
                        end CsisatInterface.interpolate_csisat_log(55900)[13] (0.000000 sec.)
                        after simplification: (-2*v_sep_h_1140_sep_53_sep_3_sep_69_sep_0 + 2*v_sep_h_1140_sep_53_sep_0) <= 0
                        after dnf conversion: (((-2*v_sep_h_1140_sep_53_sep_3_sep_69_sep_0 + 2*v_sep_h_1140_sep_53_sep_0) <= 0))
                        
                      end CsisatInterface.interpolate_csisat_post_process(55899)[12] (0.000000 sec.)
                      
                    end CsisatInterface.interpolate_csisat_wrap(55898)[11] (0.000000 sec.)
                    
                  end InterpProver.interpolate_quick(55889)[10] (0.000000 sec.)
                  
                end InterpProver.interpolate_simplify(55820)[9] (0.001000 sec.)
                
              end InterpProver.interpolate_check(55819)[8] (0.002000 sec.)
              output: (<h_1140@53:0> <= <<h_1140@53:3>@69:0>)
            end InterpProver.interpolate_log(55818)[7] (0.002000 sec.)
            
          end InterpProver.interpolate_fresh(55817)[6] (0.002000 sec.)
          
        end InterpProver.interpolate(55816)[5] (0.002000 sec.)
        output:
          P[<<h_1140@53:3>@69:0>](<h_1140@53:0>:int,<h_1140@53:1>:int,<<h_1140@53:3>@69:0>:int) =
          (<h_1140@53:0> <= <<h_1140@53:3>@69:0>)
      end ApronInterface.convex_hull_interpolate(55773)[4] (0.003000 sec.)
      Horn clauses:
        P[<h_1140@53:1>](0:int,<h_1140@53:1>:int),
        P[<<<h_1140@53:2>@56:2>@67:0>](0:int,<h_1140@53:1>:int,0:int,<h_1140@53:1>:int,<<h_1140@53:3>@69:0>:int),
        (0 > <<h_1140@53:3>@69:0>) |- bot
        
        P[<<h_1140@53:2>@56:1>](var181:int,var181:int,<<h_1140@53:2>@56:0>:int,<<h_1140@53:2>@56:1>:int),
        P[<h_1140@53:1>](<h_1140@53:0>:int,<h_1140@53:1>:int),
        ((<<h_1140@53:2>@56:1> = 0) &&
         ((<h_1140@53:0> = <h_1140@53:1>) && (<<<h_1140@53:2>@56:2>@67:0> = <<h_1140@53:2>@56:0>)))
        |- P[<<<h_1140@53:2>@56:2>@67:0>](<h_1140@53:0>:int,<h_1140@53:1>:int,
                                          <<h_1140@53:2>@56:0>:int,<<h_1140@53:2>@56:1>:int,
                                          <<<h_1140@53:2>@56:2>@67:0>:int)
        
        P[<h_1140@53:1>](<h_1140@53:0>:int,<h_1140@53:1>:int),
        ((<h_1140@53:0> = 0) && ((<<h_1140@53:2>@56:0> = 0) && (<<h_1140@53:2>@56:1> = <h_1140@53:1>)))
        |- P[<<h_1140@53:2>@56:1>](<h_1140@53:0>:int,<h_1140@53:1>:int,
                                   <<h_1140@53:2>@56:0>:int,<<h_1140@53:2>@56:1>:int)
        
         (<h_1140@53:1> = <h_1140@53:0>) |- P[<h_1140@53:1>](<h_1140@53:0>:int,
                                                             <h_1140@53:1>:int)
      lower bounds:
        P[<h_1140@53:1>](<h_1140@53:0>:int,<h_1140@53:1>:int) = (<h_1140@53:1> = <h_1140@53:0>)
        P[<<h_1140@53:2>@56:1>](<h_1140@53:0>:int,<h_1140@53:1>:int,<<h_1140@53:2>@56:0>:int,<<h_1140@53:2>@56:1>:int) =
        ((<h_1140@53:0> = 0) &&
         ((<<h_1140@53:2>@56:0> = 0) && ((<h_1140@53:1> = <<h_1140@53:2>@56:1>) && (<h_1140@53:1> = <h_1140@53:0>))))
        P[<<<h_1140@53:2>@56:2>@67:0>](<h_1140@53:0>:int,<h_1140@53:1>:int,<<h_1140@53:2>@56:0>:int,<<h_1140@53:2>@56:1>:int,<<<h_1140@53:2>@56:2>@67:0>:int) =
        ((<<h_1140@53:2>@56:1> = 0) &&
         ((<<h_1140@53:2>@56:0> = 0) &&
          ((<<<h_1140@53:2>@56:2>@67:0> = <<h_1140@53:2>@56:0>) && (<h_1140@53:1> = <h_1140@53:0>))))
      upper bounds:
        P[<<<h_1140@53:2>@56:2>@67:0>](var203:int,var204:int,var205:int,var206:int,var207:int) =
        ((var203 <> 0) || ((var204 <> 0) || ((var205 <> 0) || ((var206 <> 0) || (0 <= var207)))))
      begin GenHcSolver.classify_pids(58633)[4]
        output:
          [<<<h_1140@53:2>@56:2>@67:0>]
      end GenHcSolver.classify_pids(58633)[4] (0.000000 sec.)
      lb:((<<h_1140@53:2>@56:1> = 0) &&
          ((<<h_1140@53:2>@56:0> = 0) &&
           ((<<<h_1140@53:2>@56:2>@67:0> = <<h_1140@53:2>@56:0>) && (<h_1140@53:1> = <h_1140@53:0>))))
      nub:(not
             ((<h_1140@53:0> <> 0) ||
              ((<h_1140@53:1> <> 0) ||
               ((<<h_1140@53:2>@56:0> <> 0) || ((<<h_1140@53:2>@56:1> <> 0) || (0 <= <<<h_1140@53:2>@56:2>@67:0>))))))
      begin ApronInterface.convex_hull_interpolate(58636)[4]
        lb:((<<h_1140@53:2>@56:1> = 0) &&
            ((<<h_1140@53:2>@56:0> = 0) &&
             ((<<<h_1140@53:2>@56:2>@67:0> = <<h_1140@53:2>@56:0>) && (<h_1140@53:1> = <h_1140@53:0>))))
        nub:(not
               ((<h_1140@53:0> <> 0) ||
                ((<h_1140@53:1> <> 0) ||
                 ((<<h_1140@53:2>@56:0> <> 0) || ((<<h_1140@53:2>@56:1> <> 0) || (0 <= <<<h_1140@53:2>@56:2>@67:0>))))))
        begin ExtFormula.Formula.case_analysis_boolean(58679)[5]
          ts: ((<<h_1140@53:2>@56:1> = 0) &&
               ((<<h_1140@53:2>@56:0> = 0) &&
                ((<<<h_1140@53:2>@56:2>@67:0> = <<h_1140@53:2>@56:0>) && (<h_1140@53:1> = <h_1140@53:0>))))
          
        end ExtFormula.Formula.case_analysis_boolean(58679)[5] (0.000000 sec.)
        begin ExtFormula.Formula.case_analysis_boolean(58721)[5]
          ts: ((<h_1140@53:0> = 0) &&
               ((<h_1140@53:1> = 0) &&
                ((<<h_1140@53:2>@56:0> = 0) && ((<<h_1140@53:2>@56:1> = 0) && (0 > <<<h_1140@53:2>@56:2>@67:0>)))))
          
        end ExtFormula.Formula.case_analysis_boolean(58721)[5] (0.000000 sec.)
        lb':(((<h_1140@53:1> + (-1 * <h_1140@53:0>)) = 0) &&
             ((<<<h_1140@53:2>@56:2>@67:0> = 0) && ((<<h_1140@53:2>@56:1> = 0) && (<<h_1140@53:2>@56:0> = 0))))
        nub':((<<h_1140@53:2>@56:1> = 0) &&
              ((<<h_1140@53:2>@56:0> = 0) &&
               ((<h_1140@53:1> = 0) && ((<h_1140@53:0> = 0) && ((-1 + (-1 * <<<h_1140@53:2>@56:2>@67:0>)) >= 0)))))
        begin InterpProver.interpolate(58729)[5]
          begin InterpProver.interpolate_fresh(58730)[6]
            begin InterpProver.interpolate_log(58731)[7]
              input1: (((<h_1140@53:1> + (-1 * <h_1140@53:0>)) = 0) &&
                       ((<<<h_1140@53:2>@56:2>@67:0> = 0) && ((<<h_1140@53:2>@56:1> = 0) && (<<h_1140@53:2>@56:0> = 0))))
              input2: ((<<h_1140@53:2>@56:1> = 0) &&
                       ((<<h_1140@53:2>@56:0> = 0) &&
                        ((<h_1140@53:1> = 0) &&
                         ((<h_1140@53:0> = 0) && ((-1 + (-1 * <<<h_1140@53:2>@56:2>@67:0>)) >= 0)))))
              begin InterpProver.interpolate_check(58732)[8]
                begin InterpProver.interpolate_simplify(58733)[9]
                  begin InterpProver.interpolate_quick(58876)[10]
                    begin CsisatInterface.interpolate_csisat_wrap(58885)[11]
                      begin CsisatInterface.interpolate_csisat_post_process(58886)[12]
                        begin CsisatInterface.interpolate_csisat_log(58887)[13]
                          input1: (0 = v_sep_h_1140_sep_53_sep_2_sep_56_sep_0 & 0 = v_sep_h_1140_sep_53_sep_2_sep_56_sep_1 & 0 = v_sep_h_1140_sep_53_sep_2_sep_56_sep_2_sep_67_sep_0 & v_sep_h_1140_sep_53_sep_0 = v_sep_h_1140_sep_53_sep_1)
                          input2: (0 = v_sep_h_1140_sep_53_sep_0 & 0 = v_sep_h_1140_sep_53_sep_1 & 0 = v_sep_h_1140_sep_53_sep_2_sep_56_sep_0 & 0 = v_sep_h_1140_sep_53_sep_2_sep_56_sep_1 & (1 + v_sep_h_1140_sep_53_sep_2_sep_56_sep_2_sep_67_sep_0) <= 0)
                          begin CsisatInterface.interpolate_csisat_raw(58888)[14]
                            
                          end CsisatInterface.interpolate_csisat_raw(58888)[14] (0.000000 sec.)
                          output: -2*v_sep_h_1140_sep_53_sep_2_sep_56_sep_2_sep_67_sep_0 <= 0
                          
                        end CsisatInterface.interpolate_csisat_log(58887)[13] (0.000000 sec.)
                        after simplification: -2*v_sep_h_1140_sep_53_sep_2_sep_56_sep_2_sep_67_sep_0 <= 0
                        after dnf conversion: ((-2*v_sep_h_1140_sep_53_sep_2_sep_56_sep_2_sep_67_sep_0 <= 0))
                        
                      end CsisatInterface.interpolate_csisat_post_process(58886)[12] (0.000000 sec.)
                      
                    end CsisatInterface.interpolate_csisat_wrap(58885)[11] (0.000000 sec.)
                    
                  end InterpProver.interpolate_quick(58876)[10] (0.001000 sec.)
                  
                end InterpProver.interpolate_simplify(58733)[9] (0.002000 sec.)
                
              end InterpProver.interpolate_check(58732)[8] (0.003000 sec.)
              output: (0 <= <<<h_1140@53:2>@56:2>@67:0>)
            end InterpProver.interpolate_log(58731)[7] (0.003000 sec.)
            
          end InterpProver.interpolate_fresh(58730)[6] (0.003000 sec.)
          
        end InterpProver.interpolate(58729)[5] (0.003000 sec.)
        output:
          P[<<<h_1140@53:2>@56:2>@67:0>](<h_1140@53:0>:int,<h_1140@53:1>:int,<<h_1140@53:2>@56:0>:int,<<h_1140@53:2>@56:1>:int,<<<h_1140@53:2>@56:2>@67:0>:int) =
          (0 <= <<<h_1140@53:2>@56:2>@67:0>)
      end ApronInterface.convex_hull_interpolate(58636)[4] (0.003999 sec.)
      Horn clauses:
        P[<<h_1140@53:2>@56:1>](var181:int,var181:int,<<<h_1140@53:2>@56:2>@67:0>:int,0:int),
        P[<h_1140@53:1>](<h_1140@53:0>:int,<h_1140@53:0>:int), (0 > <<<h_1140@53:2>@56:2>@67:0>) |- bot
        
        P[<h_1140@53:1>](<h_1140@53:0>:int,<h_1140@53:1>:int),
        ((<h_1140@53:0> = 0) && ((<<h_1140@53:2>@56:0> = 0) && (<<h_1140@53:2>@56:1> = <h_1140@53:1>)))
        |- P[<<h_1140@53:2>@56:1>](<h_1140@53:0>:int,<h_1140@53:1>:int,
                                   <<h_1140@53:2>@56:0>:int,<<h_1140@53:2>@56:1>:int)
        
         (<h_1140@53:1> = <h_1140@53:0>) |- P[<h_1140@53:1>](<h_1140@53:0>:int,
                                                             <h_1140@53:1>:int)
      lower bounds:
        P[<h_1140@53:1>](<h_1140@53:0>:int,<h_1140@53:1>:int) = (<h_1140@53:1> = <h_1140@53:0>)
        P[<<h_1140@53:2>@56:1>](<h_1140@53:0>:int,<h_1140@53:1>:int,<<h_1140@53:2>@56:0>:int,<<h_1140@53:2>@56:1>:int) =
        ((<h_1140@53:0> = 0) &&
         ((<<h_1140@53:2>@56:0> = 0) && ((<h_1140@53:1> = <<h_1140@53:2>@56:1>) && (<h_1140@53:1> = <h_1140@53:0>))))
      upper bounds:
        P[<<h_1140@53:2>@56:1>](var208:int,var209:int,var210:int,var211:int) =
        ((var211 <> 0) || ((0 <= var210) || (var208 <> var209)))
      begin GenHcSolver.classify_pids(60661)[4]
        output:
          [<<h_1140@53:2>@56:1>]
      end GenHcSolver.classify_pids(60661)[4] (0.000000 sec.)
      lb:((<h_1140@53:0> = 0) &&
          ((<<h_1140@53:2>@56:0> = 0) && ((<h_1140@53:1> = <<h_1140@53:2>@56:1>) && (<h_1140@53:1> = <h_1140@53:0>))))
      nub:(not ((<<h_1140@53:2>@56:1> <> 0) || ((0 <= <<h_1140@53:2>@56:0>) || (<h_1140@53:0> <> <h_1140@53:1>))))
      begin ApronInterface.convex_hull_interpolate(60664)[4]
        lb:((<h_1140@53:0> = 0) &&
            ((<<h_1140@53:2>@56:0> = 0) && ((<h_1140@53:1> = <<h_1140@53:2>@56:1>) && (<h_1140@53:1> = <h_1140@53:0>))))
        nub:(not ((<<h_1140@53:2>@56:1> <> 0) || ((0 <= <<h_1140@53:2>@56:0>) || (<h_1140@53:0> <> <h_1140@53:1>))))
        begin ExtFormula.Formula.case_analysis_boolean(60708)[5]
          ts: ((<h_1140@53:0> = 0) &&
               ((<<h_1140@53:2>@56:0> = 0) &&
                ((<h_1140@53:1> = <<h_1140@53:2>@56:1>) && (<h_1140@53:1> = <h_1140@53:0>))))
          
        end ExtFormula.Formula.case_analysis_boolean(60708)[5] (0.000000 sec.)
        begin ExtFormula.Formula.case_analysis_boolean(60742)[5]
          ts: ((<<h_1140@53:2>@56:1> = 0) && ((0 > <<h_1140@53:2>@56:0>) && (<h_1140@53:0> = <h_1140@53:1>)))
          
        end ExtFormula.Formula.case_analysis_boolean(60742)[5] (0.000000 sec.)
        lb':((<<h_1140@53:2>@56:1> = 0) && ((<<h_1140@53:2>@56:0> = 0) && ((<h_1140@53:1> = 0) && (<h_1140@53:0> = 0))))
        nub':(((<h_1140@53:1> + (-1 * <h_1140@53:0>)) = 0) &&
              ((<<h_1140@53:2>@56:1> = 0) && ((-1 + (-1 * <<h_1140@53:2>@56:0>)) >= 0)))
        begin InterpProver.interpolate(60749)[5]
          begin InterpProver.interpolate_fresh(60750)[6]
            begin InterpProver.interpolate_log(60751)[7]
              input1: ((<<h_1140@53:2>@56:1> = 0) &&
                       ((<<h_1140@53:2>@56:0> = 0) && ((<h_1140@53:1> = 0) && (<h_1140@53:0> = 0))))
              input2: (((<h_1140@53:1> + (-1 * <h_1140@53:0>)) = 0) &&
                       ((<<h_1140@53:2>@56:1> = 0) && ((-1 + (-1 * <<h_1140@53:2>@56:0>)) >= 0)))
              begin InterpProver.interpolate_check(60752)[8]
                begin InterpProver.interpolate_simplify(60753)[9]
                  begin InterpProver.interpolate_quick(60850)[10]
                    begin CsisatInterface.interpolate_csisat_wrap(60859)[11]
                      begin CsisatInterface.interpolate_csisat_post_process(60860)[12]
                        begin CsisatInterface.interpolate_csisat_log(60861)[13]
                          input1: (0 = v_sep_h_1140_sep_53_sep_0 & 0 = v_sep_h_1140_sep_53_sep_1 & 0 = v_sep_h_1140_sep_53_sep_2_sep_56_sep_0 & 0 = v_sep_h_1140_sep_53_sep_2_sep_56_sep_1)
                          input2: (0 = v_sep_h_1140_sep_53_sep_2_sep_56_sep_1 & v_sep_h_1140_sep_53_sep_0 = v_sep_h_1140_sep_53_sep_1 & (1 + v_sep_h_1140_sep_53_sep_2_sep_56_sep_0) <= 0)
                          begin CsisatInterface.interpolate_csisat_raw(60862)[14]
                            
                          end CsisatInterface.interpolate_csisat_raw(60862)[14] (0.000000 sec.)
                          output: -2*v_sep_h_1140_sep_53_sep_2_sep_56_sep_0 <= 0
                          
                        end CsisatInterface.interpolate_csisat_log(60861)[13] (0.000000 sec.)
                        after simplification: -2*v_sep_h_1140_sep_53_sep_2_sep_56_sep_0 <= 0
                        after dnf conversion: ((-2*v_sep_h_1140_sep_53_sep_2_sep_56_sep_0 <= 0))
                        
                      end CsisatInterface.interpolate_csisat_post_process(60860)[12] (0.000000 sec.)
                      
                    end CsisatInterface.interpolate_csisat_wrap(60859)[11] (0.000000 sec.)
                    
                  end InterpProver.interpolate_quick(60850)[10] (0.002000 sec.)
                  
                end InterpProver.interpolate_simplify(60753)[9] (0.002000 sec.)
                
              end InterpProver.interpolate_check(60752)[8] (0.003000 sec.)
              output: (0 <= <<h_1140@53:2>@56:0>)
            end InterpProver.interpolate_log(60751)[7] (0.003000 sec.)
            
          end InterpProver.interpolate_fresh(60750)[6] (0.003000 sec.)
          
        end InterpProver.interpolate(60749)[5] (0.003000 sec.)
        output:
          P[<<h_1140@53:2>@56:1>](<h_1140@53:0>:int,<h_1140@53:1>:int,<<h_1140@53:2>@56:0>:int,<<h_1140@53:2>@56:1>:int) =
          (0 <= <<h_1140@53:2>@56:0>)
      end ApronInterface.convex_hull_interpolate(60664)[4] (0.003999 sec.)
      Horn clauses:
         (<h_1140@53:1> = <h_1140@53:0>) |- P[<h_1140@53:1>](<h_1140@53:0>:int,
                                                             <h_1140@53:1>:int)
      lower bounds:
        P[<h_1140@53:1>](<h_1140@53:0>:int,<h_1140@53:1>:int) = (<h_1140@53:1> = <h_1140@53:0>)
      upper bounds:
        P[<h_1140@53:1>](var212:int,var213:int) = true
      begin GenHcSolver.classify_pids(61279)[4]
        output:
          [<h_1140@53:1>]
      end GenHcSolver.classify_pids(61279)[4] (0.000000 sec.)
      lb:(<h_1140@53:1> = <h_1140@53:0>)
      nub:false
      begin ApronInterface.convex_hull_interpolate(61282)[4]
        lb:(<h_1140@53:1> = <h_1140@53:0>)
        nub:false
        begin ExtFormula.Formula.case_analysis_boolean(61287)[5]
          ts: (<h_1140@53:1> = <h_1140@53:0>)
          
        end ExtFormula.Formula.case_analysis_boolean(61287)[5] (0.000000 sec.)
        begin ExtFormula.Formula.case_analysis_boolean(61294)[5]
          ts: false
          
        end ExtFormula.Formula.case_analysis_boolean(61294)[5] (0.000000 sec.)
        lb':((<h_1140@53:1> + (-1 * <h_1140@53:0>)) = 0)
        nub':(-1 >= 0)
        begin InterpProver.interpolate(61297)[5]
          begin InterpProver.interpolate_fresh(61298)[6]
            begin InterpProver.interpolate_log(61299)[7]
              input1: ((<h_1140@53:1> + (-1 * <h_1140@53:0>)) = 0)
              input2: (-1 >= 0)
              begin InterpProver.interpolate_check(61300)[8]
                begin InterpProver.interpolate_simplify(61301)[9]
                  begin InterpProver.interpolate_quick(61317)[10]
                    
                  end InterpProver.interpolate_quick(61317)[10] (0.000000 sec.)
                  
                end InterpProver.interpolate_simplify(61301)[9] (0.000000 sec.)
                
              end InterpProver.interpolate_check(61300)[8] (0.000000 sec.)
              output: true
            end InterpProver.interpolate_log(61299)[7] (0.000000 sec.)
            
          end InterpProver.interpolate_fresh(61298)[6] (0.000000 sec.)
          
        end InterpProver.interpolate(61297)[5] (0.000000 sec.)
        output:
          P[<h_1140@53:1>](<h_1140@53:0>:int,<h_1140@53:1>:int) = true
      end ApronInterface.convex_hull_interpolate(61282)[4] (0.000000 sec.)
      begin HcSolver.check_validity(61384)[4]
        input:
          P[<fail_1450@76:0>](<fail_1450@76:0>:bool)|- bot
          
          P[<<h_1140@53:3>@69:0>](<f_main_1445@73:0>:int,<f_main_1445@73:0>:int,<f_main_1445@73:2>:int),
          ((<f_main_1445@73:2> < <f_main_1445@73:0>) && <fail_1450@76:0>) |- P[<fail_1450@76:0>](
          <fail_1450@76:0>:bool)
          
          P[<h_1140@53:1>](<h_1140@53:0>:int,<h_1140@53:1>:int),
          P[<<<h_1140@53:2>@56:2>@67:0>](<h_1140@53:0>:int,<h_1140@53:1>:int,0:int,<h_1140@53:1>:int,<<h_1140@53:3>@69:0>:int),
          (<h_1140@53:0> = 0) |- P[<<h_1140@53:3>@69:0>](<h_1140@53:0>:int,
                                                         <h_1140@53:1>:int,
                                                         <<h_1140@53:3>@69:0>:int)
          
          P[<<h_1140@53:2>@56:1>](var181:int,var181:int,<<h_1140@53:2>@56:0>:int,<<h_1140@53:2>@56:1>:int),
          P[<h_1140@53:1>](<h_1140@53:0>:int,<h_1140@53:1>:int),
          ((<<h_1140@53:2>@56:1> = 0) &&
           ((<h_1140@53:0> = <h_1140@53:1>) && (<<<h_1140@53:2>@56:2>@67:0> = <<h_1140@53:2>@56:0>)))
          |- P[<<<h_1140@53:2>@56:2>@67:0>](<h_1140@53:0>:int,<h_1140@53:1>:int,
                                            <<h_1140@53:2>@56:0>:int,
                                            <<h_1140@53:2>@56:1>:int,
                                            <<<h_1140@53:2>@56:2>@67:0>:int)
          
          P[<h_1140@53:1>](<h_1140@53:0>:int,<h_1140@53:1>:int),
          ((<h_1140@53:0> = 0) && ((<<h_1140@53:2>@56:0> = 0) && (<<h_1140@53:2>@56:1> = <h_1140@53:1>)))
          |- P[<<h_1140@53:2>@56:1>](<h_1140@53:0>:int,<h_1140@53:1>:int,
                                     <<h_1140@53:2>@56:0>:int,<<h_1140@53:2>@56:1>:int)
          
           (<h_1140@53:1> = <h_1140@53:0>) |- P[<h_1140@53:1>](<h_1140@53:0>:int,
                                                               <h_1140@53:1>:int)
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        
      end HcSolver.check_validity(61384)[4] (0.003999 sec.)
      solution:
        P[<fail_1450@76:0>](<fail_1450@76:0>:bool) = false
        P[<<h_1140@53:3>@69:0>](<h_1140@53:0>:int,<h_1140@53:1>:int,<<h_1140@53:3>@69:0>:int) =
        (<h_1140@53:0> <= <<h_1140@53:3>@69:0>)
        P[<<<h_1140@53:2>@56:2>@67:0>](<h_1140@53:0>:int,<h_1140@53:1>:int,<<h_1140@53:2>@56:0>:int,<<h_1140@53:2>@56:1>:int,<<<h_1140@53:2>@56:2>@67:0>:int) =
        (0 <= <<<h_1140@53:2>@56:2>@67:0>)
        P[<<h_1140@53:2>@56:1>](<h_1140@53:0>:int,<h_1140@53:1>:int,<<h_1140@53:2>@56:0>:int,<<h_1140@53:2>@56:1>:int) =
        (0 <= <<h_1140@53:2>@56:0>)
        P[<h_1140@53:1>](<h_1140@53:0>:int,<h_1140@53:1>:int) = true
    end GenHcSolver.solve(50285)[3] (0.069989 sec.)
    begin YhornInterface.solve(62015)[3]
      begin HcSolver.solve_ub(62016)[4]
        encoded:
          P[<fail_1450@76:0>](<fail_1450@76:0>:int)|- bot
          
          P[<<h_1140@53:3>@69:0>](<f_main_1445@73:0>:int,<f_main_1445@73:0>:int,<f_main_1445@73:2>:int),
          ((<f_main_1445@73:2> < <f_main_1445@73:0>) && (<fail_1450@76:0> = 1))
          |- P[<fail_1450@76:0>](<fail_1450@76:0>:int)
          
          P[<h_1140@53:1>](<h_1140@53:0>:int,<h_1140@53:1>:int),
          P[<<<h_1140@53:2>@56:2>@67:0>](<h_1140@53:0>:int,<h_1140@53:1>:int,0:int,<h_1140@53:1>:int,<<h_1140@53:3>@69:0>:int),
          (<h_1140@53:0> = 0) |- P[<<h_1140@53:3>@69:0>](<h_1140@53:0>:int,
                                                         <h_1140@53:1>:int,
                                                         <<h_1140@53:3>@69:0>:int)
          
          P[<<h_1140@53:2>@56:1>](var181:int,var181:int,<<h_1140@53:2>@56:0>:int,<<h_1140@53:2>@56:1>:int),
          P[<h_1140@53:1>](<h_1140@53:0>:int,<h_1140@53:1>:int),
          ((<<h_1140@53:2>@56:1> = 0) &&
           ((<h_1140@53:0> = <h_1140@53:1>) && (<<<h_1140@53:2>@56:2>@67:0> = <<h_1140@53:2>@56:0>)))
          |- P[<<<h_1140@53:2>@56:2>@67:0>](<h_1140@53:0>:int,<h_1140@53:1>:int,
                                            <<h_1140@53:2>@56:0>:int,
                                            <<h_1140@53:2>@56:1>:int,
                                            <<<h_1140@53:2>@56:2>@67:0>:int)
          
          P[<h_1140@53:1>](<h_1140@53:0>:int,<h_1140@53:1>:int),
          ((<h_1140@53:0> = 0) && ((<<h_1140@53:2>@56:0> = 0) && (<<h_1140@53:2>@56:1> = <h_1140@53:1>)))
          |- P[<<h_1140@53:2>@56:1>](<h_1140@53:0>:int,<h_1140@53:1>:int,
                                     <<h_1140@53:2>@56:0>:int,<<h_1140@53:2>@56:1>:int)
          
           (<h_1140@53:1> = <h_1140@53:0>) |- P[<h_1140@53:1>](<h_1140@53:0>:int,
                                                               <h_1140@53:1>:int)
        input to Yhorn:
          P[<fail_1450@76:0>](<fail_1450@76:0>:int)|- bot
          
          P[<<h_1140@53:3>@69:0>](<f_main_1445@73:0>:int,<f_main_1445@73:0>:int,<f_main_1445@73:2>:int),
          ((<f_main_1445@73:2> < <f_main_1445@73:0>) && (<fail_1450@76:0> = 1))
          |- P[<fail_1450@76:0>](<fail_1450@76:0>:int)
          
          P[<h_1140@53:1>](<h_1140@53:0>:int,<h_1140@53:1>:int),
          P[<<<h_1140@53:2>@56:2>@67:0>](<h_1140@53:0>:int,<h_1140@53:1>:int,var214:int,<h_1140@53:1>:int,<<h_1140@53:3>@69:0>:int),
          ((var214 = 0) && (<h_1140@53:0> = 0))
          |- P[<<h_1140@53:3>@69:0>](<h_1140@53:0>:int,<h_1140@53:1>:int,
                                     <<h_1140@53:3>@69:0>:int)
          
          P[<<h_1140@53:2>@56:1>](var181:int,var181:int,<<h_1140@53:2>@56:0>:int,<<h_1140@53:2>@56:1>:int),
          P[<h_1140@53:1>](<h_1140@53:0>:int,<h_1140@53:1>:int),
          ((<<<h_1140@53:2>@56:2>@67:0> = <<h_1140@53:2>@56:0>) &&
           ((<h_1140@53:0> = <h_1140@53:1>) && (<<h_1140@53:2>@56:1> = 0)))
          |- P[<<<h_1140@53:2>@56:2>@67:0>](<h_1140@53:0>:int,<h_1140@53:1>:int,
                                            <<h_1140@53:2>@56:0>:int,
                                            <<h_1140@53:2>@56:1>:int,
                                            <<<h_1140@53:2>@56:2>@67:0>:int)
          
          P[<h_1140@53:1>](<h_1140@53:0>:int,<h_1140@53:1>:int),
          ((<<h_1140@53:2>@56:1> = <h_1140@53:1>) && ((<<h_1140@53:2>@56:0> = 0) && (<h_1140@53:0> = 0)))
          |- P[<<h_1140@53:2>@56:1>](<h_1140@53:0>:int,<h_1140@53:1>:int,
                                     <<h_1140@53:2>@56:0>:int,<<h_1140@53:2>@56:1>:int)
          Yhorn (Wed Sep 25 10:52:05 JST 2013)


(0=0) & (v_sep_fail_1450_sep_76_sep_0($324)) -> 1=0.
(($324-1=0) & ($325-$326<0)) & (v_sep_h_1140_sep_53_sep_3_sep_69_sep_0($326,$326,$325)) -> v_sep_fail_1450_sep_76_sep_0($324).
(($327=0) & ($328=0)) & (v_sep_h_1140_sep_53_sep_2_sep_56_sep_2_sep_67_sep_0($327,$329,$328,$329,$330)) & (v_sep_h_1140_sep_53_sep_1($327,$329)) -> v_sep_h_1140_sep_53_sep_3_sep_69_sep_0($327,$329,$330).
(($331=0) & ($327-$329=0) & ($332-$333=0)) & (v_sep_h_1140_sep_53_sep_1($327,$329)) & (v_sep_h_1140_sep_53_sep_2_sep_56_sep_1($334,$334,$333,$331)) -> v_sep_h_1140_sep_53_sep_2_sep_56_sep_2_sep_67_sep_0($327,$329,$333,$331,$332).
(($327=0) & ($333=0) & (-$329+$331=0)) & (v_sep_h_1140_sep_53_sep_1($327,$329)) -> v_sep_h_1140_sep_53_sep_2_sep_56_sep_1($327,$329,$333,$331).
-$327+$329=0 -> v_sep_h_1140_sep_53_sep_1($327,$329).


v_sep_fail_1450_sep_76_sep_0: X
v_sep_h_1140_sep_53_sep_1: X
v_sep_h_1140_sep_53_sep_2_sep_56_sep_1: X
v_sep_h_1140_sep_53_sep_2_sep_56_sep_2_sep_67_sep_0: X
v_sep_h_1140_sep_53_sep_3_sep_69_sep_0: X
........
v_sep_fail_1450_sep_76_sep_0: X
v_sep_h_1140_sep_53_sep_1: X
v_sep_h_1140_sep_53_sep_2_sep_56_sep_1: X
v_sep_h_1140_sep_53_sep_2_sep_56_sep_2_sep_67_sep_0: X
v_sep_h_1140_sep_53_sep_3_sep_69_sep_0: X
...
v_sep_fail_1450_sep_76_sep_0: X
v_sep_h_1140_sep_53_sep_1: X
v_sep_h_1140_sep_53_sep_2_sep_56_sep_1: X
v_sep_h_1140_sep_53_sep_2_sep_56_sep_2_sep_67_sep_0: X
v_sep_h_1140_sep_53_sep_3_sep_69_sep_0: X
.....
v_sep_fail_1450_sep_76_sep_0: X
v_sep_h_1140_sep_53_sep_1: X
v_sep_h_1140_sep_53_sep_2_sep_56_sep_1: X
v_sep_h_1140_sep_53_sep_2_sep_56_sep_2_sep_67_sep_0: X
v_sep_h_1140_sep_53_sep_3_sep_69_sep_0: X
.......
v_sep_fail_1450_sep_76_sep_0: X
v_sep_h_1140_sep_53_sep_1: X
v_sep_h_1140_sep_53_sep_2_sep_56_sep_1: X
v_sep_h_1140_sep_53_sep_2_sep_56_sep_2_sep_67_sep_0: X
v_sep_h_1140_sep_53_sep_3_sep_69_sep_0: X
........(0=0) & (v_sep_fail_1450_sep_76_sep_0($324)) -> 1=0.
(($324-1=0) & ($325-$326<0)) & (v_sep_h_1140_sep_53_sep_3_sep_69_sep_0($326,$326,$325)) -> v_sep_fail_1450_sep_76_sep_0($324).
(($327=0) & ($328=0)) & (v_sep_h_1140_sep_53_sep_2_sep_56_sep_2_sep_67_sep_0($327,$329,$328,$329,$330)) & (v_sep_h_1140_sep_53_sep_1($327,$329)) -> v_sep_h_1140_sep_53_sep_3_sep_69_sep_0($327,$329,$330).
(($331=0) & ($327-$329=0) & ($332-$333=0)) & (v_sep_h_1140_sep_53_sep_1($327,$329)) & (v_sep_h_1140_sep_53_sep_2_sep_56_sep_1($334,$334,$333,$331)) -> v_sep_h_1140_sep_53_sep_2_sep_56_sep_2_sep_67_sep_0($327,$329,$333,$331,$332).
(($327=0) & ($333=0) & (-$329+$331=0)) & (v_sep_h_1140_sep_53_sep_1($327,$329)) -> v_sep_h_1140_sep_53_sep_2_sep_56_sep_1($327,$329,$333,$331).
-$327+$329=0 -> v_sep_h_1140_sep_53_sep_1($327,$329).

           (<h_1140@53:1> = <h_1140@53:0>) |- P[<h_1140@53:1>](<h_1140@53:0>:int,
                                                               <h_1140@53:1>:int)
        solution:
          P[<fail_1450@76:0>]($335:bool) = false
          P[<h_1140@53:1>]($356:int,$358:int) = true
          P[<<h_1140@53:2>@56:1>]($361:int,$363:int,$365:int,$367:int) = (0 <= $365)
          P[<<<h_1140@53:2>@56:2>@67:0>]($345:int,$347:int,$349:int,$351:int,$353:int) = ($351 <= $353)
          P[<<h_1140@53:3>@69:0>]($338:int,$340:int,$342:int) = ($340 <= $342)
        
      end HcSolver.solve_ub(62016)[4] (0.025996 sec.)
      begin HcSolver.check_validity(62292)[4]
        input:
          P[<fail_1450@76:0>](<fail_1450@76:0>:bool)|- bot
          
          P[<<h_1140@53:3>@69:0>](<f_main_1445@73:0>:int,<f_main_1445@73:0>:int,<f_main_1445@73:2>:int),
          ((<f_main_1445@73:2> < <f_main_1445@73:0>) && <fail_1450@76:0>) |- P[<fail_1450@76:0>](
          <fail_1450@76:0>:bool)
          
          P[<h_1140@53:1>](<h_1140@53:0>:int,<h_1140@53:1>:int),
          P[<<<h_1140@53:2>@56:2>@67:0>](<h_1140@53:0>:int,<h_1140@53:1>:int,0:int,<h_1140@53:1>:int,<<h_1140@53:3>@69:0>:int),
          (<h_1140@53:0> = 0) |- P[<<h_1140@53:3>@69:0>](<h_1140@53:0>:int,
                                                         <h_1140@53:1>:int,
                                                         <<h_1140@53:3>@69:0>:int)
          
          P[<<h_1140@53:2>@56:1>](var181:int,var181:int,<<h_1140@53:2>@56:0>:int,<<h_1140@53:2>@56:1>:int),
          P[<h_1140@53:1>](<h_1140@53:0>:int,<h_1140@53:1>:int),
          ((<<h_1140@53:2>@56:1> = 0) &&
           ((<h_1140@53:0> = <h_1140@53:1>) && (<<<h_1140@53:2>@56:2>@67:0> = <<h_1140@53:2>@56:0>)))
          |- P[<<<h_1140@53:2>@56:2>@67:0>](<h_1140@53:0>:int,<h_1140@53:1>:int,
                                            <<h_1140@53:2>@56:0>:int,
                                            <<h_1140@53:2>@56:1>:int,
                                            <<<h_1140@53:2>@56:2>@67:0>:int)
          
          P[<h_1140@53:1>](<h_1140@53:0>:int,<h_1140@53:1>:int),
          ((<h_1140@53:0> = 0) && ((<<h_1140@53:2>@56:0> = 0) && (<<h_1140@53:2>@56:1> = <h_1140@53:1>)))
          |- P[<<h_1140@53:2>@56:1>](<h_1140@53:0>:int,<h_1140@53:1>:int,
                                     <<h_1140@53:2>@56:0>:int,<<h_1140@53:2>@56:1>:int)
          
           (<h_1140@53:1> = <h_1140@53:0>) |- P[<h_1140@53:1>](<h_1140@53:0>:int,
                                                               <h_1140@53:1>:int)
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        
      end HcSolver.check_validity(62292)[4] (0.004999 sec.)
      solution:
        P[<fail_1450@76:0>]($335:bool) = false
        P[<h_1140@53:1>]($356:int,$358:int) = true
        P[<<h_1140@53:2>@56:1>]($361:int,$363:int,$365:int,$367:int) = (0 <= $365)
        P[<<<h_1140@53:2>@56:2>@67:0>]($345:int,$347:int,$349:int,$351:int,$353:int) = ($351 <= $353)
        P[<<h_1140@53:3>@69:0>]($338:int,$340:int,$342:int) = ($340 <= $342)
    end YhornInterface.solve(62015)[3] (0.031995 sec.)
    
  end RefTypeInfer.infer_etrs(36456)[2] (0.356945 sec.)
  refinement types:
    main_1444: X
    f_1446: v1:int -> X
    main_1043: v1:int -> (v2:unit -> X) -> X
    rev_1041: v1:int -> (v2:int -> X) -> X
    h_1140: v1:int ->
            v2:int ->
            (v3:int -> v4:{v4:int | (0 <= v3)} -> (v5:{v5:int | (0 <= v5)} -> X) -> X) ->
            (v8:{v8:int | (v1 <= v8)} -> X) -> X
    k2_1139: v1:int -> v2:int -> (v3:int -> X) -> X
    k_k2_u_1331: v1:int -> v2:int -> (v3:int -> X) -> v5:unit -> X
    f_main_1445: v1:int -> (v2:unit -> X) -> v4:int -> X
    fail_1450: v1:{v1:bool | false} -> (v2:unit -> X) -> X
    f_1447: var223:int -> var222:unit -> X
    fail_1448: var227:bool -> (var226:unit -> X) -> X
    fail_1449: var231:bool -> (var230:unit -> X) -> X
    k1_1141: (var241:int -> var240:int -> (var239:int -> X) -> X) -> var236:int -> var235:int -> (var234:int -> X) -> X
    k_k1_u_1201: var252:int ->
                 var251:int ->
                 (var250:int -> var249:int -> (var248:int -> X) -> X) -> (var245:int -> X) -> var243:unit -> X
  abstraction types:
    main_1444: X
    f_1446: v1:int -> X
    main_1043: v1:int -> (v2:unit -> X) -> X
    rev_1041: v1:int -> (v2:int -> X) -> X
    h_1140: v1:int ->
            v2:int ->
            (v3:int -> v4:int[v4 -> (0 <= v3)] -> (v5:int[v5 -> (0 <= v5)] -> X) -> X) ->
            (v8:int[v8 -> (v1 <= v8)] -> X) -> X
    k2_1139: v1:int -> v2:int -> (v3:int -> X) -> X
    k_k2_u_1331: v1:int -> v2:int -> (v3:int -> X) -> v5:unit -> X
    f_main_1445: v1:int -> (v2:unit -> X) -> v4:int -> X
    fail_1450: v1:bool -> (v2:unit -> X) -> X
    f_1447: var223:int -> var222:unit -> X
    fail_1448: var227:bool -> (var226:unit -> X) -> X
    fail_1449: var231:bool -> (var230:unit -> X) -> X
    k1_1141: (var241:int -> var240:int -> (var239:int -> X) -> X) -> var236:int -> var235:int -> (var234:int -> X) -> X
    k_k1_u_1201: var252:int ->
                 var251:int ->
                 (var250:int -> var249:int -> (var248:int -> X) -> X) -> (var245:int -> X) -> var243:unit -> X
  
end AbsTypeInfer.refine(36455)[1] (0.362945 sec.)
DONE!

Prefix of spurious counter-example::
0; 0; 0; 0; 0; 0; 0; 1

Program with abstraction types (CEGAR-cycle 3)::
Main: main_1444
  main_1444 -> (rand_int f_1446)
  f_1446 x_1419 -> (main_1043 x_1419 (f_1447 x_1419))
  f_1447 x_1419 x_1416 -> end
  f_main_1445 n_1044 k_main_1388 x_1391 when (x_1391 >= n_1044) -> (k_main_1388 ())
  f_main_1445 n_1044 k_main_1388 x_1391 when (not (x_1391 >= n_1044)) -> (fail_1450 true k_main_1388)
  fail_1448 b k -> {fail} => (k ())
  fail_1449 b k -> {fail} => (k ())
  fail_1450 b k -> {fail} => (k ())
  h_1140 x_1035 y_1036 k_1037 k_h_1249 when (x_1035 = 0) -> (k_1037 0 y_1036 k_h_1249)
  h_1140 x_1035 y_1036 k_1037 k_h_1249 when (not (x_1035 = 0)) ->
      (h_1140 (x_1035 - 1) y_1036 (k1_1141 k_1037) k_h_1249)
  k1_1141 k_1031 r1_1032 r2_1033 k_k1_1188 when (r2_1033 > 0) -> (k_k1_u_1201 r1_1032 r2_1033 k_1031 k_k1_1188 ())
  k1_1141 k_1031 r1_1032 r2_1033 k_k1_1188 when (not (r2_1033 > 0)) ->
      (fail_1448 true (k_k1_u_1201 r1_1032 r2_1033 k_1031 k_k1_1188))
  k2_1139 r1_1039 r2_1040 k_k2_1318 when (r2_1040 = 0) -> (k_k2_u_1331 r1_1039 r2_1040 k_k2_1318 ())
  k2_1139 r1_1039 r2_1040 k_k2_1318 when (not (r2_1040 = 0)) ->
      (fail_1449 true (k_k2_u_1331 r1_1039 r2_1040 k_k2_1318))
  k_k1_u_1201 r1_1032 r2_1033 k_1031 k_k1_1188 x_1191 -> (k_1031 (r1_1032 + 1) (r2_1033 - 1) k_k1_1188)
  k_k2_u_1331 r1_1039 r2_1040 k_k2_1318 x_1321 -> (k_k2_1318 r1_1039)
  main_1043 n_1044 k_main_1388 -> (rev_1041 n_1044 (f_main_1445 n_1044 k_main_1388))
  rev_1041 x_1042 k_rev_1346 -> (h_1140 x_1042 x_1042 k2_1139 k_rev_1346)
Types:
  main_1444 : X
  fail_1448 : (x_1:bool[x_1] -> (unit -> X) -> X)
  fail_1449 : (x_1:bool[x_1] -> (unit -> X) -> X)
  fail_1450 : (x_1:bool[x_1] -> (unit -> X) -> X)
  h_1140 : (x_1:int ->
            x_2:int[x_1 <= x_2; x_1 = x_2] ->
            (x_4:int -> x_5:int[x_4 >= 0; x_1 >= x_2 - x_5; x_5 = 0] -> (x_7:int[x_7 >= 0] -> X) -> X) ->
            (x_11:int[x_1 <= x_11] -> X) -> X)
  
(3-1) Abstracting ... DONE!

(3-2) Checking HORS ... DONE!

Error trace::
  main_1444 ... --> 
  f_1446 ... --> 
  main_1043 ... --> 
  rev_1041 ... --> 
  h_1140 [2/2] ... --> 
  h_1140 [1/2] ... --> 
  k1_1141 [1/2] ... --> 
  k_k1_u_1201 ... --> 
  k2_1139 [1/2] ... --> 
  k_k2_u_1331 ... --> 
  f_main_1445 [2/2] ... --> 
  fail_1450 ... --> fail -->
  ERROR!

Spurious counter-example::
  0; 0; 0; 0; 1; 0; 0; 0; 0; 0; 1; 0

(3-3) Checking counter-example ... DONE!

(3-4) Discovering predicates ... 
begin AbsTypeInfer.refine(64636)[1]
  program:
    main_1444  | true = ((Random.int 0) f_1446)
    f_1446 x_1419 | true = (main_1043 x_1419
                                      (f_1447 x_1419))
    f_1447 x_1419 x_1416 | true = end
    f_main_1445 n_1044 k_main_1388 x_1391 | (x_1391 >= n_1044) = (k_main_1388 ())
    f_main_1445 n_1044 k_main_1388 x_1391 | (not (x_1391 >= n_1044)) = (
    fail_1450 true
              k_main_1388)
    fail_1448 b k | true = (fail ())
    fail_1449 b k | true = (fail ())
    fail_1450 b k | true = (fail ())
    h_1140 x_1035 y_1036 k_1037 k_h_1249 | (x_1035 = 0) = (k_1037 0
                                                                  y_1036
                                                                  k_h_1249)
    h_1140 x_1035 y_1036 k_1037 k_h_1249 | (not (x_1035 = 0)) = (h_1140 (
                                                                    x_1035 - 1)
                                                                    y_1036
                                                                    (k1_1141 k_1037)
                                                                    k_h_1249)
    k1_1141 k_1031 r1_1032 r2_1033 k_k1_1188 | (r2_1033 > 0) = (k_k1_u_1201 r1_1032
                                                                    r2_1033
                                                                    k_1031
                                                                    k_k1_1188
                                                                    ())
    k1_1141 k_1031 r1_1032 r2_1033 k_k1_1188 | (not (r2_1033 > 0)) = (
    fail_1448 true
              (k_k1_u_1201 r1_1032
                           r2_1033
                           k_1031
                           k_k1_1188))
    k2_1139 r1_1039 r2_1040 k_k2_1318 | (r2_1040 = 0) = (k_k2_u_1331 r1_1039
                                                                    r2_1040
                                                                    k_k2_1318
                                                                    ())
    k2_1139 r1_1039 r2_1040 k_k2_1318 | (not (r2_1040 = 0)) = (fail_1449 true
                                                                    (k_k2_u_1331 r1_1039
                                                                    r2_1040
                                                                    k_k2_1318))
    k_k1_u_1201 r1_1032 r2_1033 k_1031 k_k1_1188 x_1191 | true = (k_1031 (
                                                                    r1_1032 + 1)
                                                                    (r2_1033 - 1)
                                                                    k_k1_1188)
    k_k2_u_1331 r1_1039 r2_1040 k_k2_1318 x_1321 | true = (k_k2_1318 r1_1039)
    main_1043 n_1044 k_main_1388 | true = (rev_1041 n_1044
                                                    (f_main_1445 n_1044
                                                                 k_main_1388))
    rev_1041 x_1042 k_rev_1346 | true = (h_1140 x_1042
                                                x_1042
                                                k2_1139
                                                k_rev_1346)
    main_1444:X
    f_1446:int -> X
    f_1447:int -> unit -> X
    f_main_1445:int -> (unit -> X) -> int -> X
    fail_1448:bool -> (unit -> X) -> X
    fail_1449:bool -> (unit -> X) -> X
    fail_1450:bool -> (unit -> X) -> X
    h_1140:int -> int -> (int -> int -> (int -> X) -> X) -> (int -> X) -> X
    k1_1141:(int -> int -> (int -> X) -> X) -> int -> int -> (int -> X) -> X
    k2_1139:int -> int -> (int -> X) -> X
    k_k1_u_1201:int -> int -> (int -> int -> (int -> X) -> X) -> (int -> X) -> unit -> X
    k_k2_u_1331:int -> int -> (int -> X) -> unit -> X
    main_1043:int -> (unit -> X) -> X
    rev_1041:int -> (int -> X) -> X
  inlined functions: f_1446,f_1447,f_main_1445,k1_1141,k2_1139,k_k1_u_1201,k_k2_u_1331,main_1043,rev_1041
  counterexample: 0:0:0:0:1:0:0:0:0:0:1:0
  error traces:
    [true.nop(<f_1446@82:0> = var253)
     [true.(<main_1043@84:0> = <f_1446@82:0>)
      [true.(<rev_1041@86:0> = <main_1043@84:0>)
       [true.((<h_1140@88:0> = <rev_1041@86:0>) && (<h_1140@88:1> = <rev_1041@86:0>))
        [(not (<h_1140@88:0> = 0)).((<h_1140@91:0> = (<h_1140@88:0> - 1)) && (<h_1140@91:1> = <h_1140@88:1>))
         [(<h_1140@91:0> = 0).((<<h_1140@91:2>@94:0> = 0) && (<<h_1140@91:2>@94:1> = <h_1140@91:1>))
          [true.((<k1_1141@96:1> = <<h_1140@91:2>@94:0>) && (<k1_1141@96:2> = <<h_1140@91:2>@94:1>))
           [(<k1_1141@96:2> > 0).
            ((<k_k1_u_1201@99:0> = <k1_1141@96:1>) &&
             ((<k_k1_u_1201@99:1> = <k1_1141@96:2>) && (<k_k1_u_1201@99:4> = ())))
            [true.
             ((<<k_k1_u_1201@99:2>@101:0> = (<k_k1_u_1201@99:0> + 1)) &&
              (<<k_k1_u_1201@99:2>@101:1> = (<k_k1_u_1201@99:1> - 1)))
             [true.
              ((<<k1_1141@96:0>@103:0> = <<k_k1_u_1201@99:2>@101:0>) &&
               (<<k1_1141@96:0>@103:1> = <<k_k1_u_1201@99:2>@101:1>))
              [true.
               ((<<h_1140@88:2>@105:0> = <<k1_1141@96:0>@103:0>) && (<<h_1140@88:2>@105:1> = <<k1_1141@96:0>@103:1>))
               [true.((<k2_1139@107:0> = <<h_1140@88:2>@105:0>) && (<k2_1139@107:1> = <<h_1140@88:2>@105:1>))
                [(<k2_1139@107:1> = 0).
                 ((<k_k2_u_1331@110:0> = <k2_1139@107:0>) &&
                  ((<k_k2_u_1331@110:1> = <k2_1139@107:1>) && (<k_k2_u_1331@110:3> = ())))
                 [true.(<<k_k2_u_1331@110:2>@112:0> = <k_k2_u_1331@110:0>)
                  [true.(<<k2_1139@107:2>@114:0> = <<k_k2_u_1331@110:2>@112:0>)
                   [true.(<<<h_1140@88:2>@105:2>@116:0> = <<k2_1139@107:2>@114:0>)
                    [true.(<<<k1_1141@96:0>@103:2>@118:0> = <<<h_1140@88:2>@105:2>@116:0>)
                     [true.(<<<k_k1_u_1201@99:2>@101:2>@120:0> = <<<k1_1141@96:0>@103:2>@118:0>)
                      [true.(<<k_k1_u_1201@99:3>@122:0> = <<<k_k1_u_1201@99:2>@101:2>@120:0>)
                       [true.(<<k1_1141@96:3>@124:0> = <<k_k1_u_1201@99:3>@122:0>)
                        [true.(<<<h_1140@91:2>@94:2>@126:0> = <<k1_1141@96:3>@124:0>)
                         [true.(<<h_1140@91:3>@128:0> = <<<h_1140@91:2>@94:2>@126:0>)
                          [true.(<<h_1140@88:3>@130:0> = <<h_1140@91:3>@128:0>)
                           [true.(<<rev_1041@86:1>@132:0> = <<h_1140@88:3>@130:0>)
                            [true.
                             ((<f_main_1445@134:0> = <main_1043@84:0>) &&
                              (<f_main_1445@134:2> = <<rev_1041@86:1>@132:0>))
                             [(not (<f_main_1445@134:2> >= <f_main_1445@134:0>)).(<fail_1450@137:0> = true)[true.error
  begin RefTypeInfer.infer_etrs(64637)[2]
    horn clauses:
      P[<fail_1450@137:0>](<fail_1450@137:0>:bool)|- bot
      
      P[<f_main_1445@134:2>](<f_main_1445@134:0>:int,<f_main_1445@134:2>:int),
      ((<f_main_1445@134:2> < <f_main_1445@134:0>) && <fail_1450@137:0>)
      |- P[<fail_1450@137:0>](<fail_1450@137:0>:bool)
      
      P[<main_1043@84:0>](<f_main_1445@134:0>:int),
      P[<<rev_1041@86:1>@132:0>](<f_main_1445@134:0>:int,<f_main_1445@134:2>:int)|- P[<f_main_1445@134:2>](
      <f_main_1445@134:0>:int,<f_main_1445@134:2>:int)
      
      P[<rev_1041@86:0>](<rev_1041@86:0>:int),
      P[<<h_1140@88:3>@130:0>](<rev_1041@86:0>:int,<rev_1041@86:0>:int,<<rev_1041@86:1>@132:0>:int)|- P[<<rev_1041@86:1>@132:0>](
      <rev_1041@86:0>:int,<<rev_1041@86:1>@132:0>:int)
      
      P[<h_1140@88:1>](<h_1140@88:0>:int,<h_1140@88:1>:int),
      P[<<h_1140@91:3>@128:0>]((-1 + <h_1140@88:0>):int,<h_1140@88:1>:int,<<h_1140@88:3>@130:0>:int),
      (<h_1140@88:0> <> 0) |- P[<<h_1140@88:3>@130:0>](<h_1140@88:0>:int,
                                                       <h_1140@88:1>:int,
                                                       <<h_1140@88:3>@130:0>:int)
      
      P[<h_1140@91:1>](<h_1140@91:0>:int,<h_1140@91:1>:int),
      P[<<<h_1140@91:2>@94:2>@126:0>](<h_1140@91:0>:int,<h_1140@91:1>:int,0:int,<h_1140@91:1>:int,<<h_1140@91:3>@128:0>:int),
      (<h_1140@91:0> = 0) |- P[<<h_1140@91:3>@128:0>](<h_1140@91:0>:int,
                                                      <h_1140@91:1>:int,
                                                      <<h_1140@91:3>@128:0>:int)
      
      P[<h_1140@88:1>]((1 + <h_1140@91:0>):int,<h_1140@91:1>:int),
      P[<<k1_1141@96:3>@124:0>](<<h_1140@91:2>@94:0>:int,<<h_1140@91:2>@94:1>:int,<<<h_1140@91:2>@94:2>@126:0>:int),
      P[<h_1140@91:1>](<h_1140@91:0>:int,<h_1140@91:1>:int), ((1 + <h_1140@91:0>) <> 0)
      |- P[<<<h_1140@91:2>@94:2>@126:0>](<h_1140@91:0>:int,<h_1140@91:1>:int,
                                         <<h_1140@91:2>@94:0>:int,<<h_1140@91:2>@94:1>:int,
                                         <<<h_1140@91:2>@94:2>@126:0>:int)
      
      P[<k1_1141@96:2>](<k1_1141@96:1>:int,<k1_1141@96:2>:int),
      P[<<k_k1_u_1201@99:3>@122:0>](<k1_1141@96:1>:int,<k1_1141@96:2>:int,<<k1_1141@96:3>@124:0>:int),
      (<k1_1141@96:2> > 0)
      |- P[<<k1_1141@96:3>@124:0>](<k1_1141@96:1>:int,<k1_1141@96:2>:int,
                                   <<k1_1141@96:3>@124:0>:int)
      
      P[<k_k1_u_1201@99:4>](<k_k1_u_1201@99:0>:int,<k_k1_u_1201@99:1>:int,<k_k1_u_1201@99:4>:unit),
      P[<<<k_k1_u_1201@99:2>@101:2>@120:0>](<k_k1_u_1201@99:0>:int,<k_k1_u_1201@99:1>:int,(
                                            1 + <k_k1_u_1201@99:0>):int,(
                                            -1 + <k_k1_u_1201@99:1>):int,<<k_k1_u_1201@99:3>@122:0>:int)|- P[<<k_k1_u_1201@99:3>@122:0>](
      <k_k1_u_1201@99:0>:int,<k_k1_u_1201@99:1>:int,<<k_k1_u_1201@99:3>@122:0>:int)
      
      P[<k1_1141@96:2>](<k_k1_u_1201@99:0>:int,<k_k1_u_1201@99:1>:int),
      P[<<<k1_1141@96:0>@103:2>@118:0>](<<k_k1_u_1201@99:2>@101:0>:int,<<k_k1_u_1201@99:2>@101:1>:int,<<<k_k1_u_1201@99:2>@101:2>@120:0>:int),
      (<k_k1_u_1201@99:1> > 0)
      |- P[<<<k_k1_u_1201@99:2>@101:2>@120:0>](<k_k1_u_1201@99:0>:int,
                                               <k_k1_u_1201@99:1>:int,
                                               <<k_k1_u_1201@99:2>@101:0>:int,
                                               <<k_k1_u_1201@99:2>@101:1>:int,
                                               <<<k_k1_u_1201@99:2>@101:2>@120:0>:int)
      
      P[<h_1140@88:1>](<h_1140@88:0>:int,<h_1140@91:1>:int),
      P[<<<h_1140@88:2>@105:2>@116:0>](<h_1140@88:0>:int,<h_1140@91:1>:int,<<k1_1141@96:0>@103:0>:int,<<k1_1141@96:0>@103:1>:int,<<<k1_1141@96:0>@103:2>@118:0>:int),
      (<h_1140@88:0> <> 0)
      |- P[<<<k1_1141@96:0>@103:2>@118:0>](<<k1_1141@96:0>@103:0>:int,
                                           <<k1_1141@96:0>@103:1>:int,
                                           <<<k1_1141@96:0>@103:2>@118:0>:int)
      
      P[<rev_1041@86:0>](<h_1140@88:0>:int),
      P[<<k2_1139@107:2>@114:0>](<<h_1140@88:2>@105:0>:int,<<h_1140@88:2>@105:1>:int,<<<h_1140@88:2>@105:2>@116:0>:int),
      P[<h_1140@88:1>](<h_1140@88:0>:int,<h_1140@88:1>:int), (<h_1140@88:0> = <h_1140@88:1>)
      |- P[<<<h_1140@88:2>@105:2>@116:0>](<h_1140@88:0>:int,<h_1140@88:1>:int,
                                          <<h_1140@88:2>@105:0>:int,<<h_1140@88:2>@105:1>:int,
                                          <<<h_1140@88:2>@105:2>@116:0>:int)
      
      P[<k2_1139@107:1>](<k2_1139@107:0>:int,<k2_1139@107:1>:int),
      P[<<k_k2_u_1331@110:2>@112:0>](<k2_1139@107:0>:int,<k2_1139@107:1>:int,<<k2_1139@107:2>@114:0>:int),
      (<k2_1139@107:1> = 0)
      |- P[<<k2_1139@107:2>@114:0>](<k2_1139@107:0>:int,<k2_1139@107:1>:int,
                                    <<k2_1139@107:2>@114:0>:int)
      
      P[<k_k2_u_1331@110:3>](<k_k2_u_1331@110:0>:int,<k_k2_u_1331@110:1>:int,<k_k2_u_1331@110:3>:unit),
      (<<k_k2_u_1331@110:2>@112:0> = <k_k2_u_1331@110:0>)
      |- P[<<k_k2_u_1331@110:2>@112:0>](<k_k2_u_1331@110:0>:int,<k_k2_u_1331@110:1>:int,
                                        <<k_k2_u_1331@110:2>@112:0>:int)
      
      P[<k2_1139@107:1>](<k_k2_u_1331@110:0>:int,<k_k2_u_1331@110:1>:int), (
      <k_k2_u_1331@110:1> = 0)
      |- P[<k_k2_u_1331@110:3>](<k_k2_u_1331@110:0>:int,<k_k2_u_1331@110:1>:int,
                                <k_k2_u_1331@110:3>:unit)
      
      P[<rev_1041@86:0>](<h_1140@88:0>:int),
      P[<<h_1140@88:2>@105:1>](<h_1140@88:0>:int,<h_1140@88:0>:int,<k2_1139@107:0>:int,<k2_1139@107:1>:int)|- P[<k2_1139@107:1>](
      <k2_1139@107:0>:int,<k2_1139@107:1>:int)
      
      P[<h_1140@88:1>](<h_1140@88:0>:int,<h_1140@88:1>:int),
      P[<<k1_1141@96:0>@103:1>](<<h_1140@88:2>@105:0>:int,<<h_1140@88:2>@105:1>:int), (
      <h_1140@88:0> <> 0)
      |- P[<<h_1140@88:2>@105:1>](<h_1140@88:0>:int,<h_1140@88:1>:int,
                                  <<h_1140@88:2>@105:0>:int,<<h_1140@88:2>@105:1>:int)
      
      P[<k1_1141@96:2>](<k_k1_u_1201@99:0>:int,<k_k1_u_1201@99:1>:int),
      P[<<k_k1_u_1201@99:2>@101:1>](<k_k1_u_1201@99:0>:int,<k_k1_u_1201@99:1>:int,<<k1_1141@96:0>@103:0>:int,<<k1_1141@96:0>@103:1>:int),
      (<k_k1_u_1201@99:1> > 0) |- P[<<k1_1141@96:0>@103:1>](<<k1_1141@96:0>@103:0>:int,
                                                            <<k1_1141@96:0>@103:1>:int)
      
      P[<k_k1_u_1201@99:4>](<k_k1_u_1201@99:0>:int,<k_k1_u_1201@99:1>:int,<k_k1_u_1201@99:4>:unit),
      ((<<k_k1_u_1201@99:2>@101:0> = (1 + <k_k1_u_1201@99:0>)) &&
       ((1 + <<k_k1_u_1201@99:2>@101:1>) = <k_k1_u_1201@99:1>))
      |- P[<<k_k1_u_1201@99:2>@101:1>](<k_k1_u_1201@99:0>:int,<k_k1_u_1201@99:1>:int,
                                       <<k_k1_u_1201@99:2>@101:0>:int,
                                       <<k_k1_u_1201@99:2>@101:1>:int)
      
      P[<k1_1141@96:2>](<k_k1_u_1201@99:0>:int,<k_k1_u_1201@99:1>:int), (
      <k_k1_u_1201@99:1> > 0)
      |- P[<k_k1_u_1201@99:4>](<k_k1_u_1201@99:0>:int,<k_k1_u_1201@99:1>:int,
                               <k_k1_u_1201@99:4>:unit)
      
      P[<h_1140@88:1>](<h_1140@88:0>:int,<h_1140@91:1>:int),
      P[<<h_1140@91:2>@94:1>]((-1 + <h_1140@88:0>):int,<h_1140@91:1>:int,<k1_1141@96:1>:int,<k1_1141@96:2>:int),
      (<h_1140@88:0> <> 0) |- P[<k1_1141@96:2>](<k1_1141@96:1>:int,<k1_1141@96:2>:int)
      
      P[<h_1140@91:1>](<h_1140@91:0>:int,<h_1140@91:1>:int),
      ((<h_1140@91:0> = 0) && ((<<h_1140@91:2>@94:0> = 0) && (<<h_1140@91:2>@94:1> = <h_1140@91:1>)))
      |- P[<<h_1140@91:2>@94:1>](<h_1140@91:0>:int,<h_1140@91:1>:int,
                                 <<h_1140@91:2>@94:0>:int,<<h_1140@91:2>@94:1>:int)
      
      P[<h_1140@88:1>]((1 + <h_1140@91:0>):int,<h_1140@91:1>:int), ((1 + <h_1140@91:0>) <> 0)
      |- P[<h_1140@91:1>](<h_1140@91:0>:int,<h_1140@91:1>:int)
      
      P[<rev_1041@86:0>](<h_1140@88:1>:int), (<h_1140@88:1> = <h_1140@88:0>)
      |- P[<h_1140@88:1>](<h_1140@88:0>:int,<h_1140@88:1>:int)
      
      P[<main_1043@84:0>](<rev_1041@86:0>:int)|- P[<rev_1041@86:0>](<rev_1041@86:0>:int)
      
      P[<f_1446@82:0>](<main_1043@84:0>:int)|- P[<main_1043@84:0>](<main_1043@84:0>:int)
      
      |- P[<f_1446@82:0>](<f_1446@82:0>:int)
    call trees:
      <main_1444@79>
        <f_1446@82>
          <main_1043@84>
            <rev_1041@86>
              <h_1140@88>
                <h_1140@91>
                </<h_1140@91:2>@94>
                <k1_1141@96>
                  <k_k1_u_1201@99>
                  </<k_k1_u_1201@99:2>@101>
                </<k1_1141@96:0>@103>
              </<h_1140@88:2>@105>
              <k2_1139@107>
                <k_k2_u_1331@110>
                </<k_k2_u_1331@110:2>@112>
              </<k2_1139@107:2>@114>
              <<<h_1140@88:2>@105:2>@116>
                <<<k1_1141@96:0>@103:2>@118>
                  <<<k_k1_u_1201@99:2>@101:2>@120>
                  </<k_k1_u_1201@99:3>@122>
                </<k1_1141@96:3>@124>
                <<<h_1140@91:2>@94:2>@126>
                </<h_1140@91:3>@128>
              </<h_1140@88:3>@130>
            </<rev_1041@86:1>@132>
            <f_main_1445@134>
              <fail_1450@137>
    inlined horn clauses:
      P[<fail_1450@137:0>](<fail_1450@137:0>:bool)|- bot
      
      P[<<h_1140@88:3>@130:0>](<f_main_1445@134:0>:int,<f_main_1445@134:0>:int,<f_main_1445@134:2>:int),
      ((<f_main_1445@134:2> < <f_main_1445@134:0>) && <fail_1450@137:0>)
      |- P[<fail_1450@137:0>](<fail_1450@137:0>:bool)
      
      P[<h_1140@88:1>](<h_1140@88:0>:int,<h_1140@88:1>:int),
      P[<<h_1140@91:3>@128:0>]((-1 + <h_1140@88:0>):int,<h_1140@88:1>:int,<<h_1140@88:3>@130:0>:int),
      (<h_1140@88:0> <> 0) |- P[<<h_1140@88:3>@130:0>](<h_1140@88:0>:int,
                                                       <h_1140@88:1>:int,
                                                       <<h_1140@88:3>@130:0>:int)
      
      P[<h_1140@91:1>](<h_1140@91:0>:int,<h_1140@91:1>:int),
      P[<<<h_1140@91:2>@94:2>@126:0>](<h_1140@91:0>:int,<h_1140@91:1>:int,0:int,<h_1140@91:1>:int,<<h_1140@91:3>@128:0>:int),
      (<h_1140@91:0> = 0) |- P[<<h_1140@91:3>@128:0>](<h_1140@91:0>:int,
                                                      <h_1140@91:1>:int,
                                                      <<h_1140@91:3>@128:0>:int)
      
      P[<h_1140@88:1>]((1 + <h_1140@91:0>):int,<h_1140@91:1>:int),
      P[<h_1140@91:1>](<h_1140@91:0>:int,<h_1140@91:1>:int),
      P[<h_1140@88:1>](var285:int,var283:int),
      P[<<h_1140@91:2>@94:1>]((-1 + var285):int,var283:int,<<h_1140@91:2>@94:0>:int,<<h_1140@91:2>@94:1>:int),
      P[<h_1140@88:1>](var284:int,var282:int),
      P[<<<h_1140@88:2>@105:2>@116:0>](var284:int,var282:int,(1 + <<h_1140@91:2>@94:0>):int,(
                                       -1 + <<h_1140@91:2>@94:1>):int,<<<h_1140@91:2>@94:2>@126:0>:int),
      ((var285 <> 0) && ((var284 <> 0) && (((1 + <h_1140@91:0>) <> 0) && (<<h_1140@91:2>@94:1> > 0))))
      |- P[<<<h_1140@91:2>@94:2>@126:0>](<h_1140@91:0>:int,<h_1140@91:1>:int,
                                         <<h_1140@91:2>@94:0>:int,<<h_1140@91:2>@94:1>:int,
                                         <<<h_1140@91:2>@94:2>@126:0>:int)
      
      P[<<h_1140@88:2>@105:1>](var286:int,var286:int,<<h_1140@88:2>@105:0>:int,<<h_1140@88:2>@105:1>:int),
      P[<h_1140@88:1>](<h_1140@88:0>:int,<h_1140@88:1>:int),
      ((<<h_1140@88:2>@105:1> = 0) &&
       ((<h_1140@88:0> = <h_1140@88:1>) && (<<<h_1140@88:2>@105:2>@116:0> = <<h_1140@88:2>@105:0>)))
      |- P[<<<h_1140@88:2>@105:2>@116:0>](<h_1140@88:0>:int,<h_1140@88:1>:int,
                                          <<h_1140@88:2>@105:0>:int,<<h_1140@88:2>@105:1>:int,
                                          <<<h_1140@88:2>@105:2>@116:0>:int)
      
      P[<h_1140@88:1>](<h_1140@88:0>:int,<h_1140@88:1>:int),
      P[<h_1140@88:1>](var288:int,var287:int),
      P[<<h_1140@91:2>@94:1>]((-1 + var288):int,var287:int,(-1 + <<h_1140@88:2>@105:0>):int,(
                              1 + <<h_1140@88:2>@105:1>):int),
      ((var288 <> 0) && ((<h_1140@88:0> <> 0) && ((1 + <<h_1140@88:2>@105:1>) > 0)))
      |- P[<<h_1140@88:2>@105:1>](<h_1140@88:0>:int,<h_1140@88:1>:int,
                                  <<h_1140@88:2>@105:0>:int,<<h_1140@88:2>@105:1>:int)
      
      P[<h_1140@91:1>](<h_1140@91:0>:int,<h_1140@91:1>:int),
      ((<h_1140@91:0> = 0) && ((<<h_1140@91:2>@94:0> = 0) && (<<h_1140@91:2>@94:1> = <h_1140@91:1>)))
      |- P[<<h_1140@91:2>@94:1>](<h_1140@91:0>:int,<h_1140@91:1>:int,
                                 <<h_1140@91:2>@94:0>:int,<<h_1140@91:2>@94:1>:int)
      
      P[<h_1140@88:1>]((1 + <h_1140@91:0>):int,<h_1140@91:1>:int), ((1 + <h_1140@91:0>) <> 0)
      |- P[<h_1140@91:1>](<h_1140@91:0>:int,<h_1140@91:1>:int)
      
       (<h_1140@88:1> = <h_1140@88:0>) |- P[<h_1140@88:1>](<h_1140@88:0>:int,
                                                           <h_1140@88:1>:int)
    begin ParamSubstInfer.infer(69795)[3]
      
    end ParamSubstInfer.infer(69795)[3] (0.271959 sec.)
    inferred extra parameters:
      
    begin RefTypeInfer.elim_coeffs(69797)[3]
      
    end RefTypeInfer.elim_coeffs(69797)[3] (0.005999 sec.)
    begin GenHcSolver.solve(70586)[3]
      Horn clauses:
        P[<fail_1450@137:0>](<fail_1450@137:0>:bool)|- bot
        
        P[<<h_1140@88:3>@130:0>](<f_main_1445@134:0>:int,<f_main_1445@134:0>:int,<f_main_1445@134:2>:int),
        ((<f_main_1445@134:2> < <f_main_1445@134:0>) && <fail_1450@137:0>)
        |- P[<fail_1450@137:0>](<fail_1450@137:0>:bool)
        
        P[<h_1140@88:1>](<h_1140@88:0>:int,<h_1140@88:1>:int),
        P[<<h_1140@91:3>@128:0>]((-1 + <h_1140@88:0>):int,<h_1140@88:1>:int,<<h_1140@88:3>@130:0>:int),
        (<h_1140@88:0> <> 0) |- P[<<h_1140@88:3>@130:0>](<h_1140@88:0>:int,
                                                         <h_1140@88:1>:int,
                                                         <<h_1140@88:3>@130:0>:int)
        
        P[<h_1140@91:1>](<h_1140@91:0>:int,<h_1140@91:1>:int),
        P[<<<h_1140@91:2>@94:2>@126:0>](<h_1140@91:0>:int,<h_1140@91:1>:int,0:int,<h_1140@91:1>:int,<<h_1140@91:3>@128:0>:int),
        (<h_1140@91:0> = 0) |- P[<<h_1140@91:3>@128:0>](<h_1140@91:0>:int,
                                                        <h_1140@91:1>:int,
                                                        <<h_1140@91:3>@128:0>:int)
        
        P[<h_1140@88:1>]((1 + <h_1140@91:0>):int,<h_1140@91:1>:int),
        P[<h_1140@91:1>](<h_1140@91:0>:int,<h_1140@91:1>:int),
        P[<h_1140@88:1>](var285:int,var283:int),
        P[<<h_1140@91:2>@94:1>]((-1 + var285):int,var283:int,<<h_1140@91:2>@94:0>:int,<<h_1140@91:2>@94:1>:int),
        P[<h_1140@88:1>](var284:int,var282:int),
        P[<<<h_1140@88:2>@105:2>@116:0>](var284:int,var282:int,(1 + <<h_1140@91:2>@94:0>):int,(
                                         -1 + <<h_1140@91:2>@94:1>):int,<<<h_1140@91:2>@94:2>@126:0>:int),
        ((var285 <> 0) && ((var284 <> 0) && (((1 + <h_1140@91:0>) <> 0) && (<<h_1140@91:2>@94:1> > 0))))
        |- P[<<<h_1140@91:2>@94:2>@126:0>](<h_1140@91:0>:int,<h_1140@91:1>:int,
                                           <<h_1140@91:2>@94:0>:int,<<h_1140@91:2>@94:1>:int,
                                           <<<h_1140@91:2>@94:2>@126:0>:int)
        
        P[<<h_1140@88:2>@105:1>](var286:int,var286:int,<<h_1140@88:2>@105:0>:int,<<h_1140@88:2>@105:1>:int),
        P[<h_1140@88:1>](<h_1140@88:0>:int,<h_1140@88:1>:int),
        ((<<h_1140@88:2>@105:1> = 0) &&
         ((<h_1140@88:0> = <h_1140@88:1>) && (<<<h_1140@88:2>@105:2>@116:0> = <<h_1140@88:2>@105:0>)))
        |- P[<<<h_1140@88:2>@105:2>@116:0>](<h_1140@88:0>:int,<h_1140@88:1>:int,
                                            <<h_1140@88:2>@105:0>:int,
                                            <<h_1140@88:2>@105:1>:int,
                                            <<<h_1140@88:2>@105:2>@116:0>:int)
        
        P[<h_1140@88:1>](<h_1140@88:0>:int,<h_1140@88:1>:int),
        P[<h_1140@88:1>](var288:int,var287:int),
        P[<<h_1140@91:2>@94:1>]((-1 + var288):int,var287:int,(-1 + <<h_1140@88:2>@105:0>):int,(
                                1 + <<h_1140@88:2>@105:1>):int),
        ((var288 <> 0) && ((<h_1140@88:0> <> 0) && ((1 + <<h_1140@88:2>@105:1>) > 0)))
        |- P[<<h_1140@88:2>@105:1>](<h_1140@88:0>:int,<h_1140@88:1>:int,
                                    <<h_1140@88:2>@105:0>:int,<<h_1140@88:2>@105:1>:int)
        
        P[<h_1140@91:1>](<h_1140@91:0>:int,<h_1140@91:1>:int),
        ((<h_1140@91:0> = 0) && ((<<h_1140@91:2>@94:0> = 0) && (<<h_1140@91:2>@94:1> = <h_1140@91:1>)))
        |- P[<<h_1140@91:2>@94:1>](<h_1140@91:0>:int,<h_1140@91:1>:int,
                                   <<h_1140@91:2>@94:0>:int,<<h_1140@91:2>@94:1>:int)
        
        P[<h_1140@88:1>]((1 + <h_1140@91:0>):int,<h_1140@91:1>:int), (
        (1 + <h_1140@91:0>) <> 0) |- P[<h_1140@91:1>](<h_1140@91:0>:int,
                                                      <h_1140@91:1>:int)
        
         (<h_1140@88:1> = <h_1140@88:0>) |- P[<h_1140@88:1>](<h_1140@88:0>:int,
                                                             <h_1140@88:1>:int)
      lower bounds:
        P[<h_1140@88:1>](<h_1140@88:0>:int,<h_1140@88:1>:int) = (<h_1140@88:1> = <h_1140@88:0>)
        P[<h_1140@91:1>](<h_1140@91:0>:int,<h_1140@91:1>:int) =
        (((1 + <h_1140@91:0>) <> 0) && (<h_1140@91:1> = (1 + <h_1140@91:0>)))
        P[<<h_1140@91:2>@94:1>](<h_1140@91:0>:int,<h_1140@91:1>:int,<<h_1140@91:2>@94:0>:int,<<h_1140@91:2>@94:1>:int) =
        ((<h_1140@91:0> = 0) &&
         ((<<h_1140@91:2>@94:0> = 0) &&
          ((<h_1140@91:1> = (1 + <h_1140@91:0>)) && (<<h_1140@91:2>@94:1> = <h_1140@91:1>))))
        P[<<h_1140@88:2>@105:1>](<h_1140@88:0>:int,<h_1140@88:1>:int,<<h_1140@88:2>@105:0>:int,<<h_1140@88:2>@105:1>:int) =
        ((<<h_1140@88:2>@105:1> = 0) &&
         ((<<h_1140@88:2>@105:0> = 1) && ((<h_1140@88:1> = <h_1140@88:0>) && (<h_1140@88:0> <> 0))))
        P[<<<h_1140@88:2>@105:2>@116:0>](<h_1140@88:0>:int,<h_1140@88:1>:int,<<h_1140@88:2>@105:0>:int,<<h_1140@88:2>@105:1>:int,<<<h_1140@88:2>@105:2>@116:0>:int) =
        ((<<h_1140@88:2>@105:1> = 0) &&
         ((<<h_1140@88:2>@105:0> = 1) &&
          ((<<<h_1140@88:2>@105:2>@116:0> = <<h_1140@88:2>@105:0>) && (<h_1140@88:1> = <h_1140@88:0>))))
        P[<<<h_1140@91:2>@94:2>@126:0>](<h_1140@91:0>:int,<h_1140@91:1>:int,<<h_1140@91:2>@94:0>:int,<<h_1140@91:2>@94:1>:int,<<<h_1140@91:2>@94:2>@126:0>:int) =
        ((<<h_1140@91:2>@94:1> = 1) &&
         ((<<h_1140@91:2>@94:0> = 0) &&
          (((1 + <h_1140@91:0>) <> 0) &&
           ((<h_1140@91:1> = (1 + <h_1140@91:0>)) && (<<<h_1140@91:2>@94:2>@126:0> = (1 + <<h_1140@91:2>@94:0>))))))
        P[<<h_1140@91:3>@128:0>](<h_1140@91:0>:int,<h_1140@91:1>:int,<<h_1140@91:3>@128:0>:int) =
        ((<h_1140@91:0> = 0) && ((<h_1140@91:1> = 1) && (<<h_1140@91:3>@128:0> = 1)))
        P[<<h_1140@88:3>@130:0>](<h_1140@88:0>:int,<h_1140@88:1>:int,<<h_1140@88:3>@130:0>:int) =
        ((<h_1140@88:0> = 1) && ((<h_1140@88:1> = 1) && (<<h_1140@88:3>@130:0> = 1)))
        P[<fail_1450@137:0>](<fail_1450@137:0>:bool) = false
      upper bounds:
        P[<<h_1140@88:3>@130:0>](var296:int,var297:int,var298:int) = ((var298 >= var296) || (var296 <> var297))
        P[<<h_1140@91:3>@128:0>](var291:int,var292:int,var293:int) =
        ((var292 = 0) || ((var293 >= var292) || ((1 + var291) <> var292)))
      begin GenHcSolver.classify_pids(84470)[4]
        output:
          [<<h_1140@91:3>@128:0>;<<h_1140@88:3>@130:0>]
      end GenHcSolver.classify_pids(84470)[4] (0.000999 sec.)
      begin ApronInterface.convex_hull_interpolate(84545)[4]
        lb:(((<h_1140@91:0> = 0) && ((<h_1140@91:1> = 1) && (<<h_1140@91:3>@128:0> = 1))) ||
            ((<h_1140@91:0> = 1) && ((<h_1140@91:1> = 1) && (<<h_1140@91:3>@128:0> = 1))))
        nub:((not
                ((<h_1140@91:1> = 0) ||
                 ((<<h_1140@91:3>@128:0> >= <h_1140@91:1>) || ((1 + <h_1140@91:0>) <> <h_1140@91:1>)))) ||
             (not ((<<h_1140@91:3>@128:0> >= <h_1140@91:0>) || (<h_1140@91:0> <> <h_1140@91:1>))))
        lb':(((<h_1140@91:0> = 0) && ((<h_1140@91:1> = 1) && (<<h_1140@91:3>@128:0> = 1))) ||
             ((<h_1140@91:0> = 1) && ((<h_1140@91:1> = 1) && (<<h_1140@91:3>@128:0> = 1))))
        nub':((not
                 ((<h_1140@91:1> = 0) ||
                  ((<<h_1140@91:3>@128:0> >= <h_1140@91:1>) || ((1 + <h_1140@91:0>) <> <h_1140@91:1>)))) ||
              (not ((<<h_1140@91:3>@128:0> >= <h_1140@91:0>) || (<h_1140@91:0> <> <h_1140@91:1>))))
        begin InterpProver.interpolate(84546)[5]
          begin InterpProver.interpolate_fresh(84547)[6]
            begin InterpProver.interpolate_log(84548)[7]
              input1: (((<h_1140@91:0> = 0) && ((<h_1140@91:1> = 1) && (<<h_1140@91:3>@128:0> = 1))) ||
                       ((<h_1140@91:0> = 1) && ((<h_1140@91:1> = 1) && (<<h_1140@91:3>@128:0> = 1))))
              input2: ((not
                          ((<h_1140@91:1> = 0) ||
                           ((<<h_1140@91:3>@128:0> >= <h_1140@91:1>) || ((1 + <h_1140@91:0>) <> <h_1140@91:1>)))) ||
                       (not ((<<h_1140@91:3>@128:0> >= <h_1140@91:0>) || (<h_1140@91:0> <> <h_1140@91:1>))))
              begin InterpProver.interpolate_check(84549)[8]
                begin InterpProver.interpolate_simplify(84550)[9]
                  begin InterpProver.interpolate_quick(84754)[10]
                    begin CsisatInterface.interpolate_csisat_wrap(84763)[11]
                      begin CsisatInterface.interpolate_csisat_post_process(84764)[12]
                        begin CsisatInterface.interpolate_csisat_log(84765)[13]
                          input1: ((0 = v_sep_h_1140_sep_91_sep_0 | 1 = v_sep_h_1140_sep_91_sep_0) & 1 = v_sep_h_1140_sep_91_sep_1 & 1 = v_sep_h_1140_sep_91_sep_3_sep_128_sep_0)
                          input2: ((not 0 = v_sep_h_1140_sep_91_sep_1 & v_sep_h_1140_sep_91_sep_1 = (1 + v_sep_h_1140_sep_91_sep_0) & (1 + v_sep_h_1140_sep_91_sep_3_sep_128_sep_0) <= v_sep_h_1140_sep_91_sep_1) | (v_sep_h_1140_sep_91_sep_0 = v_sep_h_1140_sep_91_sep_1 & (1 + v_sep_h_1140_sep_91_sep_3_sep_128_sep_0) <= v_sep_h_1140_sep_91_sep_0))
                          begin CsisatInterface.interpolate_csisat_raw(84766)[14]
                            
                          end CsisatInterface.interpolate_csisat_raw(84766)[14] (0.003000 sec.)
                          output: ((not v_sep_h_1140_sep_91_sep_0 = v_sep_h_1140_sep_91_sep_1 & (-2*v_sep_h_1140_sep_91_sep_3_sep_128_sep_0 + 2*v_sep_h_1140_sep_91_sep_1) <= 0) | ((-2*v_sep_h_1140_sep_91_sep_0 + 2*v_sep_h_1140_sep_91_sep_1) <= 0 & (-2*v_sep_h_1140_sep_91_sep_3_sep_128_sep_0 + 2*v_sep_h_1140_sep_91_sep_0) <= 0))
                          
                        end CsisatInterface.interpolate_csisat_log(84765)[13] (0.004000 sec.)
                        after simplification: ((not v_sep_h_1140_sep_91_sep_0 = v_sep_h_1140_sep_91_sep_1 & (-2*v_sep_h_1140_sep_91_sep_3_sep_128_sep_0 + 2*v_sep_h_1140_sep_91_sep_1) <= 0) | ((-2*v_sep_h_1140_sep_91_sep_0 + 2*v_sep_h_1140_sep_91_sep_1) <= 0 & (-2*v_sep_h_1140_sep_91_sep_3_sep_128_sep_0 + 2*v_sep_h_1140_sep_91_sep_0) <= 0))
                        after dnf conversion: ((not v_sep_h_1140_sep_91_sep_0 = v_sep_h_1140_sep_91_sep_1 & (-2*v_sep_h_1140_sep_91_sep_3_sep_128_sep_0 + 2*v_sep_h_1140_sep_91_sep_1) <= 0) | ((-2*v_sep_h_1140_sep_91_sep_0 + 2*v_sep_h_1140_sep_91_sep_1) <= 0 & (-2*v_sep_h_1140_sep_91_sep_3_sep_128_sep_0 + 2*v_sep_h_1140_sep_91_sep_0) <= 0))
                        
                      end CsisatInterface.interpolate_csisat_post_process(84764)[12] (0.004000 sec.)
                      
                    end CsisatInterface.interpolate_csisat_wrap(84763)[11] (0.004000 sec.)
                    
                  end InterpProver.interpolate_quick(84754)[10] (0.005000 sec.)
                  begin minimizing # of disjunctions(84800)[10]
                    input: (((<h_1140@91:0> <> <h_1140@91:1>) && (<h_1140@91:1> <= <<h_1140@91:3>@128:0>)) ||
                            ((<h_1140@91:1> <= <h_1140@91:0>) && (<h_1140@91:0> <= <<h_1140@91:3>@128:0>)))
                    output: (((<h_1140@91:1> <= <h_1140@91:0>) && (<h_1140@91:0> <= <<h_1140@91:3>@128:0>)) ||
                             ((<h_1140@91:0> <> <h_1140@91:1>) && (<h_1140@91:1> <= <<h_1140@91:3>@128:0>)))
                  end minimizing # of disjunctions(84800)[10] (0.000000 sec.)
                  begin minimizing # of conjunctions(84845)[10]
                    input: ((<h_1140@91:1> <= <h_1140@91:0>) && (<h_1140@91:0> <= <<h_1140@91:3>@128:0>))
                    output: ((<h_1140@91:0> <= <<h_1140@91:3>@128:0>) && (<h_1140@91:1> <= <h_1140@91:0>))
                  end minimizing # of conjunctions(84845)[10] (0.000999 sec.)
                  begin minimizing # of conjunctions(84978)[10]
                    input: ((<h_1140@91:0> <> <h_1140@91:1>) && (<h_1140@91:1> <= <<h_1140@91:3>@128:0>))
                    output: (<h_1140@91:1> <= <<h_1140@91:3>@128:0>)
                  end minimizing # of conjunctions(84978)[10] (0.000000 sec.)
                  
                end InterpProver.interpolate_simplify(84550)[9] (0.006999 sec.)
                
              end InterpProver.interpolate_check(84549)[8] (0.007999 sec.)
              output: (((<h_1140@91:0> <= <<h_1140@91:3>@128:0>) && (<h_1140@91:1> <= <h_1140@91:0>)) ||
                       (<h_1140@91:1> <= <<h_1140@91:3>@128:0>))
            end InterpProver.interpolate_log(84548)[7] (0.007999 sec.)
            
          end InterpProver.interpolate_fresh(84547)[6] (0.007999 sec.)
          
        end InterpProver.interpolate(84546)[5] (0.007999 sec.)
        output:
          P[<<h_1140@91:3>@128:0>](<h_1140@91:0>:int,<h_1140@91:1>:int,<<h_1140@91:3>@128:0>:int) =
          (((<h_1140@91:0> <= <<h_1140@91:3>@128:0>) && (<h_1140@91:1> <= <h_1140@91:0>)) ||
           (<h_1140@91:1> <= <<h_1140@91:3>@128:0>))
          P[<<h_1140@88:3>@130:0>](<h_1140@91:0>:int,<h_1140@91:1>:int,<<h_1140@91:3>@128:0>:int) =
          (((<h_1140@91:0> <= <<h_1140@91:3>@128:0>) && (<h_1140@91:1> <= <h_1140@91:0>)) ||
           (<h_1140@91:1> <= <<h_1140@91:3>@128:0>))
      end ApronInterface.convex_hull_interpolate(84545)[4] (0.013998 sec.)
      Horn clauses:
        P[<fail_1450@137:0>](<fail_1450@137:0>:bool)|- bot
        
        P[<h_1140@91:1>](0:int,<h_1140@91:1>:int),
        P[<<<h_1140@91:2>@94:2>@126:0>](0:int,<h_1140@91:1>:int,0:int,<h_1140@91:1>:int,<<h_1140@91:3>@128:0>:int),
        ((<h_1140@91:1> > <<h_1140@91:3>@128:0>) && ((0 > <<h_1140@91:3>@128:0>) || (<h_1140@91:1> > 0))) |- bot
        
        P[<h_1140@88:1>]((1 + <h_1140@91:0>):int,<h_1140@91:1>:int),
        P[<h_1140@91:1>](<h_1140@91:0>:int,<h_1140@91:1>:int),
        P[<h_1140@88:1>](var285:int,var283:int),
        P[<<h_1140@91:2>@94:1>]((-1 + var285):int,var283:int,<<h_1140@91:2>@94:0>:int,<<h_1140@91:2>@94:1>:int),
        P[<h_1140@88:1>](var284:int,var282:int),
        P[<<<h_1140@88:2>@105:2>@116:0>](var284:int,var282:int,(1 + <<h_1140@91:2>@94:0>):int,(
                                         -1 + <<h_1140@91:2>@94:1>):int,<<<h_1140@91:2>@94:2>@126:0>:int),
        ((var285 <> 0) && ((var284 <> 0) && (((1 + <h_1140@91:0>) <> 0) && (<<h_1140@91:2>@94:1> > 0))))
        |- P[<<<h_1140@91:2>@94:2>@126:0>](<h_1140@91:0>:int,<h_1140@91:1>:int,
                                           <<h_1140@91:2>@94:0>:int,<<h_1140@91:2>@94:1>:int,
                                           <<<h_1140@91:2>@94:2>@126:0>:int)
        
        P[<<h_1140@88:2>@105:1>](var286:int,var286:int,<<h_1140@88:2>@105:0>:int,<<h_1140@88:2>@105:1>:int),
        P[<h_1140@88:1>](<h_1140@88:0>:int,<h_1140@88:1>:int),
        ((<<h_1140@88:2>@105:1> = 0) &&
         ((<h_1140@88:0> = <h_1140@88:1>) && (<<<h_1140@88:2>@105:2>@116:0> = <<h_1140@88:2>@105:0>)))
        |- P[<<<h_1140@88:2>@105:2>@116:0>](<h_1140@88:0>:int,<h_1140@88:1>:int,
                                            <<h_1140@88:2>@105:0>:int,
                                            <<h_1140@88:2>@105:1>:int,
                                            <<<h_1140@88:2>@105:2>@116:0>:int)
        
        P[<h_1140@88:1>](<h_1140@88:0>:int,<h_1140@88:1>:int),
        P[<h_1140@88:1>](var288:int,var287:int),
        P[<<h_1140@91:2>@94:1>]((-1 + var288):int,var287:int,(-1 + <<h_1140@88:2>@105:0>):int,(
                                1 + <<h_1140@88:2>@105:1>):int),
        ((var288 <> 0) && ((<h_1140@88:0> <> 0) && ((1 + <<h_1140@88:2>@105:1>) > 0)))
        |- P[<<h_1140@88:2>@105:1>](<h_1140@88:0>:int,<h_1140@88:1>:int,
                                    <<h_1140@88:2>@105:0>:int,<<h_1140@88:2>@105:1>:int)
        
        P[<h_1140@91:1>](<h_1140@91:0>:int,<h_1140@91:1>:int),
        ((<h_1140@91:0> = 0) && ((<<h_1140@91:2>@94:0> = 0) && (<<h_1140@91:2>@94:1> = <h_1140@91:1>)))
        |- P[<<h_1140@91:2>@94:1>](<h_1140@91:0>:int,<h_1140@91:1>:int,
                                   <<h_1140@91:2>@94:0>:int,<<h_1140@91:2>@94:1>:int)
        
        P[<h_1140@88:1>]((1 + <h_1140@91:0>):int,<h_1140@91:1>:int), (
        (1 + <h_1140@91:0>) <> 0) |- P[<h_1140@91:1>](<h_1140@91:0>:int,
                                                      <h_1140@91:1>:int)
        
         (<h_1140@88:1> = <h_1140@88:0>) |- P[<h_1140@88:1>](<h_1140@88:0>:int,
                                                             <h_1140@88:1>:int)
      lower bounds:
        P[<h_1140@88:1>](<h_1140@88:0>:int,<h_1140@88:1>:int) = (<h_1140@88:1> = <h_1140@88:0>)
        P[<fail_1450@137:0>](var302:bool) = false
        P[<h_1140@91:1>](<h_1140@91:0>:int,<h_1140@91:1>:int) =
        (((1 + <h_1140@91:0>) <> 0) && (<h_1140@91:1> = (1 + <h_1140@91:0>)))
        P[<<h_1140@91:2>@94:1>](<h_1140@91:0>:int,<h_1140@91:1>:int,<<h_1140@91:2>@94:0>:int,<<h_1140@91:2>@94:1>:int) =
        ((<h_1140@91:0> = 0) &&
         ((<<h_1140@91:2>@94:0> = 0) &&
          ((<h_1140@91:1> = (1 + <h_1140@91:0>)) && (<<h_1140@91:2>@94:1> = <h_1140@91:1>))))
        P[<<h_1140@88:2>@105:1>](<h_1140@88:0>:int,<h_1140@88:1>:int,<<h_1140@88:2>@105:0>:int,<<h_1140@88:2>@105:1>:int) =
        ((<<h_1140@88:2>@105:1> = 0) &&
         ((<<h_1140@88:2>@105:0> = 1) && ((<h_1140@88:1> = <h_1140@88:0>) && (<h_1140@88:0> <> 0))))
        P[<<<h_1140@88:2>@105:2>@116:0>](<h_1140@88:0>:int,<h_1140@88:1>:int,<<h_1140@88:2>@105:0>:int,<<h_1140@88:2>@105:1>:int,<<<h_1140@88:2>@105:2>@116:0>:int) =
        ((<<h_1140@88:2>@105:1> = 0) &&
         ((<<h_1140@88:2>@105:0> = 1) &&
          ((<<<h_1140@88:2>@105:2>@116:0> = <<h_1140@88:2>@105:0>) && (<h_1140@88:1> = <h_1140@88:0>))))
        P[<<<h_1140@91:2>@94:2>@126:0>](<h_1140@91:0>:int,<h_1140@91:1>:int,<<h_1140@91:2>@94:0>:int,<<h_1140@91:2>@94:1>:int,<<<h_1140@91:2>@94:2>@126:0>:int) =
        ((<<h_1140@91:2>@94:1> = 1) &&
         ((<<h_1140@91:2>@94:0> = 0) &&
          (((1 + <h_1140@91:0>) <> 0) &&
           ((<h_1140@91:1> = (1 + <h_1140@91:0>)) && (<<<h_1140@91:2>@94:2>@126:0> = (1 + <<h_1140@91:2>@94:0>))))))
      upper bounds:
        P[<<<h_1140@91:2>@94:2>@126:0>](var313:int,var314:int,var315:int,var316:int,var317:int) =
        ((var313 <> 0) || ((var314 <> 1) || ((var315 <> 0) || ((var316 <> 1) || (1 <= var317)))))
        P[<<<h_1140@88:2>@105:2>@116:0>](var306:int,var307:int,var308:int,var309:int,var310:int) =
        ((var308 <> 1) || ((var309 <> 0) || ((var306 = 0) || ((1 <= var310) || (var306 <> var307)))))
      begin GenHcSolver.classify_pids(103810)[4]
        output:
          [<<<h_1140@88:2>@105:2>@116:0>;<<<h_1140@91:2>@94:2>@126:0>]
      end GenHcSolver.classify_pids(103810)[4] (0.001000 sec.)
      begin ApronInterface.convex_hull_interpolate(104069)[4]
        lb:(((<<h_1140@88:2>@105:1> = 0) &&
             ((<<h_1140@88:2>@105:0> = 1) &&
              ((<<<h_1140@88:2>@105:2>@116:0> = <<h_1140@88:2>@105:0>) && (<h_1140@88:1> = <h_1140@88:0>)))) ||
            ((<<h_1140@88:2>@105:1> = 1) &&
             ((<<h_1140@88:2>@105:0> = 0) &&
              (((1 + <h_1140@88:0>) <> 0) &&
               ((<h_1140@88:1> = (1 + <h_1140@88:0>)) && (<<<h_1140@88:2>@105:2>@116:0> = (1 + <<h_1140@88:2>@105:0>)))))))
        nub:((not
                ((<<h_1140@88:2>@105:0> <> 1) ||
                 ((<<h_1140@88:2>@105:1> <> 0) ||
                  ((<h_1140@88:0> = 0) || ((1 <= <<<h_1140@88:2>@105:2>@116:0>) || (<h_1140@88:0> <> <h_1140@88:1>)))))) ||
             (not
                ((<h_1140@88:0> <> 0) ||
                 ((<h_1140@88:1> <> 1) ||
                  ((<<h_1140@88:2>@105:0> <> 0) ||
                   ((<<h_1140@88:2>@105:1> <> 1) || (1 <= <<<h_1140@88:2>@105:2>@116:0>)))))))
        lb':(((<<h_1140@88:2>@105:1> = 0) &&
              ((<<h_1140@88:2>@105:0> = 1) &&
               ((<<<h_1140@88:2>@105:2>@116:0> = <<h_1140@88:2>@105:0>) && (<h_1140@88:1> = <h_1140@88:0>)))) ||
             ((<<h_1140@88:2>@105:1> = 1) &&
              ((<<h_1140@88:2>@105:0> = 0) &&
               (((1 + <h_1140@88:0>) <> 0) &&
                ((<h_1140@88:1> = (1 + <h_1140@88:0>)) && (<<<h_1140@88:2>@105:2>@116:0> = (1 + <<h_1140@88:2>@105:0>)))))))
        nub':((not
                 ((<<h_1140@88:2>@105:0> <> 1) ||
                  ((<<h_1140@88:2>@105:1> <> 0) ||
                   ((<h_1140@88:0> = 0) || ((1 <= <<<h_1140@88:2>@105:2>@116:0>) || (<h_1140@88:0> <> <h_1140@88:1>)))))) ||
              (not
                 ((<h_1140@88:0> <> 0) ||
                  ((<h_1140@88:1> <> 1) ||
                   ((<<h_1140@88:2>@105:0> <> 0) ||
                    ((<<h_1140@88:2>@105:1> <> 1) || (1 <= <<<h_1140@88:2>@105:2>@116:0>)))))))
        begin InterpProver.interpolate(104070)[5]
          begin InterpProver.interpolate_fresh(104071)[6]
            begin InterpProver.interpolate_log(104072)[7]
              input1: (((<<h_1140@88:2>@105:1> = 0) &&
                        ((<<h_1140@88:2>@105:0> = 1) &&
                         ((<<<h_1140@88:2>@105:2>@116:0> = <<h_1140@88:2>@105:0>) && (<h_1140@88:1> = <h_1140@88:0>)))) ||
                       ((<<h_1140@88:2>@105:1> = 1) &&
                        ((<<h_1140@88:2>@105:0> = 0) &&
                         (((1 + <h_1140@88:0>) <> 0) &&
                          ((<h_1140@88:1> = (1 + <h_1140@88:0>)) &&
                           (<<<h_1140@88:2>@105:2>@116:0> = (1 + <<h_1140@88:2>@105:0>)))))))
              input2: ((not
                          ((<<h_1140@88:2>@105:0> <> 1) ||
                           ((<<h_1140@88:2>@105:1> <> 0) ||
                            ((<h_1140@88:0> = 0) ||
                             ((1 <= <<<h_1140@88:2>@105:2>@116:0>) || (<h_1140@88:0> <> <h_1140@88:1>)))))) ||
                       (not
                          ((<h_1140@88:0> <> 0) ||
                           ((<h_1140@88:1> <> 1) ||
                            ((<<h_1140@88:2>@105:0> <> 0) ||
                             ((<<h_1140@88:2>@105:1> <> 1) || (1 <= <<<h_1140@88:2>@105:2>@116:0>)))))))
              begin InterpProver.interpolate_check(104073)[8]
                begin InterpProver.interpolate_simplify(104074)[9]
                  begin InterpProver.interpolate_quick(104666)[10]
                    begin CsisatInterface.interpolate_csisat_wrap(104675)[11]
                      begin CsisatInterface.interpolate_csisat_post_process(104676)[12]
                        begin CsisatInterface.interpolate_csisat_log(104677)[13]
                          input1: ((not 0 = (1 + v_sep_h_1140_sep_88_sep_0) & 0 = v_sep_h_1140_sep_88_sep_2_sep_105_sep_0 & 1 = v_sep_h_1140_sep_88_sep_2_sep_105_sep_1 & v_sep_h_1140_sep_88_sep_1 = (1 + v_sep_h_1140_sep_88_sep_0) & v_sep_h_1140_sep_88_sep_2_sep_105_sep_2_sep_116_sep_0 = (1 + v_sep_h_1140_sep_88_sep_2_sep_105_sep_0)) | (0 = v_sep_h_1140_sep_88_sep_2_sep_105_sep_1 & 1 = v_sep_h_1140_sep_88_sep_2_sep_105_sep_0 & v_sep_h_1140_sep_88_sep_0 = v_sep_h_1140_sep_88_sep_1 & v_sep_h_1140_sep_88_sep_2_sep_105_sep_0 = v_sep_h_1140_sep_88_sep_2_sep_105_sep_2_sep_116_sep_0))
                          input2: (((not 0 = v_sep_h_1140_sep_88_sep_0 & 0 = v_sep_h_1140_sep_88_sep_2_sep_105_sep_1 & 1 = v_sep_h_1140_sep_88_sep_2_sep_105_sep_0 & v_sep_h_1140_sep_88_sep_0 = v_sep_h_1140_sep_88_sep_1) | (0 = v_sep_h_1140_sep_88_sep_0 & 0 = v_sep_h_1140_sep_88_sep_2_sep_105_sep_0 & 1 = v_sep_h_1140_sep_88_sep_1 & 1 = v_sep_h_1140_sep_88_sep_2_sep_105_sep_1)) & (1 + v_sep_h_1140_sep_88_sep_2_sep_105_sep_2_sep_116_sep_0) <= 1)
                          begin CsisatInterface.interpolate_csisat_raw(104678)[14]
                            
                          end CsisatInterface.interpolate_csisat_raw(104678)[14] (0.004999 sec.)
                          output: (((((((not 1 = v_sep_h_1140_sep_88_sep_2_sep_105_sep_0 | -1*v_sep_h_1140_sep_88_sep_2_sep_105_sep_2_sep_116_sep_0 <= -2) & -2*v_sep_h_1140_sep_88_sep_2_sep_105_sep_2_sep_116_sep_0 <= -2) | not 1 = v_sep_h_1140_sep_88_sep_2_sep_105_sep_1) & 1 = v_sep_h_1140_sep_88_sep_2_sep_105_sep_1) | not 0 = v_sep_h_1140_sep_88_sep_2_sep_105_sep_0) & 0 = v_sep_h_1140_sep_88_sep_2_sep_105_sep_0) | ((not 1 = v_sep_h_1140_sep_88_sep_2_sep_105_sep_0 | -2*v_sep_h_1140_sep_88_sep_2_sep_105_sep_2_sep_116_sep_0 <= -2) & 1 = v_sep_h_1140_sep_88_sep_2_sep_105_sep_0))
                          
                        end CsisatInterface.interpolate_csisat_log(104677)[13] (0.004999 sec.)
                        after simplification: (((((((not 1 = v_sep_h_1140_sep_88_sep_2_sep_105_sep_0 | -1*v_sep_h_1140_sep_88_sep_2_sep_105_sep_2_sep_116_sep_0 <= -2) & -2*v_sep_h_1140_sep_88_sep_2_sep_105_sep_2_sep_116_sep_0 <= -2) | not 1 = v_sep_h_1140_sep_88_sep_2_sep_105_sep_1) & 1 = v_sep_h_1140_sep_88_sep_2_sep_105_sep_1) | not 0 = v_sep_h_1140_sep_88_sep_2_sep_105_sep_0) & 0 = v_sep_h_1140_sep_88_sep_2_sep_105_sep_0) | ((not 1 = v_sep_h_1140_sep_88_sep_2_sep_105_sep_0 | -2*v_sep_h_1140_sep_88_sep_2_sep_105_sep_2_sep_116_sep_0 <= -2) & 1 = v_sep_h_1140_sep_88_sep_2_sep_105_sep_0))
                        after dnf conversion: ((not 0 = v_sep_h_1140_sep_88_sep_2_sep_105_sep_0 & 0 = v_sep_h_1140_sep_88_sep_2_sep_105_sep_0) | (-1*v_sep_h_1140_sep_88_sep_2_sep_105_sep_2_sep_116_sep_0 <= -2 & -2*v_sep_h_1140_sep_88_sep_2_sep_105_sep_2_sep_116_sep_0 <= -2 & 1 = v_sep_h_1140_sep_88_sep_2_sep_105_sep_1 & 0 = v_sep_h_1140_sep_88_sep_2_sep_105_sep_0) | (not 1 = v_sep_h_1140_sep_88_sep_2_sep_105_sep_0 & -2*v_sep_h_1140_sep_88_sep_2_sep_105_sep_2_sep_116_sep_0 <= -2 & 1 = v_sep_h_1140_sep_88_sep_2_sep_105_sep_1 & 0 = v_sep_h_1140_sep_88_sep_2_sep_105_sep_0) | (not 1 = v_sep_h_1140_sep_88_sep_2_sep_105_sep_1 & 1 = v_sep_h_1140_sep_88_sep_2_sep_105_sep_1 & 0 = v_sep_h_1140_sep_88_sep_2_sep_105_sep_0) | (-2*v_sep_h_1140_sep_88_sep_2_sep_105_sep_2_sep_116_sep_0 <= -2 & 1 = v_sep_h_1140_sep_88_sep_2_sep_105_sep_0) | (not 1 = v_sep_h_1140_sep_88_sep_2_sep_105_sep_0 & 1 = v_sep_h_1140_sep_88_sep_2_sep_105_sep_0))
                        
                      end CsisatInterface.interpolate_csisat_post_process(104676)[12] (0.004999 sec.)
                      
                    end CsisatInterface.interpolate_csisat_wrap(104675)[11] (0.004999 sec.)
                    
                  end InterpProver.interpolate_quick(104666)[10] (0.005999 sec.)
                  begin minimizing # of disjunctions(104809)[10]
                    input: (((<<h_1140@88:2>@105:1> = 1) &&
                             ((<<h_1140@88:2>@105:0> = 0) && (2 <= <<<h_1140@88:2>@105:2>@116:0>))) ||
                            (((1 <= <<<h_1140@88:2>@105:2>@116:0>) && (<<h_1140@88:2>@105:0> = 1)) ||
                             ((1 <= <<<h_1140@88:2>@105:2>@116:0>) &&
                              ((<<h_1140@88:2>@105:0> = 0) && (<<h_1140@88:2>@105:1> = 1)))))
                    output: (((1 <= <<<h_1140@88:2>@105:2>@116:0>) &&
                              ((<<h_1140@88:2>@105:0> = 0) && (<<h_1140@88:2>@105:1> = 1))) ||
                             ((1 <= <<<h_1140@88:2>@105:2>@116:0>) && (<<h_1140@88:2>@105:0> = 1)))
                  end minimizing # of disjunctions(104809)[10] (0.002000 sec.)
                  begin minimizing # of conjunctions(104909)[10]
                    input: ((1 <= <<<h_1140@88:2>@105:2>@116:0>) &&
                            ((<<h_1140@88:2>@105:0> = 0) && (<<h_1140@88:2>@105:1> = 1)))
                    output: (1 <= <<<h_1140@88:2>@105:2>@116:0>)
                  end minimizing # of conjunctions(104909)[10] (0.003999 sec.)
                  begin minimizing # of conjunctions(105660)[10]
                    input: ((1 <= <<<h_1140@88:2>@105:2>@116:0>) && (<<h_1140@88:2>@105:0> = 1))
                    output: (1 <= <<<h_1140@88:2>@105:2>@116:0>)
                  end minimizing # of conjunctions(105660)[10] (0.004000 sec.)
                  
                end InterpProver.interpolate_simplify(104074)[9] (0.020997 sec.)
                
              end InterpProver.interpolate_check(104073)[8] (0.022996 sec.)
              output: (1 <= <<<h_1140@88:2>@105:2>@116:0>)
            end InterpProver.interpolate_log(104072)[7] (0.022996 sec.)
            
          end InterpProver.interpolate_fresh(104071)[6] (0.022996 sec.)
          
        end InterpProver.interpolate(104070)[5] (0.022996 sec.)
        output:
          P[<<<h_1140@88:2>@105:2>@116:0>](<h_1140@88:0>:int,<h_1140@88:1>:int,<<h_1140@88:2>@105:0>:int,<<h_1140@88:2>@105:1>:int,<<<h_1140@88:2>@105:2>@116:0>:int) =
          (1 <= <<<h_1140@88:2>@105:2>@116:0>)
          P[<<<h_1140@91:2>@94:2>@126:0>](<h_1140@88:0>:int,<h_1140@88:1>:int,<<h_1140@88:2>@105:0>:int,<<h_1140@88:2>@105:1>:int,<<<h_1140@88:2>@105:2>@116:0>:int) =
          (1 <= <<<h_1140@88:2>@105:2>@116:0>)
      end ApronInterface.convex_hull_interpolate(104069)[4] (0.023996 sec.)
      Horn clauses:
        P[<fail_1450@137:0>](<fail_1450@137:0>:bool)|- bot
        
        P[<h_1140@91:1>](0:int,<h_1140@91:1>:int), (1 < <h_1140@91:1>) |- bot
        
        P[<<h_1140@88:2>@105:1>](var286:int,var286:int,<<<h_1140@88:2>@105:2>@116:0>:int,0:int),
        P[<h_1140@88:1>](<h_1140@88:0>:int,<h_1140@88:0>:int), (1 > <<<h_1140@88:2>@105:2>@116:0>) |- bot
        
        P[<h_1140@88:1>](<h_1140@88:0>:int,<h_1140@88:1>:int),
        P[<h_1140@88:1>](var288:int,var287:int),
        P[<<h_1140@91:2>@94:1>]((-1 + var288):int,var287:int,(-1 + <<h_1140@88:2>@105:0>):int,(
                                1 + <<h_1140@88:2>@105:1>):int),
        ((var288 <> 0) && ((<h_1140@88:0> <> 0) && ((1 + <<h_1140@88:2>@105:1>) > 0)))
        |- P[<<h_1140@88:2>@105:1>](<h_1140@88:0>:int,<h_1140@88:1>:int,
                                    <<h_1140@88:2>@105:0>:int,<<h_1140@88:2>@105:1>:int)
        
        P[<h_1140@91:1>](<h_1140@91:0>:int,<h_1140@91:1>:int),
        ((<h_1140@91:0> = 0) && ((<<h_1140@91:2>@94:0> = 0) && (<<h_1140@91:2>@94:1> = <h_1140@91:1>)))
        |- P[<<h_1140@91:2>@94:1>](<h_1140@91:0>:int,<h_1140@91:1>:int,
                                   <<h_1140@91:2>@94:0>:int,<<h_1140@91:2>@94:1>:int)
        
        P[<h_1140@88:1>]((1 + <h_1140@91:0>):int,<h_1140@91:1>:int), (
        (1 + <h_1140@91:0>) <> 0) |- P[<h_1140@91:1>](<h_1140@91:0>:int,
                                                      <h_1140@91:1>:int)
        
         (<h_1140@88:1> = <h_1140@88:0>) |- P[<h_1140@88:1>](<h_1140@88:0>:int,
                                                             <h_1140@88:1>:int)
      lower bounds:
        P[<h_1140@88:1>](<h_1140@88:0>:int,<h_1140@88:1>:int) = (<h_1140@88:1> = <h_1140@88:0>)
        P[<fail_1450@137:0>](var321:bool) = false
        P[<h_1140@91:1>](<h_1140@91:0>:int,<h_1140@91:1>:int) =
        (((1 + <h_1140@91:0>) <> 0) && (<h_1140@91:1> = (1 + <h_1140@91:0>)))
        P[<<h_1140@91:2>@94:1>](<h_1140@91:0>:int,<h_1140@91:1>:int,<<h_1140@91:2>@94:0>:int,<<h_1140@91:2>@94:1>:int) =
        ((<h_1140@91:0> = 0) &&
         ((<<h_1140@91:2>@94:0> = 0) &&
          ((<h_1140@91:1> = (1 + <h_1140@91:0>)) && (<<h_1140@91:2>@94:1> = <h_1140@91:1>))))
        P[<<h_1140@88:2>@105:1>](<h_1140@88:0>:int,<h_1140@88:1>:int,<<h_1140@88:2>@105:0>:int,<<h_1140@88:2>@105:1>:int) =
        ((<<h_1140@88:2>@105:1> = 0) &&
         ((<<h_1140@88:2>@105:0> = 1) && ((<h_1140@88:1> = <h_1140@88:0>) && (<h_1140@88:0> <> 0))))
      upper bounds:
        P[<<h_1140@88:2>@105:1>](var331:int,var332:int,var333:int,var334:int) =
        ((var334 <> 0) || ((1 <= var333) || (var331 <> var332)))
        P[<<h_1140@91:2>@94:1>](var325:int,var326:int,var327:int,var328:int) =
        ((var328 <> 1) || (((1 + var325) <> var326) || ((var326 = 0) || (0 <= var327))))
      begin GenHcSolver.classify_pids(117728)[4]
        output:
          [<<h_1140@91:2>@94:1>;<<h_1140@88:2>@105:1>]
      end GenHcSolver.classify_pids(117728)[4] (0.001000 sec.)
      begin ApronInterface.convex_hull_interpolate(117827)[4]
        lb:(((<h_1140@91:0> = 0) &&
             ((<<h_1140@91:2>@94:0> = 0) &&
              ((<h_1140@91:1> = (1 + <h_1140@91:0>)) && (<<h_1140@91:2>@94:1> = <h_1140@91:1>)))) ||
            ((<<h_1140@91:2>@94:1> = 0) &&
             ((<<h_1140@91:2>@94:0> = 1) && ((<h_1140@91:1> = <h_1140@91:0>) && (<h_1140@91:0> <> 0)))))
        nub:((not
                ((<<h_1140@91:2>@94:1> <> 1) ||
                 (((1 + <h_1140@91:0>) <> <h_1140@91:1>) || ((<h_1140@91:1> = 0) || (0 <= <<h_1140@91:2>@94:0>))))) ||
             (not ((<<h_1140@91:2>@94:1> <> 0) || ((1 <= <<h_1140@91:2>@94:0>) || (<h_1140@91:0> <> <h_1140@91:1>)))))
        lb':(((<h_1140@91:0> = 0) &&
              ((<<h_1140@91:2>@94:0> = 0) &&
               ((<h_1140@91:1> = (1 + <h_1140@91:0>)) && (<<h_1140@91:2>@94:1> = <h_1140@91:1>)))) ||
             ((<<h_1140@91:2>@94:1> = 0) &&
              ((<<h_1140@91:2>@94:0> = 1) && ((<h_1140@91:1> = <h_1140@91:0>) && (<h_1140@91:0> <> 0)))))
        nub':((not
                 ((<<h_1140@91:2>@94:1> <> 1) ||
                  (((1 + <h_1140@91:0>) <> <h_1140@91:1>) || ((<h_1140@91:1> = 0) || (0 <= <<h_1140@91:2>@94:0>))))) ||
              (not ((<<h_1140@91:2>@94:1> <> 0) || ((1 <= <<h_1140@91:2>@94:0>) || (<h_1140@91:0> <> <h_1140@91:1>)))))
        begin InterpProver.interpolate(117828)[5]
          begin InterpProver.interpolate_fresh(117829)[6]
            begin InterpProver.interpolate_log(117830)[7]
              input1: (((<h_1140@91:0> = 0) &&
                        ((<<h_1140@91:2>@94:0> = 0) &&
                         ((<h_1140@91:1> = (1 + <h_1140@91:0>)) && (<<h_1140@91:2>@94:1> = <h_1140@91:1>)))) ||
                       ((<<h_1140@91:2>@94:1> = 0) &&
                        ((<<h_1140@91:2>@94:0> = 1) && ((<h_1140@91:1> = <h_1140@91:0>) && (<h_1140@91:0> <> 0)))))
              input2: ((not
                          ((<<h_1140@91:2>@94:1> <> 1) ||
                           (((1 + <h_1140@91:0>) <> <h_1140@91:1>) ||
                            ((<h_1140@91:1> = 0) || (0 <= <<h_1140@91:2>@94:0>))))) ||
                       (not
                          ((<<h_1140@91:2>@94:1> <> 0) ||
                           ((1 <= <<h_1140@91:2>@94:0>) || (<h_1140@91:0> <> <h_1140@91:1>)))))
              begin InterpProver.interpolate_check(117831)[8]
                begin InterpProver.interpolate_simplify(117832)[9]
                  begin InterpProver.interpolate_quick(118165)[10]
                    begin CsisatInterface.interpolate_csisat_wrap(118174)[11]
                      begin CsisatInterface.interpolate_csisat_post_process(118175)[12]
                        begin CsisatInterface.interpolate_csisat_log(118176)[13]
                          input1: ((not 0 = v_sep_h_1140_sep_91_sep_0 & 0 = v_sep_h_1140_sep_91_sep_2_sep_94_sep_1 & 1 = v_sep_h_1140_sep_91_sep_2_sep_94_sep_0 & v_sep_h_1140_sep_91_sep_0 = v_sep_h_1140_sep_91_sep_1) | (0 = v_sep_h_1140_sep_91_sep_0 & 0 = v_sep_h_1140_sep_91_sep_2_sep_94_sep_0 & v_sep_h_1140_sep_91_sep_1 = v_sep_h_1140_sep_91_sep_2_sep_94_sep_1 & v_sep_h_1140_sep_91_sep_1 = (1 + v_sep_h_1140_sep_91_sep_0)))
                          input2: ((not 0 = v_sep_h_1140_sep_91_sep_1 & 1 = v_sep_h_1140_sep_91_sep_2_sep_94_sep_1 & v_sep_h_1140_sep_91_sep_1 = (1 + v_sep_h_1140_sep_91_sep_0) & (1 + v_sep_h_1140_sep_91_sep_2_sep_94_sep_0) <= 0) | (0 = v_sep_h_1140_sep_91_sep_2_sep_94_sep_1 & v_sep_h_1140_sep_91_sep_0 = v_sep_h_1140_sep_91_sep_1 & (1 + v_sep_h_1140_sep_91_sep_2_sep_94_sep_0) <= 1))
                          begin CsisatInterface.interpolate_csisat_raw(118177)[14]
                            
                          end CsisatInterface.interpolate_csisat_raw(118177)[14] (0.004999 sec.)
                          output: ((((not v_sep_h_1140_sep_91_sep_0 = v_sep_h_1140_sep_91_sep_1 & -2*v_sep_h_1140_sep_91_sep_2_sep_94_sep_0 <= 0) | not v_sep_h_1140_sep_91_sep_1 = (1 + v_sep_h_1140_sep_91_sep_0)) & v_sep_h_1140_sep_91_sep_1 = (1 + v_sep_h_1140_sep_91_sep_0)) | -2*v_sep_h_1140_sep_91_sep_2_sep_94_sep_0 <= -2)
                          
                        end CsisatInterface.interpolate_csisat_log(118176)[13] (0.004999 sec.)
                        after simplification: ((((not v_sep_h_1140_sep_91_sep_0 = v_sep_h_1140_sep_91_sep_1 & -2*v_sep_h_1140_sep_91_sep_2_sep_94_sep_0 <= 0) | not v_sep_h_1140_sep_91_sep_1 = (1 + v_sep_h_1140_sep_91_sep_0)) & v_sep_h_1140_sep_91_sep_1 = (1 + v_sep_h_1140_sep_91_sep_0)) | -2*v_sep_h_1140_sep_91_sep_2_sep_94_sep_0 <= -2)
                        after dnf conversion: ((not v_sep_h_1140_sep_91_sep_1 = (1 + v_sep_h_1140_sep_91_sep_0) & v_sep_h_1140_sep_91_sep_1 = (1 + v_sep_h_1140_sep_91_sep_0)) | (not v_sep_h_1140_sep_91_sep_0 = v_sep_h_1140_sep_91_sep_1 & -2*v_sep_h_1140_sep_91_sep_2_sep_94_sep_0 <= 0 & v_sep_h_1140_sep_91_sep_1 = (1 + v_sep_h_1140_sep_91_sep_0)) | (-2*v_sep_h_1140_sep_91_sep_2_sep_94_sep_0 <= -2))
                        
                      end CsisatInterface.interpolate_csisat_post_process(118175)[12] (0.004999 sec.)
                      
                    end CsisatInterface.interpolate_csisat_wrap(118174)[11] (0.004999 sec.)
                    
                  end InterpProver.interpolate_quick(118165)[10] (0.004999 sec.)
                  begin minimizing # of disjunctions(118232)[10]
                    input: ((1 <= <<h_1140@91:2>@94:0>) ||
                            (((1 + <h_1140@91:0>) = <h_1140@91:1>) && (0 <= <<h_1140@91:2>@94:0>)))
                    output: ((((1 + <h_1140@91:0>) = <h_1140@91:1>) && (0 <= <<h_1140@91:2>@94:0>)) ||
                             (1 <= <<h_1140@91:2>@94:0>))
                  end minimizing # of disjunctions(118232)[10] (0.001000 sec.)
                  begin minimizing # of conjunctions(118266)[10]
                    input: (((1 + <h_1140@91:0>) = <h_1140@91:1>) && (0 <= <<h_1140@91:2>@94:0>))
                    output: ((0 <= <<h_1140@91:2>@94:0>) && ((1 + <h_1140@91:0>) = <h_1140@91:1>))
                  end minimizing # of conjunctions(118266)[10] (0.002000 sec.)
                  
                end InterpProver.interpolate_simplify(117832)[9] (0.014998 sec.)
                
              end InterpProver.interpolate_check(117831)[8] (0.015998 sec.)
              output: (((0 <= <<h_1140@91:2>@94:0>) && ((1 + <h_1140@91:0>) = <h_1140@91:1>)) ||
                       (1 <= <<h_1140@91:2>@94:0>))
            end InterpProver.interpolate_log(117830)[7] (0.015998 sec.)
            
          end InterpProver.interpolate_fresh(117829)[6] (0.015998 sec.)
          
        end InterpProver.interpolate(117828)[5] (0.015998 sec.)
        output:
          P[<<h_1140@91:2>@94:1>](<h_1140@91:0>:int,<h_1140@91:1>:int,<<h_1140@91:2>@94:0>:int,<<h_1140@91:2>@94:1>:int) =
          (((0 <= <<h_1140@91:2>@94:0>) && ((1 + <h_1140@91:0>) = <h_1140@91:1>)) || (1 <= <<h_1140@91:2>@94:0>))
          P[<<h_1140@88:2>@105:1>](<h_1140@91:0>:int,<h_1140@91:1>:int,<<h_1140@91:2>@94:0>:int,<<h_1140@91:2>@94:1>:int) =
          (((0 <= <<h_1140@91:2>@94:0>) && ((1 + <h_1140@91:0>) = <h_1140@91:1>)) || (1 <= <<h_1140@91:2>@94:0>))
      end ApronInterface.convex_hull_interpolate(117827)[4] (0.017998 sec.)
      Horn clauses:
        P[<fail_1450@137:0>](<fail_1450@137:0>:bool)|- bot
        
        P[<h_1140@91:1>](0:int,<h_1140@91:1>:int), (1 < <h_1140@91:1>) |- bot
        
        P[<h_1140@91:1>](0:int,<<h_1140@91:2>@94:1>:int), (1 <> <<h_1140@91:2>@94:1>) |- bot
        
        P[<h_1140@88:1>]((1 + <h_1140@91:0>):int,<h_1140@91:1>:int), (
        (1 + <h_1140@91:0>) <> 0) |- P[<h_1140@91:1>](<h_1140@91:0>:int,
                                                      <h_1140@91:1>:int)
        
         (<h_1140@88:1> = <h_1140@88:0>) |- P[<h_1140@88:1>](<h_1140@88:0>:int,
                                                             <h_1140@88:1>:int)
      lower bounds:
        P[<h_1140@88:1>](<h_1140@88:0>:int,<h_1140@88:1>:int) = (<h_1140@88:1> = <h_1140@88:0>)
        P[<fail_1450@137:0>](var338:bool) = false
        P[<h_1140@91:1>](<h_1140@91:0>:int,<h_1140@91:1>:int) =
        (((1 + <h_1140@91:0>) <> 0) && (<h_1140@91:1> = (1 + <h_1140@91:0>)))
      upper bounds:
        P[<h_1140@91:1>](var347:int,var348:int) = ((var347 <> 0) || (var348 = 1))
        P[<h_1140@88:1>](var341:int,var342:int) = ((var341 <> 1) || (var342 = 1))
      begin GenHcSolver.classify_pids(123199)[4]
        output:
          [<h_1140@91:1>],[<h_1140@88:1>]
      end GenHcSolver.classify_pids(123199)[4] (0.001000 sec.)
      lb:(((1 + <h_1140@91:0>) <> 0) && (<h_1140@91:1> = (1 + <h_1140@91:0>)))
      nub:(not ((<h_1140@91:0> <> 0) || (<h_1140@91:1> = 1)))
      begin ApronInterface.convex_hull_interpolate(123265)[4]
        lb:(((1 + <h_1140@91:0>) <> 0) && (<h_1140@91:1> = (1 + <h_1140@91:0>)))
        nub:(not ((<h_1140@91:0> <> 0) || (<h_1140@91:1> = 1)))
        lb':(((1 + <h_1140@91:0>) <> 0) && (<h_1140@91:1> = (1 + <h_1140@91:0>)))
        nub':(not ((<h_1140@91:0> <> 0) || (<h_1140@91:1> = 1)))
        begin InterpProver.interpolate(123266)[5]
          begin InterpProver.interpolate_fresh(123267)[6]
            begin InterpProver.interpolate_log(123268)[7]
              input1: (((1 + <h_1140@91:0>) <> 0) && (<h_1140@91:1> = (1 + <h_1140@91:0>)))
              input2: (not ((<h_1140@91:0> <> 0) || (<h_1140@91:1> = 1)))
              begin InterpProver.interpolate_check(123269)[8]
                begin InterpProver.interpolate_simplify(123270)[9]
                  begin InterpProver.interpolate_quick(123339)[10]
                    begin CsisatInterface.interpolate_csisat_wrap(123348)[11]
                      begin CsisatInterface.interpolate_csisat_post_process(123349)[12]
                        begin CsisatInterface.interpolate_csisat_log(123350)[13]
                          input1: (not 0 = (1 + v_sep_h_1140_sep_91_sep_0) & v_sep_h_1140_sep_91_sep_1 = (1 + v_sep_h_1140_sep_91_sep_0))
                          input2: (not 1 = v_sep_h_1140_sep_91_sep_1 & 0 = v_sep_h_1140_sep_91_sep_0)
                          begin CsisatInterface.interpolate_csisat_raw(123351)[14]
                            
                          end CsisatInterface.interpolate_csisat_raw(123351)[14] (0.000000 sec.)
                          output: v_sep_h_1140_sep_91_sep_1 = (1 + v_sep_h_1140_sep_91_sep_0)
                          
                        end CsisatInterface.interpolate_csisat_log(123350)[13] (0.000000 sec.)
                        after simplification: v_sep_h_1140_sep_91_sep_1 = (1 + v_sep_h_1140_sep_91_sep_0)
                        after dnf conversion: ((v_sep_h_1140_sep_91_sep_1 = (1 + v_sep_h_1140_sep_91_sep_0)))
                        
                      end CsisatInterface.interpolate_csisat_post_process(123349)[12] (0.000000 sec.)
                      
                    end CsisatInterface.interpolate_csisat_wrap(123348)[11] (0.000000 sec.)
                    
                  end InterpProver.interpolate_quick(123339)[10] (0.001000 sec.)
                  
                end InterpProver.interpolate_simplify(123270)[9] (0.001000 sec.)
                
              end InterpProver.interpolate_check(123269)[8] (0.001000 sec.)
              output: (<h_1140@91:1> = (1 + <h_1140@91:0>))
            end InterpProver.interpolate_log(123268)[7] (0.001000 sec.)
            
          end InterpProver.interpolate_fresh(123267)[6] (0.001000 sec.)
          
        end InterpProver.interpolate(123266)[5] (0.001000 sec.)
        output:
          P[<h_1140@91:1>](<h_1140@91:0>:int,<h_1140@91:1>:int) = (<h_1140@91:1> = (1 + <h_1140@91:0>))
      end ApronInterface.convex_hull_interpolate(123265)[4] (0.001000 sec.)
      Horn clauses:
        P[<fail_1450@137:0>](<fail_1450@137:0>:bool)|- bot
        
        P[<h_1140@88:1>]((1 + <h_1140@91:0>):int,<h_1140@91:1>:int),
        (((1 + <h_1140@91:0>) <> 0) && (<h_1140@91:1> <> (1 + <h_1140@91:0>))) |- bot
        
         (<h_1140@88:1> = <h_1140@88:0>) |- P[<h_1140@88:1>](<h_1140@88:0>:int,
                                                             <h_1140@88:1>:int)
      lower bounds:
        P[<h_1140@88:1>](<h_1140@88:0>:int,<h_1140@88:1>:int) = (<h_1140@88:1> = <h_1140@88:0>)
        P[<fail_1450@137:0>](var352:bool) = false
      upper bounds:
        P[<fail_1450@137:0>](var355:bool) = true
      begin GenHcSolver.classify_pids(124121)[4]
        output:
          [<fail_1450@137:0>]
      end GenHcSolver.classify_pids(124121)[4] (0.000000 sec.)
      lb:false
      nub:false
      begin ApronInterface.convex_hull_interpolate(124124)[4]
        lb:false
        nub:false
        lb':false
        nub':false
        begin InterpProver.interpolate(124125)[5]
          begin InterpProver.interpolate_fresh(124126)[6]
            begin InterpProver.interpolate_log(124127)[7]
              input1: false
              input2: false
              begin InterpProver.interpolate_check(124128)[8]
                begin InterpProver.interpolate_simplify(124129)[9]
                  begin InterpProver.interpolate_quick(124142)[10]
                    
                  end InterpProver.interpolate_quick(124142)[10] (0.000000 sec.)
                  begin minimizing # of disjunctions(124146)[10]
                    input: false
                    output: false
                  end minimizing # of disjunctions(124146)[10] (0.000000 sec.)
                  
                end InterpProver.interpolate_simplify(124129)[9] (0.000000 sec.)
                
              end InterpProver.interpolate_check(124128)[8] (0.000000 sec.)
              output: false
            end InterpProver.interpolate_log(124127)[7] (0.000000 sec.)
            
          end InterpProver.interpolate_fresh(124126)[6] (0.000000 sec.)
          
        end InterpProver.interpolate(124125)[5] (0.000000 sec.)
        output:
          P[<fail_1450@137:0>](var352:bool) = false
      end ApronInterface.convex_hull_interpolate(124124)[4] (0.000000 sec.)
      Horn clauses:
        P[<h_1140@88:1>]((1 + <h_1140@91:0>):int,<h_1140@91:1>:int),
        (((1 + <h_1140@91:0>) <> 0) && (<h_1140@91:1> <> (1 + <h_1140@91:0>))) |- bot
        
         (<h_1140@88:1> = <h_1140@88:0>) |- P[<h_1140@88:1>](<h_1140@88:0>:int,
                                                             <h_1140@88:1>:int)
      lower bounds:
        P[<h_1140@88:1>](<h_1140@88:0>:int,<h_1140@88:1>:int) = (<h_1140@88:1> = <h_1140@88:0>)
      upper bounds:
        P[<h_1140@88:1>](var356:int,var357:int) = ((var357 = var356) || (var356 = 0))
      begin GenHcSolver.classify_pids(125047)[4]
        output:
          [<h_1140@88:1>]
      end GenHcSolver.classify_pids(125047)[4] (0.000000 sec.)
      lb:(<h_1140@88:1> = <h_1140@88:0>)
      nub:(not ((<h_1140@88:1> = <h_1140@88:0>) || (<h_1140@88:0> = 0)))
      begin ApronInterface.convex_hull_interpolate(125050)[4]
        lb:(<h_1140@88:1> = <h_1140@88:0>)
        nub:(not ((<h_1140@88:1> = <h_1140@88:0>) || (<h_1140@88:0> = 0)))
        lb':(<h_1140@88:1> = <h_1140@88:0>)
        nub':(not ((<h_1140@88:1> = <h_1140@88:0>) || (<h_1140@88:0> = 0)))
        begin InterpProver.interpolate(125051)[5]
          begin InterpProver.interpolate_fresh(125052)[6]
            begin InterpProver.interpolate_log(125053)[7]
              input1: (<h_1140@88:1> = <h_1140@88:0>)
              input2: (not ((<h_1140@88:1> = <h_1140@88:0>) || (<h_1140@88:0> = 0)))
              begin InterpProver.interpolate_check(125054)[8]
                begin InterpProver.interpolate_simplify(125055)[9]
                  begin InterpProver.interpolate_quick(125096)[10]
                    begin CsisatInterface.interpolate_csisat_wrap(125105)[11]
                      begin CsisatInterface.interpolate_csisat_post_process(125106)[12]
                        begin CsisatInterface.interpolate_csisat_log(125107)[13]
                          input1: v_sep_h_1140_sep_88_sep_0 = v_sep_h_1140_sep_88_sep_1
                          input2: (not 0 = v_sep_h_1140_sep_88_sep_0 & not v_sep_h_1140_sep_88_sep_0 = v_sep_h_1140_sep_88_sep_1)
                          begin CsisatInterface.interpolate_csisat_raw(125108)[14]
                            
                          end CsisatInterface.interpolate_csisat_raw(125108)[14] (0.000000 sec.)
                          output: v_sep_h_1140_sep_88_sep_0 = v_sep_h_1140_sep_88_sep_1
                          
                        end CsisatInterface.interpolate_csisat_log(125107)[13] (0.000000 sec.)
                        after simplification: v_sep_h_1140_sep_88_sep_0 = v_sep_h_1140_sep_88_sep_1
                        after dnf conversion: ((v_sep_h_1140_sep_88_sep_0 = v_sep_h_1140_sep_88_sep_1))
                        
                      end CsisatInterface.interpolate_csisat_post_process(125106)[12] (0.000000 sec.)
                      
                    end CsisatInterface.interpolate_csisat_wrap(125105)[11] (0.000000 sec.)
                    
                  end InterpProver.interpolate_quick(125096)[10] (0.000000 sec.)
                  
                end InterpProver.interpolate_simplify(125055)[9] (0.000000 sec.)
                
              end InterpProver.interpolate_check(125054)[8] (0.001999 sec.)
              output: (<h_1140@88:0> = <h_1140@88:1>)
            end InterpProver.interpolate_log(125053)[7] (0.001999 sec.)
            
          end InterpProver.interpolate_fresh(125052)[6] (0.001999 sec.)
          
        end InterpProver.interpolate(125051)[5] (0.001999 sec.)
        output:
          P[<h_1140@88:1>](<h_1140@88:0>:int,<h_1140@88:1>:int) = (<h_1140@88:0> = <h_1140@88:1>)
      end ApronInterface.convex_hull_interpolate(125050)[4] (0.001999 sec.)
      begin HcSolver.check_validity(125236)[4]
        input:
          P[<fail_1450@137:0>](<fail_1450@137:0>:bool)|- bot
          
          P[<<h_1140@88:3>@130:0>](<f_main_1445@134:0>:int,<f_main_1445@134:0>:int,<f_main_1445@134:2>:int),
          ((<f_main_1445@134:2> < <f_main_1445@134:0>) && <fail_1450@137:0>)
          |- P[<fail_1450@137:0>](<fail_1450@137:0>:bool)
          
          P[<h_1140@88:1>](<h_1140@88:0>:int,<h_1140@88:1>:int),
          P[<<h_1140@91:3>@128:0>]((-1 + <h_1140@88:0>):int,<h_1140@88:1>:int,<<h_1140@88:3>@130:0>:int),
          (<h_1140@88:0> <> 0)
          |- P[<<h_1140@88:3>@130:0>](<h_1140@88:0>:int,<h_1140@88:1>:int,
                                      <<h_1140@88:3>@130:0>:int)
          
          P[<h_1140@91:1>](<h_1140@91:0>:int,<h_1140@91:1>:int),
          P[<<<h_1140@91:2>@94:2>@126:0>](<h_1140@91:0>:int,<h_1140@91:1>:int,0:int,<h_1140@91:1>:int,<<h_1140@91:3>@128:0>:int),
          (<h_1140@91:0> = 0)
          |- P[<<h_1140@91:3>@128:0>](<h_1140@91:0>:int,<h_1140@91:1>:int,
                                      <<h_1140@91:3>@128:0>:int)
          
          P[<h_1140@88:1>]((1 + <h_1140@91:0>):int,<h_1140@91:1>:int),
          P[<h_1140@91:1>](<h_1140@91:0>:int,<h_1140@91:1>:int),
          P[<h_1140@88:1>](var285:int,var283:int),
          P[<<h_1140@91:2>@94:1>]((-1 + var285):int,var283:int,<<h_1140@91:2>@94:0>:int,<<h_1140@91:2>@94:1>:int),
          P[<h_1140@88:1>](var284:int,var282:int),
          P[<<<h_1140@88:2>@105:2>@116:0>](var284:int,var282:int,(1 + <<h_1140@91:2>@94:0>):int,(
                                           -1 + <<h_1140@91:2>@94:1>):int,<<<h_1140@91:2>@94:2>@126:0>:int),
          ((var285 <> 0) && ((var284 <> 0) && (((1 + <h_1140@91:0>) <> 0) && (<<h_1140@91:2>@94:1> > 0))))
          |- P[<<<h_1140@91:2>@94:2>@126:0>](<h_1140@91:0>:int,<h_1140@91:1>:int,
                                             <<h_1140@91:2>@94:0>:int,
                                             <<h_1140@91:2>@94:1>:int,
                                             <<<h_1140@91:2>@94:2>@126:0>:int)
          
          P[<<h_1140@88:2>@105:1>](var286:int,var286:int,<<h_1140@88:2>@105:0>:int,<<h_1140@88:2>@105:1>:int),
          P[<h_1140@88:1>](<h_1140@88:0>:int,<h_1140@88:1>:int),
          ((<<h_1140@88:2>@105:1> = 0) &&
           ((<h_1140@88:0> = <h_1140@88:1>) && (<<<h_1140@88:2>@105:2>@116:0> = <<h_1140@88:2>@105:0>)))
          |- P[<<<h_1140@88:2>@105:2>@116:0>](<h_1140@88:0>:int,<h_1140@88:1>:int,
                                              <<h_1140@88:2>@105:0>:int,
                                              <<h_1140@88:2>@105:1>:int,
                                              <<<h_1140@88:2>@105:2>@116:0>:int)
          
          P[<h_1140@88:1>](<h_1140@88:0>:int,<h_1140@88:1>:int),
          P[<h_1140@88:1>](var288:int,var287:int),
          P[<<h_1140@91:2>@94:1>]((-1 + var288):int,var287:int,(-1 + <<h_1140@88:2>@105:0>):int,(
                                  1 + <<h_1140@88:2>@105:1>):int),
          ((var288 <> 0) && ((<h_1140@88:0> <> 0) && ((1 + <<h_1140@88:2>@105:1>) > 0)))
          |- P[<<h_1140@88:2>@105:1>](<h_1140@88:0>:int,<h_1140@88:1>:int,
                                      <<h_1140@88:2>@105:0>:int,<<h_1140@88:2>@105:1>:int)
          
          P[<h_1140@91:1>](<h_1140@91:0>:int,<h_1140@91:1>:int),
          ((<h_1140@91:0> = 0) && ((<<h_1140@91:2>@94:0> = 0) && (<<h_1140@91:2>@94:1> = <h_1140@91:1>)))
          |- P[<<h_1140@91:2>@94:1>](<h_1140@91:0>:int,<h_1140@91:1>:int,
                                     <<h_1140@91:2>@94:0>:int,<<h_1140@91:2>@94:1>:int)
          
          P[<h_1140@88:1>]((1 + <h_1140@91:0>):int,<h_1140@91:1>:int), (
          (1 + <h_1140@91:0>) <> 0) |- P[<h_1140@91:1>](<h_1140@91:0>:int,
                                                        <h_1140@91:1>:int)
          
           (<h_1140@88:1> = <h_1140@88:0>) |- P[<h_1140@88:1>](<h_1140@88:0>:int,
                                                               <h_1140@88:1>:int)
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        
      end HcSolver.check_validity(125236)[4] (0.015998 sec.)
      solution:
        P[<fail_1450@137:0>](var352:bool) = false
        P[<<h_1140@88:3>@130:0>](<h_1140@91:0>:int,<h_1140@91:1>:int,<<h_1140@91:3>@128:0>:int) =
        (((<h_1140@91:0> <= <<h_1140@91:3>@128:0>) && (<h_1140@91:1> <= <h_1140@91:0>)) ||
         (<h_1140@91:1> <= <<h_1140@91:3>@128:0>))
        P[<<h_1140@91:3>@128:0>](<h_1140@91:0>:int,<h_1140@91:1>:int,<<h_1140@91:3>@128:0>:int) =
        (((<h_1140@91:0> <= <<h_1140@91:3>@128:0>) && (<h_1140@91:1> <= <h_1140@91:0>)) ||
         (<h_1140@91:1> <= <<h_1140@91:3>@128:0>))
        P[<<<h_1140@91:2>@94:2>@126:0>](<h_1140@88:0>:int,<h_1140@88:1>:int,<<h_1140@88:2>@105:0>:int,<<h_1140@88:2>@105:1>:int,<<<h_1140@88:2>@105:2>@116:0>:int) =
        (1 <= <<<h_1140@88:2>@105:2>@116:0>)
        P[<<<h_1140@88:2>@105:2>@116:0>](<h_1140@88:0>:int,<h_1140@88:1>:int,<<h_1140@88:2>@105:0>:int,<<h_1140@88:2>@105:1>:int,<<<h_1140@88:2>@105:2>@116:0>:int) =
        (1 <= <<<h_1140@88:2>@105:2>@116:0>)
        P[<<h_1140@88:2>@105:1>](<h_1140@91:0>:int,<h_1140@91:1>:int,<<h_1140@91:2>@94:0>:int,<<h_1140@91:2>@94:1>:int) =
        (((0 <= <<h_1140@91:2>@94:0>) && ((1 + <h_1140@91:0>) = <h_1140@91:1>)) || (1 <= <<h_1140@91:2>@94:0>))
        P[<<h_1140@91:2>@94:1>](<h_1140@91:0>:int,<h_1140@91:1>:int,<<h_1140@91:2>@94:0>:int,<<h_1140@91:2>@94:1>:int) =
        (((0 <= <<h_1140@91:2>@94:0>) && ((1 + <h_1140@91:0>) = <h_1140@91:1>)) || (1 <= <<h_1140@91:2>@94:0>))
        P[<h_1140@91:1>](<h_1140@91:0>:int,<h_1140@91:1>:int) = (<h_1140@91:1> = (1 + <h_1140@91:0>))
        P[<h_1140@88:1>](<h_1140@88:0>:int,<h_1140@88:1>:int) = (<h_1140@88:0> = <h_1140@88:1>)
    end GenHcSolver.solve(70586)[3] (0.343948 sec.)
    begin GenHcSolver.solve(128382)[3]
      Horn clauses:
        P[<fail_1450@137:0>](<fail_1450@137:0>:bool)|- bot
        
        P[<<h_1140@88:3>@130:0>](<f_main_1445@134:0>:int,<f_main_1445@134:0>:int,<f_main_1445@134:2>:int),
        ((<f_main_1445@134:2> < <f_main_1445@134:0>) && <fail_1450@137:0>)
        |- P[<fail_1450@137:0>](<fail_1450@137:0>:bool)
        
        P[<h_1140@88:1>](<h_1140@88:0>:int,<h_1140@88:1>:int),
        P[<<h_1140@91:3>@128:0>]((-1 + <h_1140@88:0>):int,<h_1140@88:1>:int,<<h_1140@88:3>@130:0>:int),
        (<h_1140@88:0> <> 0) |- P[<<h_1140@88:3>@130:0>](<h_1140@88:0>:int,
                                                         <h_1140@88:1>:int,
                                                         <<h_1140@88:3>@130:0>:int)
        
        P[<h_1140@91:1>](<h_1140@91:0>:int,<h_1140@91:1>:int),
        P[<<<h_1140@91:2>@94:2>@126:0>](<h_1140@91:0>:int,<h_1140@91:1>:int,0:int,<h_1140@91:1>:int,<<h_1140@91:3>@128:0>:int),
        (<h_1140@91:0> = 0) |- P[<<h_1140@91:3>@128:0>](<h_1140@91:0>:int,
                                                        <h_1140@91:1>:int,
                                                        <<h_1140@91:3>@128:0>:int)
        
        P[<h_1140@88:1>]((1 + <h_1140@91:0>):int,<h_1140@91:1>:int),
        P[<h_1140@91:1>](<h_1140@91:0>:int,<h_1140@91:1>:int),
        P[<h_1140@88:1>](var285:int,var283:int),
        P[<<h_1140@91:2>@94:1>]((-1 + var285):int,var283:int,<<h_1140@91:2>@94:0>:int,<<h_1140@91:2>@94:1>:int),
        P[<h_1140@88:1>](var284:int,var282:int),
        P[<<<h_1140@88:2>@105:2>@116:0>](var284:int,var282:int,(1 + <<h_1140@91:2>@94:0>):int,(
                                         -1 + <<h_1140@91:2>@94:1>):int,<<<h_1140@91:2>@94:2>@126:0>:int),
        ((var285 <> 0) && ((var284 <> 0) && (((1 + <h_1140@91:0>) <> 0) && (<<h_1140@91:2>@94:1> > 0))))
        |- P[<<<h_1140@91:2>@94:2>@126:0>](<h_1140@91:0>:int,<h_1140@91:1>:int,
                                           <<h_1140@91:2>@94:0>:int,<<h_1140@91:2>@94:1>:int,
                                           <<<h_1140@91:2>@94:2>@126:0>:int)
        
        P[<<h_1140@88:2>@105:1>](var286:int,var286:int,<<h_1140@88:2>@105:0>:int,<<h_1140@88:2>@105:1>:int),
        P[<h_1140@88:1>](<h_1140@88:0>:int,<h_1140@88:1>:int),
        ((<<h_1140@88:2>@105:1> = 0) &&
         ((<h_1140@88:0> = <h_1140@88:1>) && (<<<h_1140@88:2>@105:2>@116:0> = <<h_1140@88:2>@105:0>)))
        |- P[<<<h_1140@88:2>@105:2>@116:0>](<h_1140@88:0>:int,<h_1140@88:1>:int,
                                            <<h_1140@88:2>@105:0>:int,
                                            <<h_1140@88:2>@105:1>:int,
                                            <<<h_1140@88:2>@105:2>@116:0>:int)
        
        P[<h_1140@88:1>](<h_1140@88:0>:int,<h_1140@88:1>:int),
        P[<h_1140@88:1>](var288:int,var287:int),
        P[<<h_1140@91:2>@94:1>]((-1 + var288):int,var287:int,(-1 + <<h_1140@88:2>@105:0>):int,(
                                1 + <<h_1140@88:2>@105:1>):int),
        ((var288 <> 0) && ((<h_1140@88:0> <> 0) && ((1 + <<h_1140@88:2>@105:1>) > 0)))
        |- P[<<h_1140@88:2>@105:1>](<h_1140@88:0>:int,<h_1140@88:1>:int,
                                    <<h_1140@88:2>@105:0>:int,<<h_1140@88:2>@105:1>:int)
        
        P[<h_1140@91:1>](<h_1140@91:0>:int,<h_1140@91:1>:int),
        ((<h_1140@91:0> = 0) && ((<<h_1140@91:2>@94:0> = 0) && (<<h_1140@91:2>@94:1> = <h_1140@91:1>)))
        |- P[<<h_1140@91:2>@94:1>](<h_1140@91:0>:int,<h_1140@91:1>:int,
                                   <<h_1140@91:2>@94:0>:int,<<h_1140@91:2>@94:1>:int)
        
        P[<h_1140@88:1>]((1 + <h_1140@91:0>):int,<h_1140@91:1>:int), (
        (1 + <h_1140@91:0>) <> 0) |- P[<h_1140@91:1>](<h_1140@91:0>:int,
                                                      <h_1140@91:1>:int)
        
         (<h_1140@88:1> = <h_1140@88:0>) |- P[<h_1140@88:1>](<h_1140@88:0>:int,
                                                             <h_1140@88:1>:int)
      lower bounds:
        P[<h_1140@88:1>](<h_1140@88:0>:int,<h_1140@88:1>:int) = (<h_1140@88:1> = <h_1140@88:0>)
        P[<h_1140@91:1>](<h_1140@91:0>:int,<h_1140@91:1>:int) =
        (((1 + <h_1140@91:0>) <> 0) && (<h_1140@91:1> = (1 + <h_1140@91:0>)))
        P[<<h_1140@91:2>@94:1>](<h_1140@91:0>:int,<h_1140@91:1>:int,<<h_1140@91:2>@94:0>:int,<<h_1140@91:2>@94:1>:int) =
        ((<h_1140@91:0> = 0) &&
         ((<<h_1140@91:2>@94:0> = 0) &&
          ((<h_1140@91:1> = (1 + <h_1140@91:0>)) && (<<h_1140@91:2>@94:1> = <h_1140@91:1>))))
        P[<<h_1140@88:2>@105:1>](<h_1140@88:0>:int,<h_1140@88:1>:int,<<h_1140@88:2>@105:0>:int,<<h_1140@88:2>@105:1>:int) =
        ((<<h_1140@88:2>@105:1> = 0) &&
         ((<<h_1140@88:2>@105:0> = 1) && ((<h_1140@88:1> = <h_1140@88:0>) && (<h_1140@88:0> <> 0))))
        P[<<<h_1140@88:2>@105:2>@116:0>](<h_1140@88:0>:int,<h_1140@88:1>:int,<<h_1140@88:2>@105:0>:int,<<h_1140@88:2>@105:1>:int,<<<h_1140@88:2>@105:2>@116:0>:int) =
        ((<<h_1140@88:2>@105:1> = 0) &&
         ((<<h_1140@88:2>@105:0> = 1) &&
          ((<<<h_1140@88:2>@105:2>@116:0> = <<h_1140@88:2>@105:0>) && (<h_1140@88:1> = <h_1140@88:0>))))
        P[<<<h_1140@91:2>@94:2>@126:0>](<h_1140@91:0>:int,<h_1140@91:1>:int,<<h_1140@91:2>@94:0>:int,<<h_1140@91:2>@94:1>:int,<<<h_1140@91:2>@94:2>@126:0>:int) =
        ((<<h_1140@91:2>@94:1> = 1) &&
         ((<<h_1140@91:2>@94:0> = 0) &&
          (((1 + <h_1140@91:0>) <> 0) &&
           ((<h_1140@91:1> = (1 + <h_1140@91:0>)) && (<<<h_1140@91:2>@94:2>@126:0> = (1 + <<h_1140@91:2>@94:0>))))))
        P[<<h_1140@91:3>@128:0>](<h_1140@91:0>:int,<h_1140@91:1>:int,<<h_1140@91:3>@128:0>:int) =
        ((<h_1140@91:0> = 0) && ((<h_1140@91:1> = 1) && (<<h_1140@91:3>@128:0> = 1)))
        P[<<h_1140@88:3>@130:0>](<h_1140@88:0>:int,<h_1140@88:1>:int,<<h_1140@88:3>@130:0>:int) =
        ((<h_1140@88:0> = 1) && ((<h_1140@88:1> = 1) && (<<h_1140@88:3>@130:0> = 1)))
        P[<fail_1450@137:0>](<fail_1450@137:0>:bool) = false
      upper bounds:
        P[<<h_1140@88:3>@130:0>](var365:int,var366:int,var367:int) = ((var367 >= var365) || (var365 <> var366))
        P[<<h_1140@91:3>@128:0>](var360:int,var361:int,var362:int) =
        ((var361 = 0) || ((var362 >= var361) || ((1 + var360) <> var361)))
      begin GenHcSolver.classify_pids(142266)[4]
        output:
          [<<h_1140@91:3>@128:0>;<<h_1140@88:3>@130:0>]
      end GenHcSolver.classify_pids(142266)[4] (0.001000 sec.)
      begin ApronInterface.convex_hull_interpolate(142341)[4]
        lb:(((<h_1140@91:0> = 0) && ((<h_1140@91:1> = 1) && (<<h_1140@91:3>@128:0> = 1))) ||
            ((<h_1140@91:0> = 1) && ((<h_1140@91:1> = 1) && (<<h_1140@91:3>@128:0> = 1))))
        nub:((not
                ((<h_1140@91:1> = 0) ||
                 ((<<h_1140@91:3>@128:0> >= <h_1140@91:1>) || ((1 + <h_1140@91:0>) <> <h_1140@91:1>)))) ||
             (not ((<<h_1140@91:3>@128:0> >= <h_1140@91:0>) || (<h_1140@91:0> <> <h_1140@91:1>))))
        begin ExtFormula.Formula.case_analysis_boolean(142398)[5]
          ts: (((<h_1140@91:1> = 1) && (<<h_1140@91:3>@128:0> = 1)) && ((<h_1140@91:0> = 0) || (<h_1140@91:0> = 1)))
          
        end ExtFormula.Formula.case_analysis_boolean(142398)[5] (0.000000 sec.)
        begin ExtFormula.Formula.case_analysis_boolean(142465)[5]
          ts: (((<h_1140@91:1> <> 0) &&
                ((<<h_1140@91:3>@128:0> < <h_1140@91:1>) && ((1 + <h_1140@91:0>) = <h_1140@91:1>))) ||
               ((<<h_1140@91:3>@128:0> < <h_1140@91:0>) && (<h_1140@91:0> = <h_1140@91:1>)))
          
        end ExtFormula.Formula.case_analysis_boolean(142465)[5] (0.000000 sec.)
        lb':(((-1 + <<h_1140@91:3>@128:0>) = 0) &&
             (((-1 + <h_1140@91:1>) = 0) && (((1 + (-1 * <h_1140@91:0>)) >= 0) && (<h_1140@91:0> >= 0))))
        nub':(((<h_1140@91:1> + (-1 * <h_1140@91:0>)) >= 0) &&
              ((((-1 + (-1 * <<h_1140@91:3>@128:0>)) + <h_1140@91:1>) >= 0) &&
               (((1 + (-1 * <h_1140@91:1>)) + <h_1140@91:0>) >= 0)))
        begin InterpProver.interpolate(142478)[5]
          begin InterpProver.interpolate_fresh(142479)[6]
            begin InterpProver.interpolate_log(142480)[7]
              input1: (((-1 + <<h_1140@91:3>@128:0>) = 0) &&
                       (((-1 + <h_1140@91:1>) = 0) && (((1 + (-1 * <h_1140@91:0>)) >= 0) && (<h_1140@91:0> >= 0))))
              input2: (((<h_1140@91:1> + (-1 * <h_1140@91:0>)) >= 0) &&
                       ((((-1 + (-1 * <<h_1140@91:3>@128:0>)) + <h_1140@91:1>) >= 0) &&
                        (((1 + (-1 * <h_1140@91:1>)) + <h_1140@91:0>) >= 0)))
              begin InterpProver.interpolate_check(142481)[8]
                begin InterpProver.interpolate_simplify(142482)[9]
                  begin InterpProver.interpolate_quick(142659)[10]
                    begin CsisatInterface.interpolate_csisat_wrap(142668)[11]
                      begin CsisatInterface.interpolate_csisat_post_process(142669)[12]
                        begin CsisatInterface.interpolate_csisat_log(142670)[13]
                          input1: (1 = v_sep_h_1140_sep_91_sep_1 & 1 = v_sep_h_1140_sep_91_sep_3_sep_128_sep_0 & 0 <= v_sep_h_1140_sep_91_sep_0 & v_sep_h_1140_sep_91_sep_0 <= 1)
                          input2: (v_sep_h_1140_sep_91_sep_0 <= v_sep_h_1140_sep_91_sep_1 & v_sep_h_1140_sep_91_sep_1 <= (1 + v_sep_h_1140_sep_91_sep_0) & (1 + v_sep_h_1140_sep_91_sep_3_sep_128_sep_0) <= v_sep_h_1140_sep_91_sep_1)
                          begin CsisatInterface.interpolate_csisat_raw(142671)[14]
                            
                          end CsisatInterface.interpolate_csisat_raw(142671)[14] (0.000000 sec.)
                          output: (-2*v_sep_h_1140_sep_91_sep_3_sep_128_sep_0 + 2*v_sep_h_1140_sep_91_sep_1) <= 0
                          
                        end CsisatInterface.interpolate_csisat_log(142670)[13] (0.000000 sec.)
                        after simplification: (-2*v_sep_h_1140_sep_91_sep_3_sep_128_sep_0 + 2*v_sep_h_1140_sep_91_sep_1) <= 0
                        after dnf conversion: (((-2*v_sep_h_1140_sep_91_sep_3_sep_128_sep_0 + 2*v_sep_h_1140_sep_91_sep_1) <= 0))
                        
                      end CsisatInterface.interpolate_csisat_post_process(142669)[12] (0.000000 sec.)
                      
                    end CsisatInterface.interpolate_csisat_wrap(142668)[11] (0.000000 sec.)
                    
                  end InterpProver.interpolate_quick(142659)[10] (0.000999 sec.)
                  
                end InterpProver.interpolate_simplify(142482)[9] (0.001999 sec.)
                
              end InterpProver.interpolate_check(142481)[8] (0.002999 sec.)
              output: (<h_1140@91:1> <= <<h_1140@91:3>@128:0>)
            end InterpProver.interpolate_log(142480)[7] (0.002999 sec.)
            
          end InterpProver.interpolate_fresh(142479)[6] (0.003999 sec.)
          
        end InterpProver.interpolate(142478)[5] (0.003999 sec.)
        output:
          P[<<h_1140@91:3>@128:0>](<h_1140@91:0>:int,<h_1140@91:1>:int,<<h_1140@91:3>@128:0>:int) =
          (<h_1140@91:1> <= <<h_1140@91:3>@128:0>)
          P[<<h_1140@88:3>@130:0>](<h_1140@91:0>:int,<h_1140@91:1>:int,<<h_1140@91:3>@128:0>:int) =
          (<h_1140@91:1> <= <<h_1140@91:3>@128:0>)
      end ApronInterface.convex_hull_interpolate(142341)[4] (0.003999 sec.)
      Horn clauses:
        P[<fail_1450@137:0>](<fail_1450@137:0>:bool)|- bot
        
        P[<h_1140@91:1>](0:int,<h_1140@91:1>:int),
        P[<<<h_1140@91:2>@94:2>@126:0>](0:int,<h_1140@91:1>:int,0:int,<h_1140@91:1>:int,<<h_1140@91:3>@128:0>:int),
        (<h_1140@91:1> > <<h_1140@91:3>@128:0>) |- bot
        
        P[<h_1140@88:1>]((1 + <h_1140@91:0>):int,<h_1140@91:1>:int),
        P[<h_1140@91:1>](<h_1140@91:0>:int,<h_1140@91:1>:int),
        P[<h_1140@88:1>](var285:int,var283:int),
        P[<<h_1140@91:2>@94:1>]((-1 + var285):int,var283:int,<<h_1140@91:2>@94:0>:int,<<h_1140@91:2>@94:1>:int),
        P[<h_1140@88:1>](var284:int,var282:int),
        P[<<<h_1140@88:2>@105:2>@116:0>](var284:int,var282:int,(1 + <<h_1140@91:2>@94:0>):int,(
                                         -1 + <<h_1140@91:2>@94:1>):int,<<<h_1140@91:2>@94:2>@126:0>:int),
        ((var285 <> 0) && ((var284 <> 0) && (((1 + <h_1140@91:0>) <> 0) && (<<h_1140@91:2>@94:1> > 0))))
        |- P[<<<h_1140@91:2>@94:2>@126:0>](<h_1140@91:0>:int,<h_1140@91:1>:int,
                                           <<h_1140@91:2>@94:0>:int,<<h_1140@91:2>@94:1>:int,
                                           <<<h_1140@91:2>@94:2>@126:0>:int)
        
        P[<<h_1140@88:2>@105:1>](var286:int,var286:int,<<h_1140@88:2>@105:0>:int,<<h_1140@88:2>@105:1>:int),
        P[<h_1140@88:1>](<h_1140@88:0>:int,<h_1140@88:1>:int),
        ((<<h_1140@88:2>@105:1> = 0) &&
         ((<h_1140@88:0> = <h_1140@88:1>) && (<<<h_1140@88:2>@105:2>@116:0> = <<h_1140@88:2>@105:0>)))
        |- P[<<<h_1140@88:2>@105:2>@116:0>](<h_1140@88:0>:int,<h_1140@88:1>:int,
                                            <<h_1140@88:2>@105:0>:int,
                                            <<h_1140@88:2>@105:1>:int,
                                            <<<h_1140@88:2>@105:2>@116:0>:int)
        
        P[<h_1140@88:1>](<h_1140@88:0>:int,<h_1140@88:1>:int),
        P[<h_1140@88:1>](var288:int,var287:int),
        P[<<h_1140@91:2>@94:1>]((-1 + var288):int,var287:int,(-1 + <<h_1140@88:2>@105:0>):int,(
                                1 + <<h_1140@88:2>@105:1>):int),
        ((var288 <> 0) && ((<h_1140@88:0> <> 0) && ((1 + <<h_1140@88:2>@105:1>) > 0)))
        |- P[<<h_1140@88:2>@105:1>](<h_1140@88:0>:int,<h_1140@88:1>:int,
                                    <<h_1140@88:2>@105:0>:int,<<h_1140@88:2>@105:1>:int)
        
        P[<h_1140@91:1>](<h_1140@91:0>:int,<h_1140@91:1>:int),
        ((<h_1140@91:0> = 0) && ((<<h_1140@91:2>@94:0> = 0) && (<<h_1140@91:2>@94:1> = <h_1140@91:1>)))
        |- P[<<h_1140@91:2>@94:1>](<h_1140@91:0>:int,<h_1140@91:1>:int,
                                   <<h_1140@91:2>@94:0>:int,<<h_1140@91:2>@94:1>:int)
        
        P[<h_1140@88:1>]((1 + <h_1140@91:0>):int,<h_1140@91:1>:int), (
        (1 + <h_1140@91:0>) <> 0) |- P[<h_1140@91:1>](<h_1140@91:0>:int,
                                                      <h_1140@91:1>:int)
        
         (<h_1140@88:1> = <h_1140@88:0>) |- P[<h_1140@88:1>](<h_1140@88:0>:int,
                                                             <h_1140@88:1>:int)
      lower bounds:
        P[<h_1140@88:1>](<h_1140@88:0>:int,<h_1140@88:1>:int) = (<h_1140@88:1> = <h_1140@88:0>)
        P[<fail_1450@137:0>](var371:bool) = false
        P[<h_1140@91:1>](<h_1140@91:0>:int,<h_1140@91:1>:int) =
        (((1 + <h_1140@91:0>) <> 0) && (<h_1140@91:1> = (1 + <h_1140@91:0>)))
        P[<<h_1140@91:2>@94:1>](<h_1140@91:0>:int,<h_1140@91:1>:int,<<h_1140@91:2>@94:0>:int,<<h_1140@91:2>@94:1>:int) =
        ((<h_1140@91:0> = 0) &&
         ((<<h_1140@91:2>@94:0> = 0) &&
          ((<h_1140@91:1> = (1 + <h_1140@91:0>)) && (<<h_1140@91:2>@94:1> = <h_1140@91:1>))))
        P[<<h_1140@88:2>@105:1>](<h_1140@88:0>:int,<h_1140@88:1>:int,<<h_1140@88:2>@105:0>:int,<<h_1140@88:2>@105:1>:int) =
        ((<<h_1140@88:2>@105:1> = 0) &&
         ((<<h_1140@88:2>@105:0> = 1) && ((<h_1140@88:1> = <h_1140@88:0>) && (<h_1140@88:0> <> 0))))
        P[<<<h_1140@88:2>@105:2>@116:0>](<h_1140@88:0>:int,<h_1140@88:1>:int,<<h_1140@88:2>@105:0>:int,<<h_1140@88:2>@105:1>:int,<<<h_1140@88:2>@105:2>@116:0>:int) =
        ((<<h_1140@88:2>@105:1> = 0) &&
         ((<<h_1140@88:2>@105:0> = 1) &&
          ((<<<h_1140@88:2>@105:2>@116:0> = <<h_1140@88:2>@105:0>) && (<h_1140@88:1> = <h_1140@88:0>))))
        P[<<<h_1140@91:2>@94:2>@126:0>](<h_1140@91:0>:int,<h_1140@91:1>:int,<<h_1140@91:2>@94:0>:int,<<h_1140@91:2>@94:1>:int,<<<h_1140@91:2>@94:2>@126:0>:int) =
        ((<<h_1140@91:2>@94:1> = 1) &&
         ((<<h_1140@91:2>@94:0> = 0) &&
          (((1 + <h_1140@91:0>) <> 0) &&
           ((<h_1140@91:1> = (1 + <h_1140@91:0>)) && (<<<h_1140@91:2>@94:2>@126:0> = (1 + <<h_1140@91:2>@94:0>))))))
      upper bounds:
        P[<<<h_1140@91:2>@94:2>@126:0>](var382:int,var383:int,var384:int,var385:int,var386:int) =
        ((var382 <> 0) || ((var383 <> 1) || ((var384 <> 0) || ((var385 <> 1) || (1 <= var386)))))
        P[<<<h_1140@88:2>@105:2>@116:0>](var375:int,var376:int,var377:int,var378:int,var379:int) =
        ((var377 <> 1) || ((var378 <> 0) || ((var375 = 0) || ((1 <= var379) || (var375 <> var376)))))
      begin GenHcSolver.classify_pids(160438)[4]
        output:
          [<<<h_1140@88:2>@105:2>@116:0>;<<<h_1140@91:2>@94:2>@126:0>]
      end GenHcSolver.classify_pids(160438)[4] (0.002000 sec.)
      begin ApronInterface.convex_hull_interpolate(160697)[4]
        lb:(((<<h_1140@88:2>@105:1> = 0) &&
             ((<<h_1140@88:2>@105:0> = 1) &&
              ((<<<h_1140@88:2>@105:2>@116:0> = <<h_1140@88:2>@105:0>) && (<h_1140@88:1> = <h_1140@88:0>)))) ||
            ((<<h_1140@88:2>@105:1> = 1) &&
             ((<<h_1140@88:2>@105:0> = 0) &&
              (((1 + <h_1140@88:0>) <> 0) &&
               ((<h_1140@88:1> = (1 + <h_1140@88:0>)) && (<<<h_1140@88:2>@105:2>@116:0> = (1 + <<h_1140@88:2>@105:0>)))))))
        nub:((not
                ((<<h_1140@88:2>@105:0> <> 1) ||
                 ((<<h_1140@88:2>@105:1> <> 0) ||
                  ((<h_1140@88:0> = 0) || ((1 <= <<<h_1140@88:2>@105:2>@116:0>) || (<h_1140@88:0> <> <h_1140@88:1>)))))) ||
             (not
                ((<h_1140@88:0> <> 0) ||
                 ((<h_1140@88:1> <> 1) ||
                  ((<<h_1140@88:2>@105:0> <> 0) ||
                   ((<<h_1140@88:2>@105:1> <> 1) || (1 <= <<<h_1140@88:2>@105:2>@116:0>)))))))
        begin ExtFormula.Formula.case_analysis_boolean(160834)[5]
          ts: (((<<h_1140@88:2>@105:1> = 0) &&
                ((<<h_1140@88:2>@105:0> = 1) &&
                 ((<<<h_1140@88:2>@105:2>@116:0> = <<h_1140@88:2>@105:0>) && (<h_1140@88:1> = <h_1140@88:0>)))) ||
               ((<<h_1140@88:2>@105:1> = 1) &&
                ((<<h_1140@88:2>@105:0> = 0) &&
                 (((1 + <h_1140@88:0>) <> 0) &&
                  ((<h_1140@88:1> = (1 + <h_1140@88:0>)) &&
                   (<<<h_1140@88:2>@105:2>@116:0> = (1 + <<h_1140@88:2>@105:0>)))))))
          
        end ExtFormula.Formula.case_analysis_boolean(160834)[5] (0.000999 sec.)
        begin ExtFormula.Formula.case_analysis_boolean(161037)[5]
          ts: ((1 > <<<h_1140@88:2>@105:2>@116:0>) &&
               (((<<h_1140@88:2>@105:0> = 1) &&
                 ((<<h_1140@88:2>@105:1> = 0) && ((<h_1140@88:0> <> 0) && (<h_1140@88:0> = <h_1140@88:1>)))) ||
                ((<h_1140@88:0> = 0) &&
                 ((<h_1140@88:1> = 1) && ((<<h_1140@88:2>@105:0> = 0) && (<<h_1140@88:2>@105:1> = 1))))))
          
        end ExtFormula.Formula.case_analysis_boolean(161037)[5] (0.000000 sec.)
        lb':(((((-1 + <<h_1140@88:2>@105:0>) + <h_1140@88:1>) + (-1 * <h_1140@88:0>)) = 0) &&
             (((-1 + <<<h_1140@88:2>@105:2>@116:0>) = 0) &&
              ((((<<h_1140@88:2>@105:1> + (-1 * <h_1140@88:1>)) + <h_1140@88:0>) = 0) &&
               (((<h_1140@88:1> + (-1 * <h_1140@88:0>)) >= 0) && (((1 + (-1 * <h_1140@88:1>)) + <h_1140@88:0>) >= 0)))))
        nub':(((((-1 + <<h_1140@88:2>@105:0>) + <h_1140@88:1>) + (-1 * <h_1140@88:0>)) = 0) &&
              ((((<<h_1140@88:2>@105:1> + (-1 * <h_1140@88:1>)) + <h_1140@88:0>) = 0) &&
               (((<h_1140@88:1> + (-1 * <h_1140@88:0>)) >= 0) &&
                (((-1 * <<<h_1140@88:2>@105:2>@116:0>) >= 0) && (((1 + (-1 * <h_1140@88:1>)) + <h_1140@88:0>) >= 0)))))
        begin InterpProver.interpolate(161056)[5]
          begin InterpProver.interpolate_fresh(161057)[6]
            begin InterpProver.interpolate_log(161058)[7]
              input1: (((((-1 + <<h_1140@88:2>@105:0>) + <h_1140@88:1>) + (-1 * <h_1140@88:0>)) = 0) &&
                       (((-1 + <<<h_1140@88:2>@105:2>@116:0>) = 0) &&
                        ((((<<h_1140@88:2>@105:1> + (-1 * <h_1140@88:1>)) + <h_1140@88:0>) = 0) &&
                         (((<h_1140@88:1> + (-1 * <h_1140@88:0>)) >= 0) &&
                          (((1 + (-1 * <h_1140@88:1>)) + <h_1140@88:0>) >= 0)))))
              input2: (((((-1 + <<h_1140@88:2>@105:0>) + <h_1140@88:1>) + (-1 * <h_1140@88:0>)) = 0) &&
                       ((((<<h_1140@88:2>@105:1> + (-1 * <h_1140@88:1>)) + <h_1140@88:0>) = 0) &&
                        (((<h_1140@88:1> + (-1 * <h_1140@88:0>)) >= 0) &&
                         (((-1 * <<<h_1140@88:2>@105:2>@116:0>) >= 0) &&
                          (((1 + (-1 * <h_1140@88:1>)) + <h_1140@88:0>) >= 0)))))
              begin InterpProver.interpolate_check(161059)[8]
                begin InterpProver.interpolate_simplify(161060)[9]
                  begin InterpProver.interpolate_quick(161468)[10]
                    begin CsisatInterface.interpolate_csisat_wrap(161477)[11]
                      begin CsisatInterface.interpolate_csisat_post_process(161478)[12]
                        begin CsisatInterface.interpolate_csisat_log(161479)[13]
                          input1: (1 = v_sep_h_1140_sep_88_sep_2_sep_105_sep_2_sep_116_sep_0 & v_sep_h_1140_sep_88_sep_1 = (v_sep_h_1140_sep_88_sep_0 + v_sep_h_1140_sep_88_sep_2_sep_105_sep_1) & (1 + v_sep_h_1140_sep_88_sep_0) = (v_sep_h_1140_sep_88_sep_1 + v_sep_h_1140_sep_88_sep_2_sep_105_sep_0) & v_sep_h_1140_sep_88_sep_0 <= v_sep_h_1140_sep_88_sep_1 & v_sep_h_1140_sep_88_sep_1 <= (1 + v_sep_h_1140_sep_88_sep_0))
                          input2: (v_sep_h_1140_sep_88_sep_1 = (v_sep_h_1140_sep_88_sep_0 + v_sep_h_1140_sep_88_sep_2_sep_105_sep_1) & (1 + v_sep_h_1140_sep_88_sep_0) = (v_sep_h_1140_sep_88_sep_1 + v_sep_h_1140_sep_88_sep_2_sep_105_sep_0) & v_sep_h_1140_sep_88_sep_0 <= v_sep_h_1140_sep_88_sep_1 & v_sep_h_1140_sep_88_sep_1 <= (1 + v_sep_h_1140_sep_88_sep_0) & v_sep_h_1140_sep_88_sep_2_sep_105_sep_2_sep_116_sep_0 <= 0)
                          begin CsisatInterface.interpolate_csisat_raw(161480)[14]
                            
                          end CsisatInterface.interpolate_csisat_raw(161480)[14] (0.000000 sec.)
                          output: -2*v_sep_h_1140_sep_88_sep_2_sep_105_sep_2_sep_116_sep_0 <= -2
                          
                        end CsisatInterface.interpolate_csisat_log(161479)[13] (0.000000 sec.)
                        after simplification: -2*v_sep_h_1140_sep_88_sep_2_sep_105_sep_2_sep_116_sep_0 <= -2
                        after dnf conversion: ((-2*v_sep_h_1140_sep_88_sep_2_sep_105_sep_2_sep_116_sep_0 <= -2))
                        
                      end CsisatInterface.interpolate_csisat_post_process(161478)[12] (0.000000 sec.)
                      
                    end CsisatInterface.interpolate_csisat_wrap(161477)[11] (0.000000 sec.)
                    
                  end InterpProver.interpolate_quick(161468)[10] (0.001000 sec.)
                  
                end InterpProver.interpolate_simplify(161060)[9] (0.003000 sec.)
                
              end InterpProver.interpolate_check(161059)[8] (0.004999 sec.)
              output: (1 <= <<<h_1140@88:2>@105:2>@116:0>)
            end InterpProver.interpolate_log(161058)[7] (0.004999 sec.)
            
          end InterpProver.interpolate_fresh(161057)[6] (0.004999 sec.)
          
        end InterpProver.interpolate(161056)[5] (0.004999 sec.)
        output:
          P[<<<h_1140@88:2>@105:2>@116:0>](<h_1140@88:0>:int,<h_1140@88:1>:int,<<h_1140@88:2>@105:0>:int,<<h_1140@88:2>@105:1>:int,<<<h_1140@88:2>@105:2>@116:0>:int) =
          (1 <= <<<h_1140@88:2>@105:2>@116:0>)
          P[<<<h_1140@91:2>@94:2>@126:0>](<h_1140@88:0>:int,<h_1140@88:1>:int,<<h_1140@88:2>@105:0>:int,<<h_1140@88:2>@105:1>:int,<<<h_1140@88:2>@105:2>@116:0>:int) =
          (1 <= <<<h_1140@88:2>@105:2>@116:0>)
      end ApronInterface.convex_hull_interpolate(160697)[4] (0.009998 sec.)
      Horn clauses:
        P[<fail_1450@137:0>](<fail_1450@137:0>:bool)|- bot
        
        P[<h_1140@91:1>](0:int,<h_1140@91:1>:int), (1 < <h_1140@91:1>) |- bot
        
        P[<<h_1140@88:2>@105:1>](var286:int,var286:int,<<<h_1140@88:2>@105:2>@116:0>:int,0:int),
        P[<h_1140@88:1>](<h_1140@88:0>:int,<h_1140@88:0>:int), (1 > <<<h_1140@88:2>@105:2>@116:0>) |- bot
        
        P[<h_1140@88:1>](<h_1140@88:0>:int,<h_1140@88:1>:int),
        P[<h_1140@88:1>](var288:int,var287:int),
        P[<<h_1140@91:2>@94:1>]((-1 + var288):int,var287:int,(-1 + <<h_1140@88:2>@105:0>):int,(
                                1 + <<h_1140@88:2>@105:1>):int),
        ((var288 <> 0) && ((<h_1140@88:0> <> 0) && ((1 + <<h_1140@88:2>@105:1>) > 0)))
        |- P[<<h_1140@88:2>@105:1>](<h_1140@88:0>:int,<h_1140@88:1>:int,
                                    <<h_1140@88:2>@105:0>:int,<<h_1140@88:2>@105:1>:int)
        
        P[<h_1140@91:1>](<h_1140@91:0>:int,<h_1140@91:1>:int),
        ((<h_1140@91:0> = 0) && ((<<h_1140@91:2>@94:0> = 0) && (<<h_1140@91:2>@94:1> = <h_1140@91:1>)))
        |- P[<<h_1140@91:2>@94:1>](<h_1140@91:0>:int,<h_1140@91:1>:int,
                                   <<h_1140@91:2>@94:0>:int,<<h_1140@91:2>@94:1>:int)
        
        P[<h_1140@88:1>]((1 + <h_1140@91:0>):int,<h_1140@91:1>:int), (
        (1 + <h_1140@91:0>) <> 0) |- P[<h_1140@91:1>](<h_1140@91:0>:int,
                                                      <h_1140@91:1>:int)
        
         (<h_1140@88:1> = <h_1140@88:0>) |- P[<h_1140@88:1>](<h_1140@88:0>:int,
                                                             <h_1140@88:1>:int)
      lower bounds:
        P[<h_1140@88:1>](<h_1140@88:0>:int,<h_1140@88:1>:int) = (<h_1140@88:1> = <h_1140@88:0>)
        P[<fail_1450@137:0>](var390:bool) = false
        P[<h_1140@91:1>](<h_1140@91:0>:int,<h_1140@91:1>:int) =
        (((1 + <h_1140@91:0>) <> 0) && (<h_1140@91:1> = (1 + <h_1140@91:0>)))
        P[<<h_1140@91:2>@94:1>](<h_1140@91:0>:int,<h_1140@91:1>:int,<<h_1140@91:2>@94:0>:int,<<h_1140@91:2>@94:1>:int) =
        ((<h_1140@91:0> = 0) &&
         ((<<h_1140@91:2>@94:0> = 0) &&
          ((<h_1140@91:1> = (1 + <h_1140@91:0>)) && (<<h_1140@91:2>@94:1> = <h_1140@91:1>))))
        P[<<h_1140@88:2>@105:1>](<h_1140@88:0>:int,<h_1140@88:1>:int,<<h_1140@88:2>@105:0>:int,<<h_1140@88:2>@105:1>:int) =
        ((<<h_1140@88:2>@105:1> = 0) &&
         ((<<h_1140@88:2>@105:0> = 1) && ((<h_1140@88:1> = <h_1140@88:0>) && (<h_1140@88:0> <> 0))))
      upper bounds:
        P[<<h_1140@88:2>@105:1>](var400:int,var401:int,var402:int,var403:int) =
        ((var403 <> 0) || ((1 <= var402) || (var400 <> var401)))
        P[<<h_1140@91:2>@94:1>](var394:int,var395:int,var396:int,var397:int) =
        ((var397 <> 1) || (((1 + var394) <> var395) || ((var395 = 0) || (0 <= var396))))
      begin GenHcSolver.classify_pids(172802)[4]
        output:
          [<<h_1140@91:2>@94:1>;<<h_1140@88:2>@105:1>]
      end GenHcSolver.classify_pids(172802)[4] (0.000000 sec.)
      begin ApronInterface.convex_hull_interpolate(172901)[4]
        lb:(((<h_1140@91:0> = 0) &&
             ((<<h_1140@91:2>@94:0> = 0) &&
              ((<h_1140@91:1> = (1 + <h_1140@91:0>)) && (<<h_1140@91:2>@94:1> = <h_1140@91:1>)))) ||
            ((<<h_1140@91:2>@94:1> = 0) &&
             ((<<h_1140@91:2>@94:0> = 1) && ((<h_1140@91:1> = <h_1140@91:0>) && (<h_1140@91:0> <> 0)))))
        nub:((not
                ((<<h_1140@91:2>@94:1> <> 1) ||
                 (((1 + <h_1140@91:0>) <> <h_1140@91:1>) || ((<h_1140@91:1> = 0) || (0 <= <<h_1140@91:2>@94:0>))))) ||
             (not ((<<h_1140@91:2>@94:1> <> 0) || ((1 <= <<h_1140@91:2>@94:0>) || (<h_1140@91:0> <> <h_1140@91:1>)))))
        begin ExtFormula.Formula.case_analysis_boolean(172991)[5]
          ts: (((<h_1140@91:0> = 0) &&
                ((<<h_1140@91:2>@94:0> = 0) &&
                 ((<h_1140@91:1> = (1 + <h_1140@91:0>)) && (<<h_1140@91:2>@94:1> = <h_1140@91:1>)))) ||
               ((<<h_1140@91:2>@94:1> = 0) &&
                ((<<h_1140@91:2>@94:0> = 1) && ((<h_1140@91:1> = <h_1140@91:0>) && (<h_1140@91:0> <> 0)))))
          
        end ExtFormula.Formula.case_analysis_boolean(172991)[5] (0.000000 sec.)
        begin ExtFormula.Formula.case_analysis_boolean(173082)[5]
          ts: (((<<h_1140@91:2>@94:1> = 1) &&
                (((1 + <h_1140@91:0>) = <h_1140@91:1>) && ((<h_1140@91:1> <> 0) && (0 > <<h_1140@91:2>@94:0>)))) ||
               ((<<h_1140@91:2>@94:1> = 0) && ((1 > <<h_1140@91:2>@94:0>) && (<h_1140@91:0> = <h_1140@91:1>))))
          
        end ExtFormula.Formula.case_analysis_boolean(173082)[5] (0.000000 sec.)
        lb':(((((-1 + <<h_1140@91:2>@94:0>) + <h_1140@91:1>) + (-1 * <h_1140@91:0>)) = 0) &&
             ((((<<h_1140@91:2>@94:1> + (-1 * <h_1140@91:1>)) + <h_1140@91:0>) = 0) &&
              (((<h_1140@91:1> + (-1 * <h_1140@91:0>)) >= 0) && (((1 + (-1 * <h_1140@91:1>)) + <h_1140@91:0>) >= 0))))
        nub':((((<<h_1140@91:2>@94:1> + (-1 * <h_1140@91:1>)) + <h_1140@91:0>) = 0) &&
              (((<h_1140@91:1> + (-1 * <h_1140@91:0>)) >= 0) &&
               (((((-1 * <<h_1140@91:2>@94:0>) + (-1 * <h_1140@91:1>)) + <h_1140@91:0>) >= 0) &&
                (((1 + (-1 * <h_1140@91:1>)) + <h_1140@91:0>) >= 0))))
        begin InterpProver.interpolate(173097)[5]
          begin InterpProver.interpolate_fresh(173098)[6]
            begin InterpProver.interpolate_log(173099)[7]
              input1: (((((-1 + <<h_1140@91:2>@94:0>) + <h_1140@91:1>) + (-1 * <h_1140@91:0>)) = 0) &&
                       ((((<<h_1140@91:2>@94:1> + (-1 * <h_1140@91:1>)) + <h_1140@91:0>) = 0) &&
                        (((<h_1140@91:1> + (-1 * <h_1140@91:0>)) >= 0) &&
                         (((1 + (-1 * <h_1140@91:1>)) + <h_1140@91:0>) >= 0))))
              input2: ((((<<h_1140@91:2>@94:1> + (-1 * <h_1140@91:1>)) + <h_1140@91:0>) = 0) &&
                       (((<h_1140@91:1> + (-1 * <h_1140@91:0>)) >= 0) &&
                        (((((-1 * <<h_1140@91:2>@94:0>) + (-1 * <h_1140@91:1>)) + <h_1140@91:0>) >= 0) &&
                         (((1 + (-1 * <h_1140@91:1>)) + <h_1140@91:0>) >= 0))))
              begin InterpProver.interpolate_check(173100)[8]
                begin InterpProver.interpolate_simplify(173101)[9]
                  begin InterpProver.interpolate_quick(173406)[10]
                    begin CsisatInterface.interpolate_csisat_wrap(173415)[11]
                      begin CsisatInterface.interpolate_csisat_post_process(173416)[12]
                        begin CsisatInterface.interpolate_csisat_log(173417)[13]
                          input1: (v_sep_h_1140_sep_91_sep_1 = (v_sep_h_1140_sep_91_sep_0 + v_sep_h_1140_sep_91_sep_2_sep_94_sep_1) & (1 + v_sep_h_1140_sep_91_sep_0) = (v_sep_h_1140_sep_91_sep_1 + v_sep_h_1140_sep_91_sep_2_sep_94_sep_0) & v_sep_h_1140_sep_91_sep_0 <= v_sep_h_1140_sep_91_sep_1 & v_sep_h_1140_sep_91_sep_1 <= (1 + v_sep_h_1140_sep_91_sep_0))
                          input2: (v_sep_h_1140_sep_91_sep_1 = (v_sep_h_1140_sep_91_sep_0 + v_sep_h_1140_sep_91_sep_2_sep_94_sep_1) & v_sep_h_1140_sep_91_sep_0 <= v_sep_h_1140_sep_91_sep_1 & v_sep_h_1140_sep_91_sep_1 <= (1 + v_sep_h_1140_sep_91_sep_0) & (v_sep_h_1140_sep_91_sep_1 + v_sep_h_1140_sep_91_sep_2_sep_94_sep_0) <= v_sep_h_1140_sep_91_sep_0)
                          begin CsisatInterface.interpolate_csisat_raw(173418)[14]
                            
                          end CsisatInterface.interpolate_csisat_raw(173418)[14] (0.001000 sec.)
                          output: (-2*v_sep_h_1140_sep_91_sep_1 + -2*v_sep_h_1140_sep_91_sep_2_sep_94_sep_0 + 2*v_sep_h_1140_sep_91_sep_0) <= -2
                          
                        end CsisatInterface.interpolate_csisat_log(173417)[13] (0.001000 sec.)
                        after simplification: (-2*v_sep_h_1140_sep_91_sep_1 + -2*v_sep_h_1140_sep_91_sep_2_sep_94_sep_0 + 2*v_sep_h_1140_sep_91_sep_0) <= -2
                        after dnf conversion: (((-2*v_sep_h_1140_sep_91_sep_1 + -2*v_sep_h_1140_sep_91_sep_2_sep_94_sep_0 + 2*v_sep_h_1140_sep_91_sep_0) <= -2))
                        
                      end CsisatInterface.interpolate_csisat_post_process(173416)[12] (0.001000 sec.)
                      
                    end CsisatInterface.interpolate_csisat_wrap(173415)[11] (0.001000 sec.)
                    
                  end InterpProver.interpolate_quick(173406)[10] (0.001000 sec.)
                  
                end InterpProver.interpolate_simplify(173101)[9] (0.001999 sec.)
                
              end InterpProver.interpolate_check(173100)[8] (0.002999 sec.)
              output: ((1 + <h_1140@91:0>) <= (<h_1140@91:1> + <<h_1140@91:2>@94:0>))
            end InterpProver.interpolate_log(173099)[7] (0.002999 sec.)
            
          end InterpProver.interpolate_fresh(173098)[6] (0.002999 sec.)
          
        end InterpProver.interpolate(173097)[5] (0.002999 sec.)
        output:
          P[<<h_1140@91:2>@94:1>](<h_1140@91:0>:int,<h_1140@91:1>:int,<<h_1140@91:2>@94:0>:int,<<h_1140@91:2>@94:1>:int) =
          ((1 + <h_1140@91:0>) <= (<h_1140@91:1> + <<h_1140@91:2>@94:0>))
          P[<<h_1140@88:2>@105:1>](<h_1140@91:0>:int,<h_1140@91:1>:int,<<h_1140@91:2>@94:0>:int,<<h_1140@91:2>@94:1>:int) =
          ((1 + <h_1140@91:0>) <= (<h_1140@91:1> + <<h_1140@91:2>@94:0>))
      end ApronInterface.convex_hull_interpolate(172901)[4] (0.005999 sec.)
      Horn clauses:
        P[<fail_1450@137:0>](<fail_1450@137:0>:bool)|- bot
        
        P[<h_1140@91:1>](0:int,<h_1140@91:1>:int), (1 < <h_1140@91:1>) |- bot
        
        P[<h_1140@88:1>](<h_1140@88:0>:int,<h_1140@88:1>:int),
        P[<h_1140@88:1>](var288:int,var287:int),
        ((<h_1140@88:0> <> 0) && (((<h_1140@88:1> + var288) < (<h_1140@88:0> + var287)) && (var288 <> 0))) |- bot
        
        P[<h_1140@91:1>](0:int,<<h_1140@91:2>@94:1>:int), (1 > <<h_1140@91:2>@94:1>) |- bot
        
        P[<h_1140@88:1>]((1 + <h_1140@91:0>):int,<h_1140@91:1>:int), (
        (1 + <h_1140@91:0>) <> 0) |- P[<h_1140@91:1>](<h_1140@91:0>:int,
                                                      <h_1140@91:1>:int)
        
         (<h_1140@88:1> = <h_1140@88:0>) |- P[<h_1140@88:1>](<h_1140@88:0>:int,
                                                             <h_1140@88:1>:int)
      lower bounds:
        P[<h_1140@88:1>](<h_1140@88:0>:int,<h_1140@88:1>:int) = (<h_1140@88:1> = <h_1140@88:0>)
        P[<fail_1450@137:0>](var407:bool) = false
        P[<h_1140@91:1>](<h_1140@91:0>:int,<h_1140@91:1>:int) =
        (((1 + <h_1140@91:0>) <> 0) && (<h_1140@91:1> = (1 + <h_1140@91:0>)))
      upper bounds:
        P[<h_1140@91:1>](var412:int,var413:int) = ((var412 <> 0) || (var413 = 1))
      begin GenHcSolver.classify_pids(178634)[4]
        output:
          [<h_1140@91:1>]
      end GenHcSolver.classify_pids(178634)[4] (0.000000 sec.)
      lb:(((1 + <h_1140@91:0>) <> 0) && (<h_1140@91:1> = (1 + <h_1140@91:0>)))
      nub:(not ((<h_1140@91:0> <> 0) || (<h_1140@91:1> = 1)))
      begin ApronInterface.convex_hull_interpolate(178637)[4]
        lb:(((1 + <h_1140@91:0>) <> 0) && (<h_1140@91:1> = (1 + <h_1140@91:0>)))
        nub:(not ((<h_1140@91:0> <> 0) || (<h_1140@91:1> = 1)))
        begin ExtFormula.Formula.case_analysis_boolean(178658)[5]
          ts: (((1 + <h_1140@91:0>) <> 0) && (<h_1140@91:1> = (1 + <h_1140@91:0>)))
          
        end ExtFormula.Formula.case_analysis_boolean(178658)[5] (0.000000 sec.)
        begin ExtFormula.Formula.case_analysis_boolean(178678)[5]
          ts: ((<h_1140@91:0> = 0) && (<h_1140@91:1> <> 1))
          
        end ExtFormula.Formula.case_analysis_boolean(178678)[5] (0.000000 sec.)
        lb':(((-1 + <h_1140@91:1>) + (-1 * <h_1140@91:0>)) = 0)
        nub':(<h_1140@91:0> = 0)
        begin InterpProver.interpolate(178684)[5]
          begin InterpProver.interpolate_fresh(178685)[6]
            begin InterpProver.interpolate_log(178686)[7]
              input1: (((-1 + <h_1140@91:1>) + (-1 * <h_1140@91:0>)) = 0)
              input2: (<h_1140@91:0> = 0)
              begin InterpProver.interpolate_check(178687)[8]
                begin InterpProver.interpolate_simplify(178688)[9]
                  begin InterpProver.interpolate_quick(178713)[10]
                    begin CsisatInterface.interpolate_csisat_wrap(178719)[11]
                      begin CsisatInterface.interpolate_csisat_post_process(178720)[12]
                        begin CsisatInterface.interpolate_csisat_log(178721)[13]
                          input1: true
                          input2: 0 = v_sep_h_1140_sep_91_sep_0
                          begin CsisatInterface.interpolate_csisat_raw(178722)[14]
                            
                          end CsisatInterface.interpolate_csisat_raw(178722)[14] (0.000000 sec.)
                          
                        end CsisatInterface.interpolate_csisat_log(178721)[13] (0.000000 sec.)
                        
                      end CsisatInterface.interpolate_csisat_post_process(178720)[12] (0.000000 sec.)
                      
                    end CsisatInterface.interpolate_csisat_wrap(178719)[11] (0.000000 sec.)
                    
                  end InterpProver.interpolate_quick(178713)[10] (0.001000 sec.)
                  
                end InterpProver.interpolate_simplify(178688)[9] (0.001000 sec.)
                
              end InterpProver.interpolate_check(178687)[8] (0.001000 sec.)
              there is no interpolant
            end InterpProver.interpolate_log(178686)[7] (0.001000 sec.)
            
          end InterpProver.interpolate_fresh(178685)[6] (0.001000 sec.)
          
        end InterpProver.interpolate(178684)[5] (0.001000 sec.)
        begin InterpProver.interpolate(178731)[5]
          begin InterpProver.interpolate_fresh(178732)[6]
            begin InterpProver.interpolate_log(178733)[7]
              input1: (((-1 + <h_1140@91:1>) + (-1 * <h_1140@91:0>)) = 0)
              input2: (not ((<h_1140@91:0> <> 0) || (<h_1140@91:1> = 1)))
              begin InterpProver.interpolate_check(178734)[8]
                begin InterpProver.interpolate_simplify(178735)[9]
                  begin InterpProver.interpolate_quick(178774)[10]
                    begin CsisatInterface.interpolate_csisat_wrap(178783)[11]
                      begin CsisatInterface.interpolate_csisat_post_process(178784)[12]
                        begin CsisatInterface.interpolate_csisat_log(178785)[13]
                          input1: v_sep_h_1140_sep_91_sep_1 = (1 + v_sep_h_1140_sep_91_sep_0)
                          input2: (not 1 = v_sep_h_1140_sep_91_sep_1 & 0 = v_sep_h_1140_sep_91_sep_0)
                          begin CsisatInterface.interpolate_csisat_raw(178786)[14]
                            
                          end CsisatInterface.interpolate_csisat_raw(178786)[14] (0.000000 sec.)
                          output: v_sep_h_1140_sep_91_sep_1 = (1 + v_sep_h_1140_sep_91_sep_0)
                          
                        end CsisatInterface.interpolate_csisat_log(178785)[13] (0.000000 sec.)
                        after simplification: v_sep_h_1140_sep_91_sep_1 = (1 + v_sep_h_1140_sep_91_sep_0)
                        after dnf conversion: ((v_sep_h_1140_sep_91_sep_1 = (1 + v_sep_h_1140_sep_91_sep_0)))
                        
                      end CsisatInterface.interpolate_csisat_post_process(178784)[12] (0.000000 sec.)
                      
                    end CsisatInterface.interpolate_csisat_wrap(178783)[11] (0.000000 sec.)
                    
                  end InterpProver.interpolate_quick(178774)[10] (0.001000 sec.)
                  
                end InterpProver.interpolate_simplify(178735)[9] (0.001000 sec.)
                
              end InterpProver.interpolate_check(178734)[8] (0.002000 sec.)
              output: (<h_1140@91:1> = (1 + <h_1140@91:0>))
            end InterpProver.interpolate_log(178733)[7] (0.002000 sec.)
            
          end InterpProver.interpolate_fresh(178732)[6] (0.002000 sec.)
          
        end InterpProver.interpolate(178731)[5] (0.002000 sec.)
        output:
          P[<h_1140@91:1>](<h_1140@91:0>:int,<h_1140@91:1>:int) = (<h_1140@91:1> = (1 + <h_1140@91:0>))
      end ApronInterface.convex_hull_interpolate(178637)[4] (0.003000 sec.)
      Horn clauses:
        P[<fail_1450@137:0>](<fail_1450@137:0>:bool)|- bot
        
        P[<h_1140@88:1>](<h_1140@88:0>:int,<h_1140@88:1>:int),
        P[<h_1140@88:1>](var288:int,var287:int),
        ((<h_1140@88:0> <> 0) && (((<h_1140@88:1> + var288) < (<h_1140@88:0> + var287)) && (var288 <> 0))) |- bot
        
        P[<h_1140@88:1>]((1 + <h_1140@91:0>):int,<h_1140@91:1>:int),
        (((1 + <h_1140@91:0>) <> 0) && (<h_1140@91:1> <> (1 + <h_1140@91:0>))) |- bot
        
         (<h_1140@88:1> = <h_1140@88:0>) |- P[<h_1140@88:1>](<h_1140@88:0>:int,
                                                             <h_1140@88:1>:int)
      lower bounds:
        P[<h_1140@88:1>](<h_1140@88:0>:int,<h_1140@88:1>:int) = (<h_1140@88:1> = <h_1140@88:0>)
        P[<fail_1450@137:0>](var417:bool) = false
      upper bounds:
        P[<fail_1450@137:0>](var420:bool) = true
      begin GenHcSolver.classify_pids(180082)[4]
        output:
          [<fail_1450@137:0>]
      end GenHcSolver.classify_pids(180082)[4] (0.000000 sec.)
      lb:false
      nub:false
      begin ApronInterface.convex_hull_interpolate(180085)[4]
        lb:false
        nub:false
        begin ExtFormula.Formula.case_analysis_boolean(180088)[5]
          ts: false
          
        end ExtFormula.Formula.case_analysis_boolean(180088)[5] (0.000000 sec.)
        begin ExtFormula.Formula.case_analysis_boolean(180093)[5]
          ts: false
          
        end ExtFormula.Formula.case_analysis_boolean(180093)[5] (0.000000 sec.)
        lb':(-1 >= 0)
        nub':(-1 >= 0)
        begin InterpProver.interpolate(180096)[5]
          begin InterpProver.interpolate_fresh(180097)[6]
            begin InterpProver.interpolate_log(180098)[7]
              input1: (-1 >= 0)
              input2: (-1 >= 0)
              begin InterpProver.interpolate_check(180099)[8]
                begin InterpProver.interpolate_simplify(180100)[9]
                  begin InterpProver.interpolate_quick(180115)[10]
                    
                  end InterpProver.interpolate_quick(180115)[10] (0.000000 sec.)
                  begin minimizing # of disjunctions(180119)[10]
                    input: false
                    output: false
                  end minimizing # of disjunctions(180119)[10] (0.000000 sec.)
                  
                end InterpProver.interpolate_simplify(180100)[9] (0.000000 sec.)
                
              end InterpProver.interpolate_check(180099)[8] (0.001000 sec.)
              output: false
            end InterpProver.interpolate_log(180098)[7] (0.001000 sec.)
            
          end InterpProver.interpolate_fresh(180097)[6] (0.001000 sec.)
          
        end InterpProver.interpolate(180096)[5] (0.001000 sec.)
        output:
          P[<fail_1450@137:0>](var417:bool) = false
      end ApronInterface.convex_hull_interpolate(180085)[4] (0.002000 sec.)
      Horn clauses:
        P[<h_1140@88:1>](<h_1140@88:0>:int,<h_1140@88:1>:int),
        P[<h_1140@88:1>](var288:int,var287:int),
        ((<h_1140@88:0> <> 0) && (((<h_1140@88:1> + var288) < (<h_1140@88:0> + var287)) && (var288 <> 0))) |- bot
        
        P[<h_1140@88:1>]((1 + <h_1140@91:0>):int,<h_1140@91:1>:int),
        (((1 + <h_1140@91:0>) <> 0) && (<h_1140@91:1> <> (1 + <h_1140@91:0>))) |- bot
        
         (<h_1140@88:1> = <h_1140@88:0>) |- P[<h_1140@88:1>](<h_1140@88:0>:int,
                                                             <h_1140@88:1>:int)
      lower bounds:
        P[<h_1140@88:1>](<h_1140@88:0>:int,<h_1140@88:1>:int) = (<h_1140@88:1> = <h_1140@88:0>)
      begin BwHcSolver.solve(181640)[4]
        lower bounds:
          P[<h_1140@88:1>](<h_1140@88:0>:int,<h_1140@88:1>:int) = (<h_1140@88:1> = <h_1140@88:0>)
        begin BwHcSolver.solve_preds(181696)[5]
          input:
            P[<h_1140@88:1>](<h_1140@88:0>:int,<h_1140@88:1>:int) = (<h_1140@88:1> = <h_1140@88:0>)
            P[<h_1140@88:1>](<h_1140@88:0>:int,<h_1140@88:1>:int),
            P[<h_1140@88:1>](var288:int,var287:int),
            ((<h_1140@88:0> <> 0) && (((<h_1140@88:1> + var288) < (<h_1140@88:0> + var287)) && (var288 <> 0))) |- bot
          finding a solution to P[<h_1140@88:1>](var421:int,var422:int)
          begin InterpProver.interpolate(181744)[6]
            begin InterpProver.interpolate_fresh(181745)[7]
              begin InterpProver.interpolate_log(181746)[8]
                input1: (var422 = var421)
                input2: ((var421 <> 0) && (((var423 + var421) < (var423 + var422)) && (var423 <> 0)))
                begin InterpProver.interpolate_check(181747)[9]
                  begin InterpProver.interpolate_simplify(181748)[10]
                    begin InterpProver.interpolate_quick(181815)[11]
                      begin CsisatInterface.interpolate_csisat_wrap(181824)[12]
                        begin CsisatInterface.interpolate_csisat_post_process(181825)[13]
                          begin CsisatInterface.interpolate_csisat_log(181826)[14]
                            input1: v_sep_var421 = v_sep_var422
                            input2: (not 0 = v_sep_var421 & not 0 = v_sep_var423 & (1 + v_sep_var421) <= v_sep_var422)
                            begin CsisatInterface.interpolate_csisat_raw(181827)[15]
                              
                            end CsisatInterface.interpolate_csisat_raw(181827)[15] (0.001000 sec.)
                            output: (-2*v_sep_var421 + 2*v_sep_var422) <= 0
                            
                          end CsisatInterface.interpolate_csisat_log(181826)[14] (0.001000 sec.)
                          after simplification: (-2*v_sep_var421 + 2*v_sep_var422) <= 0
                          after dnf conversion: (((-2*v_sep_var421 + 2*v_sep_var422) <= 0))
                          
                        end CsisatInterface.interpolate_csisat_post_process(181825)[13] (0.001000 sec.)
                        
                      end CsisatInterface.interpolate_csisat_wrap(181824)[12] (0.001000 sec.)
                      
                    end InterpProver.interpolate_quick(181815)[11] (0.001000 sec.)
                    
                  end InterpProver.interpolate_simplify(181748)[10] (0.002000 sec.)
                  
                end InterpProver.interpolate_check(181747)[9] (0.002000 sec.)
                output: (var422 <= var421)
              end InterpProver.interpolate_log(181746)[8] (0.002000 sec.)
              
            end InterpProver.interpolate_fresh(181745)[7] (0.002000 sec.)
            
          end InterpProver.interpolate(181744)[6] (0.002000 sec.)
          solution:
            P[<h_1140@88:1>](var421:int,var422:int) = (var422 <= var421)
          finding a solution to P[<h_1140@88:1>](var424:int,var425:int)
          begin InterpProver.interpolate(181930)[6]
            begin InterpProver.interpolate_fresh(181931)[7]
              begin InterpProver.interpolate_log(181932)[8]
                input1: (var425 = var424)
                input2: ((var427 <= var426) &&
                         ((var426 <> 0) && (((var425 + var426) < (var424 + var427)) && (var424 <> 0))))
                begin InterpProver.interpolate_check(181933)[9]
                  begin InterpProver.interpolate_simplify(181934)[10]
                    begin InterpProver.interpolate_quick(182067)[11]
                      begin CsisatInterface.interpolate_csisat_wrap(182076)[12]
                        begin CsisatInterface.interpolate_csisat_post_process(182077)[13]
                          begin CsisatInterface.interpolate_csisat_log(182078)[14]
                            input1: v_sep_var424 = v_sep_var425
                            input2: (not 0 = v_sep_var424 & not 0 = v_sep_var426 & v_sep_var427 <= v_sep_var426 & (1 + v_sep_var425 + v_sep_var426) <= (v_sep_var424 + v_sep_var427))
                            begin CsisatInterface.interpolate_csisat_raw(182079)[15]
                              
                            end CsisatInterface.interpolate_csisat_raw(182079)[15] (0.000000 sec.)
                            output: (-2*v_sep_var425 + 2*v_sep_var424) <= 0
                            
                          end CsisatInterface.interpolate_csisat_log(182078)[14] (0.000000 sec.)
                          after simplification: (-2*v_sep_var425 + 2*v_sep_var424) <= 0
                          after dnf conversion: (((-2*v_sep_var425 + 2*v_sep_var424) <= 0))
                          
                        end CsisatInterface.interpolate_csisat_post_process(182077)[13] (0.001000 sec.)
                        
                      end CsisatInterface.interpolate_csisat_wrap(182076)[12] (0.001000 sec.)
                      
                    end InterpProver.interpolate_quick(182067)[11] (0.001000 sec.)
                    
                  end InterpProver.interpolate_simplify(181934)[10] (0.001999 sec.)
                  
                end InterpProver.interpolate_check(181933)[9] (0.001999 sec.)
                output: (var424 <= var425)
              end InterpProver.interpolate_log(181932)[8] (0.001999 sec.)
              
            end InterpProver.interpolate_fresh(181931)[7] (0.001999 sec.)
            
          end InterpProver.interpolate(181930)[6] (0.001999 sec.)
          solution:
            P[<h_1140@88:1>](var424:int,var425:int) = (var424 <= var425)
          
        end BwHcSolver.solve_preds(181696)[5] (0.003999 sec.)
        begin BwHcSolver.solve_preds(182149)[5]
          input:
            P[<h_1140@88:1>](<h_1140@88:0>:int,<h_1140@88:1>:int) = (<h_1140@88:1> = <h_1140@88:0>)
            P[<h_1140@88:1>]((1 + <h_1140@91:0>):int,<h_1140@91:1>:int),
            (((1 + <h_1140@91:0>) <> 0) && (<h_1140@91:1> <> (1 + <h_1140@91:0>))) |- bot
          finding a solution to P[<h_1140@88:1>](var428:int,var429:int)
          begin InterpProver.interpolate(182234)[6]
            begin InterpProver.interpolate_fresh(182235)[7]
              begin InterpProver.interpolate_log(182236)[8]
                input1: (var429 = var428)
                input2: ((var428 <> 0) && (var429 <> var428))
                begin InterpProver.interpolate_check(182237)[9]
                  begin InterpProver.interpolate_simplify(182238)[10]
                    begin InterpProver.interpolate_quick(182279)[11]
                      begin CsisatInterface.interpolate_csisat_wrap(182288)[12]
                        begin CsisatInterface.interpolate_csisat_post_process(182289)[13]
                          begin CsisatInterface.interpolate_csisat_log(182290)[14]
                            input1: v_sep_var428 = v_sep_var429
                            input2: (not 0 = v_sep_var428 & not v_sep_var428 = v_sep_var429)
                            begin CsisatInterface.interpolate_csisat_raw(182291)[15]
                              
                            end CsisatInterface.interpolate_csisat_raw(182291)[15] (0.000000 sec.)
                            output: v_sep_var428 = v_sep_var429
                            
                          end CsisatInterface.interpolate_csisat_log(182290)[14] (0.000000 sec.)
                          after simplification: v_sep_var428 = v_sep_var429
                          after dnf conversion: ((v_sep_var428 = v_sep_var429))
                          
                        end CsisatInterface.interpolate_csisat_post_process(182289)[13] (0.000000 sec.)
                        
                      end CsisatInterface.interpolate_csisat_wrap(182288)[12] (0.000000 sec.)
                      
                    end InterpProver.interpolate_quick(182279)[11] (0.000000 sec.)
                    
                  end InterpProver.interpolate_simplify(182238)[10] (0.000000 sec.)
                  
                end InterpProver.interpolate_check(182237)[9] (0.000000 sec.)
                output: (var428 = var429)
              end InterpProver.interpolate_log(182236)[8] (0.000000 sec.)
              
            end InterpProver.interpolate_fresh(182235)[7] (0.000000 sec.)
            
          end InterpProver.interpolate(182234)[6] (0.000000 sec.)
          solution:
            P[<h_1140@88:1>](var428:int,var429:int) = (var428 = var429)
          
        end BwHcSolver.solve_preds(182149)[5] (0.000000 sec.)
        begin HcSolver.check_validity(182381)[5]
          input:
            P[<h_1140@88:1>](<h_1140@88:0>:int,<h_1140@88:1>:int),
            P[<h_1140@88:1>](var288:int,var287:int),
            ((<h_1140@88:0> <> 0) && (((<h_1140@88:1> + var288) < (<h_1140@88:0> + var287)) && (var288 <> 0))) |- bot
            
            P[<h_1140@88:1>]((1 + <h_1140@91:0>):int,<h_1140@91:1>:int),
            (((1 + <h_1140@91:0>) <> 0) && (<h_1140@91:1> <> (1 + <h_1140@91:0>))) |- bot
            
             (<h_1140@88:1> = <h_1140@88:0>) |- P[<h_1140@88:1>](<h_1140@88:0>:int,
                                                                 <h_1140@88:1>:int)
          checking substituted Horn clause:
             false |- bot
          checking substituted Horn clause:
             false |- bot
          checking substituted Horn clause:
             false |- bot
          
        end HcSolver.check_validity(182381)[5] (0.000000 sec.)
        solution:
          P[<h_1140@88:1>](var421:int,var422:int) = (var422 = var421)
      end BwHcSolver.solve(181640)[4] (0.006999 sec.)
      begin HcSolver.check_validity(182546)[4]
        input:
          P[<fail_1450@137:0>](<fail_1450@137:0>:bool)|- bot
          
          P[<<h_1140@88:3>@130:0>](<f_main_1445@134:0>:int,<f_main_1445@134:0>:int,<f_main_1445@134:2>:int),
          ((<f_main_1445@134:2> < <f_main_1445@134:0>) && <fail_1450@137:0>)
          |- P[<fail_1450@137:0>](<fail_1450@137:0>:bool)
          
          P[<h_1140@88:1>](<h_1140@88:0>:int,<h_1140@88:1>:int),
          P[<<h_1140@91:3>@128:0>]((-1 + <h_1140@88:0>):int,<h_1140@88:1>:int,<<h_1140@88:3>@130:0>:int),
          (<h_1140@88:0> <> 0)
          |- P[<<h_1140@88:3>@130:0>](<h_1140@88:0>:int,<h_1140@88:1>:int,
                                      <<h_1140@88:3>@130:0>:int)
          
          P[<h_1140@91:1>](<h_1140@91:0>:int,<h_1140@91:1>:int),
          P[<<<h_1140@91:2>@94:2>@126:0>](<h_1140@91:0>:int,<h_1140@91:1>:int,0:int,<h_1140@91:1>:int,<<h_1140@91:3>@128:0>:int),
          (<h_1140@91:0> = 0)
          |- P[<<h_1140@91:3>@128:0>](<h_1140@91:0>:int,<h_1140@91:1>:int,
                                      <<h_1140@91:3>@128:0>:int)
          
          P[<h_1140@88:1>]((1 + <h_1140@91:0>):int,<h_1140@91:1>:int),
          P[<h_1140@91:1>](<h_1140@91:0>:int,<h_1140@91:1>:int),
          P[<h_1140@88:1>](var285:int,var283:int),
          P[<<h_1140@91:2>@94:1>]((-1 + var285):int,var283:int,<<h_1140@91:2>@94:0>:int,<<h_1140@91:2>@94:1>:int),
          P[<h_1140@88:1>](var284:int,var282:int),
          P[<<<h_1140@88:2>@105:2>@116:0>](var284:int,var282:int,(1 + <<h_1140@91:2>@94:0>):int,(
                                           -1 + <<h_1140@91:2>@94:1>):int,<<<h_1140@91:2>@94:2>@126:0>:int),
          ((var285 <> 0) && ((var284 <> 0) && (((1 + <h_1140@91:0>) <> 0) && (<<h_1140@91:2>@94:1> > 0))))
          |- P[<<<h_1140@91:2>@94:2>@126:0>](<h_1140@91:0>:int,<h_1140@91:1>:int,
                                             <<h_1140@91:2>@94:0>:int,
                                             <<h_1140@91:2>@94:1>:int,
                                             <<<h_1140@91:2>@94:2>@126:0>:int)
          
          P[<<h_1140@88:2>@105:1>](var286:int,var286:int,<<h_1140@88:2>@105:0>:int,<<h_1140@88:2>@105:1>:int),
          P[<h_1140@88:1>](<h_1140@88:0>:int,<h_1140@88:1>:int),
          ((<<h_1140@88:2>@105:1> = 0) &&
           ((<h_1140@88:0> = <h_1140@88:1>) && (<<<h_1140@88:2>@105:2>@116:0> = <<h_1140@88:2>@105:0>)))
          |- P[<<<h_1140@88:2>@105:2>@116:0>](<h_1140@88:0>:int,<h_1140@88:1>:int,
                                              <<h_1140@88:2>@105:0>:int,
                                              <<h_1140@88:2>@105:1>:int,
                                              <<<h_1140@88:2>@105:2>@116:0>:int)
          
          P[<h_1140@88:1>](<h_1140@88:0>:int,<h_1140@88:1>:int),
          P[<h_1140@88:1>](var288:int,var287:int),
          P[<<h_1140@91:2>@94:1>]((-1 + var288):int,var287:int,(-1 + <<h_1140@88:2>@105:0>):int,(
                                  1 + <<h_1140@88:2>@105:1>):int),
          ((var288 <> 0) && ((<h_1140@88:0> <> 0) && ((1 + <<h_1140@88:2>@105:1>) > 0)))
          |- P[<<h_1140@88:2>@105:1>](<h_1140@88:0>:int,<h_1140@88:1>:int,
                                      <<h_1140@88:2>@105:0>:int,<<h_1140@88:2>@105:1>:int)
          
          P[<h_1140@91:1>](<h_1140@91:0>:int,<h_1140@91:1>:int),
          ((<h_1140@91:0> = 0) && ((<<h_1140@91:2>@94:0> = 0) && (<<h_1140@91:2>@94:1> = <h_1140@91:1>)))
          |- P[<<h_1140@91:2>@94:1>](<h_1140@91:0>:int,<h_1140@91:1>:int,
                                     <<h_1140@91:2>@94:0>:int,<<h_1140@91:2>@94:1>:int)
          
          P[<h_1140@88:1>]((1 + <h_1140@91:0>):int,<h_1140@91:1>:int), (
          (1 + <h_1140@91:0>) <> 0) |- P[<h_1140@91:1>](<h_1140@91:0>:int,
                                                        <h_1140@91:1>:int)
          
           (<h_1140@88:1> = <h_1140@88:0>) |- P[<h_1140@88:1>](<h_1140@88:0>:int,
                                                               <h_1140@88:1>:int)
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        
      end HcSolver.check_validity(182546)[4] (0.010998 sec.)
      solution:
        P[<fail_1450@137:0>](var417:bool) = false
        P[<<h_1140@88:3>@130:0>](<h_1140@91:0>:int,<h_1140@91:1>:int,<<h_1140@91:3>@128:0>:int) =
        (<h_1140@91:1> <= <<h_1140@91:3>@128:0>)
        P[<<h_1140@91:3>@128:0>](<h_1140@91:0>:int,<h_1140@91:1>:int,<<h_1140@91:3>@128:0>:int) =
        (<h_1140@91:1> <= <<h_1140@91:3>@128:0>)
        P[<<<h_1140@91:2>@94:2>@126:0>](<h_1140@88:0>:int,<h_1140@88:1>:int,<<h_1140@88:2>@105:0>:int,<<h_1140@88:2>@105:1>:int,<<<h_1140@88:2>@105:2>@116:0>:int) =
        (1 <= <<<h_1140@88:2>@105:2>@116:0>)
        P[<<<h_1140@88:2>@105:2>@116:0>](<h_1140@88:0>:int,<h_1140@88:1>:int,<<h_1140@88:2>@105:0>:int,<<h_1140@88:2>@105:1>:int,<<<h_1140@88:2>@105:2>@116:0>:int) =
        (1 <= <<<h_1140@88:2>@105:2>@116:0>)
        P[<<h_1140@88:2>@105:1>](<h_1140@91:0>:int,<h_1140@91:1>:int,<<h_1140@91:2>@94:0>:int,<<h_1140@91:2>@94:1>:int) =
        ((1 + <h_1140@91:0>) <= (<h_1140@91:1> + <<h_1140@91:2>@94:0>))
        P[<<h_1140@91:2>@94:1>](<h_1140@91:0>:int,<h_1140@91:1>:int,<<h_1140@91:2>@94:0>:int,<<h_1140@91:2>@94:1>:int) =
        ((1 + <h_1140@91:0>) <= (<h_1140@91:1> + <<h_1140@91:2>@94:0>))
        P[<h_1140@91:1>](<h_1140@91:0>:int,<h_1140@91:1>:int) = (<h_1140@91:1> = (1 + <h_1140@91:0>))
        P[<h_1140@88:1>](var421:int,var422:int) = (var422 = var421)
    end GenHcSolver.solve(128382)[3] (0.300954 sec.)
    begin YhornInterface.solve(184940)[3]
      begin HcSolver.solve_ub(184941)[4]
        encoded:
          P[<fail_1450@137:0>](<fail_1450@137:0>:int)|- bot
          
          P[<<h_1140@88:3>@130:0>](<f_main_1445@134:0>:int,<f_main_1445@134:0>:int,<f_main_1445@134:2>:int),
          ((<f_main_1445@134:2> < <f_main_1445@134:0>) && (<fail_1450@137:0> = 1))
          |- P[<fail_1450@137:0>](<fail_1450@137:0>:int)
          
          P[<h_1140@88:1>](<h_1140@88:0>:int,<h_1140@88:1>:int),
          P[<<h_1140@91:3>@128:0>]((-1 + <h_1140@88:0>):int,<h_1140@88:1>:int,<<h_1140@88:3>@130:0>:int),
          (<h_1140@88:0> <> 0)
          |- P[<<h_1140@88:3>@130:0>](<h_1140@88:0>:int,<h_1140@88:1>:int,
                                      <<h_1140@88:3>@130:0>:int)
          
          P[<h_1140@91:1>](<h_1140@91:0>:int,<h_1140@91:1>:int),
          P[<<<h_1140@91:2>@94:2>@126:0>](<h_1140@91:0>:int,<h_1140@91:1>:int,0:int,<h_1140@91:1>:int,<<h_1140@91:3>@128:0>:int),
          (<h_1140@91:0> = 0)
          |- P[<<h_1140@91:3>@128:0>](<h_1140@91:0>:int,<h_1140@91:1>:int,
                                      <<h_1140@91:3>@128:0>:int)
          
          P[<h_1140@88:1>]((1 + <h_1140@91:0>):int,<h_1140@91:1>:int),
          P[<h_1140@91:1>](<h_1140@91:0>:int,<h_1140@91:1>:int),
          P[<h_1140@88:1>](var285:int,var283:int),
          P[<<h_1140@91:2>@94:1>]((-1 + var285):int,var283:int,<<h_1140@91:2>@94:0>:int,<<h_1140@91:2>@94:1>:int),
          P[<h_1140@88:1>](var284:int,var282:int),
          P[<<<h_1140@88:2>@105:2>@116:0>](var284:int,var282:int,(1 + <<h_1140@91:2>@94:0>):int,(
                                           -1 + <<h_1140@91:2>@94:1>):int,<<<h_1140@91:2>@94:2>@126:0>:int),
          ((var285 <> 0) && ((var284 <> 0) && (((1 + <h_1140@91:0>) <> 0) && (<<h_1140@91:2>@94:1> > 0))))
          |- P[<<<h_1140@91:2>@94:2>@126:0>](<h_1140@91:0>:int,<h_1140@91:1>:int,
                                             <<h_1140@91:2>@94:0>:int,
                                             <<h_1140@91:2>@94:1>:int,
                                             <<<h_1140@91:2>@94:2>@126:0>:int)
          
          P[<<h_1140@88:2>@105:1>](var286:int,var286:int,<<h_1140@88:2>@105:0>:int,<<h_1140@88:2>@105:1>:int),
          P[<h_1140@88:1>](<h_1140@88:0>:int,<h_1140@88:1>:int),
          ((<<h_1140@88:2>@105:1> = 0) &&
           ((<h_1140@88:0> = <h_1140@88:1>) && (<<<h_1140@88:2>@105:2>@116:0> = <<h_1140@88:2>@105:0>)))
          |- P[<<<h_1140@88:2>@105:2>@116:0>](<h_1140@88:0>:int,<h_1140@88:1>:int,
                                              <<h_1140@88:2>@105:0>:int,
                                              <<h_1140@88:2>@105:1>:int,
                                              <<<h_1140@88:2>@105:2>@116:0>:int)
          
          P[<h_1140@88:1>](<h_1140@88:0>:int,<h_1140@88:1>:int),
          P[<h_1140@88:1>](var288:int,var287:int),
          P[<<h_1140@91:2>@94:1>]((-1 + var288):int,var287:int,(-1 + <<h_1140@88:2>@105:0>):int,(
                                  1 + <<h_1140@88:2>@105:1>):int),
          ((var288 <> 0) && ((<h_1140@88:0> <> 0) && ((1 + <<h_1140@88:2>@105:1>) > 0)))
          |- P[<<h_1140@88:2>@105:1>](<h_1140@88:0>:int,<h_1140@88:1>:int,
                                      <<h_1140@88:2>@105:0>:int,<<h_1140@88:2>@105:1>:int)
          
          P[<h_1140@91:1>](<h_1140@91:0>:int,<h_1140@91:1>:int),
          ((<h_1140@91:0> = 0) && ((<<h_1140@91:2>@94:0> = 0) && (<<h_1140@91:2>@94:1> = <h_1140@91:1>)))
          |- P[<<h_1140@91:2>@94:1>](<h_1140@91:0>:int,<h_1140@91:1>:int,
                                     <<h_1140@91:2>@94:0>:int,<<h_1140@91:2>@94:1>:int)
          
          P[<h_1140@88:1>]((1 + <h_1140@91:0>):int,<h_1140@91:1>:int), (
          (1 + <h_1140@91:0>) <> 0) |- P[<h_1140@91:1>](<h_1140@91:0>:int,
                                                        <h_1140@91:1>:int)
          
           (<h_1140@88:1> = <h_1140@88:0>) |- P[<h_1140@88:1>](<h_1140@88:0>:int,
                                                               <h_1140@88:1>:int)
        input to Yhorn:
          P[<fail_1450@137:0>](<fail_1450@137:0>:int)|- bot
          
          P[<<h_1140@88:3>@130:0>](<f_main_1445@134:0>:int,<f_main_1445@134:0>:int,<f_main_1445@134:2>:int),
          ((<f_main_1445@134:2> < <f_main_1445@134:0>) && (<fail_1450@137:0> = 1))
          |- P[<fail_1450@137:0>](<fail_1450@137:0>:int)
          
          P[<h_1140@88:1>](<h_1140@88:0>:int,<h_1140@88:1>:int),
          P[<<h_1140@91:3>@128:0>](var430:int,<h_1140@88:1>:int,<<h_1140@88:3>@130:0>:int),
          (((1 + var430) = <h_1140@88:0>) && (<h_1140@88:0> <> 0))
          |- P[<<h_1140@88:3>@130:0>](<h_1140@88:0>:int,<h_1140@88:1>:int,
                                      <<h_1140@88:3>@130:0>:int)
          
          P[<h_1140@91:1>](<h_1140@91:0>:int,<h_1140@91:1>:int),
          P[<<<h_1140@91:2>@94:2>@126:0>](<h_1140@91:0>:int,<h_1140@91:1>:int,var431:int,<h_1140@91:1>:int,<<h_1140@91:3>@128:0>:int),
          ((var431 = 0) && (<h_1140@91:0> = 0))
          |- P[<<h_1140@91:3>@128:0>](<h_1140@91:0>:int,<h_1140@91:1>:int,
                                      <<h_1140@91:3>@128:0>:int)
          
          P[<h_1140@88:1>](var432:int,<h_1140@91:1>:int),
          P[<h_1140@91:1>](<h_1140@91:0>:int,<h_1140@91:1>:int),
          P[<h_1140@88:1>](var285:int,var283:int),
          P[<<h_1140@91:2>@94:1>](var433:int,var283:int,<<h_1140@91:2>@94:0>:int,<<h_1140@91:2>@94:1>:int),
          P[<h_1140@88:1>](var284:int,var282:int),
          P[<<<h_1140@88:2>@105:2>@116:0>](var284:int,var282:int,var434:int,var435:int,<<<h_1140@91:2>@94:2>@126:0>:int),
          (((1 + var435) = <<h_1140@91:2>@94:1>) &&
           ((var434 = (1 + <<h_1140@91:2>@94:0>)) &&
            (((1 + var433) = var285) &&
             ((var432 = (1 + <h_1140@91:0>)) &&
              ((<<h_1140@91:2>@94:1> > 0) && (((1 + <h_1140@91:0>) <> 0) && ((var284 <> 0) && (var285 <> 0))))))))
          |- P[<<<h_1140@91:2>@94:2>@126:0>](<h_1140@91:0>:int,<h_1140@91:1>:int,
                                             <<h_1140@91:2>@94:0>:int,
                                             <<h_1140@91:2>@94:1>:int,
                                             <<<h_1140@91:2>@94:2>@126:0>:int)
          
          P[<<h_1140@88:2>@105:1>](var286:int,var286:int,<<h_1140@88:2>@105:0>:int,<<h_1140@88:2>@105:1>:int),
          P[<h_1140@88:1>](<h_1140@88:0>:int,<h_1140@88:1>:int),
          ((<<<h_1140@88:2>@105:2>@116:0> = <<h_1140@88:2>@105:0>) &&
           ((<h_1140@88:0> = <h_1140@88:1>) && (<<h_1140@88:2>@105:1> = 0)))
          |- P[<<<h_1140@88:2>@105:2>@116:0>](<h_1140@88:0>:int,<h_1140@88:1>:int,
                                              <<h_1140@88:2>@105:0>:int,
                                              <<h_1140@88:2>@105:1>:int,
                                              <<<h_1140@88:2>@105:2>@116:0>:int)
          
          P[<h_1140@88:1>](<h_1140@88:0>:int,<h_1140@88:1>:int),
          P[<h_1140@88:1>](var288:int,var287:int),
          P[<<h_1140@91:2>@94:1>](var436:int,var287:int,var437:int,var438:int),
          ((var438 = (1 + <<h_1140@88:2>@105:1>)) &&
           (((1 + var437) = <<h_1140@88:2>@105:0>) &&
            (((1 + var436) = var288) && (((1 + <<h_1140@88:2>@105:1>) > 0) && ((<h_1140@88:0> <> 0) && (var288 <> 0))))))
          |- P[<<h_1140@88:2>@105:1>](<h_1140@88:0>:int,<h_1140@88:1>:int,
                                      <<h_1140@88:2>@105:0>:int,<<h_1140@88:2>@105:1>:int)
          
          P[<h_1140@91:1>](<h_1140@91:0>:int,<h_1140@91:1>:int),
          ((<<h_1140@91:2>@94:1> = <h_1140@91:1>) && ((<<h_1140@91:2>@94:0> = 0) && (<h_1140@91:0> = 0)))
          |- P[<<h_1140@91:2>@94:1>](<h_1140@91:0>:int,<h_1140@91:1>:int,
                                     <<h_1140@91:2>@94:0>:int,<<h_1140@91:2>@94:1>:int)
          
          P[<h_1140@88:1>](var439:int,<h_1140@91:1>:int),
          ((var439 = (1 + <h_1140@91:0>)) && ((1 + <h_1140@91:0>) <> 0))
          |- P[<h_1140@91:1>](<h_1140@91:0>:int,<h_1140@91:1>:int)
          Yhorn (Wed Sep 25 10:52:05 JST 2013)


(0=0) & (v_sep_fail_1450_sep_137_sep_0($483)) -> 1=0.
(($483-1=0) & ($484-$485<0)) & (v_sep_h_1140_sep_88_sep_3_sep_130_sep_0($485,$485,$484)) -> v_sep_fail_1450_sep_137_sep_0($483).
(($486<>0) & (-$486+$487+1=0)) & (v_sep_h_1140_sep_91_sep_3_sep_128_sep_0($487,$488,$489)) & (v_sep_h_1140_sep_88_sep_1($486,$488)) -> v_sep_h_1140_sep_88_sep_3_sep_130_sep_0($486,$488,$489).
(($490=0) & ($491=0)) & (v_sep_h_1140_sep_91_sep_2_sep_94_sep_2_sep_126_sep_0($490,$492,$491,$492,$493)) & (v_sep_h_1140_sep_91_sep_1($490,$492)) -> v_sep_h_1140_sep_91_sep_3_sep_128_sep_0($490,$492,$493).
(($494<>0) & ($495<>0) & ($490+1<>0) & ($496>0) & (-$490+$497-1=0) & (-$494+$498+1=0) & ($499-$500-1=0) & (-$496+$501+1=0)) & (v_sep_h_1140_sep_88_sep_2_sep_105_sep_2_sep_116_sep_0($495,$502,$499,$501,$503)) & (v_sep_h_1140_sep_88_sep_1($495,$502)) & (v_sep_h_1140_sep_91_sep_2_sep_94_sep_1($498,$504,$500,$496)) & (v_sep_h_1140_sep_88_sep_1($494,$504)) & (v_sep_h_1140_sep_91_sep_1($490,$492)) & (v_sep_h_1140_sep_88_sep_1($497,$492)) -> v_sep_h_1140_sep_91_sep_2_sep_94_sep_2_sep_126_sep_0($490,$492,$500,$496,$503).
(($505=0) & ($486-$488=0) & ($506-$507=0)) & (v_sep_h_1140_sep_88_sep_1($486,$488)) & (v_sep_h_1140_sep_88_sep_2_sep_105_sep_1($508,$508,$507,$505)) -> v_sep_h_1140_sep_88_sep_2_sep_105_sep_2_sep_116_sep_0($486,$488,$507,$505,$506).
(($509<>0) & ($486<>0) & ($505+1>0) & (-$509+$510+1=0) & (-$507+$511+1=0) & (-$505+$512-1=0)) & (v_sep_h_1140_sep_91_sep_2_sep_94_sep_1($510,$513,$511,$512)) & (v_sep_h_1140_sep_88_sep_1($509,$513)) & (v_sep_h_1140_sep_88_sep_1($486,$488)) -> v_sep_h_1140_sep_88_sep_2_sep_105_sep_1($486,$488,$507,$505).
(($490=0) & ($500=0) & (-$492+$496=0)) & (v_sep_h_1140_sep_91_sep_1($490,$492)) -> v_sep_h_1140_sep_91_sep_2_sep_94_sep_1($490,$492,$500,$496).
(($490+1<>0) & (-$490+$514-1=0)) & (v_sep_h_1140_sep_88_sep_1($514,$492)) -> v_sep_h_1140_sep_91_sep_1($490,$492).
-$486+$488=0 -> v_sep_h_1140_sep_88_sep_1($486,$488).


v_sep_fail_1450_sep_137_sep_0: X
v_sep_h_1140_sep_88_sep_1: X
v_sep_h_1140_sep_88_sep_2_sep_105_sep_1: X
v_sep_h_1140_sep_88_sep_2_sep_105_sep_2_sep_116_sep_0: X
v_sep_h_1140_sep_88_sep_3_sep_130_sep_0: X
v_sep_h_1140_sep_91_sep_1: X
v_sep_h_1140_sep_91_sep_2_sep_94_sep_1: X
v_sep_h_1140_sep_91_sep_2_sep_94_sep_2_sep_126_sep_0: X
v_sep_h_1140_sep_91_sep_3_sep_128_sep_0: X
..........................................................................
v_sep_fail_1450_sep_137_sep_0: X
v_sep_h_1140_sep_88_sep_1: X
v_sep_h_1140_sep_88_sep_2_sep_105_sep_1: X
v_sep_h_1140_sep_88_sep_2_sep_105_sep_2_sep_116_sep_0: X
v_sep_h_1140_sep_88_sep_3_sep_130_sep_0: X
v_sep_h_1140_sep_91_sep_1: X
v_sep_h_1140_sep_91_sep_2_sep_94_sep_1: X
v_sep_h_1140_sep_91_sep_2_sep_94_sep_2_sep_126_sep_0: X
v_sep_h_1140_sep_91_sep_3_sep_128_sep_0: X
...
v_sep_fail_1450_sep_137_sep_0: X
v_sep_h_1140_sep_88_sep_1: X
v_sep_h_1140_sep_88_sep_2_sep_105_sep_1: X
v_sep_h_1140_sep_88_sep_2_sep_105_sep_2_sep_116_sep_0: X
v_sep_h_1140_sep_88_sep_3_sep_130_sep_0: X
v_sep_h_1140_sep_91_sep_1: X
v_sep_h_1140_sep_91_sep_2_sep_94_sep_1: X
v_sep_h_1140_sep_91_sep_2_sep_94_sep_2_sep_126_sep_0: X
v_sep_h_1140_sep_91_sep_3_sep_128_sep_0: X
.......
v_sep_fail_1450_sep_137_sep_0: X
v_sep_h_1140_sep_88_sep_1: X
v_sep_h_1140_sep_88_sep_2_sep_105_sep_1: X
v_sep_h_1140_sep_88_sep_2_sep_105_sep_2_sep_116_sep_0: X
v_sep_h_1140_sep_88_sep_3_sep_130_sep_0: X
v_sep_h_1140_sep_91_sep_1: X
v_sep_h_1140_sep_91_sep_2_sep_94_sep_1: X
v_sep_h_1140_sep_91_sep_2_sep_94_sep_2_sep_126_sep_0: X
v_sep_h_1140_sep_91_sep_3_sep_128_sep_0: X
.........
v_sep_fail_1450_sep_137_sep_0: X
v_sep_h_1140_sep_88_sep_1: X
v_sep_h_1140_sep_88_sep_2_sep_105_sep_1: X
v_sep_h_1140_sep_88_sep_2_sep_105_sep_2_sep_116_sep_0: X
v_sep_h_1140_sep_88_sep_3_sep_130_sep_0: X
v_sep_h_1140_sep_91_sep_1: X
v_sep_h_1140_sep_91_sep_2_sep_94_sep_1: X
v_sep_h_1140_sep_91_sep_2_sep_94_sep_2_sep_126_sep_0: X
v_sep_h_1140_sep_91_sep_3_sep_128_sep_0: X
...........................................................
v_sep_fail_1450_sep_137_sep_0: X
v_sep_h_1140_sep_88_sep_1: X
v_sep_h_1140_sep_88_sep_2_sep_105_sep_1: X
v_sep_h_1140_sep_88_sep_2_sep_105_sep_2_sep_116_sep_0: X
v_sep_h_1140_sep_88_sep_3_sep_130_sep_0: X
v_sep_h_1140_sep_91_sep_1: X
v_sep_h_1140_sep_91_sep_2_sep_94_sep_1: X
v_sep_h_1140_sep_91_sep_2_sep_94_sep_2_sep_126_sep_0: X
v_sep_h_1140_sep_91_sep_3_sep_128_sep_0: X
..............................................................
v_sep_fail_1450_sep_137_sep_0: X
v_sep_h_1140_sep_88_sep_1: X
v_sep_h_1140_sep_88_sep_2_sep_105_sep_1: X
v_sep_h_1140_sep_88_sep_2_sep_105_sep_2_sep_116_sep_0: X
v_sep_h_1140_sep_88_sep_3_sep_130_sep_0: X
v_sep_h_1140_sep_91_sep_1: X
v_sep_h_1140_sep_91_sep_2_sep_94_sep_1: X
v_sep_h_1140_sep_91_sep_2_sep_94_sep_2_sep_126_sep_0: X
v_sep_h_1140_sep_91_sep_3_sep_128_sep_0: X
..........................................................................(0=0) & (v_sep_fail_1450_sep_137_sep_0($483)) -> 1=0.
(($483-1=0) & ($484-$485<0)) & (v_sep_h_1140_sep_88_sep_3_sep_130_sep_0($485,$485,$484)) -> v_sep_fail_1450_sep_137_sep_0($483).
(($486<>0) & (-$486+$487+1=0)) & (v_sep_h_1140_sep_91_sep_3_sep_128_sep_0($487,$488,$489)) & (v_sep_h_1140_sep_88_sep_1($486,$488)) -> v_sep_h_1140_sep_88_sep_3_sep_130_sep_0($486,$488,$489).
(($490=0) & ($491=0)) & (v_sep_h_1140_sep_91_sep_2_sep_94_sep_2_sep_126_sep_0($490,$492,$491,$492,$493)) & (v_sep_h_1140_sep_91_sep_1($490,$492)) -> v_sep_h_1140_sep_91_sep_3_sep_128_sep_0($490,$492,$493).
(($494<>0) & ($495<>0) & ($490+1<>0) & ($496>0) & (-$490+$497-1=0) & (-$494+$498+1=0) & ($499-$500-1=0) & (-$496+$501+1=0)) & (v_sep_h_1140_sep_88_sep_2_sep_105_sep_2_sep_116_sep_0($495,$502,$499,$501,$503)) & (v_sep_h_1140_sep_88_sep_1($495,$502)) & (v_sep_h_1140_sep_91_sep_2_sep_94_sep_1($498,$504,$500,$496)) & (v_sep_h_1140_sep_88_sep_1($494,$504)) & (v_sep_h_1140_sep_91_sep_1($490,$492)) & (v_sep_h_1140_sep_88_sep_1($497,$492)) -> v_sep_h_1140_sep_91_sep_2_sep_94_sep_2_sep_126_sep_0($490,$492,$500,$496,$503).
(($505=0) & ($486-$488=0) & ($506-$507=0)) & (v_sep_h_1140_sep_88_sep_1($486,$488)) & (v_sep_h_1140_sep_88_sep_2_sep_105_sep_1($508,$508,$507,$505)) -> v_sep_h_1140_sep_88_sep_2_sep_105_sep_2_sep_116_sep_0($486,$488,$507,$505,$506).
(($509<>0) & ($486<>0) & ($505+1>0) & (-$509+$510+1=0) & (-$507+$511+1=0) & (-$505+$512-1=0)) & (v_sep_h_1140_sep_91_sep_2_sep_94_sep_1($510,$513,$511,$512)) & (v_sep_h_1140_sep_88_sep_1($509,$513)) & (v_sep_h_1140_sep_88_sep_1($486,$488)) -> v_sep_h_1140_sep_88_sep_2_sep_105_sep_1($486,$488,$507,$505).
(($490=0) & ($500=0) & (-$492+$496=0)) & (v_sep_h_1140_sep_91_sep_1($490,$492)) -> v_sep_h_1140_sep_91_sep_2_sep_94_sep_1($490,$492,$500,$496).
(($490+1<>0) & (-$490+$514-1=0)) & (v_sep_h_1140_sep_88_sep_1($514,$492)) -> v_sep_h_1140_sep_91_sep_1($490,$492).
-$486+$488=0 -> v_sep_h_1140_sep_88_sep_1($486,$488).

           (<h_1140@88:1> = <h_1140@88:0>) |- P[<h_1140@88:1>](<h_1140@88:0>:int,
                                                               <h_1140@88:1>:int)
        solution:
          P[<fail_1450@137:0>]($515:bool) = false
          P[<h_1140@88:1>]($532:int,$534:int) = true
          P[<<h_1140@88:2>@105:1>]($573:int,$575:int,$577:int,$579:int) = true
          P[<<<h_1140@88:2>@105:2>@116:0>]($553:int,$555:int,$557:int,$559:int,$561:int) = ($557 <= $561)
          P[<<h_1140@88:3>@130:0>]($518:int,$520:int,$522:int) = ($518 <= $522)
          P[<h_1140@91:1>]($548:int,$550:int) = true
          P[<<h_1140@91:2>@94:1>]($564:int,$566:int,$568:int,$570:int) = true
          P[<<<h_1140@91:2>@94:2>@126:0>]($537:int,$539:int,$541:int,$543:int,$545:int) = ((1 + $541) <= $545)
          P[<<h_1140@91:3>@128:0>]($525:int,$527:int,$529:int) = ((1 + $525) <= $529)
        
      end HcSolver.solve_ub(184941)[4] (0.573913 sec.)
      begin HcSolver.check_validity(186077)[4]
        input:
          P[<fail_1450@137:0>](<fail_1450@137:0>:bool)|- bot
          
          P[<<h_1140@88:3>@130:0>](<f_main_1445@134:0>:int,<f_main_1445@134:0>:int,<f_main_1445@134:2>:int),
          ((<f_main_1445@134:2> < <f_main_1445@134:0>) && <fail_1450@137:0>)
          |- P[<fail_1450@137:0>](<fail_1450@137:0>:bool)
          
          P[<h_1140@88:1>](<h_1140@88:0>:int,<h_1140@88:1>:int),
          P[<<h_1140@91:3>@128:0>]((-1 + <h_1140@88:0>):int,<h_1140@88:1>:int,<<h_1140@88:3>@130:0>:int),
          (<h_1140@88:0> <> 0)
          |- P[<<h_1140@88:3>@130:0>](<h_1140@88:0>:int,<h_1140@88:1>:int,
                                      <<h_1140@88:3>@130:0>:int)
          
          P[<h_1140@91:1>](<h_1140@91:0>:int,<h_1140@91:1>:int),
          P[<<<h_1140@91:2>@94:2>@126:0>](<h_1140@91:0>:int,<h_1140@91:1>:int,0:int,<h_1140@91:1>:int,<<h_1140@91:3>@128:0>:int),
          (<h_1140@91:0> = 0)
          |- P[<<h_1140@91:3>@128:0>](<h_1140@91:0>:int,<h_1140@91:1>:int,
                                      <<h_1140@91:3>@128:0>:int)
          
          P[<h_1140@88:1>]((1 + <h_1140@91:0>):int,<h_1140@91:1>:int),
          P[<h_1140@91:1>](<h_1140@91:0>:int,<h_1140@91:1>:int),
          P[<h_1140@88:1>](var285:int,var283:int),
          P[<<h_1140@91:2>@94:1>]((-1 + var285):int,var283:int,<<h_1140@91:2>@94:0>:int,<<h_1140@91:2>@94:1>:int),
          P[<h_1140@88:1>](var284:int,var282:int),
          P[<<<h_1140@88:2>@105:2>@116:0>](var284:int,var282:int,(1 + <<h_1140@91:2>@94:0>):int,(
                                           -1 + <<h_1140@91:2>@94:1>):int,<<<h_1140@91:2>@94:2>@126:0>:int),
          ((var285 <> 0) && ((var284 <> 0) && (((1 + <h_1140@91:0>) <> 0) && (<<h_1140@91:2>@94:1> > 0))))
          |- P[<<<h_1140@91:2>@94:2>@126:0>](<h_1140@91:0>:int,<h_1140@91:1>:int,
                                             <<h_1140@91:2>@94:0>:int,
                                             <<h_1140@91:2>@94:1>:int,
                                             <<<h_1140@91:2>@94:2>@126:0>:int)
          
          P[<<h_1140@88:2>@105:1>](var286:int,var286:int,<<h_1140@88:2>@105:0>:int,<<h_1140@88:2>@105:1>:int),
          P[<h_1140@88:1>](<h_1140@88:0>:int,<h_1140@88:1>:int),
          ((<<h_1140@88:2>@105:1> = 0) &&
           ((<h_1140@88:0> = <h_1140@88:1>) && (<<<h_1140@88:2>@105:2>@116:0> = <<h_1140@88:2>@105:0>)))
          |- P[<<<h_1140@88:2>@105:2>@116:0>](<h_1140@88:0>:int,<h_1140@88:1>:int,
                                              <<h_1140@88:2>@105:0>:int,
                                              <<h_1140@88:2>@105:1>:int,
                                              <<<h_1140@88:2>@105:2>@116:0>:int)
          
          P[<h_1140@88:1>](<h_1140@88:0>:int,<h_1140@88:1>:int),
          P[<h_1140@88:1>](var288:int,var287:int),
          P[<<h_1140@91:2>@94:1>]((-1 + var288):int,var287:int,(-1 + <<h_1140@88:2>@105:0>):int,(
                                  1 + <<h_1140@88:2>@105:1>):int),
          ((var288 <> 0) && ((<h_1140@88:0> <> 0) && ((1 + <<h_1140@88:2>@105:1>) > 0)))
          |- P[<<h_1140@88:2>@105:1>](<h_1140@88:0>:int,<h_1140@88:1>:int,
                                      <<h_1140@88:2>@105:0>:int,<<h_1140@88:2>@105:1>:int)
          
          P[<h_1140@91:1>](<h_1140@91:0>:int,<h_1140@91:1>:int),
          ((<h_1140@91:0> = 0) && ((<<h_1140@91:2>@94:0> = 0) && (<<h_1140@91:2>@94:1> = <h_1140@91:1>)))
          |- P[<<h_1140@91:2>@94:1>](<h_1140@91:0>:int,<h_1140@91:1>:int,
                                     <<h_1140@91:2>@94:0>:int,<<h_1140@91:2>@94:1>:int)
          
          P[<h_1140@88:1>]((1 + <h_1140@91:0>):int,<h_1140@91:1>:int), (
          (1 + <h_1140@91:0>) <> 0) |- P[<h_1140@91:1>](<h_1140@91:0>:int,
                                                        <h_1140@91:1>:int)
          
           (<h_1140@88:1> = <h_1140@88:0>) |- P[<h_1140@88:1>](<h_1140@88:0>:int,
                                                               <h_1140@88:1>:int)
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        
      end HcSolver.check_validity(186077)[4] (0.006999 sec.)
      solution:
        P[<fail_1450@137:0>]($515:bool) = false
        P[<h_1140@88:1>]($532:int,$534:int) = true
        P[<<h_1140@88:2>@105:1>]($573:int,$575:int,$577:int,$579:int) = true
        P[<<<h_1140@88:2>@105:2>@116:0>]($553:int,$555:int,$557:int,$559:int,$561:int) = ($557 <= $561)
        P[<<h_1140@88:3>@130:0>]($518:int,$520:int,$522:int) = ($518 <= $522)
        P[<h_1140@91:1>]($548:int,$550:int) = true
        P[<<h_1140@91:2>@94:1>]($564:int,$566:int,$568:int,$570:int) = true
        P[<<<h_1140@91:2>@94:2>@126:0>]($537:int,$539:int,$541:int,$543:int,$545:int) = ((1 + $541) <= $545)
        P[<<h_1140@91:3>@128:0>]($525:int,$527:int,$529:int) = ((1 + $525) <= $529)
    end YhornInterface.solve(184940)[3] (0.580912 sec.)
    
  end RefTypeInfer.infer_etrs(64637)[2] (1.534767 sec.)
  refinement types:
    main_1444: X
    f_1446: v1:int -> X
    main_1043: v1:int -> (v2:unit -> X) -> X
    rev_1041: v1:int -> (v2:int -> X) -> X
    h_1140: v1:int ->
            v2:{v2:int | (v2 = v1)} ->
            (v3:int -> v4:{v4:int | ((1 + v1) <= (v2 + v3))} -> (v5:{v5:int | (1 <= v5)} -> X) -> X) ->
            (v8:{v8:int | (v2 <= v8)} -> X) -> X
    h_1140: v1:int ->
            v2:{v2:int | (v2 = (1 + v1))} ->
            (v3:int -> v4:{v4:int | ((1 + v1) <= (v2 + v3))} -> (v5:{v5:int | (1 <= v5)} -> X) -> X) ->
            (v8:{v8:int | (v2 <= v8)} -> X) -> X
    k1_1141: (v1:int -> v2:int -> (v3:int -> X) -> X) -> v6:int -> v7:int -> (v8:int -> X) -> X
    k_k1_u_1201: v1:int -> v2:int -> (v3:int -> v4:int -> (v5:int -> X) -> X) -> (v8:int -> X) -> v10:unit -> X
    k2_1139: v1:int -> v2:int -> (v3:int -> X) -> X
    k_k2_u_1331: v1:int -> v2:int -> (v3:int -> X) -> v5:unit -> X
    f_main_1445: v1:int -> (v2:unit -> X) -> v4:int -> X
    fail_1450: v1:{v1:bool | false} -> (v2:unit -> X) -> X
    f_1447: var448:int -> var447:unit -> X
    fail_1448: var452:bool -> (var451:unit -> X) -> X
    fail_1449: var456:bool -> (var455:unit -> X) -> X
  abstraction types:
    main_1444: X
    f_1446: v1:int -> X
    main_1043: v1:int -> (v2:unit -> X) -> X
    rev_1041: v1:int -> (v2:int -> X) -> X
    h_1140: var457:int ->
            var458:int[var458 -> (var458 = var457),
                       var458 -> (var458 = (1 + var457))] ->
            (var459:int ->
             var460:int[var460 -> ((1 + var457) <= (var458 + var459))] ->
             (var461:int[var461 -> (1 <= var461)] -> X) -> X) -> (var464:int[var464 -> (
                                                                    var458 <= var464)] -> X) -> X
    k1_1141: (v1:int -> v2:int -> (v3:int -> X) -> X) -> v6:int -> v7:int -> (v8:int -> X) -> X
    k_k1_u_1201: v1:int -> v2:int -> (v3:int -> v4:int -> (v5:int -> X) -> X) -> (v8:int -> X) -> v10:unit -> X
    k2_1139: v1:int -> v2:int -> (v3:int -> X) -> X
    k_k2_u_1331: v1:int -> v2:int -> (v3:int -> X) -> v5:unit -> X
    f_main_1445: v1:int -> (v2:unit -> X) -> v4:int -> X
    fail_1450: v1:bool -> (v2:unit -> X) -> X
    f_1447: var448:int -> var447:unit -> X
    fail_1448: var452:bool -> (var451:unit -> X) -> X
    fail_1449: var456:bool -> (var455:unit -> X) -> X
  
end AbsTypeInfer.refine(64636)[1] (1.538766 sec.)
DONE!

Prefix of spurious counter-example::
0; 0; 0; 0; 1; 0; 0; 0; 0; 0; 1

Program with abstraction types (CEGAR-cycle 4)::
Main: main_1444
  main_1444 -> (rand_int f_1446)
  f_1446 x_1419 -> (main_1043 x_1419 (f_1447 x_1419))
  f_1447 x_1419 x_1416 -> end
  f_main_1445 n_1044 k_main_1388 x_1391 when (x_1391 >= n_1044) -> (k_main_1388 ())
  f_main_1445 n_1044 k_main_1388 x_1391 when (not (x_1391 >= n_1044)) -> (fail_1450 true k_main_1388)
  fail_1448 b k -> {fail} => (k ())
  fail_1449 b k -> {fail} => (k ())
  fail_1450 b k -> {fail} => (k ())
  h_1140 x_1035 y_1036 k_1037 k_h_1249 when (x_1035 = 0) -> (k_1037 0 y_1036 k_h_1249)
  h_1140 x_1035 y_1036 k_1037 k_h_1249 when (not (x_1035 = 0)) ->
      (h_1140 (x_1035 - 1) y_1036 (k1_1141 k_1037) k_h_1249)
  k1_1141 k_1031 r1_1032 r2_1033 k_k1_1188 when (r2_1033 > 0) -> (k_k1_u_1201 r1_1032 r2_1033 k_1031 k_k1_1188 ())
  k1_1141 k_1031 r1_1032 r2_1033 k_k1_1188 when (not (r2_1033 > 0)) ->
      (fail_1448 true (k_k1_u_1201 r1_1032 r2_1033 k_1031 k_k1_1188))
  k2_1139 r1_1039 r2_1040 k_k2_1318 when (r2_1040 = 0) -> (k_k2_u_1331 r1_1039 r2_1040 k_k2_1318 ())
  k2_1139 r1_1039 r2_1040 k_k2_1318 when (not (r2_1040 = 0)) ->
      (fail_1449 true (k_k2_u_1331 r1_1039 r2_1040 k_k2_1318))
  k_k1_u_1201 r1_1032 r2_1033 k_1031 k_k1_1188 x_1191 -> (k_1031 (r1_1032 + 1) (r2_1033 - 1) k_k1_1188)
  k_k2_u_1331 r1_1039 r2_1040 k_k2_1318 x_1321 -> (k_k2_1318 r1_1039)
  main_1043 n_1044 k_main_1388 -> (rev_1041 n_1044 (f_main_1445 n_1044 k_main_1388))
  rev_1041 x_1042 k_rev_1346 -> (h_1140 x_1042 x_1042 k2_1139 k_rev_1346)
Types:
  main_1444 : X
  fail_1448 : (x_1:bool[x_1] -> (unit -> X) -> X)
  fail_1449 : (x_1:bool[x_1] -> (unit -> X) -> X)
  fail_1450 : (x_1:bool[x_1] -> (unit -> X) -> X)
  h_1140 : (x_1:int ->
            x_2:int[x_1 = x_2 - 1; x_1 <= x_2; x_1 = x_2] ->
            (x_4:int ->
             x_5:int[x_1 <= x_2 + x_4 - 1; x_4 >= 0; x_1 >= x_2 - x_5; x_5 = 0] ->
             (x_7:int[x_7 >= 1; x_7 >= 0] -> X) -> X) ->
            (x_11:int[x_2 <= x_11; x_1 <= x_11] -> X) -> X)
  
(4-1) Abstracting ... DONE!

(4-2) Checking HORS ... DONE!

Error trace::
  main_1444 ... --> 
  f_1446 ... --> 
  main_1043 ... --> 
  rev_1041 ... --> 
  h_1140 [2/2] ... --> 
  h_1140 [1/2] ... --> 
  k1_1141 [1/2] ... --> 
  k_k1_u_1201 ... --> 
  k2_1139 [2/2] ... --> 
  fail_1449 ... --> fail -->
  ERROR!

Spurious counter-example::
  0; 0; 0; 0; 1; 0; 0; 0; 1; 0

(4-3) Checking counter-example ... DONE!

(4-4) Discovering predicates ... 
begin AbsTypeInfer.refine(194748)[1]
  program:
    main_1444  | true = ((Random.int 0) f_1446)
    f_1446 x_1419 | true = (main_1043 x_1419
                                      (f_1447 x_1419))
    f_1447 x_1419 x_1416 | true = end
    f_main_1445 n_1044 k_main_1388 x_1391 | (x_1391 >= n_1044) = (k_main_1388 ())
    f_main_1445 n_1044 k_main_1388 x_1391 | (not (x_1391 >= n_1044)) = (
    fail_1450 true
              k_main_1388)
    fail_1448 b k | true = (fail ())
    fail_1449 b k | true = (fail ())
    fail_1450 b k | true = (fail ())
    h_1140 x_1035 y_1036 k_1037 k_h_1249 | (x_1035 = 0) = (k_1037 0
                                                                  y_1036
                                                                  k_h_1249)
    h_1140 x_1035 y_1036 k_1037 k_h_1249 | (not (x_1035 = 0)) = (h_1140 (
                                                                    x_1035 - 1)
                                                                    y_1036
                                                                    (k1_1141 k_1037)
                                                                    k_h_1249)
    k1_1141 k_1031 r1_1032 r2_1033 k_k1_1188 | (r2_1033 > 0) = (k_k1_u_1201 r1_1032
                                                                    r2_1033
                                                                    k_1031
                                                                    k_k1_1188
                                                                    ())
    k1_1141 k_1031 r1_1032 r2_1033 k_k1_1188 | (not (r2_1033 > 0)) = (
    fail_1448 true
              (k_k1_u_1201 r1_1032
                           r2_1033
                           k_1031
                           k_k1_1188))
    k2_1139 r1_1039 r2_1040 k_k2_1318 | (r2_1040 = 0) = (k_k2_u_1331 r1_1039
                                                                    r2_1040
                                                                    k_k2_1318
                                                                    ())
    k2_1139 r1_1039 r2_1040 k_k2_1318 | (not (r2_1040 = 0)) = (fail_1449 true
                                                                    (k_k2_u_1331 r1_1039
                                                                    r2_1040
                                                                    k_k2_1318))
    k_k1_u_1201 r1_1032 r2_1033 k_1031 k_k1_1188 x_1191 | true = (k_1031 (
                                                                    r1_1032 + 1)
                                                                    (r2_1033 - 1)
                                                                    k_k1_1188)
    k_k2_u_1331 r1_1039 r2_1040 k_k2_1318 x_1321 | true = (k_k2_1318 r1_1039)
    main_1043 n_1044 k_main_1388 | true = (rev_1041 n_1044
                                                    (f_main_1445 n_1044
                                                                 k_main_1388))
    rev_1041 x_1042 k_rev_1346 | true = (h_1140 x_1042
                                                x_1042
                                                k2_1139
                                                k_rev_1346)
    main_1444:X
    f_1446:int -> X
    f_1447:int -> unit -> X
    f_main_1445:int -> (unit -> X) -> int -> X
    fail_1448:bool -> (unit -> X) -> X
    fail_1449:bool -> (unit -> X) -> X
    fail_1450:bool -> (unit -> X) -> X
    h_1140:int -> int -> (int -> int -> (int -> X) -> X) -> (int -> X) -> X
    k1_1141:(int -> int -> (int -> X) -> X) -> int -> int -> (int -> X) -> X
    k2_1139:int -> int -> (int -> X) -> X
    k_k1_u_1201:int -> int -> (int -> int -> (int -> X) -> X) -> (int -> X) -> unit -> X
    k_k2_u_1331:int -> int -> (int -> X) -> unit -> X
    main_1043:int -> (unit -> X) -> X
    rev_1041:int -> (int -> X) -> X
  inlined functions: f_1446,f_1447,f_main_1445,k1_1141,k2_1139,k_k1_u_1201,k_k2_u_1331,main_1043,rev_1041
  counterexample: 0:0:0:0:1:0:0:0:1:0
  error traces:
    [true.nop(<f_1446@143:0> = var467)
     [true.(<main_1043@145:0> = <f_1446@143:0>)
      [true.(<rev_1041@147:0> = <main_1043@145:0>)
       [true.((<h_1140@149:0> = <rev_1041@147:0>) && (<h_1140@149:1> = <rev_1041@147:0>))
        [(not (<h_1140@149:0> = 0)).((<h_1140@152:0> = (<h_1140@149:0> - 1)) && (<h_1140@152:1> = <h_1140@149:1>))
         [(<h_1140@152:0> = 0).((<<h_1140@152:2>@155:0> = 0) && (<<h_1140@152:2>@155:1> = <h_1140@152:1>))
          [true.((<k1_1141@157:1> = <<h_1140@152:2>@155:0>) && (<k1_1141@157:2> = <<h_1140@152:2>@155:1>))
           [(<k1_1141@157:2> > 0).
            ((<k_k1_u_1201@160:0> = <k1_1141@157:1>) &&
             ((<k_k1_u_1201@160:1> = <k1_1141@157:2>) && (<k_k1_u_1201@160:4> = ())))
            [true.
             ((<<k_k1_u_1201@160:2>@162:0> = (<k_k1_u_1201@160:0> + 1)) &&
              (<<k_k1_u_1201@160:2>@162:1> = (<k_k1_u_1201@160:1> - 1)))
             [true.
              ((<<k1_1141@157:0>@164:0> = <<k_k1_u_1201@160:2>@162:0>) &&
               (<<k1_1141@157:0>@164:1> = <<k_k1_u_1201@160:2>@162:1>))
              [true.
               ((<<h_1140@149:2>@166:0> = <<k1_1141@157:0>@164:0>) &&
                (<<h_1140@149:2>@166:1> = <<k1_1141@157:0>@164:1>))
               [true.((<k2_1139@168:0> = <<h_1140@149:2>@166:0>) && (<k2_1139@168:1> = <<h_1140@149:2>@166:1>))
                [(not (<k2_1139@168:1> = 0)).(<fail_1449@171:0> = true)[true.error
  begin RefTypeInfer.infer_etrs(194749)[2]
    horn clauses:
      P[<fail_1449@171:0>](<fail_1449@171:0>:bool)|- bot
      
      P[<k2_1139@168:1>](<k2_1139@168:0>:int,<k2_1139@168:1>:int), ((<k2_1139@168:1> <> 0) && <fail_1449@171:0>)
      |- P[<fail_1449@171:0>](<fail_1449@171:0>:bool)
      
      P[<rev_1041@147:0>](<h_1140@149:0>:int),
      P[<<h_1140@149:2>@166:1>](<h_1140@149:0>:int,<h_1140@149:0>:int,<k2_1139@168:0>:int,<k2_1139@168:1>:int)|- P[<k2_1139@168:1>](
      <k2_1139@168:0>:int,<k2_1139@168:1>:int)
      
      P[<h_1140@149:1>](<h_1140@149:0>:int,<h_1140@149:1>:int),
      P[<<k1_1141@157:0>@164:1>](<<h_1140@149:2>@166:0>:int,<<h_1140@149:2>@166:1>:int), (
      <h_1140@149:0> <> 0)
      |- P[<<h_1140@149:2>@166:1>](<h_1140@149:0>:int,<h_1140@149:1>:int,
                                   <<h_1140@149:2>@166:0>:int,<<h_1140@149:2>@166:1>:int)
      
      P[<k1_1141@157:2>](<k_k1_u_1201@160:0>:int,<k_k1_u_1201@160:1>:int),
      P[<<k_k1_u_1201@160:2>@162:1>](<k_k1_u_1201@160:0>:int,<k_k1_u_1201@160:1>:int,<<k1_1141@157:0>@164:0>:int,<<k1_1141@157:0>@164:1>:int),
      (<k_k1_u_1201@160:1> > 0) |- P[<<k1_1141@157:0>@164:1>](<<k1_1141@157:0>@164:0>:int,
                                                              <<k1_1141@157:0>@164:1>:int)
      
      P[<k_k1_u_1201@160:4>](<k_k1_u_1201@160:0>:int,<k_k1_u_1201@160:1>:int,<k_k1_u_1201@160:4>:unit),
      ((<<k_k1_u_1201@160:2>@162:0> = (1 + <k_k1_u_1201@160:0>)) &&
       ((1 + <<k_k1_u_1201@160:2>@162:1>) = <k_k1_u_1201@160:1>))
      |- P[<<k_k1_u_1201@160:2>@162:1>](<k_k1_u_1201@160:0>:int,<k_k1_u_1201@160:1>:int,
                                        <<k_k1_u_1201@160:2>@162:0>:int,
                                        <<k_k1_u_1201@160:2>@162:1>:int)
      
      P[<k1_1141@157:2>](<k_k1_u_1201@160:0>:int,<k_k1_u_1201@160:1>:int), (
      <k_k1_u_1201@160:1> > 0)
      |- P[<k_k1_u_1201@160:4>](<k_k1_u_1201@160:0>:int,<k_k1_u_1201@160:1>:int,
                                <k_k1_u_1201@160:4>:unit)
      
      P[<h_1140@149:1>](<h_1140@149:0>:int,<h_1140@152:1>:int),
      P[<<h_1140@152:2>@155:1>]((-1 + <h_1140@149:0>):int,<h_1140@152:1>:int,<k1_1141@157:1>:int,<k1_1141@157:2>:int),
      (<h_1140@149:0> <> 0) |- P[<k1_1141@157:2>](<k1_1141@157:1>:int,
                                                  <k1_1141@157:2>:int)
      
      P[<h_1140@152:1>](<h_1140@152:0>:int,<h_1140@152:1>:int),
      ((<h_1140@152:0> = 0) && ((<<h_1140@152:2>@155:0> = 0) && (<<h_1140@152:2>@155:1> = <h_1140@152:1>)))
      |- P[<<h_1140@152:2>@155:1>](<h_1140@152:0>:int,<h_1140@152:1>:int,
                                   <<h_1140@152:2>@155:0>:int,<<h_1140@152:2>@155:1>:int)
      
      P[<h_1140@149:1>]((1 + <h_1140@152:0>):int,<h_1140@152:1>:int), (
      (1 + <h_1140@152:0>) <> 0) |- P[<h_1140@152:1>](<h_1140@152:0>:int,
                                                      <h_1140@152:1>:int)
      
      P[<rev_1041@147:0>](<h_1140@149:1>:int), (<h_1140@149:1> = <h_1140@149:0>)
      |- P[<h_1140@149:1>](<h_1140@149:0>:int,<h_1140@149:1>:int)
      
      P[<main_1043@145:0>](<rev_1041@147:0>:int)|- P[<rev_1041@147:0>](<rev_1041@147:0>:int)
      
      P[<f_1446@143:0>](<main_1043@145:0>:int)|- P[<main_1043@145:0>](<main_1043@145:0>:int)
      
      |- P[<f_1446@143:0>](<f_1446@143:0>:int)
    call trees:
      <main_1444@140>
        <f_1446@143>
          <main_1043@145>
            <rev_1041@147>
              <h_1140@149>
                <h_1140@152>
                </<h_1140@152:2>@155>
                <k1_1141@157>
                  <k_k1_u_1201@160>
                  </<k_k1_u_1201@160:2>@162>
                </<k1_1141@157:0>@164>
              </<h_1140@149:2>@166>
              <k2_1139@168>
                <fail_1449@171>
    inlined horn clauses:
      P[<fail_1449@171:0>](<fail_1449@171:0>:bool)|- bot
      
      P[<<h_1140@149:2>@166:1>](var476:int,var476:int,<k2_1139@168:0>:int,<k2_1139@168:1>:int),
      ((<k2_1139@168:1> <> 0) && <fail_1449@171:0>) |- P[<fail_1449@171:0>](
      <fail_1449@171:0>:bool)
      
      P[<h_1140@149:1>](<h_1140@149:0>:int,<h_1140@149:1>:int),
      P[<h_1140@149:1>](var478:int,var477:int),
      P[<<h_1140@152:2>@155:1>]((-1 + var478):int,var477:int,(-1 + <<h_1140@149:2>@166:0>):int,(
                                1 + <<h_1140@149:2>@166:1>):int),
      ((var478 <> 0) && ((<h_1140@149:0> <> 0) && ((1 + <<h_1140@149:2>@166:1>) > 0)))
      |- P[<<h_1140@149:2>@166:1>](<h_1140@149:0>:int,<h_1140@149:1>:int,
                                   <<h_1140@149:2>@166:0>:int,<<h_1140@149:2>@166:1>:int)
      
      P[<h_1140@152:1>](<h_1140@152:0>:int,<h_1140@152:1>:int),
      ((<h_1140@152:0> = 0) && ((<<h_1140@152:2>@155:0> = 0) && (<<h_1140@152:2>@155:1> = <h_1140@152:1>)))
      |- P[<<h_1140@152:2>@155:1>](<h_1140@152:0>:int,<h_1140@152:1>:int,
                                   <<h_1140@152:2>@155:0>:int,<<h_1140@152:2>@155:1>:int)
      
      P[<h_1140@149:1>]((1 + <h_1140@152:0>):int,<h_1140@152:1>:int), (
      (1 + <h_1140@152:0>) <> 0) |- P[<h_1140@152:1>](<h_1140@152:0>:int,
                                                      <h_1140@152:1>:int)
      
       (<h_1140@149:1> = <h_1140@149:0>) |- P[<h_1140@149:1>](<h_1140@149:0>:int,
                                                              <h_1140@149:1>:int)
    begin ParamSubstInfer.infer(197410)[3]
      
    end ParamSubstInfer.infer(197410)[3] (1.958702 sec.)
    inferred extra parameters:
      
    begin RefTypeInfer.elim_coeffs(197412)[3]
      
    end RefTypeInfer.elim_coeffs(197412)[3] (0.003000 sec.)
    begin GenHcSolver.solve(197777)[3]
      Horn clauses:
        P[<fail_1449@171:0>](<fail_1449@171:0>:bool)|- bot
        
        P[<<h_1140@149:2>@166:1>](var476:int,var476:int,<k2_1139@168:0>:int,<k2_1139@168:1>:int),
        ((<k2_1139@168:1> <> 0) && <fail_1449@171:0>) |- P[<fail_1449@171:0>](
        <fail_1449@171:0>:bool)
        
        P[<h_1140@149:1>](<h_1140@149:0>:int,<h_1140@149:1>:int),
        P[<h_1140@149:1>](var478:int,var477:int),
        P[<<h_1140@152:2>@155:1>]((-1 + var478):int,var477:int,(-1 + <<h_1140@149:2>@166:0>):int,(
                                  1 + <<h_1140@149:2>@166:1>):int),
        ((var478 <> 0) && ((<h_1140@149:0> <> 0) && ((1 + <<h_1140@149:2>@166:1>) > 0)))
        |- P[<<h_1140@149:2>@166:1>](<h_1140@149:0>:int,<h_1140@149:1>:int,
                                     <<h_1140@149:2>@166:0>:int,<<h_1140@149:2>@166:1>:int)
        
        P[<h_1140@152:1>](<h_1140@152:0>:int,<h_1140@152:1>:int),
        ((<h_1140@152:0> = 0) && ((<<h_1140@152:2>@155:0> = 0) && (<<h_1140@152:2>@155:1> = <h_1140@152:1>)))
        |- P[<<h_1140@152:2>@155:1>](<h_1140@152:0>:int,<h_1140@152:1>:int,
                                     <<h_1140@152:2>@155:0>:int,<<h_1140@152:2>@155:1>:int)
        
        P[<h_1140@149:1>]((1 + <h_1140@152:0>):int,<h_1140@152:1>:int), (
        (1 + <h_1140@152:0>) <> 0) |- P[<h_1140@152:1>](<h_1140@152:0>:int,
                                                        <h_1140@152:1>:int)
        
         (<h_1140@149:1> = <h_1140@149:0>) |- P[<h_1140@149:1>](<h_1140@149:0>:int,
                                                                <h_1140@149:1>:int)
      lower bounds:
        P[<h_1140@149:1>](<h_1140@149:0>:int,<h_1140@149:1>:int) = (<h_1140@149:1> = <h_1140@149:0>)
        P[<h_1140@152:1>](<h_1140@152:0>:int,<h_1140@152:1>:int) =
        (((1 + <h_1140@152:0>) <> 0) && (<h_1140@152:1> = (1 + <h_1140@152:0>)))
        P[<<h_1140@152:2>@155:1>](<h_1140@152:0>:int,<h_1140@152:1>:int,<<h_1140@152:2>@155:0>:int,<<h_1140@152:2>@155:1>:int) =
        ((<h_1140@152:0> = 0) &&
         ((<<h_1140@152:2>@155:0> = 0) &&
          ((<h_1140@152:1> = (1 + <h_1140@152:0>)) && (<<h_1140@152:2>@155:1> = <h_1140@152:1>))))
        P[<<h_1140@149:2>@166:1>](<h_1140@149:0>:int,<h_1140@149:1>:int,<<h_1140@149:2>@166:0>:int,<<h_1140@149:2>@166:1>:int) =
        ((<<h_1140@149:2>@166:1> = 0) &&
         ((<<h_1140@149:2>@166:0> = 1) && ((<h_1140@149:1> = <h_1140@149:0>) && (<h_1140@149:0> <> 0))))
        P[<fail_1449@171:0>](<fail_1449@171:0>:bool) = false
      upper bounds:
        P[<<h_1140@149:2>@166:1>](var490:int,var491:int,var492:int,var493:int) = ((var493 = 0) || (var490 <> var491))
        P[<<h_1140@152:2>@155:1>](var483:int,var484:int,var485:int,var486:int) =
        (((1 + var483) <> var484) || ((var486 <= 1) || (var484 = 0)))
      begin GenHcSolver.classify_pids(204685)[4]
        output:
          [<<h_1140@152:2>@155:1>;<<h_1140@149:2>@166:1>]
      end GenHcSolver.classify_pids(204685)[4] (0.001000 sec.)
      begin ApronInterface.convex_hull_interpolate(204752)[4]
        lb:(((<h_1140@152:0> = 0) &&
             ((<<h_1140@152:2>@155:0> = 0) &&
              ((<h_1140@152:1> = (1 + <h_1140@152:0>)) && (<<h_1140@152:2>@155:1> = <h_1140@152:1>)))) ||
            ((<<h_1140@152:2>@155:1> = 0) &&
             ((<<h_1140@152:2>@155:0> = 1) && ((<h_1140@152:1> = <h_1140@152:0>) && (<h_1140@152:0> <> 0)))))
        nub:((not (((1 + <h_1140@152:0>) <> <h_1140@152:1>) || ((<<h_1140@152:2>@155:1> <= 1) || (<h_1140@152:1> = 0)))) ||
             (not ((<<h_1140@152:2>@155:1> = 0) || (<h_1140@152:0> <> <h_1140@152:1>))))
        lb':(((<h_1140@152:0> = 0) &&
              ((<<h_1140@152:2>@155:0> = 0) &&
               ((<h_1140@152:1> = (1 + <h_1140@152:0>)) && (<<h_1140@152:2>@155:1> = <h_1140@152:1>)))) ||
             ((<<h_1140@152:2>@155:1> = 0) &&
              ((<<h_1140@152:2>@155:0> = 1) && ((<h_1140@152:1> = <h_1140@152:0>) && (<h_1140@152:0> <> 0)))))
        nub':((not
                 (((1 + <h_1140@152:0>) <> <h_1140@152:1>) || ((<<h_1140@152:2>@155:1> <= 1) || (<h_1140@152:1> = 0)))) ||
              (not ((<<h_1140@152:2>@155:1> = 0) || (<h_1140@152:0> <> <h_1140@152:1>))))
        begin InterpProver.interpolate(204753)[5]
          begin InterpProver.interpolate_fresh(204754)[6]
            begin InterpProver.interpolate_log(204755)[7]
              input1: (((<h_1140@152:0> = 0) &&
                        ((<<h_1140@152:2>@155:0> = 0) &&
                         ((<h_1140@152:1> = (1 + <h_1140@152:0>)) && (<<h_1140@152:2>@155:1> = <h_1140@152:1>)))) ||
                       ((<<h_1140@152:2>@155:1> = 0) &&
                        ((<<h_1140@152:2>@155:0> = 1) && ((<h_1140@152:1> = <h_1140@152:0>) && (<h_1140@152:0> <> 0)))))
              input2: ((not
                          (((1 + <h_1140@152:0>) <> <h_1140@152:1>) ||
                           ((<<h_1140@152:2>@155:1> <= 1) || (<h_1140@152:1> = 0)))) ||
                       (not ((<<h_1140@152:2>@155:1> = 0) || (<h_1140@152:0> <> <h_1140@152:1>))))
              begin InterpProver.interpolate_check(204756)[8]
                begin InterpProver.interpolate_simplify(204757)[9]
                  begin InterpProver.interpolate_quick(205032)[10]
                    begin CsisatInterface.interpolate_csisat_wrap(205041)[11]
                      begin CsisatInterface.interpolate_csisat_post_process(205042)[12]
                        begin CsisatInterface.interpolate_csisat_log(205043)[13]
                          input1: ((not 0 = v_sep_h_1140_sep_152_sep_0 & 0 = v_sep_h_1140_sep_152_sep_2_sep_155_sep_1 & 1 = v_sep_h_1140_sep_152_sep_2_sep_155_sep_0 & v_sep_h_1140_sep_152_sep_0 = v_sep_h_1140_sep_152_sep_1) | (0 = v_sep_h_1140_sep_152_sep_0 & 0 = v_sep_h_1140_sep_152_sep_2_sep_155_sep_0 & v_sep_h_1140_sep_152_sep_1 = v_sep_h_1140_sep_152_sep_2_sep_155_sep_1 & v_sep_h_1140_sep_152_sep_1 = (1 + v_sep_h_1140_sep_152_sep_0)))
                          input2: ((not 0 = v_sep_h_1140_sep_152_sep_1 & v_sep_h_1140_sep_152_sep_1 = (1 + v_sep_h_1140_sep_152_sep_0) & 2 <= v_sep_h_1140_sep_152_sep_2_sep_155_sep_1) | (not 0 = v_sep_h_1140_sep_152_sep_2_sep_155_sep_1 & v_sep_h_1140_sep_152_sep_0 = v_sep_h_1140_sep_152_sep_1))
                          begin CsisatInterface.interpolate_csisat_raw(205044)[14]
                            
                          end CsisatInterface.interpolate_csisat_raw(205044)[14] (0.002999 sec.)
                          output: ((((((0 = v_sep_h_1140_sep_152_sep_2_sep_155_sep_1 & 2*v_sep_h_1140_sep_152_sep_2_sep_155_sep_1 <= 2) | not v_sep_h_1140_sep_152_sep_0 = v_sep_h_1140_sep_152_sep_1) & (v_sep_h_1140_sep_152_sep_0 = v_sep_h_1140_sep_152_sep_1 | 2*v_sep_h_1140_sep_152_sep_2_sep_155_sep_1 <= 2)) | not v_sep_h_1140_sep_152_sep_1 = (1 + v_sep_h_1140_sep_152_sep_0)) & v_sep_h_1140_sep_152_sep_1 = (1 + v_sep_h_1140_sep_152_sep_0)) | ((not 0 = v_sep_h_1140_sep_152_sep_2_sep_155_sep_1 | v_sep_h_1140_sep_152_sep_2_sep_155_sep_1 <= 0) & 0 = v_sep_h_1140_sep_152_sep_2_sep_155_sep_1))
                          
                        end CsisatInterface.interpolate_csisat_log(205043)[13] (0.002999 sec.)
                        after simplification: ((((((0 = v_sep_h_1140_sep_152_sep_2_sep_155_sep_1 & 2*v_sep_h_1140_sep_152_sep_2_sep_155_sep_1 <= 2) | not v_sep_h_1140_sep_152_sep_0 = v_sep_h_1140_sep_152_sep_1) & (v_sep_h_1140_sep_152_sep_0 = v_sep_h_1140_sep_152_sep_1 | 2*v_sep_h_1140_sep_152_sep_2_sep_155_sep_1 <= 2)) | not v_sep_h_1140_sep_152_sep_1 = (1 + v_sep_h_1140_sep_152_sep_0)) & v_sep_h_1140_sep_152_sep_1 = (1 + v_sep_h_1140_sep_152_sep_0)) | ((not 0 = v_sep_h_1140_sep_152_sep_2_sep_155_sep_1 | v_sep_h_1140_sep_152_sep_2_sep_155_sep_1 <= 0) & 0 = v_sep_h_1140_sep_152_sep_2_sep_155_sep_1))
                        after dnf conversion: ((not v_sep_h_1140_sep_152_sep_1 = (1 + v_sep_h_1140_sep_152_sep_0) & v_sep_h_1140_sep_152_sep_1 = (1 + v_sep_h_1140_sep_152_sep_0)) | (0 = v_sep_h_1140_sep_152_sep_2_sep_155_sep_1 & 2*v_sep_h_1140_sep_152_sep_2_sep_155_sep_1 <= 2 & v_sep_h_1140_sep_152_sep_0 = v_sep_h_1140_sep_152_sep_1 & v_sep_h_1140_sep_152_sep_1 = (1 + v_sep_h_1140_sep_152_sep_0)) | (0 = v_sep_h_1140_sep_152_sep_2_sep_155_sep_1 & 2*v_sep_h_1140_sep_152_sep_2_sep_155_sep_1 <= 2 & 2*v_sep_h_1140_sep_152_sep_2_sep_155_sep_1 <= 2 & v_sep_h_1140_sep_152_sep_1 = (1 + v_sep_h_1140_sep_152_sep_0)) | (not v_sep_h_1140_sep_152_sep_0 = v_sep_h_1140_sep_152_sep_1 & v_sep_h_1140_sep_152_sep_0 = v_sep_h_1140_sep_152_sep_1 & v_sep_h_1140_sep_152_sep_1 = (1 + v_sep_h_1140_sep_152_sep_0)) | (not v_sep_h_1140_sep_152_sep_0 = v_sep_h_1140_sep_152_sep_1 & 2*v_sep_h_1140_sep_152_sep_2_sep_155_sep_1 <= 2 & v_sep_h_1140_sep_152_sep_1 = (1 + v_sep_h_1140_sep_152_sep_0)) | (v_sep_h_1140_sep_152_sep_2_sep_155_sep_1 <= 0 & 0 = v_sep_h_1140_sep_152_sep_2_sep_155_sep_1) | (not 0 = v_sep_h_1140_sep_152_sep_2_sep_155_sep_1 & 0 = v_sep_h_1140_sep_152_sep_2_sep_155_sep_1))
                        
                      end CsisatInterface.interpolate_csisat_post_process(205042)[12] (0.003999 sec.)
                      
                    end CsisatInterface.interpolate_csisat_wrap(205041)[11] (0.003999 sec.)
                    
                  end InterpProver.interpolate_quick(205032)[10] (0.004999 sec.)
                  begin minimizing # of disjunctions(205184)[10]
                    input: ((<<h_1140@152:2>@155:1> = 0) ||
                            (((<<h_1140@152:2>@155:1> = 0) && (<h_1140@152:1> = (1 + <h_1140@152:0>))) ||
                             (((1 + <h_1140@152:0>) = <h_1140@152:1>) && (<<h_1140@152:2>@155:1> <= 1))))
                    output: ((((1 + <h_1140@152:0>) = <h_1140@152:1>) && (<<h_1140@152:2>@155:1> <= 1)) ||
                             (<<h_1140@152:2>@155:1> = 0))
                  end minimizing # of disjunctions(205184)[10] (0.002000 sec.)
                  begin minimizing # of conjunctions(205259)[10]
                    input: (((1 + <h_1140@152:0>) = <h_1140@152:1>) && (<<h_1140@152:2>@155:1> <= 1))
                    output: ((<<h_1140@152:2>@155:1> <= 1) && ((1 + <h_1140@152:0>) = <h_1140@152:1>))
                  end minimizing # of conjunctions(205259)[10] (0.001000 sec.)
                  
                end InterpProver.interpolate_simplify(204757)[9] (0.008999 sec.)
                
              end InterpProver.interpolate_check(204756)[8] (0.009998 sec.)
              output: (((<<h_1140@152:2>@155:1> <= 1) && ((1 + <h_1140@152:0>) = <h_1140@152:1>)) ||
                       (<<h_1140@152:2>@155:1> = 0))
            end InterpProver.interpolate_log(204755)[7] (0.010998 sec.)
            
          end InterpProver.interpolate_fresh(204754)[6] (0.010998 sec.)
          
        end InterpProver.interpolate(204753)[5] (0.010998 sec.)
        output:
          P[<<h_1140@152:2>@155:1>](<h_1140@152:0>:int,<h_1140@152:1>:int,<<h_1140@152:2>@155:0>:int,<<h_1140@152:2>@155:1>:int) =
          (((<<h_1140@152:2>@155:1> <= 1) && ((1 + <h_1140@152:0>) = <h_1140@152:1>)) || (<<h_1140@152:2>@155:1> = 0))
          P[<<h_1140@149:2>@166:1>](<h_1140@152:0>:int,<h_1140@152:1>:int,<<h_1140@152:2>@155:0>:int,<<h_1140@152:2>@155:1>:int) =
          (((<<h_1140@152:2>@155:1> <= 1) && ((1 + <h_1140@152:0>) = <h_1140@152:1>)) || (<<h_1140@152:2>@155:1> = 0))
      end ApronInterface.convex_hull_interpolate(204752)[4] (0.010998 sec.)
      Horn clauses:
        P[<fail_1449@171:0>](<fail_1449@171:0>:bool)|- bot
        
        P[<h_1140@152:1>](0:int,<<h_1140@152:2>@155:1>:int),
        ((<<h_1140@152:2>@155:1> <> 0) && (<<h_1140@152:2>@155:1> <> 1)) |- bot
        
        P[<h_1140@149:1>]((1 + <h_1140@152:0>):int,<h_1140@152:1>:int), (
        (1 + <h_1140@152:0>) <> 0) |- P[<h_1140@152:1>](<h_1140@152:0>:int,
                                                        <h_1140@152:1>:int)
        
         (<h_1140@149:1> = <h_1140@149:0>) |- P[<h_1140@149:1>](<h_1140@149:0>:int,
                                                                <h_1140@149:1>:int)
      lower bounds:
        P[<h_1140@149:1>](<h_1140@149:0>:int,<h_1140@149:1>:int) = (<h_1140@149:1> = <h_1140@149:0>)
        P[<fail_1449@171:0>](var497:bool) = false
        P[<h_1140@152:1>](<h_1140@152:0>:int,<h_1140@152:1>:int) =
        (((1 + <h_1140@152:0>) <> 0) && (<h_1140@152:1> = (1 + <h_1140@152:0>)))
      upper bounds:
        P[<h_1140@152:1>](var504:int,var505:int) = ((var504 <> 0) || ((var505 = 0) || (var505 = 1)))
        P[<h_1140@149:1>](var500:int,var501:int) = ((var500 <> 1) || ((var501 = 0) || (var501 = 1)))
      begin GenHcSolver.classify_pids(209879)[4]
        output:
          [<h_1140@152:1>],[<h_1140@149:1>]
      end GenHcSolver.classify_pids(209879)[4] (0.001000 sec.)
      lb:(((1 + <h_1140@152:0>) <> 0) && (<h_1140@152:1> = (1 + <h_1140@152:0>)))
      nub:(not ((<h_1140@152:0> <> 0) || ((<h_1140@152:1> = 0) || (<h_1140@152:1> = 1))))
      begin ApronInterface.convex_hull_interpolate(209974)[4]
        lb:(((1 + <h_1140@152:0>) <> 0) && (<h_1140@152:1> = (1 + <h_1140@152:0>)))
        nub:(not ((<h_1140@152:0> <> 0) || ((<h_1140@152:1> = 0) || (<h_1140@152:1> = 1))))
        lb':(((1 + <h_1140@152:0>) <> 0) && (<h_1140@152:1> = (1 + <h_1140@152:0>)))
        nub':(not ((<h_1140@152:0> <> 0) || ((<h_1140@152:1> = 0) || (<h_1140@152:1> = 1))))
        begin InterpProver.interpolate(209975)[5]
          begin InterpProver.interpolate_fresh(209976)[6]
            begin InterpProver.interpolate_log(209977)[7]
              input1: (((1 + <h_1140@152:0>) <> 0) && (<h_1140@152:1> = (1 + <h_1140@152:0>)))
              input2: (not ((<h_1140@152:0> <> 0) || ((<h_1140@152:1> = 0) || (<h_1140@152:1> = 1))))
              begin InterpProver.interpolate_check(209978)[8]
                begin InterpProver.interpolate_simplify(209979)[9]
                  begin InterpProver.interpolate_quick(210074)[10]
                    begin CsisatInterface.interpolate_csisat_wrap(210083)[11]
                      begin CsisatInterface.interpolate_csisat_post_process(210084)[12]
                        begin CsisatInterface.interpolate_csisat_log(210085)[13]
                          input1: (not 0 = (1 + v_sep_h_1140_sep_152_sep_0) & v_sep_h_1140_sep_152_sep_1 = (1 + v_sep_h_1140_sep_152_sep_0))
                          input2: (not 0 = v_sep_h_1140_sep_152_sep_1 & not 1 = v_sep_h_1140_sep_152_sep_1 & 0 = v_sep_h_1140_sep_152_sep_0)
                          begin CsisatInterface.interpolate_csisat_raw(210086)[14]
                            
                          end CsisatInterface.interpolate_csisat_raw(210086)[14] (0.001000 sec.)
                          output: v_sep_h_1140_sep_152_sep_1 = (1 + v_sep_h_1140_sep_152_sep_0)
                          
                        end CsisatInterface.interpolate_csisat_log(210085)[13] (0.001000 sec.)
                        after simplification: v_sep_h_1140_sep_152_sep_1 = (1 + v_sep_h_1140_sep_152_sep_0)
                        after dnf conversion: ((v_sep_h_1140_sep_152_sep_1 = (1 + v_sep_h_1140_sep_152_sep_0)))
                        
                      end CsisatInterface.interpolate_csisat_post_process(210084)[12] (0.001000 sec.)
                      
                    end CsisatInterface.interpolate_csisat_wrap(210083)[11] (0.001000 sec.)
                    
                  end InterpProver.interpolate_quick(210074)[10] (0.002000 sec.)
                  
                end InterpProver.interpolate_simplify(209979)[9] (0.003000 sec.)
                
              end InterpProver.interpolate_check(209978)[8] (0.004000 sec.)
              output: (<h_1140@152:1> = (1 + <h_1140@152:0>))
            end InterpProver.interpolate_log(209977)[7] (0.004000 sec.)
            
          end InterpProver.interpolate_fresh(209976)[6] (0.004000 sec.)
          
        end InterpProver.interpolate(209975)[5] (0.004000 sec.)
        output:
          P[<h_1140@152:1>](<h_1140@152:0>:int,<h_1140@152:1>:int) = (<h_1140@152:1> = (1 + <h_1140@152:0>))
      end ApronInterface.convex_hull_interpolate(209974)[4] (0.004000 sec.)
      Horn clauses:
        P[<fail_1449@171:0>](<fail_1449@171:0>:bool)|- bot
        
        P[<h_1140@149:1>]((1 + <h_1140@152:0>):int,<h_1140@152:1>:int),
        (((1 + <h_1140@152:0>) <> 0) && (<h_1140@152:1> <> (1 + <h_1140@152:0>))) |- bot
        
         (<h_1140@149:1> = <h_1140@149:0>) |- P[<h_1140@149:1>](<h_1140@149:0>:int,
                                                                <h_1140@149:1>:int)
      lower bounds:
        P[<h_1140@149:1>](<h_1140@149:0>:int,<h_1140@149:1>:int) = (<h_1140@149:1> = <h_1140@149:0>)
        P[<fail_1449@171:0>](var507:bool) = false
      upper bounds:
        P[<fail_1449@171:0>](var510:bool) = true
      begin GenHcSolver.classify_pids(210834)[4]
        output:
          [<fail_1449@171:0>]
      end GenHcSolver.classify_pids(210834)[4] (0.000000 sec.)
      lb:false
      nub:false
      begin ApronInterface.convex_hull_interpolate(210837)[4]
        lb:false
        nub:false
        lb':false
        nub':false
        begin InterpProver.interpolate(210838)[5]
          begin InterpProver.interpolate_fresh(210839)[6]
            begin InterpProver.interpolate_log(210840)[7]
              input1: false
              input2: false
              begin InterpProver.interpolate_check(210841)[8]
                begin InterpProver.interpolate_simplify(210842)[9]
                  begin InterpProver.interpolate_quick(210855)[10]
                    
                  end InterpProver.interpolate_quick(210855)[10] (0.000000 sec.)
                  begin minimizing # of disjunctions(210859)[10]
                    input: false
                    output: false
                  end minimizing # of disjunctions(210859)[10] (0.000000 sec.)
                  
                end InterpProver.interpolate_simplify(210842)[9] (0.000000 sec.)
                
              end InterpProver.interpolate_check(210841)[8] (0.000000 sec.)
              output: false
            end InterpProver.interpolate_log(210840)[7] (0.000000 sec.)
            
          end InterpProver.interpolate_fresh(210839)[6] (0.000000 sec.)
          
        end InterpProver.interpolate(210838)[5] (0.000000 sec.)
        output:
          P[<fail_1449@171:0>](var507:bool) = false
      end ApronInterface.convex_hull_interpolate(210837)[4] (0.000000 sec.)
      Horn clauses:
        P[<h_1140@149:1>]((1 + <h_1140@152:0>):int,<h_1140@152:1>:int),
        (((1 + <h_1140@152:0>) <> 0) && (<h_1140@152:1> <> (1 + <h_1140@152:0>))) |- bot
        
         (<h_1140@149:1> = <h_1140@149:0>) |- P[<h_1140@149:1>](<h_1140@149:0>:int,
                                                                <h_1140@149:1>:int)
      lower bounds:
        P[<h_1140@149:1>](<h_1140@149:0>:int,<h_1140@149:1>:int) = (<h_1140@149:1> = <h_1140@149:0>)
      upper bounds:
        P[<h_1140@149:1>](var511:int,var512:int) = ((var512 = var511) || (var511 = 0))
      begin GenHcSolver.classify_pids(211760)[4]
        output:
          [<h_1140@149:1>]
      end GenHcSolver.classify_pids(211760)[4] (0.000000 sec.)
      lb:(<h_1140@149:1> = <h_1140@149:0>)
      nub:(not ((<h_1140@149:1> = <h_1140@149:0>) || (<h_1140@149:0> = 0)))
      begin ApronInterface.convex_hull_interpolate(211763)[4]
        lb:(<h_1140@149:1> = <h_1140@149:0>)
        nub:(not ((<h_1140@149:1> = <h_1140@149:0>) || (<h_1140@149:0> = 0)))
        lb':(<h_1140@149:1> = <h_1140@149:0>)
        nub':(not ((<h_1140@149:1> = <h_1140@149:0>) || (<h_1140@149:0> = 0)))
        begin InterpProver.interpolate(211764)[5]
          begin InterpProver.interpolate_fresh(211765)[6]
            begin InterpProver.interpolate_log(211766)[7]
              input1: (<h_1140@149:1> = <h_1140@149:0>)
              input2: (not ((<h_1140@149:1> = <h_1140@149:0>) || (<h_1140@149:0> = 0)))
              begin InterpProver.interpolate_check(211767)[8]
                begin InterpProver.interpolate_simplify(211768)[9]
                  begin InterpProver.interpolate_quick(211809)[10]
                    begin CsisatInterface.interpolate_csisat_wrap(211818)[11]
                      begin CsisatInterface.interpolate_csisat_post_process(211819)[12]
                        begin CsisatInterface.interpolate_csisat_log(211820)[13]
                          input1: v_sep_h_1140_sep_149_sep_0 = v_sep_h_1140_sep_149_sep_1
                          input2: (not 0 = v_sep_h_1140_sep_149_sep_0 & not v_sep_h_1140_sep_149_sep_0 = v_sep_h_1140_sep_149_sep_1)
                          begin CsisatInterface.interpolate_csisat_raw(211821)[14]
                            
                          end CsisatInterface.interpolate_csisat_raw(211821)[14] (0.000000 sec.)
                          output: v_sep_h_1140_sep_149_sep_0 = v_sep_h_1140_sep_149_sep_1
                          
                        end CsisatInterface.interpolate_csisat_log(211820)[13] (0.000000 sec.)
                        after simplification: v_sep_h_1140_sep_149_sep_0 = v_sep_h_1140_sep_149_sep_1
                        after dnf conversion: ((v_sep_h_1140_sep_149_sep_0 = v_sep_h_1140_sep_149_sep_1))
                        
                      end CsisatInterface.interpolate_csisat_post_process(211819)[12] (0.000000 sec.)
                      
                    end CsisatInterface.interpolate_csisat_wrap(211818)[11] (0.000000 sec.)
                    
                  end InterpProver.interpolate_quick(211809)[10] (0.001000 sec.)
                  
                end InterpProver.interpolate_simplify(211768)[9] (0.001000 sec.)
                
              end InterpProver.interpolate_check(211767)[8] (0.001000 sec.)
              output: (<h_1140@149:0> = <h_1140@149:1>)
            end InterpProver.interpolate_log(211766)[7] (0.001000 sec.)
            
          end InterpProver.interpolate_fresh(211765)[6] (0.001000 sec.)
          
        end InterpProver.interpolate(211764)[5] (0.001000 sec.)
        output:
          P[<h_1140@149:1>](<h_1140@149:0>:int,<h_1140@149:1>:int) = (<h_1140@149:0> = <h_1140@149:1>)
      end ApronInterface.convex_hull_interpolate(211763)[4] (0.001000 sec.)
      begin HcSolver.check_validity(211949)[4]
        input:
          P[<fail_1449@171:0>](<fail_1449@171:0>:bool)|- bot
          
          P[<<h_1140@149:2>@166:1>](var476:int,var476:int,<k2_1139@168:0>:int,<k2_1139@168:1>:int),
          ((<k2_1139@168:1> <> 0) && <fail_1449@171:0>) |- P[<fail_1449@171:0>](
          <fail_1449@171:0>:bool)
          
          P[<h_1140@149:1>](<h_1140@149:0>:int,<h_1140@149:1>:int),
          P[<h_1140@149:1>](var478:int,var477:int),
          P[<<h_1140@152:2>@155:1>]((-1 + var478):int,var477:int,(-1 + <<h_1140@149:2>@166:0>):int,(
                                    1 + <<h_1140@149:2>@166:1>):int),
          ((var478 <> 0) && ((<h_1140@149:0> <> 0) && ((1 + <<h_1140@149:2>@166:1>) > 0)))
          |- P[<<h_1140@149:2>@166:1>](<h_1140@149:0>:int,<h_1140@149:1>:int,
                                       <<h_1140@149:2>@166:0>:int,<<h_1140@149:2>@166:1>:int)
          
          P[<h_1140@152:1>](<h_1140@152:0>:int,<h_1140@152:1>:int),
          ((<h_1140@152:0> = 0) && ((<<h_1140@152:2>@155:0> = 0) && (<<h_1140@152:2>@155:1> = <h_1140@152:1>)))
          |- P[<<h_1140@152:2>@155:1>](<h_1140@152:0>:int,<h_1140@152:1>:int,
                                       <<h_1140@152:2>@155:0>:int,<<h_1140@152:2>@155:1>:int)
          
          P[<h_1140@149:1>]((1 + <h_1140@152:0>):int,<h_1140@152:1>:int), (
          (1 + <h_1140@152:0>) <> 0) |- P[<h_1140@152:1>](<h_1140@152:0>:int,
                                                          <h_1140@152:1>:int)
          
           (<h_1140@149:1> = <h_1140@149:0>) |- P[<h_1140@149:1>](<h_1140@149:0>:int,
                                                                  <h_1140@149:1>:int)
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        
      end HcSolver.check_validity(211949)[4] (0.007999 sec.)
      solution:
        P[<fail_1449@171:0>](var507:bool) = false
        P[<<h_1140@149:2>@166:1>](<h_1140@152:0>:int,<h_1140@152:1>:int,<<h_1140@152:2>@155:0>:int,<<h_1140@152:2>@155:1>:int) =
        (((<<h_1140@152:2>@155:1> <= 1) && ((1 + <h_1140@152:0>) = <h_1140@152:1>)) || (<<h_1140@152:2>@155:1> = 0))
        P[<<h_1140@152:2>@155:1>](<h_1140@152:0>:int,<h_1140@152:1>:int,<<h_1140@152:2>@155:0>:int,<<h_1140@152:2>@155:1>:int) =
        (((<<h_1140@152:2>@155:1> <= 1) && ((1 + <h_1140@152:0>) = <h_1140@152:1>)) || (<<h_1140@152:2>@155:1> = 0))
        P[<h_1140@152:1>](<h_1140@152:0>:int,<h_1140@152:1>:int) = (<h_1140@152:1> = (1 + <h_1140@152:0>))
        P[<h_1140@149:1>](<h_1140@149:0>:int,<h_1140@149:1>:int) = (<h_1140@149:0> = <h_1140@149:1>)
    end GenHcSolver.solve(197777)[3] (0.083987 sec.)
    begin GenHcSolver.solve(213027)[3]
      Horn clauses:
        P[<fail_1449@171:0>](<fail_1449@171:0>:bool)|- bot
        
        P[<<h_1140@149:2>@166:1>](var476:int,var476:int,<k2_1139@168:0>:int,<k2_1139@168:1>:int),
        ((<k2_1139@168:1> <> 0) && <fail_1449@171:0>) |- P[<fail_1449@171:0>](
        <fail_1449@171:0>:bool)
        
        P[<h_1140@149:1>](<h_1140@149:0>:int,<h_1140@149:1>:int),
        P[<h_1140@149:1>](var478:int,var477:int),
        P[<<h_1140@152:2>@155:1>]((-1 + var478):int,var477:int,(-1 + <<h_1140@149:2>@166:0>):int,(
                                  1 + <<h_1140@149:2>@166:1>):int),
        ((var478 <> 0) && ((<h_1140@149:0> <> 0) && ((1 + <<h_1140@149:2>@166:1>) > 0)))
        |- P[<<h_1140@149:2>@166:1>](<h_1140@149:0>:int,<h_1140@149:1>:int,
                                     <<h_1140@149:2>@166:0>:int,<<h_1140@149:2>@166:1>:int)
        
        P[<h_1140@152:1>](<h_1140@152:0>:int,<h_1140@152:1>:int),
        ((<h_1140@152:0> = 0) && ((<<h_1140@152:2>@155:0> = 0) && (<<h_1140@152:2>@155:1> = <h_1140@152:1>)))
        |- P[<<h_1140@152:2>@155:1>](<h_1140@152:0>:int,<h_1140@152:1>:int,
                                     <<h_1140@152:2>@155:0>:int,<<h_1140@152:2>@155:1>:int)
        
        P[<h_1140@149:1>]((1 + <h_1140@152:0>):int,<h_1140@152:1>:int), (
        (1 + <h_1140@152:0>) <> 0) |- P[<h_1140@152:1>](<h_1140@152:0>:int,
                                                        <h_1140@152:1>:int)
        
         (<h_1140@149:1> = <h_1140@149:0>) |- P[<h_1140@149:1>](<h_1140@149:0>:int,
                                                                <h_1140@149:1>:int)
      lower bounds:
        P[<h_1140@149:1>](<h_1140@149:0>:int,<h_1140@149:1>:int) = (<h_1140@149:1> = <h_1140@149:0>)
        P[<h_1140@152:1>](<h_1140@152:0>:int,<h_1140@152:1>:int) =
        (((1 + <h_1140@152:0>) <> 0) && (<h_1140@152:1> = (1 + <h_1140@152:0>)))
        P[<<h_1140@152:2>@155:1>](<h_1140@152:0>:int,<h_1140@152:1>:int,<<h_1140@152:2>@155:0>:int,<<h_1140@152:2>@155:1>:int) =
        ((<h_1140@152:0> = 0) &&
         ((<<h_1140@152:2>@155:0> = 0) &&
          ((<h_1140@152:1> = (1 + <h_1140@152:0>)) && (<<h_1140@152:2>@155:1> = <h_1140@152:1>))))
        P[<<h_1140@149:2>@166:1>](<h_1140@149:0>:int,<h_1140@149:1>:int,<<h_1140@149:2>@166:0>:int,<<h_1140@149:2>@166:1>:int) =
        ((<<h_1140@149:2>@166:1> = 0) &&
         ((<<h_1140@149:2>@166:0> = 1) && ((<h_1140@149:1> = <h_1140@149:0>) && (<h_1140@149:0> <> 0))))
        P[<fail_1449@171:0>](<fail_1449@171:0>:bool) = false
      upper bounds:
        P[<<h_1140@149:2>@166:1>](var524:int,var525:int,var526:int,var527:int) = ((var527 = 0) || (var524 <> var525))
        P[<<h_1140@152:2>@155:1>](var517:int,var518:int,var519:int,var520:int) =
        (((1 + var517) <> var518) || ((var520 <= 1) || (var518 = 0)))
      begin GenHcSolver.classify_pids(219935)[4]
        output:
          [<<h_1140@152:2>@155:1>;<<h_1140@149:2>@166:1>]
      end GenHcSolver.classify_pids(219935)[4] (0.001000 sec.)
      begin ApronInterface.convex_hull_interpolate(220002)[4]
        lb:(((<h_1140@152:0> = 0) &&
             ((<<h_1140@152:2>@155:0> = 0) &&
              ((<h_1140@152:1> = (1 + <h_1140@152:0>)) && (<<h_1140@152:2>@155:1> = <h_1140@152:1>)))) ||
            ((<<h_1140@152:2>@155:1> = 0) &&
             ((<<h_1140@152:2>@155:0> = 1) && ((<h_1140@152:1> = <h_1140@152:0>) && (<h_1140@152:0> <> 0)))))
        nub:((not (((1 + <h_1140@152:0>) <> <h_1140@152:1>) || ((<<h_1140@152:2>@155:1> <= 1) || (<h_1140@152:1> = 0)))) ||
             (not ((<<h_1140@152:2>@155:1> = 0) || (<h_1140@152:0> <> <h_1140@152:1>))))
        begin ExtFormula.Formula.case_analysis_boolean(220092)[5]
          ts: (((<h_1140@152:0> = 0) &&
                ((<<h_1140@152:2>@155:0> = 0) &&
                 ((<h_1140@152:1> = (1 + <h_1140@152:0>)) && (<<h_1140@152:2>@155:1> = <h_1140@152:1>)))) ||
               ((<<h_1140@152:2>@155:1> = 0) &&
                ((<<h_1140@152:2>@155:0> = 1) && ((<h_1140@152:1> = <h_1140@152:0>) && (<h_1140@152:0> <> 0)))))
          
        end ExtFormula.Formula.case_analysis_boolean(220092)[5] (0.001000 sec.)
        begin ExtFormula.Formula.case_analysis_boolean(220154)[5]
          ts: ((((1 + <h_1140@152:0>) = <h_1140@152:1>) && ((<<h_1140@152:2>@155:1> > 1) && (<h_1140@152:1> <> 0))) ||
               ((<<h_1140@152:2>@155:1> <> 0) && (<h_1140@152:0> = <h_1140@152:1>)))
          
        end ExtFormula.Formula.case_analysis_boolean(220154)[5] (0.000000 sec.)
        lb':(((((-1 + <<h_1140@152:2>@155:0>) + <h_1140@152:1>) + (-1 * <h_1140@152:0>)) = 0) &&
             ((((<<h_1140@152:2>@155:1> + (-1 * <h_1140@152:1>)) + <h_1140@152:0>) = 0) &&
              (((<h_1140@152:1> + (-1 * <h_1140@152:0>)) >= 0) && (((1 + (-1 * <h_1140@152:1>)) + <h_1140@152:0>) >= 0))))
        nub':(((<h_1140@152:1> + (-1 * <h_1140@152:0>)) >= 0) && (((1 + (-1 * <h_1140@152:1>)) + <h_1140@152:0>) >= 0))
        begin InterpProver.interpolate(220166)[5]
          begin InterpProver.interpolate_fresh(220167)[6]
            begin InterpProver.interpolate_log(220168)[7]
              input1: (((((-1 + <<h_1140@152:2>@155:0>) + <h_1140@152:1>) + (-1 * <h_1140@152:0>)) = 0) &&
                       ((((<<h_1140@152:2>@155:1> + (-1 * <h_1140@152:1>)) + <h_1140@152:0>) = 0) &&
                        (((<h_1140@152:1> + (-1 * <h_1140@152:0>)) >= 0) &&
                         (((1 + (-1 * <h_1140@152:1>)) + <h_1140@152:0>) >= 0))))
              input2: (((<h_1140@152:1> + (-1 * <h_1140@152:0>)) >= 0) &&
                       (((1 + (-1 * <h_1140@152:1>)) + <h_1140@152:0>) >= 0))
              begin InterpProver.interpolate_check(220169)[8]
                begin InterpProver.interpolate_simplify(220170)[9]
                  begin InterpProver.interpolate_quick(220409)[10]
                    begin CsisatInterface.interpolate_csisat_wrap(220418)[11]
                      begin CsisatInterface.interpolate_csisat_post_process(220419)[12]
                        begin CsisatInterface.interpolate_csisat_log(220420)[13]
                          input1: (v_sep_h_1140_sep_152_sep_0 <= v_sep_h_1140_sep_152_sep_1 & v_sep_h_1140_sep_152_sep_1 <= (1 + v_sep_h_1140_sep_152_sep_0))
                          input2: (v_sep_h_1140_sep_152_sep_0 <= v_sep_h_1140_sep_152_sep_1 & v_sep_h_1140_sep_152_sep_1 <= (1 + v_sep_h_1140_sep_152_sep_0))
                          begin CsisatInterface.interpolate_csisat_raw(220421)[14]
                            
                          end CsisatInterface.interpolate_csisat_raw(220421)[14] (0.000000 sec.)
                          
                        end CsisatInterface.interpolate_csisat_log(220420)[13] (0.000000 sec.)
                        
                      end CsisatInterface.interpolate_csisat_post_process(220419)[12] (0.000000 sec.)
                      
                    end CsisatInterface.interpolate_csisat_wrap(220418)[11] (0.000000 sec.)
                    
                  end InterpProver.interpolate_quick(220409)[10] (0.001000 sec.)
                  
                end InterpProver.interpolate_simplify(220170)[9] (0.002000 sec.)
                
              end InterpProver.interpolate_check(220169)[8] (0.002000 sec.)
              there is no interpolant
            end InterpProver.interpolate_log(220168)[7] (0.003000 sec.)
            
          end InterpProver.interpolate_fresh(220167)[6] (0.003000 sec.)
          
        end InterpProver.interpolate(220166)[5] (0.003000 sec.)
        begin InterpProver.interpolate(220440)[5]
          begin InterpProver.interpolate_fresh(220441)[6]
            begin InterpProver.interpolate_log(220442)[7]
              input1: (((((-1 + <<h_1140@152:2>@155:0>) + <h_1140@152:1>) + (-1 * <h_1140@152:0>)) = 0) &&
                       ((((<<h_1140@152:2>@155:1> + (-1 * <h_1140@152:1>)) + <h_1140@152:0>) = 0) &&
                        (((<h_1140@152:1> + (-1 * <h_1140@152:0>)) >= 0) &&
                         (((1 + (-1 * <h_1140@152:1>)) + <h_1140@152:0>) >= 0))))
              input2: (not ((<<h_1140@152:2>@155:1> = 0) || (<h_1140@152:0> <> <h_1140@152:1>)))
              begin InterpProver.interpolate_check(220443)[8]
                begin InterpProver.interpolate_simplify(220444)[9]
                  begin InterpProver.interpolate_quick(220719)[10]
                    begin CsisatInterface.interpolate_csisat_wrap(220728)[11]
                      begin CsisatInterface.interpolate_csisat_post_process(220729)[12]
                        begin CsisatInterface.interpolate_csisat_log(220730)[13]
                          input1: (v_sep_h_1140_sep_152_sep_1 = (v_sep_h_1140_sep_152_sep_0 + v_sep_h_1140_sep_152_sep_2_sep_155_sep_1) & v_sep_h_1140_sep_152_sep_0 <= v_sep_h_1140_sep_152_sep_1 & v_sep_h_1140_sep_152_sep_1 <= (1 + v_sep_h_1140_sep_152_sep_0))
                          input2: (not 0 = v_sep_h_1140_sep_152_sep_2_sep_155_sep_1 & v_sep_h_1140_sep_152_sep_0 = v_sep_h_1140_sep_152_sep_1)
                          begin CsisatInterface.interpolate_csisat_raw(220731)[14]
                            
                          end CsisatInterface.interpolate_csisat_raw(220731)[14] (0.001000 sec.)
                          output: ((v_sep_h_1140_sep_152_sep_0 + v_sep_h_1140_sep_152_sep_2_sep_155_sep_1 + -1*v_sep_h_1140_sep_152_sep_1) <= 0 & -1*v_sep_h_1140_sep_152_sep_2_sep_155_sep_1 <= 0)
                          
                        end CsisatInterface.interpolate_csisat_log(220730)[13] (0.001000 sec.)
                        after simplification: ((v_sep_h_1140_sep_152_sep_0 + v_sep_h_1140_sep_152_sep_2_sep_155_sep_1 + -1*v_sep_h_1140_sep_152_sep_1) <= 0 & -1*v_sep_h_1140_sep_152_sep_2_sep_155_sep_1 <= 0)
                        after dnf conversion: (((v_sep_h_1140_sep_152_sep_0 + v_sep_h_1140_sep_152_sep_2_sep_155_sep_1 + -1*v_sep_h_1140_sep_152_sep_1) <= 0 & -1*v_sep_h_1140_sep_152_sep_2_sep_155_sep_1 <= 0))
                        
                      end CsisatInterface.interpolate_csisat_post_process(220729)[12] (0.001000 sec.)
                      
                    end CsisatInterface.interpolate_csisat_wrap(220728)[11] (0.001000 sec.)
                    
                  end InterpProver.interpolate_quick(220719)[10] (0.002000 sec.)
                  begin minimizing # of conjunctions(220749)[10]
                    input: (((<h_1140@152:0> + <<h_1140@152:2>@155:1>) <= <h_1140@152:1>) &&
                            (0 <= <<h_1140@152:2>@155:1>))
                    output: ((0 <= <<h_1140@152:2>@155:1>) &&
                             ((<h_1140@152:0> + <<h_1140@152:2>@155:1>) <= <h_1140@152:1>))
                  end minimizing # of conjunctions(220749)[10] (0.000000 sec.)
                  
                end InterpProver.interpolate_simplify(220444)[9] (0.002000 sec.)
                
              end InterpProver.interpolate_check(220443)[8] (0.002000 sec.)
              output: ((0 <= <<h_1140@152:2>@155:1>) && ((<h_1140@152:0> + <<h_1140@152:2>@155:1>) <= <h_1140@152:1>))
            end InterpProver.interpolate_log(220442)[7] (0.002999 sec.)
            
          end InterpProver.interpolate_fresh(220441)[6] (0.002999 sec.)
          
        end InterpProver.interpolate(220440)[5] (0.002999 sec.)
        begin InterpProver.interpolate(220814)[5]
          begin InterpProver.interpolate_fresh(220815)[6]
            begin InterpProver.interpolate_log(220816)[7]
              input1: (((((-1 + <<h_1140@152:2>@155:0>) + <h_1140@152:1>) + (-1 * <h_1140@152:0>)) = 0) &&
                       ((((<<h_1140@152:2>@155:1> + (-1 * <h_1140@152:1>)) + <h_1140@152:0>) = 0) &&
                        (((<h_1140@152:1> + (-1 * <h_1140@152:0>)) >= 0) &&
                         (((1 + (-1 * <h_1140@152:1>)) + <h_1140@152:0>) >= 0))))
              input2: (not
                         (((1 + <h_1140@152:0>) <> <h_1140@152:1>) ||
                          ((<<h_1140@152:2>@155:1> <= 1) || (<h_1140@152:1> = 0))))
              begin InterpProver.interpolate_check(220817)[8]
                begin InterpProver.interpolate_simplify(220818)[9]
                  begin InterpProver.interpolate_quick(221131)[10]
                    begin CsisatInterface.interpolate_csisat_wrap(221140)[11]
                      begin CsisatInterface.interpolate_csisat_post_process(221141)[12]
                        begin CsisatInterface.interpolate_csisat_log(221142)[13]
                          input1: (v_sep_h_1140_sep_152_sep_1 = (v_sep_h_1140_sep_152_sep_0 + v_sep_h_1140_sep_152_sep_2_sep_155_sep_1) & v_sep_h_1140_sep_152_sep_0 <= v_sep_h_1140_sep_152_sep_1 & v_sep_h_1140_sep_152_sep_1 <= (1 + v_sep_h_1140_sep_152_sep_0))
                          input2: (not 0 = v_sep_h_1140_sep_152_sep_1 & v_sep_h_1140_sep_152_sep_1 = (1 + v_sep_h_1140_sep_152_sep_0) & 2 <= v_sep_h_1140_sep_152_sep_2_sep_155_sep_1)
                          begin CsisatInterface.interpolate_csisat_raw(221143)[14]
                            
                          end CsisatInterface.interpolate_csisat_raw(221143)[14] (0.000000 sec.)
                          output: 2*v_sep_h_1140_sep_152_sep_2_sep_155_sep_1 <= 2
                          
                        end CsisatInterface.interpolate_csisat_log(221142)[13] (0.000000 sec.)
                        after simplification: 2*v_sep_h_1140_sep_152_sep_2_sep_155_sep_1 <= 2
                        after dnf conversion: ((2*v_sep_h_1140_sep_152_sep_2_sep_155_sep_1 <= 2))
                        
                      end CsisatInterface.interpolate_csisat_post_process(221141)[12] (0.000000 sec.)
                      
                    end CsisatInterface.interpolate_csisat_wrap(221140)[11] (0.000000 sec.)
                    
                  end InterpProver.interpolate_quick(221131)[10] (0.000000 sec.)
                  
                end InterpProver.interpolate_simplify(220818)[9] (0.002000 sec.)
                
              end InterpProver.interpolate_check(220817)[8] (0.002999 sec.)
              output: (<<h_1140@152:2>@155:1> <= 1)
            end InterpProver.interpolate_log(220816)[7] (0.002999 sec.)
            
          end InterpProver.interpolate_fresh(220815)[6] (0.003999 sec.)
          
        end InterpProver.interpolate(220814)[5] (0.003999 sec.)
        output:
          P[<<h_1140@152:2>@155:1>](<h_1140@152:0>:int,<h_1140@152:1>:int,<<h_1140@152:2>@155:0>:int,<<h_1140@152:2>@155:1>:int) =
          (<<h_1140@152:2>@155:1> <= 1)
          P[<<h_1140@149:2>@166:1>](<h_1140@152:0>:int,<h_1140@152:1>:int,<<h_1140@152:2>@155:0>:int,<<h_1140@152:2>@155:1>:int) =
          ((0 <= <<h_1140@152:2>@155:1>) && ((<h_1140@152:0> + <<h_1140@152:2>@155:1>) <= <h_1140@152:1>))
      end ApronInterface.convex_hull_interpolate(220002)[4] (0.011998 sec.)
      Horn clauses:
        P[<fail_1449@171:0>](<fail_1449@171:0>:bool)|- bot
        
        P[<h_1140@149:1>](<h_1140@149:0>:int,<h_1140@149:1>:int),
        ((<h_1140@149:0> > <h_1140@149:1>) && (<h_1140@149:0> <> 0)) |- bot
        
        P[<h_1140@152:1>](0:int,<<h_1140@152:2>@155:1>:int), (<<h_1140@152:2>@155:1> > 1) |- bot
        
        P[<h_1140@149:1>]((1 + <h_1140@152:0>):int,<h_1140@152:1>:int), (
        (1 + <h_1140@152:0>) <> 0) |- P[<h_1140@152:1>](<h_1140@152:0>:int,
                                                        <h_1140@152:1>:int)
        
         (<h_1140@149:1> = <h_1140@149:0>) |- P[<h_1140@149:1>](<h_1140@149:0>:int,
                                                                <h_1140@149:1>:int)
      lower bounds:
        P[<h_1140@149:1>](<h_1140@149:0>:int,<h_1140@149:1>:int) = (<h_1140@149:1> = <h_1140@149:0>)
        P[<fail_1449@171:0>](var531:bool) = false
        P[<h_1140@152:1>](<h_1140@152:0>:int,<h_1140@152:1>:int) =
        (((1 + <h_1140@152:0>) <> 0) && (<h_1140@152:1> = (1 + <h_1140@152:0>)))
      upper bounds:
        P[<h_1140@152:1>](var540:int,var541:int) = ((var540 <> 0) || (var541 <= 1))
        P[<h_1140@149:1>](var534:int,var535:int) =
        (((var534 <= var535) || (var534 = 0)) && ((var534 <> 1) || (var535 <= 1)))
      begin GenHcSolver.classify_pids(225459)[4]
        output:
          [<h_1140@152:1>],[<h_1140@149:1>]
      end GenHcSolver.classify_pids(225459)[4] (0.000000 sec.)
      lb:(((1 + <h_1140@152:0>) <> 0) && (<h_1140@152:1> = (1 + <h_1140@152:0>)))
      nub:(not ((<h_1140@152:0> <> 0) || (<h_1140@152:1> <= 1)))
      begin ApronInterface.convex_hull_interpolate(225542)[4]
        lb:(((1 + <h_1140@152:0>) <> 0) && (<h_1140@152:1> = (1 + <h_1140@152:0>)))
        nub:(not ((<h_1140@152:0> <> 0) || (<h_1140@152:1> <= 1)))
        begin ExtFormula.Formula.case_analysis_boolean(225563)[5]
          ts: (((1 + <h_1140@152:0>) <> 0) && (<h_1140@152:1> = (1 + <h_1140@152:0>)))
          
        end ExtFormula.Formula.case_analysis_boolean(225563)[5] (0.000000 sec.)
        begin ExtFormula.Formula.case_analysis_boolean(225583)[5]
          ts: ((<h_1140@152:0> = 0) && (<h_1140@152:1> > 1))
          
        end ExtFormula.Formula.case_analysis_boolean(225583)[5] (0.000000 sec.)
        lb':(((-1 + <h_1140@152:1>) + (-1 * <h_1140@152:0>)) = 0)
        nub':((<h_1140@152:0> = 0) && ((-2 + <h_1140@152:1>) >= 0))
        begin InterpProver.interpolate(225589)[5]
          begin InterpProver.interpolate_fresh(225590)[6]
            begin InterpProver.interpolate_log(225591)[7]
              input1: (((-1 + <h_1140@152:1>) + (-1 * <h_1140@152:0>)) = 0)
              input2: ((<h_1140@152:0> = 0) && ((-2 + <h_1140@152:1>) >= 0))
              begin InterpProver.interpolate_check(225592)[8]
                begin InterpProver.interpolate_simplify(225593)[9]
                  begin InterpProver.interpolate_quick(225632)[10]
                    begin CsisatInterface.interpolate_csisat_wrap(225641)[11]
                      begin CsisatInterface.interpolate_csisat_post_process(225642)[12]
                        begin CsisatInterface.interpolate_csisat_log(225643)[13]
                          input1: v_sep_h_1140_sep_152_sep_1 = (1 + v_sep_h_1140_sep_152_sep_0)
                          input2: (0 = v_sep_h_1140_sep_152_sep_0 & 2 <= v_sep_h_1140_sep_152_sep_1)
                          begin CsisatInterface.interpolate_csisat_raw(225644)[14]
                            
                          end CsisatInterface.interpolate_csisat_raw(225644)[14] (0.000000 sec.)
                          output: (-2*v_sep_h_1140_sep_152_sep_0 + 2*v_sep_h_1140_sep_152_sep_1) <= 2
                          
                        end CsisatInterface.interpolate_csisat_log(225643)[13] (0.000000 sec.)
                        after simplification: (-2*v_sep_h_1140_sep_152_sep_0 + 2*v_sep_h_1140_sep_152_sep_1) <= 2
                        after dnf conversion: (((-2*v_sep_h_1140_sep_152_sep_0 + 2*v_sep_h_1140_sep_152_sep_1) <= 2))
                        
                      end CsisatInterface.interpolate_csisat_post_process(225642)[12] (0.000000 sec.)
                      
                    end CsisatInterface.interpolate_csisat_wrap(225641)[11] (0.000000 sec.)
                    
                  end InterpProver.interpolate_quick(225632)[10] (0.000000 sec.)
                  
                end InterpProver.interpolate_simplify(225593)[9] (0.000000 sec.)
                
              end InterpProver.interpolate_check(225592)[8] (0.001000 sec.)
              output: (<h_1140@152:1> <= (1 + <h_1140@152:0>))
            end InterpProver.interpolate_log(225591)[7] (0.001000 sec.)
            
          end InterpProver.interpolate_fresh(225590)[6] (0.001000 sec.)
          
        end InterpProver.interpolate(225589)[5] (0.001000 sec.)
        output:
          P[<h_1140@152:1>](<h_1140@152:0>:int,<h_1140@152:1>:int) = (<h_1140@152:1> <= (1 + <h_1140@152:0>))
      end ApronInterface.convex_hull_interpolate(225542)[4] (0.002000 sec.)
      Horn clauses:
        P[<fail_1449@171:0>](<fail_1449@171:0>:bool)|- bot
        
        P[<h_1140@149:1>](<h_1140@149:0>:int,<h_1140@149:1>:int),
        ((<h_1140@149:0> > <h_1140@149:1>) && (<h_1140@149:0> <> 0)) |- bot
        
        P[<h_1140@149:1>]((1 + <h_1140@152:0>):int,<h_1140@152:1>:int),
        (((1 + <h_1140@152:0>) <> 0) && (<h_1140@152:1> > (1 + <h_1140@152:0>))) |- bot
        
         (<h_1140@149:1> = <h_1140@149:0>) |- P[<h_1140@149:1>](<h_1140@149:0>:int,
                                                                <h_1140@149:1>:int)
      lower bounds:
        P[<h_1140@149:1>](<h_1140@149:0>:int,<h_1140@149:1>:int) = (<h_1140@149:1> = <h_1140@149:0>)
        P[<fail_1449@171:0>](var543:bool) = false
      upper bounds:
        P[<fail_1449@171:0>](var546:bool) = true
      begin GenHcSolver.classify_pids(226635)[4]
        output:
          [<fail_1449@171:0>]
      end GenHcSolver.classify_pids(226635)[4] (0.000000 sec.)
      lb:false
      nub:false
      begin ApronInterface.convex_hull_interpolate(226638)[4]
        lb:false
        nub:false
        begin ExtFormula.Formula.case_analysis_boolean(226641)[5]
          ts: false
          
        end ExtFormula.Formula.case_analysis_boolean(226641)[5] (0.000000 sec.)
        begin ExtFormula.Formula.case_analysis_boolean(226646)[5]
          ts: false
          
        end ExtFormula.Formula.case_analysis_boolean(226646)[5] (0.000000 sec.)
        lb':(-1 >= 0)
        nub':(-1 >= 0)
        begin InterpProver.interpolate(226649)[5]
          begin InterpProver.interpolate_fresh(226650)[6]
            begin InterpProver.interpolate_log(226651)[7]
              input1: (-1 >= 0)
              input2: (-1 >= 0)
              begin InterpProver.interpolate_check(226652)[8]
                begin InterpProver.interpolate_simplify(226653)[9]
                  begin InterpProver.interpolate_quick(226668)[10]
                    
                  end InterpProver.interpolate_quick(226668)[10] (0.000000 sec.)
                  begin minimizing # of disjunctions(226672)[10]
                    input: false
                    output: false
                  end minimizing # of disjunctions(226672)[10] (0.000000 sec.)
                  
                end InterpProver.interpolate_simplify(226653)[9] (0.000000 sec.)
                
              end InterpProver.interpolate_check(226652)[8] (0.001000 sec.)
              output: false
            end InterpProver.interpolate_log(226651)[7] (0.001000 sec.)
            
          end InterpProver.interpolate_fresh(226650)[6] (0.001000 sec.)
          
        end InterpProver.interpolate(226649)[5] (0.001000 sec.)
        output:
          P[<fail_1449@171:0>](var543:bool) = false
      end ApronInterface.convex_hull_interpolate(226638)[4] (0.001000 sec.)
      Horn clauses:
        P[<h_1140@149:1>](<h_1140@149:0>:int,<h_1140@149:1>:int),
        ((<h_1140@149:0> > <h_1140@149:1>) && (<h_1140@149:0> <> 0)) |- bot
        
        P[<h_1140@149:1>]((1 + <h_1140@152:0>):int,<h_1140@152:1>:int),
        (((1 + <h_1140@152:0>) <> 0) && (<h_1140@152:1> > (1 + <h_1140@152:0>))) |- bot
        
         (<h_1140@149:1> = <h_1140@149:0>) |- P[<h_1140@149:1>](<h_1140@149:0>:int,
                                                                <h_1140@149:1>:int)
      lower bounds:
        P[<h_1140@149:1>](<h_1140@149:0>:int,<h_1140@149:1>:int) = (<h_1140@149:1> = <h_1140@149:0>)
      upper bounds:
        P[<h_1140@149:1>](var547:int,var548:int) = ((var547 = 0) || (var547 = var548))
      begin GenHcSolver.classify_pids(228051)[4]
        output:
          [<h_1140@149:1>]
      end GenHcSolver.classify_pids(228051)[4] (0.000000 sec.)
      lb:(<h_1140@149:1> = <h_1140@149:0>)
      nub:(not ((<h_1140@149:0> = 0) || (<h_1140@149:0> = <h_1140@149:1>)))
      begin ApronInterface.convex_hull_interpolate(228054)[4]
        lb:(<h_1140@149:1> = <h_1140@149:0>)
        nub:(not ((<h_1140@149:0> = 0) || (<h_1140@149:0> = <h_1140@149:1>)))
        begin ExtFormula.Formula.case_analysis_boolean(228059)[5]
          ts: (<h_1140@149:1> = <h_1140@149:0>)
          
        end ExtFormula.Formula.case_analysis_boolean(228059)[5] (0.000000 sec.)
        begin ExtFormula.Formula.case_analysis_boolean(228078)[5]
          ts: ((<h_1140@149:0> <> 0) && (<h_1140@149:0> <> <h_1140@149:1>))
          
        end ExtFormula.Formula.case_analysis_boolean(228078)[5] (0.000000 sec.)
        lb':((<h_1140@149:1> + (-1 * <h_1140@149:0>)) = 0)
        nub':true
        begin InterpProver.interpolate(228084)[5]
          begin InterpProver.interpolate_fresh(228085)[6]
            begin InterpProver.interpolate_log(228086)[7]
              input1: ((<h_1140@149:1> + (-1 * <h_1140@149:0>)) = 0)
              input2: true
              begin InterpProver.interpolate_check(228087)[8]
                begin InterpProver.interpolate_simplify(228088)[9]
                  begin InterpProver.interpolate_quick(228103)[10]
                    begin CsisatInterface.interpolate_csisat_wrap(228106)[11]
                      begin CsisatInterface.interpolate_csisat_post_process(228107)[12]
                        begin CsisatInterface.interpolate_csisat_log(228108)[13]
                          input1: true
                          input2: true
                          begin CsisatInterface.interpolate_csisat_raw(228109)[14]
                            
                          end CsisatInterface.interpolate_csisat_raw(228109)[14] (0.000000 sec.)
                          
                        end CsisatInterface.interpolate_csisat_log(228108)[13] (0.000000 sec.)
                        
                      end CsisatInterface.interpolate_csisat_post_process(228107)[12] (0.000000 sec.)
                      
                    end CsisatInterface.interpolate_csisat_wrap(228106)[11] (0.000000 sec.)
                    
                  end InterpProver.interpolate_quick(228103)[10] (0.000000 sec.)
                  
                end InterpProver.interpolate_simplify(228088)[9] (0.000000 sec.)
                
              end InterpProver.interpolate_check(228087)[8] (0.000000 sec.)
              there is no interpolant
            end InterpProver.interpolate_log(228086)[7] (0.000000 sec.)
            
          end InterpProver.interpolate_fresh(228085)[6] (0.000000 sec.)
          
        end InterpProver.interpolate(228084)[5] (0.000000 sec.)
        begin InterpProver.interpolate(228117)[5]
          begin InterpProver.interpolate_fresh(228118)[6]
            begin InterpProver.interpolate_log(228119)[7]
              input1: ((<h_1140@149:1> + (-1 * <h_1140@149:0>)) = 0)
              input2: (not ((<h_1140@149:0> = 0) || (<h_1140@149:0> = <h_1140@149:1>)))
              begin InterpProver.interpolate_check(228120)[8]
                begin InterpProver.interpolate_simplify(228121)[9]
                  begin InterpProver.interpolate_quick(228162)[10]
                    begin CsisatInterface.interpolate_csisat_wrap(228171)[11]
                      begin CsisatInterface.interpolate_csisat_post_process(228172)[12]
                        begin CsisatInterface.interpolate_csisat_log(228173)[13]
                          input1: v_sep_h_1140_sep_149_sep_0 = v_sep_h_1140_sep_149_sep_1
                          input2: (not 0 = v_sep_h_1140_sep_149_sep_0 & not v_sep_h_1140_sep_149_sep_0 = v_sep_h_1140_sep_149_sep_1)
                          begin CsisatInterface.interpolate_csisat_raw(228174)[14]
                            
                          end CsisatInterface.interpolate_csisat_raw(228174)[14] (0.000000 sec.)
                          output: v_sep_h_1140_sep_149_sep_0 = v_sep_h_1140_sep_149_sep_1
                          
                        end CsisatInterface.interpolate_csisat_log(228173)[13] (0.000000 sec.)
                        after simplification: v_sep_h_1140_sep_149_sep_0 = v_sep_h_1140_sep_149_sep_1
                        after dnf conversion: ((v_sep_h_1140_sep_149_sep_0 = v_sep_h_1140_sep_149_sep_1))
                        
                      end CsisatInterface.interpolate_csisat_post_process(228172)[12] (0.000000 sec.)
                      
                    end CsisatInterface.interpolate_csisat_wrap(228171)[11] (0.000000 sec.)
                    
                  end InterpProver.interpolate_quick(228162)[10] (0.000000 sec.)
                  
                end InterpProver.interpolate_simplify(228121)[9] (0.000000 sec.)
                
              end InterpProver.interpolate_check(228120)[8] (0.000000 sec.)
              output: (<h_1140@149:0> = <h_1140@149:1>)
            end InterpProver.interpolate_log(228119)[7] (0.000000 sec.)
            
          end InterpProver.interpolate_fresh(228118)[6] (0.000000 sec.)
          
        end InterpProver.interpolate(228117)[5] (0.000000 sec.)
        output:
          P[<h_1140@149:1>](<h_1140@149:0>:int,<h_1140@149:1>:int) = (<h_1140@149:0> = <h_1140@149:1>)
      end ApronInterface.convex_hull_interpolate(228054)[4] (0.001000 sec.)
      begin HcSolver.check_validity(228339)[4]
        input:
          P[<fail_1449@171:0>](<fail_1449@171:0>:bool)|- bot
          
          P[<<h_1140@149:2>@166:1>](var476:int,var476:int,<k2_1139@168:0>:int,<k2_1139@168:1>:int),
          ((<k2_1139@168:1> <> 0) && <fail_1449@171:0>) |- P[<fail_1449@171:0>](
          <fail_1449@171:0>:bool)
          
          P[<h_1140@149:1>](<h_1140@149:0>:int,<h_1140@149:1>:int),
          P[<h_1140@149:1>](var478:int,var477:int),
          P[<<h_1140@152:2>@155:1>]((-1 + var478):int,var477:int,(-1 + <<h_1140@149:2>@166:0>):int,(
                                    1 + <<h_1140@149:2>@166:1>):int),
          ((var478 <> 0) && ((<h_1140@149:0> <> 0) && ((1 + <<h_1140@149:2>@166:1>) > 0)))
          |- P[<<h_1140@149:2>@166:1>](<h_1140@149:0>:int,<h_1140@149:1>:int,
                                       <<h_1140@149:2>@166:0>:int,<<h_1140@149:2>@166:1>:int)
          
          P[<h_1140@152:1>](<h_1140@152:0>:int,<h_1140@152:1>:int),
          ((<h_1140@152:0> = 0) && ((<<h_1140@152:2>@155:0> = 0) && (<<h_1140@152:2>@155:1> = <h_1140@152:1>)))
          |- P[<<h_1140@152:2>@155:1>](<h_1140@152:0>:int,<h_1140@152:1>:int,
                                       <<h_1140@152:2>@155:0>:int,<<h_1140@152:2>@155:1>:int)
          
          P[<h_1140@149:1>]((1 + <h_1140@152:0>):int,<h_1140@152:1>:int), (
          (1 + <h_1140@152:0>) <> 0) |- P[<h_1140@152:1>](<h_1140@152:0>:int,
                                                          <h_1140@152:1>:int)
          
           (<h_1140@149:1> = <h_1140@149:0>) |- P[<h_1140@149:1>](<h_1140@149:0>:int,
                                                                  <h_1140@149:1>:int)
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        
      end HcSolver.check_validity(228339)[4] (0.002999 sec.)
      solution:
        P[<fail_1449@171:0>](var543:bool) = false
        P[<<h_1140@149:2>@166:1>](<h_1140@152:0>:int,<h_1140@152:1>:int,<<h_1140@152:2>@155:0>:int,<<h_1140@152:2>@155:1>:int) =
        ((0 <= <<h_1140@152:2>@155:1>) && ((<h_1140@152:0> + <<h_1140@152:2>@155:1>) <= <h_1140@152:1>))
        P[<<h_1140@152:2>@155:1>](<h_1140@152:0>:int,<h_1140@152:1>:int,<<h_1140@152:2>@155:0>:int,<<h_1140@152:2>@155:1>:int) =
        (<<h_1140@152:2>@155:1> <= 1)
        P[<h_1140@152:1>](<h_1140@152:0>:int,<h_1140@152:1>:int) = (<h_1140@152:1> <= (1 + <h_1140@152:0>))
        P[<h_1140@149:1>](<h_1140@149:0>:int,<h_1140@149:1>:int) = (<h_1140@149:0> = <h_1140@149:1>)
    end GenHcSolver.solve(213027)[3] (0.083987 sec.)
    begin YhornInterface.solve(229172)[3]
      begin HcSolver.solve_ub(229173)[4]
        encoded:
          P[<fail_1449@171:0>](<fail_1449@171:0>:int)|- bot
          
          P[<<h_1140@149:2>@166:1>](var476:int,var476:int,<k2_1139@168:0>:int,<k2_1139@168:1>:int),
          ((<k2_1139@168:1> <> 0) && (<fail_1449@171:0> = 1)) |- P[<fail_1449@171:0>](
          <fail_1449@171:0>:int)
          
          P[<h_1140@149:1>](<h_1140@149:0>:int,<h_1140@149:1>:int),
          P[<h_1140@149:1>](var478:int,var477:int),
          P[<<h_1140@152:2>@155:1>]((-1 + var478):int,var477:int,(-1 + <<h_1140@149:2>@166:0>):int,(
                                    1 + <<h_1140@149:2>@166:1>):int),
          ((var478 <> 0) && ((<h_1140@149:0> <> 0) && ((1 + <<h_1140@149:2>@166:1>) > 0)))
          |- P[<<h_1140@149:2>@166:1>](<h_1140@149:0>:int,<h_1140@149:1>:int,
                                       <<h_1140@149:2>@166:0>:int,<<h_1140@149:2>@166:1>:int)
          
          P[<h_1140@152:1>](<h_1140@152:0>:int,<h_1140@152:1>:int),
          ((<h_1140@152:0> = 0) && ((<<h_1140@152:2>@155:0> = 0) && (<<h_1140@152:2>@155:1> = <h_1140@152:1>)))
          |- P[<<h_1140@152:2>@155:1>](<h_1140@152:0>:int,<h_1140@152:1>:int,
                                       <<h_1140@152:2>@155:0>:int,<<h_1140@152:2>@155:1>:int)
          
          P[<h_1140@149:1>]((1 + <h_1140@152:0>):int,<h_1140@152:1>:int), (
          (1 + <h_1140@152:0>) <> 0) |- P[<h_1140@152:1>](<h_1140@152:0>:int,
                                                          <h_1140@152:1>:int)
          
           (<h_1140@149:1> = <h_1140@149:0>) |- P[<h_1140@149:1>](<h_1140@149:0>:int,
                                                                  <h_1140@149:1>:int)
        input to Yhorn:
          P[<fail_1449@171:0>](<fail_1449@171:0>:int)|- bot
          
          P[<<h_1140@149:2>@166:1>](var476:int,var476:int,<k2_1139@168:0>:int,<k2_1139@168:1>:int),
          ((<k2_1139@168:1> <> 0) && (<fail_1449@171:0> = 1)) |- P[<fail_1449@171:0>](
          <fail_1449@171:0>:int)
          
          P[<h_1140@149:1>](<h_1140@149:0>:int,<h_1140@149:1>:int),
          P[<h_1140@149:1>](var478:int,var477:int),
          P[<<h_1140@152:2>@155:1>](var551:int,var477:int,var552:int,var553:int),
          ((var553 = (1 + <<h_1140@149:2>@166:1>)) &&
           (((1 + var552) = <<h_1140@149:2>@166:0>) &&
            (((1 + var551) = var478) &&
             (((1 + <<h_1140@149:2>@166:1>) > 0) && ((<h_1140@149:0> <> 0) && (var478 <> 0))))))
          |- P[<<h_1140@149:2>@166:1>](<h_1140@149:0>:int,<h_1140@149:1>:int,
                                       <<h_1140@149:2>@166:0>:int,<<h_1140@149:2>@166:1>:int)
          
          P[<h_1140@152:1>](<h_1140@152:0>:int,<h_1140@152:1>:int),
          ((<<h_1140@152:2>@155:1> = <h_1140@152:1>) && ((<<h_1140@152:2>@155:0> = 0) && (<h_1140@152:0> = 0)))
          |- P[<<h_1140@152:2>@155:1>](<h_1140@152:0>:int,<h_1140@152:1>:int,
                                       <<h_1140@152:2>@155:0>:int,<<h_1140@152:2>@155:1>:int)
          
          P[<h_1140@149:1>](var554:int,<h_1140@152:1>:int),
          ((var554 = (1 + <h_1140@152:0>)) && ((1 + <h_1140@152:0>) <> 0))
          |- P[<h_1140@152:1>](<h_1140@152:0>:int,<h_1140@152:1>:int)
          Yhorn (Wed Sep 25 10:52:05 JST 2013)


(0=0) & (v_sep_fail_1449_sep_171_sep_0($1309)) -> 1=0.
(($1309-1=0) & ($1310<>0)) & (v_sep_h_1140_sep_149_sep_2_sep_166_sep_1($1311,$1311,$1312,$1310)) -> v_sep_fail_1449_sep_171_sep_0($1309).
(($1313<>0) & ($1314<>0) & ($1315+1>0) & (-$1313+$1316+1=0) & ($1317-$1318+1=0) & (-$1315+$1319-1=0)) & (v_sep_h_1140_sep_152_sep_2_sep_155_sep_1($1316,$1320,$1317,$1319)) & (v_sep_h_1140_sep_149_sep_1($1313,$1320)) & (v_sep_h_1140_sep_149_sep_1($1314,$1321)) -> v_sep_h_1140_sep_149_sep_2_sep_166_sep_1($1314,$1321,$1318,$1315).
(($1322=0) & ($1323=0) & ($1324-$1325=0)) & (v_sep_h_1140_sep_152_sep_1($1322,$1325)) -> v_sep_h_1140_sep_152_sep_2_sep_155_sep_1($1322,$1325,$1323,$1324).
(($1322+1<>0) & (-$1322+$1326-1=0)) & (v_sep_h_1140_sep_149_sep_1($1326,$1325)) -> v_sep_h_1140_sep_152_sep_1($1322,$1325).
-$1314+$1321=0 -> v_sep_h_1140_sep_149_sep_1($1314,$1321).


v_sep_fail_1449_sep_171_sep_0: X
v_sep_h_1140_sep_149_sep_1: X
v_sep_h_1140_sep_149_sep_2_sep_166_sep_1: X
v_sep_h_1140_sep_152_sep_1: X
v_sep_h_1140_sep_152_sep_2_sep_155_sep_1: X
...................Split disj [28] 2.729584
Reconstrcut: 3 **)

v_sep_fail_1449_sep_171_sep_0: (X) | (X)
v_sep_h_1140_sep_149_sep_1: X
v_sep_h_1140_sep_149_sep_2_sep_166_sep_1: X
v_sep_h_1140_sep_152_sep_1: X
v_sep_h_1140_sep_152_sep_2_sep_155_sep_1: X
.....
v_sep_fail_1449_sep_171_sep_0: (X) | (X)
v_sep_h_1140_sep_149_sep_1: X
v_sep_h_1140_sep_149_sep_2_sep_166_sep_1: X
v_sep_h_1140_sep_152_sep_1: X
v_sep_h_1140_sep_152_sep_2_sep_155_sep_1: X
.....Split conj [30] 2.742582
(Reconstrcut: 8 **)
v_sep_fail_1449_sep_171_sep_0: (X) | (X)
v_sep_h_1140_sep_149_sep_1: X
v_sep_h_1140_sep_149_sep_2_sep_166_sep_1: (X) & (X)
v_sep_h_1140_sep_152_sep_1: X
v_sep_h_1140_sep_152_sep_2_sep_155_sep_1: X
.............................
v_sep_fail_1449_sep_171_sep_0: (X) | (X)
v_sep_h_1140_sep_149_sep_1: X
v_sep_h_1140_sep_149_sep_2_sep_166_sep_1: (X) & (X)
v_sep_h_1140_sep_152_sep_1: X
v_sep_h_1140_sep_152_sep_2_sep_155_sep_1: X
.....
v_sep_fail_1449_sep_171_sep_0: (X) | (X)
v_sep_h_1140_sep_149_sep_1: X
v_sep_h_1140_sep_149_sep_2_sep_166_sep_1: (X) & (X)
v_sep_h_1140_sep_152_sep_1: X
v_sep_h_1140_sep_152_sep_2_sep_155_sep_1: X
.............................
v_sep_fail_1449_sep_171_sep_0: (X) | (X)
v_sep_h_1140_sep_149_sep_1: X
v_sep_h_1140_sep_149_sep_2_sep_166_sep_1: (X) & (X)
v_sep_h_1140_sep_152_sep_1: X
v_sep_h_1140_sep_152_sep_2_sep_155_sep_1: X
..............................
v_sep_fail_1449_sep_171_sep_0: (X) | (X)
v_sep_h_1140_sep_149_sep_1: X
v_sep_h_1140_sep_149_sep_2_sep_166_sep_1: (X) & (X)
v_sep_h_1140_sep_152_sep_1: X
v_sep_h_1140_sep_152_sep_2_sep_155_sep_1: X
................................(0=0) & (v_sep_fail_1449_sep_171_sep_0($1309)) -> 1=0.
(($1309-1=0) & ($1310<>0)) & (v_sep_h_1140_sep_149_sep_2_sep_166_sep_1($1311,$1311,$1312,$1310)) -> v_sep_fail_1449_sep_171_sep_0($1309).
(($1313<>0) & ($1314<>0) & ($1315+1>0) & (-$1313+$1316+1=0) & ($1317-$1318+1=0) & (-$1315+$1319-1=0)) & (v_sep_h_1140_sep_152_sep_2_sep_155_sep_1($1316,$1320,$1317,$1319)) & (v_sep_h_1140_sep_149_sep_1($1313,$1320)) & (v_sep_h_1140_sep_149_sep_1($1314,$1321)) -> v_sep_h_1140_sep_149_sep_2_sep_166_sep_1($1314,$1321,$1318,$1315).
(($1322=0) & ($1323=0) & ($1324-$1325=0)) & (v_sep_h_1140_sep_152_sep_1($1322,$1325)) -> v_sep_h_1140_sep_152_sep_2_sep_155_sep_1($1322,$1325,$1323,$1324).
(($1322+1<>0) & (-$1322+$1326-1=0)) & (v_sep_h_1140_sep_149_sep_1($1326,$1325)) -> v_sep_h_1140_sep_152_sep_1($1322,$1325).
-$1314+$1321=0 -> v_sep_h_1140_sep_149_sep_1($1314,$1321).

           (<h_1140@149:1> = <h_1140@149:0>) |- P[<h_1140@149:1>](<h_1140@149:0>:int,
                                                                  <h_1140@149:1>:int)
        solution:
          P[<fail_1449@171:0>]($1327:bool) = false
          P[<h_1140@149:1>]($1348:int,$1350:int) = ($1350 <= $1348)
          P[<<h_1140@149:2>@166:1>]($1330:int,$1332:int,$1334:int,$1336:int) =
          (($1332 <= ($1336 + $1330)) && (((2 * $1336) + $1332) <= $1330))
          P[<h_1140@152:1>]($1353:int,$1355:int) = ($1355 <= (1 + $1353))
          P[<<h_1140@152:2>@155:1>]($1339:int,$1341:int,$1343:int,$1345:int) = (((2 * $1345) + $1339) <= (1 + $1341))
        
      end HcSolver.solve_ub(229173)[4] (0.106984 sec.)
      begin HcSolver.check_validity(229688)[4]
        input:
          P[<fail_1449@171:0>](<fail_1449@171:0>:bool)|- bot
          
          P[<<h_1140@149:2>@166:1>](var476:int,var476:int,<k2_1139@168:0>:int,<k2_1139@168:1>:int),
          ((<k2_1139@168:1> <> 0) && <fail_1449@171:0>) |- P[<fail_1449@171:0>](
          <fail_1449@171:0>:bool)
          
          P[<h_1140@149:1>](<h_1140@149:0>:int,<h_1140@149:1>:int),
          P[<h_1140@149:1>](var478:int,var477:int),
          P[<<h_1140@152:2>@155:1>]((-1 + var478):int,var477:int,(-1 + <<h_1140@149:2>@166:0>):int,(
                                    1 + <<h_1140@149:2>@166:1>):int),
          ((var478 <> 0) && ((<h_1140@149:0> <> 0) && ((1 + <<h_1140@149:2>@166:1>) > 0)))
          |- P[<<h_1140@149:2>@166:1>](<h_1140@149:0>:int,<h_1140@149:1>:int,
                                       <<h_1140@149:2>@166:0>:int,<<h_1140@149:2>@166:1>:int)
          
          P[<h_1140@152:1>](<h_1140@152:0>:int,<h_1140@152:1>:int),
          ((<h_1140@152:0> = 0) && ((<<h_1140@152:2>@155:0> = 0) && (<<h_1140@152:2>@155:1> = <h_1140@152:1>)))
          |- P[<<h_1140@152:2>@155:1>](<h_1140@152:0>:int,<h_1140@152:1>:int,
                                       <<h_1140@152:2>@155:0>:int,<<h_1140@152:2>@155:1>:int)
          
          P[<h_1140@149:1>]((1 + <h_1140@152:0>):int,<h_1140@152:1>:int), (
          (1 + <h_1140@152:0>) <> 0) |- P[<h_1140@152:1>](<h_1140@152:0>:int,
                                                          <h_1140@152:1>:int)
          
           (<h_1140@149:1> = <h_1140@149:0>) |- P[<h_1140@149:1>](<h_1140@149:0>:int,
                                                                  <h_1140@149:1>:int)
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        
      end HcSolver.check_validity(229688)[4] (0.008999 sec.)
      solution:
        P[<fail_1449@171:0>]($1327:bool) = false
        P[<h_1140@149:1>]($1348:int,$1350:int) = ($1350 <= $1348)
        P[<<h_1140@149:2>@166:1>]($1330:int,$1332:int,$1334:int,$1336:int) =
        (($1332 <= ($1336 + $1330)) && (((2 * $1336) + $1332) <= $1330))
        P[<h_1140@152:1>]($1353:int,$1355:int) = ($1355 <= (1 + $1353))
        P[<<h_1140@152:2>@155:1>]($1339:int,$1341:int,$1343:int,$1345:int) = (((2 * $1345) + $1339) <= (1 + $1341))
    end YhornInterface.solve(229172)[3] (0.115983 sec.)
    
  end RefTypeInfer.infer_etrs(194749)[2] (2.261656 sec.)
  refinement types:
    main_1444: X
    f_1446: v1:int -> X
    main_1043: v1:int -> (v2:unit -> X) -> X
    rev_1041: v1:int -> (v2:int -> X) -> X
    h_1140: v1:int ->
            v2:{v2:int | (v1 = v2)} ->
            (v3:int -> v4:{v4:int | ((0 <= v4) && ((v1 + v4) <= v2))} -> (v5:int -> X) -> X) -> (v8:int -> X) -> X
    h_1140: v1:int ->
            v2:{v2:int | (v2 <= (1 + v1))} ->
            (v3:int -> v4:{v4:int | (v4 <= 1)} -> (v5:int -> X) -> X) -> (v8:int -> X) -> X
    k1_1141: (v1:int -> v2:int -> (v3:int -> X) -> X) -> v6:int -> v7:int -> (v8:int -> X) -> X
    k_k1_u_1201: v1:int -> v2:int -> (v3:int -> v4:int -> (v5:int -> X) -> X) -> (v8:int -> X) -> v10:unit -> X
    k2_1139: v1:int -> v2:int -> (v3:int -> X) -> X
    fail_1449: v1:{v1:bool | false} -> (v2:unit -> X) -> X
    f_1447: var581:int -> var580:unit -> X
    f_main_1445: var586:int -> (var585:unit -> X) -> var583:int -> X
    fail_1448: var590:bool -> (var589:unit -> X) -> X
    fail_1450: var594:bool -> (var593:unit -> X) -> X
    k_k2_u_1331: var600:int -> var599:int -> (var598:int -> X) -> var596:unit -> X
  abstraction types:
    main_1444: X
    f_1446: v1:int -> X
    main_1043: v1:int -> (v2:unit -> X) -> X
    rev_1041: v1:int -> (v2:int -> X) -> X
    h_1140: var601:int ->
            var602:int[var602 -> (var601 = var602),
                       var602 -> (var602 <= (1 + var601))] ->
            (var603:int ->
             var604:int[var604 -> ((0 <= var604) && ((var601 + var604) <= var602)),
                        var604 -> (var604 <= 1)] -> (var605:int -> X) -> X) -> 
            (var608:int -> X) -> X
    k1_1141: (v1:int -> v2:int -> (v3:int -> X) -> X) -> v6:int -> v7:int -> (v8:int -> X) -> X
    k_k1_u_1201: v1:int -> v2:int -> (v3:int -> v4:int -> (v5:int -> X) -> X) -> (v8:int -> X) -> v10:unit -> X
    k2_1139: v1:int -> v2:int -> (v3:int -> X) -> X
    fail_1449: v1:bool -> (v2:unit -> X) -> X
    f_1447: var581:int -> var580:unit -> X
    f_main_1445: var586:int -> (var585:unit -> X) -> var583:int -> X
    fail_1448: var590:bool -> (var589:unit -> X) -> X
    fail_1450: var594:bool -> (var593:unit -> X) -> X
    k_k2_u_1331: var600:int -> var599:int -> (var598:int -> X) -> var596:unit -> X
  
end AbsTypeInfer.refine(194748)[1] (2.270654 sec.)
DONE!

Prefix of spurious counter-example::
0; 0; 0; 0; 1; 0; 0; 0; 1

Program with abstraction types (CEGAR-cycle 5)::
Main: main_1444
  main_1444 -> (rand_int f_1446)
  f_1446 x_1419 -> (main_1043 x_1419 (f_1447 x_1419))
  f_1447 x_1419 x_1416 -> end
  f_main_1445 n_1044 k_main_1388 x_1391 when (x_1391 >= n_1044) -> (k_main_1388 ())
  f_main_1445 n_1044 k_main_1388 x_1391 when (not (x_1391 >= n_1044)) -> (fail_1450 true k_main_1388)
  fail_1448 b k -> {fail} => (k ())
  fail_1449 b k -> {fail} => (k ())
  fail_1450 b k -> {fail} => (k ())
  h_1140 x_1035 y_1036 k_1037 k_h_1249 when (x_1035 = 0) -> (k_1037 0 y_1036 k_h_1249)
  h_1140 x_1035 y_1036 k_1037 k_h_1249 when (not (x_1035 = 0)) ->
      (h_1140 (x_1035 - 1) y_1036 (k1_1141 k_1037) k_h_1249)
  k1_1141 k_1031 r1_1032 r2_1033 k_k1_1188 when (r2_1033 > 0) -> (k_k1_u_1201 r1_1032 r2_1033 k_1031 k_k1_1188 ())
  k1_1141 k_1031 r1_1032 r2_1033 k_k1_1188 when (not (r2_1033 > 0)) ->
      (fail_1448 true (k_k1_u_1201 r1_1032 r2_1033 k_1031 k_k1_1188))
  k2_1139 r1_1039 r2_1040 k_k2_1318 when (r2_1040 = 0) -> (k_k2_u_1331 r1_1039 r2_1040 k_k2_1318 ())
  k2_1139 r1_1039 r2_1040 k_k2_1318 when (not (r2_1040 = 0)) ->
      (fail_1449 true (k_k2_u_1331 r1_1039 r2_1040 k_k2_1318))
  k_k1_u_1201 r1_1032 r2_1033 k_1031 k_k1_1188 x_1191 -> (k_1031 (r1_1032 + 1) (r2_1033 - 1) k_k1_1188)
  k_k2_u_1331 r1_1039 r2_1040 k_k2_1318 x_1321 -> (k_k2_1318 r1_1039)
  main_1043 n_1044 k_main_1388 -> (rev_1041 n_1044 (f_main_1445 n_1044 k_main_1388))
  rev_1041 x_1042 k_rev_1346 -> (h_1140 x_1042 x_1042 k2_1139 k_rev_1346)
Types:
  main_1444 : X
  fail_1448 : (x_1:bool[x_1] -> (unit -> X) -> X)
  fail_1449 : (x_1:bool[x_1] -> (unit -> X) -> X)
  fail_1450 : (x_1:bool[x_1] -> (unit -> X) -> X)
  h_1140 : (x_1:int ->
            x_2:int[x_1 >= x_2 - 1; x_1 = x_2 - 1; x_1 <= x_2; x_1 = x_2] ->
            (x_4:int ->
             x_5:int[x_5 <= 1; x_5 >= 0 && x_1 <= x_2 - x_5; x_1 <= x_2 + x_4 - 1; x_4 >= 0; x_1 >= x_2 - x_5; x_5 = 0] ->
             (x_7:int[x_7 >= 1; x_7 >= 0] -> X) -> X) ->
            (x_11:int[x_2 <= x_11; x_1 <= x_11] -> X) -> X)
  
(5-1) Abstracting ... DONE!

(5-2) Checking HORS ... 