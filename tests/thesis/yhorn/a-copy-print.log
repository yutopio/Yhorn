MoCHi: Model Checker for Higher-Order Programs
  TRecS version: 1.30
  OCaml version: 4.00.1
  Command: ../mochi.opt -yhorn a-copy-print.ml

parsed::
 let make_array_1030 n_1031 i_1032 = let u_1045 = if 0 <= i_1032 && i_1032 < n_1031 then
                                                    ()
                                                  else
                                                    {fail} () 
                                     in
                                       0 
 in
 let update_1033 i_1034 n_1035 des_1036 x_1037 =
   let u_1097 = des_1036 i_1034 
   in
   let a_1038 j_1039 = if i_1034 = j_1039 then
                         x_1037
                       else
                         des_1036 i_1034 
   in
     a_1038 
 in
 let print_int_1040 n_1041 = () 
 in
 let f_1042 m_1043 src_1044 des_1045 =
   let rec bcopy_1046 m_1047 src_1048 des_1049 i_1050 =
     if i_1050 >= m_1047 then
       des_1049
     else
       let des_1051 = update_1033 i_1050 m_1047 des_1049 (src_1048 i_1050) 
       in
         bcopy_1046 m_1047 src_1048 des_1051 (i_1050 + 1) 
   in
   let rec print_array_1052 m_1053 array_1054 i_1055 =
     if i_1055 >= m_1053 then
       ()
     else
       let u_1244 = print_int_1040 (des_1045 i_1055) 
       in
         print_array_1052 m_1053 array_1054 (i_1055 + 1) 
   in
   let array_1056 = bcopy_1046 m_1043 src_1044 des_1045 0 
   in
     print_array_1052 m_1043 array_1056 0 
 in
 let main_1057 n_1058 =
   let array1_1059 = make_array_1030 n_1058 
   in
   let array2_1060 = make_array_1030 n_1058 
   in
     if n_1058 > 0 then
       f_1042 n_1058 array1_1059 array2_1060
     else
       () 
 in
   ()

set_target::
 let make_array_1030 n_1031 i_1032 = let u_1045 = if 0 <= i_1032 && i_1032 < n_1031 then
                                                    ()
                                                  else
                                                    {fail} () 
                                     in
                                       0 
 in
 let update_1033 i_1034 n_1035 des_1036 x_1037 =
   let u_1097 = des_1036 i_1034 
   in
   let a_1038 j_1039 = if i_1034 = j_1039 then
                         x_1037
                       else
                         des_1036 i_1034 
   in
     a_1038 
 in
 let print_int_1040 n_1041 = () 
 in
 let f_1042 m_1043 src_1044 des_1045 =
   let rec bcopy_1046 m_1047 src_1048 des_1049 i_1050 =
     if i_1050 >= m_1047 then
       des_1049
     else
       let des_1051 = update_1033 i_1050 m_1047 des_1049 (src_1048 i_1050) 
       in
         bcopy_1046 m_1047 src_1048 des_1051 (i_1050 + 1) 
   in
   let rec print_array_1052 m_1053 array_1054 i_1055 =
     if i_1055 >= m_1053 then
       ()
     else
       let u_1244 = print_int_1040 (des_1045 i_1055) 
       in
         print_array_1052 m_1053 array_1054 (i_1055 + 1) 
   in
   let array_1056 = bcopy_1046 m_1043 src_1044 des_1045 0 
   in
     print_array_1052 m_1043 array_1056 0 
 in
 let main_1057 n_1058 =
   let array1_1059 = make_array_1030 n_1058 
   in
   let array2_1060 = make_array_1030 n_1058 
   in
     if n_1058 > 0 then
       f_1042 n_1058 array1_1059 array2_1060
     else
       () 
 in
 let main_1285 = let arg1_1284 = rand_int () 
                 in
                   main_1057 arg1_1284 
 in
   ()

abst_list::
 let make_array_1030 (n_1031:int) (i_1032:int) =
   let u_1045 = if 0 <= i_1032 && i_1032 < n_1031 then
                  ()
                else
                  {fail} () 
   in
     0 
 in
 let update_1033 (i_1034:int) (n_1035:int) (des_1036:(int -> int)) (x_1037:int) =
   let u_1097 = des_1036 i_1034 
   in
   let a_1038 (j_1039:int) = if i_1034 = j_1039 then
                               x_1037
                             else
                               des_1036 i_1034 
   in
     a_1038 
 in
 let print_int_1040 (n_1041:int) = () 
 in
 let f_1042 (m_1043:int) (src_1044:(int -> int)) (des_1045:(int -> int)) =
   let rec bcopy_1046 (m_1047:int) (src_1048:(int -> int)) (des_1049:(
     int -> int)) (i_1050:int) =
     if i_1050 >= m_1047 then
       des_1049
     else
       let des_1051 = update_1033 i_1050 m_1047 des_1049 (src_1048 i_1050) 
       in
         bcopy_1046 m_1047 src_1048 des_1051 (i_1050 + 1) 
   in
   let rec print_array_1052 (m_1053:int) (array_1054:(int -> int)) (i_1055:int) =
     if i_1055 >= m_1053 then
       ()
     else
       let u_1244 = print_int_1040 (des_1045 i_1055) 
       in
         print_array_1052 m_1053 array_1054 (i_1055 + 1) 
   in
   let array_1056 = bcopy_1046 m_1043 src_1044 des_1045 0 
   in
     print_array_1052 m_1043 array_1056 0 
 in
 let main_1057 (n_1058:int) =
   let array1_1059 = make_array_1030 n_1058 
   in
   let array2_1060 = make_array_1030 n_1058 
   in
     if n_1058 > 0 then
       f_1042 n_1058 array1_1059 array2_1060
     else
       () 
 in
 let main_1285 = let arg1_1284 = rand_int () 
                 in
                   main_1057 arg1_1284 
 in
   ()

CPS::
 let make_array_1030 (n_1031:int) (i_1032:int) (k_make_array_1315:(int -> X)) =
   let k_make_array_u_1332 (x_1318:unit) = k_make_array_1315 0 
   in
   let k_make_array_u_1321 (b_1333:bool) =
     if b_1333 then
       k_make_array_u_1332 ()
     else
       {|fail|} () k_make_array_u_1332 
   in
     if 0 <= i_1032 then
       k_make_array_u_1321 (i_1032 < n_1031)
     else
       k_make_array_u_1321 false 
 in
 let update_1033
   (i_1034:int) (n_1035:int) (des_1036:(int -> ((int -> X) -> X))) (x_1037:int) (k_update_1380:(
   (int -> ((int -> X) -> X)) -> X)) =
   des_1036 i_1034
     (fun x_1386 ->
        k_update_1380
          (let a_1038 (j_1039:int) (k_update_a_1401:(int -> X)) =
             if i_1034 = j_1039 then
               k_update_a_1401 x_1037
             else
               des_1036 i_1034 k_update_a_1401 
           in
             a_1038)) 
 in
 let print_int_1040 (n_1041:int) (k_print_int_1432:(unit -> X)) = k_print_int_1432 () 
 in
 let f_1042
   (m_1043:int) (src_1044:(int -> ((int -> X) -> X))) (des_1045:(int -> ((int -> X) -> X))) (k_f_1476:(
   unit -> X)) =
   let rec bcopy_1046
     (m_1047:int) (src_1048:(int -> ((int -> X) -> X))) (des_1049:(int -> ((int -> X) -> X))) (i_1050:int) (k_f_bcopy_1535:(
     (int -> ((int -> X) -> X)) -> X)) =
     if i_1050 >= m_1047 then
       k_f_bcopy_1535 des_1049
     else
       src_1048 i_1050
         (fun x_1591 ->
            update_1033 i_1050 m_1047 des_1049 x_1591
              (fun x_1547 -> bcopy_1046 m_1047 src_1048 x_1547 (i_1050 + 1) k_f_bcopy_1535)) 
   in
   let rec print_array_1052
     (m_1053:int) (array_1054:(int -> ((int -> X) -> X))) (i_1055:int) (k_f_print_array_1664:(
     unit -> X)) =
     if i_1055 >= m_1053 then
       k_f_print_array_1664 ()
     else
       des_1045 i_1055
         (fun x_1687 ->
            print_int_1040 x_1687 (fun x_1667 -> print_array_1052 m_1053 array_1054 (i_1055 + 1) k_f_print_array_1664)) 
   in
     bcopy_1046 m_1043 src_1044 des_1045 0 (fun x_1715 -> print_array_1052 m_1043 x_1715 0 k_f_1476) 
 in
 let main_1057 (n_1058:int) (k_main_1787:(unit -> X)) =
   if n_1058 > 0 then
     f_1042 n_1058 (make_array_1030 n_1058) (make_array_1030 n_1058) k_main_1787
   else
     k_main_1787 () 
 in
   rand_int_cps () (fun x_1859 -> main_1057 x_1859 (fun x_1856 -> end))

Program with abstraction types (CEGAR-cycle 0)::
Main: main_1884
  main_1884 -> (rand_int f_1891)
  a_1038 i_1034 n_1035 x_1037 x_1386 des_1036 j_1039 k_update_a_1401 when (i_1034 = j_1039) -> (k_update_a_1401 x_1037)
  a_1038 i_1034 n_1035 x_1037 x_1386 des_1036 j_1039 k_update_a_1401 when (
      not (i_1034 = j_1039)) -> (des_1036 i_1034 k_update_a_1401)
  bcopy_1046 m_1043 m_1047 src_1048 des_1049 i_1050 k_f_bcopy_1535 when (i_1050 >= m_1047) -> (k_f_bcopy_1535 des_1049)
  bcopy_1046 m_1043 m_1047 src_1048 des_1049 i_1050 k_f_bcopy_1535 when (
      not (i_1050 >= m_1047)) -> (src_1048 i_1050 (f_bcopy_1886 i_1050 m_1043 m_1047 des_1049 k_f_bcopy_1535 src_1048))
  f_1042 m_1043 src_1044 des_1045 k_f_1476 ->
      (bcopy_1046 m_1043 m_1043 src_1044 des_1045 0 (f_f_1890 m_1043 des_1045 k_f_1476))
  f_1891 x_1859 -> (main_1057 x_1859 (f_1892 x_1859))
  f_1892 x_1859 x_1856 -> end
  f_bcopy_1886 i_1050 m_1043 m_1047 des_1049 k_f_bcopy_1535 src_1048 x_1591 ->
      (update_1033 i_1050 m_1047 des_1049 x_1591 (f_bcopy_1887 i_1050 m_1043 m_1047 x_1591 k_f_bcopy_1535 src_1048))
  f_bcopy_1887 i_1050 m_1043 m_1047 x_1591 k_f_bcopy_1535 src_1048 x_1547 ->
      (bcopy_1046 m_1043 m_1047 src_1048 x_1547 (i_1050 + 1) k_f_bcopy_1535)
  f_f_1890 m_1043 des_1045 k_f_1476 x_1715 -> (print_array_1052 m_1043 des_1045 m_1043 x_1715 0 k_f_1476)
  f_print_array_1888 i_1055 m_1043 m_1053 array_1054 des_1045 k_f_print_array_1664 x_1687 ->
      (print_int_1040 x_1687 (f_print_array_1889 i_1055 m_1043 m_1053 x_1687 array_1054 des_1045 k_f_print_array_1664))
  f_print_array_1889 i_1055 m_1043 m_1053 x_1687 array_1054 des_1045 k_f_print_array_1664 x_1667 ->
      (print_array_1052 m_1043 des_1045 m_1053 array_1054 (i_1055 + 1) k_f_print_array_1664)
  f_update_1885 i_1034 n_1035 x_1037 des_1036 k_update_1380 x_1386 ->
      (k_update_1380 (a_1038 i_1034 n_1035 x_1037 x_1386 des_1036))
  fail_1893 b k -> {fail} => (k ())
  k_make_array_u_1321 i_1032 n_1031 k_make_array_1315 b_1333 when b_1333 ->
      (k_make_array_u_1332 i_1032 n_1031 k_make_array_1315 ())
  k_make_array_u_1321 i_1032 n_1031 k_make_array_1315 b_1333 when (not b_1333) ->
      (fail_1893 true (k_make_array_u_1332 i_1032 n_1031 k_make_array_1315))
  k_make_array_u_1332 i_1032 n_1031 k_make_array_1315 x_1318 -> (k_make_array_1315 0)
  main_1057 n_1058 k_main_1787 when (n_1058 > 0) ->
      (f_1042 n_1058 (make_array_1030 n_1058) (make_array_1030 n_1058) k_main_1787)
  main_1057 n_1058 k_main_1787 when (not (n_1058 > 0)) -> (k_main_1787 ())
  make_array_1030 n_1031 i_1032 k_make_array_1315 when (0 <= i_1032) ->
      (k_make_array_u_1321 i_1032 n_1031 k_make_array_1315 (i_1032 < n_1031))
  make_array_1030 n_1031 i_1032 k_make_array_1315 when (not (0 <= i_1032)) ->
      (k_make_array_u_1321 i_1032 n_1031 k_make_array_1315 false)
  print_array_1052 m_1043 des_1045 m_1053 array_1054 i_1055 k_f_print_array_1664 when (
      i_1055 >= m_1053) -> (k_f_print_array_1664 ())
  print_array_1052 m_1043 des_1045 m_1053 array_1054 i_1055 k_f_print_array_1664 when (
      not (i_1055 >= m_1053)) ->
      (des_1045 i_1055 (f_print_array_1888 i_1055 m_1043 m_1053 array_1054 des_1045 k_f_print_array_1664))
  print_int_1040 n_1041 k_print_int_1432 -> (k_print_int_1432 ())
  update_1033 i_1034 n_1035 des_1036 x_1037 k_update_1380 ->
      (des_1036 i_1034 (f_update_1885 i_1034 n_1035 x_1037 des_1036 k_update_1380))
Types:
  main_1884 : X
  bcopy_1046 : (int ->
                int ->
                (int -> (int -> X) -> X) -> (int -> (int -> X) -> X) -> int -> ((int -> (int -> X) -> X) -> X) -> X)
  fail_1893 : (x_1:bool[x_1] -> (unit -> X) -> X)
  print_array_1052 : (int -> (int -> (int -> X) -> X) -> int -> (int -> (int -> X) -> X) -> int -> (unit -> X) -> X)
  
(0-1) Abstracting ... DONE!

(0-2) Checking HORS ... DONE!

Error trace::
  main_1884 ... --> 
  f_1891 ... --> 
  main_1057 [1/2] ... --> 
  f_1042 ... --> 
  bcopy_1046 [2/2] ... --> 
  make_array_1030 [1/2] ... --> 
  k_make_array_u_1321 [1/2] ... --> 
  k_make_array_u_1332 ... --> 
  f_bcopy_1886 ... --> 
  update_1033 ... --> 
  make_array_1030 [1/2] ... --> 
  k_make_array_u_1321 [2/2] ... --> 
  fail_1893 ... --> fail -->
  ERROR!

Spurious counter-example::
  0; 0; 0; 0; 1; 0; 0; 0; 0; 0; 0; 1; 0

(0-3) Checking counter-example ... DONE!

(0-4) Discovering predicates ... 
begin AbsTypeInfer.refine(330)[1]
  program:
    main_1884  | true = ((Random.int 0) f_1891)
    a_1038 i_1034 n_1035 x_1037 x_1386 des_1036 j_1039 k_update_a_1401 | (
    i_1034 = j_1039) = (k_update_a_1401 x_1037)
    a_1038 i_1034 n_1035 x_1037 x_1386 des_1036 j_1039 k_update_a_1401 | (
    not (i_1034 = j_1039)) = (des_1036 i_1034
                                       k_update_a_1401)
    bcopy_1046 m_1043 m_1047 src_1048 des_1049 i_1050 k_f_bcopy_1535 | (
    i_1050 >= m_1047) = (k_f_bcopy_1535 des_1049)
    bcopy_1046 m_1043 m_1047 src_1048 des_1049 i_1050 k_f_bcopy_1535 | (
    not (i_1050 >= m_1047)) = (src_1048 i_1050
                                        (f_bcopy_1886 i_1050
                                                      m_1043
                                                      m_1047
                                                      des_1049
                                                      k_f_bcopy_1535
                                                      src_1048))
    f_1042 m_1043 src_1044 des_1045 k_f_1476 | true = (bcopy_1046
                                                         m_1043
                                                         m_1043
                                                         src_1044
                                                         des_1045
                                                         0
                                                         (f_f_1890 m_1043
                                                                   des_1045
                                                                   k_f_1476))
    f_1891 x_1859 | true = (main_1057 x_1859
                                      (f_1892 x_1859))
    f_1892 x_1859 x_1856 | true = end
    f_bcopy_1886 i_1050 m_1043 m_1047 des_1049 k_f_bcopy_1535 src_1048 x_1591 | true = (
    update_1033 i_1050
                m_1047
                des_1049
                x_1591
                (f_bcopy_1887 i_1050
                              m_1043
                              m_1047
                              x_1591
                              k_f_bcopy_1535
                              src_1048))
    f_bcopy_1887 i_1050 m_1043 m_1047 x_1591 k_f_bcopy_1535 src_1048 x_1547 | true = (
    bcopy_1046 m_1043
               m_1047
               src_1048
               x_1547
               (i_1050 + 1)
               k_f_bcopy_1535)
    f_f_1890 m_1043 des_1045 k_f_1476 x_1715 | true = (print_array_1052 m_1043
                                                                    des_1045
                                                                    m_1043
                                                                    x_1715
                                                                    0
                                                                    k_f_1476)
    f_print_array_1888 i_1055 m_1043 m_1053 array_1054 des_1045 k_f_print_array_1664 x_1687 | true = (
    print_int_1040 x_1687
                   (f_print_array_1889 i_1055
                                       m_1043
                                       m_1053
                                       x_1687
                                       array_1054
                                       des_1045
                                       k_f_print_array_1664))
    f_print_array_1889 i_1055 m_1043 m_1053 x_1687 array_1054 des_1045 k_f_print_array_1664 x_1667 | true = (
    print_array_1052 m_1043
                     des_1045
                     m_1053
                     array_1054
                     (i_1055 + 1)
                     k_f_print_array_1664)
    f_update_1885 i_1034 n_1035 x_1037 des_1036 k_update_1380 x_1386 | true = (
    k_update_1380 (a_1038 i_1034
                          n_1035
                          x_1037
                          x_1386
                          des_1036))
    fail_1893 b k | true = (fail ())
    k_make_array_u_1321 i_1032 n_1031 k_make_array_1315 b_1333 | b_1333 = (
    k_make_array_u_1332 i_1032
                        n_1031
                        k_make_array_1315
                        ())
    k_make_array_u_1321 i_1032 n_1031 k_make_array_1315 b_1333 | (not b_1333) = (
    fail_1893 true
              (k_make_array_u_1332 i_1032
                                   n_1031
                                   k_make_array_1315))
    k_make_array_u_1332 i_1032 n_1031 k_make_array_1315 x_1318 | true = (
    k_make_array_1315 0)
    main_1057 n_1058 k_main_1787 | (n_1058 > 0) = (f_1042
                                                     n_1058
                                                     (make_array_1030 n_1058)
                                                     (make_array_1030 n_1058)
                                                     k_main_1787)
    main_1057 n_1058 k_main_1787 | (not (n_1058 > 0)) = (k_main_1787 ())
    make_array_1030 n_1031 i_1032 k_make_array_1315 | (0 <= i_1032) = (
    k_make_array_u_1321 i_1032
                        n_1031
                        k_make_array_1315
                        (i_1032 < n_1031))
    make_array_1030 n_1031 i_1032 k_make_array_1315 | (not (0 <= i_1032)) = (
    k_make_array_u_1321 i_1032
                        n_1031
                        k_make_array_1315
                        false)
    print_array_1052 m_1043 des_1045 m_1053 array_1054 i_1055 k_f_print_array_1664 | (
    i_1055 >= m_1053) = (k_f_print_array_1664 ())
    print_array_1052 m_1043 des_1045 m_1053 array_1054 i_1055 k_f_print_array_1664 | (
    not (i_1055 >= m_1053)) = (des_1045
                                 i_1055
                                 (f_print_array_1888 i_1055
                                                     m_1043
                                                     m_1053
                                                     array_1054
                                                     des_1045
                                                     k_f_print_array_1664))
    print_int_1040 n_1041 k_print_int_1432 | true = (k_print_int_1432 ())
    update_1033 i_1034 n_1035 des_1036 x_1037 k_update_1380 | true = (
    des_1036 i_1034
             (f_update_1885 i_1034
                            n_1035
                            x_1037
                            des_1036
                            k_update_1380))
    main_1884:X
    a_1038:int -> int -> int -> int -> (int -> (int -> X) -> X) -> int -> (int -> X) -> X
    bcopy_1046:int ->
               int ->
               (int -> (int -> X) -> X) -> (int -> (int -> X) -> X) -> int -> ((int -> (int -> X) -> X) -> X) -> X
    f_1042:int -> (int -> (int -> X) -> X) -> (int -> (int -> X) -> X) -> (unit -> X) -> X
    f_1891:int -> X
    f_1892:int -> unit -> X
    f_bcopy_1886:int ->
                 int ->
                 int ->
                 (int -> (int -> X) -> X) -> ((int -> (int -> X) -> X) -> X) -> (int -> (int -> X) -> X) -> int -> X
    f_bcopy_1887:int ->
                 int ->
                 int ->
                 int -> ((int -> (int -> X) -> X) -> X) -> (int -> (int -> X) -> X) -> (int -> (int -> X) -> X) -> X
    f_f_1890:int -> (int -> (int -> X) -> X) -> (unit -> X) -> (int -> (int -> X) -> X) -> X
    f_print_array_1888:int ->
                       int -> int -> (int -> (int -> X) -> X) -> (int -> (int -> X) -> X) -> (unit -> X) -> int -> X
    f_print_array_1889:int ->
                       int ->
                       int -> int -> (int -> (int -> X) -> X) -> (int -> (int -> X) -> X) -> (unit -> X) -> unit -> X
    f_update_1885:int -> int -> int -> (int -> (int -> X) -> X) -> ((int -> (int -> X) -> X) -> X) -> int -> X
    fail_1893:bool -> (unit -> X) -> X
    k_make_array_u_1321:int -> int -> (int -> X) -> bool -> X
    k_make_array_u_1332:int -> int -> (int -> X) -> unit -> X
    main_1057:int -> (unit -> X) -> X
    make_array_1030:int -> int -> (int -> X) -> X
    print_array_1052:int -> (int -> (int -> X) -> X) -> int -> (int -> (int -> X) -> X) -> int -> (unit -> X) -> X
    print_int_1040:int -> (unit -> X) -> X
    update_1033:int -> int -> (int -> (int -> X) -> X) -> int -> ((int -> (int -> X) -> X) -> X) -> X
  inlined functions: a_1038,f_1042,f_1891,f_1892,f_bcopy_1886,f_bcopy_1887,f_f_1890,f_print_array_1888,f_print_array_1889,f_update_1885,k_make_array_u_1321,k_make_array_u_1332,main_1057,make_array_1030,print_int_1040,update_1033
  counterexample: 0:0:0:0:1:0:0:0:0:0:0:1:0
  error traces:
    [true.nop(<f_1891@4:0> = var2)
     [true.(<main_1057@6:0> = <f_1891@4:0>)
      [(<main_1057@6:0> > 0).(<f_1042@9:0> = <main_1057@6:0>)
       [true.((<bcopy_1046@11:0> = <f_1042@9:0>) && ((<bcopy_1046@11:1> = <f_1042@9:0>) && (<bcopy_1046@11:4> = 0)))
        [(not (<bcopy_1046@11:4> >= <bcopy_1046@11:1>)).(<<bcopy_1046@11:2>@14:0> = <bcopy_1046@11:4>)
         [true.(<<f_1042@9:1>@16:0> = <<bcopy_1046@11:2>@14:0>)
          [true.((<make_array_1030@18:0> = <main_1057@6:0>) && (<make_array_1030@18:1> = <<f_1042@9:1>@16:0>))
           [(0 <= <make_array_1030@18:1>).
            ((<k_make_array_u_1321@21:0> = <make_array_1030@18:1>) &&
             ((<k_make_array_u_1321@21:1> = <make_array_1030@18:0>) &&
              (<k_make_array_u_1321@21:3> = (<make_array_1030@18:1> < <make_array_1030@18:0>))))
            [<k_make_array_u_1321@21:3>.
             ((<k_make_array_u_1332@24:0> = <k_make_array_u_1321@21:0>) &&
              ((<k_make_array_u_1332@24:1> = <k_make_array_u_1321@21:1>) && (<k_make_array_u_1332@24:3> = ())))
             [true.(<<k_make_array_u_1332@24:2>@26:0> = 0)
              [true.(<<k_make_array_u_1321@21:2>@28:0> = <<k_make_array_u_1332@24:2>@26:0>)
               [true.(<<make_array_1030@18:2>@30:0> = <<k_make_array_u_1321@21:2>@28:0>)
                [true.(<<<f_1042@9:1>@16:1>@32:0> = <<make_array_1030@18:2>@30:0>)
                 [true.(<<<bcopy_1046@11:2>@14:1>@34:0> = <<<f_1042@9:1>@16:1>@32:0>)
                  [true.
                   ((<f_bcopy_1886@36:0> = <bcopy_1046@11:4>) &&
                    ((<f_bcopy_1886@36:1> = <bcopy_1046@11:0>) &&
                     ((<f_bcopy_1886@36:2> = <bcopy_1046@11:1>) &&
                      (<f_bcopy_1886@36:6> = <<<bcopy_1046@11:2>@14:1>@34:0>))))
                   [true.
                    ((<update_1033@38:0> = <f_bcopy_1886@36:0>) &&
                     ((<update_1033@38:1> = <f_bcopy_1886@36:2>) && (<update_1033@38:3> = <f_bcopy_1886@36:6>)))
                    [true.(<<update_1033@38:2>@40:0> = <update_1033@38:0>)
                     [true.(<<f_bcopy_1886@36:3>@42:0> = <<update_1033@38:2>@40:0>)
                      [true.(<<bcopy_1046@11:3>@44:0> = <<f_bcopy_1886@36:3>@42:0>)
                       [true.(<<f_1042@9:2>@46:0> = <<bcopy_1046@11:3>@44:0>)
                        [true.
                         ((<make_array_1030@48:0> = <main_1057@6:0>) && (<make_array_1030@48:1> = <<f_1042@9:2>@46:0>))
                         [(0 <= <make_array_1030@48:1>).
                          ((<k_make_array_u_1321@51:0> = <make_array_1030@48:1>) &&
                           ((<k_make_array_u_1321@51:1> = <make_array_1030@48:0>) &&
                            (<k_make_array_u_1321@51:3> = (<make_array_1030@48:1> < <make_array_1030@48:0>))))
                          [(not <k_make_array_u_1321@51:3>).(<fail_1893@54:0> = true)[true.error
  begin RefTypeInfer.infer_etrs(331)[2]
    horn clauses:
      P[<fail_1893@54:0>](<fail_1893@54:0>:bool)|- bot
      
      P[<k_make_array_u_1321@51:3>](<k_make_array_u_1321@51:0>:int,<k_make_array_u_1321@51:1>:int,false:bool),
      <fail_1893@54:0> |- P[<fail_1893@54:0>](<fail_1893@54:0>:bool)
      
      P[<make_array_1030@48:1>](<k_make_array_u_1321@51:1>:int,<k_make_array_u_1321@51:0>:int),
      ((0 <= <k_make_array_u_1321@51:0>) &&
       (<k_make_array_u_1321@51:3> = (<k_make_array_u_1321@51:0> < <k_make_array_u_1321@51:1>)))
      |- P[<k_make_array_u_1321@51:3>](<k_make_array_u_1321@51:0>:int,
                                       <k_make_array_u_1321@51:1>:int,
                                       <k_make_array_u_1321@51:3>:bool)
      
      P[<main_1057@6:0>](<make_array_1030@48:0>:int),
      P[<<f_1042@9:2>@46:0>](<make_array_1030@48:0>:int,<make_array_1030@48:1>:int), (
      <make_array_1030@48:0> > 0) |- P[<make_array_1030@48:1>](<make_array_1030@48:0>:int,
                                                               <make_array_1030@48:1>:int)
      
      P[<f_1042@9:0>](<f_1042@9:0>:int),
      P[<<bcopy_1046@11:3>@44:0>](<f_1042@9:0>:int,<f_1042@9:0>:int,<<f_1042@9:2>@46:0>:int)|- P[<<f_1042@9:2>@46:0>](
      <f_1042@9:0>:int,<<f_1042@9:2>@46:0>:int)
      
      P[<bcopy_1046@11:4>](<bcopy_1046@11:0>:int,<bcopy_1046@11:1>:int,<<bcopy_1046@11:2>@14:0>:int),
      P[<<f_bcopy_1886@36:3>@42:0>](<<bcopy_1046@11:2>@14:0>:int,<bcopy_1046@11:0>:int,<bcopy_1046@11:1>:int,<<bcopy_1046@11:3>@44:0>:int),
      (<<bcopy_1046@11:2>@14:0> < <bcopy_1046@11:1>)
      |- P[<<bcopy_1046@11:3>@44:0>](<bcopy_1046@11:0>:int,<bcopy_1046@11:1>:int,
                                     <<bcopy_1046@11:3>@44:0>:int)
      
      P[<f_bcopy_1886@36:6>](<f_bcopy_1886@36:0>:int,<f_bcopy_1886@36:1>:int,<f_bcopy_1886@36:2>:int,<update_1033@38:3>:int),
      P[<<update_1033@38:2>@40:0>](<f_bcopy_1886@36:0>:int,<f_bcopy_1886@36:2>:int,<<f_bcopy_1886@36:3>@42:0>:int)|- P[<<f_bcopy_1886@36:3>@42:0>](
      <f_bcopy_1886@36:0>:int,<f_bcopy_1886@36:1>:int,<f_bcopy_1886@36:2>:int,
      <<f_bcopy_1886@36:3>@42:0>:int)
      
      P[<update_1033@38:3>](<update_1033@38:0>:int,<update_1033@38:1>:int,<update_1033@38:3>:int),
      (<<update_1033@38:2>@40:0> = <update_1033@38:0>)
      |- P[<<update_1033@38:2>@40:0>](<update_1033@38:0>:int,<update_1033@38:1>:int,
                                      <<update_1033@38:2>@40:0>:int)
      
      P[<f_bcopy_1886@36:6>](<update_1033@38:0>:int,<f_bcopy_1886@36:1>:int,<update_1033@38:1>:int,<update_1033@38:3>:int)|- P[<update_1033@38:3>](
      <update_1033@38:0>:int,<update_1033@38:1>:int,<update_1033@38:3>:int)
      
      P[<bcopy_1046@11:4>](<f_bcopy_1886@36:1>:int,<f_bcopy_1886@36:2>:int,<f_bcopy_1886@36:0>:int),
      P[<<<bcopy_1046@11:2>@14:1>@34:0>](<f_bcopy_1886@36:1>:int,<f_bcopy_1886@36:2>:int,<f_bcopy_1886@36:0>:int,<f_bcopy_1886@36:6>:int),
      (<f_bcopy_1886@36:0> < <f_bcopy_1886@36:2>)
      |- P[<f_bcopy_1886@36:6>](<f_bcopy_1886@36:0>:int,<f_bcopy_1886@36:1>:int,
                                <f_bcopy_1886@36:2>:int,<f_bcopy_1886@36:6>:int)
      
      P[<f_1042@9:0>](<bcopy_1046@11:0>:int),
      P[<<<f_1042@9:1>@16:1>@32:0>](<bcopy_1046@11:0>:int,<<bcopy_1046@11:2>@14:0>:int,<<<bcopy_1046@11:2>@14:1>@34:0>:int),
      (<bcopy_1046@11:0> = <bcopy_1046@11:1>)
      |- P[<<<bcopy_1046@11:2>@14:1>@34:0>](<bcopy_1046@11:0>:int,<bcopy_1046@11:1>:int,
                                            <<bcopy_1046@11:2>@14:0>:int,
                                            <<<bcopy_1046@11:2>@14:1>@34:0>:int)
      
      P[<main_1057@6:0>](<f_1042@9:0>:int),
      P[<<make_array_1030@18:2>@30:0>](<f_1042@9:0>:int,<<f_1042@9:1>@16:0>:int,<<<f_1042@9:1>@16:1>@32:0>:int),
      P[<f_1042@9:0>](<f_1042@9:0>:int), (<f_1042@9:0> > 0)
      |- P[<<<f_1042@9:1>@16:1>@32:0>](<f_1042@9:0>:int,<<f_1042@9:1>@16:0>:int,
                                       <<<f_1042@9:1>@16:1>@32:0>:int)
      
      P[<make_array_1030@18:1>](<make_array_1030@18:0>:int,<make_array_1030@18:1>:int),
      P[<<k_make_array_u_1321@21:2>@28:0>](<make_array_1030@18:1>:int,<make_array_1030@18:0>:int,<<make_array_1030@18:2>@30:0>:int),
      (0 <= <make_array_1030@18:1>)
      |- P[<<make_array_1030@18:2>@30:0>](<make_array_1030@18:0>:int,
                                          <make_array_1030@18:1>:int,
                                          <<make_array_1030@18:2>@30:0>:int)
      
      P[<k_make_array_u_1321@21:3>](<k_make_array_u_1321@21:0>:int,<k_make_array_u_1321@21:1>:int,true:bool),
      P[<<k_make_array_u_1332@24:2>@26:0>](<k_make_array_u_1321@21:0>:int,<k_make_array_u_1321@21:1>:int,<<k_make_array_u_1321@21:2>@28:0>:int)|- P[<<k_make_array_u_1321@21:2>@28:0>](
      <k_make_array_u_1321@21:0>:int,<k_make_array_u_1321@21:1>:int,<<k_make_array_u_1321@21:2>@28:0>:int)
      
      P[<k_make_array_u_1332@24:3>](<k_make_array_u_1332@24:0>:int,<k_make_array_u_1332@24:1>:int,<k_make_array_u_1332@24:3>:unit),
      (<<k_make_array_u_1332@24:2>@26:0> = 0)
      |- P[<<k_make_array_u_1332@24:2>@26:0>](<k_make_array_u_1332@24:0>:int,
                                              <k_make_array_u_1332@24:1>:int,
                                              <<k_make_array_u_1332@24:2>@26:0>:int)
      
      P[<k_make_array_u_1321@21:3>](<k_make_array_u_1332@24:0>:int,<k_make_array_u_1332@24:1>:int,true:bool)|- P[<k_make_array_u_1332@24:3>](
      <k_make_array_u_1332@24:0>:int,<k_make_array_u_1332@24:1>:int,<k_make_array_u_1332@24:3>:unit)
      
      P[<make_array_1030@18:1>](<k_make_array_u_1321@21:1>:int,<k_make_array_u_1321@21:0>:int),
      ((0 <= <k_make_array_u_1321@21:0>) &&
       (<k_make_array_u_1321@21:3> = (<k_make_array_u_1321@21:0> < <k_make_array_u_1321@21:1>)))
      |- P[<k_make_array_u_1321@21:3>](<k_make_array_u_1321@21:0>:int,
                                       <k_make_array_u_1321@21:1>:int,
                                       <k_make_array_u_1321@21:3>:bool)
      
      P[<main_1057@6:0>](<make_array_1030@18:0>:int),
      P[<<f_1042@9:1>@16:0>](<make_array_1030@18:0>:int,<make_array_1030@18:1>:int), (
      <make_array_1030@18:0> > 0) |- P[<make_array_1030@18:1>](<make_array_1030@18:0>:int,
                                                               <make_array_1030@18:1>:int)
      
      P[<f_1042@9:0>](<f_1042@9:0>:int),
      P[<<bcopy_1046@11:2>@14:0>](<f_1042@9:0>:int,<f_1042@9:0>:int,<<f_1042@9:1>@16:0>:int)|- P[<<f_1042@9:1>@16:0>](
      <f_1042@9:0>:int,<<f_1042@9:1>@16:0>:int)
      
      P[<bcopy_1046@11:4>](<bcopy_1046@11:0>:int,<bcopy_1046@11:1>:int,<<bcopy_1046@11:2>@14:0>:int),
      (<<bcopy_1046@11:2>@14:0> < <bcopy_1046@11:1>)
      |- P[<<bcopy_1046@11:2>@14:0>](<bcopy_1046@11:0>:int,<bcopy_1046@11:1>:int,
                                     <<bcopy_1046@11:2>@14:0>:int)
      
      P[<f_1042@9:0>](<bcopy_1046@11:0>:int), ((<bcopy_1046@11:4> = 0) && (<bcopy_1046@11:0> = <bcopy_1046@11:1>))
      |- P[<bcopy_1046@11:4>](<bcopy_1046@11:0>:int,<bcopy_1046@11:1>:int,
                              <bcopy_1046@11:4>:int)
      
      P[<main_1057@6:0>](<f_1042@9:0>:int), (<f_1042@9:0> > 0) |- P[<f_1042@9:0>](<f_1042@9:0>:int)
      
      P[<f_1891@4:0>](<main_1057@6:0>:int)|- P[<main_1057@6:0>](<main_1057@6:0>:int)
      
      |- P[<f_1891@4:0>](<f_1891@4:0>:int)
    call trees:
      <main_1884@1>
        <f_1891@4>
          <main_1057@6>
            <f_1042@9>
              <bcopy_1046@11>
              </<bcopy_1046@11:2>@14>
            </<f_1042@9:1>@16>
            <make_array_1030@18>
              <k_make_array_u_1321@21>
                <k_make_array_u_1332@24>
                </<k_make_array_u_1332@24:2>@26>
              </<k_make_array_u_1321@21:2>@28>
            </<make_array_1030@18:2>@30>
            <<<f_1042@9:1>@16:1>@32>
              <<<bcopy_1046@11:2>@14:1>@34>
                <f_bcopy_1886@36>
                  <update_1033@38>
                  </<update_1033@38:2>@40>
                </<f_bcopy_1886@36:3>@42>
              </<bcopy_1046@11:3>@44>
            </<f_1042@9:2>@46>
            <make_array_1030@48>
              <k_make_array_u_1321@51>
                <fail_1893@54>
    inlined horn clauses:
      P[<fail_1893@54:0>](<fail_1893@54:0>:bool)|- bot
      
      P[<<bcopy_1046@11:3>@44:0>](<k_make_array_u_1321@51:1>:int,<k_make_array_u_1321@51:1>:int,<k_make_array_u_1321@51:0>:int),
      ((0 <= <k_make_array_u_1321@51:0>) &&
       ((<k_make_array_u_1321@51:1> > 0) &&
        ((<k_make_array_u_1321@51:0> >= <k_make_array_u_1321@51:1>) && <fail_1893@54:0>)))
      |- P[<fail_1893@54:0>](<fail_1893@54:0>:bool)
      
      P[<<<bcopy_1046@11:2>@14:1>@34:0>](<bcopy_1046@11:0>:int,<bcopy_1046@11:1>:int,<<bcopy_1046@11:3>@44:0>:int,var6:int),
      P[<bcopy_1046@11:4>](<bcopy_1046@11:0>:int,<bcopy_1046@11:1>:int,<<bcopy_1046@11:3>@44:0>:int),
      (<<bcopy_1046@11:3>@44:0> < <bcopy_1046@11:1>)
      |- P[<<bcopy_1046@11:3>@44:0>](<bcopy_1046@11:0>:int,<bcopy_1046@11:1>:int,
                                     <<bcopy_1046@11:3>@44:0>:int)
      
      P[<<bcopy_1046@11:2>@14:0>](<bcopy_1046@11:0>:int,<bcopy_1046@11:0>:int,<<bcopy_1046@11:2>@14:0>:int),
      ((<<<bcopy_1046@11:2>@14:1>@34:0> = 0) &&
       ((0 <= <<bcopy_1046@11:2>@14:0>) &&
        ((<<bcopy_1046@11:2>@14:0> < <bcopy_1046@11:0>) &&
         ((<bcopy_1046@11:0> > 0) && (<bcopy_1046@11:0> = <bcopy_1046@11:1>)))))
      |- P[<<<bcopy_1046@11:2>@14:1>@34:0>](<bcopy_1046@11:0>:int,<bcopy_1046@11:1>:int,
                                            <<bcopy_1046@11:2>@14:0>:int,
                                            <<<bcopy_1046@11:2>@14:1>@34:0>:int)
      
      P[<bcopy_1046@11:4>](<bcopy_1046@11:0>:int,<bcopy_1046@11:1>:int,<<bcopy_1046@11:2>@14:0>:int),
      (<<bcopy_1046@11:2>@14:0> < <bcopy_1046@11:1>)
      |- P[<<bcopy_1046@11:2>@14:0>](<bcopy_1046@11:0>:int,<bcopy_1046@11:1>:int,
                                     <<bcopy_1046@11:2>@14:0>:int)
      
       ((<bcopy_1046@11:4> = 0) && ((<bcopy_1046@11:0> > 0) && (<bcopy_1046@11:0> = <bcopy_1046@11:1>)))
      |- P[<bcopy_1046@11:4>](<bcopy_1046@11:0>:int,<bcopy_1046@11:1>:int,
                              <bcopy_1046@11:4>:int)
    begin ParamSubstInfer.infer(4672)[3]
      
    end ParamSubstInfer.infer(4672)[3] (0.060990 sec.)
    inferred extra parameters:
      
    begin RefTypeInfer.elim_coeffs(4674)[3]
      
    end RefTypeInfer.elim_coeffs(4674)[3] (0.004000 sec.)
    begin YhornInterface.solve(5313)[3]
      begin HcSolver.solve_ub(5314)[4]
        encoded:
          P[<fail_1893@54:0>](<fail_1893@54:0>:int)|- bot
          
          P[<<bcopy_1046@11:3>@44:0>](<k_make_array_u_1321@51:1>:int,<k_make_array_u_1321@51:1>:int,<k_make_array_u_1321@51:0>:int),
          ((0 <= <k_make_array_u_1321@51:0>) &&
           ((<k_make_array_u_1321@51:1> > 0) &&
            ((<k_make_array_u_1321@51:0> >= <k_make_array_u_1321@51:1>) && (<fail_1893@54:0> = 1))))
          |- P[<fail_1893@54:0>](<fail_1893@54:0>:int)
          
          P[<<<bcopy_1046@11:2>@14:1>@34:0>](<bcopy_1046@11:0>:int,<bcopy_1046@11:1>:int,<<bcopy_1046@11:3>@44:0>:int,var6:int),
          P[<bcopy_1046@11:4>](<bcopy_1046@11:0>:int,<bcopy_1046@11:1>:int,<<bcopy_1046@11:3>@44:0>:int),
          (<<bcopy_1046@11:3>@44:0> < <bcopy_1046@11:1>)
          |- P[<<bcopy_1046@11:3>@44:0>](<bcopy_1046@11:0>:int,<bcopy_1046@11:1>:int,
                                         <<bcopy_1046@11:3>@44:0>:int)
          
          P[<<bcopy_1046@11:2>@14:0>](<bcopy_1046@11:0>:int,<bcopy_1046@11:0>:int,<<bcopy_1046@11:2>@14:0>:int),
          ((<<<bcopy_1046@11:2>@14:1>@34:0> = 0) &&
           ((0 <= <<bcopy_1046@11:2>@14:0>) &&
            ((<<bcopy_1046@11:2>@14:0> < <bcopy_1046@11:0>) &&
             ((<bcopy_1046@11:0> > 0) && (<bcopy_1046@11:0> = <bcopy_1046@11:1>)))))
          |- P[<<<bcopy_1046@11:2>@14:1>@34:0>](<bcopy_1046@11:0>:int,
                                                <bcopy_1046@11:1>:int,
                                                <<bcopy_1046@11:2>@14:0>:int,
                                                <<<bcopy_1046@11:2>@14:1>@34:0>:int)
          
          P[<bcopy_1046@11:4>](<bcopy_1046@11:0>:int,<bcopy_1046@11:1>:int,<<bcopy_1046@11:2>@14:0>:int),
          (<<bcopy_1046@11:2>@14:0> < <bcopy_1046@11:1>)
          |- P[<<bcopy_1046@11:2>@14:0>](<bcopy_1046@11:0>:int,<bcopy_1046@11:1>:int,
                                         <<bcopy_1046@11:2>@14:0>:int)
          
           ((<bcopy_1046@11:4> = 0) && ((<bcopy_1046@11:0> > 0) && (<bcopy_1046@11:0> = <bcopy_1046@11:1>)))
          |- P[<bcopy_1046@11:4>](<bcopy_1046@11:0>:int,<bcopy_1046@11:1>:int,
                                  <bcopy_1046@11:4>:int)
        input to Yhorn:
          P[<fail_1893@54:0>](<fail_1893@54:0>:int)|- bot
          
          P[<<bcopy_1046@11:3>@44:0>](<k_make_array_u_1321@51:1>:int,<k_make_array_u_1321@51:1>:int,<k_make_array_u_1321@51:0>:int),
          ((<k_make_array_u_1321@51:0> >= <k_make_array_u_1321@51:1>) &&
           ((<k_make_array_u_1321@51:1> > 0) && ((0 <= <k_make_array_u_1321@51:0>) && (<fail_1893@54:0> = 1))))
          |- P[<fail_1893@54:0>](<fail_1893@54:0>:int)
          
          P[<<<bcopy_1046@11:2>@14:1>@34:0>](<bcopy_1046@11:0>:int,<bcopy_1046@11:1>:int,<<bcopy_1046@11:3>@44:0>:int,var6:int),
          P[<bcopy_1046@11:4>](<bcopy_1046@11:0>:int,<bcopy_1046@11:1>:int,<<bcopy_1046@11:3>@44:0>:int),
          (<<bcopy_1046@11:3>@44:0> < <bcopy_1046@11:1>)
          |- P[<<bcopy_1046@11:3>@44:0>](<bcopy_1046@11:0>:int,<bcopy_1046@11:1>:int,
                                         <<bcopy_1046@11:3>@44:0>:int)
          
          P[<<bcopy_1046@11:2>@14:0>](<bcopy_1046@11:0>:int,<bcopy_1046@11:0>:int,<<bcopy_1046@11:2>@14:0>:int),
          ((<bcopy_1046@11:0> = <bcopy_1046@11:1>) &&
           ((<bcopy_1046@11:0> > 0) &&
            ((<<bcopy_1046@11:2>@14:0> < <bcopy_1046@11:0>) &&
             ((0 <= <<bcopy_1046@11:2>@14:0>) && (<<<bcopy_1046@11:2>@14:1>@34:0> = 0)))))
          |- P[<<<bcopy_1046@11:2>@14:1>@34:0>](<bcopy_1046@11:0>:int,
                                                <bcopy_1046@11:1>:int,
                                                <<bcopy_1046@11:2>@14:0>:int,
                                                <<<bcopy_1046@11:2>@14:1>@34:0>:int)
          
          P[<bcopy_1046@11:4>](<bcopy_1046@11:0>:int,<bcopy_1046@11:1>:int,<<bcopy_1046@11:2>@14:0>:int),
          (<<bcopy_1046@11:2>@14:0> < <bcopy_1046@11:1>)
          |- P[<<bcopy_1046@11:2>@14:0>](<bcopy_1046@11:0>:int,<bcopy_1046@11:1>:int,
                                         <<bcopy_1046@11:2>@14:0>:int)
          
           ((<bcopy_1046@11:0> = <bcopy_1046@11:1>) && ((<bcopy_1046@11:0> > 0) && (<bcopy_1046@11:4> = 0)))
          |- P[<bcopy_1046@11:4>](<bcopy_1046@11:0>:int,<bcopy_1046@11:1>:int,
                                  <bcopy_1046@11:4>:int)Yhorn (Wed Sep 25 10:52:05 JST 2013)


(0=0) & (v_sep_fail_1893_sep_54_sep_0($11)) -> 1=0.
(($11-1=0) & (-$12<=0) & ($13>0) & ($12-$13>=0)) & (v_sep_bcopy_1046_sep_11_sep_3_sep_44_sep_0($13,$13,$12)) -> v_sep_fail_1893_sep_54_sep_0($11).
($14-$15<0) & (v_sep_bcopy_1046_sep_11_sep_4($16,$15,$14)) & (v_sep_bcopy_1046_sep_11_sep_2_sep_14_sep_1_sep_34_sep_0($16,$15,$14,$17)) -> v_sep_bcopy_1046_sep_11_sep_3_sep_44_sep_0($16,$15,$14).
(($18=0) & (-$19<=0) & (-$16+$19<0) & ($16>0) & (-$15+$16=0)) & (v_sep_bcopy_1046_sep_11_sep_2_sep_14_sep_0($16,$16,$19)) -> v_sep_bcopy_1046_sep_11_sep_2_sep_14_sep_1_sep_34_sep_0($16,$15,$19,$18).
(-$15+$19<0) & (v_sep_bcopy_1046_sep_11_sep_4($16,$15,$19)) -> v_sep_bcopy_1046_sep_11_sep_2_sep_14_sep_0($16,$15,$19).
($20=0) & ($16>0) & (-$15+$16=0) -> v_sep_bcopy_1046_sep_11_sep_4($16,$15,$20).


v_sep_bcopy_1046_sep_11_sep_2_sep_14_sep_0: X
v_sep_bcopy_1046_sep_11_sep_2_sep_14_sep_1_sep_34_sep_0: X
v_sep_bcopy_1046_sep_11_sep_3_sep_44_sep_0: X
v_sep_bcopy_1046_sep_11_sep_4: X
v_sep_fail_1893_sep_54_sep_0: X
.......
v_sep_bcopy_1046_sep_11_sep_2_sep_14_sep_0: X
v_sep_bcopy_1046_sep_11_sep_2_sep_14_sep_1_sep_34_sep_0: X
v_sep_bcopy_1046_sep_11_sep_3_sep_44_sep_0: X
v_sep_bcopy_1046_sep_11_sep_4: X
v_sep_fail_1893_sep_54_sep_0: X
...
v_sep_bcopy_1046_sep_11_sep_2_sep_14_sep_0: X
v_sep_bcopy_1046_sep_11_sep_2_sep_14_sep_1_sep_34_sep_0: X
v_sep_bcopy_1046_sep_11_sep_3_sep_44_sep_0: X
v_sep_bcopy_1046_sep_11_sep_4: X
v_sep_fail_1893_sep_54_sep_0: X
.....
v_sep_bcopy_1046_sep_11_sep_2_sep_14_sep_0: X
v_sep_bcopy_1046_sep_11_sep_2_sep_14_sep_1_sep_34_sep_0: X
v_sep_bcopy_1046_sep_11_sep_3_sep_44_sep_0: X
v_sep_bcopy_1046_sep_11_sep_4: X
v_sep_fail_1893_sep_54_sep_0: X
......
v_sep_bcopy_1046_sep_11_sep_2_sep_14_sep_0: X
v_sep_bcopy_1046_sep_11_sep_2_sep_14_sep_1_sep_34_sep_0: X
v_sep_bcopy_1046_sep_11_sep_3_sep_44_sep_0: X
v_sep_bcopy_1046_sep_11_sep_4: X
v_sep_fail_1893_sep_54_sep_0: X
.......(0=0) & (v_sep_fail_1893_sep_54_sep_0($11)) -> 1=0.
(($11-1=0) & (-$12<=0) & ($13>0) & ($12-$13>=0)) & (v_sep_bcopy_1046_sep_11_sep_3_sep_44_sep_0($13,$13,$12)) -> v_sep_fail_1893_sep_54_sep_0($11).
($14-$15<0) & (v_sep_bcopy_1046_sep_11_sep_4($16,$15,$14)) & (v_sep_bcopy_1046_sep_11_sep_2_sep_14_sep_1_sep_34_sep_0($16,$15,$14,$17)) -> v_sep_bcopy_1046_sep_11_sep_3_sep_44_sep_0($16,$15,$14).
(($18=0) & (-$19<=0) & (-$16+$19<0) & ($16>0) & (-$15+$16=0)) & (v_sep_bcopy_1046_sep_11_sep_2_sep_14_sep_0($16,$16,$19)) -> v_sep_bcopy_1046_sep_11_sep_2_sep_14_sep_1_sep_34_sep_0($16,$15,$19,$18).
(-$15+$19<0) & (v_sep_bcopy_1046_sep_11_sep_4($16,$15,$19)) -> v_sep_bcopy_1046_sep_11_sep_2_sep_14_sep_0($16,$15,$19).
($20=0) & ($16>0) & (-$15+$16=0) -> v_sep_bcopy_1046_sep_11_sep_4($16,$15,$20).

        solution:
          P[<<bcopy_1046@11:2>@14:0>]($47:int,$49:int,$51:int) = ((1 + $51) <= $49)
          P[<<<bcopy_1046@11:2>@14:1>@34:0>]($38:int,$40:int,$42:int,$44:int) = ((1 + $42) <= $38)
          P[<<bcopy_1046@11:3>@44:0>]($24:int,$26:int,$28:int) = ((2 + (2 * $28)) <= ($26 + $24))
          P[<bcopy_1046@11:4>]($31:int,$33:int,$35:int) = ((1 + $35) <= $33)
          P[<fail_1893@54:0>]($21:bool) = false
        
      end HcSolver.solve_ub(5314)[4] (0.028995 sec.)
      begin HcSolver.check_validity(5801)[4]
        input:
          P[<fail_1893@54:0>](<fail_1893@54:0>:bool)|- bot
          
          P[<<bcopy_1046@11:3>@44:0>](<k_make_array_u_1321@51:1>:int,<k_make_array_u_1321@51:1>:int,<k_make_array_u_1321@51:0>:int),
          ((0 <= <k_make_array_u_1321@51:0>) &&
           ((<k_make_array_u_1321@51:1> > 0) &&
            ((<k_make_array_u_1321@51:0> >= <k_make_array_u_1321@51:1>) && <fail_1893@54:0>)))
          |- P[<fail_1893@54:0>](<fail_1893@54:0>:bool)
          
          P[<<<bcopy_1046@11:2>@14:1>@34:0>](<bcopy_1046@11:0>:int,<bcopy_1046@11:1>:int,<<bcopy_1046@11:3>@44:0>:int,var6:int),
          P[<bcopy_1046@11:4>](<bcopy_1046@11:0>:int,<bcopy_1046@11:1>:int,<<bcopy_1046@11:3>@44:0>:int),
          (<<bcopy_1046@11:3>@44:0> < <bcopy_1046@11:1>)
          |- P[<<bcopy_1046@11:3>@44:0>](<bcopy_1046@11:0>:int,<bcopy_1046@11:1>:int,
                                         <<bcopy_1046@11:3>@44:0>:int)
          
          P[<<bcopy_1046@11:2>@14:0>](<bcopy_1046@11:0>:int,<bcopy_1046@11:0>:int,<<bcopy_1046@11:2>@14:0>:int),
          ((<<<bcopy_1046@11:2>@14:1>@34:0> = 0) &&
           ((0 <= <<bcopy_1046@11:2>@14:0>) &&
            ((<<bcopy_1046@11:2>@14:0> < <bcopy_1046@11:0>) &&
             ((<bcopy_1046@11:0> > 0) && (<bcopy_1046@11:0> = <bcopy_1046@11:1>)))))
          |- P[<<<bcopy_1046@11:2>@14:1>@34:0>](<bcopy_1046@11:0>:int,
                                                <bcopy_1046@11:1>:int,
                                                <<bcopy_1046@11:2>@14:0>:int,
                                                <<<bcopy_1046@11:2>@14:1>@34:0>:int)
          
          P[<bcopy_1046@11:4>](<bcopy_1046@11:0>:int,<bcopy_1046@11:1>:int,<<bcopy_1046@11:2>@14:0>:int),
          (<<bcopy_1046@11:2>@14:0> < <bcopy_1046@11:1>)
          |- P[<<bcopy_1046@11:2>@14:0>](<bcopy_1046@11:0>:int,<bcopy_1046@11:1>:int,
                                         <<bcopy_1046@11:2>@14:0>:int)
          
           ((<bcopy_1046@11:4> = 0) && ((<bcopy_1046@11:0> > 0) && (<bcopy_1046@11:0> = <bcopy_1046@11:1>)))
          |- P[<bcopy_1046@11:4>](<bcopy_1046@11:0>:int,<bcopy_1046@11:1>:int,
                                  <bcopy_1046@11:4>:int)
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        
      end HcSolver.check_validity(5801)[4] (0.006999 sec.)
      solution:
        P[<<bcopy_1046@11:2>@14:0>]($47:int,$49:int,$51:int) = ((1 + $51) <= $49)
        P[<<<bcopy_1046@11:2>@14:1>@34:0>]($38:int,$40:int,$42:int,$44:int) = ((1 + $42) <= $38)
        P[<<bcopy_1046@11:3>@44:0>]($24:int,$26:int,$28:int) = ((2 + (2 * $28)) <= ($26 + $24))
        P[<bcopy_1046@11:4>]($31:int,$33:int,$35:int) = ((1 + $35) <= $33)
        P[<fail_1893@54:0>]($21:bool) = false
    end YhornInterface.solve(5313)[3] (0.035994 sec.)
    
  end RefTypeInfer.infer_etrs(331)[2] (0.126980 sec.)
  refinement types:
    main_1884: X
    f_1891: v1:int -> X
    main_1057: v1:int -> (v2:unit -> X) -> X
    f_1042: v1:int -> (v2:int -> (v3:int -> X) -> X) -> (v6:int -> (v7:int -> X) -> X) -> (v10:unit -> X) -> X
    bcopy_1046: v1:int ->
                v2:int ->
                (v3:{v3:int | ((1 + v3) <= v2)} -> (v4:{v4:int | ((1 + v3) <= v1)} -> X) -> X) ->
                (v7:{v7:int | ((2 + (2 * v7)) <= (v2 + v1))} -> (v8:int -> X) -> X) ->
                v11:{v11:int | ((1 + v11) <= v2)} -> ((v12:int -> (v13:int -> X) -> X) -> X) -> X
    make_array_1030: v1:int -> v2:int -> (v3:int -> X) -> X
    k_make_array_u_1321: v1:int -> v2:int -> (v3:int -> X) -> v5:bool -> X
    k_make_array_u_1332: v1:int -> v2:int -> (v3:int -> X) -> v5:unit -> X
    f_bcopy_1886: v1:int ->
                  v2:int ->
                  v3:int ->
                  (v4:int -> (v5:int -> X) -> X) ->
                  ((v8:int -> (v9:int -> X) -> X) -> X) -> (v13:int -> (v14:int -> X) -> X) -> v17:int -> X
    update_1033: v1:int ->
                 v2:int -> (v3:int -> (v4:int -> X) -> X) -> v7:int -> ((v8:int -> (v9:int -> X) -> X) -> X) -> X
    make_array_1030: v1:int -> v2:int -> (v3:int -> X) -> X
    k_make_array_u_1321: v1:int -> v2:int -> (v3:int -> X) -> v5:bool -> X
    fail_1893: v1:{v1:bool | false} -> (v2:unit -> X) -> X
    a_1038: var55:int ->
            var54:int ->
            var53:int -> var52:int -> (var51:int -> (var50:int -> X) -> X) -> var47:int -> (var46:int -> X) -> X
    f_1892: var58:int -> var57:unit -> X
    f_bcopy_1887: var76:int ->
                  var75:int ->
                  var74:int ->
                  var73:int ->
                  ((var72:int -> (var71:int -> X) -> X) -> X) ->
                  (var67:int -> (var66:int -> X) -> X) -> (var63:int -> (var62:int -> X) -> X) -> X
    f_f_1890: var88:int ->
              (var87:int -> (var86:int -> X) -> X) -> (var83:unit -> X) -> (var81:int -> (var80:int -> X) -> X) -> X
    f_print_array_1888: var103:int ->
                        var102:int ->
                        var101:int ->
                        (var100:int -> (var99:int -> X) -> X) ->
                        (var96:int -> (var95:int -> X) -> X) -> (var92:unit -> X) -> var90:int -> X
    f_print_array_1889: var119:int ->
                        var118:int ->
                        var117:int ->
                        var116:int ->
                        (var115:int -> (var114:int -> X) -> X) ->
                        (var111:int -> (var110:int -> X) -> X) -> (var107:unit -> X) -> var105:unit -> X
    f_update_1885: var133:int ->
                   var132:int ->
                   var131:int ->
                   (var130:int -> (var129:int -> X) -> X) ->
                   ((var126:int -> (var125:int -> X) -> X) -> X) -> var121:int -> X
    print_array_1052: var147:int ->
                      (var146:int -> (var145:int -> X) -> X) ->
                      var142:int -> (var141:int -> (var140:int -> X) -> X) -> var137:int -> (var136:unit -> X) -> X
    print_int_1040: var151:int -> (var150:unit -> X) -> X
  abstraction types:
    main_1884: X
    f_1891: v1:int -> X
    main_1057: v1:int -> (v2:unit -> X) -> X
    f_1042: v1:int -> (v2:int -> (v3:int -> X) -> X) -> (v6:int -> (v7:int -> X) -> X) -> (v10:unit -> X) -> X
    bcopy_1046: v1:int ->
                v2:int ->
                (v3:int[v3 -> ((1 + v3) <= v2)] -> (v4:int[v4 -> ((1 + v3) <= v1)] -> X) -> X) ->
                (v7:int[v7 -> ((2 + (2 * v7)) <= (v2 + v1))] -> (v8:int -> X) -> X) ->
                v11:int[v11 -> ((1 + v11) <= v2)] -> ((v12:int -> (v13:int -> X) -> X) -> X) -> X
    make_array_1030: var152:int -> var153:int -> (var154:int -> X) -> X
    k_make_array_u_1321: var157:int -> var158:int -> (var159:int -> X) -> var161:bool -> X
    k_make_array_u_1332: v1:int -> v2:int -> (v3:int -> X) -> v5:unit -> X
    f_bcopy_1886: v1:int ->
                  v2:int ->
                  v3:int ->
                  (v4:int -> (v5:int -> X) -> X) ->
                  ((v8:int -> (v9:int -> X) -> X) -> X) -> (v13:int -> (v14:int -> X) -> X) -> v17:int -> X
    update_1033: v1:int ->
                 v2:int -> (v3:int -> (v4:int -> X) -> X) -> v7:int -> ((v8:int -> (v9:int -> X) -> X) -> X) -> X
    fail_1893: v1:bool -> (v2:unit -> X) -> X
    a_1038: var55:int ->
            var54:int ->
            var53:int -> var52:int -> (var51:int -> (var50:int -> X) -> X) -> var47:int -> (var46:int -> X) -> X
    f_1892: var58:int -> var57:unit -> X
    f_bcopy_1887: var76:int ->
                  var75:int ->
                  var74:int ->
                  var73:int ->
                  ((var72:int -> (var71:int -> X) -> X) -> X) ->
                  (var67:int -> (var66:int -> X) -> X) -> (var63:int -> (var62:int -> X) -> X) -> X
    f_f_1890: var88:int ->
              (var87:int -> (var86:int -> X) -> X) -> (var83:unit -> X) -> (var81:int -> (var80:int -> X) -> X) -> X
    f_print_array_1888: var103:int ->
                        var102:int ->
                        var101:int ->
                        (var100:int -> (var99:int -> X) -> X) ->
                        (var96:int -> (var95:int -> X) -> X) -> (var92:unit -> X) -> var90:int -> X
    f_print_array_1889: var119:int ->
                        var118:int ->
                        var117:int ->
                        var116:int ->
                        (var115:int -> (var114:int -> X) -> X) ->
                        (var111:int -> (var110:int -> X) -> X) -> (var107:unit -> X) -> var105:unit -> X
    f_update_1885: var133:int ->
                   var132:int ->
                   var131:int ->
                   (var130:int -> (var129:int -> X) -> X) ->
                   ((var126:int -> (var125:int -> X) -> X) -> X) -> var121:int -> X
    print_array_1052: var147:int ->
                      (var146:int -> (var145:int -> X) -> X) ->
                      var142:int -> (var141:int -> (var140:int -> X) -> X) -> var137:int -> (var136:unit -> X) -> X
    print_int_1040: var151:int -> (var150:unit -> X) -> X
  
end AbsTypeInfer.refine(330)[1] (0.138978 sec.)
DONE!

Prefix of spurious counter-example::
0; 0; 0; 0; 1; 0; 0; 0; 0; 0; 0; 1

Program with abstraction types (CEGAR-cycle 1)::
Main: main_1884
  main_1884 -> (rand_int f_1891)
  a_1038 i_1034 n_1035 x_1037 x_1386 des_1036 j_1039 k_update_a_1401 when (i_1034 = j_1039) -> (k_update_a_1401 x_1037)
  a_1038 i_1034 n_1035 x_1037 x_1386 des_1036 j_1039 k_update_a_1401 when (
      not (i_1034 = j_1039)) -> (des_1036 i_1034 k_update_a_1401)
  bcopy_1046 m_1043 m_1047 src_1048 des_1049 i_1050 k_f_bcopy_1535 when (i_1050 >= m_1047) -> (k_f_bcopy_1535 des_1049)
  bcopy_1046 m_1043 m_1047 src_1048 des_1049 i_1050 k_f_bcopy_1535 when (
      not (i_1050 >= m_1047)) -> (src_1048 i_1050 (f_bcopy_1886 i_1050 m_1043 m_1047 des_1049 k_f_bcopy_1535 src_1048))
  f_1042 m_1043 src_1044 des_1045 k_f_1476 ->
      (bcopy_1046 m_1043 m_1043 src_1044 des_1045 0 (f_f_1890 m_1043 des_1045 k_f_1476))
  f_1891 x_1859 -> (main_1057 x_1859 (f_1892 x_1859))
  f_1892 x_1859 x_1856 -> end
  f_bcopy_1886 i_1050 m_1043 m_1047 des_1049 k_f_bcopy_1535 src_1048 x_1591 ->
      (update_1033 i_1050 m_1047 des_1049 x_1591 (f_bcopy_1887 i_1050 m_1043 m_1047 x_1591 k_f_bcopy_1535 src_1048))
  f_bcopy_1887 i_1050 m_1043 m_1047 x_1591 k_f_bcopy_1535 src_1048 x_1547 ->
      (bcopy_1046 m_1043 m_1047 src_1048 x_1547 (i_1050 + 1) k_f_bcopy_1535)
  f_f_1890 m_1043 des_1045 k_f_1476 x_1715 -> (print_array_1052 m_1043 des_1045 m_1043 x_1715 0 k_f_1476)
  f_print_array_1888 i_1055 m_1043 m_1053 array_1054 des_1045 k_f_print_array_1664 x_1687 ->
      (print_int_1040 x_1687 (f_print_array_1889 i_1055 m_1043 m_1053 x_1687 array_1054 des_1045 k_f_print_array_1664))
  f_print_array_1889 i_1055 m_1043 m_1053 x_1687 array_1054 des_1045 k_f_print_array_1664 x_1667 ->
      (print_array_1052 m_1043 des_1045 m_1053 array_1054 (i_1055 + 1) k_f_print_array_1664)
  f_update_1885 i_1034 n_1035 x_1037 des_1036 k_update_1380 x_1386 ->
      (k_update_1380 (a_1038 i_1034 n_1035 x_1037 x_1386 des_1036))
  fail_1893 b k -> {fail} => (k ())
  k_make_array_u_1321 i_1032 n_1031 k_make_array_1315 b_1333 when b_1333 ->
      (k_make_array_u_1332 i_1032 n_1031 k_make_array_1315 ())
  k_make_array_u_1321 i_1032 n_1031 k_make_array_1315 b_1333 when (not b_1333) ->
      (fail_1893 true (k_make_array_u_1332 i_1032 n_1031 k_make_array_1315))
  k_make_array_u_1332 i_1032 n_1031 k_make_array_1315 x_1318 -> (k_make_array_1315 0)
  main_1057 n_1058 k_main_1787 when (n_1058 > 0) ->
      (f_1042 n_1058 (make_array_1030 n_1058) (make_array_1030 n_1058) k_main_1787)
  main_1057 n_1058 k_main_1787 when (not (n_1058 > 0)) -> (k_main_1787 ())
  make_array_1030 n_1031 i_1032 k_make_array_1315 when (0 <= i_1032) ->
      (k_make_array_u_1321 i_1032 n_1031 k_make_array_1315 (i_1032 < n_1031))
  make_array_1030 n_1031 i_1032 k_make_array_1315 when (not (0 <= i_1032)) ->
      (k_make_array_u_1321 i_1032 n_1031 k_make_array_1315 false)
  print_array_1052 m_1043 des_1045 m_1053 array_1054 i_1055 k_f_print_array_1664 when (
      i_1055 >= m_1053) -> (k_f_print_array_1664 ())
  print_array_1052 m_1043 des_1045 m_1053 array_1054 i_1055 k_f_print_array_1664 when (
      not (i_1055 >= m_1053)) ->
      (des_1045 i_1055 (f_print_array_1888 i_1055 m_1043 m_1053 array_1054 des_1045 k_f_print_array_1664))
  print_int_1040 n_1041 k_print_int_1432 -> (k_print_int_1432 ())
  update_1033 i_1034 n_1035 des_1036 x_1037 k_update_1380 ->
      (des_1036 i_1034 (f_update_1885 i_1034 n_1035 x_1037 des_1036 k_update_1380))
Types:
  main_1884 : X
  bcopy_1046 : (x_1:int ->
                x_2:int ->
                (x_4:int[x_2 >= x_4 + 1] -> (int[x_1 >= x_4 + 1] -> X) -> X) ->
                (x_10:int[x_1 >= -x_2 + 2*x_10 + 2] -> (int -> X) -> X) ->
                x_15:int[x_2 >= x_15 + 1] -> ((int -> (int -> X) -> X) -> X) -> X)
  fail_1893 : (x_1:bool[x_1] -> (unit -> X) -> X)
  print_array_1052 : (int -> (int -> (int -> X) -> X) -> int -> (int -> (int -> X) -> X) -> int -> (unit -> X) -> X)
  
(1-1) Abstracting ... DONE!

(1-2) Checking HORS ... DONE!

Error trace::
  main_1884 ... --> 
  f_1891 ... --> 
  main_1057 [1/2] ... --> 
  f_1042 ... --> 
  bcopy_1046 [2/2] ... --> 
  make_array_1030 [2/2] ... --> 
  k_make_array_u_1321 [2/2] ... --> 
  fail_1893 ... --> fail -->
  ERROR!

Spurious counter-example::
  0; 0; 0; 0; 1; 1; 1; 0

(1-3) Checking counter-example ... DONE!

(1-4) Discovering predicates ... 
begin AbsTypeInfer.refine(8132)[1]
  program:
    main_1884  | true = ((Random.int 0) f_1891)
    a_1038 i_1034 n_1035 x_1037 x_1386 des_1036 j_1039 k_update_a_1401 | (
    i_1034 = j_1039) = (k_update_a_1401 x_1037)
    a_1038 i_1034 n_1035 x_1037 x_1386 des_1036 j_1039 k_update_a_1401 | (
    not (i_1034 = j_1039)) = (des_1036 i_1034
                                       k_update_a_1401)
    bcopy_1046 m_1043 m_1047 src_1048 des_1049 i_1050 k_f_bcopy_1535 | (
    i_1050 >= m_1047) = (k_f_bcopy_1535 des_1049)
    bcopy_1046 m_1043 m_1047 src_1048 des_1049 i_1050 k_f_bcopy_1535 | (
    not (i_1050 >= m_1047)) = (src_1048 i_1050
                                        (f_bcopy_1886 i_1050
                                                      m_1043
                                                      m_1047
                                                      des_1049
                                                      k_f_bcopy_1535
                                                      src_1048))
    f_1042 m_1043 src_1044 des_1045 k_f_1476 | true = (bcopy_1046
                                                         m_1043
                                                         m_1043
                                                         src_1044
                                                         des_1045
                                                         0
                                                         (f_f_1890 m_1043
                                                                   des_1045
                                                                   k_f_1476))
    f_1891 x_1859 | true = (main_1057 x_1859
                                      (f_1892 x_1859))
    f_1892 x_1859 x_1856 | true = end
    f_bcopy_1886 i_1050 m_1043 m_1047 des_1049 k_f_bcopy_1535 src_1048 x_1591 | true = (
    update_1033 i_1050
                m_1047
                des_1049
                x_1591
                (f_bcopy_1887 i_1050
                              m_1043
                              m_1047
                              x_1591
                              k_f_bcopy_1535
                              src_1048))
    f_bcopy_1887 i_1050 m_1043 m_1047 x_1591 k_f_bcopy_1535 src_1048 x_1547 | true = (
    bcopy_1046 m_1043
               m_1047
               src_1048
               x_1547
               (i_1050 + 1)
               k_f_bcopy_1535)
    f_f_1890 m_1043 des_1045 k_f_1476 x_1715 | true = (print_array_1052 m_1043
                                                                    des_1045
                                                                    m_1043
                                                                    x_1715
                                                                    0
                                                                    k_f_1476)
    f_print_array_1888 i_1055 m_1043 m_1053 array_1054 des_1045 k_f_print_array_1664 x_1687 | true = (
    print_int_1040 x_1687
                   (f_print_array_1889 i_1055
                                       m_1043
                                       m_1053
                                       x_1687
                                       array_1054
                                       des_1045
                                       k_f_print_array_1664))
    f_print_array_1889 i_1055 m_1043 m_1053 x_1687 array_1054 des_1045 k_f_print_array_1664 x_1667 | true = (
    print_array_1052 m_1043
                     des_1045
                     m_1053
                     array_1054
                     (i_1055 + 1)
                     k_f_print_array_1664)
    f_update_1885 i_1034 n_1035 x_1037 des_1036 k_update_1380 x_1386 | true = (
    k_update_1380 (a_1038 i_1034
                          n_1035
                          x_1037
                          x_1386
                          des_1036))
    fail_1893 b k | true = (fail ())
    k_make_array_u_1321 i_1032 n_1031 k_make_array_1315 b_1333 | b_1333 = (
    k_make_array_u_1332 i_1032
                        n_1031
                        k_make_array_1315
                        ())
    k_make_array_u_1321 i_1032 n_1031 k_make_array_1315 b_1333 | (not b_1333) = (
    fail_1893 true
              (k_make_array_u_1332 i_1032
                                   n_1031
                                   k_make_array_1315))
    k_make_array_u_1332 i_1032 n_1031 k_make_array_1315 x_1318 | true = (
    k_make_array_1315 0)
    main_1057 n_1058 k_main_1787 | (n_1058 > 0) = (f_1042
                                                     n_1058
                                                     (make_array_1030 n_1058)
                                                     (make_array_1030 n_1058)
                                                     k_main_1787)
    main_1057 n_1058 k_main_1787 | (not (n_1058 > 0)) = (k_main_1787 ())
    make_array_1030 n_1031 i_1032 k_make_array_1315 | (0 <= i_1032) = (
    k_make_array_u_1321 i_1032
                        n_1031
                        k_make_array_1315
                        (i_1032 < n_1031))
    make_array_1030 n_1031 i_1032 k_make_array_1315 | (not (0 <= i_1032)) = (
    k_make_array_u_1321 i_1032
                        n_1031
                        k_make_array_1315
                        false)
    print_array_1052 m_1043 des_1045 m_1053 array_1054 i_1055 k_f_print_array_1664 | (
    i_1055 >= m_1053) = (k_f_print_array_1664 ())
    print_array_1052 m_1043 des_1045 m_1053 array_1054 i_1055 k_f_print_array_1664 | (
    not (i_1055 >= m_1053)) = (des_1045
                                 i_1055
                                 (f_print_array_1888 i_1055
                                                     m_1043
                                                     m_1053
                                                     array_1054
                                                     des_1045
                                                     k_f_print_array_1664))
    print_int_1040 n_1041 k_print_int_1432 | true = (k_print_int_1432 ())
    update_1033 i_1034 n_1035 des_1036 x_1037 k_update_1380 | true = (
    des_1036 i_1034
             (f_update_1885 i_1034
                            n_1035
                            x_1037
                            des_1036
                            k_update_1380))
    main_1884:X
    a_1038:int -> int -> int -> int -> (int -> (int -> X) -> X) -> int -> (int -> X) -> X
    bcopy_1046:int ->
               int ->
               (int -> (int -> X) -> X) -> (int -> (int -> X) -> X) -> int -> ((int -> (int -> X) -> X) -> X) -> X
    f_1042:int -> (int -> (int -> X) -> X) -> (int -> (int -> X) -> X) -> (unit -> X) -> X
    f_1891:int -> X
    f_1892:int -> unit -> X
    f_bcopy_1886:int ->
                 int ->
                 int ->
                 (int -> (int -> X) -> X) -> ((int -> (int -> X) -> X) -> X) -> (int -> (int -> X) -> X) -> int -> X
    f_bcopy_1887:int ->
                 int ->
                 int ->
                 int -> ((int -> (int -> X) -> X) -> X) -> (int -> (int -> X) -> X) -> (int -> (int -> X) -> X) -> X
    f_f_1890:int -> (int -> (int -> X) -> X) -> (unit -> X) -> (int -> (int -> X) -> X) -> X
    f_print_array_1888:int ->
                       int -> int -> (int -> (int -> X) -> X) -> (int -> (int -> X) -> X) -> (unit -> X) -> int -> X
    f_print_array_1889:int ->
                       int ->
                       int -> int -> (int -> (int -> X) -> X) -> (int -> (int -> X) -> X) -> (unit -> X) -> unit -> X
    f_update_1885:int -> int -> int -> (int -> (int -> X) -> X) -> ((int -> (int -> X) -> X) -> X) -> int -> X
    fail_1893:bool -> (unit -> X) -> X
    k_make_array_u_1321:int -> int -> (int -> X) -> bool -> X
    k_make_array_u_1332:int -> int -> (int -> X) -> unit -> X
    main_1057:int -> (unit -> X) -> X
    make_array_1030:int -> int -> (int -> X) -> X
    print_array_1052:int -> (int -> (int -> X) -> X) -> int -> (int -> (int -> X) -> X) -> int -> (unit -> X) -> X
    print_int_1040:int -> (unit -> X) -> X
    update_1033:int -> int -> (int -> (int -> X) -> X) -> int -> ((int -> (int -> X) -> X) -> X) -> X
  inlined functions: a_1038,f_1042,f_1891,f_1892,f_bcopy_1886,f_bcopy_1887,f_f_1890,f_print_array_1888,f_print_array_1889,f_update_1885,k_make_array_u_1321,k_make_array_u_1332,main_1057,make_array_1030,print_int_1040,update_1033
  counterexample: 0:0:0:0:1:1:1:0
  error traces:
    [true.nop(<f_1891@60:0> = var163)
     [true.(<main_1057@62:0> = <f_1891@60:0>)
      [(<main_1057@62:0> > 0).(<f_1042@65:0> = <main_1057@62:0>)
       [true.((<bcopy_1046@67:0> = <f_1042@65:0>) && ((<bcopy_1046@67:1> = <f_1042@65:0>) && (<bcopy_1046@67:4> = 0)))
        [(not (<bcopy_1046@67:4> >= <bcopy_1046@67:1>)).(<<bcopy_1046@67:2>@70:0> = <bcopy_1046@67:4>)
         [true.(<<f_1042@65:1>@72:0> = <<bcopy_1046@67:2>@70:0>)
          [true.((<make_array_1030@74:0> = <main_1057@62:0>) && (<make_array_1030@74:1> = <<f_1042@65:1>@72:0>))
           [(not (0 <= <make_array_1030@74:1>)).
            ((<k_make_array_u_1321@77:0> = <make_array_1030@74:1>) &&
             ((<k_make_array_u_1321@77:1> = <make_array_1030@74:0>) && (<k_make_array_u_1321@77:3> = false)))
            [(not <k_make_array_u_1321@77:3>).(<fail_1893@80:0> = true)[true.error
  begin RefTypeInfer.infer_etrs(8133)[2]
    horn clauses:
      P[<fail_1893@80:0>](<fail_1893@80:0>:bool)|- bot
      
      P[<k_make_array_u_1321@77:3>](<k_make_array_u_1321@77:0>:int,<k_make_array_u_1321@77:1>:int,false:bool),
      <fail_1893@80:0> |- P[<fail_1893@80:0>](<fail_1893@80:0>:bool)
      
      P[<make_array_1030@74:1>](<k_make_array_u_1321@77:1>:int,<k_make_array_u_1321@77:0>:int),
      ((0 > <k_make_array_u_1321@77:0>) && (not <k_make_array_u_1321@77:3>))
      |- P[<k_make_array_u_1321@77:3>](<k_make_array_u_1321@77:0>:int,
                                       <k_make_array_u_1321@77:1>:int,
                                       <k_make_array_u_1321@77:3>:bool)
      
      P[<main_1057@62:0>](<make_array_1030@74:0>:int),
      P[<<f_1042@65:1>@72:0>](<make_array_1030@74:0>:int,<make_array_1030@74:1>:int), (
      <make_array_1030@74:0> > 0) |- P[<make_array_1030@74:1>](<make_array_1030@74:0>:int,
                                                               <make_array_1030@74:1>:int)
      
      P[<f_1042@65:0>](<f_1042@65:0>:int),
      P[<<bcopy_1046@67:2>@70:0>](<f_1042@65:0>:int,<f_1042@65:0>:int,<<f_1042@65:1>@72:0>:int)|- P[<<f_1042@65:1>@72:0>](
      <f_1042@65:0>:int,<<f_1042@65:1>@72:0>:int)
      
      P[<bcopy_1046@67:4>](<bcopy_1046@67:0>:int,<bcopy_1046@67:1>:int,<<bcopy_1046@67:2>@70:0>:int),
      (<<bcopy_1046@67:2>@70:0> < <bcopy_1046@67:1>)
      |- P[<<bcopy_1046@67:2>@70:0>](<bcopy_1046@67:0>:int,<bcopy_1046@67:1>:int,
                                     <<bcopy_1046@67:2>@70:0>:int)
      
      P[<f_1042@65:0>](<bcopy_1046@67:0>:int), ((<bcopy_1046@67:4> = 0) && (<bcopy_1046@67:0> = <bcopy_1046@67:1>))
      |- P[<bcopy_1046@67:4>](<bcopy_1046@67:0>:int,<bcopy_1046@67:1>:int,
                              <bcopy_1046@67:4>:int)
      
      P[<main_1057@62:0>](<f_1042@65:0>:int), (<f_1042@65:0> > 0) |- P[<f_1042@65:0>](<f_1042@65:0>:int)
      
      P[<f_1891@60:0>](<main_1057@62:0>:int)|- P[<main_1057@62:0>](<main_1057@62:0>:int)
      
      |- P[<f_1891@60:0>](<f_1891@60:0>:int)
    call trees:
      <main_1884@57>
        <f_1891@60>
          <main_1057@62>
            <f_1042@65>
              <bcopy_1046@67>
              </<bcopy_1046@67:2>@70>
            </<f_1042@65:1>@72>
            <make_array_1030@74>
              <k_make_array_u_1321@77>
                <fail_1893@80>
    inlined horn clauses:
      P[<fail_1893@80:0>](<fail_1893@80:0>:bool)|- bot
      
      P[<<bcopy_1046@67:2>@70:0>](<k_make_array_u_1321@77:1>:int,<k_make_array_u_1321@77:1>:int,<k_make_array_u_1321@77:0>:int),
      ((0 > <k_make_array_u_1321@77:0>) && ((<k_make_array_u_1321@77:1> > 0) && <fail_1893@80:0>))
      |- P[<fail_1893@80:0>](<fail_1893@80:0>:bool)
      
      P[<bcopy_1046@67:4>](<bcopy_1046@67:0>:int,<bcopy_1046@67:1>:int,<<bcopy_1046@67:2>@70:0>:int),
      (<<bcopy_1046@67:2>@70:0> < <bcopy_1046@67:1>)
      |- P[<<bcopy_1046@67:2>@70:0>](<bcopy_1046@67:0>:int,<bcopy_1046@67:1>:int,
                                     <<bcopy_1046@67:2>@70:0>:int)
      
       ((<bcopy_1046@67:4> = 0) && ((<bcopy_1046@67:0> > 0) && (<bcopy_1046@67:0> = <bcopy_1046@67:1>)))
      |- P[<bcopy_1046@67:4>](<bcopy_1046@67:0>:int,<bcopy_1046@67:1>:int,
                              <bcopy_1046@67:4>:int)
    begin ParamSubstInfer.infer(9480)[3]
      
    end ParamSubstInfer.infer(9480)[3] (0.300955 sec.)
    inferred extra parameters:
      
    begin RefTypeInfer.elim_coeffs(9482)[3]
      
    end RefTypeInfer.elim_coeffs(9482)[3] (0.001000 sec.)
    begin YhornInterface.solve(9738)[3]
      begin HcSolver.solve_ub(9739)[4]
        encoded:
          P[<fail_1893@80:0>](<fail_1893@80:0>:int)|- bot
          
          P[<<bcopy_1046@67:2>@70:0>](<k_make_array_u_1321@77:1>:int,<k_make_array_u_1321@77:1>:int,<k_make_array_u_1321@77:0>:int),
          ((0 > <k_make_array_u_1321@77:0>) && ((<k_make_array_u_1321@77:1> > 0) && (<fail_1893@80:0> = 1)))
          |- P[<fail_1893@80:0>](<fail_1893@80:0>:int)
          
          P[<bcopy_1046@67:4>](<bcopy_1046@67:0>:int,<bcopy_1046@67:1>:int,<<bcopy_1046@67:2>@70:0>:int),
          (<<bcopy_1046@67:2>@70:0> < <bcopy_1046@67:1>)
          |- P[<<bcopy_1046@67:2>@70:0>](<bcopy_1046@67:0>:int,<bcopy_1046@67:1>:int,
                                         <<bcopy_1046@67:2>@70:0>:int)
          
           ((<bcopy_1046@67:4> = 0) && ((<bcopy_1046@67:0> > 0) && (<bcopy_1046@67:0> = <bcopy_1046@67:1>)))
          |- P[<bcopy_1046@67:4>](<bcopy_1046@67:0>:int,<bcopy_1046@67:1>:int,
                                  <bcopy_1046@67:4>:int)
        input to Yhorn:
          P[<fail_1893@80:0>](<fail_1893@80:0>:int)|- bot
          
          P[<<bcopy_1046@67:2>@70:0>](<k_make_array_u_1321@77:1>:int,<k_make_array_u_1321@77:1>:int,<k_make_array_u_1321@77:0>:int),
          ((<k_make_array_u_1321@77:1> > 0) && ((0 > <k_make_array_u_1321@77:0>) && (<fail_1893@80:0> = 1)))
          |- P[<fail_1893@80:0>](<fail_1893@80:0>:int)
          
          P[<bcopy_1046@67:4>](<bcopy_1046@67:0>:int,<bcopy_1046@67:1>:int,<<bcopy_1046@67:2>@70:0>:int),
          (<<bcopy_1046@67:2>@70:0> < <bcopy_1046@67:1>)
          |- P[<<bcopy_1046@67:2>@70:0>](<bcopy_1046@67:0>:int,<bcopy_1046@67:1>:int,
                                         <<bcopy_1046@67:2>@70:0>:int)
          
           ((<bcopy_1046@67:0> = <bcopy_1046@67:1>) && ((<bcopy_1046@67:0> > 0) && (<bcopy_1046@67:4> = 0)))
          |- P[<bcopy_1046@67:4>](<bcopy_1046@67:0>:int,<bcopy_1046@67:1>:int,
                                  <bcopy_1046@67:4>:int)Yhorn (Wed Sep 25 10:52:05 JST 2013)


(0=0) & (v_sep_fail_1893_sep_80_sep_0($141)) -> 1=0.
(($141-1=0) & (-$142>0) & ($143>0)) & (v_sep_bcopy_1046_sep_67_sep_2_sep_70_sep_0($143,$143,$142)) -> v_sep_fail_1893_sep_80_sep_0($141).
($144-$145<0) & (v_sep_bcopy_1046_sep_67_sep_4($146,$145,$144)) -> v_sep_bcopy_1046_sep_67_sep_2_sep_70_sep_0($146,$145,$144).
($147=0) & ($146>0) & (-$145+$146=0) -> v_sep_bcopy_1046_sep_67_sep_4($146,$145,$147).


v_sep_bcopy_1046_sep_67_sep_2_sep_70_sep_0: X
v_sep_bcopy_1046_sep_67_sep_4: X
v_sep_fail_1893_sep_80_sep_0: X
....
v_sep_bcopy_1046_sep_67_sep_2_sep_70_sep_0: X
v_sep_bcopy_1046_sep_67_sep_4: X
v_sep_fail_1893_sep_80_sep_0: X
...
v_sep_bcopy_1046_sep_67_sep_2_sep_70_sep_0: X
v_sep_bcopy_1046_sep_67_sep_4: X
v_sep_fail_1893_sep_80_sep_0: X
....
v_sep_bcopy_1046_sep_67_sep_2_sep_70_sep_0: X
v_sep_bcopy_1046_sep_67_sep_4: X
v_sep_fail_1893_sep_80_sep_0: X
....(0=0) & (v_sep_fail_1893_sep_80_sep_0($141)) -> 1=0.
(($141-1=0) & (-$142>0) & ($143>0)) & (v_sep_bcopy_1046_sep_67_sep_2_sep_70_sep_0($143,$143,$142)) -> v_sep_fail_1893_sep_80_sep_0($141).
($144-$145<0) & (v_sep_bcopy_1046_sep_67_sep_4($146,$145,$144)) -> v_sep_bcopy_1046_sep_67_sep_2_sep_70_sep_0($146,$145,$144).
($147=0) & ($146>0) & (-$145+$146=0) -> v_sep_bcopy_1046_sep_67_sep_4($146,$145,$147).

        solution:
          P[<<bcopy_1046@67:2>@70:0>]($151:int,$153:int,$155:int) = (0 <= $155)
          P[<bcopy_1046@67:4>]($158:int,$160:int,$162:int) = (0 <= $162)
          P[<fail_1893@80:0>]($148:bool) = false
        
      end HcSolver.solve_ub(9739)[4] (0.010998 sec.)
      begin HcSolver.check_validity(9923)[4]
        input:
          P[<fail_1893@80:0>](<fail_1893@80:0>:bool)|- bot
          
          P[<<bcopy_1046@67:2>@70:0>](<k_make_array_u_1321@77:1>:int,<k_make_array_u_1321@77:1>:int,<k_make_array_u_1321@77:0>:int),
          ((0 > <k_make_array_u_1321@77:0>) && ((<k_make_array_u_1321@77:1> > 0) && <fail_1893@80:0>))
          |- P[<fail_1893@80:0>](<fail_1893@80:0>:bool)
          
          P[<bcopy_1046@67:4>](<bcopy_1046@67:0>:int,<bcopy_1046@67:1>:int,<<bcopy_1046@67:2>@70:0>:int),
          (<<bcopy_1046@67:2>@70:0> < <bcopy_1046@67:1>)
          |- P[<<bcopy_1046@67:2>@70:0>](<bcopy_1046@67:0>:int,<bcopy_1046@67:1>:int,
                                         <<bcopy_1046@67:2>@70:0>:int)
          
           ((<bcopy_1046@67:4> = 0) && ((<bcopy_1046@67:0> > 0) && (<bcopy_1046@67:0> = <bcopy_1046@67:1>)))
          |- P[<bcopy_1046@67:4>](<bcopy_1046@67:0>:int,<bcopy_1046@67:1>:int,
                                  <bcopy_1046@67:4>:int)
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        
      end HcSolver.check_validity(9923)[4] (0.003000 sec.)
      solution:
        P[<<bcopy_1046@67:2>@70:0>]($151:int,$153:int,$155:int) = (0 <= $155)
        P[<bcopy_1046@67:4>]($158:int,$160:int,$162:int) = (0 <= $162)
        P[<fail_1893@80:0>]($148:bool) = false
    end YhornInterface.solve(9738)[3] (0.013998 sec.)
    
  end RefTypeInfer.infer_etrs(8133)[2] (0.326951 sec.)
  refinement types:
    main_1884: X
    f_1891: v1:int -> X
    main_1057: v1:int -> (v2:unit -> X) -> X
    f_1042: v1:int -> (v2:int -> (v3:int -> X) -> X) -> (v6:int -> (v7:int -> X) -> X) -> (v10:unit -> X) -> X
    bcopy_1046: v1:int ->
                v2:int ->
                (v3:{v3:int | (0 <= v3)} -> (v4:int -> X) -> X) ->
                (v7:int -> (v8:int -> X) -> X) ->
                v11:{v11:int | (0 <= v11)} -> ((v12:int -> (v13:int -> X) -> X) -> X) -> X
    make_array_1030: v1:int -> v2:int -> (v3:int -> X) -> X
    k_make_array_u_1321: v1:int -> v2:int -> (v3:int -> X) -> v5:bool -> X
    fail_1893: v1:{v1:bool | false} -> (v2:unit -> X) -> X
    a_1038: var202:int ->
            var201:int ->
            var200:int -> var199:int -> (var198:int -> (var197:int -> X) -> X) -> var194:int -> (var193:int -> X) -> X
    f_1892: var205:int -> var204:unit -> X
    f_bcopy_1886: var223:int ->
                  var222:int ->
                  var221:int ->
                  (var220:int -> (var219:int -> X) -> X) ->
                  ((var216:int -> (var215:int -> X) -> X) -> X) ->
                  (var211:int -> (var210:int -> X) -> X) -> var207:int -> X
    f_bcopy_1887: var241:int ->
                  var240:int ->
                  var239:int ->
                  var238:int ->
                  ((var237:int -> (var236:int -> X) -> X) -> X) ->
                  (var232:int -> (var231:int -> X) -> X) -> (var228:int -> (var227:int -> X) -> X) -> X
    f_f_1890: var253:int ->
              (var252:int -> (var251:int -> X) -> X) ->
              (var248:unit -> X) -> (var246:int -> (var245:int -> X) -> X) -> X
    f_print_array_1888: var268:int ->
                        var267:int ->
                        var266:int ->
                        (var265:int -> (var264:int -> X) -> X) ->
                        (var261:int -> (var260:int -> X) -> X) -> (var257:unit -> X) -> var255:int -> X
    f_print_array_1889: var284:int ->
                        var283:int ->
                        var282:int ->
                        var281:int ->
                        (var280:int -> (var279:int -> X) -> X) ->
                        (var276:int -> (var275:int -> X) -> X) -> (var272:unit -> X) -> var270:unit -> X
    f_update_1885: var298:int ->
                   var297:int ->
                   var296:int ->
                   (var295:int -> (var294:int -> X) -> X) ->
                   ((var291:int -> (var290:int -> X) -> X) -> X) -> var286:int -> X
    k_make_array_u_1332: var304:int -> var303:int -> (var302:int -> X) -> var300:unit -> X
    print_array_1052: var318:int ->
                      (var317:int -> (var316:int -> X) -> X) ->
                      var313:int -> (var312:int -> (var311:int -> X) -> X) -> var308:int -> (var307:unit -> X) -> X
    print_int_1040: var322:int -> (var321:unit -> X) -> X
    update_1033: var335:int ->
                 var334:int ->
                 (var333:int -> (var332:int -> X) -> X) ->
                 var329:int -> ((var328:int -> (var327:int -> X) -> X) -> X) -> X
  abstraction types:
    main_1884: X
    f_1891: v1:int -> X
    main_1057: v1:int -> (v2:unit -> X) -> X
    f_1042: v1:int -> (v2:int -> (v3:int -> X) -> X) -> (v6:int -> (v7:int -> X) -> X) -> (v10:unit -> X) -> X
    bcopy_1046: v1:int ->
                v2:int ->
                (v3:int[v3 -> (0 <= v3)] -> (v4:int -> X) -> X) ->
                (v7:int -> (v8:int -> X) -> X) ->
                v11:int[v11 -> (0 <= v11)] -> ((v12:int -> (v13:int -> X) -> X) -> X) -> X
    make_array_1030: v1:int -> v2:int -> (v3:int -> X) -> X
    k_make_array_u_1321: v1:int -> v2:int -> (v3:int -> X) -> v5:bool -> X
    fail_1893: v1:bool -> (v2:unit -> X) -> X
    a_1038: var202:int ->
            var201:int ->
            var200:int -> var199:int -> (var198:int -> (var197:int -> X) -> X) -> var194:int -> (var193:int -> X) -> X
    f_1892: var205:int -> var204:unit -> X
    f_bcopy_1886: var223:int ->
                  var222:int ->
                  var221:int ->
                  (var220:int -> (var219:int -> X) -> X) ->
                  ((var216:int -> (var215:int -> X) -> X) -> X) ->
                  (var211:int -> (var210:int -> X) -> X) -> var207:int -> X
    f_bcopy_1887: var241:int ->
                  var240:int ->
                  var239:int ->
                  var238:int ->
                  ((var237:int -> (var236:int -> X) -> X) -> X) ->
                  (var232:int -> (var231:int -> X) -> X) -> (var228:int -> (var227:int -> X) -> X) -> X
    f_f_1890: var253:int ->
              (var252:int -> (var251:int -> X) -> X) ->
              (var248:unit -> X) -> (var246:int -> (var245:int -> X) -> X) -> X
    f_print_array_1888: var268:int ->
                        var267:int ->
                        var266:int ->
                        (var265:int -> (var264:int -> X) -> X) ->
                        (var261:int -> (var260:int -> X) -> X) -> (var257:unit -> X) -> var255:int -> X
    f_print_array_1889: var284:int ->
                        var283:int ->
                        var282:int ->
                        var281:int ->
                        (var280:int -> (var279:int -> X) -> X) ->
                        (var276:int -> (var275:int -> X) -> X) -> (var272:unit -> X) -> var270:unit -> X
    f_update_1885: var298:int ->
                   var297:int ->
                   var296:int ->
                   (var295:int -> (var294:int -> X) -> X) ->
                   ((var291:int -> (var290:int -> X) -> X) -> X) -> var286:int -> X
    k_make_array_u_1332: var304:int -> var303:int -> (var302:int -> X) -> var300:unit -> X
    print_array_1052: var318:int ->
                      (var317:int -> (var316:int -> X) -> X) ->
                      var313:int -> (var312:int -> (var311:int -> X) -> X) -> var308:int -> (var307:unit -> X) -> X
    print_int_1040: var322:int -> (var321:unit -> X) -> X
    update_1033: var335:int ->
                 var334:int ->
                 (var333:int -> (var332:int -> X) -> X) ->
                 var329:int -> ((var328:int -> (var327:int -> X) -> X) -> X) -> X
  
end AbsTypeInfer.refine(8132)[1] (0.335950 sec.)
DONE!

Prefix of spurious counter-example::
0; 0; 0; 0; 1; 1

Program with abstraction types (CEGAR-cycle 2)::
Main: main_1884
  main_1884 -> (rand_int f_1891)
  a_1038 i_1034 n_1035 x_1037 x_1386 des_1036 j_1039 k_update_a_1401 when (i_1034 = j_1039) -> (k_update_a_1401 x_1037)
  a_1038 i_1034 n_1035 x_1037 x_1386 des_1036 j_1039 k_update_a_1401 when (
      not (i_1034 = j_1039)) -> (des_1036 i_1034 k_update_a_1401)
  bcopy_1046 m_1043 m_1047 src_1048 des_1049 i_1050 k_f_bcopy_1535 when (i_1050 >= m_1047) -> (k_f_bcopy_1535 des_1049)
  bcopy_1046 m_1043 m_1047 src_1048 des_1049 i_1050 k_f_bcopy_1535 when (
      not (i_1050 >= m_1047)) -> (src_1048 i_1050 (f_bcopy_1886 i_1050 m_1043 m_1047 des_1049 k_f_bcopy_1535 src_1048))
  f_1042 m_1043 src_1044 des_1045 k_f_1476 ->
      (bcopy_1046 m_1043 m_1043 src_1044 des_1045 0 (f_f_1890 m_1043 des_1045 k_f_1476))
  f_1891 x_1859 -> (main_1057 x_1859 (f_1892 x_1859))
  f_1892 x_1859 x_1856 -> end
  f_bcopy_1886 i_1050 m_1043 m_1047 des_1049 k_f_bcopy_1535 src_1048 x_1591 ->
      (update_1033 i_1050 m_1047 des_1049 x_1591 (f_bcopy_1887 i_1050 m_1043 m_1047 x_1591 k_f_bcopy_1535 src_1048))
  f_bcopy_1887 i_1050 m_1043 m_1047 x_1591 k_f_bcopy_1535 src_1048 x_1547 ->
      (bcopy_1046 m_1043 m_1047 src_1048 x_1547 (i_1050 + 1) k_f_bcopy_1535)
  f_f_1890 m_1043 des_1045 k_f_1476 x_1715 -> (print_array_1052 m_1043 des_1045 m_1043 x_1715 0 k_f_1476)
  f_print_array_1888 i_1055 m_1043 m_1053 array_1054 des_1045 k_f_print_array_1664 x_1687 ->
      (print_int_1040 x_1687 (f_print_array_1889 i_1055 m_1043 m_1053 x_1687 array_1054 des_1045 k_f_print_array_1664))
  f_print_array_1889 i_1055 m_1043 m_1053 x_1687 array_1054 des_1045 k_f_print_array_1664 x_1667 ->
      (print_array_1052 m_1043 des_1045 m_1053 array_1054 (i_1055 + 1) k_f_print_array_1664)
  f_update_1885 i_1034 n_1035 x_1037 des_1036 k_update_1380 x_1386 ->
      (k_update_1380 (a_1038 i_1034 n_1035 x_1037 x_1386 des_1036))
  fail_1893 b k -> {fail} => (k ())
  k_make_array_u_1321 i_1032 n_1031 k_make_array_1315 b_1333 when b_1333 ->
      (k_make_array_u_1332 i_1032 n_1031 k_make_array_1315 ())
  k_make_array_u_1321 i_1032 n_1031 k_make_array_1315 b_1333 when (not b_1333) ->
      (fail_1893 true (k_make_array_u_1332 i_1032 n_1031 k_make_array_1315))
  k_make_array_u_1332 i_1032 n_1031 k_make_array_1315 x_1318 -> (k_make_array_1315 0)
  main_1057 n_1058 k_main_1787 when (n_1058 > 0) ->
      (f_1042 n_1058 (make_array_1030 n_1058) (make_array_1030 n_1058) k_main_1787)
  main_1057 n_1058 k_main_1787 when (not (n_1058 > 0)) -> (k_main_1787 ())
  make_array_1030 n_1031 i_1032 k_make_array_1315 when (0 <= i_1032) ->
      (k_make_array_u_1321 i_1032 n_1031 k_make_array_1315 (i_1032 < n_1031))
  make_array_1030 n_1031 i_1032 k_make_array_1315 when (not (0 <= i_1032)) ->
      (k_make_array_u_1321 i_1032 n_1031 k_make_array_1315 false)
  print_array_1052 m_1043 des_1045 m_1053 array_1054 i_1055 k_f_print_array_1664 when (
      i_1055 >= m_1053) -> (k_f_print_array_1664 ())
  print_array_1052 m_1043 des_1045 m_1053 array_1054 i_1055 k_f_print_array_1664 when (
      not (i_1055 >= m_1053)) ->
      (des_1045 i_1055 (f_print_array_1888 i_1055 m_1043 m_1053 array_1054 des_1045 k_f_print_array_1664))
  print_int_1040 n_1041 k_print_int_1432 -> (k_print_int_1432 ())
  update_1033 i_1034 n_1035 des_1036 x_1037 k_update_1380 ->
      (des_1036 i_1034 (f_update_1885 i_1034 n_1035 x_1037 des_1036 k_update_1380))
Types:
  main_1884 : X
  bcopy_1046 : (x_1:int ->
                x_2:int ->
                (x_4:int[x_4 >= 0; x_2 >= x_4 + 1] -> (int[x_1 >= x_4 + 1] -> X) -> X) ->
                (x_10:int[x_1 >= -x_2 + 2*x_10 + 2] -> (int -> X) -> X) ->
                x_15:int[x_15 >= 0; x_2 >= x_15 + 1] -> ((int -> (int -> X) -> X) -> X) -> X)
  fail_1893 : (x_1:bool[x_1] -> (unit -> X) -> X)
  print_array_1052 : (int -> (int -> (int -> X) -> X) -> int -> (int -> (int -> X) -> X) -> int -> (unit -> X) -> X)
  
(2-1) Abstracting ... DONE!

(2-2) Checking HORS ... DONE!

Error trace::
  main_1884 ... --> 
  f_1891 ... --> 
  main_1057 [1/2] ... --> 
  f_1042 ... --> 
  bcopy_1046 [2/2] ... --> 
  make_array_1030 [1/2] ... --> 
  k_make_array_u_1321 [1/2] ... --> 
  k_make_array_u_1332 ... --> 
  f_bcopy_1886 ... --> 
  update_1033 ... --> 
  make_array_1030 [2/2] ... --> 
  k_make_array_u_1321 [2/2] ... --> 
  fail_1893 ... --> fail -->
  ERROR!

Spurious counter-example::
  0; 0; 0; 0; 1; 0; 0; 0; 0; 0; 1; 1; 0

(2-3) Checking counter-example ... DONE!

(2-4) Discovering predicates ... 
begin AbsTypeInfer.refine(13254)[1]
  program:
    main_1884  | true = ((Random.int 0) f_1891)
    a_1038 i_1034 n_1035 x_1037 x_1386 des_1036 j_1039 k_update_a_1401 | (
    i_1034 = j_1039) = (k_update_a_1401 x_1037)
    a_1038 i_1034 n_1035 x_1037 x_1386 des_1036 j_1039 k_update_a_1401 | (
    not (i_1034 = j_1039)) = (des_1036 i_1034
                                       k_update_a_1401)
    bcopy_1046 m_1043 m_1047 src_1048 des_1049 i_1050 k_f_bcopy_1535 | (
    i_1050 >= m_1047) = (k_f_bcopy_1535 des_1049)
    bcopy_1046 m_1043 m_1047 src_1048 des_1049 i_1050 k_f_bcopy_1535 | (
    not (i_1050 >= m_1047)) = (src_1048 i_1050
                                        (f_bcopy_1886 i_1050
                                                      m_1043
                                                      m_1047
                                                      des_1049
                                                      k_f_bcopy_1535
                                                      src_1048))
    f_1042 m_1043 src_1044 des_1045 k_f_1476 | true = (bcopy_1046
                                                         m_1043
                                                         m_1043
                                                         src_1044
                                                         des_1045
                                                         0
                                                         (f_f_1890 m_1043
                                                                   des_1045
                                                                   k_f_1476))
    f_1891 x_1859 | true = (main_1057 x_1859
                                      (f_1892 x_1859))
    f_1892 x_1859 x_1856 | true = end
    f_bcopy_1886 i_1050 m_1043 m_1047 des_1049 k_f_bcopy_1535 src_1048 x_1591 | true = (
    update_1033 i_1050
                m_1047
                des_1049
                x_1591
                (f_bcopy_1887 i_1050
                              m_1043
                              m_1047
                              x_1591
                              k_f_bcopy_1535
                              src_1048))
    f_bcopy_1887 i_1050 m_1043 m_1047 x_1591 k_f_bcopy_1535 src_1048 x_1547 | true = (
    bcopy_1046 m_1043
               m_1047
               src_1048
               x_1547
               (i_1050 + 1)
               k_f_bcopy_1535)
    f_f_1890 m_1043 des_1045 k_f_1476 x_1715 | true = (print_array_1052 m_1043
                                                                    des_1045
                                                                    m_1043
                                                                    x_1715
                                                                    0
                                                                    k_f_1476)
    f_print_array_1888 i_1055 m_1043 m_1053 array_1054 des_1045 k_f_print_array_1664 x_1687 | true = (
    print_int_1040 x_1687
                   (f_print_array_1889 i_1055
                                       m_1043
                                       m_1053
                                       x_1687
                                       array_1054
                                       des_1045
                                       k_f_print_array_1664))
    f_print_array_1889 i_1055 m_1043 m_1053 x_1687 array_1054 des_1045 k_f_print_array_1664 x_1667 | true = (
    print_array_1052 m_1043
                     des_1045
                     m_1053
                     array_1054
                     (i_1055 + 1)
                     k_f_print_array_1664)
    f_update_1885 i_1034 n_1035 x_1037 des_1036 k_update_1380 x_1386 | true = (
    k_update_1380 (a_1038 i_1034
                          n_1035
                          x_1037
                          x_1386
                          des_1036))
    fail_1893 b k | true = (fail ())
    k_make_array_u_1321 i_1032 n_1031 k_make_array_1315 b_1333 | b_1333 = (
    k_make_array_u_1332 i_1032
                        n_1031
                        k_make_array_1315
                        ())
    k_make_array_u_1321 i_1032 n_1031 k_make_array_1315 b_1333 | (not b_1333) = (
    fail_1893 true
              (k_make_array_u_1332 i_1032
                                   n_1031
                                   k_make_array_1315))
    k_make_array_u_1332 i_1032 n_1031 k_make_array_1315 x_1318 | true = (
    k_make_array_1315 0)
    main_1057 n_1058 k_main_1787 | (n_1058 > 0) = (f_1042
                                                     n_1058
                                                     (make_array_1030 n_1058)
                                                     (make_array_1030 n_1058)
                                                     k_main_1787)
    main_1057 n_1058 k_main_1787 | (not (n_1058 > 0)) = (k_main_1787 ())
    make_array_1030 n_1031 i_1032 k_make_array_1315 | (0 <= i_1032) = (
    k_make_array_u_1321 i_1032
                        n_1031
                        k_make_array_1315
                        (i_1032 < n_1031))
    make_array_1030 n_1031 i_1032 k_make_array_1315 | (not (0 <= i_1032)) = (
    k_make_array_u_1321 i_1032
                        n_1031
                        k_make_array_1315
                        false)
    print_array_1052 m_1043 des_1045 m_1053 array_1054 i_1055 k_f_print_array_1664 | (
    i_1055 >= m_1053) = (k_f_print_array_1664 ())
    print_array_1052 m_1043 des_1045 m_1053 array_1054 i_1055 k_f_print_array_1664 | (
    not (i_1055 >= m_1053)) = (des_1045
                                 i_1055
                                 (f_print_array_1888 i_1055
                                                     m_1043
                                                     m_1053
                                                     array_1054
                                                     des_1045
                                                     k_f_print_array_1664))
    print_int_1040 n_1041 k_print_int_1432 | true = (k_print_int_1432 ())
    update_1033 i_1034 n_1035 des_1036 x_1037 k_update_1380 | true = (
    des_1036 i_1034
             (f_update_1885 i_1034
                            n_1035
                            x_1037
                            des_1036
                            k_update_1380))
    main_1884:X
    a_1038:int -> int -> int -> int -> (int -> (int -> X) -> X) -> int -> (int -> X) -> X
    bcopy_1046:int ->
               int ->
               (int -> (int -> X) -> X) -> (int -> (int -> X) -> X) -> int -> ((int -> (int -> X) -> X) -> X) -> X
    f_1042:int -> (int -> (int -> X) -> X) -> (int -> (int -> X) -> X) -> (unit -> X) -> X
    f_1891:int -> X
    f_1892:int -> unit -> X
    f_bcopy_1886:int ->
                 int ->
                 int ->
                 (int -> (int -> X) -> X) -> ((int -> (int -> X) -> X) -> X) -> (int -> (int -> X) -> X) -> int -> X
    f_bcopy_1887:int ->
                 int ->
                 int ->
                 int -> ((int -> (int -> X) -> X) -> X) -> (int -> (int -> X) -> X) -> (int -> (int -> X) -> X) -> X
    f_f_1890:int -> (int -> (int -> X) -> X) -> (unit -> X) -> (int -> (int -> X) -> X) -> X
    f_print_array_1888:int ->
                       int -> int -> (int -> (int -> X) -> X) -> (int -> (int -> X) -> X) -> (unit -> X) -> int -> X
    f_print_array_1889:int ->
                       int ->
                       int -> int -> (int -> (int -> X) -> X) -> (int -> (int -> X) -> X) -> (unit -> X) -> unit -> X
    f_update_1885:int -> int -> int -> (int -> (int -> X) -> X) -> ((int -> (int -> X) -> X) -> X) -> int -> X
    fail_1893:bool -> (unit -> X) -> X
    k_make_array_u_1321:int -> int -> (int -> X) -> bool -> X
    k_make_array_u_1332:int -> int -> (int -> X) -> unit -> X
    main_1057:int -> (unit -> X) -> X
    make_array_1030:int -> int -> (int -> X) -> X
    print_array_1052:int -> (int -> (int -> X) -> X) -> int -> (int -> (int -> X) -> X) -> int -> (unit -> X) -> X
    print_int_1040:int -> (unit -> X) -> X
    update_1033:int -> int -> (int -> (int -> X) -> X) -> int -> ((int -> (int -> X) -> X) -> X) -> X
  inlined functions: a_1038,f_1042,f_1891,f_1892,f_bcopy_1886,f_bcopy_1887,f_f_1890,f_print_array_1888,f_print_array_1889,f_update_1885,k_make_array_u_1321,k_make_array_u_1332,main_1057,make_array_1030,print_int_1040,update_1033
  counterexample: 0:0:0:0:1:0:0:0:0:0:1:1:0
  error traces:
    [true.nop(<f_1891@86:0> = var336)
     [true.(<main_1057@88:0> = <f_1891@86:0>)
      [(<main_1057@88:0> > 0).(<f_1042@91:0> = <main_1057@88:0>)
       [true.((<bcopy_1046@93:0> = <f_1042@91:0>) && ((<bcopy_1046@93:1> = <f_1042@91:0>) && (<bcopy_1046@93:4> = 0)))
        [(not (<bcopy_1046@93:4> >= <bcopy_1046@93:1>)).(<<bcopy_1046@93:2>@96:0> = <bcopy_1046@93:4>)
         [true.(<<f_1042@91:1>@98:0> = <<bcopy_1046@93:2>@96:0>)
          [true.((<make_array_1030@100:0> = <main_1057@88:0>) && (<make_array_1030@100:1> = <<f_1042@91:1>@98:0>))
           [(0 <= <make_array_1030@100:1>).
            ((<k_make_array_u_1321@103:0> = <make_array_1030@100:1>) &&
             ((<k_make_array_u_1321@103:1> = <make_array_1030@100:0>) &&
              (<k_make_array_u_1321@103:3> = (<make_array_1030@100:1> < <make_array_1030@100:0>))))
            [<k_make_array_u_1321@103:3>.
             ((<k_make_array_u_1332@106:0> = <k_make_array_u_1321@103:0>) &&
              ((<k_make_array_u_1332@106:1> = <k_make_array_u_1321@103:1>) && (<k_make_array_u_1332@106:3> = ())))
             [true.(<<k_make_array_u_1332@106:2>@108:0> = 0)
              [true.(<<k_make_array_u_1321@103:2>@110:0> = <<k_make_array_u_1332@106:2>@108:0>)
               [true.(<<make_array_1030@100:2>@112:0> = <<k_make_array_u_1321@103:2>@110:0>)
                [true.(<<<f_1042@91:1>@98:1>@114:0> = <<make_array_1030@100:2>@112:0>)
                 [true.(<<<bcopy_1046@93:2>@96:1>@116:0> = <<<f_1042@91:1>@98:1>@114:0>)
                  [true.
                   ((<f_bcopy_1886@118:0> = <bcopy_1046@93:4>) &&
                    ((<f_bcopy_1886@118:1> = <bcopy_1046@93:0>) &&
                     ((<f_bcopy_1886@118:2> = <bcopy_1046@93:1>) &&
                      (<f_bcopy_1886@118:6> = <<<bcopy_1046@93:2>@96:1>@116:0>))))
                   [true.
                    ((<update_1033@120:0> = <f_bcopy_1886@118:0>) &&
                     ((<update_1033@120:1> = <f_bcopy_1886@118:2>) && (<update_1033@120:3> = <f_bcopy_1886@118:6>)))
                    [true.(<<update_1033@120:2>@122:0> = <update_1033@120:0>)
                     [true.(<<f_bcopy_1886@118:3>@124:0> = <<update_1033@120:2>@122:0>)
                      [true.(<<bcopy_1046@93:3>@126:0> = <<f_bcopy_1886@118:3>@124:0>)
                       [true.(<<f_1042@91:2>@128:0> = <<bcopy_1046@93:3>@126:0>)
                        [true.
                         ((<make_array_1030@130:0> = <main_1057@88:0>) &&
                          (<make_array_1030@130:1> = <<f_1042@91:2>@128:0>))
                         [(not (0 <= <make_array_1030@130:1>)).
                          ((<k_make_array_u_1321@133:0> = <make_array_1030@130:1>) &&
                           ((<k_make_array_u_1321@133:1> = <make_array_1030@130:0>) &&
                            (<k_make_array_u_1321@133:3> = false)))
                          [(not <k_make_array_u_1321@133:3>).(<fail_1893@136:0> = true)[true.error
  begin RefTypeInfer.infer_etrs(13255)[2]
    horn clauses:
      P[<fail_1893@136:0>](<fail_1893@136:0>:bool)|- bot
      
      P[<k_make_array_u_1321@133:3>](<k_make_array_u_1321@133:0>:int,<k_make_array_u_1321@133:1>:int,false:bool),
      <fail_1893@136:0> |- P[<fail_1893@136:0>](<fail_1893@136:0>:bool)
      
      P[<make_array_1030@130:1>](<k_make_array_u_1321@133:1>:int,<k_make_array_u_1321@133:0>:int),
      ((0 > <k_make_array_u_1321@133:0>) && (not <k_make_array_u_1321@133:3>))
      |- P[<k_make_array_u_1321@133:3>](<k_make_array_u_1321@133:0>:int,
                                        <k_make_array_u_1321@133:1>:int,
                                        <k_make_array_u_1321@133:3>:bool)
      
      P[<main_1057@88:0>](<make_array_1030@130:0>:int),
      P[<<f_1042@91:2>@128:0>](<make_array_1030@130:0>:int,<make_array_1030@130:1>:int), (
      <make_array_1030@130:0> > 0)
      |- P[<make_array_1030@130:1>](<make_array_1030@130:0>:int,<make_array_1030@130:1>:int)
      
      P[<f_1042@91:0>](<f_1042@91:0>:int),
      P[<<bcopy_1046@93:3>@126:0>](<f_1042@91:0>:int,<f_1042@91:0>:int,<<f_1042@91:2>@128:0>:int)|- P[<<f_1042@91:2>@128:0>](
      <f_1042@91:0>:int,<<f_1042@91:2>@128:0>:int)
      
      P[<bcopy_1046@93:4>](<bcopy_1046@93:0>:int,<bcopy_1046@93:1>:int,<<bcopy_1046@93:2>@96:0>:int),
      P[<<f_bcopy_1886@118:3>@124:0>](<<bcopy_1046@93:2>@96:0>:int,<bcopy_1046@93:0>:int,<bcopy_1046@93:1>:int,<<bcopy_1046@93:3>@126:0>:int),
      (<<bcopy_1046@93:2>@96:0> < <bcopy_1046@93:1>)
      |- P[<<bcopy_1046@93:3>@126:0>](<bcopy_1046@93:0>:int,<bcopy_1046@93:1>:int,
                                      <<bcopy_1046@93:3>@126:0>:int)
      
      P[<f_bcopy_1886@118:6>](<f_bcopy_1886@118:0>:int,<f_bcopy_1886@118:1>:int,<f_bcopy_1886@118:2>:int,<update_1033@120:3>:int),
      P[<<update_1033@120:2>@122:0>](<f_bcopy_1886@118:0>:int,<f_bcopy_1886@118:2>:int,<<f_bcopy_1886@118:3>@124:0>:int)|- P[<<f_bcopy_1886@118:3>@124:0>](
      <f_bcopy_1886@118:0>:int,<f_bcopy_1886@118:1>:int,<f_bcopy_1886@118:2>:int,
      <<f_bcopy_1886@118:3>@124:0>:int)
      
      P[<update_1033@120:3>](<update_1033@120:0>:int,<update_1033@120:1>:int,<update_1033@120:3>:int),
      (<<update_1033@120:2>@122:0> = <update_1033@120:0>)
      |- P[<<update_1033@120:2>@122:0>](<update_1033@120:0>:int,<update_1033@120:1>:int,
                                        <<update_1033@120:2>@122:0>:int)
      
      P[<f_bcopy_1886@118:6>](<update_1033@120:0>:int,<f_bcopy_1886@118:1>:int,<update_1033@120:1>:int,<update_1033@120:3>:int)|- P[<update_1033@120:3>](
      <update_1033@120:0>:int,<update_1033@120:1>:int,<update_1033@120:3>:int)
      
      P[<bcopy_1046@93:4>](<f_bcopy_1886@118:1>:int,<f_bcopy_1886@118:2>:int,<f_bcopy_1886@118:0>:int),
      P[<<<bcopy_1046@93:2>@96:1>@116:0>](<f_bcopy_1886@118:1>:int,<f_bcopy_1886@118:2>:int,<f_bcopy_1886@118:0>:int,<f_bcopy_1886@118:6>:int),
      (<f_bcopy_1886@118:0> < <f_bcopy_1886@118:2>)
      |- P[<f_bcopy_1886@118:6>](<f_bcopy_1886@118:0>:int,<f_bcopy_1886@118:1>:int,
                                 <f_bcopy_1886@118:2>:int,<f_bcopy_1886@118:6>:int)
      
      P[<f_1042@91:0>](<bcopy_1046@93:0>:int),
      P[<<<f_1042@91:1>@98:1>@114:0>](<bcopy_1046@93:0>:int,<<bcopy_1046@93:2>@96:0>:int,<<<bcopy_1046@93:2>@96:1>@116:0>:int),
      (<bcopy_1046@93:0> = <bcopy_1046@93:1>)
      |- P[<<<bcopy_1046@93:2>@96:1>@116:0>](<bcopy_1046@93:0>:int,<bcopy_1046@93:1>:int,
                                             <<bcopy_1046@93:2>@96:0>:int,
                                             <<<bcopy_1046@93:2>@96:1>@116:0>:int)
      
      P[<main_1057@88:0>](<f_1042@91:0>:int),
      P[<<make_array_1030@100:2>@112:0>](<f_1042@91:0>:int,<<f_1042@91:1>@98:0>:int,<<<f_1042@91:1>@98:1>@114:0>:int),
      P[<f_1042@91:0>](<f_1042@91:0>:int), (<f_1042@91:0> > 0)
      |- P[<<<f_1042@91:1>@98:1>@114:0>](<f_1042@91:0>:int,<<f_1042@91:1>@98:0>:int,
                                         <<<f_1042@91:1>@98:1>@114:0>:int)
      
      P[<make_array_1030@100:1>](<make_array_1030@100:0>:int,<make_array_1030@100:1>:int),
      P[<<k_make_array_u_1321@103:2>@110:0>](<make_array_1030@100:1>:int,<make_array_1030@100:0>:int,<<make_array_1030@100:2>@112:0>:int),
      (0 <= <make_array_1030@100:1>)
      |- P[<<make_array_1030@100:2>@112:0>](<make_array_1030@100:0>:int,
                                            <make_array_1030@100:1>:int,
                                            <<make_array_1030@100:2>@112:0>:int)
      
      P[<k_make_array_u_1321@103:3>](<k_make_array_u_1321@103:0>:int,<k_make_array_u_1321@103:1>:int,true:bool),
      P[<<k_make_array_u_1332@106:2>@108:0>](<k_make_array_u_1321@103:0>:int,<k_make_array_u_1321@103:1>:int,<<k_make_array_u_1321@103:2>@110:0>:int)|- P[<<k_make_array_u_1321@103:2>@110:0>](
      <k_make_array_u_1321@103:0>:int,<k_make_array_u_1321@103:1>:int,
      <<k_make_array_u_1321@103:2>@110:0>:int)
      
      P[<k_make_array_u_1332@106:3>](<k_make_array_u_1332@106:0>:int,<k_make_array_u_1332@106:1>:int,<k_make_array_u_1332@106:3>:unit),
      (<<k_make_array_u_1332@106:2>@108:0> = 0)
      |- P[<<k_make_array_u_1332@106:2>@108:0>](<k_make_array_u_1332@106:0>:int,
                                                <k_make_array_u_1332@106:1>:int,
                                                <<k_make_array_u_1332@106:2>@108:0>:int)
      
      P[<k_make_array_u_1321@103:3>](<k_make_array_u_1332@106:0>:int,<k_make_array_u_1332@106:1>:int,true:bool)|- P[<k_make_array_u_1332@106:3>](
      <k_make_array_u_1332@106:0>:int,<k_make_array_u_1332@106:1>:int,
      <k_make_array_u_1332@106:3>:unit)
      
      P[<make_array_1030@100:1>](<k_make_array_u_1321@103:1>:int,<k_make_array_u_1321@103:0>:int),
      ((0 <= <k_make_array_u_1321@103:0>) &&
       (<k_make_array_u_1321@103:3> = (<k_make_array_u_1321@103:0> < <k_make_array_u_1321@103:1>)))
      |- P[<k_make_array_u_1321@103:3>](<k_make_array_u_1321@103:0>:int,
                                        <k_make_array_u_1321@103:1>:int,
                                        <k_make_array_u_1321@103:3>:bool)
      
      P[<main_1057@88:0>](<make_array_1030@100:0>:int),
      P[<<f_1042@91:1>@98:0>](<make_array_1030@100:0>:int,<make_array_1030@100:1>:int), (
      <make_array_1030@100:0> > 0)
      |- P[<make_array_1030@100:1>](<make_array_1030@100:0>:int,<make_array_1030@100:1>:int)
      
      P[<f_1042@91:0>](<f_1042@91:0>:int),
      P[<<bcopy_1046@93:2>@96:0>](<f_1042@91:0>:int,<f_1042@91:0>:int,<<f_1042@91:1>@98:0>:int)|- P[<<f_1042@91:1>@98:0>](
      <f_1042@91:0>:int,<<f_1042@91:1>@98:0>:int)
      
      P[<bcopy_1046@93:4>](<bcopy_1046@93:0>:int,<bcopy_1046@93:1>:int,<<bcopy_1046@93:2>@96:0>:int),
      (<<bcopy_1046@93:2>@96:0> < <bcopy_1046@93:1>)
      |- P[<<bcopy_1046@93:2>@96:0>](<bcopy_1046@93:0>:int,<bcopy_1046@93:1>:int,
                                     <<bcopy_1046@93:2>@96:0>:int)
      
      P[<f_1042@91:0>](<bcopy_1046@93:0>:int), ((<bcopy_1046@93:4> = 0) && (<bcopy_1046@93:0> = <bcopy_1046@93:1>))
      |- P[<bcopy_1046@93:4>](<bcopy_1046@93:0>:int,<bcopy_1046@93:1>:int,
                              <bcopy_1046@93:4>:int)
      
      P[<main_1057@88:0>](<f_1042@91:0>:int), (<f_1042@91:0> > 0) |- P[<f_1042@91:0>](<f_1042@91:0>:int)
      
      P[<f_1891@86:0>](<main_1057@88:0>:int)|- P[<main_1057@88:0>](<main_1057@88:0>:int)
      
      |- P[<f_1891@86:0>](<f_1891@86:0>:int)
    call trees:
      <main_1884@83>
        <f_1891@86>
          <main_1057@88>
            <f_1042@91>
              <bcopy_1046@93>
              </<bcopy_1046@93:2>@96>
            </<f_1042@91:1>@98>
            <make_array_1030@100>
              <k_make_array_u_1321@103>
                <k_make_array_u_1332@106>
                </<k_make_array_u_1332@106:2>@108>
              </<k_make_array_u_1321@103:2>@110>
            </<make_array_1030@100:2>@112>
            <<<f_1042@91:1>@98:1>@114>
              <<<bcopy_1046@93:2>@96:1>@116>
                <f_bcopy_1886@118>
                  <update_1033@120>
                  </<update_1033@120:2>@122>
                </<f_bcopy_1886@118:3>@124>
              </<bcopy_1046@93:3>@126>
            </<f_1042@91:2>@128>
            <make_array_1030@130>
              <k_make_array_u_1321@133>
                <fail_1893@136>
    inlined horn clauses:
      P[<fail_1893@136:0>](<fail_1893@136:0>:bool)|- bot
      
      P[<<bcopy_1046@93:3>@126:0>](<k_make_array_u_1321@133:1>:int,<k_make_array_u_1321@133:1>:int,<k_make_array_u_1321@133:0>:int),
      ((0 > <k_make_array_u_1321@133:0>) && ((<k_make_array_u_1321@133:1> > 0) && <fail_1893@136:0>))
      |- P[<fail_1893@136:0>](<fail_1893@136:0>:bool)
      
      P[<<<bcopy_1046@93:2>@96:1>@116:0>](<bcopy_1046@93:0>:int,<bcopy_1046@93:1>:int,<<bcopy_1046@93:3>@126:0>:int,var340:int),
      P[<bcopy_1046@93:4>](<bcopy_1046@93:0>:int,<bcopy_1046@93:1>:int,<<bcopy_1046@93:3>@126:0>:int),
      (<<bcopy_1046@93:3>@126:0> < <bcopy_1046@93:1>)
      |- P[<<bcopy_1046@93:3>@126:0>](<bcopy_1046@93:0>:int,<bcopy_1046@93:1>:int,
                                      <<bcopy_1046@93:3>@126:0>:int)
      
      P[<<bcopy_1046@93:2>@96:0>](<bcopy_1046@93:0>:int,<bcopy_1046@93:0>:int,<<bcopy_1046@93:2>@96:0>:int),
      ((<<<bcopy_1046@93:2>@96:1>@116:0> = 0) &&
       ((0 <= <<bcopy_1046@93:2>@96:0>) &&
        ((<<bcopy_1046@93:2>@96:0> < <bcopy_1046@93:0>) &&
         ((<bcopy_1046@93:0> > 0) && (<bcopy_1046@93:0> = <bcopy_1046@93:1>)))))
      |- P[<<<bcopy_1046@93:2>@96:1>@116:0>](<bcopy_1046@93:0>:int,<bcopy_1046@93:1>:int,
                                             <<bcopy_1046@93:2>@96:0>:int,
                                             <<<bcopy_1046@93:2>@96:1>@116:0>:int)
      
      P[<bcopy_1046@93:4>](<bcopy_1046@93:0>:int,<bcopy_1046@93:1>:int,<<bcopy_1046@93:2>@96:0>:int),
      (<<bcopy_1046@93:2>@96:0> < <bcopy_1046@93:1>)
      |- P[<<bcopy_1046@93:2>@96:0>](<bcopy_1046@93:0>:int,<bcopy_1046@93:1>:int,
                                     <<bcopy_1046@93:2>@96:0>:int)
      
       ((<bcopy_1046@93:4> = 0) && ((<bcopy_1046@93:0> > 0) && (<bcopy_1046@93:0> = <bcopy_1046@93:1>)))
      |- P[<bcopy_1046@93:4>](<bcopy_1046@93:0>:int,<bcopy_1046@93:1>:int,
                              <bcopy_1046@93:4>:int)
    begin ParamSubstInfer.infer(17337)[3]
      
    end ParamSubstInfer.infer(17337)[3] (0.637902 sec.)
    inferred extra parameters:
      
    begin RefTypeInfer.elim_coeffs(17339)[3]
      
    end RefTypeInfer.elim_coeffs(17339)[3] (0.004000 sec.)
    begin YhornInterface.solve(17893)[3]
      begin HcSolver.solve_ub(17894)[4]
        encoded:
          P[<fail_1893@136:0>](<fail_1893@136:0>:int)|- bot
          
          P[<<bcopy_1046@93:3>@126:0>](<k_make_array_u_1321@133:1>:int,<k_make_array_u_1321@133:1>:int,<k_make_array_u_1321@133:0>:int),
          ((0 > <k_make_array_u_1321@133:0>) && ((<k_make_array_u_1321@133:1> > 0) && (<fail_1893@136:0> = 1)))
          |- P[<fail_1893@136:0>](<fail_1893@136:0>:int)
          
          P[<<<bcopy_1046@93:2>@96:1>@116:0>](<bcopy_1046@93:0>:int,<bcopy_1046@93:1>:int,<<bcopy_1046@93:3>@126:0>:int,var340:int),
          P[<bcopy_1046@93:4>](<bcopy_1046@93:0>:int,<bcopy_1046@93:1>:int,<<bcopy_1046@93:3>@126:0>:int),
          (<<bcopy_1046@93:3>@126:0> < <bcopy_1046@93:1>)
          |- P[<<bcopy_1046@93:3>@126:0>](<bcopy_1046@93:0>:int,<bcopy_1046@93:1>:int,
                                          <<bcopy_1046@93:3>@126:0>:int)
          
          P[<<bcopy_1046@93:2>@96:0>](<bcopy_1046@93:0>:int,<bcopy_1046@93:0>:int,<<bcopy_1046@93:2>@96:0>:int),
          ((<<<bcopy_1046@93:2>@96:1>@116:0> = 0) &&
           ((0 <= <<bcopy_1046@93:2>@96:0>) &&
            ((<<bcopy_1046@93:2>@96:0> < <bcopy_1046@93:0>) &&
             ((<bcopy_1046@93:0> > 0) && (<bcopy_1046@93:0> = <bcopy_1046@93:1>)))))
          |- P[<<<bcopy_1046@93:2>@96:1>@116:0>](<bcopy_1046@93:0>:int,
                                                 <bcopy_1046@93:1>:int,
                                                 <<bcopy_1046@93:2>@96:0>:int,
                                                 <<<bcopy_1046@93:2>@96:1>@116:0>:int)
          
          P[<bcopy_1046@93:4>](<bcopy_1046@93:0>:int,<bcopy_1046@93:1>:int,<<bcopy_1046@93:2>@96:0>:int),
          (<<bcopy_1046@93:2>@96:0> < <bcopy_1046@93:1>)
          |- P[<<bcopy_1046@93:2>@96:0>](<bcopy_1046@93:0>:int,<bcopy_1046@93:1>:int,
                                         <<bcopy_1046@93:2>@96:0>:int)
          
           ((<bcopy_1046@93:4> = 0) && ((<bcopy_1046@93:0> > 0) && (<bcopy_1046@93:0> = <bcopy_1046@93:1>)))
          |- P[<bcopy_1046@93:4>](<bcopy_1046@93:0>:int,<bcopy_1046@93:1>:int,
                                  <bcopy_1046@93:4>:int)
        input to Yhorn:
          P[<fail_1893@136:0>](<fail_1893@136:0>:int)|- bot
          
          P[<<bcopy_1046@93:3>@126:0>](<k_make_array_u_1321@133:1>:int,<k_make_array_u_1321@133:1>:int,<k_make_array_u_1321@133:0>:int),
          ((<k_make_array_u_1321@133:1> > 0) && ((0 > <k_make_array_u_1321@133:0>) && (<fail_1893@136:0> = 1)))
          |- P[<fail_1893@136:0>](<fail_1893@136:0>:int)
          
          P[<<<bcopy_1046@93:2>@96:1>@116:0>](<bcopy_1046@93:0>:int,<bcopy_1046@93:1>:int,<<bcopy_1046@93:3>@126:0>:int,var340:int),
          P[<bcopy_1046@93:4>](<bcopy_1046@93:0>:int,<bcopy_1046@93:1>:int,<<bcopy_1046@93:3>@126:0>:int),
          (<<bcopy_1046@93:3>@126:0> < <bcopy_1046@93:1>)
          |- P[<<bcopy_1046@93:3>@126:0>](<bcopy_1046@93:0>:int,<bcopy_1046@93:1>:int,
                                          <<bcopy_1046@93:3>@126:0>:int)
          
          P[<<bcopy_1046@93:2>@96:0>](<bcopy_1046@93:0>:int,<bcopy_1046@93:0>:int,<<bcopy_1046@93:2>@96:0>:int),
          ((<bcopy_1046@93:0> = <bcopy_1046@93:1>) &&
           ((<bcopy_1046@93:0> > 0) &&
            ((<<bcopy_1046@93:2>@96:0> < <bcopy_1046@93:0>) &&
             ((0 <= <<bcopy_1046@93:2>@96:0>) && (<<<bcopy_1046@93:2>@96:1>@116:0> = 0)))))
          |- P[<<<bcopy_1046@93:2>@96:1>@116:0>](<bcopy_1046@93:0>:int,
                                                 <bcopy_1046@93:1>:int,
                                                 <<bcopy_1046@93:2>@96:0>:int,
                                                 <<<bcopy_1046@93:2>@96:1>@116:0>:int)
          
          P[<bcopy_1046@93:4>](<bcopy_1046@93:0>:int,<bcopy_1046@93:1>:int,<<bcopy_1046@93:2>@96:0>:int),
          (<<bcopy_1046@93:2>@96:0> < <bcopy_1046@93:1>)
          |- P[<<bcopy_1046@93:2>@96:0>](<bcopy_1046@93:0>:int,<bcopy_1046@93:1>:int,
                                         <<bcopy_1046@93:2>@96:0>:int)
          
           ((<bcopy_1046@93:0> = <bcopy_1046@93:1>) && ((<bcopy_1046@93:0> > 0) && (<bcopy_1046@93:4> = 0)))
          |- P[<bcopy_1046@93:4>](<bcopy_1046@93:0>:int,<bcopy_1046@93:1>:int,
                                  <bcopy_1046@93:4>:int)Yhorn (Wed Sep 25 10:52:05 JST 2013)


(0=0) & (v_sep_fail_1893_sep_136_sep_0($214)) -> 1=0.
(($214-1=0) & (-$215>0) & ($216>0)) & (v_sep_bcopy_1046_sep_93_sep_3_sep_126_sep_0($216,$216,$215)) -> v_sep_fail_1893_sep_136_sep_0($214).
($217-$218<0) & (v_sep_bcopy_1046_sep_93_sep_4($219,$218,$217)) & (v_sep_bcopy_1046_sep_93_sep_2_sep_96_sep_1_sep_116_sep_0($219,$218,$217,$220)) -> v_sep_bcopy_1046_sep_93_sep_3_sep_126_sep_0($219,$218,$217).
(($221=0) & (-$222<=0) & (-$219+$222<0) & ($219>0) & (-$218+$219=0)) & (v_sep_bcopy_1046_sep_93_sep_2_sep_96_sep_0($219,$219,$222)) -> v_sep_bcopy_1046_sep_93_sep_2_sep_96_sep_1_sep_116_sep_0($219,$218,$222,$221).
(-$218+$222<0) & (v_sep_bcopy_1046_sep_93_sep_4($219,$218,$222)) -> v_sep_bcopy_1046_sep_93_sep_2_sep_96_sep_0($219,$218,$222).
($223=0) & ($219>0) & (-$218+$219=0) -> v_sep_bcopy_1046_sep_93_sep_4($219,$218,$223).


v_sep_bcopy_1046_sep_93_sep_2_sep_96_sep_0: X
v_sep_bcopy_1046_sep_93_sep_2_sep_96_sep_1_sep_116_sep_0: X
v_sep_bcopy_1046_sep_93_sep_3_sep_126_sep_0: X
v_sep_bcopy_1046_sep_93_sep_4: X
v_sep_fail_1893_sep_136_sep_0: X
.......
v_sep_bcopy_1046_sep_93_sep_2_sep_96_sep_0: X
v_sep_bcopy_1046_sep_93_sep_2_sep_96_sep_1_sep_116_sep_0: X
v_sep_bcopy_1046_sep_93_sep_3_sep_126_sep_0: X
v_sep_bcopy_1046_sep_93_sep_4: X
v_sep_fail_1893_sep_136_sep_0: X
...
v_sep_bcopy_1046_sep_93_sep_2_sep_96_sep_0: X
v_sep_bcopy_1046_sep_93_sep_2_sep_96_sep_1_sep_116_sep_0: X
v_sep_bcopy_1046_sep_93_sep_3_sep_126_sep_0: X
v_sep_bcopy_1046_sep_93_sep_4: X
v_sep_fail_1893_sep_136_sep_0: X
.....
v_sep_bcopy_1046_sep_93_sep_2_sep_96_sep_0: X
v_sep_bcopy_1046_sep_93_sep_2_sep_96_sep_1_sep_116_sep_0: X
v_sep_bcopy_1046_sep_93_sep_3_sep_126_sep_0: X
v_sep_bcopy_1046_sep_93_sep_4: X
v_sep_fail_1893_sep_136_sep_0: X
......
v_sep_bcopy_1046_sep_93_sep_2_sep_96_sep_0: X
v_sep_bcopy_1046_sep_93_sep_2_sep_96_sep_1_sep_116_sep_0: X
v_sep_bcopy_1046_sep_93_sep_3_sep_126_sep_0: X
v_sep_bcopy_1046_sep_93_sep_4: X
v_sep_fail_1893_sep_136_sep_0: X
.......(0=0) & (v_sep_fail_1893_sep_136_sep_0($214)) -> 1=0.
(($214-1=0) & (-$215>0) & ($216>0)) & (v_sep_bcopy_1046_sep_93_sep_3_sep_126_sep_0($216,$216,$215)) -> v_sep_fail_1893_sep_136_sep_0($214).
($217-$218<0) & (v_sep_bcopy_1046_sep_93_sep_4($219,$218,$217)) & (v_sep_bcopy_1046_sep_93_sep_2_sep_96_sep_1_sep_116_sep_0($219,$218,$217,$220)) -> v_sep_bcopy_1046_sep_93_sep_3_sep_126_sep_0($219,$218,$217).
(($221=0) & (-$222<=0) & (-$219+$222<0) & ($219>0) & (-$218+$219=0)) & (v_sep_bcopy_1046_sep_93_sep_2_sep_96_sep_0($219,$219,$222)) -> v_sep_bcopy_1046_sep_93_sep_2_sep_96_sep_1_sep_116_sep_0($219,$218,$222,$221).
(-$218+$222<0) & (v_sep_bcopy_1046_sep_93_sep_4($219,$218,$222)) -> v_sep_bcopy_1046_sep_93_sep_2_sep_96_sep_0($219,$218,$222).
($223=0) & ($219>0) & (-$218+$219=0) -> v_sep_bcopy_1046_sep_93_sep_4($219,$218,$223).

        solution:
          P[<<bcopy_1046@93:2>@96:0>]($250:int,$252:int,$254:int) = true
          P[<<<bcopy_1046@93:2>@96:1>@116:0>]($241:int,$243:int,$245:int,$247:int) = (0 <= $245)
          P[<<bcopy_1046@93:3>@126:0>]($227:int,$229:int,$231:int) = (0 <= $231)
          P[<bcopy_1046@93:4>]($234:int,$236:int,$238:int) = true
          P[<fail_1893@136:0>]($224:bool) = false
        
      end HcSolver.solve_ub(17894)[4] (0.013998 sec.)
      begin HcSolver.check_validity(18308)[4]
        input:
          P[<fail_1893@136:0>](<fail_1893@136:0>:bool)|- bot
          
          P[<<bcopy_1046@93:3>@126:0>](<k_make_array_u_1321@133:1>:int,<k_make_array_u_1321@133:1>:int,<k_make_array_u_1321@133:0>:int),
          ((0 > <k_make_array_u_1321@133:0>) && ((<k_make_array_u_1321@133:1> > 0) && <fail_1893@136:0>))
          |- P[<fail_1893@136:0>](<fail_1893@136:0>:bool)
          
          P[<<<bcopy_1046@93:2>@96:1>@116:0>](<bcopy_1046@93:0>:int,<bcopy_1046@93:1>:int,<<bcopy_1046@93:3>@126:0>:int,var340:int),
          P[<bcopy_1046@93:4>](<bcopy_1046@93:0>:int,<bcopy_1046@93:1>:int,<<bcopy_1046@93:3>@126:0>:int),
          (<<bcopy_1046@93:3>@126:0> < <bcopy_1046@93:1>)
          |- P[<<bcopy_1046@93:3>@126:0>](<bcopy_1046@93:0>:int,<bcopy_1046@93:1>:int,
                                          <<bcopy_1046@93:3>@126:0>:int)
          
          P[<<bcopy_1046@93:2>@96:0>](<bcopy_1046@93:0>:int,<bcopy_1046@93:0>:int,<<bcopy_1046@93:2>@96:0>:int),
          ((<<<bcopy_1046@93:2>@96:1>@116:0> = 0) &&
           ((0 <= <<bcopy_1046@93:2>@96:0>) &&
            ((<<bcopy_1046@93:2>@96:0> < <bcopy_1046@93:0>) &&
             ((<bcopy_1046@93:0> > 0) && (<bcopy_1046@93:0> = <bcopy_1046@93:1>)))))
          |- P[<<<bcopy_1046@93:2>@96:1>@116:0>](<bcopy_1046@93:0>:int,
                                                 <bcopy_1046@93:1>:int,
                                                 <<bcopy_1046@93:2>@96:0>:int,
                                                 <<<bcopy_1046@93:2>@96:1>@116:0>:int)
          
          P[<bcopy_1046@93:4>](<bcopy_1046@93:0>:int,<bcopy_1046@93:1>:int,<<bcopy_1046@93:2>@96:0>:int),
          (<<bcopy_1046@93:2>@96:0> < <bcopy_1046@93:1>)
          |- P[<<bcopy_1046@93:2>@96:0>](<bcopy_1046@93:0>:int,<bcopy_1046@93:1>:int,
                                         <<bcopy_1046@93:2>@96:0>:int)
          
           ((<bcopy_1046@93:4> = 0) && ((<bcopy_1046@93:0> > 0) && (<bcopy_1046@93:0> = <bcopy_1046@93:1>)))
          |- P[<bcopy_1046@93:4>](<bcopy_1046@93:0>:int,<bcopy_1046@93:1>:int,
                                  <bcopy_1046@93:4>:int)
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        
      end HcSolver.check_validity(18308)[4] (0.002999 sec.)
      solution:
        P[<<bcopy_1046@93:2>@96:0>]($250:int,$252:int,$254:int) = true
        P[<<<bcopy_1046@93:2>@96:1>@116:0>]($241:int,$243:int,$245:int,$247:int) = (0 <= $245)
        P[<<bcopy_1046@93:3>@126:0>]($227:int,$229:int,$231:int) = (0 <= $231)
        P[<bcopy_1046@93:4>]($234:int,$236:int,$238:int) = true
        P[<fail_1893@136:0>]($224:bool) = false
    end YhornInterface.solve(17893)[3] (0.016997 sec.)
    
  end RefTypeInfer.infer_etrs(13255)[2] (0.676897 sec.)
  refinement types:
    main_1884: X
    f_1891: v1:int -> X
    main_1057: v1:int -> (v2:unit -> X) -> X
    f_1042: v1:int -> (v2:int -> (v3:int -> X) -> X) -> (v6:int -> (v7:int -> X) -> X) -> (v10:unit -> X) -> X
    bcopy_1046: v1:int ->
                v2:int ->
                (v3:int -> (v4:{v4:int | (0 <= v3)} -> X) -> X) ->
                (v7:{v7:int | (0 <= v7)} -> (v8:int -> X) -> X) ->
                v11:int -> ((v12:int -> (v13:int -> X) -> X) -> X) -> X
    make_array_1030: v1:int -> v2:int -> (v3:int -> X) -> X
    k_make_array_u_1321: v1:int -> v2:int -> (v3:int -> X) -> v5:bool -> X
    k_make_array_u_1332: v1:int -> v2:int -> (v3:int -> X) -> v5:unit -> X
    f_bcopy_1886: v1:int ->
                  v2:int ->
                  v3:int ->
                  (v4:int -> (v5:int -> X) -> X) ->
                  ((v8:int -> (v9:int -> X) -> X) -> X) -> (v13:int -> (v14:int -> X) -> X) -> v17:int -> X
    update_1033: v1:int ->
                 v2:int -> (v3:int -> (v4:int -> X) -> X) -> v7:int -> ((v8:int -> (v9:int -> X) -> X) -> X) -> X
    make_array_1030: v1:int -> v2:int -> (v3:int -> X) -> X
    k_make_array_u_1321: v1:int -> v2:int -> (v3:int -> X) -> v5:bool -> X
    fail_1893: v1:{v1:bool | false} -> (v2:unit -> X) -> X
    a_1038: var389:int ->
            var388:int ->
            var387:int -> var386:int -> (var385:int -> (var384:int -> X) -> X) -> var381:int -> (var380:int -> X) -> X
    f_1892: var392:int -> var391:unit -> X
    f_bcopy_1887: var410:int ->
                  var409:int ->
                  var408:int ->
                  var407:int ->
                  ((var406:int -> (var405:int -> X) -> X) -> X) ->
                  (var401:int -> (var400:int -> X) -> X) -> (var397:int -> (var396:int -> X) -> X) -> X
    f_f_1890: var422:int ->
              (var421:int -> (var420:int -> X) -> X) ->
              (var417:unit -> X) -> (var415:int -> (var414:int -> X) -> X) -> X
    f_print_array_1888: var437:int ->
                        var436:int ->
                        var435:int ->
                        (var434:int -> (var433:int -> X) -> X) ->
                        (var430:int -> (var429:int -> X) -> X) -> (var426:unit -> X) -> var424:int -> X
    f_print_array_1889: var453:int ->
                        var452:int ->
                        var451:int ->
                        var450:int ->
                        (var449:int -> (var448:int -> X) -> X) ->
                        (var445:int -> (var444:int -> X) -> X) -> (var441:unit -> X) -> var439:unit -> X
    f_update_1885: var467:int ->
                   var466:int ->
                   var465:int ->
                   (var464:int -> (var463:int -> X) -> X) ->
                   ((var460:int -> (var459:int -> X) -> X) -> X) -> var455:int -> X
    print_array_1052: var481:int ->
                      (var480:int -> (var479:int -> X) -> X) ->
                      var476:int -> (var475:int -> (var474:int -> X) -> X) -> var471:int -> (var470:unit -> X) -> X
    print_int_1040: var485:int -> (var484:unit -> X) -> X
  abstraction types:
    main_1884: X
    f_1891: v1:int -> X
    main_1057: v1:int -> (v2:unit -> X) -> X
    f_1042: v1:int -> (v2:int -> (v3:int -> X) -> X) -> (v6:int -> (v7:int -> X) -> X) -> (v10:unit -> X) -> X
    bcopy_1046: v1:int ->
                v2:int ->
                (v3:int -> (v4:int[v4 -> (0 <= v3)] -> X) -> X) ->
                (v7:int[v7 -> (0 <= v7)] -> (v8:int -> X) -> X) ->
                v11:int -> ((v12:int -> (v13:int -> X) -> X) -> X) -> X
    make_array_1030: var486:int -> var487:int -> (var488:int -> X) -> X
    k_make_array_u_1321: var491:int -> var492:int -> (var493:int -> X) -> var495:bool -> X
    k_make_array_u_1332: v1:int -> v2:int -> (v3:int -> X) -> v5:unit -> X
    f_bcopy_1886: v1:int ->
                  v2:int ->
                  v3:int ->
                  (v4:int -> (v5:int -> X) -> X) ->
                  ((v8:int -> (v9:int -> X) -> X) -> X) -> (v13:int -> (v14:int -> X) -> X) -> v17:int -> X
    update_1033: v1:int ->
                 v2:int -> (v3:int -> (v4:int -> X) -> X) -> v7:int -> ((v8:int -> (v9:int -> X) -> X) -> X) -> X
    fail_1893: v1:bool -> (v2:unit -> X) -> X
    a_1038: var389:int ->
            var388:int ->
            var387:int -> var386:int -> (var385:int -> (var384:int -> X) -> X) -> var381:int -> (var380:int -> X) -> X
    f_1892: var392:int -> var391:unit -> X
    f_bcopy_1887: var410:int ->
                  var409:int ->
                  var408:int ->
                  var407:int ->
                  ((var406:int -> (var405:int -> X) -> X) -> X) ->
                  (var401:int -> (var400:int -> X) -> X) -> (var397:int -> (var396:int -> X) -> X) -> X
    f_f_1890: var422:int ->
              (var421:int -> (var420:int -> X) -> X) ->
              (var417:unit -> X) -> (var415:int -> (var414:int -> X) -> X) -> X
    f_print_array_1888: var437:int ->
                        var436:int ->
                        var435:int ->
                        (var434:int -> (var433:int -> X) -> X) ->
                        (var430:int -> (var429:int -> X) -> X) -> (var426:unit -> X) -> var424:int -> X
    f_print_array_1889: var453:int ->
                        var452:int ->
                        var451:int ->
                        var450:int ->
                        (var449:int -> (var448:int -> X) -> X) ->
                        (var445:int -> (var444:int -> X) -> X) -> (var441:unit -> X) -> var439:unit -> X
    f_update_1885: var467:int ->
                   var466:int ->
                   var465:int ->
                   (var464:int -> (var463:int -> X) -> X) ->
                   ((var460:int -> (var459:int -> X) -> X) -> X) -> var455:int -> X
    print_array_1052: var481:int ->
                      (var480:int -> (var479:int -> X) -> X) ->
                      var476:int -> (var475:int -> (var474:int -> X) -> X) -> var471:int -> (var470:unit -> X) -> X
    print_int_1040: var485:int -> (var484:unit -> X) -> X
  
end AbsTypeInfer.refine(13254)[1] (0.684895 sec.)
DONE!

Prefix of spurious counter-example::
0; 0; 0; 0; 1; 0; 0; 0; 0; 0; 1

Program with abstraction types (CEGAR-cycle 3)::
Main: main_1884
  main_1884 -> (rand_int f_1891)
  a_1038 i_1034 n_1035 x_1037 x_1386 des_1036 j_1039 k_update_a_1401 when (i_1034 = j_1039) -> (k_update_a_1401 x_1037)
  a_1038 i_1034 n_1035 x_1037 x_1386 des_1036 j_1039 k_update_a_1401 when (
      not (i_1034 = j_1039)) -> (des_1036 i_1034 k_update_a_1401)
  bcopy_1046 m_1043 m_1047 src_1048 des_1049 i_1050 k_f_bcopy_1535 when (i_1050 >= m_1047) -> (k_f_bcopy_1535 des_1049)
  bcopy_1046 m_1043 m_1047 src_1048 des_1049 i_1050 k_f_bcopy_1535 when (
      not (i_1050 >= m_1047)) -> (src_1048 i_1050 (f_bcopy_1886 i_1050 m_1043 m_1047 des_1049 k_f_bcopy_1535 src_1048))
  f_1042 m_1043 src_1044 des_1045 k_f_1476 ->
      (bcopy_1046 m_1043 m_1043 src_1044 des_1045 0 (f_f_1890 m_1043 des_1045 k_f_1476))
  f_1891 x_1859 -> (main_1057 x_1859 (f_1892 x_1859))
  f_1892 x_1859 x_1856 -> end
  f_bcopy_1886 i_1050 m_1043 m_1047 des_1049 k_f_bcopy_1535 src_1048 x_1591 ->
      (update_1033 i_1050 m_1047 des_1049 x_1591 (f_bcopy_1887 i_1050 m_1043 m_1047 x_1591 k_f_bcopy_1535 src_1048))
  f_bcopy_1887 i_1050 m_1043 m_1047 x_1591 k_f_bcopy_1535 src_1048 x_1547 ->
      (bcopy_1046 m_1043 m_1047 src_1048 x_1547 (i_1050 + 1) k_f_bcopy_1535)
  f_f_1890 m_1043 des_1045 k_f_1476 x_1715 -> (print_array_1052 m_1043 des_1045 m_1043 x_1715 0 k_f_1476)
  f_print_array_1888 i_1055 m_1043 m_1053 array_1054 des_1045 k_f_print_array_1664 x_1687 ->
      (print_int_1040 x_1687 (f_print_array_1889 i_1055 m_1043 m_1053 x_1687 array_1054 des_1045 k_f_print_array_1664))
  f_print_array_1889 i_1055 m_1043 m_1053 x_1687 array_1054 des_1045 k_f_print_array_1664 x_1667 ->
      (print_array_1052 m_1043 des_1045 m_1053 array_1054 (i_1055 + 1) k_f_print_array_1664)
  f_update_1885 i_1034 n_1035 x_1037 des_1036 k_update_1380 x_1386 ->
      (k_update_1380 (a_1038 i_1034 n_1035 x_1037 x_1386 des_1036))
  fail_1893 b k -> {fail} => (k ())
  k_make_array_u_1321 i_1032 n_1031 k_make_array_1315 b_1333 when b_1333 ->
      (k_make_array_u_1332 i_1032 n_1031 k_make_array_1315 ())
  k_make_array_u_1321 i_1032 n_1031 k_make_array_1315 b_1333 when (not b_1333) ->
      (fail_1893 true (k_make_array_u_1332 i_1032 n_1031 k_make_array_1315))
  k_make_array_u_1332 i_1032 n_1031 k_make_array_1315 x_1318 -> (k_make_array_1315 0)
  main_1057 n_1058 k_main_1787 when (n_1058 > 0) ->
      (f_1042 n_1058 (make_array_1030 n_1058) (make_array_1030 n_1058) k_main_1787)
  main_1057 n_1058 k_main_1787 when (not (n_1058 > 0)) -> (k_main_1787 ())
  make_array_1030 n_1031 i_1032 k_make_array_1315 when (0 <= i_1032) ->
      (k_make_array_u_1321 i_1032 n_1031 k_make_array_1315 (i_1032 < n_1031))
  make_array_1030 n_1031 i_1032 k_make_array_1315 when (not (0 <= i_1032)) ->
      (k_make_array_u_1321 i_1032 n_1031 k_make_array_1315 false)
  print_array_1052 m_1043 des_1045 m_1053 array_1054 i_1055 k_f_print_array_1664 when (
      i_1055 >= m_1053) -> (k_f_print_array_1664 ())
  print_array_1052 m_1043 des_1045 m_1053 array_1054 i_1055 k_f_print_array_1664 when (
      not (i_1055 >= m_1053)) ->
      (des_1045 i_1055 (f_print_array_1888 i_1055 m_1043 m_1053 array_1054 des_1045 k_f_print_array_1664))
  print_int_1040 n_1041 k_print_int_1432 -> (k_print_int_1432 ())
  update_1033 i_1034 n_1035 des_1036 x_1037 k_update_1380 ->
      (des_1036 i_1034 (f_update_1885 i_1034 n_1035 x_1037 des_1036 k_update_1380))
Types:
  main_1884 : X
  bcopy_1046 : (x_1:int ->
                x_2:int ->
                (x_4:int[x_4 >= 0; x_2 >= x_4 + 1] -> (int[x_4 >= 0; x_1 >= x_4 + 1] -> X) -> X) ->
                (x_10:int[x_10 >= 0; x_1 >= -x_2 + 2*x_10 + 2] -> (int -> X) -> X) ->
                x_15:int[x_15 >= 0; x_2 >= x_15 + 1] -> ((int -> (int -> X) -> X) -> X) -> X)
  fail_1893 : (x_1:bool[x_1] -> (unit -> X) -> X)
  print_array_1052 : (int -> (int -> (int -> X) -> X) -> int -> (int -> (int -> X) -> X) -> int -> (unit -> X) -> X)
  
(3-1) Abstracting ... DONE!

(3-2) Checking HORS ... DONE!

Error trace::
  main_1884 ... --> 
  f_1891 ... --> 
  main_1057 [1/2] ... --> 
  f_1042 ... --> 
  bcopy_1046 [2/2] ... --> 
  make_array_1030 [1/2] ... --> 
  k_make_array_u_1321 [1/2] ... --> 
  k_make_array_u_1332 ... --> 
  f_bcopy_1886 ... --> 
  update_1033 ... --> 
  make_array_1030 [1/2] ... --> 
  k_make_array_u_1321 [1/2] ... --> 
  k_make_array_u_1332 ... --> 
  f_update_1885 ... --> 
  f_bcopy_1887 ... --> 
  bcopy_1046 [1/2] ... --> 
  f_f_1890 ... --> 
  print_array_1052 [2/2] ... --> 
  make_array_1030 [2/2] ... --> 
  k_make_array_u_1321 [2/2] ... --> 
  fail_1893 ... --> fail -->
  ERROR!

Spurious counter-example::
  0; 0; 0; 0; 1; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 1; 1; 1; 0

(3-3) Checking counter-example ... DONE!

(3-4) Discovering predicates ... 
begin AbsTypeInfer.refine(25929)[1]
  program:
    main_1884  | true = ((Random.int 0) f_1891)
    a_1038 i_1034 n_1035 x_1037 x_1386 des_1036 j_1039 k_update_a_1401 | (
    i_1034 = j_1039) = (k_update_a_1401 x_1037)
    a_1038 i_1034 n_1035 x_1037 x_1386 des_1036 j_1039 k_update_a_1401 | (
    not (i_1034 = j_1039)) = (des_1036 i_1034
                                       k_update_a_1401)
    bcopy_1046 m_1043 m_1047 src_1048 des_1049 i_1050 k_f_bcopy_1535 | (
    i_1050 >= m_1047) = (k_f_bcopy_1535 des_1049)
    bcopy_1046 m_1043 m_1047 src_1048 des_1049 i_1050 k_f_bcopy_1535 | (
    not (i_1050 >= m_1047)) = (src_1048 i_1050
                                        (f_bcopy_1886 i_1050
                                                      m_1043
                                                      m_1047
                                                      des_1049
                                                      k_f_bcopy_1535
                                                      src_1048))
    f_1042 m_1043 src_1044 des_1045 k_f_1476 | true = (bcopy_1046
                                                         m_1043
                                                         m_1043
                                                         src_1044
                                                         des_1045
                                                         0
                                                         (f_f_1890 m_1043
                                                                   des_1045
                                                                   k_f_1476))
    f_1891 x_1859 | true = (main_1057 x_1859
                                      (f_1892 x_1859))
    f_1892 x_1859 x_1856 | true = end
    f_bcopy_1886 i_1050 m_1043 m_1047 des_1049 k_f_bcopy_1535 src_1048 x_1591 | true = (
    update_1033 i_1050
                m_1047
                des_1049
                x_1591
                (f_bcopy_1887 i_1050
                              m_1043
                              m_1047
                              x_1591
                              k_f_bcopy_1535
                              src_1048))
    f_bcopy_1887 i_1050 m_1043 m_1047 x_1591 k_f_bcopy_1535 src_1048 x_1547 | true = (
    bcopy_1046 m_1043
               m_1047
               src_1048
               x_1547
               (i_1050 + 1)
               k_f_bcopy_1535)
    f_f_1890 m_1043 des_1045 k_f_1476 x_1715 | true = (print_array_1052 m_1043
                                                                    des_1045
                                                                    m_1043
                                                                    x_1715
                                                                    0
                                                                    k_f_1476)
    f_print_array_1888 i_1055 m_1043 m_1053 array_1054 des_1045 k_f_print_array_1664 x_1687 | true = (
    print_int_1040 x_1687
                   (f_print_array_1889 i_1055
                                       m_1043
                                       m_1053
                                       x_1687
                                       array_1054
                                       des_1045
                                       k_f_print_array_1664))
    f_print_array_1889 i_1055 m_1043 m_1053 x_1687 array_1054 des_1045 k_f_print_array_1664 x_1667 | true = (
    print_array_1052 m_1043
                     des_1045
                     m_1053
                     array_1054
                     (i_1055 + 1)
                     k_f_print_array_1664)
    f_update_1885 i_1034 n_1035 x_1037 des_1036 k_update_1380 x_1386 | true = (
    k_update_1380 (a_1038 i_1034
                          n_1035
                          x_1037
                          x_1386
                          des_1036))
    fail_1893 b k | true = (fail ())
    k_make_array_u_1321 i_1032 n_1031 k_make_array_1315 b_1333 | b_1333 = (
    k_make_array_u_1332 i_1032
                        n_1031
                        k_make_array_1315
                        ())
    k_make_array_u_1321 i_1032 n_1031 k_make_array_1315 b_1333 | (not b_1333) = (
    fail_1893 true
              (k_make_array_u_1332 i_1032
                                   n_1031
                                   k_make_array_1315))
    k_make_array_u_1332 i_1032 n_1031 k_make_array_1315 x_1318 | true = (
    k_make_array_1315 0)
    main_1057 n_1058 k_main_1787 | (n_1058 > 0) = (f_1042
                                                     n_1058
                                                     (make_array_1030 n_1058)
                                                     (make_array_1030 n_1058)
                                                     k_main_1787)
    main_1057 n_1058 k_main_1787 | (not (n_1058 > 0)) = (k_main_1787 ())
    make_array_1030 n_1031 i_1032 k_make_array_1315 | (0 <= i_1032) = (
    k_make_array_u_1321 i_1032
                        n_1031
                        k_make_array_1315
                        (i_1032 < n_1031))
    make_array_1030 n_1031 i_1032 k_make_array_1315 | (not (0 <= i_1032)) = (
    k_make_array_u_1321 i_1032
                        n_1031
                        k_make_array_1315
                        false)
    print_array_1052 m_1043 des_1045 m_1053 array_1054 i_1055 k_f_print_array_1664 | (
    i_1055 >= m_1053) = (k_f_print_array_1664 ())
    print_array_1052 m_1043 des_1045 m_1053 array_1054 i_1055 k_f_print_array_1664 | (
    not (i_1055 >= m_1053)) = (des_1045
                                 i_1055
                                 (f_print_array_1888 i_1055
                                                     m_1043
                                                     m_1053
                                                     array_1054
                                                     des_1045
                                                     k_f_print_array_1664))
    print_int_1040 n_1041 k_print_int_1432 | true = (k_print_int_1432 ())
    update_1033 i_1034 n_1035 des_1036 x_1037 k_update_1380 | true = (
    des_1036 i_1034
             (f_update_1885 i_1034
                            n_1035
                            x_1037
                            des_1036
                            k_update_1380))
    main_1884:X
    a_1038:int -> int -> int -> int -> (int -> (int -> X) -> X) -> int -> (int -> X) -> X
    bcopy_1046:int ->
               int ->
               (int -> (int -> X) -> X) -> (int -> (int -> X) -> X) -> int -> ((int -> (int -> X) -> X) -> X) -> X
    f_1042:int -> (int -> (int -> X) -> X) -> (int -> (int -> X) -> X) -> (unit -> X) -> X
    f_1891:int -> X
    f_1892:int -> unit -> X
    f_bcopy_1886:int ->
                 int ->
                 int ->
                 (int -> (int -> X) -> X) -> ((int -> (int -> X) -> X) -> X) -> (int -> (int -> X) -> X) -> int -> X
    f_bcopy_1887:int ->
                 int ->
                 int ->
                 int -> ((int -> (int -> X) -> X) -> X) -> (int -> (int -> X) -> X) -> (int -> (int -> X) -> X) -> X
    f_f_1890:int -> (int -> (int -> X) -> X) -> (unit -> X) -> (int -> (int -> X) -> X) -> X
    f_print_array_1888:int ->
                       int -> int -> (int -> (int -> X) -> X) -> (int -> (int -> X) -> X) -> (unit -> X) -> int -> X
    f_print_array_1889:int ->
                       int ->
                       int -> int -> (int -> (int -> X) -> X) -> (int -> (int -> X) -> X) -> (unit -> X) -> unit -> X
    f_update_1885:int -> int -> int -> (int -> (int -> X) -> X) -> ((int -> (int -> X) -> X) -> X) -> int -> X
    fail_1893:bool -> (unit -> X) -> X
    k_make_array_u_1321:int -> int -> (int -> X) -> bool -> X
    k_make_array_u_1332:int -> int -> (int -> X) -> unit -> X
    main_1057:int -> (unit -> X) -> X
    make_array_1030:int -> int -> (int -> X) -> X
    print_array_1052:int -> (int -> (int -> X) -> X) -> int -> (int -> (int -> X) -> X) -> int -> (unit -> X) -> X
    print_int_1040:int -> (unit -> X) -> X
    update_1033:int -> int -> (int -> (int -> X) -> X) -> int -> ((int -> (int -> X) -> X) -> X) -> X
  inlined functions: a_1038,f_1042,f_1891,f_1892,f_bcopy_1886,f_bcopy_1887,f_f_1890,f_print_array_1888,f_print_array_1889,f_update_1885,k_make_array_u_1321,k_make_array_u_1332,main_1057,make_array_1030,print_int_1040,update_1033
  counterexample: 0:0:0:0:1:0:0:0:0:0:0:0:0:0:0:0:0:1:1:1:0
  error traces:
    [true.nop(<f_1891@142:0> = var497)
     [true.(<main_1057@144:0> = <f_1891@142:0>)
      [(<main_1057@144:0> > 0).(<f_1042@147:0> = <main_1057@144:0>)
       [true.
        ((<bcopy_1046@149:0> = <f_1042@147:0>) && ((<bcopy_1046@149:1> = <f_1042@147:0>) && (<bcopy_1046@149:4> = 0)))
        [(not (<bcopy_1046@149:4> >= <bcopy_1046@149:1>)).(<<bcopy_1046@149:2>@152:0> = <bcopy_1046@149:4>)
         [true.(<<f_1042@147:1>@154:0> = <<bcopy_1046@149:2>@152:0>)
          [true.((<make_array_1030@156:0> = <main_1057@144:0>) && (<make_array_1030@156:1> = <<f_1042@147:1>@154:0>))
           [(0 <= <make_array_1030@156:1>).
            ((<k_make_array_u_1321@159:0> = <make_array_1030@156:1>) &&
             ((<k_make_array_u_1321@159:1> = <make_array_1030@156:0>) &&
              (<k_make_array_u_1321@159:3> = (<make_array_1030@156:1> < <make_array_1030@156:0>))))
            [<k_make_array_u_1321@159:3>.
             ((<k_make_array_u_1332@162:0> = <k_make_array_u_1321@159:0>) &&
              ((<k_make_array_u_1332@162:1> = <k_make_array_u_1321@159:1>) && (<k_make_array_u_1332@162:3> = ())))
             [true.(<<k_make_array_u_1332@162:2>@164:0> = 0)
              [true.(<<k_make_array_u_1321@159:2>@166:0> = <<k_make_array_u_1332@162:2>@164:0>)
               [true.(<<make_array_1030@156:2>@168:0> = <<k_make_array_u_1321@159:2>@166:0>)
                [true.(<<<f_1042@147:1>@154:1>@170:0> = <<make_array_1030@156:2>@168:0>)
                 [true.(<<<bcopy_1046@149:2>@152:1>@172:0> = <<<f_1042@147:1>@154:1>@170:0>)
                  [true.
                   ((<f_bcopy_1886@174:0> = <bcopy_1046@149:4>) &&
                    ((<f_bcopy_1886@174:1> = <bcopy_1046@149:0>) &&
                     ((<f_bcopy_1886@174:2> = <bcopy_1046@149:1>) &&
                      (<f_bcopy_1886@174:6> = <<<bcopy_1046@149:2>@152:1>@172:0>))))
                   [true.
                    ((<update_1033@176:0> = <f_bcopy_1886@174:0>) &&
                     ((<update_1033@176:1> = <f_bcopy_1886@174:2>) && (<update_1033@176:3> = <f_bcopy_1886@174:6>)))
                    [true.(<<update_1033@176:2>@178:0> = <update_1033@176:0>)
                     [true.(<<f_bcopy_1886@174:3>@180:0> = <<update_1033@176:2>@178:0>)
                      [true.(<<bcopy_1046@149:3>@182:0> = <<f_bcopy_1886@174:3>@180:0>)
                       [true.(<<f_1042@147:2>@184:0> = <<bcopy_1046@149:3>@182:0>)
                        [true.
                         ((<make_array_1030@186:0> = <main_1057@144:0>) &&
                          (<make_array_1030@186:1> = <<f_1042@147:2>@184:0>))
                         [(0 <= <make_array_1030@186:1>).
                          ((<k_make_array_u_1321@189:0> = <make_array_1030@186:1>) &&
                           ((<k_make_array_u_1321@189:1> = <make_array_1030@186:0>) &&
                            (<k_make_array_u_1321@189:3> = (<make_array_1030@186:1> < <make_array_1030@186:0>))))
                          [<k_make_array_u_1321@189:3>.
                           ((<k_make_array_u_1332@192:0> = <k_make_array_u_1321@189:0>) &&
                            ((<k_make_array_u_1332@192:1> = <k_make_array_u_1321@189:1>) &&
                             (<k_make_array_u_1332@192:3> = ())))
                           [true.(<<k_make_array_u_1332@192:2>@194:0> = 0)
                            [true.(<<k_make_array_u_1321@189:2>@196:0> = <<k_make_array_u_1332@192:2>@194:0>)
                             [true.(<<make_array_1030@186:2>@198:0> = <<k_make_array_u_1321@189:2>@196:0>)
                              [true.(<<<f_1042@147:2>@184:1>@200:0> = <<make_array_1030@186:2>@198:0>)
                               [true.(<<<bcopy_1046@149:3>@182:1>@202:0> = <<<f_1042@147:2>@184:1>@200:0>)
                                [true.(<<<f_bcopy_1886@174:3>@180:1>@204:0> = <<<bcopy_1046@149:3>@182:1>@202:0>)
                                 [true.(<<<update_1033@176:2>@178:1>@206:0> = <<<f_bcopy_1886@174:3>@180:1>@204:0>)
                                  [true.
                                   ((<f_update_1885@208:0> = <update_1033@176:0>) &&
                                    ((<f_update_1885@208:1> = <update_1033@176:1>) &&
                                     ((<f_update_1885@208:2> = <update_1033@176:3>) &&
                                      (<f_update_1885@208:5> = <<<update_1033@176:2>@178:1>@206:0>))))
                                   [true.true
                                    [true.true
                                     [true.
                                      ((<f_bcopy_1887@214:0> = <f_bcopy_1886@174:0>) &&
                                       ((<f_bcopy_1887@214:1> = <f_bcopy_1886@174:1>) &&
                                        ((<f_bcopy_1887@214:2> = <f_bcopy_1886@174:2>) &&
                                         (<f_bcopy_1887@214:3> = <f_bcopy_1886@174:6>))))
                                      [true.
                                       ((<bcopy_1046@216:0> = <f_bcopy_1887@214:1>) &&
                                        ((<bcopy_1046@216:1> = <f_bcopy_1887@214:2>) &&
                                         (<bcopy_1046@216:4> = (<f_bcopy_1887@214:0> + 1))))
                                       [(<bcopy_1046@216:4> >= <bcopy_1046@216:1>).true
                                        [true.true
                                         [true.true
                                          [true.true
                                           [true.(<f_f_1890@227:0> = <f_1042@147:0>)
                                            [true.
                                             ((<print_array_1052@229:0> = <f_f_1890@227:0>) &&
                                              ((<print_array_1052@229:2> = <f_f_1890@227:0>) &&
                                               (<print_array_1052@229:4> = 0)))
                                             [(not (<print_array_1052@229:4> >= <print_array_1052@229:2>)).
                                              (<<print_array_1052@229:1>@232:0> = <print_array_1052@229:4>)
                                              [true.(<<f_f_1890@227:1>@234:0> = <<print_array_1052@229:1>@232:0>)
                                               [true.(<<f_1042@147:2>@236:0> = <<f_f_1890@227:1>@234:0>)
                                                [true.
                                                 ((<make_array_1030@238:0> = <main_1057@144:0>) &&
                                                  (<make_array_1030@238:1> = <<f_1042@147:2>@236:0>))
                                                 [(not (0 <= <make_array_1030@238:1>)).
                                                  ((<k_make_array_u_1321@241:0> = <make_array_1030@238:1>) &&
                                                   ((<k_make_array_u_1321@241:1> = <make_array_1030@238:0>) &&
                                                    (<k_make_array_u_1321@241:3> = false)))
                                                  [(not <k_make_array_u_1321@241:3>).(
                                                   <fail_1893@244:0> = true)[
                                                   true.error
  begin RefTypeInfer.infer_etrs(25930)[2]
    horn clauses:
      P[<fail_1893@244:0>](<fail_1893@244:0>:bool)|- bot
      
      P[<k_make_array_u_1321@241:3>](<k_make_array_u_1321@241:0>:int,<k_make_array_u_1321@241:1>:int,false:bool),
      <fail_1893@244:0> |- P[<fail_1893@244:0>](<fail_1893@244:0>:bool)
      
      P[<make_array_1030@238:1>](<k_make_array_u_1321@241:1>:int,<k_make_array_u_1321@241:0>:int),
      ((0 > <k_make_array_u_1321@241:0>) && (not <k_make_array_u_1321@241:3>))
      |- P[<k_make_array_u_1321@241:3>](<k_make_array_u_1321@241:0>:int,
                                        <k_make_array_u_1321@241:1>:int,
                                        <k_make_array_u_1321@241:3>:bool)
      
      P[<main_1057@144:0>](<make_array_1030@238:0>:int),
      P[<<f_1042@147:2>@236:0>](<make_array_1030@238:0>:int,<make_array_1030@238:1>:int), (
      <make_array_1030@238:0> > 0)
      |- P[<make_array_1030@238:1>](<make_array_1030@238:0>:int,<make_array_1030@238:1>:int)
      
      P[<f_1042@147:0>](<f_1042@147:0>:int),
      P[<<f_f_1890@227:1>@234:0>](<f_1042@147:0>:int,<<f_1042@147:2>@236:0>:int)|- P[<<f_1042@147:2>@236:0>](
      <f_1042@147:0>:int,<<f_1042@147:2>@236:0>:int)
      
      P[<f_f_1890@227:0>](<f_f_1890@227:0>:int),
      P[<<print_array_1052@229:1>@232:0>](<f_f_1890@227:0>:int,<<f_f_1890@227:1>@234:0>:int)|- P[<<f_f_1890@227:1>@234:0>](
      <f_f_1890@227:0>:int,<<f_f_1890@227:1>@234:0>:int)
      
      P[<print_array_1052@229:4>](<print_array_1052@229:0>:int,<print_array_1052@229:2>:int,<<print_array_1052@229:1>@232:0>:int),
      (<<print_array_1052@229:1>@232:0> < <print_array_1052@229:2>)
      |- P[<<print_array_1052@229:1>@232:0>](<print_array_1052@229:0>:int,
                                             <<print_array_1052@229:1>@232:0>:int)
      
      P[<f_f_1890@227:0>](<print_array_1052@229:0>:int),
      ((<print_array_1052@229:4> = 0) && (<print_array_1052@229:0> = <print_array_1052@229:2>))
      |- P[<print_array_1052@229:4>](<print_array_1052@229:0>:int,<print_array_1052@229:2>:int,
                                     <print_array_1052@229:4>:int)
      
      P[<f_1042@147:0>](<f_f_1890@227:0>:int)|- P[<f_f_1890@227:0>](<f_f_1890@227:0>:int)
      
      P[<f_bcopy_1887@214:3>]((-1 + <bcopy_1046@216:4>):int,<bcopy_1046@216:0>:int,<bcopy_1046@216:1>:int,<f_bcopy_1887@214:3>:int)|- P[<bcopy_1046@216:4>](
      <bcopy_1046@216:0>:int,<bcopy_1046@216:1>:int,<bcopy_1046@216:4>:int)
      
      P[<f_bcopy_1886@174:6>](<f_bcopy_1887@214:0>:int,<f_bcopy_1887@214:1>:int,<f_bcopy_1887@214:2>:int,<f_bcopy_1887@214:3>:int)|- P[<f_bcopy_1887@214:3>](
      <f_bcopy_1887@214:0>:int,<f_bcopy_1887@214:1>:int,<f_bcopy_1887@214:2>:int,
      <f_bcopy_1887@214:3>:int)
      
      P[<update_1033@176:3>](<f_update_1885@208:0>:int,<f_update_1885@208:1>:int,<f_update_1885@208:2>:int),
      P[<<<update_1033@176:2>@178:1>@206:0>](<f_update_1885@208:0>:int,<f_update_1885@208:1>:int,<f_update_1885@208:0>:int,<f_update_1885@208:5>:int)|- P[<f_update_1885@208:5>](
      <f_update_1885@208:0>:int,<f_update_1885@208:1>:int,<f_update_1885@208:2>:int,
      <f_update_1885@208:5>:int)
      
      P[<f_bcopy_1886@174:6>](<update_1033@176:0>:int,<f_bcopy_1886@174:1>:int,<update_1033@176:1>:int,<update_1033@176:3>:int),
      P[<<<f_bcopy_1886@174:3>@180:1>@204:0>](<update_1033@176:0>:int,<f_bcopy_1886@174:1>:int,<update_1033@176:1>:int,<<update_1033@176:2>@178:0>:int,<<<update_1033@176:2>@178:1>@206:0>:int)|- P[<<<update_1033@176:2>@178:1>@206:0>](
      <update_1033@176:0>:int,<update_1033@176:1>:int,<<update_1033@176:2>@178:0>:int,
      <<<update_1033@176:2>@178:1>@206:0>:int)
      
      P[<bcopy_1046@149:4>](<f_bcopy_1886@174:1>:int,<f_bcopy_1886@174:2>:int,<f_bcopy_1886@174:0>:int),
      P[<<<bcopy_1046@149:3>@182:1>@202:0>](<f_bcopy_1886@174:1>:int,<f_bcopy_1886@174:2>:int,<<f_bcopy_1886@174:3>@180:0>:int,<<<f_bcopy_1886@174:3>@180:1>@204:0>:int),
      (<f_bcopy_1886@174:0> < <f_bcopy_1886@174:2>)
      |- P[<<<f_bcopy_1886@174:3>@180:1>@204:0>](<f_bcopy_1886@174:0>:int,
                                                 <f_bcopy_1886@174:1>:int,
                                                 <f_bcopy_1886@174:2>:int,
                                                 <<f_bcopy_1886@174:3>@180:0>:int,
                                                 <<<f_bcopy_1886@174:3>@180:1>@204:0>:int)
      
      P[<f_1042@147:0>](<bcopy_1046@149:0>:int),
      P[<<<f_1042@147:2>@184:1>@200:0>](<bcopy_1046@149:0>:int,<<bcopy_1046@149:3>@182:0>:int,<<<bcopy_1046@149:3>@182:1>@202:0>:int),
      (<bcopy_1046@149:0> = <bcopy_1046@149:1>)
      |- P[<<<bcopy_1046@149:3>@182:1>@202:0>](<bcopy_1046@149:0>:int,
                                               <bcopy_1046@149:1>:int,
                                               <<bcopy_1046@149:3>@182:0>:int,
                                               <<<bcopy_1046@149:3>@182:1>@202:0>:int)
      
      P[<main_1057@144:0>](<f_1042@147:0>:int),
      P[<<make_array_1030@186:2>@198:0>](<f_1042@147:0>:int,<<f_1042@147:2>@184:0>:int,<<<f_1042@147:2>@184:1>@200:0>:int),
      P[<f_1042@147:0>](<f_1042@147:0>:int), (<f_1042@147:0> > 0)
      |- P[<<<f_1042@147:2>@184:1>@200:0>](<f_1042@147:0>:int,<<f_1042@147:2>@184:0>:int,
                                           <<<f_1042@147:2>@184:1>@200:0>:int)
      
      P[<make_array_1030@186:1>](<make_array_1030@186:0>:int,<make_array_1030@186:1>:int),
      P[<<k_make_array_u_1321@189:2>@196:0>](<make_array_1030@186:1>:int,<make_array_1030@186:0>:int,<<make_array_1030@186:2>@198:0>:int),
      (0 <= <make_array_1030@186:1>)
      |- P[<<make_array_1030@186:2>@198:0>](<make_array_1030@186:0>:int,
                                            <make_array_1030@186:1>:int,
                                            <<make_array_1030@186:2>@198:0>:int)
      
      P[<k_make_array_u_1321@189:3>](<k_make_array_u_1321@189:0>:int,<k_make_array_u_1321@189:1>:int,true:bool),
      P[<<k_make_array_u_1332@192:2>@194:0>](<k_make_array_u_1321@189:0>:int,<k_make_array_u_1321@189:1>:int,<<k_make_array_u_1321@189:2>@196:0>:int)|- P[<<k_make_array_u_1321@189:2>@196:0>](
      <k_make_array_u_1321@189:0>:int,<k_make_array_u_1321@189:1>:int,
      <<k_make_array_u_1321@189:2>@196:0>:int)
      
      P[<k_make_array_u_1332@192:3>](<k_make_array_u_1332@192:0>:int,<k_make_array_u_1332@192:1>:int,<k_make_array_u_1332@192:3>:unit),
      (<<k_make_array_u_1332@192:2>@194:0> = 0)
      |- P[<<k_make_array_u_1332@192:2>@194:0>](<k_make_array_u_1332@192:0>:int,
                                                <k_make_array_u_1332@192:1>:int,
                                                <<k_make_array_u_1332@192:2>@194:0>:int)
      
      P[<k_make_array_u_1321@189:3>](<k_make_array_u_1332@192:0>:int,<k_make_array_u_1332@192:1>:int,true:bool)|- P[<k_make_array_u_1332@192:3>](
      <k_make_array_u_1332@192:0>:int,<k_make_array_u_1332@192:1>:int,
      <k_make_array_u_1332@192:3>:unit)
      
      P[<make_array_1030@186:1>](<k_make_array_u_1321@189:1>:int,<k_make_array_u_1321@189:0>:int),
      ((0 <= <k_make_array_u_1321@189:0>) &&
       (<k_make_array_u_1321@189:3> = (<k_make_array_u_1321@189:0> < <k_make_array_u_1321@189:1>)))
      |- P[<k_make_array_u_1321@189:3>](<k_make_array_u_1321@189:0>:int,
                                        <k_make_array_u_1321@189:1>:int,
                                        <k_make_array_u_1321@189:3>:bool)
      
      P[<main_1057@144:0>](<make_array_1030@186:0>:int),
      P[<<f_1042@147:2>@184:0>](<make_array_1030@186:0>:int,<make_array_1030@186:1>:int), (
      <make_array_1030@186:0> > 0)
      |- P[<make_array_1030@186:1>](<make_array_1030@186:0>:int,<make_array_1030@186:1>:int)
      
      P[<f_1042@147:0>](<f_1042@147:0>:int),
      P[<<bcopy_1046@149:3>@182:0>](<f_1042@147:0>:int,<f_1042@147:0>:int,<<f_1042@147:2>@184:0>:int)|- P[<<f_1042@147:2>@184:0>](
      <f_1042@147:0>:int,<<f_1042@147:2>@184:0>:int)
      
      P[<bcopy_1046@149:4>](<bcopy_1046@149:0>:int,<bcopy_1046@149:1>:int,<<bcopy_1046@149:2>@152:0>:int),
      P[<<f_bcopy_1886@174:3>@180:0>](<<bcopy_1046@149:2>@152:0>:int,<bcopy_1046@149:0>:int,<bcopy_1046@149:1>:int,<<bcopy_1046@149:3>@182:0>:int),
      (<<bcopy_1046@149:2>@152:0> < <bcopy_1046@149:1>)
      |- P[<<bcopy_1046@149:3>@182:0>](<bcopy_1046@149:0>:int,<bcopy_1046@149:1>:int,
                                       <<bcopy_1046@149:3>@182:0>:int)
      
      P[<f_bcopy_1886@174:6>](<f_bcopy_1886@174:0>:int,<f_bcopy_1886@174:1>:int,<f_bcopy_1886@174:2>:int,<update_1033@176:3>:int),
      P[<<update_1033@176:2>@178:0>](<f_bcopy_1886@174:0>:int,<f_bcopy_1886@174:2>:int,<<f_bcopy_1886@174:3>@180:0>:int)|- P[<<f_bcopy_1886@174:3>@180:0>](
      <f_bcopy_1886@174:0>:int,<f_bcopy_1886@174:1>:int,<f_bcopy_1886@174:2>:int,
      <<f_bcopy_1886@174:3>@180:0>:int)
      
      P[<update_1033@176:3>](<update_1033@176:0>:int,<update_1033@176:1>:int,<update_1033@176:3>:int),
      (<<update_1033@176:2>@178:0> = <update_1033@176:0>)
      |- P[<<update_1033@176:2>@178:0>](<update_1033@176:0>:int,<update_1033@176:1>:int,
                                        <<update_1033@176:2>@178:0>:int)
      
      P[<f_bcopy_1886@174:6>](<update_1033@176:0>:int,<f_bcopy_1886@174:1>:int,<update_1033@176:1>:int,<update_1033@176:3>:int)|- P[<update_1033@176:3>](
      <update_1033@176:0>:int,<update_1033@176:1>:int,<update_1033@176:3>:int)
      
      P[<bcopy_1046@149:4>](<f_bcopy_1886@174:1>:int,<f_bcopy_1886@174:2>:int,<f_bcopy_1886@174:0>:int),
      P[<<<bcopy_1046@149:2>@152:1>@172:0>](<f_bcopy_1886@174:1>:int,<f_bcopy_1886@174:2>:int,<f_bcopy_1886@174:0>:int,<f_bcopy_1886@174:6>:int),
      (<f_bcopy_1886@174:0> < <f_bcopy_1886@174:2>)
      |- P[<f_bcopy_1886@174:6>](<f_bcopy_1886@174:0>:int,<f_bcopy_1886@174:1>:int,
                                 <f_bcopy_1886@174:2>:int,<f_bcopy_1886@174:6>:int)
      
      P[<f_1042@147:0>](<bcopy_1046@149:0>:int),
      P[<<<f_1042@147:1>@154:1>@170:0>](<bcopy_1046@149:0>:int,<<bcopy_1046@149:2>@152:0>:int,<<<bcopy_1046@149:2>@152:1>@172:0>:int),
      (<bcopy_1046@149:0> = <bcopy_1046@149:1>)
      |- P[<<<bcopy_1046@149:2>@152:1>@172:0>](<bcopy_1046@149:0>:int,
                                               <bcopy_1046@149:1>:int,
                                               <<bcopy_1046@149:2>@152:0>:int,
                                               <<<bcopy_1046@149:2>@152:1>@172:0>:int)
      
      P[<main_1057@144:0>](<f_1042@147:0>:int),
      P[<<make_array_1030@156:2>@168:0>](<f_1042@147:0>:int,<<f_1042@147:1>@154:0>:int,<<<f_1042@147:1>@154:1>@170:0>:int),
      P[<f_1042@147:0>](<f_1042@147:0>:int), (<f_1042@147:0> > 0)
      |- P[<<<f_1042@147:1>@154:1>@170:0>](<f_1042@147:0>:int,<<f_1042@147:1>@154:0>:int,
                                           <<<f_1042@147:1>@154:1>@170:0>:int)
      
      P[<make_array_1030@156:1>](<make_array_1030@156:0>:int,<make_array_1030@156:1>:int),
      P[<<k_make_array_u_1321@159:2>@166:0>](<make_array_1030@156:1>:int,<make_array_1030@156:0>:int,<<make_array_1030@156:2>@168:0>:int),
      (0 <= <make_array_1030@156:1>)
      |- P[<<make_array_1030@156:2>@168:0>](<make_array_1030@156:0>:int,
                                            <make_array_1030@156:1>:int,
                                            <<make_array_1030@156:2>@168:0>:int)
      
      P[<k_make_array_u_1321@159:3>](<k_make_array_u_1321@159:0>:int,<k_make_array_u_1321@159:1>:int,true:bool),
      P[<<k_make_array_u_1332@162:2>@164:0>](<k_make_array_u_1321@159:0>:int,<k_make_array_u_1321@159:1>:int,<<k_make_array_u_1321@159:2>@166:0>:int)|- P[<<k_make_array_u_1321@159:2>@166:0>](
      <k_make_array_u_1321@159:0>:int,<k_make_array_u_1321@159:1>:int,
      <<k_make_array_u_1321@159:2>@166:0>:int)
      
      P[<k_make_array_u_1332@162:3>](<k_make_array_u_1332@162:0>:int,<k_make_array_u_1332@162:1>:int,<k_make_array_u_1332@162:3>:unit),
      (<<k_make_array_u_1332@162:2>@164:0> = 0)
      |- P[<<k_make_array_u_1332@162:2>@164:0>](<k_make_array_u_1332@162:0>:int,
                                                <k_make_array_u_1332@162:1>:int,
                                                <<k_make_array_u_1332@162:2>@164:0>:int)
      
      P[<k_make_array_u_1321@159:3>](<k_make_array_u_1332@162:0>:int,<k_make_array_u_1332@162:1>:int,true:bool)|- P[<k_make_array_u_1332@162:3>](
      <k_make_array_u_1332@162:0>:int,<k_make_array_u_1332@162:1>:int,
      <k_make_array_u_1332@162:3>:unit)
      
      P[<make_array_1030@156:1>](<k_make_array_u_1321@159:1>:int,<k_make_array_u_1321@159:0>:int),
      ((0 <= <k_make_array_u_1321@159:0>) &&
       (<k_make_array_u_1321@159:3> = (<k_make_array_u_1321@159:0> < <k_make_array_u_1321@159:1>)))
      |- P[<k_make_array_u_1321@159:3>](<k_make_array_u_1321@159:0>:int,
                                        <k_make_array_u_1321@159:1>:int,
                                        <k_make_array_u_1321@159:3>:bool)
      
      P[<main_1057@144:0>](<make_array_1030@156:0>:int),
      P[<<f_1042@147:1>@154:0>](<make_array_1030@156:0>:int,<make_array_1030@156:1>:int), (
      <make_array_1030@156:0> > 0)
      |- P[<make_array_1030@156:1>](<make_array_1030@156:0>:int,<make_array_1030@156:1>:int)
      
      P[<f_1042@147:0>](<f_1042@147:0>:int),
      P[<<bcopy_1046@149:2>@152:0>](<f_1042@147:0>:int,<f_1042@147:0>:int,<<f_1042@147:1>@154:0>:int)|- P[<<f_1042@147:1>@154:0>](
      <f_1042@147:0>:int,<<f_1042@147:1>@154:0>:int)
      
      P[<bcopy_1046@149:4>](<bcopy_1046@149:0>:int,<bcopy_1046@149:1>:int,<<bcopy_1046@149:2>@152:0>:int),
      (<<bcopy_1046@149:2>@152:0> < <bcopy_1046@149:1>)
      |- P[<<bcopy_1046@149:2>@152:0>](<bcopy_1046@149:0>:int,<bcopy_1046@149:1>:int,
                                       <<bcopy_1046@149:2>@152:0>:int)
      
      P[<f_1042@147:0>](<bcopy_1046@149:0>:int),
      ((<bcopy_1046@149:4> = 0) && (<bcopy_1046@149:0> = <bcopy_1046@149:1>))
      |- P[<bcopy_1046@149:4>](<bcopy_1046@149:0>:int,<bcopy_1046@149:1>:int,
                               <bcopy_1046@149:4>:int)
      
      P[<main_1057@144:0>](<f_1042@147:0>:int), (<f_1042@147:0> > 0) |- P[<f_1042@147:0>](<f_1042@147:0>:int)
      
      P[<f_1891@142:0>](<main_1057@144:0>:int)|- P[<main_1057@144:0>](<main_1057@144:0>:int)
      
      |- P[<f_1891@142:0>](<f_1891@142:0>:int)
    call trees:
      <main_1884@139>
        <f_1891@142>
          <main_1057@144>
            <f_1042@147>
              <bcopy_1046@149>
              </<bcopy_1046@149:2>@152>
            </<f_1042@147:1>@154>
            <make_array_1030@156>
              <k_make_array_u_1321@159>
                <k_make_array_u_1332@162>
                </<k_make_array_u_1332@162:2>@164>
              </<k_make_array_u_1321@159:2>@166>
            </<make_array_1030@156:2>@168>
            <<<f_1042@147:1>@154:1>@170>
              <<<bcopy_1046@149:2>@152:1>@172>
                <f_bcopy_1886@174>
                  <update_1033@176>
                  </<update_1033@176:2>@178>
                </<f_bcopy_1886@174:3>@180>
              </<bcopy_1046@149:3>@182>
            </<f_1042@147:2>@184>
            <make_array_1030@186>
              <k_make_array_u_1321@189>
                <k_make_array_u_1332@192>
                </<k_make_array_u_1332@192:2>@194>
              </<k_make_array_u_1321@189:2>@196>
            </<make_array_1030@186:2>@198>
            <<<f_1042@147:2>@184:1>@200>
              <<<bcopy_1046@149:3>@182:1>@202>
                <<<f_bcopy_1886@174:3>@180:1>@204>
                  <<<update_1033@176:2>@178:1>@206>
                    <f_update_1885@208>
                    </<f_update_1885@208:4>@210>
                  </<update_1033@176:4>@212>
                  <f_bcopy_1887@214>
                    <bcopy_1046@216>
                    </<bcopy_1046@216:5>@219>
                  </<f_bcopy_1887@214:4>@221>
                </<f_bcopy_1886@174:4>@223>
              </<bcopy_1046@149:5>@225>
              <f_f_1890@227>
                <print_array_1052@229>
                </<print_array_1052@229:1>@232>
              </<f_f_1890@227:1>@234>
            </<f_1042@147:2>@236>
            <make_array_1030@238>
              <k_make_array_u_1321@241>
                <fail_1893@244>
    inlined horn clauses:
      P[<fail_1893@244:0>](<fail_1893@244:0>:bool)|- bot
      
      P[<<print_array_1052@229:1>@232:0>](<k_make_array_u_1321@241:1>:int,<k_make_array_u_1321@241:0>:int),
      ((0 > <k_make_array_u_1321@241:0>) && ((<k_make_array_u_1321@241:1> > 0) && <fail_1893@244:0>))
      |- P[<fail_1893@244:0>](<fail_1893@244:0>:bool)
      
      P[<print_array_1052@229:4>](<print_array_1052@229:0>:int,<print_array_1052@229:2>:int,<<print_array_1052@229:1>@232:0>:int),
      (<<print_array_1052@229:1>@232:0> < <print_array_1052@229:2>)
      |- P[<<print_array_1052@229:1>@232:0>](<print_array_1052@229:0>:int,
                                             <<print_array_1052@229:1>@232:0>:int)
      
      
      ((<print_array_1052@229:4> = 0) &&
       ((<print_array_1052@229:0> > 0) && (<print_array_1052@229:0> = <print_array_1052@229:2>)))
      |- P[<print_array_1052@229:4>](<print_array_1052@229:0>:int,<print_array_1052@229:2>:int,
                                     <print_array_1052@229:4>:int)
      
      P[<bcopy_1046@149:4>](<bcopy_1046@216:0>:int,<bcopy_1046@216:1>:int,(
                            -1 + <bcopy_1046@216:4>):int),
      P[<<<bcopy_1046@149:2>@152:1>@172:0>](<bcopy_1046@216:0>:int,<bcopy_1046@216:1>:int,(
                                            -1 + <bcopy_1046@216:4>):int,<f_bcopy_1887@214:3>:int),
      (<bcopy_1046@216:4> < (1 + <bcopy_1046@216:1>))
      |- P[<bcopy_1046@216:4>](<bcopy_1046@216:0>:int,<bcopy_1046@216:1>:int,
                               <bcopy_1046@216:4>:int)
      
      P[<<bcopy_1046@149:3>@182:0>](<bcopy_1046@149:0>:int,<bcopy_1046@149:0>:int,<<bcopy_1046@149:3>@182:0>:int),
      ((<<<bcopy_1046@149:3>@182:1>@202:0> = 0) &&
       ((0 <= <<bcopy_1046@149:3>@182:0>) &&
        ((<<bcopy_1046@149:3>@182:0> < <bcopy_1046@149:0>) &&
         ((<bcopy_1046@149:0> > 0) && (<bcopy_1046@149:0> = <bcopy_1046@149:1>)))))
      |- P[<<<bcopy_1046@149:3>@182:1>@202:0>](<bcopy_1046@149:0>:int,
                                               <bcopy_1046@149:1>:int,
                                               <<bcopy_1046@149:3>@182:0>:int,
                                               <<<bcopy_1046@149:3>@182:1>@202:0>:int)
      
      P[<<<bcopy_1046@149:2>@152:1>@172:0>](<bcopy_1046@149:0>:int,<bcopy_1046@149:1>:int,<<bcopy_1046@149:3>@182:0>:int,var504:int),
      P[<bcopy_1046@149:4>](<bcopy_1046@149:0>:int,<bcopy_1046@149:1>:int,<<bcopy_1046@149:3>@182:0>:int),
      (<<bcopy_1046@149:3>@182:0> < <bcopy_1046@149:1>)
      |- P[<<bcopy_1046@149:3>@182:0>](<bcopy_1046@149:0>:int,<bcopy_1046@149:1>:int,
                                       <<bcopy_1046@149:3>@182:0>:int)
      
      P[<<bcopy_1046@149:2>@152:0>](<bcopy_1046@149:0>:int,<bcopy_1046@149:0>:int,<<bcopy_1046@149:2>@152:0>:int),
      ((<<<bcopy_1046@149:2>@152:1>@172:0> = 0) &&
       ((0 <= <<bcopy_1046@149:2>@152:0>) &&
        ((<<bcopy_1046@149:2>@152:0> < <bcopy_1046@149:0>) &&
         ((<bcopy_1046@149:0> > 0) && (<bcopy_1046@149:0> = <bcopy_1046@149:1>)))))
      |- P[<<<bcopy_1046@149:2>@152:1>@172:0>](<bcopy_1046@149:0>:int,
                                               <bcopy_1046@149:1>:int,
                                               <<bcopy_1046@149:2>@152:0>:int,
                                               <<<bcopy_1046@149:2>@152:1>@172:0>:int)
      
      P[<bcopy_1046@149:4>](<bcopy_1046@149:0>:int,<bcopy_1046@149:1>:int,<<bcopy_1046@149:2>@152:0>:int),
      (<<bcopy_1046@149:2>@152:0> < <bcopy_1046@149:1>)
      |- P[<<bcopy_1046@149:2>@152:0>](<bcopy_1046@149:0>:int,<bcopy_1046@149:1>:int,
                                       <<bcopy_1046@149:2>@152:0>:int)
      
       ((<bcopy_1046@149:4> = 0) && ((<bcopy_1046@149:0> > 0) && (<bcopy_1046@149:0> = <bcopy_1046@149:1>)))
      |- P[<bcopy_1046@149:4>](<bcopy_1046@149:0>:int,<bcopy_1046@149:1>:int,
                               <bcopy_1046@149:4>:int)
    begin ParamSubstInfer.infer(33231)[3]
      
    end ParamSubstInfer.infer(33231)[3] (1.556764 sec.)
    inferred extra parameters:
      
    begin RefTypeInfer.elim_coeffs(33233)[3]
      
    end RefTypeInfer.elim_coeffs(33233)[3] (0.005000 sec.)
    begin YhornInterface.solve(34229)[3]
      begin HcSolver.solve_ub(34230)[4]
        encoded:
          P[<fail_1893@244:0>](<fail_1893@244:0>:int)|- bot
          
          P[<<print_array_1052@229:1>@232:0>](<k_make_array_u_1321@241:1>:int,<k_make_array_u_1321@241:0>:int),
          ((0 > <k_make_array_u_1321@241:0>) && ((<k_make_array_u_1321@241:1> > 0) && (<fail_1893@244:0> = 1)))
          |- P[<fail_1893@244:0>](<fail_1893@244:0>:int)
          
          P[<print_array_1052@229:4>](<print_array_1052@229:0>:int,<print_array_1052@229:2>:int,<<print_array_1052@229:1>@232:0>:int),
          (<<print_array_1052@229:1>@232:0> < <print_array_1052@229:2>)
          |- P[<<print_array_1052@229:1>@232:0>](<print_array_1052@229:0>:int,
                                                 <<print_array_1052@229:1>@232:0>:int)
          
          
          ((<print_array_1052@229:4> = 0) &&
           ((<print_array_1052@229:0> > 0) && (<print_array_1052@229:0> = <print_array_1052@229:2>)))
          |- P[<print_array_1052@229:4>](<print_array_1052@229:0>:int,
                                         <print_array_1052@229:2>:int,
                                         <print_array_1052@229:4>:int)
          
          P[<bcopy_1046@149:4>](<bcopy_1046@216:0>:int,<bcopy_1046@216:1>:int,(
                                -1 + <bcopy_1046@216:4>):int),
          P[<<<bcopy_1046@149:2>@152:1>@172:0>](<bcopy_1046@216:0>:int,<bcopy_1046@216:1>:int,(
                                                -1 + <bcopy_1046@216:4>):int,<f_bcopy_1887@214:3>:int),
          (<bcopy_1046@216:4> < (1 + <bcopy_1046@216:1>))
          |- P[<bcopy_1046@216:4>](<bcopy_1046@216:0>:int,<bcopy_1046@216:1>:int,
                                   <bcopy_1046@216:4>:int)
          
          P[<<bcopy_1046@149:3>@182:0>](<bcopy_1046@149:0>:int,<bcopy_1046@149:0>:int,<<bcopy_1046@149:3>@182:0>:int),
          ((<<<bcopy_1046@149:3>@182:1>@202:0> = 0) &&
           ((0 <= <<bcopy_1046@149:3>@182:0>) &&
            ((<<bcopy_1046@149:3>@182:0> < <bcopy_1046@149:0>) &&
             ((<bcopy_1046@149:0> > 0) && (<bcopy_1046@149:0> = <bcopy_1046@149:1>)))))
          |- P[<<<bcopy_1046@149:3>@182:1>@202:0>](<bcopy_1046@149:0>:int,
                                                   <bcopy_1046@149:1>:int,
                                                   <<bcopy_1046@149:3>@182:0>:int,
                                                   <<<bcopy_1046@149:3>@182:1>@202:0>:int)
          
          P[<<<bcopy_1046@149:2>@152:1>@172:0>](<bcopy_1046@149:0>:int,<bcopy_1046@149:1>:int,<<bcopy_1046@149:3>@182:0>:int,var504:int),
          P[<bcopy_1046@149:4>](<bcopy_1046@149:0>:int,<bcopy_1046@149:1>:int,<<bcopy_1046@149:3>@182:0>:int),
          (<<bcopy_1046@149:3>@182:0> < <bcopy_1046@149:1>)
          |- P[<<bcopy_1046@149:3>@182:0>](<bcopy_1046@149:0>:int,<bcopy_1046@149:1>:int,
                                           <<bcopy_1046@149:3>@182:0>:int)
          
          P[<<bcopy_1046@149:2>@152:0>](<bcopy_1046@149:0>:int,<bcopy_1046@149:0>:int,<<bcopy_1046@149:2>@152:0>:int),
          ((<<<bcopy_1046@149:2>@152:1>@172:0> = 0) &&
           ((0 <= <<bcopy_1046@149:2>@152:0>) &&
            ((<<bcopy_1046@149:2>@152:0> < <bcopy_1046@149:0>) &&
             ((<bcopy_1046@149:0> > 0) && (<bcopy_1046@149:0> = <bcopy_1046@149:1>)))))
          |- P[<<<bcopy_1046@149:2>@152:1>@172:0>](<bcopy_1046@149:0>:int,
                                                   <bcopy_1046@149:1>:int,
                                                   <<bcopy_1046@149:2>@152:0>:int,
                                                   <<<bcopy_1046@149:2>@152:1>@172:0>:int)
          
          P[<bcopy_1046@149:4>](<bcopy_1046@149:0>:int,<bcopy_1046@149:1>:int,<<bcopy_1046@149:2>@152:0>:int),
          (<<bcopy_1046@149:2>@152:0> < <bcopy_1046@149:1>)
          |- P[<<bcopy_1046@149:2>@152:0>](<bcopy_1046@149:0>:int,<bcopy_1046@149:1>:int,
                                           <<bcopy_1046@149:2>@152:0>:int)
          
           ((<bcopy_1046@149:4> = 0) && ((<bcopy_1046@149:0> > 0) && (<bcopy_1046@149:0> = <bcopy_1046@149:1>)))
          |- P[<bcopy_1046@149:4>](<bcopy_1046@149:0>:int,<bcopy_1046@149:1>:int,
                                   <bcopy_1046@149:4>:int)
        input to Yhorn:
          P[<fail_1893@244:0>](<fail_1893@244:0>:int)|- bot
          
          P[<<print_array_1052@229:1>@232:0>](<k_make_array_u_1321@241:1>:int,<k_make_array_u_1321@241:0>:int),
          ((<k_make_array_u_1321@241:1> > 0) && ((0 > <k_make_array_u_1321@241:0>) && (<fail_1893@244:0> = 1)))
          |- P[<fail_1893@244:0>](<fail_1893@244:0>:int)
          
          P[<print_array_1052@229:4>](<print_array_1052@229:0>:int,<print_array_1052@229:2>:int,<<print_array_1052@229:1>@232:0>:int),
          (<<print_array_1052@229:1>@232:0> < <print_array_1052@229:2>)
          |- P[<<print_array_1052@229:1>@232:0>](<print_array_1052@229:0>:int,
                                                 <<print_array_1052@229:1>@232:0>:int)
          
          
          ((<print_array_1052@229:0> = <print_array_1052@229:2>) &&
           ((<print_array_1052@229:0> > 0) && (<print_array_1052@229:4> = 0)))
          |- P[<print_array_1052@229:4>](<print_array_1052@229:0>:int,
                                         <print_array_1052@229:2>:int,
                                         <print_array_1052@229:4>:int)
          
          P[<bcopy_1046@149:4>](<bcopy_1046@216:0>:int,<bcopy_1046@216:1>:int,var505:int),
          P[<<<bcopy_1046@149:2>@152:1>@172:0>](<bcopy_1046@216:0>:int,<bcopy_1046@216:1>:int,var506:int,<f_bcopy_1887@214:3>:int),
          (((1 + var506) = <bcopy_1046@216:4>) &&
           (((1 + var505) = <bcopy_1046@216:4>) && (<bcopy_1046@216:4> < (1 + <bcopy_1046@216:1>))))
          |- P[<bcopy_1046@216:4>](<bcopy_1046@216:0>:int,<bcopy_1046@216:1>:int,
                                   <bcopy_1046@216:4>:int)
          
          P[<<bcopy_1046@149:3>@182:0>](<bcopy_1046@149:0>:int,<bcopy_1046@149:0>:int,<<bcopy_1046@149:3>@182:0>:int),
          ((<bcopy_1046@149:0> = <bcopy_1046@149:1>) &&
           ((<bcopy_1046@149:0> > 0) &&
            ((<<bcopy_1046@149:3>@182:0> < <bcopy_1046@149:0>) &&
             ((0 <= <<bcopy_1046@149:3>@182:0>) && (<<<bcopy_1046@149:3>@182:1>@202:0> = 0)))))
          |- P[<<<bcopy_1046@149:3>@182:1>@202:0>](<bcopy_1046@149:0>:int,
                                                   <bcopy_1046@149:1>:int,
                                                   <<bcopy_1046@149:3>@182:0>:int,
                                                   <<<bcopy_1046@149:3>@182:1>@202:0>:int)
          
          P[<<<bcopy_1046@149:2>@152:1>@172:0>](<bcopy_1046@149:0>:int,<bcopy_1046@149:1>:int,<<bcopy_1046@149:3>@182:0>:int,var504:int),
          P[<bcopy_1046@149:4>](<bcopy_1046@149:0>:int,<bcopy_1046@149:1>:int,<<bcopy_1046@149:3>@182:0>:int),
          (<<bcopy_1046@149:3>@182:0> < <bcopy_1046@149:1>)
          |- P[<<bcopy_1046@149:3>@182:0>](<bcopy_1046@149:0>:int,<bcopy_1046@149:1>:int,
                                           <<bcopy_1046@149:3>@182:0>:int)
          
          P[<<bcopy_1046@149:2>@152:0>](<bcopy_1046@149:0>:int,<bcopy_1046@149:0>:int,<<bcopy_1046@149:2>@152:0>:int),
          ((<bcopy_1046@149:0> = <bcopy_1046@149:1>) &&
           ((<bcopy_1046@149:0> > 0) &&
            ((<<bcopy_1046@149:2>@152:0> < <bcopy_1046@149:0>) &&
             ((0 <= <<bcopy_1046@149:2>@152:0>) && (<<<bcopy_1046@149:2>@152:1>@172:0> = 0)))))
          |- P[<<<bcopy_1046@149:2>@152:1>@172:0>](<bcopy_1046@149:0>:int,
                                                   <bcopy_1046@149:1>:int,
                                                   <<bcopy_1046@149:2>@152:0>:int,
                                                   <<<bcopy_1046@149:2>@152:1>@172:0>:int)
          
          P[<bcopy_1046@149:4>](<bcopy_1046@149:0>:int,<bcopy_1046@149:1>:int,<<bcopy_1046@149:2>@152:0>:int),
          (<<bcopy_1046@149:2>@152:0> < <bcopy_1046@149:1>)
          |- P[<<bcopy_1046@149:2>@152:0>](<bcopy_1046@149:0>:int,<bcopy_1046@149:1>:int,
                                           <<bcopy_1046@149:2>@152:0>:int)
          
           ((<bcopy_1046@149:0> = <bcopy_1046@149:1>) && ((<bcopy_1046@149:0> > 0) && (<bcopy_1046@149:4> = 0)))
          |- P[<bcopy_1046@149:4>](<bcopy_1046@149:0>:int,<bcopy_1046@149:1>:int,
                                   <bcopy_1046@149:4>:int)Yhorn (Wed Sep 25 10:52:05 JST 2013)


(0=0) & (v_sep_fail_1893_sep_244_sep_0($353)) -> 1=0.
(($353-1=0) & (-$354>0) & ($355>0)) & (v_sep_print_array_1052_sep_229_sep_1_sep_232_sep_0($355,$354)) -> v_sep_fail_1893_sep_244_sep_0($353).
($356-$357<0) & (v_sep_print_array_1052_sep_229_sep_4($358,$357,$356)) -> v_sep_print_array_1052_sep_229_sep_1_sep_232_sep_0($358,$356).
($359=0) & ($358>0) & (-$357+$358=0) -> v_sep_print_array_1052_sep_229_sep_4($358,$357,$359).
(($360-$361-1<0) & (-$360+$362+1=0) & (-$360+$363+1=0)) & (v_sep_bcopy_1046_sep_149_sep_2_sep_152_sep_1_sep_172_sep_0($364,$361,$363,$365)) & (v_sep_bcopy_1046_sep_149_sep_4($364,$361,$362)) -> v_sep_bcopy_1046_sep_216_sep_4($364,$361,$360).
(($366=0) & (-$367<=0) & ($367-$368<0) & ($368>0) & ($368-$369=0)) & (v_sep_bcopy_1046_sep_149_sep_3_sep_182_sep_0($368,$368,$367)) -> v_sep_bcopy_1046_sep_149_sep_3_sep_182_sep_1_sep_202_sep_0($368,$369,$367,$366).
($367-$369<0) & (v_sep_bcopy_1046_sep_149_sep_4($368,$369,$367)) & (v_sep_bcopy_1046_sep_149_sep_2_sep_152_sep_1_sep_172_sep_0($368,$369,$367,$370)) -> v_sep_bcopy_1046_sep_149_sep_3_sep_182_sep_0($368,$369,$367).
(($371=0) & (-$372<=0) & (-$368+$372<0) & ($368>0) & ($368-$369=0)) & (v_sep_bcopy_1046_sep_149_sep_2_sep_152_sep_0($368,$368,$372)) -> v_sep_bcopy_1046_sep_149_sep_2_sep_152_sep_1_sep_172_sep_0($368,$369,$372,$371).
(-$369+$372<0) & (v_sep_bcopy_1046_sep_149_sep_4($368,$369,$372)) -> v_sep_bcopy_1046_sep_149_sep_2_sep_152_sep_0($368,$369,$372).
($373=0) & ($368>0) & ($368-$369=0) -> v_sep_bcopy_1046_sep_149_sep_4($368,$369,$373).


v_sep_bcopy_1046_sep_149_sep_2_sep_152_sep_0: X
v_sep_bcopy_1046_sep_149_sep_2_sep_152_sep_1_sep_172_sep_0: X
v_sep_bcopy_1046_sep_149_sep_3_sep_182_sep_0: X
v_sep_bcopy_1046_sep_149_sep_3_sep_182_sep_1_sep_202_sep_0: X
v_sep_bcopy_1046_sep_149_sep_4: X
v_sep_bcopy_1046_sep_216_sep_4: X
v_sep_fail_1893_sep_244_sep_0: X
v_sep_print_array_1052_sep_229_sep_1_sep_232_sep_0: X
v_sep_print_array_1052_sep_229_sep_4: X
.............
v_sep_bcopy_1046_sep_149_sep_2_sep_152_sep_0: X
v_sep_bcopy_1046_sep_149_sep_2_sep_152_sep_1_sep_172_sep_0: X
v_sep_bcopy_1046_sep_149_sep_3_sep_182_sep_0: X
v_sep_bcopy_1046_sep_149_sep_3_sep_182_sep_1_sep_202_sep_0: X
v_sep_bcopy_1046_sep_149_sep_4: X
v_sep_bcopy_1046_sep_216_sep_4: X
v_sep_fail_1893_sep_244_sep_0: X
v_sep_print_array_1052_sep_229_sep_1_sep_232_sep_0: X
v_sep_print_array_1052_sep_229_sep_4: X
........
v_sep_bcopy_1046_sep_149_sep_2_sep_152_sep_0: X
v_sep_bcopy_1046_sep_149_sep_2_sep_152_sep_1_sep_172_sep_0: X
v_sep_bcopy_1046_sep_149_sep_3_sep_182_sep_0: X
v_sep_bcopy_1046_sep_149_sep_3_sep_182_sep_1_sep_202_sep_0: X
v_sep_bcopy_1046_sep_149_sep_4: X
v_sep_bcopy_1046_sep_216_sep_4: X
v_sep_fail_1893_sep_244_sep_0: X
v_sep_print_array_1052_sep_229_sep_1_sep_232_sep_0: X
v_sep_print_array_1052_sep_229_sep_4: X
............
v_sep_bcopy_1046_sep_149_sep_2_sep_152_sep_0: X
v_sep_bcopy_1046_sep_149_sep_2_sep_152_sep_1_sep_172_sep_0: X
v_sep_bcopy_1046_sep_149_sep_3_sep_182_sep_0: X
v_sep_bcopy_1046_sep_149_sep_3_sep_182_sep_1_sep_202_sep_0: X
v_sep_bcopy_1046_sep_149_sep_4: X
v_sep_bcopy_1046_sep_216_sep_4: X
v_sep_fail_1893_sep_244_sep_0: X
v_sep_print_array_1052_sep_229_sep_1_sep_232_sep_0: X
v_sep_print_array_1052_sep_229_sep_4: X
.............(0=0) & (v_sep_fail_1893_sep_244_sep_0($353)) -> 1=0.
(($353-1=0) & (-$354>0) & ($355>0)) & (v_sep_print_array_1052_sep_229_sep_1_sep_232_sep_0($355,$354)) -> v_sep_fail_1893_sep_244_sep_0($353).
($356-$357<0) & (v_sep_print_array_1052_sep_229_sep_4($358,$357,$356)) -> v_sep_print_array_1052_sep_229_sep_1_sep_232_sep_0($358,$356).
($359=0) & ($358>0) & (-$357+$358=0) -> v_sep_print_array_1052_sep_229_sep_4($358,$357,$359).
(($360-$361-1<0) & (-$360+$362+1=0) & (-$360+$363+1=0)) & (v_sep_bcopy_1046_sep_149_sep_2_sep_152_sep_1_sep_172_sep_0($364,$361,$363,$365)) & (v_sep_bcopy_1046_sep_149_sep_4($364,$361,$362)) -> v_sep_bcopy_1046_sep_216_sep_4($364,$361,$360).
(($366=0) & (-$367<=0) & ($367-$368<0) & ($368>0) & ($368-$369=0)) & (v_sep_bcopy_1046_sep_149_sep_3_sep_182_sep_0($368,$368,$367)) -> v_sep_bcopy_1046_sep_149_sep_3_sep_182_sep_1_sep_202_sep_0($368,$369,$367,$366).
($367-$369<0) & (v_sep_bcopy_1046_sep_149_sep_4($368,$369,$367)) & (v_sep_bcopy_1046_sep_149_sep_2_sep_152_sep_1_sep_172_sep_0($368,$369,$367,$370)) -> v_sep_bcopy_1046_sep_149_sep_3_sep_182_sep_0($368,$369,$367).
(($371=0) & (-$372<=0) & (-$368+$372<0) & ($368>0) & ($368-$369=0)) & (v_sep_bcopy_1046_sep_149_sep_2_sep_152_sep_0($368,$368,$372)) -> v_sep_bcopy_1046_sep_149_sep_2_sep_152_sep_1_sep_172_sep_0($368,$369,$372,$371).
(-$369+$372<0) & (v_sep_bcopy_1046_sep_149_sep_4($368,$369,$372)) -> v_sep_bcopy_1046_sep_149_sep_2_sep_152_sep_0($368,$369,$372).
($373=0) & ($368>0) & ($368-$369=0) -> v_sep_bcopy_1046_sep_149_sep_4($368,$369,$373).

        solution:
          P[<<bcopy_1046@149:2>@152:0>]($428:int,$430:int,$432:int) = true
          P[<<<bcopy_1046@149:2>@152:1>@172:0>]($396:int,$398:int,$400:int,$402:int) = true
          P[<<bcopy_1046@149:3>@182:0>]($421:int,$423:int,$425:int) = true
          P[<<<bcopy_1046@149:3>@182:1>@202:0>]($412:int,$414:int,$416:int,$418:int) = true
          P[<bcopy_1046@149:4>]($405:int,$407:int,$409:int) = true
          P[<bcopy_1046@216:4>]($389:int,$391:int,$393:int) = true
          P[<fail_1893@244:0>]($374:bool) = false
          P[<<print_array_1052@229:1>@232:0>]($377:int,$379:int) = (0 <= $379)
          P[<print_array_1052@229:4>]($382:int,$384:int,$386:int) = (0 <= $386)
        
      end HcSolver.solve_ub(34230)[4] (0.038994 sec.)
      begin HcSolver.check_validity(35071)[4]
        input:
          P[<fail_1893@244:0>](<fail_1893@244:0>:bool)|- bot
          
          P[<<print_array_1052@229:1>@232:0>](<k_make_array_u_1321@241:1>:int,<k_make_array_u_1321@241:0>:int),
          ((0 > <k_make_array_u_1321@241:0>) && ((<k_make_array_u_1321@241:1> > 0) && <fail_1893@244:0>))
          |- P[<fail_1893@244:0>](<fail_1893@244:0>:bool)
          
          P[<print_array_1052@229:4>](<print_array_1052@229:0>:int,<print_array_1052@229:2>:int,<<print_array_1052@229:1>@232:0>:int),
          (<<print_array_1052@229:1>@232:0> < <print_array_1052@229:2>)
          |- P[<<print_array_1052@229:1>@232:0>](<print_array_1052@229:0>:int,
                                                 <<print_array_1052@229:1>@232:0>:int)
          
          
          ((<print_array_1052@229:4> = 0) &&
           ((<print_array_1052@229:0> > 0) && (<print_array_1052@229:0> = <print_array_1052@229:2>)))
          |- P[<print_array_1052@229:4>](<print_array_1052@229:0>:int,
                                         <print_array_1052@229:2>:int,
                                         <print_array_1052@229:4>:int)
          
          P[<bcopy_1046@149:4>](<bcopy_1046@216:0>:int,<bcopy_1046@216:1>:int,(
                                -1 + <bcopy_1046@216:4>):int),
          P[<<<bcopy_1046@149:2>@152:1>@172:0>](<bcopy_1046@216:0>:int,<bcopy_1046@216:1>:int,(
                                                -1 + <bcopy_1046@216:4>):int,<f_bcopy_1887@214:3>:int),
          (<bcopy_1046@216:4> < (1 + <bcopy_1046@216:1>))
          |- P[<bcopy_1046@216:4>](<bcopy_1046@216:0>:int,<bcopy_1046@216:1>:int,
                                   <bcopy_1046@216:4>:int)
          
          P[<<bcopy_1046@149:3>@182:0>](<bcopy_1046@149:0>:int,<bcopy_1046@149:0>:int,<<bcopy_1046@149:3>@182:0>:int),
          ((<<<bcopy_1046@149:3>@182:1>@202:0> = 0) &&
           ((0 <= <<bcopy_1046@149:3>@182:0>) &&
            ((<<bcopy_1046@149:3>@182:0> < <bcopy_1046@149:0>) &&
             ((<bcopy_1046@149:0> > 0) && (<bcopy_1046@149:0> = <bcopy_1046@149:1>)))))
          |- P[<<<bcopy_1046@149:3>@182:1>@202:0>](<bcopy_1046@149:0>:int,
                                                   <bcopy_1046@149:1>:int,
                                                   <<bcopy_1046@149:3>@182:0>:int,
                                                   <<<bcopy_1046@149:3>@182:1>@202:0>:int)
          
          P[<<<bcopy_1046@149:2>@152:1>@172:0>](<bcopy_1046@149:0>:int,<bcopy_1046@149:1>:int,<<bcopy_1046@149:3>@182:0>:int,var504:int),
          P[<bcopy_1046@149:4>](<bcopy_1046@149:0>:int,<bcopy_1046@149:1>:int,<<bcopy_1046@149:3>@182:0>:int),
          (<<bcopy_1046@149:3>@182:0> < <bcopy_1046@149:1>)
          |- P[<<bcopy_1046@149:3>@182:0>](<bcopy_1046@149:0>:int,<bcopy_1046@149:1>:int,
                                           <<bcopy_1046@149:3>@182:0>:int)
          
          P[<<bcopy_1046@149:2>@152:0>](<bcopy_1046@149:0>:int,<bcopy_1046@149:0>:int,<<bcopy_1046@149:2>@152:0>:int),
          ((<<<bcopy_1046@149:2>@152:1>@172:0> = 0) &&
           ((0 <= <<bcopy_1046@149:2>@152:0>) &&
            ((<<bcopy_1046@149:2>@152:0> < <bcopy_1046@149:0>) &&
             ((<bcopy_1046@149:0> > 0) && (<bcopy_1046@149:0> = <bcopy_1046@149:1>)))))
          |- P[<<<bcopy_1046@149:2>@152:1>@172:0>](<bcopy_1046@149:0>:int,
                                                   <bcopy_1046@149:1>:int,
                                                   <<bcopy_1046@149:2>@152:0>:int,
                                                   <<<bcopy_1046@149:2>@152:1>@172:0>:int)
          
          P[<bcopy_1046@149:4>](<bcopy_1046@149:0>:int,<bcopy_1046@149:1>:int,<<bcopy_1046@149:2>@152:0>:int),
          (<<bcopy_1046@149:2>@152:0> < <bcopy_1046@149:1>)
          |- P[<<bcopy_1046@149:2>@152:0>](<bcopy_1046@149:0>:int,<bcopy_1046@149:1>:int,
                                           <<bcopy_1046@149:2>@152:0>:int)
          
           ((<bcopy_1046@149:4> = 0) && ((<bcopy_1046@149:0> > 0) && (<bcopy_1046@149:0> = <bcopy_1046@149:1>)))
          |- P[<bcopy_1046@149:4>](<bcopy_1046@149:0>:int,<bcopy_1046@149:1>:int,
                                   <bcopy_1046@149:4>:int)
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        
      end HcSolver.check_validity(35071)[4] (0.009998 sec.)
      solution:
        P[<<bcopy_1046@149:2>@152:0>]($428:int,$430:int,$432:int) = true
        P[<<<bcopy_1046@149:2>@152:1>@172:0>]($396:int,$398:int,$400:int,$402:int) = true
        P[<<bcopy_1046@149:3>@182:0>]($421:int,$423:int,$425:int) = true
        P[<<<bcopy_1046@149:3>@182:1>@202:0>]($412:int,$414:int,$416:int,$418:int) = true
        P[<bcopy_1046@149:4>]($405:int,$407:int,$409:int) = true
        P[<bcopy_1046@216:4>]($389:int,$391:int,$393:int) = true
        P[<fail_1893@244:0>]($374:bool) = false
        P[<<print_array_1052@229:1>@232:0>]($377:int,$379:int) = (0 <= $379)
        P[<print_array_1052@229:4>]($382:int,$384:int,$386:int) = (0 <= $386)
    end YhornInterface.solve(34229)[3] (0.048992 sec.)
    
  end RefTypeInfer.infer_etrs(25930)[2] (1.661748 sec.)
  refinement types:
    main_1884: X
    f_1891: v1:int -> X
    main_1057: v1:int -> (v2:unit -> X) -> X
    f_1042: v1:int ->
            (v2:int -> (v3:int -> X) -> X) ->
            (v6:int -> (v7:int -> X) -> X /\
             v10:int -> (v11:int -> X) -> X) -> (v14:unit -> X) -> X
    bcopy_1046: v1:int ->
                v2:int ->
                (v3:int -> (v4:int -> X) -> X) ->
                (v7:int -> (v8:int -> X) -> X) -> v11:int -> ((v12:int -> (v13:int -> X) -> X) -> X) -> X
    make_array_1030: v1:int -> v2:int -> (v3:int -> X) -> X
    k_make_array_u_1321: v1:int -> v2:int -> (v3:int -> X) -> v5:bool -> X
    k_make_array_u_1332: v1:int -> v2:int -> (v3:int -> X) -> v5:unit -> X
    f_bcopy_1886: v1:int ->
                  v2:int ->
                  v3:int ->
                  (v4:int -> (v5:int -> X) -> X) ->
                  ((v8:int -> (v9:int -> X) -> X) -> X) -> (v13:int -> (v14:int -> X) -> X) -> v17:int -> X
    update_1033: v1:int ->
                 v2:int -> (v3:int -> (v4:int -> X) -> X) -> v7:int -> ((v8:int -> (v9:int -> X) -> X) -> X) -> X
    make_array_1030: v1:int -> v2:int -> (v3:int -> X) -> X
    k_make_array_u_1321: v1:int -> v2:int -> (v3:int -> X) -> v5:bool -> X
    k_make_array_u_1332: v1:int -> v2:int -> (v3:int -> X) -> v5:unit -> X
    f_update_1885: v1:int ->
                   v2:int ->
                   v3:int -> (v4:int -> (v5:int -> X) -> X) -> ((v8:int -> (v9:int -> X) -> X) -> X) -> v13:int -> X
    f_bcopy_1887: v1:int ->
                  v2:int ->
                  v3:int ->
                  v4:int ->
                  ((v5:int -> (v6:int -> X) -> X) -> X) ->
                  (v10:int -> (v11:int -> X) -> X) -> (v14:int -> (v15:int -> X) -> X) -> X
    bcopy_1046: v1:int ->
                v2:int ->
                (v3:int -> (v4:int -> X) -> X) ->
                (v7:int -> (v8:int -> X) -> X) -> v11:int -> ((v12:int -> (v13:int -> X) -> X) -> X) -> X
    f_f_1890: v1:int -> (v2:int -> (v3:int -> X) -> X) -> (v6:unit -> X) -> (v8:int -> (v9:int -> X) -> X) -> X
    print_array_1052: v1:int ->
                      (v2:{v2:int | (0 <= v2)} -> (v3:int -> X) -> X) ->
                      v6:int -> (v7:int -> (v8:int -> X) -> X) -> v11:{v11:int | (0 <= v11)} -> (v12:unit -> X) -> X
    make_array_1030: v1:int -> v2:int -> (v3:int -> X) -> X
    k_make_array_u_1321: v1:int -> v2:int -> (v3:int -> X) -> v5:bool -> X
    fail_1893: v1:{v1:bool | false} -> (v2:unit -> X) -> X
    a_1038: var594:int ->
            var593:int ->
            var592:int -> var591:int -> (var590:int -> (var589:int -> X) -> X) -> var586:int -> (var585:int -> X) -> X
    f_1892: var597:int -> var596:unit -> X
    f_print_array_1888: var612:int ->
                        var611:int ->
                        var610:int ->
                        (var609:int -> (var608:int -> X) -> X) ->
                        (var605:int -> (var604:int -> X) -> X) -> (var601:unit -> X) -> var599:int -> X
    f_print_array_1889: var628:int ->
                        var627:int ->
                        var626:int ->
                        var625:int ->
                        (var624:int -> (var623:int -> X) -> X) ->
                        (var620:int -> (var619:int -> X) -> X) -> (var616:unit -> X) -> var614:unit -> X
    print_int_1040: var632:int -> (var631:unit -> X) -> X
  abstraction types:
    main_1884: X
    f_1891: v1:int -> X
    main_1057: v1:int -> (v2:unit -> X) -> X
    f_1042: v1:int -> (v2:int -> (v3:int -> X) -> X) -> (var633:int -> (var634:int -> X) -> X) -> (v14:unit -> X) -> X
    bcopy_1046: var637:int ->
                var638:int ->
                (var639:int -> (var640:int -> X) -> X) ->
                (var643:int -> (var644:int -> X) -> X) ->
                var647:int -> ((var648:int -> (var649:int -> X) -> X) -> X) -> X
    make_array_1030: var659:int -> var660:int -> (var661:int -> X) -> X
    k_make_array_u_1321: var670:int -> var671:int -> (var672:int -> X) -> var674:bool -> X
    k_make_array_u_1332: var676:int -> var677:int -> (var678:int -> X) -> var680:unit -> X
    f_bcopy_1886: v1:int ->
                  v2:int ->
                  v3:int ->
                  (v4:int -> (v5:int -> X) -> X) ->
                  ((v8:int -> (v9:int -> X) -> X) -> X) -> (v13:int -> (v14:int -> X) -> X) -> v17:int -> X
    update_1033: v1:int ->
                 v2:int -> (v3:int -> (v4:int -> X) -> X) -> v7:int -> ((v8:int -> (v9:int -> X) -> X) -> X) -> X
    f_update_1885: v1:int ->
                   v2:int ->
                   v3:int -> (v4:int -> (v5:int -> X) -> X) -> ((v8:int -> (v9:int -> X) -> X) -> X) -> v13:int -> X
    f_bcopy_1887: v1:int ->
                  v2:int ->
                  v3:int ->
                  v4:int ->
                  ((v5:int -> (v6:int -> X) -> X) -> X) ->
                  (v10:int -> (v11:int -> X) -> X) -> (v14:int -> (v15:int -> X) -> X) -> X
    f_f_1890: v1:int -> (v2:int -> (v3:int -> X) -> X) -> (v6:unit -> X) -> (v8:int -> (v9:int -> X) -> X) -> X
    print_array_1052: v1:int ->
                      (v2:int[v2 -> (0 <= v2)] -> (v3:int -> X) -> X) ->
                      v6:int -> (v7:int -> (v8:int -> X) -> X) -> v11:int[v11 -> (
                                                                    0 <= v11)] -> (v12:unit -> X) -> X
    fail_1893: v1:bool -> (v2:unit -> X) -> X
    a_1038: var594:int ->
            var593:int ->
            var592:int -> var591:int -> (var590:int -> (var589:int -> X) -> X) -> var586:int -> (var585:int -> X) -> X
    f_1892: var597:int -> var596:unit -> X
    f_print_array_1888: var612:int ->
                        var611:int ->
                        var610:int ->
                        (var609:int -> (var608:int -> X) -> X) ->
                        (var605:int -> (var604:int -> X) -> X) -> (var601:unit -> X) -> var599:int -> X
    f_print_array_1889: var628:int ->
                        var627:int ->
                        var626:int ->
                        var625:int ->
                        (var624:int -> (var623:int -> X) -> X) ->
                        (var620:int -> (var619:int -> X) -> X) -> (var616:unit -> X) -> var614:unit -> X
    print_int_1040: var632:int -> (var631:unit -> X) -> X
  
end AbsTypeInfer.refine(25929)[1] (1.676746 sec.)
DONE!

Prefix of spurious counter-example::
0; 0; 0; 0; 1; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 1; 1

Program with abstraction types (CEGAR-cycle 4)::
Main: main_1884
  main_1884 -> (rand_int f_1891)
  a_1038 i_1034 n_1035 x_1037 x_1386 des_1036 j_1039 k_update_a_1401 when (i_1034 = j_1039) -> (k_update_a_1401 x_1037)
  a_1038 i_1034 n_1035 x_1037 x_1386 des_1036 j_1039 k_update_a_1401 when (
      not (i_1034 = j_1039)) -> (des_1036 i_1034 k_update_a_1401)
  bcopy_1046 m_1043 m_1047 src_1048 des_1049 i_1050 k_f_bcopy_1535 when (i_1050 >= m_1047) -> (k_f_bcopy_1535 des_1049)
  bcopy_1046 m_1043 m_1047 src_1048 des_1049 i_1050 k_f_bcopy_1535 when (
      not (i_1050 >= m_1047)) -> (src_1048 i_1050 (f_bcopy_1886 i_1050 m_1043 m_1047 des_1049 k_f_bcopy_1535 src_1048))
  f_1042 m_1043 src_1044 des_1045 k_f_1476 ->
      (bcopy_1046 m_1043 m_1043 src_1044 des_1045 0 (f_f_1890 m_1043 des_1045 k_f_1476))
  f_1891 x_1859 -> (main_1057 x_1859 (f_1892 x_1859))
  f_1892 x_1859 x_1856 -> end
  f_bcopy_1886 i_1050 m_1043 m_1047 des_1049 k_f_bcopy_1535 src_1048 x_1591 ->
      (update_1033 i_1050 m_1047 des_1049 x_1591 (f_bcopy_1887 i_1050 m_1043 m_1047 x_1591 k_f_bcopy_1535 src_1048))
  f_bcopy_1887 i_1050 m_1043 m_1047 x_1591 k_f_bcopy_1535 src_1048 x_1547 ->
      (bcopy_1046 m_1043 m_1047 src_1048 x_1547 (i_1050 + 1) k_f_bcopy_1535)
  f_f_1890 m_1043 des_1045 k_f_1476 x_1715 -> (print_array_1052 m_1043 des_1045 m_1043 x_1715 0 k_f_1476)
  f_print_array_1888 i_1055 m_1043 m_1053 array_1054 des_1045 k_f_print_array_1664 x_1687 ->
      (print_int_1040 x_1687 (f_print_array_1889 i_1055 m_1043 m_1053 x_1687 array_1054 des_1045 k_f_print_array_1664))
  f_print_array_1889 i_1055 m_1043 m_1053 x_1687 array_1054 des_1045 k_f_print_array_1664 x_1667 ->
      (print_array_1052 m_1043 des_1045 m_1053 array_1054 (i_1055 + 1) k_f_print_array_1664)
  f_update_1885 i_1034 n_1035 x_1037 des_1036 k_update_1380 x_1386 ->
      (k_update_1380 (a_1038 i_1034 n_1035 x_1037 x_1386 des_1036))
  fail_1893 b k -> {fail} => (k ())
  k_make_array_u_1321 i_1032 n_1031 k_make_array_1315 b_1333 when b_1333 ->
      (k_make_array_u_1332 i_1032 n_1031 k_make_array_1315 ())
  k_make_array_u_1321 i_1032 n_1031 k_make_array_1315 b_1333 when (not b_1333) ->
      (fail_1893 true (k_make_array_u_1332 i_1032 n_1031 k_make_array_1315))
  k_make_array_u_1332 i_1032 n_1031 k_make_array_1315 x_1318 -> (k_make_array_1315 0)
  main_1057 n_1058 k_main_1787 when (n_1058 > 0) ->
      (f_1042 n_1058 (make_array_1030 n_1058) (make_array_1030 n_1058) k_main_1787)
  main_1057 n_1058 k_main_1787 when (not (n_1058 > 0)) -> (k_main_1787 ())
  make_array_1030 n_1031 i_1032 k_make_array_1315 when (0 <= i_1032) ->
      (k_make_array_u_1321 i_1032 n_1031 k_make_array_1315 (i_1032 < n_1031))
  make_array_1030 n_1031 i_1032 k_make_array_1315 when (not (0 <= i_1032)) ->
      (k_make_array_u_1321 i_1032 n_1031 k_make_array_1315 false)
  print_array_1052 m_1043 des_1045 m_1053 array_1054 i_1055 k_f_print_array_1664 when (
      i_1055 >= m_1053) -> (k_f_print_array_1664 ())
  print_array_1052 m_1043 des_1045 m_1053 array_1054 i_1055 k_f_print_array_1664 when (
      not (i_1055 >= m_1053)) ->
      (des_1045 i_1055 (f_print_array_1888 i_1055 m_1043 m_1053 array_1054 des_1045 k_f_print_array_1664))
  print_int_1040 n_1041 k_print_int_1432 -> (k_print_int_1432 ())
  update_1033 i_1034 n_1035 des_1036 x_1037 k_update_1380 ->
      (des_1036 i_1034 (f_update_1885 i_1034 n_1035 x_1037 des_1036 k_update_1380))
Types:
  main_1884 : X
  bcopy_1046 : (x_1:int ->
                x_2:int ->
                (x_4:int[x_4 >= 0; x_2 >= x_4 + 1] -> (int[x_4 >= 0; x_1 >= x_4 + 1] -> X) -> X) ->
                (x_10:int[x_10 >= 0; x_1 >= -x_2 + 2*x_10 + 2] -> (int -> X) -> X) ->
                x_15:int[x_15 >= 0; x_2 >= x_15 + 1] -> ((int -> (int -> X) -> X) -> X) -> X)
  fail_1893 : (x_1:bool[x_1] -> (unit -> X) -> X)
  print_array_1052 : (int ->
                      (x_3:int[x_3 >= 0] -> (int -> X) -> X) ->
                      int -> (int -> (int -> X) -> X) -> x_15:int[x_15 >= 0] -> (unit -> X) -> X)
  
(4-1) Abstracting ... DONE!

(4-2) Checking HORS ... DONE!

Error trace::
  main_1884 ... --> 
  f_1891 ... --> 
  main_1057 [1/2] ... --> 
  f_1042 ... --> 
  bcopy_1046 [2/2] ... --> 
  make_array_1030 [1/2] ... --> 
  k_make_array_u_1321 [1/2] ... --> 
  k_make_array_u_1332 ... --> 
  f_bcopy_1886 ... --> 
  update_1033 ... --> 
  make_array_1030 [1/2] ... --> 
  k_make_array_u_1321 [1/2] ... --> 
  k_make_array_u_1332 ... --> 
  f_update_1885 ... --> 
  f_bcopy_1887 ... --> 
  bcopy_1046 [1/2] ... --> 
  f_f_1890 ... --> 
  print_array_1052 [2/2] ... --> 
  make_array_1030 [1/2] ... --> 
  k_make_array_u_1321 [2/2] ... --> 
  fail_1893 ... --> fail -->
  ERROR!

Spurious counter-example::
  0; 0; 0; 0; 1; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 1; 0; 1; 0

(4-3) Checking counter-example ... DONE!

(4-4) Discovering predicates ... 
begin AbsTypeInfer.refine(43400)[1]
  program:
    main_1884  | true = ((Random.int 0) f_1891)
    a_1038 i_1034 n_1035 x_1037 x_1386 des_1036 j_1039 k_update_a_1401 | (
    i_1034 = j_1039) = (k_update_a_1401 x_1037)
    a_1038 i_1034 n_1035 x_1037 x_1386 des_1036 j_1039 k_update_a_1401 | (
    not (i_1034 = j_1039)) = (des_1036 i_1034
                                       k_update_a_1401)
    bcopy_1046 m_1043 m_1047 src_1048 des_1049 i_1050 k_f_bcopy_1535 | (
    i_1050 >= m_1047) = (k_f_bcopy_1535 des_1049)
    bcopy_1046 m_1043 m_1047 src_1048 des_1049 i_1050 k_f_bcopy_1535 | (
    not (i_1050 >= m_1047)) = (src_1048 i_1050
                                        (f_bcopy_1886 i_1050
                                                      m_1043
                                                      m_1047
                                                      des_1049
                                                      k_f_bcopy_1535
                                                      src_1048))
    f_1042 m_1043 src_1044 des_1045 k_f_1476 | true = (bcopy_1046
                                                         m_1043
                                                         m_1043
                                                         src_1044
                                                         des_1045
                                                         0
                                                         (f_f_1890 m_1043
                                                                   des_1045
                                                                   k_f_1476))
    f_1891 x_1859 | true = (main_1057 x_1859
                                      (f_1892 x_1859))
    f_1892 x_1859 x_1856 | true = end
    f_bcopy_1886 i_1050 m_1043 m_1047 des_1049 k_f_bcopy_1535 src_1048 x_1591 | true = (
    update_1033 i_1050
                m_1047
                des_1049
                x_1591
                (f_bcopy_1887 i_1050
                              m_1043
                              m_1047
                              x_1591
                              k_f_bcopy_1535
                              src_1048))
    f_bcopy_1887 i_1050 m_1043 m_1047 x_1591 k_f_bcopy_1535 src_1048 x_1547 | true = (
    bcopy_1046 m_1043
               m_1047
               src_1048
               x_1547
               (i_1050 + 1)
               k_f_bcopy_1535)
    f_f_1890 m_1043 des_1045 k_f_1476 x_1715 | true = (print_array_1052 m_1043
                                                                    des_1045
                                                                    m_1043
                                                                    x_1715
                                                                    0
                                                                    k_f_1476)
    f_print_array_1888 i_1055 m_1043 m_1053 array_1054 des_1045 k_f_print_array_1664 x_1687 | true = (
    print_int_1040 x_1687
                   (f_print_array_1889 i_1055
                                       m_1043
                                       m_1053
                                       x_1687
                                       array_1054
                                       des_1045
                                       k_f_print_array_1664))
    f_print_array_1889 i_1055 m_1043 m_1053 x_1687 array_1054 des_1045 k_f_print_array_1664 x_1667 | true = (
    print_array_1052 m_1043
                     des_1045
                     m_1053
                     array_1054
                     (i_1055 + 1)
                     k_f_print_array_1664)
    f_update_1885 i_1034 n_1035 x_1037 des_1036 k_update_1380 x_1386 | true = (
    k_update_1380 (a_1038 i_1034
                          n_1035
                          x_1037
                          x_1386
                          des_1036))
    fail_1893 b k | true = (fail ())
    k_make_array_u_1321 i_1032 n_1031 k_make_array_1315 b_1333 | b_1333 = (
    k_make_array_u_1332 i_1032
                        n_1031
                        k_make_array_1315
                        ())
    k_make_array_u_1321 i_1032 n_1031 k_make_array_1315 b_1333 | (not b_1333) = (
    fail_1893 true
              (k_make_array_u_1332 i_1032
                                   n_1031
                                   k_make_array_1315))
    k_make_array_u_1332 i_1032 n_1031 k_make_array_1315 x_1318 | true = (
    k_make_array_1315 0)
    main_1057 n_1058 k_main_1787 | (n_1058 > 0) = (f_1042
                                                     n_1058
                                                     (make_array_1030 n_1058)
                                                     (make_array_1030 n_1058)
                                                     k_main_1787)
    main_1057 n_1058 k_main_1787 | (not (n_1058 > 0)) = (k_main_1787 ())
    make_array_1030 n_1031 i_1032 k_make_array_1315 | (0 <= i_1032) = (
    k_make_array_u_1321 i_1032
                        n_1031
                        k_make_array_1315
                        (i_1032 < n_1031))
    make_array_1030 n_1031 i_1032 k_make_array_1315 | (not (0 <= i_1032)) = (
    k_make_array_u_1321 i_1032
                        n_1031
                        k_make_array_1315
                        false)
    print_array_1052 m_1043 des_1045 m_1053 array_1054 i_1055 k_f_print_array_1664 | (
    i_1055 >= m_1053) = (k_f_print_array_1664 ())
    print_array_1052 m_1043 des_1045 m_1053 array_1054 i_1055 k_f_print_array_1664 | (
    not (i_1055 >= m_1053)) = (des_1045
                                 i_1055
                                 (f_print_array_1888 i_1055
                                                     m_1043
                                                     m_1053
                                                     array_1054
                                                     des_1045
                                                     k_f_print_array_1664))
    print_int_1040 n_1041 k_print_int_1432 | true = (k_print_int_1432 ())
    update_1033 i_1034 n_1035 des_1036 x_1037 k_update_1380 | true = (
    des_1036 i_1034
             (f_update_1885 i_1034
                            n_1035
                            x_1037
                            des_1036
                            k_update_1380))
    main_1884:X
    a_1038:int -> int -> int -> int -> (int -> (int -> X) -> X) -> int -> (int -> X) -> X
    bcopy_1046:int ->
               int ->
               (int -> (int -> X) -> X) -> (int -> (int -> X) -> X) -> int -> ((int -> (int -> X) -> X) -> X) -> X
    f_1042:int -> (int -> (int -> X) -> X) -> (int -> (int -> X) -> X) -> (unit -> X) -> X
    f_1891:int -> X
    f_1892:int -> unit -> X
    f_bcopy_1886:int ->
                 int ->
                 int ->
                 (int -> (int -> X) -> X) -> ((int -> (int -> X) -> X) -> X) -> (int -> (int -> X) -> X) -> int -> X
    f_bcopy_1887:int ->
                 int ->
                 int ->
                 int -> ((int -> (int -> X) -> X) -> X) -> (int -> (int -> X) -> X) -> (int -> (int -> X) -> X) -> X
    f_f_1890:int -> (int -> (int -> X) -> X) -> (unit -> X) -> (int -> (int -> X) -> X) -> X
    f_print_array_1888:int ->
                       int -> int -> (int -> (int -> X) -> X) -> (int -> (int -> X) -> X) -> (unit -> X) -> int -> X
    f_print_array_1889:int ->
                       int ->
                       int -> int -> (int -> (int -> X) -> X) -> (int -> (int -> X) -> X) -> (unit -> X) -> unit -> X
    f_update_1885:int -> int -> int -> (int -> (int -> X) -> X) -> ((int -> (int -> X) -> X) -> X) -> int -> X
    fail_1893:bool -> (unit -> X) -> X
    k_make_array_u_1321:int -> int -> (int -> X) -> bool -> X
    k_make_array_u_1332:int -> int -> (int -> X) -> unit -> X
    main_1057:int -> (unit -> X) -> X
    make_array_1030:int -> int -> (int -> X) -> X
    print_array_1052:int -> (int -> (int -> X) -> X) -> int -> (int -> (int -> X) -> X) -> int -> (unit -> X) -> X
    print_int_1040:int -> (unit -> X) -> X
    update_1033:int -> int -> (int -> (int -> X) -> X) -> int -> ((int -> (int -> X) -> X) -> X) -> X
  inlined functions: a_1038,f_1042,f_1891,f_1892,f_bcopy_1886,f_bcopy_1887,f_f_1890,f_print_array_1888,f_print_array_1889,f_update_1885,k_make_array_u_1321,k_make_array_u_1332,main_1057,make_array_1030,print_int_1040,update_1033
  counterexample: 0:0:0:0:1:0:0:0:0:0:0:0:0:0:0:0:0:1:0:1:0
  error traces:
    [true.nop(<f_1891@250:0> = var682)
     [true.(<main_1057@252:0> = <f_1891@250:0>)
      [(<main_1057@252:0> > 0).(<f_1042@255:0> = <main_1057@252:0>)
       [true.
        ((<bcopy_1046@257:0> = <f_1042@255:0>) && ((<bcopy_1046@257:1> = <f_1042@255:0>) && (<bcopy_1046@257:4> = 0)))
        [(not (<bcopy_1046@257:4> >= <bcopy_1046@257:1>)).(<<bcopy_1046@257:2>@260:0> = <bcopy_1046@257:4>)
         [true.(<<f_1042@255:1>@262:0> = <<bcopy_1046@257:2>@260:0>)
          [true.((<make_array_1030@264:0> = <main_1057@252:0>) && (<make_array_1030@264:1> = <<f_1042@255:1>@262:0>))
           [(0 <= <make_array_1030@264:1>).
            ((<k_make_array_u_1321@267:0> = <make_array_1030@264:1>) &&
             ((<k_make_array_u_1321@267:1> = <make_array_1030@264:0>) &&
              (<k_make_array_u_1321@267:3> = (<make_array_1030@264:1> < <make_array_1030@264:0>))))
            [<k_make_array_u_1321@267:3>.
             ((<k_make_array_u_1332@270:0> = <k_make_array_u_1321@267:0>) &&
              ((<k_make_array_u_1332@270:1> = <k_make_array_u_1321@267:1>) && (<k_make_array_u_1332@270:3> = ())))
             [true.(<<k_make_array_u_1332@270:2>@272:0> = 0)
              [true.(<<k_make_array_u_1321@267:2>@274:0> = <<k_make_array_u_1332@270:2>@272:0>)
               [true.(<<make_array_1030@264:2>@276:0> = <<k_make_array_u_1321@267:2>@274:0>)
                [true.(<<<f_1042@255:1>@262:1>@278:0> = <<make_array_1030@264:2>@276:0>)
                 [true.(<<<bcopy_1046@257:2>@260:1>@280:0> = <<<f_1042@255:1>@262:1>@278:0>)
                  [true.
                   ((<f_bcopy_1886@282:0> = <bcopy_1046@257:4>) &&
                    ((<f_bcopy_1886@282:1> = <bcopy_1046@257:0>) &&
                     ((<f_bcopy_1886@282:2> = <bcopy_1046@257:1>) &&
                      (<f_bcopy_1886@282:6> = <<<bcopy_1046@257:2>@260:1>@280:0>))))
                   [true.
                    ((<update_1033@284:0> = <f_bcopy_1886@282:0>) &&
                     ((<update_1033@284:1> = <f_bcopy_1886@282:2>) && (<update_1033@284:3> = <f_bcopy_1886@282:6>)))
                    [true.(<<update_1033@284:2>@286:0> = <update_1033@284:0>)
                     [true.(<<f_bcopy_1886@282:3>@288:0> = <<update_1033@284:2>@286:0>)
                      [true.(<<bcopy_1046@257:3>@290:0> = <<f_bcopy_1886@282:3>@288:0>)
                       [true.(<<f_1042@255:2>@292:0> = <<bcopy_1046@257:3>@290:0>)
                        [true.
                         ((<make_array_1030@294:0> = <main_1057@252:0>) &&
                          (<make_array_1030@294:1> = <<f_1042@255:2>@292:0>))
                         [(0 <= <make_array_1030@294:1>).
                          ((<k_make_array_u_1321@297:0> = <make_array_1030@294:1>) &&
                           ((<k_make_array_u_1321@297:1> = <make_array_1030@294:0>) &&
                            (<k_make_array_u_1321@297:3> = (<make_array_1030@294:1> < <make_array_1030@294:0>))))
                          [<k_make_array_u_1321@297:3>.
                           ((<k_make_array_u_1332@300:0> = <k_make_array_u_1321@297:0>) &&
                            ((<k_make_array_u_1332@300:1> = <k_make_array_u_1321@297:1>) &&
                             (<k_make_array_u_1332@300:3> = ())))
                           [true.(<<k_make_array_u_1332@300:2>@302:0> = 0)
                            [true.(<<k_make_array_u_1321@297:2>@304:0> = <<k_make_array_u_1332@300:2>@302:0>)
                             [true.(<<make_array_1030@294:2>@306:0> = <<k_make_array_u_1321@297:2>@304:0>)
                              [true.(<<<f_1042@255:2>@292:1>@308:0> = <<make_array_1030@294:2>@306:0>)
                               [true.(<<<bcopy_1046@257:3>@290:1>@310:0> = <<<f_1042@255:2>@292:1>@308:0>)
                                [true.(<<<f_bcopy_1886@282:3>@288:1>@312:0> = <<<bcopy_1046@257:3>@290:1>@310:0>)
                                 [true.(<<<update_1033@284:2>@286:1>@314:0> = <<<f_bcopy_1886@282:3>@288:1>@312:0>)
                                  [true.
                                   ((<f_update_1885@316:0> = <update_1033@284:0>) &&
                                    ((<f_update_1885@316:1> = <update_1033@284:1>) &&
                                     ((<f_update_1885@316:2> = <update_1033@284:3>) &&
                                      (<f_update_1885@316:5> = <<<update_1033@284:2>@286:1>@314:0>))))
                                   [true.true
                                    [true.true
                                     [true.
                                      ((<f_bcopy_1887@322:0> = <f_bcopy_1886@282:0>) &&
                                       ((<f_bcopy_1887@322:1> = <f_bcopy_1886@282:1>) &&
                                        ((<f_bcopy_1887@322:2> = <f_bcopy_1886@282:2>) &&
                                         (<f_bcopy_1887@322:3> = <f_bcopy_1886@282:6>))))
                                      [true.
                                       ((<bcopy_1046@324:0> = <f_bcopy_1887@322:1>) &&
                                        ((<bcopy_1046@324:1> = <f_bcopy_1887@322:2>) &&
                                         (<bcopy_1046@324:4> = (<f_bcopy_1887@322:0> + 1))))
                                       [(<bcopy_1046@324:4> >= <bcopy_1046@324:1>).true
                                        [true.true
                                         [true.true
                                          [true.true
                                           [true.(<f_f_1890@335:0> = <f_1042@255:0>)
                                            [true.
                                             ((<print_array_1052@337:0> = <f_f_1890@335:0>) &&
                                              ((<print_array_1052@337:2> = <f_f_1890@335:0>) &&
                                               (<print_array_1052@337:4> = 0)))
                                             [(not (<print_array_1052@337:4> >= <print_array_1052@337:2>)).
                                              (<<print_array_1052@337:1>@340:0> = <print_array_1052@337:4>)
                                              [true.(<<f_f_1890@335:1>@342:0> = <<print_array_1052@337:1>@340:0>)
                                               [true.(<<f_1042@255:2>@344:0> = <<f_f_1890@335:1>@342:0>)
                                                [true.
                                                 ((<make_array_1030@346:0> = <main_1057@252:0>) &&
                                                  (<make_array_1030@346:1> = <<f_1042@255:2>@344:0>))
                                                 [(0 <= <make_array_1030@346:1>).
                                                  ((<k_make_array_u_1321@349:0> = <make_array_1030@346:1>) &&
                                                   ((<k_make_array_u_1321@349:1> = <make_array_1030@346:0>) &&
                                                    (<k_make_array_u_1321@349:3> =
                                                     (<make_array_1030@346:1> < <make_array_1030@346:0>))))
                                                  [(not <k_make_array_u_1321@349:3>).(
                                                   <fail_1893@352:0> = true)[
                                                   true.error
  begin RefTypeInfer.infer_etrs(43401)[2]
    horn clauses:
      P[<fail_1893@352:0>](<fail_1893@352:0>:bool)|- bot
      
      P[<k_make_array_u_1321@349:3>](<k_make_array_u_1321@349:0>:int,<k_make_array_u_1321@349:1>:int,false:bool),
      <fail_1893@352:0> |- P[<fail_1893@352:0>](<fail_1893@352:0>:bool)
      
      P[<make_array_1030@346:1>](<k_make_array_u_1321@349:1>:int,<k_make_array_u_1321@349:0>:int),
      ((0 <= <k_make_array_u_1321@349:0>) &&
       (<k_make_array_u_1321@349:3> = (<k_make_array_u_1321@349:0> < <k_make_array_u_1321@349:1>)))
      |- P[<k_make_array_u_1321@349:3>](<k_make_array_u_1321@349:0>:int,
                                        <k_make_array_u_1321@349:1>:int,
                                        <k_make_array_u_1321@349:3>:bool)
      
      P[<main_1057@252:0>](<make_array_1030@346:0>:int),
      P[<<f_1042@255:2>@344:0>](<make_array_1030@346:0>:int,<make_array_1030@346:1>:int), (
      <make_array_1030@346:0> > 0)
      |- P[<make_array_1030@346:1>](<make_array_1030@346:0>:int,<make_array_1030@346:1>:int)
      
      P[<f_1042@255:0>](<f_1042@255:0>:int),
      P[<<f_f_1890@335:1>@342:0>](<f_1042@255:0>:int,<<f_1042@255:2>@344:0>:int)|- P[<<f_1042@255:2>@344:0>](
      <f_1042@255:0>:int,<<f_1042@255:2>@344:0>:int)
      
      P[<f_f_1890@335:0>](<f_f_1890@335:0>:int),
      P[<<print_array_1052@337:1>@340:0>](<f_f_1890@335:0>:int,<<f_f_1890@335:1>@342:0>:int)|- P[<<f_f_1890@335:1>@342:0>](
      <f_f_1890@335:0>:int,<<f_f_1890@335:1>@342:0>:int)
      
      P[<print_array_1052@337:4>](<print_array_1052@337:0>:int,<print_array_1052@337:2>:int,<<print_array_1052@337:1>@340:0>:int),
      (<<print_array_1052@337:1>@340:0> < <print_array_1052@337:2>)
      |- P[<<print_array_1052@337:1>@340:0>](<print_array_1052@337:0>:int,
                                             <<print_array_1052@337:1>@340:0>:int)
      
      P[<f_f_1890@335:0>](<print_array_1052@337:0>:int),
      ((<print_array_1052@337:4> = 0) && (<print_array_1052@337:0> = <print_array_1052@337:2>))
      |- P[<print_array_1052@337:4>](<print_array_1052@337:0>:int,<print_array_1052@337:2>:int,
                                     <print_array_1052@337:4>:int)
      
      P[<f_1042@255:0>](<f_f_1890@335:0>:int)|- P[<f_f_1890@335:0>](<f_f_1890@335:0>:int)
      
      P[<f_bcopy_1887@322:3>]((-1 + <bcopy_1046@324:4>):int,<bcopy_1046@324:0>:int,<bcopy_1046@324:1>:int,<f_bcopy_1887@322:3>:int)|- P[<bcopy_1046@324:4>](
      <bcopy_1046@324:0>:int,<bcopy_1046@324:1>:int,<bcopy_1046@324:4>:int)
      
      P[<f_bcopy_1886@282:6>](<f_bcopy_1887@322:0>:int,<f_bcopy_1887@322:1>:int,<f_bcopy_1887@322:2>:int,<f_bcopy_1887@322:3>:int)|- P[<f_bcopy_1887@322:3>](
      <f_bcopy_1887@322:0>:int,<f_bcopy_1887@322:1>:int,<f_bcopy_1887@322:2>:int,
      <f_bcopy_1887@322:3>:int)
      
      P[<update_1033@284:3>](<f_update_1885@316:0>:int,<f_update_1885@316:1>:int,<f_update_1885@316:2>:int),
      P[<<<update_1033@284:2>@286:1>@314:0>](<f_update_1885@316:0>:int,<f_update_1885@316:1>:int,<f_update_1885@316:0>:int,<f_update_1885@316:5>:int)|- P[<f_update_1885@316:5>](
      <f_update_1885@316:0>:int,<f_update_1885@316:1>:int,<f_update_1885@316:2>:int,
      <f_update_1885@316:5>:int)
      
      P[<f_bcopy_1886@282:6>](<update_1033@284:0>:int,<f_bcopy_1886@282:1>:int,<update_1033@284:1>:int,<update_1033@284:3>:int),
      P[<<<f_bcopy_1886@282:3>@288:1>@312:0>](<update_1033@284:0>:int,<f_bcopy_1886@282:1>:int,<update_1033@284:1>:int,<<update_1033@284:2>@286:0>:int,<<<update_1033@284:2>@286:1>@314:0>:int)|- P[<<<update_1033@284:2>@286:1>@314:0>](
      <update_1033@284:0>:int,<update_1033@284:1>:int,<<update_1033@284:2>@286:0>:int,
      <<<update_1033@284:2>@286:1>@314:0>:int)
      
      P[<bcopy_1046@257:4>](<f_bcopy_1886@282:1>:int,<f_bcopy_1886@282:2>:int,<f_bcopy_1886@282:0>:int),
      P[<<<bcopy_1046@257:3>@290:1>@310:0>](<f_bcopy_1886@282:1>:int,<f_bcopy_1886@282:2>:int,<<f_bcopy_1886@282:3>@288:0>:int,<<<f_bcopy_1886@282:3>@288:1>@312:0>:int),
      (<f_bcopy_1886@282:0> < <f_bcopy_1886@282:2>)
      |- P[<<<f_bcopy_1886@282:3>@288:1>@312:0>](<f_bcopy_1886@282:0>:int,
                                                 <f_bcopy_1886@282:1>:int,
                                                 <f_bcopy_1886@282:2>:int,
                                                 <<f_bcopy_1886@282:3>@288:0>:int,
                                                 <<<f_bcopy_1886@282:3>@288:1>@312:0>:int)
      
      P[<f_1042@255:0>](<bcopy_1046@257:0>:int),
      P[<<<f_1042@255:2>@292:1>@308:0>](<bcopy_1046@257:0>:int,<<bcopy_1046@257:3>@290:0>:int,<<<bcopy_1046@257:3>@290:1>@310:0>:int),
      (<bcopy_1046@257:0> = <bcopy_1046@257:1>)
      |- P[<<<bcopy_1046@257:3>@290:1>@310:0>](<bcopy_1046@257:0>:int,
                                               <bcopy_1046@257:1>:int,
                                               <<bcopy_1046@257:3>@290:0>:int,
                                               <<<bcopy_1046@257:3>@290:1>@310:0>:int)
      
      P[<main_1057@252:0>](<f_1042@255:0>:int),
      P[<<make_array_1030@294:2>@306:0>](<f_1042@255:0>:int,<<f_1042@255:2>@292:0>:int,<<<f_1042@255:2>@292:1>@308:0>:int),
      P[<f_1042@255:0>](<f_1042@255:0>:int), (<f_1042@255:0> > 0)
      |- P[<<<f_1042@255:2>@292:1>@308:0>](<f_1042@255:0>:int,<<f_1042@255:2>@292:0>:int,
                                           <<<f_1042@255:2>@292:1>@308:0>:int)
      
      P[<make_array_1030@294:1>](<make_array_1030@294:0>:int,<make_array_1030@294:1>:int),
      P[<<k_make_array_u_1321@297:2>@304:0>](<make_array_1030@294:1>:int,<make_array_1030@294:0>:int,<<make_array_1030@294:2>@306:0>:int),
      (0 <= <make_array_1030@294:1>)
      |- P[<<make_array_1030@294:2>@306:0>](<make_array_1030@294:0>:int,
                                            <make_array_1030@294:1>:int,
                                            <<make_array_1030@294:2>@306:0>:int)
      
      P[<k_make_array_u_1321@297:3>](<k_make_array_u_1321@297:0>:int,<k_make_array_u_1321@297:1>:int,true:bool),
      P[<<k_make_array_u_1332@300:2>@302:0>](<k_make_array_u_1321@297:0>:int,<k_make_array_u_1321@297:1>:int,<<k_make_array_u_1321@297:2>@304:0>:int)|- P[<<k_make_array_u_1321@297:2>@304:0>](
      <k_make_array_u_1321@297:0>:int,<k_make_array_u_1321@297:1>:int,
      <<k_make_array_u_1321@297:2>@304:0>:int)
      
      P[<k_make_array_u_1332@300:3>](<k_make_array_u_1332@300:0>:int,<k_make_array_u_1332@300:1>:int,<k_make_array_u_1332@300:3>:unit),
      (<<k_make_array_u_1332@300:2>@302:0> = 0)
      |- P[<<k_make_array_u_1332@300:2>@302:0>](<k_make_array_u_1332@300:0>:int,
                                                <k_make_array_u_1332@300:1>:int,
                                                <<k_make_array_u_1332@300:2>@302:0>:int)
      
      P[<k_make_array_u_1321@297:3>](<k_make_array_u_1332@300:0>:int,<k_make_array_u_1332@300:1>:int,true:bool)|- P[<k_make_array_u_1332@300:3>](
      <k_make_array_u_1332@300:0>:int,<k_make_array_u_1332@300:1>:int,
      <k_make_array_u_1332@300:3>:unit)
      
      P[<make_array_1030@294:1>](<k_make_array_u_1321@297:1>:int,<k_make_array_u_1321@297:0>:int),
      ((0 <= <k_make_array_u_1321@297:0>) &&
       (<k_make_array_u_1321@297:3> = (<k_make_array_u_1321@297:0> < <k_make_array_u_1321@297:1>)))
      |- P[<k_make_array_u_1321@297:3>](<k_make_array_u_1321@297:0>:int,
                                        <k_make_array_u_1321@297:1>:int,
                                        <k_make_array_u_1321@297:3>:bool)
      
      P[<main_1057@252:0>](<make_array_1030@294:0>:int),
      P[<<f_1042@255:2>@292:0>](<make_array_1030@294:0>:int,<make_array_1030@294:1>:int), (
      <make_array_1030@294:0> > 0)
      |- P[<make_array_1030@294:1>](<make_array_1030@294:0>:int,<make_array_1030@294:1>:int)
      
      P[<f_1042@255:0>](<f_1042@255:0>:int),
      P[<<bcopy_1046@257:3>@290:0>](<f_1042@255:0>:int,<f_1042@255:0>:int,<<f_1042@255:2>@292:0>:int)|- P[<<f_1042@255:2>@292:0>](
      <f_1042@255:0>:int,<<f_1042@255:2>@292:0>:int)
      
      P[<bcopy_1046@257:4>](<bcopy_1046@257:0>:int,<bcopy_1046@257:1>:int,<<bcopy_1046@257:2>@260:0>:int),
      P[<<f_bcopy_1886@282:3>@288:0>](<<bcopy_1046@257:2>@260:0>:int,<bcopy_1046@257:0>:int,<bcopy_1046@257:1>:int,<<bcopy_1046@257:3>@290:0>:int),
      (<<bcopy_1046@257:2>@260:0> < <bcopy_1046@257:1>)
      |- P[<<bcopy_1046@257:3>@290:0>](<bcopy_1046@257:0>:int,<bcopy_1046@257:1>:int,
                                       <<bcopy_1046@257:3>@290:0>:int)
      
      P[<f_bcopy_1886@282:6>](<f_bcopy_1886@282:0>:int,<f_bcopy_1886@282:1>:int,<f_bcopy_1886@282:2>:int,<update_1033@284:3>:int),
      P[<<update_1033@284:2>@286:0>](<f_bcopy_1886@282:0>:int,<f_bcopy_1886@282:2>:int,<<f_bcopy_1886@282:3>@288:0>:int)|- P[<<f_bcopy_1886@282:3>@288:0>](
      <f_bcopy_1886@282:0>:int,<f_bcopy_1886@282:1>:int,<f_bcopy_1886@282:2>:int,
      <<f_bcopy_1886@282:3>@288:0>:int)
      
      P[<update_1033@284:3>](<update_1033@284:0>:int,<update_1033@284:1>:int,<update_1033@284:3>:int),
      (<<update_1033@284:2>@286:0> = <update_1033@284:0>)
      |- P[<<update_1033@284:2>@286:0>](<update_1033@284:0>:int,<update_1033@284:1>:int,
                                        <<update_1033@284:2>@286:0>:int)
      
      P[<f_bcopy_1886@282:6>](<update_1033@284:0>:int,<f_bcopy_1886@282:1>:int,<update_1033@284:1>:int,<update_1033@284:3>:int)|- P[<update_1033@284:3>](
      <update_1033@284:0>:int,<update_1033@284:1>:int,<update_1033@284:3>:int)
      
      P[<bcopy_1046@257:4>](<f_bcopy_1886@282:1>:int,<f_bcopy_1886@282:2>:int,<f_bcopy_1886@282:0>:int),
      P[<<<bcopy_1046@257:2>@260:1>@280:0>](<f_bcopy_1886@282:1>:int,<f_bcopy_1886@282:2>:int,<f_bcopy_1886@282:0>:int,<f_bcopy_1886@282:6>:int),
      (<f_bcopy_1886@282:0> < <f_bcopy_1886@282:2>)
      |- P[<f_bcopy_1886@282:6>](<f_bcopy_1886@282:0>:int,<f_bcopy_1886@282:1>:int,
                                 <f_bcopy_1886@282:2>:int,<f_bcopy_1886@282:6>:int)
      
      P[<f_1042@255:0>](<bcopy_1046@257:0>:int),
      P[<<<f_1042@255:1>@262:1>@278:0>](<bcopy_1046@257:0>:int,<<bcopy_1046@257:2>@260:0>:int,<<<bcopy_1046@257:2>@260:1>@280:0>:int),
      (<bcopy_1046@257:0> = <bcopy_1046@257:1>)
      |- P[<<<bcopy_1046@257:2>@260:1>@280:0>](<bcopy_1046@257:0>:int,
                                               <bcopy_1046@257:1>:int,
                                               <<bcopy_1046@257:2>@260:0>:int,
                                               <<<bcopy_1046@257:2>@260:1>@280:0>:int)
      
      P[<main_1057@252:0>](<f_1042@255:0>:int),
      P[<<make_array_1030@264:2>@276:0>](<f_1042@255:0>:int,<<f_1042@255:1>@262:0>:int,<<<f_1042@255:1>@262:1>@278:0>:int),
      P[<f_1042@255:0>](<f_1042@255:0>:int), (<f_1042@255:0> > 0)
      |- P[<<<f_1042@255:1>@262:1>@278:0>](<f_1042@255:0>:int,<<f_1042@255:1>@262:0>:int,
                                           <<<f_1042@255:1>@262:1>@278:0>:int)
      
      P[<make_array_1030@264:1>](<make_array_1030@264:0>:int,<make_array_1030@264:1>:int),
      P[<<k_make_array_u_1321@267:2>@274:0>](<make_array_1030@264:1>:int,<make_array_1030@264:0>:int,<<make_array_1030@264:2>@276:0>:int),
      (0 <= <make_array_1030@264:1>)
      |- P[<<make_array_1030@264:2>@276:0>](<make_array_1030@264:0>:int,
                                            <make_array_1030@264:1>:int,
                                            <<make_array_1030@264:2>@276:0>:int)
      
      P[<k_make_array_u_1321@267:3>](<k_make_array_u_1321@267:0>:int,<k_make_array_u_1321@267:1>:int,true:bool),
      P[<<k_make_array_u_1332@270:2>@272:0>](<k_make_array_u_1321@267:0>:int,<k_make_array_u_1321@267:1>:int,<<k_make_array_u_1321@267:2>@274:0>:int)|- P[<<k_make_array_u_1321@267:2>@274:0>](
      <k_make_array_u_1321@267:0>:int,<k_make_array_u_1321@267:1>:int,
      <<k_make_array_u_1321@267:2>@274:0>:int)
      
      P[<k_make_array_u_1332@270:3>](<k_make_array_u_1332@270:0>:int,<k_make_array_u_1332@270:1>:int,<k_make_array_u_1332@270:3>:unit),
      (<<k_make_array_u_1332@270:2>@272:0> = 0)
      |- P[<<k_make_array_u_1332@270:2>@272:0>](<k_make_array_u_1332@270:0>:int,
                                                <k_make_array_u_1332@270:1>:int,
                                                <<k_make_array_u_1332@270:2>@272:0>:int)
      
      P[<k_make_array_u_1321@267:3>](<k_make_array_u_1332@270:0>:int,<k_make_array_u_1332@270:1>:int,true:bool)|- P[<k_make_array_u_1332@270:3>](
      <k_make_array_u_1332@270:0>:int,<k_make_array_u_1332@270:1>:int,
      <k_make_array_u_1332@270:3>:unit)
      
      P[<make_array_1030@264:1>](<k_make_array_u_1321@267:1>:int,<k_make_array_u_1321@267:0>:int),
      ((0 <= <k_make_array_u_1321@267:0>) &&
       (<k_make_array_u_1321@267:3> = (<k_make_array_u_1321@267:0> < <k_make_array_u_1321@267:1>)))
      |- P[<k_make_array_u_1321@267:3>](<k_make_array_u_1321@267:0>:int,
                                        <k_make_array_u_1321@267:1>:int,
                                        <k_make_array_u_1321@267:3>:bool)
      
      P[<main_1057@252:0>](<make_array_1030@264:0>:int),
      P[<<f_1042@255:1>@262:0>](<make_array_1030@264:0>:int,<make_array_1030@264:1>:int), (
      <make_array_1030@264:0> > 0)
      |- P[<make_array_1030@264:1>](<make_array_1030@264:0>:int,<make_array_1030@264:1>:int)
      
      P[<f_1042@255:0>](<f_1042@255:0>:int),
      P[<<bcopy_1046@257:2>@260:0>](<f_1042@255:0>:int,<f_1042@255:0>:int,<<f_1042@255:1>@262:0>:int)|- P[<<f_1042@255:1>@262:0>](
      <f_1042@255:0>:int,<<f_1042@255:1>@262:0>:int)
      
      P[<bcopy_1046@257:4>](<bcopy_1046@257:0>:int,<bcopy_1046@257:1>:int,<<bcopy_1046@257:2>@260:0>:int),
      (<<bcopy_1046@257:2>@260:0> < <bcopy_1046@257:1>)
      |- P[<<bcopy_1046@257:2>@260:0>](<bcopy_1046@257:0>:int,<bcopy_1046@257:1>:int,
                                       <<bcopy_1046@257:2>@260:0>:int)
      
      P[<f_1042@255:0>](<bcopy_1046@257:0>:int),
      ((<bcopy_1046@257:4> = 0) && (<bcopy_1046@257:0> = <bcopy_1046@257:1>))
      |- P[<bcopy_1046@257:4>](<bcopy_1046@257:0>:int,<bcopy_1046@257:1>:int,
                               <bcopy_1046@257:4>:int)
      
      P[<main_1057@252:0>](<f_1042@255:0>:int), (<f_1042@255:0> > 0) |- P[<f_1042@255:0>](<f_1042@255:0>:int)
      
      P[<f_1891@250:0>](<main_1057@252:0>:int)|- P[<main_1057@252:0>](<main_1057@252:0>:int)
      
      |- P[<f_1891@250:0>](<f_1891@250:0>:int)
    call trees:
      <main_1884@247>
        <f_1891@250>
          <main_1057@252>
            <f_1042@255>
              <bcopy_1046@257>
              </<bcopy_1046@257:2>@260>
            </<f_1042@255:1>@262>
            <make_array_1030@264>
              <k_make_array_u_1321@267>
                <k_make_array_u_1332@270>
                </<k_make_array_u_1332@270:2>@272>
              </<k_make_array_u_1321@267:2>@274>
            </<make_array_1030@264:2>@276>
            <<<f_1042@255:1>@262:1>@278>
              <<<bcopy_1046@257:2>@260:1>@280>
                <f_bcopy_1886@282>
                  <update_1033@284>
                  </<update_1033@284:2>@286>
                </<f_bcopy_1886@282:3>@288>
              </<bcopy_1046@257:3>@290>
            </<f_1042@255:2>@292>
            <make_array_1030@294>
              <k_make_array_u_1321@297>
                <k_make_array_u_1332@300>
                </<k_make_array_u_1332@300:2>@302>
              </<k_make_array_u_1321@297:2>@304>
            </<make_array_1030@294:2>@306>
            <<<f_1042@255:2>@292:1>@308>
              <<<bcopy_1046@257:3>@290:1>@310>
                <<<f_bcopy_1886@282:3>@288:1>@312>
                  <<<update_1033@284:2>@286:1>@314>
                    <f_update_1885@316>
                    </<f_update_1885@316:4>@318>
                  </<update_1033@284:4>@320>
                  <f_bcopy_1887@322>
                    <bcopy_1046@324>
                    </<bcopy_1046@324:5>@327>
                  </<f_bcopy_1887@322:4>@329>
                </<f_bcopy_1886@282:4>@331>
              </<bcopy_1046@257:5>@333>
              <f_f_1890@335>
                <print_array_1052@337>
                </<print_array_1052@337:1>@340>
              </<f_f_1890@335:1>@342>
            </<f_1042@255:2>@344>
            <make_array_1030@346>
              <k_make_array_u_1321@349>
                <fail_1893@352>
    inlined horn clauses:
      P[<fail_1893@352:0>](<fail_1893@352:0>:bool)|- bot
      
      P[<<print_array_1052@337:1>@340:0>](<k_make_array_u_1321@349:1>:int,<k_make_array_u_1321@349:0>:int),
      ((0 <= <k_make_array_u_1321@349:0>) &&
       ((<k_make_array_u_1321@349:1> > 0) &&
        ((<k_make_array_u_1321@349:0> >= <k_make_array_u_1321@349:1>) && <fail_1893@352:0>)))
      |- P[<fail_1893@352:0>](<fail_1893@352:0>:bool)
      
      P[<print_array_1052@337:4>](<print_array_1052@337:0>:int,<print_array_1052@337:2>:int,<<print_array_1052@337:1>@340:0>:int),
      (<<print_array_1052@337:1>@340:0> < <print_array_1052@337:2>)
      |- P[<<print_array_1052@337:1>@340:0>](<print_array_1052@337:0>:int,
                                             <<print_array_1052@337:1>@340:0>:int)
      
      
      ((<print_array_1052@337:4> = 0) &&
       ((<print_array_1052@337:0> > 0) && (<print_array_1052@337:0> = <print_array_1052@337:2>)))
      |- P[<print_array_1052@337:4>](<print_array_1052@337:0>:int,<print_array_1052@337:2>:int,
                                     <print_array_1052@337:4>:int)
      
      P[<bcopy_1046@257:4>](<bcopy_1046@324:0>:int,<bcopy_1046@324:1>:int,(
                            -1 + <bcopy_1046@324:4>):int),
      P[<<<bcopy_1046@257:2>@260:1>@280:0>](<bcopy_1046@324:0>:int,<bcopy_1046@324:1>:int,(
                                            -1 + <bcopy_1046@324:4>):int,<f_bcopy_1887@322:3>:int),
      (<bcopy_1046@324:4> < (1 + <bcopy_1046@324:1>))
      |- P[<bcopy_1046@324:4>](<bcopy_1046@324:0>:int,<bcopy_1046@324:1>:int,
                               <bcopy_1046@324:4>:int)
      
      P[<<bcopy_1046@257:3>@290:0>](<bcopy_1046@257:0>:int,<bcopy_1046@257:0>:int,<<bcopy_1046@257:3>@290:0>:int),
      ((<<<bcopy_1046@257:3>@290:1>@310:0> = 0) &&
       ((0 <= <<bcopy_1046@257:3>@290:0>) &&
        ((<<bcopy_1046@257:3>@290:0> < <bcopy_1046@257:0>) &&
         ((<bcopy_1046@257:0> > 0) && (<bcopy_1046@257:0> = <bcopy_1046@257:1>)))))
      |- P[<<<bcopy_1046@257:3>@290:1>@310:0>](<bcopy_1046@257:0>:int,
                                               <bcopy_1046@257:1>:int,
                                               <<bcopy_1046@257:3>@290:0>:int,
                                               <<<bcopy_1046@257:3>@290:1>@310:0>:int)
      
      P[<<<bcopy_1046@257:2>@260:1>@280:0>](<bcopy_1046@257:0>:int,<bcopy_1046@257:1>:int,<<bcopy_1046@257:3>@290:0>:int,var689:int),
      P[<bcopy_1046@257:4>](<bcopy_1046@257:0>:int,<bcopy_1046@257:1>:int,<<bcopy_1046@257:3>@290:0>:int),
      (<<bcopy_1046@257:3>@290:0> < <bcopy_1046@257:1>)
      |- P[<<bcopy_1046@257:3>@290:0>](<bcopy_1046@257:0>:int,<bcopy_1046@257:1>:int,
                                       <<bcopy_1046@257:3>@290:0>:int)
      
      P[<<bcopy_1046@257:2>@260:0>](<bcopy_1046@257:0>:int,<bcopy_1046@257:0>:int,<<bcopy_1046@257:2>@260:0>:int),
      ((<<<bcopy_1046@257:2>@260:1>@280:0> = 0) &&
       ((0 <= <<bcopy_1046@257:2>@260:0>) &&
        ((<<bcopy_1046@257:2>@260:0> < <bcopy_1046@257:0>) &&
         ((<bcopy_1046@257:0> > 0) && (<bcopy_1046@257:0> = <bcopy_1046@257:1>)))))
      |- P[<<<bcopy_1046@257:2>@260:1>@280:0>](<bcopy_1046@257:0>:int,
                                               <bcopy_1046@257:1>:int,
                                               <<bcopy_1046@257:2>@260:0>:int,
                                               <<<bcopy_1046@257:2>@260:1>@280:0>:int)
      
      P[<bcopy_1046@257:4>](<bcopy_1046@257:0>:int,<bcopy_1046@257:1>:int,<<bcopy_1046@257:2>@260:0>:int),
      (<<bcopy_1046@257:2>@260:0> < <bcopy_1046@257:1>)
      |- P[<<bcopy_1046@257:2>@260:0>](<bcopy_1046@257:0>:int,<bcopy_1046@257:1>:int,
                                       <<bcopy_1046@257:2>@260:0>:int)
      
       ((<bcopy_1046@257:4> = 0) && ((<bcopy_1046@257:0> > 0) && (<bcopy_1046@257:0> = <bcopy_1046@257:1>)))
      |- P[<bcopy_1046@257:4>](<bcopy_1046@257:0>:int,<bcopy_1046@257:1>:int,
                               <bcopy_1046@257:4>:int)
    begin ParamSubstInfer.infer(50961)[3]
      
    end ParamSubstInfer.infer(50961)[3] (1.867716 sec.)
    inferred extra parameters:
      
    begin RefTypeInfer.elim_coeffs(50963)[3]
      
    end RefTypeInfer.elim_coeffs(50963)[3] (0.002999 sec.)
    begin YhornInterface.solve(52044)[3]
      begin HcSolver.solve_ub(52045)[4]
        encoded:
          P[<fail_1893@352:0>](<fail_1893@352:0>:int)|- bot
          
          P[<<print_array_1052@337:1>@340:0>](<k_make_array_u_1321@349:1>:int,<k_make_array_u_1321@349:0>:int),
          ((0 <= <k_make_array_u_1321@349:0>) &&
           ((<k_make_array_u_1321@349:1> > 0) &&
            ((<k_make_array_u_1321@349:0> >= <k_make_array_u_1321@349:1>) && (<fail_1893@352:0> = 1))))
          |- P[<fail_1893@352:0>](<fail_1893@352:0>:int)
          
          P[<print_array_1052@337:4>](<print_array_1052@337:0>:int,<print_array_1052@337:2>:int,<<print_array_1052@337:1>@340:0>:int),
          (<<print_array_1052@337:1>@340:0> < <print_array_1052@337:2>)
          |- P[<<print_array_1052@337:1>@340:0>](<print_array_1052@337:0>:int,
                                                 <<print_array_1052@337:1>@340:0>:int)
          
          
          ((<print_array_1052@337:4> = 0) &&
           ((<print_array_1052@337:0> > 0) && (<print_array_1052@337:0> = <print_array_1052@337:2>)))
          |- P[<print_array_1052@337:4>](<print_array_1052@337:0>:int,
                                         <print_array_1052@337:2>:int,
                                         <print_array_1052@337:4>:int)
          
          P[<bcopy_1046@257:4>](<bcopy_1046@324:0>:int,<bcopy_1046@324:1>:int,(
                                -1 + <bcopy_1046@324:4>):int),
          P[<<<bcopy_1046@257:2>@260:1>@280:0>](<bcopy_1046@324:0>:int,<bcopy_1046@324:1>:int,(
                                                -1 + <bcopy_1046@324:4>):int,<f_bcopy_1887@322:3>:int),
          (<bcopy_1046@324:4> < (1 + <bcopy_1046@324:1>))
          |- P[<bcopy_1046@324:4>](<bcopy_1046@324:0>:int,<bcopy_1046@324:1>:int,
                                   <bcopy_1046@324:4>:int)
          
          P[<<bcopy_1046@257:3>@290:0>](<bcopy_1046@257:0>:int,<bcopy_1046@257:0>:int,<<bcopy_1046@257:3>@290:0>:int),
          ((<<<bcopy_1046@257:3>@290:1>@310:0> = 0) &&
           ((0 <= <<bcopy_1046@257:3>@290:0>) &&
            ((<<bcopy_1046@257:3>@290:0> < <bcopy_1046@257:0>) &&
             ((<bcopy_1046@257:0> > 0) && (<bcopy_1046@257:0> = <bcopy_1046@257:1>)))))
          |- P[<<<bcopy_1046@257:3>@290:1>@310:0>](<bcopy_1046@257:0>:int,
                                                   <bcopy_1046@257:1>:int,
                                                   <<bcopy_1046@257:3>@290:0>:int,
                                                   <<<bcopy_1046@257:3>@290:1>@310:0>:int)
          
          P[<<<bcopy_1046@257:2>@260:1>@280:0>](<bcopy_1046@257:0>:int,<bcopy_1046@257:1>:int,<<bcopy_1046@257:3>@290:0>:int,var689:int),
          P[<bcopy_1046@257:4>](<bcopy_1046@257:0>:int,<bcopy_1046@257:1>:int,<<bcopy_1046@257:3>@290:0>:int),
          (<<bcopy_1046@257:3>@290:0> < <bcopy_1046@257:1>)
          |- P[<<bcopy_1046@257:3>@290:0>](<bcopy_1046@257:0>:int,<bcopy_1046@257:1>:int,
                                           <<bcopy_1046@257:3>@290:0>:int)
          
          P[<<bcopy_1046@257:2>@260:0>](<bcopy_1046@257:0>:int,<bcopy_1046@257:0>:int,<<bcopy_1046@257:2>@260:0>:int),
          ((<<<bcopy_1046@257:2>@260:1>@280:0> = 0) &&
           ((0 <= <<bcopy_1046@257:2>@260:0>) &&
            ((<<bcopy_1046@257:2>@260:0> < <bcopy_1046@257:0>) &&
             ((<bcopy_1046@257:0> > 0) && (<bcopy_1046@257:0> = <bcopy_1046@257:1>)))))
          |- P[<<<bcopy_1046@257:2>@260:1>@280:0>](<bcopy_1046@257:0>:int,
                                                   <bcopy_1046@257:1>:int,
                                                   <<bcopy_1046@257:2>@260:0>:int,
                                                   <<<bcopy_1046@257:2>@260:1>@280:0>:int)
          
          P[<bcopy_1046@257:4>](<bcopy_1046@257:0>:int,<bcopy_1046@257:1>:int,<<bcopy_1046@257:2>@260:0>:int),
          (<<bcopy_1046@257:2>@260:0> < <bcopy_1046@257:1>)
          |- P[<<bcopy_1046@257:2>@260:0>](<bcopy_1046@257:0>:int,<bcopy_1046@257:1>:int,
                                           <<bcopy_1046@257:2>@260:0>:int)
          
           ((<bcopy_1046@257:4> = 0) && ((<bcopy_1046@257:0> > 0) && (<bcopy_1046@257:0> = <bcopy_1046@257:1>)))
          |- P[<bcopy_1046@257:4>](<bcopy_1046@257:0>:int,<bcopy_1046@257:1>:int,
                                   <bcopy_1046@257:4>:int)
        input to Yhorn:
          P[<fail_1893@352:0>](<fail_1893@352:0>:int)|- bot
          
          P[<<print_array_1052@337:1>@340:0>](<k_make_array_u_1321@349:1>:int,<k_make_array_u_1321@349:0>:int),
          ((<k_make_array_u_1321@349:0> >= <k_make_array_u_1321@349:1>) &&
           ((<k_make_array_u_1321@349:1> > 0) && ((0 <= <k_make_array_u_1321@349:0>) && (<fail_1893@352:0> = 1))))
          |- P[<fail_1893@352:0>](<fail_1893@352:0>:int)
          
          P[<print_array_1052@337:4>](<print_array_1052@337:0>:int,<print_array_1052@337:2>:int,<<print_array_1052@337:1>@340:0>:int),
          (<<print_array_1052@337:1>@340:0> < <print_array_1052@337:2>)
          |- P[<<print_array_1052@337:1>@340:0>](<print_array_1052@337:0>:int,
                                                 <<print_array_1052@337:1>@340:0>:int)
          
          
          ((<print_array_1052@337:0> = <print_array_1052@337:2>) &&
           ((<print_array_1052@337:0> > 0) && (<print_array_1052@337:4> = 0)))
          |- P[<print_array_1052@337:4>](<print_array_1052@337:0>:int,
                                         <print_array_1052@337:2>:int,
                                         <print_array_1052@337:4>:int)
          
          P[<bcopy_1046@257:4>](<bcopy_1046@324:0>:int,<bcopy_1046@324:1>:int,var690:int),
          P[<<<bcopy_1046@257:2>@260:1>@280:0>](<bcopy_1046@324:0>:int,<bcopy_1046@324:1>:int,var691:int,<f_bcopy_1887@322:3>:int),
          (((1 + var691) = <bcopy_1046@324:4>) &&
           (((1 + var690) = <bcopy_1046@324:4>) && (<bcopy_1046@324:4> < (1 + <bcopy_1046@324:1>))))
          |- P[<bcopy_1046@324:4>](<bcopy_1046@324:0>:int,<bcopy_1046@324:1>:int,
                                   <bcopy_1046@324:4>:int)
          
          P[<<bcopy_1046@257:3>@290:0>](<bcopy_1046@257:0>:int,<bcopy_1046@257:0>:int,<<bcopy_1046@257:3>@290:0>:int),
          ((<bcopy_1046@257:0> = <bcopy_1046@257:1>) &&
           ((<bcopy_1046@257:0> > 0) &&
            ((<<bcopy_1046@257:3>@290:0> < <bcopy_1046@257:0>) &&
             ((0 <= <<bcopy_1046@257:3>@290:0>) && (<<<bcopy_1046@257:3>@290:1>@310:0> = 0)))))
          |- P[<<<bcopy_1046@257:3>@290:1>@310:0>](<bcopy_1046@257:0>:int,
                                                   <bcopy_1046@257:1>:int,
                                                   <<bcopy_1046@257:3>@290:0>:int,
                                                   <<<bcopy_1046@257:3>@290:1>@310:0>:int)
          
          P[<<<bcopy_1046@257:2>@260:1>@280:0>](<bcopy_1046@257:0>:int,<bcopy_1046@257:1>:int,<<bcopy_1046@257:3>@290:0>:int,var689:int),
          P[<bcopy_1046@257:4>](<bcopy_1046@257:0>:int,<bcopy_1046@257:1>:int,<<bcopy_1046@257:3>@290:0>:int),
          (<<bcopy_1046@257:3>@290:0> < <bcopy_1046@257:1>)
          |- P[<<bcopy_1046@257:3>@290:0>](<bcopy_1046@257:0>:int,<bcopy_1046@257:1>:int,
                                           <<bcopy_1046@257:3>@290:0>:int)
          
          P[<<bcopy_1046@257:2>@260:0>](<bcopy_1046@257:0>:int,<bcopy_1046@257:0>:int,<<bcopy_1046@257:2>@260:0>:int),
          ((<bcopy_1046@257:0> = <bcopy_1046@257:1>) &&
           ((<bcopy_1046@257:0> > 0) &&
            ((<<bcopy_1046@257:2>@260:0> < <bcopy_1046@257:0>) &&
             ((0 <= <<bcopy_1046@257:2>@260:0>) && (<<<bcopy_1046@257:2>@260:1>@280:0> = 0)))))
          |- P[<<<bcopy_1046@257:2>@260:1>@280:0>](<bcopy_1046@257:0>:int,
                                                   <bcopy_1046@257:1>:int,
                                                   <<bcopy_1046@257:2>@260:0>:int,
                                                   <<<bcopy_1046@257:2>@260:1>@280:0>:int)
          
          P[<bcopy_1046@257:4>](<bcopy_1046@257:0>:int,<bcopy_1046@257:1>:int,<<bcopy_1046@257:2>@260:0>:int),
          (<<bcopy_1046@257:2>@260:0> < <bcopy_1046@257:1>)
          |- P[<<bcopy_1046@257:2>@260:0>](<bcopy_1046@257:0>:int,<bcopy_1046@257:1>:int,
                                           <<bcopy_1046@257:2>@260:0>:int)
          
           ((<bcopy_1046@257:0> = <bcopy_1046@257:1>) && ((<bcopy_1046@257:0> > 0) && (<bcopy_1046@257:4> = 0)))
          |- P[<bcopy_1046@257:4>](<bcopy_1046@257:0>:int,<bcopy_1046@257:1>:int,
                                   <bcopy_1046@257:4>:int)Yhorn (Wed Sep 25 10:52:05 JST 2013)


(0=0) & (v_sep_fail_1893_sep_352_sep_0($604)) -> 1=0.
(($604-1=0) & (-$605<=0) & ($606>0) & ($605-$606>=0)) & (v_sep_print_array_1052_sep_337_sep_1_sep_340_sep_0($606,$605)) -> v_sep_fail_1893_sep_352_sep_0($604).
($607-$608<0) & (v_sep_print_array_1052_sep_337_sep_4($609,$608,$607)) -> v_sep_print_array_1052_sep_337_sep_1_sep_340_sep_0($609,$607).
($610=0) & ($609>0) & (-$608+$609=0) -> v_sep_print_array_1052_sep_337_sep_4($609,$608,$610).
(($611-$612-1<0) & (-$611+$613+1=0) & (-$611+$614+1=0)) & (v_sep_bcopy_1046_sep_257_sep_2_sep_260_sep_1_sep_280_sep_0($615,$612,$614,$616)) & (v_sep_bcopy_1046_sep_257_sep_4($615,$612,$613)) -> v_sep_bcopy_1046_sep_324_sep_4($615,$612,$611).
(($617=0) & (-$618<=0) & ($618-$619<0) & ($619>0) & ($619-$620=0)) & (v_sep_bcopy_1046_sep_257_sep_3_sep_290_sep_0($619,$619,$618)) -> v_sep_bcopy_1046_sep_257_sep_3_sep_290_sep_1_sep_310_sep_0($619,$620,$618,$617).
($618-$620<0) & (v_sep_bcopy_1046_sep_257_sep_4($619,$620,$618)) & (v_sep_bcopy_1046_sep_257_sep_2_sep_260_sep_1_sep_280_sep_0($619,$620,$618,$621)) -> v_sep_bcopy_1046_sep_257_sep_3_sep_290_sep_0($619,$620,$618).
(($622=0) & (-$623<=0) & (-$619+$623<0) & ($619>0) & ($619-$620=0)) & (v_sep_bcopy_1046_sep_257_sep_2_sep_260_sep_0($619,$619,$623)) -> v_sep_bcopy_1046_sep_257_sep_2_sep_260_sep_1_sep_280_sep_0($619,$620,$623,$622).
(-$620+$623<0) & (v_sep_bcopy_1046_sep_257_sep_4($619,$620,$623)) -> v_sep_bcopy_1046_sep_257_sep_2_sep_260_sep_0($619,$620,$623).
($624=0) & ($619>0) & ($619-$620=0) -> v_sep_bcopy_1046_sep_257_sep_4($619,$620,$624).


v_sep_bcopy_1046_sep_257_sep_2_sep_260_sep_0: X
v_sep_bcopy_1046_sep_257_sep_2_sep_260_sep_1_sep_280_sep_0: X
v_sep_bcopy_1046_sep_257_sep_3_sep_290_sep_0: X
v_sep_bcopy_1046_sep_257_sep_3_sep_290_sep_1_sep_310_sep_0: X
v_sep_bcopy_1046_sep_257_sep_4: X
v_sep_bcopy_1046_sep_324_sep_4: X
v_sep_fail_1893_sep_352_sep_0: X
v_sep_print_array_1052_sep_337_sep_1_sep_340_sep_0: X
v_sep_print_array_1052_sep_337_sep_4: X
.............
v_sep_bcopy_1046_sep_257_sep_2_sep_260_sep_0: X
v_sep_bcopy_1046_sep_257_sep_2_sep_260_sep_1_sep_280_sep_0: X
v_sep_bcopy_1046_sep_257_sep_3_sep_290_sep_0: X
v_sep_bcopy_1046_sep_257_sep_3_sep_290_sep_1_sep_310_sep_0: X
v_sep_bcopy_1046_sep_257_sep_4: X
v_sep_bcopy_1046_sep_324_sep_4: X
v_sep_fail_1893_sep_352_sep_0: X
v_sep_print_array_1052_sep_337_sep_1_sep_340_sep_0: X
v_sep_print_array_1052_sep_337_sep_4: X
........
v_sep_bcopy_1046_sep_257_sep_2_sep_260_sep_0: X
v_sep_bcopy_1046_sep_257_sep_2_sep_260_sep_1_sep_280_sep_0: X
v_sep_bcopy_1046_sep_257_sep_3_sep_290_sep_0: X
v_sep_bcopy_1046_sep_257_sep_3_sep_290_sep_1_sep_310_sep_0: X
v_sep_bcopy_1046_sep_257_sep_4: X
v_sep_bcopy_1046_sep_324_sep_4: X
v_sep_fail_1893_sep_352_sep_0: X
v_sep_print_array_1052_sep_337_sep_1_sep_340_sep_0: X
v_sep_print_array_1052_sep_337_sep_4: X
............
v_sep_bcopy_1046_sep_257_sep_2_sep_260_sep_0: X
v_sep_bcopy_1046_sep_257_sep_2_sep_260_sep_1_sep_280_sep_0: X
v_sep_bcopy_1046_sep_257_sep_3_sep_290_sep_0: X
v_sep_bcopy_1046_sep_257_sep_3_sep_290_sep_1_sep_310_sep_0: X
v_sep_bcopy_1046_sep_257_sep_4: X
v_sep_bcopy_1046_sep_324_sep_4: X
v_sep_fail_1893_sep_352_sep_0: X
v_sep_print_array_1052_sep_337_sep_1_sep_340_sep_0: X
v_sep_print_array_1052_sep_337_sep_4: X
.............(0=0) & (v_sep_fail_1893_sep_352_sep_0($604)) -> 1=0.
(($604-1=0) & (-$605<=0) & ($606>0) & ($605-$606>=0)) & (v_sep_print_array_1052_sep_337_sep_1_sep_340_sep_0($606,$605)) -> v_sep_fail_1893_sep_352_sep_0($604).
($607-$608<0) & (v_sep_print_array_1052_sep_337_sep_4($609,$608,$607)) -> v_sep_print_array_1052_sep_337_sep_1_sep_340_sep_0($609,$607).
($610=0) & ($609>0) & (-$608+$609=0) -> v_sep_print_array_1052_sep_337_sep_4($609,$608,$610).
(($611-$612-1<0) & (-$611+$613+1=0) & (-$611+$614+1=0)) & (v_sep_bcopy_1046_sep_257_sep_2_sep_260_sep_1_sep_280_sep_0($615,$612,$614,$616)) & (v_sep_bcopy_1046_sep_257_sep_4($615,$612,$613)) -> v_sep_bcopy_1046_sep_324_sep_4($615,$612,$611).
(($617=0) & (-$618<=0) & ($618-$619<0) & ($619>0) & ($619-$620=0)) & (v_sep_bcopy_1046_sep_257_sep_3_sep_290_sep_0($619,$619,$618)) -> v_sep_bcopy_1046_sep_257_sep_3_sep_290_sep_1_sep_310_sep_0($619,$620,$618,$617).
($618-$620<0) & (v_sep_bcopy_1046_sep_257_sep_4($619,$620,$618)) & (v_sep_bcopy_1046_sep_257_sep_2_sep_260_sep_1_sep_280_sep_0($619,$620,$618,$621)) -> v_sep_bcopy_1046_sep_257_sep_3_sep_290_sep_0($619,$620,$618).
(($622=0) & (-$623<=0) & (-$619+$623<0) & ($619>0) & ($619-$620=0)) & (v_sep_bcopy_1046_sep_257_sep_2_sep_260_sep_0($619,$619,$623)) -> v_sep_bcopy_1046_sep_257_sep_2_sep_260_sep_1_sep_280_sep_0($619,$620,$623,$622).
(-$620+$623<0) & (v_sep_bcopy_1046_sep_257_sep_4($619,$620,$623)) -> v_sep_bcopy_1046_sep_257_sep_2_sep_260_sep_0($619,$620,$623).
($624=0) & ($619>0) & ($619-$620=0) -> v_sep_bcopy_1046_sep_257_sep_4($619,$620,$624).

        solution:
          P[<<bcopy_1046@257:2>@260:0>]($679:int,$681:int,$683:int) = true
          P[<<<bcopy_1046@257:2>@260:1>@280:0>]($647:int,$649:int,$651:int,$653:int) = true
          P[<<bcopy_1046@257:3>@290:0>]($672:int,$674:int,$676:int) = true
          P[<<<bcopy_1046@257:3>@290:1>@310:0>]($663:int,$665:int,$667:int,$669:int) = true
          P[<bcopy_1046@257:4>]($656:int,$658:int,$660:int) = true
          P[<bcopy_1046@324:4>]($640:int,$642:int,$644:int) = true
          P[<fail_1893@352:0>]($625:bool) = false
          P[<<print_array_1052@337:1>@340:0>]($628:int,$630:int) = ((1 + $630) <= $628)
          P[<print_array_1052@337:4>]($633:int,$635:int,$637:int) = ((1 + $637) <= $633)
        
      end HcSolver.solve_ub(52045)[4] (0.043994 sec.)
      begin HcSolver.check_validity(52952)[4]
        input:
          P[<fail_1893@352:0>](<fail_1893@352:0>:bool)|- bot
          
          P[<<print_array_1052@337:1>@340:0>](<k_make_array_u_1321@349:1>:int,<k_make_array_u_1321@349:0>:int),
          ((0 <= <k_make_array_u_1321@349:0>) &&
           ((<k_make_array_u_1321@349:1> > 0) &&
            ((<k_make_array_u_1321@349:0> >= <k_make_array_u_1321@349:1>) && <fail_1893@352:0>)))
          |- P[<fail_1893@352:0>](<fail_1893@352:0>:bool)
          
          P[<print_array_1052@337:4>](<print_array_1052@337:0>:int,<print_array_1052@337:2>:int,<<print_array_1052@337:1>@340:0>:int),
          (<<print_array_1052@337:1>@340:0> < <print_array_1052@337:2>)
          |- P[<<print_array_1052@337:1>@340:0>](<print_array_1052@337:0>:int,
                                                 <<print_array_1052@337:1>@340:0>:int)
          
          
          ((<print_array_1052@337:4> = 0) &&
           ((<print_array_1052@337:0> > 0) && (<print_array_1052@337:0> = <print_array_1052@337:2>)))
          |- P[<print_array_1052@337:4>](<print_array_1052@337:0>:int,
                                         <print_array_1052@337:2>:int,
                                         <print_array_1052@337:4>:int)
          
          P[<bcopy_1046@257:4>](<bcopy_1046@324:0>:int,<bcopy_1046@324:1>:int,(
                                -1 + <bcopy_1046@324:4>):int),
          P[<<<bcopy_1046@257:2>@260:1>@280:0>](<bcopy_1046@324:0>:int,<bcopy_1046@324:1>:int,(
                                                -1 + <bcopy_1046@324:4>):int,<f_bcopy_1887@322:3>:int),
          (<bcopy_1046@324:4> < (1 + <bcopy_1046@324:1>))
          |- P[<bcopy_1046@324:4>](<bcopy_1046@324:0>:int,<bcopy_1046@324:1>:int,
                                   <bcopy_1046@324:4>:int)
          
          P[<<bcopy_1046@257:3>@290:0>](<bcopy_1046@257:0>:int,<bcopy_1046@257:0>:int,<<bcopy_1046@257:3>@290:0>:int),
          ((<<<bcopy_1046@257:3>@290:1>@310:0> = 0) &&
           ((0 <= <<bcopy_1046@257:3>@290:0>) &&
            ((<<bcopy_1046@257:3>@290:0> < <bcopy_1046@257:0>) &&
             ((<bcopy_1046@257:0> > 0) && (<bcopy_1046@257:0> = <bcopy_1046@257:1>)))))
          |- P[<<<bcopy_1046@257:3>@290:1>@310:0>](<bcopy_1046@257:0>:int,
                                                   <bcopy_1046@257:1>:int,
                                                   <<bcopy_1046@257:3>@290:0>:int,
                                                   <<<bcopy_1046@257:3>@290:1>@310:0>:int)
          
          P[<<<bcopy_1046@257:2>@260:1>@280:0>](<bcopy_1046@257:0>:int,<bcopy_1046@257:1>:int,<<bcopy_1046@257:3>@290:0>:int,var689:int),
          P[<bcopy_1046@257:4>](<bcopy_1046@257:0>:int,<bcopy_1046@257:1>:int,<<bcopy_1046@257:3>@290:0>:int),
          (<<bcopy_1046@257:3>@290:0> < <bcopy_1046@257:1>)
          |- P[<<bcopy_1046@257:3>@290:0>](<bcopy_1046@257:0>:int,<bcopy_1046@257:1>:int,
                                           <<bcopy_1046@257:3>@290:0>:int)
          
          P[<<bcopy_1046@257:2>@260:0>](<bcopy_1046@257:0>:int,<bcopy_1046@257:0>:int,<<bcopy_1046@257:2>@260:0>:int),
          ((<<<bcopy_1046@257:2>@260:1>@280:0> = 0) &&
           ((0 <= <<bcopy_1046@257:2>@260:0>) &&
            ((<<bcopy_1046@257:2>@260:0> < <bcopy_1046@257:0>) &&
             ((<bcopy_1046@257:0> > 0) && (<bcopy_1046@257:0> = <bcopy_1046@257:1>)))))
          |- P[<<<bcopy_1046@257:2>@260:1>@280:0>](<bcopy_1046@257:0>:int,
                                                   <bcopy_1046@257:1>:int,
                                                   <<bcopy_1046@257:2>@260:0>:int,
                                                   <<<bcopy_1046@257:2>@260:1>@280:0>:int)
          
          P[<bcopy_1046@257:4>](<bcopy_1046@257:0>:int,<bcopy_1046@257:1>:int,<<bcopy_1046@257:2>@260:0>:int),
          (<<bcopy_1046@257:2>@260:0> < <bcopy_1046@257:1>)
          |- P[<<bcopy_1046@257:2>@260:0>](<bcopy_1046@257:0>:int,<bcopy_1046@257:1>:int,
                                           <<bcopy_1046@257:2>@260:0>:int)
          
           ((<bcopy_1046@257:4> = 0) && ((<bcopy_1046@257:0> > 0) && (<bcopy_1046@257:0> = <bcopy_1046@257:1>)))
          |- P[<bcopy_1046@257:4>](<bcopy_1046@257:0>:int,<bcopy_1046@257:1>:int,
                                   <bcopy_1046@257:4>:int)
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        
      end HcSolver.check_validity(52952)[4] (0.007999 sec.)
      solution:
        P[<<bcopy_1046@257:2>@260:0>]($679:int,$681:int,$683:int) = true
        P[<<<bcopy_1046@257:2>@260:1>@280:0>]($647:int,$649:int,$651:int,$653:int) = true
        P[<<bcopy_1046@257:3>@290:0>]($672:int,$674:int,$676:int) = true
        P[<<<bcopy_1046@257:3>@290:1>@310:0>]($663:int,$665:int,$667:int,$669:int) = true
        P[<bcopy_1046@257:4>]($656:int,$658:int,$660:int) = true
        P[<bcopy_1046@324:4>]($640:int,$642:int,$644:int) = true
        P[<fail_1893@352:0>]($625:bool) = false
        P[<<print_array_1052@337:1>@340:0>]($628:int,$630:int) = ((1 + $630) <= $628)
        P[<print_array_1052@337:4>]($633:int,$635:int,$637:int) = ((1 + $637) <= $633)
    end YhornInterface.solve(52044)[3] (0.051993 sec.)
    
  end RefTypeInfer.infer_etrs(43401)[2] (1.951703 sec.)
  refinement types:
    main_1884: X
    f_1891: v1:int -> X
    main_1057: v1:int -> (v2:unit -> X) -> X
    f_1042: v1:int ->
            (v2:int -> (v3:int -> X) -> X) ->
            (v6:int -> (v7:int -> X) -> X /\
             v10:int -> (v11:int -> X) -> X) -> (v14:unit -> X) -> X
    bcopy_1046: v1:int ->
                v2:int ->
                (v3:int -> (v4:int -> X) -> X) ->
                (v7:int -> (v8:int -> X) -> X) -> v11:int -> ((v12:int -> (v13:int -> X) -> X) -> X) -> X
    make_array_1030: v1:int -> v2:int -> (v3:int -> X) -> X
    k_make_array_u_1321: v1:int -> v2:int -> (v3:int -> X) -> v5:bool -> X
    k_make_array_u_1332: v1:int -> v2:int -> (v3:int -> X) -> v5:unit -> X
    f_bcopy_1886: v1:int ->
                  v2:int ->
                  v3:int ->
                  (v4:int -> (v5:int -> X) -> X) ->
                  ((v8:int -> (v9:int -> X) -> X) -> X) -> (v13:int -> (v14:int -> X) -> X) -> v17:int -> X
    update_1033: v1:int ->
                 v2:int -> (v3:int -> (v4:int -> X) -> X) -> v7:int -> ((v8:int -> (v9:int -> X) -> X) -> X) -> X
    make_array_1030: v1:int -> v2:int -> (v3:int -> X) -> X
    k_make_array_u_1321: v1:int -> v2:int -> (v3:int -> X) -> v5:bool -> X
    k_make_array_u_1332: v1:int -> v2:int -> (v3:int -> X) -> v5:unit -> X
    f_update_1885: v1:int ->
                   v2:int ->
                   v3:int -> (v4:int -> (v5:int -> X) -> X) -> ((v8:int -> (v9:int -> X) -> X) -> X) -> v13:int -> X
    f_bcopy_1887: v1:int ->
                  v2:int ->
                  v3:int ->
                  v4:int ->
                  ((v5:int -> (v6:int -> X) -> X) -> X) ->
                  (v10:int -> (v11:int -> X) -> X) -> (v14:int -> (v15:int -> X) -> X) -> X
    bcopy_1046: v1:int ->
                v2:int ->
                (v3:int -> (v4:int -> X) -> X) ->
                (v7:int -> (v8:int -> X) -> X) -> v11:int -> ((v12:int -> (v13:int -> X) -> X) -> X) -> X
    f_f_1890: v1:int -> (v2:int -> (v3:int -> X) -> X) -> (v6:unit -> X) -> (v8:int -> (v9:int -> X) -> X) -> X
    print_array_1052: v1:int ->
                      (v2:{v2:int | ((1 + v2) <= v1)} -> (v3:int -> X) -> X) ->
                      v6:int ->
                      (v7:int -> (v8:int -> X) -> X) -> v11:{v11:int | ((1 + v11) <= v1)} -> (v12:unit -> X) -> X
    make_array_1030: v1:int -> v2:int -> (v3:int -> X) -> X
    k_make_array_u_1321: v1:int -> v2:int -> (v3:int -> X) -> v5:bool -> X
    fail_1893: v1:{v1:bool | false} -> (v2:unit -> X) -> X
    a_1038: var779:int ->
            var778:int ->
            var777:int -> var776:int -> (var775:int -> (var774:int -> X) -> X) -> var771:int -> (var770:int -> X) -> X
    f_1892: var782:int -> var781:unit -> X
    f_print_array_1888: var797:int ->
                        var796:int ->
                        var795:int ->
                        (var794:int -> (var793:int -> X) -> X) ->
                        (var790:int -> (var789:int -> X) -> X) -> (var786:unit -> X) -> var784:int -> X
    f_print_array_1889: var813:int ->
                        var812:int ->
                        var811:int ->
                        var810:int ->
                        (var809:int -> (var808:int -> X) -> X) ->
                        (var805:int -> (var804:int -> X) -> X) -> (var801:unit -> X) -> var799:unit -> X
    print_int_1040: var817:int -> (var816:unit -> X) -> X
  abstraction types:
    main_1884: X
    f_1891: v1:int -> X
    main_1057: v1:int -> (v2:unit -> X) -> X
    f_1042: v1:int -> (v2:int -> (v3:int -> X) -> X) -> (var818:int -> (var819:int -> X) -> X) -> (v14:unit -> X) -> X
    bcopy_1046: var822:int ->
                var823:int ->
                (var824:int -> (var825:int -> X) -> X) ->
                (var828:int -> (var829:int -> X) -> X) ->
                var832:int -> ((var833:int -> (var834:int -> X) -> X) -> X) -> X
    make_array_1030: var844:int -> var845:int -> (var846:int -> X) -> X
    k_make_array_u_1321: var855:int -> var856:int -> (var857:int -> X) -> var859:bool -> X
    k_make_array_u_1332: var861:int -> var862:int -> (var863:int -> X) -> var865:unit -> X
    f_bcopy_1886: v1:int ->
                  v2:int ->
                  v3:int ->
                  (v4:int -> (v5:int -> X) -> X) ->
                  ((v8:int -> (v9:int -> X) -> X) -> X) -> (v13:int -> (v14:int -> X) -> X) -> v17:int -> X
    update_1033: v1:int ->
                 v2:int -> (v3:int -> (v4:int -> X) -> X) -> v7:int -> ((v8:int -> (v9:int -> X) -> X) -> X) -> X
    f_update_1885: v1:int ->
                   v2:int ->
                   v3:int -> (v4:int -> (v5:int -> X) -> X) -> ((v8:int -> (v9:int -> X) -> X) -> X) -> v13:int -> X
    f_bcopy_1887: v1:int ->
                  v2:int ->
                  v3:int ->
                  v4:int ->
                  ((v5:int -> (v6:int -> X) -> X) -> X) ->
                  (v10:int -> (v11:int -> X) -> X) -> (v14:int -> (v15:int -> X) -> X) -> X
    f_f_1890: v1:int -> (v2:int -> (v3:int -> X) -> X) -> (v6:unit -> X) -> (v8:int -> (v9:int -> X) -> X) -> X
    print_array_1052: v1:int ->
                      (v2:int[v2 -> ((1 + v2) <= v1)] -> (v3:int -> X) -> X) ->
                      v6:int ->
                      (v7:int -> (v8:int -> X) -> X) -> v11:int[v11 -> (
                                                                (1 + v11) <= v1)] -> (v12:unit -> X) -> X
    fail_1893: v1:bool -> (v2:unit -> X) -> X
    a_1038: var779:int ->
            var778:int ->
            var777:int -> var776:int -> (var775:int -> (var774:int -> X) -> X) -> var771:int -> (var770:int -> X) -> X
    f_1892: var782:int -> var781:unit -> X
    f_print_array_1888: var797:int ->
                        var796:int ->
                        var795:int ->
                        (var794:int -> (var793:int -> X) -> X) ->
                        (var790:int -> (var789:int -> X) -> X) -> (var786:unit -> X) -> var784:int -> X
    f_print_array_1889: var813:int ->
                        var812:int ->
                        var811:int ->
                        var810:int ->
                        (var809:int -> (var808:int -> X) -> X) ->
                        (var805:int -> (var804:int -> X) -> X) -> (var801:unit -> X) -> var799:unit -> X
    print_int_1040: var817:int -> (var816:unit -> X) -> X
  
end AbsTypeInfer.refine(43400)[1] (1.960702 sec.)
DONE!

Prefix of spurious counter-example::
0; 0; 0; 0; 1; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 1; 0; 1

Program with abstraction types (CEGAR-cycle 5)::
Main: main_1884
  main_1884 -> (rand_int f_1891)
  a_1038 i_1034 n_1035 x_1037 x_1386 des_1036 j_1039 k_update_a_1401 when (i_1034 = j_1039) -> (k_update_a_1401 x_1037)
  a_1038 i_1034 n_1035 x_1037 x_1386 des_1036 j_1039 k_update_a_1401 when (
      not (i_1034 = j_1039)) -> (des_1036 i_1034 k_update_a_1401)
  bcopy_1046 m_1043 m_1047 src_1048 des_1049 i_1050 k_f_bcopy_1535 when (i_1050 >= m_1047) -> (k_f_bcopy_1535 des_1049)
  bcopy_1046 m_1043 m_1047 src_1048 des_1049 i_1050 k_f_bcopy_1535 when (
      not (i_1050 >= m_1047)) -> (src_1048 i_1050 (f_bcopy_1886 i_1050 m_1043 m_1047 des_1049 k_f_bcopy_1535 src_1048))
  f_1042 m_1043 src_1044 des_1045 k_f_1476 ->
      (bcopy_1046 m_1043 m_1043 src_1044 des_1045 0 (f_f_1890 m_1043 des_1045 k_f_1476))
  f_1891 x_1859 -> (main_1057 x_1859 (f_1892 x_1859))
  f_1892 x_1859 x_1856 -> end
  f_bcopy_1886 i_1050 m_1043 m_1047 des_1049 k_f_bcopy_1535 src_1048 x_1591 ->
      (update_1033 i_1050 m_1047 des_1049 x_1591 (f_bcopy_1887 i_1050 m_1043 m_1047 x_1591 k_f_bcopy_1535 src_1048))
  f_bcopy_1887 i_1050 m_1043 m_1047 x_1591 k_f_bcopy_1535 src_1048 x_1547 ->
      (bcopy_1046 m_1043 m_1047 src_1048 x_1547 (i_1050 + 1) k_f_bcopy_1535)
  f_f_1890 m_1043 des_1045 k_f_1476 x_1715 -> (print_array_1052 m_1043 des_1045 m_1043 x_1715 0 k_f_1476)
  f_print_array_1888 i_1055 m_1043 m_1053 array_1054 des_1045 k_f_print_array_1664 x_1687 ->
      (print_int_1040 x_1687 (f_print_array_1889 i_1055 m_1043 m_1053 x_1687 array_1054 des_1045 k_f_print_array_1664))
  f_print_array_1889 i_1055 m_1043 m_1053 x_1687 array_1054 des_1045 k_f_print_array_1664 x_1667 ->
      (print_array_1052 m_1043 des_1045 m_1053 array_1054 (i_1055 + 1) k_f_print_array_1664)
  f_update_1885 i_1034 n_1035 x_1037 des_1036 k_update_1380 x_1386 ->
      (k_update_1380 (a_1038 i_1034 n_1035 x_1037 x_1386 des_1036))
  fail_1893 b k -> {fail} => (k ())
  k_make_array_u_1321 i_1032 n_1031 k_make_array_1315 b_1333 when b_1333 ->
      (k_make_array_u_1332 i_1032 n_1031 k_make_array_1315 ())
  k_make_array_u_1321 i_1032 n_1031 k_make_array_1315 b_1333 when (not b_1333) ->
      (fail_1893 true (k_make_array_u_1332 i_1032 n_1031 k_make_array_1315))
  k_make_array_u_1332 i_1032 n_1031 k_make_array_1315 x_1318 -> (k_make_array_1315 0)
  main_1057 n_1058 k_main_1787 when (n_1058 > 0) ->
      (f_1042 n_1058 (make_array_1030 n_1058) (make_array_1030 n_1058) k_main_1787)
  main_1057 n_1058 k_main_1787 when (not (n_1058 > 0)) -> (k_main_1787 ())
  make_array_1030 n_1031 i_1032 k_make_array_1315 when (0 <= i_1032) ->
      (k_make_array_u_1321 i_1032 n_1031 k_make_array_1315 (i_1032 < n_1031))
  make_array_1030 n_1031 i_1032 k_make_array_1315 when (not (0 <= i_1032)) ->
      (k_make_array_u_1321 i_1032 n_1031 k_make_array_1315 false)
  print_array_1052 m_1043 des_1045 m_1053 array_1054 i_1055 k_f_print_array_1664 when (
      i_1055 >= m_1053) -> (k_f_print_array_1664 ())
  print_array_1052 m_1043 des_1045 m_1053 array_1054 i_1055 k_f_print_array_1664 when (
      not (i_1055 >= m_1053)) ->
      (des_1045 i_1055 (f_print_array_1888 i_1055 m_1043 m_1053 array_1054 des_1045 k_f_print_array_1664))
  print_int_1040 n_1041 k_print_int_1432 -> (k_print_int_1432 ())
  update_1033 i_1034 n_1035 des_1036 x_1037 k_update_1380 ->
      (des_1036 i_1034 (f_update_1885 i_1034 n_1035 x_1037 des_1036 k_update_1380))
Types:
  main_1884 : X
  bcopy_1046 : (x_1:int ->
                x_2:int ->
                (x_4:int[x_4 >= 0; x_2 >= x_4 + 1] -> (int[x_4 >= 0; x_1 >= x_4 + 1] -> X) -> X) ->
                (x_10:int[x_10 >= 0; x_1 >= -x_2 + 2*x_10 + 2] -> (int -> X) -> X) ->
                x_15:int[x_15 >= 0; x_2 >= x_15 + 1] -> ((int -> (int -> X) -> X) -> X) -> X)
  fail_1893 : (x_1:bool[x_1] -> (unit -> X) -> X)
  print_array_1052 : (x_1:int ->
                      (x_3:int[x_1 >= x_3 + 1; x_3 >= 0] -> (int -> X) -> X) ->
                      int -> (int -> (int -> X) -> X) -> x_15:int[x_1 >= x_15 + 1; x_15 >= 0] -> (unit -> X) -> X)
  
(5-1) Abstracting ... DONE!

(5-2) Checking HORS ... DONE!

Error trace::
  main_1884 ... --> 
  f_1891 ... --> 
  main_1057 [1/2] ... --> 
  f_1042 ... --> 
  bcopy_1046 [2/2] ... --> 
  make_array_1030 [1/2] ... --> 
  k_make_array_u_1321 [1/2] ... --> 
  k_make_array_u_1332 ... --> 
  f_bcopy_1886 ... --> 
  update_1033 ... --> 
  make_array_1030 [1/2] ... --> 
  k_make_array_u_1321 [1/2] ... --> 
  k_make_array_u_1332 ... --> 
  f_update_1885 ... --> 
  f_bcopy_1887 ... --> 
  bcopy_1046 [1/2] ... --> 
  f_f_1890 ... --> 
  print_array_1052 [2/2] ... --> 
  make_array_1030 [1/2] ... --> 
  k_make_array_u_1321 [1/2] ... --> 
  k_make_array_u_1332 ... --> 
  f_print_array_1888 ... --> 
  print_int_1040 ... --> 
  f_print_array_1889 ... --> 
  print_array_1052 [2/2] ... --> 
  make_array_1030 [1/2] ... --> 
  k_make_array_u_1321 [2/2] ... --> 
  fail_1893 ... --> fail -->
  ERROR!

Spurious counter-example::
  0; 0; 0; 0; 1; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 1; 0; 0; 0; 0; 0; 0; 1; 0; 1; 0

(5-3) Checking counter-example ... DONE!

(5-4) Discovering predicates ... 
begin AbsTypeInfer.refine(62065)[1]
  program:
    main_1884  | true = ((Random.int 0) f_1891)
    a_1038 i_1034 n_1035 x_1037 x_1386 des_1036 j_1039 k_update_a_1401 | (
    i_1034 = j_1039) = (k_update_a_1401 x_1037)
    a_1038 i_1034 n_1035 x_1037 x_1386 des_1036 j_1039 k_update_a_1401 | (
    not (i_1034 = j_1039)) = (des_1036 i_1034
                                       k_update_a_1401)
    bcopy_1046 m_1043 m_1047 src_1048 des_1049 i_1050 k_f_bcopy_1535 | (
    i_1050 >= m_1047) = (k_f_bcopy_1535 des_1049)
    bcopy_1046 m_1043 m_1047 src_1048 des_1049 i_1050 k_f_bcopy_1535 | (
    not (i_1050 >= m_1047)) = (src_1048 i_1050
                                        (f_bcopy_1886 i_1050
                                                      m_1043
                                                      m_1047
                                                      des_1049
                                                      k_f_bcopy_1535
                                                      src_1048))
    f_1042 m_1043 src_1044 des_1045 k_f_1476 | true = (bcopy_1046
                                                         m_1043
                                                         m_1043
                                                         src_1044
                                                         des_1045
                                                         0
                                                         (f_f_1890 m_1043
                                                                   des_1045
                                                                   k_f_1476))
    f_1891 x_1859 | true = (main_1057 x_1859
                                      (f_1892 x_1859))
    f_1892 x_1859 x_1856 | true = end
    f_bcopy_1886 i_1050 m_1043 m_1047 des_1049 k_f_bcopy_1535 src_1048 x_1591 | true = (
    update_1033 i_1050
                m_1047
                des_1049
                x_1591
                (f_bcopy_1887 i_1050
                              m_1043
                              m_1047
                              x_1591
                              k_f_bcopy_1535
                              src_1048))
    f_bcopy_1887 i_1050 m_1043 m_1047 x_1591 k_f_bcopy_1535 src_1048 x_1547 | true = (
    bcopy_1046 m_1043
               m_1047
               src_1048
               x_1547
               (i_1050 + 1)
               k_f_bcopy_1535)
    f_f_1890 m_1043 des_1045 k_f_1476 x_1715 | true = (print_array_1052 m_1043
                                                                    des_1045
                                                                    m_1043
                                                                    x_1715
                                                                    0
                                                                    k_f_1476)
    f_print_array_1888 i_1055 m_1043 m_1053 array_1054 des_1045 k_f_print_array_1664 x_1687 | true = (
    print_int_1040 x_1687
                   (f_print_array_1889 i_1055
                                       m_1043
                                       m_1053
                                       x_1687
                                       array_1054
                                       des_1045
                                       k_f_print_array_1664))
    f_print_array_1889 i_1055 m_1043 m_1053 x_1687 array_1054 des_1045 k_f_print_array_1664 x_1667 | true = (
    print_array_1052 m_1043
                     des_1045
                     m_1053
                     array_1054
                     (i_1055 + 1)
                     k_f_print_array_1664)
    f_update_1885 i_1034 n_1035 x_1037 des_1036 k_update_1380 x_1386 | true = (
    k_update_1380 (a_1038 i_1034
                          n_1035
                          x_1037
                          x_1386
                          des_1036))
    fail_1893 b k | true = (fail ())
    k_make_array_u_1321 i_1032 n_1031 k_make_array_1315 b_1333 | b_1333 = (
    k_make_array_u_1332 i_1032
                        n_1031
                        k_make_array_1315
                        ())
    k_make_array_u_1321 i_1032 n_1031 k_make_array_1315 b_1333 | (not b_1333) = (
    fail_1893 true
              (k_make_array_u_1332 i_1032
                                   n_1031
                                   k_make_array_1315))
    k_make_array_u_1332 i_1032 n_1031 k_make_array_1315 x_1318 | true = (
    k_make_array_1315 0)
    main_1057 n_1058 k_main_1787 | (n_1058 > 0) = (f_1042
                                                     n_1058
                                                     (make_array_1030 n_1058)
                                                     (make_array_1030 n_1058)
                                                     k_main_1787)
    main_1057 n_1058 k_main_1787 | (not (n_1058 > 0)) = (k_main_1787 ())
    make_array_1030 n_1031 i_1032 k_make_array_1315 | (0 <= i_1032) = (
    k_make_array_u_1321 i_1032
                        n_1031
                        k_make_array_1315
                        (i_1032 < n_1031))
    make_array_1030 n_1031 i_1032 k_make_array_1315 | (not (0 <= i_1032)) = (
    k_make_array_u_1321 i_1032
                        n_1031
                        k_make_array_1315
                        false)
    print_array_1052 m_1043 des_1045 m_1053 array_1054 i_1055 k_f_print_array_1664 | (
    i_1055 >= m_1053) = (k_f_print_array_1664 ())
    print_array_1052 m_1043 des_1045 m_1053 array_1054 i_1055 k_f_print_array_1664 | (
    not (i_1055 >= m_1053)) = (des_1045
                                 i_1055
                                 (f_print_array_1888 i_1055
                                                     m_1043
                                                     m_1053
                                                     array_1054
                                                     des_1045
                                                     k_f_print_array_1664))
    print_int_1040 n_1041 k_print_int_1432 | true = (k_print_int_1432 ())
    update_1033 i_1034 n_1035 des_1036 x_1037 k_update_1380 | true = (
    des_1036 i_1034
             (f_update_1885 i_1034
                            n_1035
                            x_1037
                            des_1036
                            k_update_1380))
    main_1884:X
    a_1038:int -> int -> int -> int -> (int -> (int -> X) -> X) -> int -> (int -> X) -> X
    bcopy_1046:int ->
               int ->
               (int -> (int -> X) -> X) -> (int -> (int -> X) -> X) -> int -> ((int -> (int -> X) -> X) -> X) -> X
    f_1042:int -> (int -> (int -> X) -> X) -> (int -> (int -> X) -> X) -> (unit -> X) -> X
    f_1891:int -> X
    f_1892:int -> unit -> X
    f_bcopy_1886:int ->
                 int ->
                 int ->
                 (int -> (int -> X) -> X) -> ((int -> (int -> X) -> X) -> X) -> (int -> (int -> X) -> X) -> int -> X
    f_bcopy_1887:int ->
                 int ->
                 int ->
                 int -> ((int -> (int -> X) -> X) -> X) -> (int -> (int -> X) -> X) -> (int -> (int -> X) -> X) -> X
    f_f_1890:int -> (int -> (int -> X) -> X) -> (unit -> X) -> (int -> (int -> X) -> X) -> X
    f_print_array_1888:int ->
                       int -> int -> (int -> (int -> X) -> X) -> (int -> (int -> X) -> X) -> (unit -> X) -> int -> X
    f_print_array_1889:int ->
                       int ->
                       int -> int -> (int -> (int -> X) -> X) -> (int -> (int -> X) -> X) -> (unit -> X) -> unit -> X
    f_update_1885:int -> int -> int -> (int -> (int -> X) -> X) -> ((int -> (int -> X) -> X) -> X) -> int -> X
    fail_1893:bool -> (unit -> X) -> X
    k_make_array_u_1321:int -> int -> (int -> X) -> bool -> X
    k_make_array_u_1332:int -> int -> (int -> X) -> unit -> X
    main_1057:int -> (unit -> X) -> X
    make_array_1030:int -> int -> (int -> X) -> X
    print_array_1052:int -> (int -> (int -> X) -> X) -> int -> (int -> (int -> X) -> X) -> int -> (unit -> X) -> X
    print_int_1040:int -> (unit -> X) -> X
    update_1033:int -> int -> (int -> (int -> X) -> X) -> int -> ((int -> (int -> X) -> X) -> X) -> X
  inlined functions: a_1038,f_1042,f_1891,f_1892,f_bcopy_1886,f_bcopy_1887,f_f_1890,f_print_array_1888,f_print_array_1889,f_update_1885,k_make_array_u_1321,k_make_array_u_1332,main_1057,make_array_1030,print_int_1040,update_1033
  counterexample: 0:0:0:0:1:0:0:0:0:0:0:0:0:0:0:0:0:1:0:0:0:0:0:0:1:0:1:0
  error traces:
    [true.nop(<f_1891@358:0> = var867)
     [true.(<main_1057@360:0> = <f_1891@358:0>)
      [(<main_1057@360:0> > 0).(<f_1042@363:0> = <main_1057@360:0>)
       [true.
        ((<bcopy_1046@365:0> = <f_1042@363:0>) && ((<bcopy_1046@365:1> = <f_1042@363:0>) && (<bcopy_1046@365:4> = 0)))
        [(not (<bcopy_1046@365:4> >= <bcopy_1046@365:1>)).(<<bcopy_1046@365:2>@368:0> = <bcopy_1046@365:4>)
         [true.(<<f_1042@363:1>@370:0> = <<bcopy_1046@365:2>@368:0>)
          [true.((<make_array_1030@372:0> = <main_1057@360:0>) && (<make_array_1030@372:1> = <<f_1042@363:1>@370:0>))
           [(0 <= <make_array_1030@372:1>).
            ((<k_make_array_u_1321@375:0> = <make_array_1030@372:1>) &&
             ((<k_make_array_u_1321@375:1> = <make_array_1030@372:0>) &&
              (<k_make_array_u_1321@375:3> = (<make_array_1030@372:1> < <make_array_1030@372:0>))))
            [<k_make_array_u_1321@375:3>.
             ((<k_make_array_u_1332@378:0> = <k_make_array_u_1321@375:0>) &&
              ((<k_make_array_u_1332@378:1> = <k_make_array_u_1321@375:1>) && (<k_make_array_u_1332@378:3> = ())))
             [true.(<<k_make_array_u_1332@378:2>@380:0> = 0)
              [true.(<<k_make_array_u_1321@375:2>@382:0> = <<k_make_array_u_1332@378:2>@380:0>)
               [true.(<<make_array_1030@372:2>@384:0> = <<k_make_array_u_1321@375:2>@382:0>)
                [true.(<<<f_1042@363:1>@370:1>@386:0> = <<make_array_1030@372:2>@384:0>)
                 [true.(<<<bcopy_1046@365:2>@368:1>@388:0> = <<<f_1042@363:1>@370:1>@386:0>)
                  [true.
                   ((<f_bcopy_1886@390:0> = <bcopy_1046@365:4>) &&
                    ((<f_bcopy_1886@390:1> = <bcopy_1046@365:0>) &&
                     ((<f_bcopy_1886@390:2> = <bcopy_1046@365:1>) &&
                      (<f_bcopy_1886@390:6> = <<<bcopy_1046@365:2>@368:1>@388:0>))))
                   [true.
                    ((<update_1033@392:0> = <f_bcopy_1886@390:0>) &&
                     ((<update_1033@392:1> = <f_bcopy_1886@390:2>) && (<update_1033@392:3> = <f_bcopy_1886@390:6>)))
                    [true.(<<update_1033@392:2>@394:0> = <update_1033@392:0>)
                     [true.(<<f_bcopy_1886@390:3>@396:0> = <<update_1033@392:2>@394:0>)
                      [true.(<<bcopy_1046@365:3>@398:0> = <<f_bcopy_1886@390:3>@396:0>)
                       [true.(<<f_1042@363:2>@400:0> = <<bcopy_1046@365:3>@398:0>)
                        [true.
                         ((<make_array_1030@402:0> = <main_1057@360:0>) &&
                          (<make_array_1030@402:1> = <<f_1042@363:2>@400:0>))
                         [(0 <= <make_array_1030@402:1>).
                          ((<k_make_array_u_1321@405:0> = <make_array_1030@402:1>) &&
                           ((<k_make_array_u_1321@405:1> = <make_array_1030@402:0>) &&
                            (<k_make_array_u_1321@405:3> = (<make_array_1030@402:1> < <make_array_1030@402:0>))))
                          [<k_make_array_u_1321@405:3>.
                           ((<k_make_array_u_1332@408:0> = <k_make_array_u_1321@405:0>) &&
                            ((<k_make_array_u_1332@408:1> = <k_make_array_u_1321@405:1>) &&
                             (<k_make_array_u_1332@408:3> = ())))
                           [true.(<<k_make_array_u_1332@408:2>@410:0> = 0)
                            [true.(<<k_make_array_u_1321@405:2>@412:0> = <<k_make_array_u_1332@408:2>@410:0>)
                             [true.(<<make_array_1030@402:2>@414:0> = <<k_make_array_u_1321@405:2>@412:0>)
                              [true.(<<<f_1042@363:2>@400:1>@416:0> = <<make_array_1030@402:2>@414:0>)
                               [true.(<<<bcopy_1046@365:3>@398:1>@418:0> = <<<f_1042@363:2>@400:1>@416:0>)
                                [true.(<<<f_bcopy_1886@390:3>@396:1>@420:0> = <<<bcopy_1046@365:3>@398:1>@418:0>)
                                 [true.(<<<update_1033@392:2>@394:1>@422:0> = <<<f_bcopy_1886@390:3>@396:1>@420:0>)
                                  [true.
                                   ((<f_update_1885@424:0> = <update_1033@392:0>) &&
                                    ((<f_update_1885@424:1> = <update_1033@392:1>) &&
                                     ((<f_update_1885@424:2> = <update_1033@392:3>) &&
                                      (<f_update_1885@424:5> = <<<update_1033@392:2>@394:1>@422:0>))))
                                   [true.true
                                    [true.true
                                     [true.
                                      ((<f_bcopy_1887@430:0> = <f_bcopy_1886@390:0>) &&
                                       ((<f_bcopy_1887@430:1> = <f_bcopy_1886@390:1>) &&
                                        ((<f_bcopy_1887@430:2> = <f_bcopy_1886@390:2>) &&
                                         (<f_bcopy_1887@430:3> = <f_bcopy_1886@390:6>))))
                                      [true.
                                       ((<bcopy_1046@432:0> = <f_bcopy_1887@430:1>) &&
                                        ((<bcopy_1046@432:1> = <f_bcopy_1887@430:2>) &&
                                         (<bcopy_1046@432:4> = (<f_bcopy_1887@430:0> + 1))))
                                       [(<bcopy_1046@432:4> >= <bcopy_1046@432:1>).true
                                        [true.true
                                         [true.true
                                          [true.true
                                           [true.(<f_f_1890@443:0> = <f_1042@363:0>)
                                            [true.
                                             ((<print_array_1052@445:0> = <f_f_1890@443:0>) &&
                                              ((<print_array_1052@445:2> = <f_f_1890@443:0>) &&
                                               (<print_array_1052@445:4> = 0)))
                                             [(not (<print_array_1052@445:4> >= <print_array_1052@445:2>)).
                                              (<<print_array_1052@445:1>@448:0> = <print_array_1052@445:4>)
                                              [true.(<<f_f_1890@443:1>@450:0> = <<print_array_1052@445:1>@448:0>)
                                               [true.(<<f_1042@363:2>@452:0> = <<f_f_1890@443:1>@450:0>)
                                                [true.
                                                 ((<make_array_1030@454:0> = <main_1057@360:0>) &&
                                                  (<make_array_1030@454:1> = <<f_1042@363:2>@452:0>))
                                                 [(0 <= <make_array_1030@454:1>).
                                                  ((<k_make_array_u_1321@457:0> = <make_array_1030@454:1>) &&
                                                   ((<k_make_array_u_1321@457:1> = <make_array_1030@454:0>) &&
                                                    (<k_make_array_u_1321@457:3> =
                                                     (<make_array_1030@454:1> < <make_array_1030@454:0>))))
                                                  [<k_make_array_u_1321@457:3>.
                                                   ((<k_make_array_u_1332@460:0> = <k_make_array_u_1321@457:0>) &&
                                                    ((<k_make_array_u_1332@460:1> = <k_make_array_u_1321@457:1>) &&
                                                     (<k_make_array_u_1332@460:3> = ())))
                                                   [true.(<<k_make_array_u_1332@460:2>@462:0> = 0)
                                                    [true.
                                                     (<<k_make_array_u_1321@457:2>@464:0> =
                                                      <<k_make_array_u_1332@460:2>@462:0>)
                                                     [true.
                                                      (<<make_array_1030@454:2>@466:0> =
                                                       <<k_make_array_u_1321@457:2>@464:0>)
                                                      [true.
                                                       (<<<f_1042@363:2>@452:1>@468:0> =
                                                        <<make_array_1030@454:2>@466:0>)
                                                       [true.
                                                        (<<<f_f_1890@443:1>@450:1>@470:0> =
                                                         <<<f_1042@363:2>@452:1>@468:0>)
                                                        [true.
                                                         (<<<print_array_1052@445:1>@448:1>@472:0> =
                                                          <<<f_f_1890@443:1>@450:1>@470:0>)
                                                         [true.
                                                          ((<f_print_array_1888@474:0> = <print_array_1052@445:4>) &&
                                                           ((<f_print_array_1888@474:1> = <print_array_1052@445:0>) &&
                                                            ((<f_print_array_1888@474:2> = <print_array_1052@445:2>) &&
                                                             (<f_print_array_1888@474:6> =
                                                              <<<print_array_1052@445:1>@448:1>@472:0>))))
                                                          [true.(<print_int_1040@476:0> = <f_print_array_1888@474:6>)
                                                           [true.(<<print_int_1040@476:1>@478:0> = ())
                                                            [true.
                                                             ((<f_print_array_1889@480:0> = <f_print_array_1888@474:0>) &&
                                                              ((<f_print_array_1889@480:1> = <f_print_array_1888@474:1>) &&
                                                               ((<f_print_array_1889@480:2> =
                                                                 <f_print_array_1888@474:2>) &&
                                                                ((<f_print_array_1889@480:3> =
                                                                  <f_print_array_1888@474:6>) &&
                                                                 (<f_print_array_1889@480:7> =
                                                                  <<print_int_1040@476:1>@478:0>)))))
                                                             [true.
                                                              ((<print_array_1052@482:0> = <f_print_array_1889@480:1>) &&
                                                               ((<print_array_1052@482:2> = <f_print_array_1889@480:2>) &&
                                                                (<print_array_1052@482:4> =
                                                                 (<f_print_array_1889@480:0> + 1))))
                                                              [(not
                                                                  (<print_array_1052@482:4> >= <print_array_1052@482:2>)).
                                                               (<<print_array_1052@482:1>@485:0> =
                                                                <print_array_1052@482:4>)
                                                               [true.
                                                                (<<f_print_array_1889@480:5>@487:0> =
                                                                 <<print_array_1052@482:1>@485:0>)
                                                                [true.
                                                                 (<<f_print_array_1888@474:4>@489:0> =
                                                                  <<f_print_array_1889@480:5>@487:0>)
                                                                 [true.
                                                                  (<<print_array_1052@445:1>@491:0> =
                                                                   <<f_print_array_1888@474:4>@489:0>)
                                                                  [true.
                                                                   (<<f_f_1890@443:1>@493:0> =
                                                                    <<print_array_1052@445:1>@491:0>)
                                                                   [true.
                                                                    (
                                                                    <<f_1042@363:2>@495:0> = <<f_f_1890@443:1>@493:0>)
                                                                    [
                                                                    true.
                                                                    (
                                                                    (
                                                                    <make_array_1030@497:0> = <main_1057@360:0>) &&
                                                                    (
                                                                    <make_array_1030@497:1> = <<f_1042@363:2>@495:0>))
                                                                    [
                                                                    (
                                                                    0 <= <make_array_1030@497:1>).
                                                                    (
                                                                    (
                                                                    <k_make_array_u_1321@500:0> =
                                                                    <make_array_1030@497:1>) &&
                                                                    (
                                                                    (
                                                                    <k_make_array_u_1321@500:1> =
                                                                    <make_array_1030@497:0>) &&
                                                                    (
                                                                    <k_make_array_u_1321@500:3> =
                                                                    (
                                                                    <make_array_1030@497:1> < <make_array_1030@497:0>))))
                                                                    [
                                                                    (
                                                                    not <k_make_array_u_1321@500:3>).
                                                                    (
                                                                    <fail_1893@503:0> = true)[
                                                                    true.error
  begin RefTypeInfer.infer_etrs(62066)[2]
    horn clauses:
      P[<fail_1893@503:0>](<fail_1893@503:0>:bool)|- bot
      
      P[<k_make_array_u_1321@500:3>](<k_make_array_u_1321@500:0>:int,<k_make_array_u_1321@500:1>:int,false:bool),
      <fail_1893@503:0> |- P[<fail_1893@503:0>](<fail_1893@503:0>:bool)
      
      P[<make_array_1030@497:1>](<k_make_array_u_1321@500:1>:int,<k_make_array_u_1321@500:0>:int),
      ((0 <= <k_make_array_u_1321@500:0>) &&
       (<k_make_array_u_1321@500:3> = (<k_make_array_u_1321@500:0> < <k_make_array_u_1321@500:1>)))
      |- P[<k_make_array_u_1321@500:3>](<k_make_array_u_1321@500:0>:int,
                                        <k_make_array_u_1321@500:1>:int,
                                        <k_make_array_u_1321@500:3>:bool)
      
      P[<main_1057@360:0>](<make_array_1030@497:0>:int),
      P[<<f_1042@363:2>@495:0>](<make_array_1030@497:0>:int,<make_array_1030@497:1>:int), (
      <make_array_1030@497:0> > 0)
      |- P[<make_array_1030@497:1>](<make_array_1030@497:0>:int,<make_array_1030@497:1>:int)
      
      P[<f_1042@363:0>](<f_1042@363:0>:int),
      P[<<f_f_1890@443:1>@493:0>](<f_1042@363:0>:int,<<f_1042@363:2>@495:0>:int)|- P[<<f_1042@363:2>@495:0>](
      <f_1042@363:0>:int,<<f_1042@363:2>@495:0>:int)
      
      P[<f_f_1890@443:0>](<f_f_1890@443:0>:int),
      P[<<print_array_1052@445:1>@491:0>](<f_f_1890@443:0>:int,<<f_f_1890@443:1>@493:0>:int)|- P[<<f_f_1890@443:1>@493:0>](
      <f_f_1890@443:0>:int,<<f_f_1890@443:1>@493:0>:int)
      
      P[<print_array_1052@445:4>](<print_array_1052@445:0>:int,<f_print_array_1888@474:2>:int,<<print_array_1052@445:1>@448:0>:int),
      P[<<f_print_array_1888@474:4>@489:0>](<<print_array_1052@445:1>@448:0>:int,<print_array_1052@445:0>:int,<f_print_array_1888@474:2>:int,<<print_array_1052@445:1>@491:0>:int),
      (<<print_array_1052@445:1>@448:0> < <f_print_array_1888@474:2>)
      |- P[<<print_array_1052@445:1>@491:0>](<print_array_1052@445:0>:int,
                                             <<print_array_1052@445:1>@491:0>:int)
      
      P[<f_print_array_1888@474:6>](<f_print_array_1888@474:0>:int,<f_print_array_1888@474:1>:int,<f_print_array_1888@474:2>:int,<print_int_1040@476:0>:int),
      P[<<f_print_array_1889@480:5>@487:0>](<f_print_array_1888@474:0>:int,<f_print_array_1888@474:1>:int,<f_print_array_1888@474:2>:int,<print_int_1040@476:0>:int,<<f_print_array_1888@474:4>@489:0>:int)|- P[<<f_print_array_1888@474:4>@489:0>](
      <f_print_array_1888@474:0>:int,<f_print_array_1888@474:1>:int,<f_print_array_1888@474:2>:int,
      <<f_print_array_1888@474:4>@489:0>:int)
      
      P[<f_print_array_1889@480:7>](<f_print_array_1889@480:0>:int,<f_print_array_1889@480:1>:int,<f_print_array_1889@480:2>:int,<f_print_array_1889@480:3>:int,<f_print_array_1889@480:7>:unit),
      P[<<print_array_1052@482:1>@485:0>](<f_print_array_1889@480:1>:int,<<f_print_array_1889@480:5>@487:0>:int)|- P[<<f_print_array_1889@480:5>@487:0>](
      <f_print_array_1889@480:0>:int,<f_print_array_1889@480:1>:int,<f_print_array_1889@480:2>:int,
      <f_print_array_1889@480:3>:int,<<f_print_array_1889@480:5>@487:0>:int)
      
      P[<print_array_1052@482:4>](<print_array_1052@482:0>:int,<print_array_1052@482:2>:int,<<print_array_1052@482:1>@485:0>:int),
      (<<print_array_1052@482:1>@485:0> < <print_array_1052@482:2>)
      |- P[<<print_array_1052@482:1>@485:0>](<print_array_1052@482:0>:int,
                                             <<print_array_1052@482:1>@485:0>:int)
      
      P[<f_print_array_1889@480:7>]((-1 + <print_array_1052@482:4>):int,<print_array_1052@482:0>:int,<print_array_1052@482:2>:int,<f_print_array_1889@480:3>:int,<f_print_array_1889@480:7>:unit)|- P[<print_array_1052@482:4>](
      <print_array_1052@482:0>:int,<print_array_1052@482:2>:int,<print_array_1052@482:4>:int)
      
      P[<f_print_array_1888@474:6>](<f_print_array_1889@480:0>:int,<f_print_array_1889@480:1>:int,<f_print_array_1889@480:2>:int,<f_print_array_1889@480:3>:int),
      P[<<print_int_1040@476:1>@478:0>](<f_print_array_1889@480:3>:int,<<print_int_1040@476:1>@478:0>:unit)|- P[<f_print_array_1889@480:7>](
      <f_print_array_1889@480:0>:int,<f_print_array_1889@480:1>:int,<f_print_array_1889@480:2>:int,
      <f_print_array_1889@480:3>:int,<f_print_array_1889@480:7>:unit)
      
      P[<print_int_1040@476:0>](<print_int_1040@476:0>:int)|- P[<<print_int_1040@476:1>@478:0>](
      <print_int_1040@476:0>:int,<<print_int_1040@476:1>@478:0>:unit)
      
      P[<f_print_array_1888@474:6>](<f_print_array_1888@474:0>:int,<f_print_array_1888@474:1>:int,<f_print_array_1888@474:2>:int,<print_int_1040@476:0>:int)|- P[<print_int_1040@476:0>](
      <print_int_1040@476:0>:int)
      
      P[<print_array_1052@445:4>](<f_print_array_1888@474:1>:int,<f_print_array_1888@474:2>:int,<f_print_array_1888@474:0>:int),
      P[<<<print_array_1052@445:1>@448:1>@472:0>](<f_print_array_1888@474:1>:int,<f_print_array_1888@474:0>:int,<f_print_array_1888@474:6>:int),
      (<f_print_array_1888@474:0> < <f_print_array_1888@474:2>)
      |- P[<f_print_array_1888@474:6>](<f_print_array_1888@474:0>:int,
                                       <f_print_array_1888@474:1>:int,
                                       <f_print_array_1888@474:2>:int,
                                       <f_print_array_1888@474:6>:int)
      
      P[<f_f_1890@443:0>](<print_array_1052@445:0>:int),
      P[<<<f_f_1890@443:1>@450:1>@470:0>](<print_array_1052@445:0>:int,<<print_array_1052@445:1>@448:0>:int,<<<print_array_1052@445:1>@448:1>@472:0>:int)|- P[<<<print_array_1052@445:1>@448:1>@472:0>](
      <print_array_1052@445:0>:int,<<print_array_1052@445:1>@448:0>:int,
      <<<print_array_1052@445:1>@448:1>@472:0>:int)
      
      P[<f_1042@363:0>](<f_f_1890@443:0>:int),
      P[<<<f_1042@363:2>@452:1>@468:0>](<f_f_1890@443:0>:int,<<f_f_1890@443:1>@450:0>:int,<<<f_f_1890@443:1>@450:1>@470:0>:int),
      P[<f_f_1890@443:0>](<f_f_1890@443:0>:int)|- P[<<<f_f_1890@443:1>@450:1>@470:0>](
      <f_f_1890@443:0>:int,<<f_f_1890@443:1>@450:0>:int,<<<f_f_1890@443:1>@450:1>@470:0>:int)
      
      P[<main_1057@360:0>](<f_1042@363:0>:int),
      P[<<make_array_1030@454:2>@466:0>](<f_1042@363:0>:int,<<f_1042@363:2>@452:0>:int,<<<f_1042@363:2>@452:1>@468:0>:int),
      P[<f_1042@363:0>](<f_1042@363:0>:int), (<f_1042@363:0> > 0)
      |- P[<<<f_1042@363:2>@452:1>@468:0>](<f_1042@363:0>:int,<<f_1042@363:2>@452:0>:int,
                                           <<<f_1042@363:2>@452:1>@468:0>:int)
      
      P[<make_array_1030@454:1>](<make_array_1030@454:0>:int,<make_array_1030@454:1>:int),
      P[<<k_make_array_u_1321@457:2>@464:0>](<make_array_1030@454:1>:int,<make_array_1030@454:0>:int,<<make_array_1030@454:2>@466:0>:int),
      (0 <= <make_array_1030@454:1>)
      |- P[<<make_array_1030@454:2>@466:0>](<make_array_1030@454:0>:int,
                                            <make_array_1030@454:1>:int,
                                            <<make_array_1030@454:2>@466:0>:int)
      
      P[<k_make_array_u_1321@457:3>](<k_make_array_u_1321@457:0>:int,<k_make_array_u_1321@457:1>:int,true:bool),
      P[<<k_make_array_u_1332@460:2>@462:0>](<k_make_array_u_1321@457:0>:int,<k_make_array_u_1321@457:1>:int,<<k_make_array_u_1321@457:2>@464:0>:int)|- P[<<k_make_array_u_1321@457:2>@464:0>](
      <k_make_array_u_1321@457:0>:int,<k_make_array_u_1321@457:1>:int,
      <<k_make_array_u_1321@457:2>@464:0>:int)
      
      P[<k_make_array_u_1332@460:3>](<k_make_array_u_1332@460:0>:int,<k_make_array_u_1332@460:1>:int,<k_make_array_u_1332@460:3>:unit),
      (<<k_make_array_u_1332@460:2>@462:0> = 0)
      |- P[<<k_make_array_u_1332@460:2>@462:0>](<k_make_array_u_1332@460:0>:int,
                                                <k_make_array_u_1332@460:1>:int,
                                                <<k_make_array_u_1332@460:2>@462:0>:int)
      
      P[<k_make_array_u_1321@457:3>](<k_make_array_u_1332@460:0>:int,<k_make_array_u_1332@460:1>:int,true:bool)|- P[<k_make_array_u_1332@460:3>](
      <k_make_array_u_1332@460:0>:int,<k_make_array_u_1332@460:1>:int,
      <k_make_array_u_1332@460:3>:unit)
      
      P[<make_array_1030@454:1>](<k_make_array_u_1321@457:1>:int,<k_make_array_u_1321@457:0>:int),
      ((0 <= <k_make_array_u_1321@457:0>) &&
       (<k_make_array_u_1321@457:3> = (<k_make_array_u_1321@457:0> < <k_make_array_u_1321@457:1>)))
      |- P[<k_make_array_u_1321@457:3>](<k_make_array_u_1321@457:0>:int,
                                        <k_make_array_u_1321@457:1>:int,
                                        <k_make_array_u_1321@457:3>:bool)
      
      P[<main_1057@360:0>](<make_array_1030@454:0>:int),
      P[<<f_1042@363:2>@452:0>](<make_array_1030@454:0>:int,<make_array_1030@454:1>:int), (
      <make_array_1030@454:0> > 0)
      |- P[<make_array_1030@454:1>](<make_array_1030@454:0>:int,<make_array_1030@454:1>:int)
      
      P[<f_1042@363:0>](<f_1042@363:0>:int),
      P[<<f_f_1890@443:1>@450:0>](<f_1042@363:0>:int,<<f_1042@363:2>@452:0>:int)|- P[<<f_1042@363:2>@452:0>](
      <f_1042@363:0>:int,<<f_1042@363:2>@452:0>:int)
      
      P[<f_f_1890@443:0>](<f_f_1890@443:0>:int),
      P[<<print_array_1052@445:1>@448:0>](<f_f_1890@443:0>:int,<<f_f_1890@443:1>@450:0>:int)|- P[<<f_f_1890@443:1>@450:0>](
      <f_f_1890@443:0>:int,<<f_f_1890@443:1>@450:0>:int)
      
      P[<print_array_1052@445:4>](<print_array_1052@445:0>:int,<print_array_1052@445:2>:int,<<print_array_1052@445:1>@448:0>:int),
      (<<print_array_1052@445:1>@448:0> < <print_array_1052@445:2>)
      |- P[<<print_array_1052@445:1>@448:0>](<print_array_1052@445:0>:int,
                                             <<print_array_1052@445:1>@448:0>:int)
      
      P[<f_f_1890@443:0>](<print_array_1052@445:0>:int),
      ((<print_array_1052@445:4> = 0) && (<print_array_1052@445:0> = <print_array_1052@445:2>))
      |- P[<print_array_1052@445:4>](<print_array_1052@445:0>:int,<print_array_1052@445:2>:int,
                                     <print_array_1052@445:4>:int)
      
      P[<f_1042@363:0>](<f_f_1890@443:0>:int)|- P[<f_f_1890@443:0>](<f_f_1890@443:0>:int)
      
      P[<f_bcopy_1887@430:3>]((-1 + <bcopy_1046@432:4>):int,<bcopy_1046@432:0>:int,<bcopy_1046@432:1>:int,<f_bcopy_1887@430:3>:int)|- P[<bcopy_1046@432:4>](
      <bcopy_1046@432:0>:int,<bcopy_1046@432:1>:int,<bcopy_1046@432:4>:int)
      
      P[<f_bcopy_1886@390:6>](<f_bcopy_1887@430:0>:int,<f_bcopy_1887@430:1>:int,<f_bcopy_1887@430:2>:int,<f_bcopy_1887@430:3>:int)|- P[<f_bcopy_1887@430:3>](
      <f_bcopy_1887@430:0>:int,<f_bcopy_1887@430:1>:int,<f_bcopy_1887@430:2>:int,
      <f_bcopy_1887@430:3>:int)
      
      P[<update_1033@392:3>](<f_update_1885@424:0>:int,<f_update_1885@424:1>:int,<f_update_1885@424:2>:int),
      P[<<<update_1033@392:2>@394:1>@422:0>](<f_update_1885@424:0>:int,<f_update_1885@424:1>:int,<f_update_1885@424:0>:int,<f_update_1885@424:5>:int)|- P[<f_update_1885@424:5>](
      <f_update_1885@424:0>:int,<f_update_1885@424:1>:int,<f_update_1885@424:2>:int,
      <f_update_1885@424:5>:int)
      
      P[<f_bcopy_1886@390:6>](<update_1033@392:0>:int,<f_bcopy_1886@390:1>:int,<update_1033@392:1>:int,<update_1033@392:3>:int),
      P[<<<f_bcopy_1886@390:3>@396:1>@420:0>](<update_1033@392:0>:int,<f_bcopy_1886@390:1>:int,<update_1033@392:1>:int,<<update_1033@392:2>@394:0>:int,<<<update_1033@392:2>@394:1>@422:0>:int)|- P[<<<update_1033@392:2>@394:1>@422:0>](
      <update_1033@392:0>:int,<update_1033@392:1>:int,<<update_1033@392:2>@394:0>:int,
      <<<update_1033@392:2>@394:1>@422:0>:int)
      
      P[<bcopy_1046@365:4>](<f_bcopy_1886@390:1>:int,<f_bcopy_1886@390:2>:int,<f_bcopy_1886@390:0>:int),
      P[<<<bcopy_1046@365:3>@398:1>@418:0>](<f_bcopy_1886@390:1>:int,<f_bcopy_1886@390:2>:int,<<f_bcopy_1886@390:3>@396:0>:int,<<<f_bcopy_1886@390:3>@396:1>@420:0>:int),
      (<f_bcopy_1886@390:0> < <f_bcopy_1886@390:2>)
      |- P[<<<f_bcopy_1886@390:3>@396:1>@420:0>](<f_bcopy_1886@390:0>:int,
                                                 <f_bcopy_1886@390:1>:int,
                                                 <f_bcopy_1886@390:2>:int,
                                                 <<f_bcopy_1886@390:3>@396:0>:int,
                                                 <<<f_bcopy_1886@390:3>@396:1>@420:0>:int)
      
      P[<f_1042@363:0>](<bcopy_1046@365:0>:int),
      P[<<<f_1042@363:2>@400:1>@416:0>](<bcopy_1046@365:0>:int,<<bcopy_1046@365:3>@398:0>:int,<<<bcopy_1046@365:3>@398:1>@418:0>:int),
      (<bcopy_1046@365:0> = <bcopy_1046@365:1>)
      |- P[<<<bcopy_1046@365:3>@398:1>@418:0>](<bcopy_1046@365:0>:int,
                                               <bcopy_1046@365:1>:int,
                                               <<bcopy_1046@365:3>@398:0>:int,
                                               <<<bcopy_1046@365:3>@398:1>@418:0>:int)
      
      P[<main_1057@360:0>](<f_1042@363:0>:int),
      P[<<make_array_1030@402:2>@414:0>](<f_1042@363:0>:int,<<f_1042@363:2>@400:0>:int,<<<f_1042@363:2>@400:1>@416:0>:int),
      P[<f_1042@363:0>](<f_1042@363:0>:int), (<f_1042@363:0> > 0)
      |- P[<<<f_1042@363:2>@400:1>@416:0>](<f_1042@363:0>:int,<<f_1042@363:2>@400:0>:int,
                                           <<<f_1042@363:2>@400:1>@416:0>:int)
      
      P[<make_array_1030@402:1>](<make_array_1030@402:0>:int,<make_array_1030@402:1>:int),
      P[<<k_make_array_u_1321@405:2>@412:0>](<make_array_1030@402:1>:int,<make_array_1030@402:0>:int,<<make_array_1030@402:2>@414:0>:int),
      (0 <= <make_array_1030@402:1>)
      |- P[<<make_array_1030@402:2>@414:0>](<make_array_1030@402:0>:int,
                                            <make_array_1030@402:1>:int,
                                            <<make_array_1030@402:2>@414:0>:int)
      
      P[<k_make_array_u_1321@405:3>](<k_make_array_u_1321@405:0>:int,<k_make_array_u_1321@405:1>:int,true:bool),
      P[<<k_make_array_u_1332@408:2>@410:0>](<k_make_array_u_1321@405:0>:int,<k_make_array_u_1321@405:1>:int,<<k_make_array_u_1321@405:2>@412:0>:int)|- P[<<k_make_array_u_1321@405:2>@412:0>](
      <k_make_array_u_1321@405:0>:int,<k_make_array_u_1321@405:1>:int,
      <<k_make_array_u_1321@405:2>@412:0>:int)
      
      P[<k_make_array_u_1332@408:3>](<k_make_array_u_1332@408:0>:int,<k_make_array_u_1332@408:1>:int,<k_make_array_u_1332@408:3>:unit),
      (<<k_make_array_u_1332@408:2>@410:0> = 0)
      |- P[<<k_make_array_u_1332@408:2>@410:0>](<k_make_array_u_1332@408:0>:int,
                                                <k_make_array_u_1332@408:1>:int,
                                                <<k_make_array_u_1332@408:2>@410:0>:int)
      
      P[<k_make_array_u_1321@405:3>](<k_make_array_u_1332@408:0>:int,<k_make_array_u_1332@408:1>:int,true:bool)|- P[<k_make_array_u_1332@408:3>](
      <k_make_array_u_1332@408:0>:int,<k_make_array_u_1332@408:1>:int,
      <k_make_array_u_1332@408:3>:unit)
      
      P[<make_array_1030@402:1>](<k_make_array_u_1321@405:1>:int,<k_make_array_u_1321@405:0>:int),
      ((0 <= <k_make_array_u_1321@405:0>) &&
       (<k_make_array_u_1321@405:3> = (<k_make_array_u_1321@405:0> < <k_make_array_u_1321@405:1>)))
      |- P[<k_make_array_u_1321@405:3>](<k_make_array_u_1321@405:0>:int,
                                        <k_make_array_u_1321@405:1>:int,
                                        <k_make_array_u_1321@405:3>:bool)
      
      P[<main_1057@360:0>](<make_array_1030@402:0>:int),
      P[<<f_1042@363:2>@400:0>](<make_array_1030@402:0>:int,<make_array_1030@402:1>:int), (
      <make_array_1030@402:0> > 0)
      |- P[<make_array_1030@402:1>](<make_array_1030@402:0>:int,<make_array_1030@402:1>:int)
      
      P[<f_1042@363:0>](<f_1042@363:0>:int),
      P[<<bcopy_1046@365:3>@398:0>](<f_1042@363:0>:int,<f_1042@363:0>:int,<<f_1042@363:2>@400:0>:int)|- P[<<f_1042@363:2>@400:0>](
      <f_1042@363:0>:int,<<f_1042@363:2>@400:0>:int)
      
      P[<bcopy_1046@365:4>](<bcopy_1046@365:0>:int,<bcopy_1046@365:1>:int,<<bcopy_1046@365:2>@368:0>:int),
      P[<<f_bcopy_1886@390:3>@396:0>](<<bcopy_1046@365:2>@368:0>:int,<bcopy_1046@365:0>:int,<bcopy_1046@365:1>:int,<<bcopy_1046@365:3>@398:0>:int),
      (<<bcopy_1046@365:2>@368:0> < <bcopy_1046@365:1>)
      |- P[<<bcopy_1046@365:3>@398:0>](<bcopy_1046@365:0>:int,<bcopy_1046@365:1>:int,
                                       <<bcopy_1046@365:3>@398:0>:int)
      
      P[<f_bcopy_1886@390:6>](<f_bcopy_1886@390:0>:int,<f_bcopy_1886@390:1>:int,<f_bcopy_1886@390:2>:int,<update_1033@392:3>:int),
      P[<<update_1033@392:2>@394:0>](<f_bcopy_1886@390:0>:int,<f_bcopy_1886@390:2>:int,<<f_bcopy_1886@390:3>@396:0>:int)|- P[<<f_bcopy_1886@390:3>@396:0>](
      <f_bcopy_1886@390:0>:int,<f_bcopy_1886@390:1>:int,<f_bcopy_1886@390:2>:int,
      <<f_bcopy_1886@390:3>@396:0>:int)
      
      P[<update_1033@392:3>](<update_1033@392:0>:int,<update_1033@392:1>:int,<update_1033@392:3>:int),
      (<<update_1033@392:2>@394:0> = <update_1033@392:0>)
      |- P[<<update_1033@392:2>@394:0>](<update_1033@392:0>:int,<update_1033@392:1>:int,
                                        <<update_1033@392:2>@394:0>:int)
      
      P[<f_bcopy_1886@390:6>](<update_1033@392:0>:int,<f_bcopy_1886@390:1>:int,<update_1033@392:1>:int,<update_1033@392:3>:int)|- P[<update_1033@392:3>](
      <update_1033@392:0>:int,<update_1033@392:1>:int,<update_1033@392:3>:int)
      
      P[<bcopy_1046@365:4>](<f_bcopy_1886@390:1>:int,<f_bcopy_1886@390:2>:int,<f_bcopy_1886@390:0>:int),
      P[<<<bcopy_1046@365:2>@368:1>@388:0>](<f_bcopy_1886@390:1>:int,<f_bcopy_1886@390:2>:int,<f_bcopy_1886@390:0>:int,<f_bcopy_1886@390:6>:int),
      (<f_bcopy_1886@390:0> < <f_bcopy_1886@390:2>)
      |- P[<f_bcopy_1886@390:6>](<f_bcopy_1886@390:0>:int,<f_bcopy_1886@390:1>:int,
                                 <f_bcopy_1886@390:2>:int,<f_bcopy_1886@390:6>:int)
      
      P[<f_1042@363:0>](<bcopy_1046@365:0>:int),
      P[<<<f_1042@363:1>@370:1>@386:0>](<bcopy_1046@365:0>:int,<<bcopy_1046@365:2>@368:0>:int,<<<bcopy_1046@365:2>@368:1>@388:0>:int),
      (<bcopy_1046@365:0> = <bcopy_1046@365:1>)
      |- P[<<<bcopy_1046@365:2>@368:1>@388:0>](<bcopy_1046@365:0>:int,
                                               <bcopy_1046@365:1>:int,
                                               <<bcopy_1046@365:2>@368:0>:int,
                                               <<<bcopy_1046@365:2>@368:1>@388:0>:int)
      
      P[<main_1057@360:0>](<f_1042@363:0>:int),
      P[<<make_array_1030@372:2>@384:0>](<f_1042@363:0>:int,<<f_1042@363:1>@370:0>:int,<<<f_1042@363:1>@370:1>@386:0>:int),
      P[<f_1042@363:0>](<f_1042@363:0>:int), (<f_1042@363:0> > 0)
      |- P[<<<f_1042@363:1>@370:1>@386:0>](<f_1042@363:0>:int,<<f_1042@363:1>@370:0>:int,
                                           <<<f_1042@363:1>@370:1>@386:0>:int)
      
      P[<make_array_1030@372:1>](<make_array_1030@372:0>:int,<make_array_1030@372:1>:int),
      P[<<k_make_array_u_1321@375:2>@382:0>](<make_array_1030@372:1>:int,<make_array_1030@372:0>:int,<<make_array_1030@372:2>@384:0>:int),
      (0 <= <make_array_1030@372:1>)
      |- P[<<make_array_1030@372:2>@384:0>](<make_array_1030@372:0>:int,
                                            <make_array_1030@372:1>:int,
                                            <<make_array_1030@372:2>@384:0>:int)
      
      P[<k_make_array_u_1321@375:3>](<k_make_array_u_1321@375:0>:int,<k_make_array_u_1321@375:1>:int,true:bool),
      P[<<k_make_array_u_1332@378:2>@380:0>](<k_make_array_u_1321@375:0>:int,<k_make_array_u_1321@375:1>:int,<<k_make_array_u_1321@375:2>@382:0>:int)|- P[<<k_make_array_u_1321@375:2>@382:0>](
      <k_make_array_u_1321@375:0>:int,<k_make_array_u_1321@375:1>:int,
      <<k_make_array_u_1321@375:2>@382:0>:int)
      
      P[<k_make_array_u_1332@378:3>](<k_make_array_u_1332@378:0>:int,<k_make_array_u_1332@378:1>:int,<k_make_array_u_1332@378:3>:unit),
      (<<k_make_array_u_1332@378:2>@380:0> = 0)
      |- P[<<k_make_array_u_1332@378:2>@380:0>](<k_make_array_u_1332@378:0>:int,
                                                <k_make_array_u_1332@378:1>:int,
                                                <<k_make_array_u_1332@378:2>@380:0>:int)
      
      P[<k_make_array_u_1321@375:3>](<k_make_array_u_1332@378:0>:int,<k_make_array_u_1332@378:1>:int,true:bool)|- P[<k_make_array_u_1332@378:3>](
      <k_make_array_u_1332@378:0>:int,<k_make_array_u_1332@378:1>:int,
      <k_make_array_u_1332@378:3>:unit)
      
      P[<make_array_1030@372:1>](<k_make_array_u_1321@375:1>:int,<k_make_array_u_1321@375:0>:int),
      ((0 <= <k_make_array_u_1321@375:0>) &&
       (<k_make_array_u_1321@375:3> = (<k_make_array_u_1321@375:0> < <k_make_array_u_1321@375:1>)))
      |- P[<k_make_array_u_1321@375:3>](<k_make_array_u_1321@375:0>:int,
                                        <k_make_array_u_1321@375:1>:int,
                                        <k_make_array_u_1321@375:3>:bool)
      
      P[<main_1057@360:0>](<make_array_1030@372:0>:int),
      P[<<f_1042@363:1>@370:0>](<make_array_1030@372:0>:int,<make_array_1030@372:1>:int), (
      <make_array_1030@372:0> > 0)
      |- P[<make_array_1030@372:1>](<make_array_1030@372:0>:int,<make_array_1030@372:1>:int)
      
      P[<f_1042@363:0>](<f_1042@363:0>:int),
      P[<<bcopy_1046@365:2>@368:0>](<f_1042@363:0>:int,<f_1042@363:0>:int,<<f_1042@363:1>@370:0>:int)|- P[<<f_1042@363:1>@370:0>](
      <f_1042@363:0>:int,<<f_1042@363:1>@370:0>:int)
      
      P[<bcopy_1046@365:4>](<bcopy_1046@365:0>:int,<bcopy_1046@365:1>:int,<<bcopy_1046@365:2>@368:0>:int),
      (<<bcopy_1046@365:2>@368:0> < <bcopy_1046@365:1>)
      |- P[<<bcopy_1046@365:2>@368:0>](<bcopy_1046@365:0>:int,<bcopy_1046@365:1>:int,
                                       <<bcopy_1046@365:2>@368:0>:int)
      
      P[<f_1042@363:0>](<bcopy_1046@365:0>:int),
      ((<bcopy_1046@365:4> = 0) && (<bcopy_1046@365:0> = <bcopy_1046@365:1>))
      |- P[<bcopy_1046@365:4>](<bcopy_1046@365:0>:int,<bcopy_1046@365:1>:int,
                               <bcopy_1046@365:4>:int)
      
      P[<main_1057@360:0>](<f_1042@363:0>:int), (<f_1042@363:0> > 0) |- P[<f_1042@363:0>](<f_1042@363:0>:int)
      
      P[<f_1891@358:0>](<main_1057@360:0>:int)|- P[<main_1057@360:0>](<main_1057@360:0>:int)
      
      |- P[<f_1891@358:0>](<f_1891@358:0>:int)
    call trees:
      <main_1884@355>
        <f_1891@358>
          <main_1057@360>
            <f_1042@363>
              <bcopy_1046@365>
              </<bcopy_1046@365:2>@368>
            </<f_1042@363:1>@370>
            <make_array_1030@372>
              <k_make_array_u_1321@375>
                <k_make_array_u_1332@378>
                </<k_make_array_u_1332@378:2>@380>
              </<k_make_array_u_1321@375:2>@382>
            </<make_array_1030@372:2>@384>
            <<<f_1042@363:1>@370:1>@386>
              <<<bcopy_1046@365:2>@368:1>@388>
                <f_bcopy_1886@390>
                  <update_1033@392>
                  </<update_1033@392:2>@394>
                </<f_bcopy_1886@390:3>@396>
              </<bcopy_1046@365:3>@398>
            </<f_1042@363:2>@400>
            <make_array_1030@402>
              <k_make_array_u_1321@405>
                <k_make_array_u_1332@408>
                </<k_make_array_u_1332@408:2>@410>
              </<k_make_array_u_1321@405:2>@412>
            </<make_array_1030@402:2>@414>
            <<<f_1042@363:2>@400:1>@416>
              <<<bcopy_1046@365:3>@398:1>@418>
                <<<f_bcopy_1886@390:3>@396:1>@420>
                  <<<update_1033@392:2>@394:1>@422>
                    <f_update_1885@424>
                    </<f_update_1885@424:4>@426>
                  </<update_1033@392:4>@428>
                  <f_bcopy_1887@430>
                    <bcopy_1046@432>
                    </<bcopy_1046@432:5>@435>
                  </<f_bcopy_1887@430:4>@437>
                </<f_bcopy_1886@390:4>@439>
              </<bcopy_1046@365:5>@441>
              <f_f_1890@443>
                <print_array_1052@445>
                </<print_array_1052@445:1>@448>
              </<f_f_1890@443:1>@450>
            </<f_1042@363:2>@452>
            <make_array_1030@454>
              <k_make_array_u_1321@457>
                <k_make_array_u_1332@460>
                </<k_make_array_u_1332@460:2>@462>
              </<k_make_array_u_1321@457:2>@464>
            </<make_array_1030@454:2>@466>
            <<<f_1042@363:2>@452:1>@468>
              <<<f_f_1890@443:1>@450:1>@470>
                <<<print_array_1052@445:1>@448:1>@472>
                  <f_print_array_1888@474>
                    <print_int_1040@476>
                    </<print_int_1040@476:1>@478>
                    <f_print_array_1889@480>
                      <print_array_1052@482>
                      </<print_array_1052@482:1>@485>
                    </<f_print_array_1889@480:5>@487>
                  </<f_print_array_1888@474:4>@489>
                </<print_array_1052@445:1>@491>
              </<f_f_1890@443:1>@493>
            </<f_1042@363:2>@495>
            <make_array_1030@497>
              <k_make_array_u_1321@500>
                <fail_1893@503>
    inlined horn clauses:
      P[<fail_1893@503:0>](<fail_1893@503:0>:bool)|- bot
      
      P[<<print_array_1052@445:1>@491:0>](<k_make_array_u_1321@500:1>:int,<k_make_array_u_1321@500:0>:int),
      ((0 <= <k_make_array_u_1321@500:0>) &&
       ((<k_make_array_u_1321@500:1> > 0) &&
        ((<k_make_array_u_1321@500:0> >= <k_make_array_u_1321@500:1>) && <fail_1893@503:0>)))
      |- P[<fail_1893@503:0>](<fail_1893@503:0>:bool)
      
      P[<print_array_1052@445:4>](<print_array_1052@445:0>:int,<f_print_array_1888@474:2>:int,<<print_array_1052@445:1>@448:0>:int),
      P[<<<print_array_1052@445:1>@448:1>@472:0>](<print_array_1052@445:0>:int,<<print_array_1052@445:1>@448:0>:int,var880:int),
      P[<<print_array_1052@482:1>@485:0>](<print_array_1052@445:0>:int,<<print_array_1052@445:1>@491:0>:int),
      (<<print_array_1052@445:1>@448:0> < <f_print_array_1888@474:2>)
      |- P[<<print_array_1052@445:1>@491:0>](<print_array_1052@445:0>:int,
                                             <<print_array_1052@445:1>@491:0>:int)
      
      P[<print_array_1052@482:4>](<print_array_1052@482:0>:int,<print_array_1052@482:2>:int,<<print_array_1052@482:1>@485:0>:int),
      (<<print_array_1052@482:1>@485:0> < <print_array_1052@482:2>)
      |- P[<<print_array_1052@482:1>@485:0>](<print_array_1052@482:0>:int,
                                             <<print_array_1052@482:1>@485:0>:int)
      
      P[<print_array_1052@445:4>](<print_array_1052@482:0>:int,<print_array_1052@482:2>:int,(
                                  -1 + <print_array_1052@482:4>):int),
      P[<<<print_array_1052@445:1>@448:1>@472:0>](<print_array_1052@482:0>:int,(
                                                  -1 + <print_array_1052@482:4>):int,<f_print_array_1889@480:3>:int),
      (<print_array_1052@482:4> < (1 + <print_array_1052@482:2>))
      |- P[<print_array_1052@482:4>](<print_array_1052@482:0>:int,<print_array_1052@482:2>:int,
                                     <print_array_1052@482:4>:int)
      
      P[<<print_array_1052@445:1>@448:0>](<print_array_1052@445:0>:int,<<print_array_1052@445:1>@448:0>:int),
      ((<<<print_array_1052@445:1>@448:1>@472:0> = 0) &&
       ((0 <= <<print_array_1052@445:1>@448:0>) &&
        ((<<print_array_1052@445:1>@448:0> < <print_array_1052@445:0>) && (<print_array_1052@445:0> > 0))))
      |- P[<<<print_array_1052@445:1>@448:1>@472:0>](<print_array_1052@445:0>:int,
                                                     <<print_array_1052@445:1>@448:0>:int,
                                                     <<<print_array_1052@445:1>@448:1>@472:0>:int)
      
      P[<print_array_1052@445:4>](<print_array_1052@445:0>:int,<print_array_1052@445:2>:int,<<print_array_1052@445:1>@448:0>:int),
      (<<print_array_1052@445:1>@448:0> < <print_array_1052@445:2>)
      |- P[<<print_array_1052@445:1>@448:0>](<print_array_1052@445:0>:int,
                                             <<print_array_1052@445:1>@448:0>:int)
      
      
      ((<print_array_1052@445:4> = 0) &&
       ((<print_array_1052@445:0> > 0) && (<print_array_1052@445:0> = <print_array_1052@445:2>)))
      |- P[<print_array_1052@445:4>](<print_array_1052@445:0>:int,<print_array_1052@445:2>:int,
                                     <print_array_1052@445:4>:int)
      
      P[<bcopy_1046@365:4>](<bcopy_1046@432:0>:int,<bcopy_1046@432:1>:int,(
                            -1 + <bcopy_1046@432:4>):int),
      P[<<<bcopy_1046@365:2>@368:1>@388:0>](<bcopy_1046@432:0>:int,<bcopy_1046@432:1>:int,(
                                            -1 + <bcopy_1046@432:4>):int,<f_bcopy_1887@430:3>:int),
      (<bcopy_1046@432:4> < (1 + <bcopy_1046@432:1>))
      |- P[<bcopy_1046@432:4>](<bcopy_1046@432:0>:int,<bcopy_1046@432:1>:int,
                               <bcopy_1046@432:4>:int)
      
      P[<<bcopy_1046@365:3>@398:0>](<bcopy_1046@365:0>:int,<bcopy_1046@365:0>:int,<<bcopy_1046@365:3>@398:0>:int),
      ((<<<bcopy_1046@365:3>@398:1>@418:0> = 0) &&
       ((0 <= <<bcopy_1046@365:3>@398:0>) &&
        ((<<bcopy_1046@365:3>@398:0> < <bcopy_1046@365:0>) &&
         ((<bcopy_1046@365:0> > 0) && (<bcopy_1046@365:0> = <bcopy_1046@365:1>)))))
      |- P[<<<bcopy_1046@365:3>@398:1>@418:0>](<bcopy_1046@365:0>:int,
                                               <bcopy_1046@365:1>:int,
                                               <<bcopy_1046@365:3>@398:0>:int,
                                               <<<bcopy_1046@365:3>@398:1>@418:0>:int)
      
      P[<<<bcopy_1046@365:2>@368:1>@388:0>](<bcopy_1046@365:0>:int,<bcopy_1046@365:1>:int,<<bcopy_1046@365:3>@398:0>:int,var881:int),
      P[<bcopy_1046@365:4>](<bcopy_1046@365:0>:int,<bcopy_1046@365:1>:int,<<bcopy_1046@365:3>@398:0>:int),
      (<<bcopy_1046@365:3>@398:0> < <bcopy_1046@365:1>)
      |- P[<<bcopy_1046@365:3>@398:0>](<bcopy_1046@365:0>:int,<bcopy_1046@365:1>:int,
                                       <<bcopy_1046@365:3>@398:0>:int)
      
      P[<<bcopy_1046@365:2>@368:0>](<bcopy_1046@365:0>:int,<bcopy_1046@365:0>:int,<<bcopy_1046@365:2>@368:0>:int),
      ((<<<bcopy_1046@365:2>@368:1>@388:0> = 0) &&
       ((0 <= <<bcopy_1046@365:2>@368:0>) &&
        ((<<bcopy_1046@365:2>@368:0> < <bcopy_1046@365:0>) &&
         ((<bcopy_1046@365:0> > 0) && (<bcopy_1046@365:0> = <bcopy_1046@365:1>)))))
      |- P[<<<bcopy_1046@365:2>@368:1>@388:0>](<bcopy_1046@365:0>:int,
                                               <bcopy_1046@365:1>:int,
                                               <<bcopy_1046@365:2>@368:0>:int,
                                               <<<bcopy_1046@365:2>@368:1>@388:0>:int)
      
      P[<bcopy_1046@365:4>](<bcopy_1046@365:0>:int,<bcopy_1046@365:1>:int,<<bcopy_1046@365:2>@368:0>:int),
      (<<bcopy_1046@365:2>@368:0> < <bcopy_1046@365:1>)
      |- P[<<bcopy_1046@365:2>@368:0>](<bcopy_1046@365:0>:int,<bcopy_1046@365:1>:int,
                                       <<bcopy_1046@365:2>@368:0>:int)
      
       ((<bcopy_1046@365:4> = 0) && ((<bcopy_1046@365:0> > 0) && (<bcopy_1046@365:0> = <bcopy_1046@365:1>)))
      |- P[<bcopy_1046@365:4>](<bcopy_1046@365:0>:int,<bcopy_1046@365:1>:int,
                               <bcopy_1046@365:4>:int)
    begin ParamSubstInfer.infer(72730)[3]
      
    end ParamSubstInfer.infer(72730)[3] (1.796727 sec.)
    inferred extra parameters:
      
    begin RefTypeInfer.elim_coeffs(72732)[3]
      
    end RefTypeInfer.elim_coeffs(72732)[3] (0.004000 sec.)
    begin YhornInterface.solve(74075)[3]
      begin HcSolver.solve_ub(74076)[4]
        encoded:
          P[<fail_1893@503:0>](<fail_1893@503:0>:int)|- bot
          
          P[<<print_array_1052@445:1>@491:0>](<k_make_array_u_1321@500:1>:int,<k_make_array_u_1321@500:0>:int),
          ((0 <= <k_make_array_u_1321@500:0>) &&
           ((<k_make_array_u_1321@500:1> > 0) &&
            ((<k_make_array_u_1321@500:0> >= <k_make_array_u_1321@500:1>) && (<fail_1893@503:0> = 1))))
          |- P[<fail_1893@503:0>](<fail_1893@503:0>:int)
          
          P[<print_array_1052@445:4>](<print_array_1052@445:0>:int,<f_print_array_1888@474:2>:int,<<print_array_1052@445:1>@448:0>:int),
          P[<<<print_array_1052@445:1>@448:1>@472:0>](<print_array_1052@445:0>:int,<<print_array_1052@445:1>@448:0>:int,var880:int),
          P[<<print_array_1052@482:1>@485:0>](<print_array_1052@445:0>:int,<<print_array_1052@445:1>@491:0>:int),
          (<<print_array_1052@445:1>@448:0> < <f_print_array_1888@474:2>)
          |- P[<<print_array_1052@445:1>@491:0>](<print_array_1052@445:0>:int,
                                                 <<print_array_1052@445:1>@491:0>:int)
          
          P[<print_array_1052@482:4>](<print_array_1052@482:0>:int,<print_array_1052@482:2>:int,<<print_array_1052@482:1>@485:0>:int),
          (<<print_array_1052@482:1>@485:0> < <print_array_1052@482:2>)
          |- P[<<print_array_1052@482:1>@485:0>](<print_array_1052@482:0>:int,
                                                 <<print_array_1052@482:1>@485:0>:int)
          
          P[<print_array_1052@445:4>](<print_array_1052@482:0>:int,<print_array_1052@482:2>:int,(
                                      -1 + <print_array_1052@482:4>):int),
          P[<<<print_array_1052@445:1>@448:1>@472:0>](<print_array_1052@482:0>:int,(
                                                      -1 + <print_array_1052@482:4>):int,<f_print_array_1889@480:3>:int),
          (<print_array_1052@482:4> < (1 + <print_array_1052@482:2>))
          |- P[<print_array_1052@482:4>](<print_array_1052@482:0>:int,
                                         <print_array_1052@482:2>:int,
                                         <print_array_1052@482:4>:int)
          
          P[<<print_array_1052@445:1>@448:0>](<print_array_1052@445:0>:int,<<print_array_1052@445:1>@448:0>:int),
          ((<<<print_array_1052@445:1>@448:1>@472:0> = 0) &&
           ((0 <= <<print_array_1052@445:1>@448:0>) &&
            ((<<print_array_1052@445:1>@448:0> < <print_array_1052@445:0>) && (<print_array_1052@445:0> > 0))))
          |- P[<<<print_array_1052@445:1>@448:1>@472:0>](<print_array_1052@445:0>:int,
                                                         <<print_array_1052@445:1>@448:0>:int,
                                                         <<<print_array_1052@445:1>@448:1>@472:0>:int)
          
          P[<print_array_1052@445:4>](<print_array_1052@445:0>:int,<print_array_1052@445:2>:int,<<print_array_1052@445:1>@448:0>:int),
          (<<print_array_1052@445:1>@448:0> < <print_array_1052@445:2>)
          |- P[<<print_array_1052@445:1>@448:0>](<print_array_1052@445:0>:int,
                                                 <<print_array_1052@445:1>@448:0>:int)
          
          
          ((<print_array_1052@445:4> = 0) &&
           ((<print_array_1052@445:0> > 0) && (<print_array_1052@445:0> = <print_array_1052@445:2>)))
          |- P[<print_array_1052@445:4>](<print_array_1052@445:0>:int,
                                         <print_array_1052@445:2>:int,
                                         <print_array_1052@445:4>:int)
          
          P[<bcopy_1046@365:4>](<bcopy_1046@432:0>:int,<bcopy_1046@432:1>:int,(
                                -1 + <bcopy_1046@432:4>):int),
          P[<<<bcopy_1046@365:2>@368:1>@388:0>](<bcopy_1046@432:0>:int,<bcopy_1046@432:1>:int,(
                                                -1 + <bcopy_1046@432:4>):int,<f_bcopy_1887@430:3>:int),
          (<bcopy_1046@432:4> < (1 + <bcopy_1046@432:1>))
          |- P[<bcopy_1046@432:4>](<bcopy_1046@432:0>:int,<bcopy_1046@432:1>:int,
                                   <bcopy_1046@432:4>:int)
          
          P[<<bcopy_1046@365:3>@398:0>](<bcopy_1046@365:0>:int,<bcopy_1046@365:0>:int,<<bcopy_1046@365:3>@398:0>:int),
          ((<<<bcopy_1046@365:3>@398:1>@418:0> = 0) &&
           ((0 <= <<bcopy_1046@365:3>@398:0>) &&
            ((<<bcopy_1046@365:3>@398:0> < <bcopy_1046@365:0>) &&
             ((<bcopy_1046@365:0> > 0) && (<bcopy_1046@365:0> = <bcopy_1046@365:1>)))))
          |- P[<<<bcopy_1046@365:3>@398:1>@418:0>](<bcopy_1046@365:0>:int,
                                                   <bcopy_1046@365:1>:int,
                                                   <<bcopy_1046@365:3>@398:0>:int,
                                                   <<<bcopy_1046@365:3>@398:1>@418:0>:int)
          
          P[<<<bcopy_1046@365:2>@368:1>@388:0>](<bcopy_1046@365:0>:int,<bcopy_1046@365:1>:int,<<bcopy_1046@365:3>@398:0>:int,var881:int),
          P[<bcopy_1046@365:4>](<bcopy_1046@365:0>:int,<bcopy_1046@365:1>:int,<<bcopy_1046@365:3>@398:0>:int),
          (<<bcopy_1046@365:3>@398:0> < <bcopy_1046@365:1>)
          |- P[<<bcopy_1046@365:3>@398:0>](<bcopy_1046@365:0>:int,<bcopy_1046@365:1>:int,
                                           <<bcopy_1046@365:3>@398:0>:int)
          
          P[<<bcopy_1046@365:2>@368:0>](<bcopy_1046@365:0>:int,<bcopy_1046@365:0>:int,<<bcopy_1046@365:2>@368:0>:int),
          ((<<<bcopy_1046@365:2>@368:1>@388:0> = 0) &&
           ((0 <= <<bcopy_1046@365:2>@368:0>) &&
            ((<<bcopy_1046@365:2>@368:0> < <bcopy_1046@365:0>) &&
             ((<bcopy_1046@365:0> > 0) && (<bcopy_1046@365:0> = <bcopy_1046@365:1>)))))
          |- P[<<<bcopy_1046@365:2>@368:1>@388:0>](<bcopy_1046@365:0>:int,
                                                   <bcopy_1046@365:1>:int,
                                                   <<bcopy_1046@365:2>@368:0>:int,
                                                   <<<bcopy_1046@365:2>@368:1>@388:0>:int)
          
          P[<bcopy_1046@365:4>](<bcopy_1046@365:0>:int,<bcopy_1046@365:1>:int,<<bcopy_1046@365:2>@368:0>:int),
          (<<bcopy_1046@365:2>@368:0> < <bcopy_1046@365:1>)
          |- P[<<bcopy_1046@365:2>@368:0>](<bcopy_1046@365:0>:int,<bcopy_1046@365:1>:int,
                                           <<bcopy_1046@365:2>@368:0>:int)
          
           ((<bcopy_1046@365:4> = 0) && ((<bcopy_1046@365:0> > 0) && (<bcopy_1046@365:0> = <bcopy_1046@365:1>)))
          |- P[<bcopy_1046@365:4>](<bcopy_1046@365:0>:int,<bcopy_1046@365:1>:int,
                                   <bcopy_1046@365:4>:int)
        input to Yhorn:
          P[<fail_1893@503:0>](<fail_1893@503:0>:int)|- bot
          
          P[<<print_array_1052@445:1>@491:0>](<k_make_array_u_1321@500:1>:int,<k_make_array_u_1321@500:0>:int),
          ((<k_make_array_u_1321@500:0> >= <k_make_array_u_1321@500:1>) &&
           ((<k_make_array_u_1321@500:1> > 0) && ((0 <= <k_make_array_u_1321@500:0>) && (<fail_1893@503:0> = 1))))
          |- P[<fail_1893@503:0>](<fail_1893@503:0>:int)
          
          P[<print_array_1052@445:4>](<print_array_1052@445:0>:int,<f_print_array_1888@474:2>:int,<<print_array_1052@445:1>@448:0>:int),
          P[<<<print_array_1052@445:1>@448:1>@472:0>](<print_array_1052@445:0>:int,<<print_array_1052@445:1>@448:0>:int,var880:int),
          P[<<print_array_1052@482:1>@485:0>](<print_array_1052@445:0>:int,<<print_array_1052@445:1>@491:0>:int),
          (<<print_array_1052@445:1>@448:0> < <f_print_array_1888@474:2>)
          |- P[<<print_array_1052@445:1>@491:0>](<print_array_1052@445:0>:int,
                                                 <<print_array_1052@445:1>@491:0>:int)
          
          P[<print_array_1052@482:4>](<print_array_1052@482:0>:int,<print_array_1052@482:2>:int,<<print_array_1052@482:1>@485:0>:int),
          (<<print_array_1052@482:1>@485:0> < <print_array_1052@482:2>)
          |- P[<<print_array_1052@482:1>@485:0>](<print_array_1052@482:0>:int,
                                                 <<print_array_1052@482:1>@485:0>:int)
          
          P[<print_array_1052@445:4>](<print_array_1052@482:0>:int,<print_array_1052@482:2>:int,var882:int),
          P[<<<print_array_1052@445:1>@448:1>@472:0>](<print_array_1052@482:0>:int,var883:int,<f_print_array_1889@480:3>:int),
          (((1 + var883) = <print_array_1052@482:4>) &&
           (((1 + var882) = <print_array_1052@482:4>) && (<print_array_1052@482:4> < (1 + <print_array_1052@482:2>))))
          |- P[<print_array_1052@482:4>](<print_array_1052@482:0>:int,
                                         <print_array_1052@482:2>:int,
                                         <print_array_1052@482:4>:int)
          
          P[<<print_array_1052@445:1>@448:0>](<print_array_1052@445:0>:int,<<print_array_1052@445:1>@448:0>:int),
          ((<print_array_1052@445:0> > 0) &&
           ((<<print_array_1052@445:1>@448:0> < <print_array_1052@445:0>) &&
            ((0 <= <<print_array_1052@445:1>@448:0>) && (<<<print_array_1052@445:1>@448:1>@472:0> = 0))))
          |- P[<<<print_array_1052@445:1>@448:1>@472:0>](<print_array_1052@445:0>:int,
                                                         <<print_array_1052@445:1>@448:0>:int,
                                                         <<<print_array_1052@445:1>@448:1>@472:0>:int)
          
          P[<print_array_1052@445:4>](<print_array_1052@445:0>:int,<print_array_1052@445:2>:int,<<print_array_1052@445:1>@448:0>:int),
          (<<print_array_1052@445:1>@448:0> < <print_array_1052@445:2>)
          |- P[<<print_array_1052@445:1>@448:0>](<print_array_1052@445:0>:int,
                                                 <<print_array_1052@445:1>@448:0>:int)
          
          
          ((<print_array_1052@445:0> = <print_array_1052@445:2>) &&
           ((<print_array_1052@445:0> > 0) && (<print_array_1052@445:4> = 0)))
          |- P[<print_array_1052@445:4>](<print_array_1052@445:0>:int,
                                         <print_array_1052@445:2>:int,
                                         <print_array_1052@445:4>:int)
          
          P[<bcopy_1046@365:4>](<bcopy_1046@432:0>:int,<bcopy_1046@432:1>:int,var884:int),
          P[<<<bcopy_1046@365:2>@368:1>@388:0>](<bcopy_1046@432:0>:int,<bcopy_1046@432:1>:int,var885:int,<f_bcopy_1887@430:3>:int),
          (((1 + var885) = <bcopy_1046@432:4>) &&
           (((1 + var884) = <bcopy_1046@432:4>) && (<bcopy_1046@432:4> < (1 + <bcopy_1046@432:1>))))
          |- P[<bcopy_1046@432:4>](<bcopy_1046@432:0>:int,<bcopy_1046@432:1>:int,
                                   <bcopy_1046@432:4>:int)
          
          P[<<bcopy_1046@365:3>@398:0>](<bcopy_1046@365:0>:int,<bcopy_1046@365:0>:int,<<bcopy_1046@365:3>@398:0>:int),
          ((<bcopy_1046@365:0> = <bcopy_1046@365:1>) &&
           ((<bcopy_1046@365:0> > 0) &&
            ((<<bcopy_1046@365:3>@398:0> < <bcopy_1046@365:0>) &&
             ((0 <= <<bcopy_1046@365:3>@398:0>) && (<<<bcopy_1046@365:3>@398:1>@418:0> = 0)))))
          |- P[<<<bcopy_1046@365:3>@398:1>@418:0>](<bcopy_1046@365:0>:int,
                                                   <bcopy_1046@365:1>:int,
                                                   <<bcopy_1046@365:3>@398:0>:int,
                                                   <<<bcopy_1046@365:3>@398:1>@418:0>:int)
          
          P[<<<bcopy_1046@365:2>@368:1>@388:0>](<bcopy_1046@365:0>:int,<bcopy_1046@365:1>:int,<<bcopy_1046@365:3>@398:0>:int,var881:int),
          P[<bcopy_1046@365:4>](<bcopy_1046@365:0>:int,<bcopy_1046@365:1>:int,<<bcopy_1046@365:3>@398:0>:int),
          (<<bcopy_1046@365:3>@398:0> < <bcopy_1046@365:1>)
          |- P[<<bcopy_1046@365:3>@398:0>](<bcopy_1046@365:0>:int,<bcopy_1046@365:1>:int,
                                           <<bcopy_1046@365:3>@398:0>:int)
          
          P[<<bcopy_1046@365:2>@368:0>](<bcopy_1046@365:0>:int,<bcopy_1046@365:0>:int,<<bcopy_1046@365:2>@368:0>:int),
          ((<bcopy_1046@365:0> = <bcopy_1046@365:1>) &&
           ((<bcopy_1046@365:0> > 0) &&
            ((<<bcopy_1046@365:2>@368:0> < <bcopy_1046@365:0>) &&
             ((0 <= <<bcopy_1046@365:2>@368:0>) && (<<<bcopy_1046@365:2>@368:1>@388:0> = 0)))))
          |- P[<<<bcopy_1046@365:2>@368:1>@388:0>](<bcopy_1046@365:0>:int,
                                                   <bcopy_1046@365:1>:int,
                                                   <<bcopy_1046@365:2>@368:0>:int,
                                                   <<<bcopy_1046@365:2>@368:1>@388:0>:int)
          
          P[<bcopy_1046@365:4>](<bcopy_1046@365:0>:int,<bcopy_1046@365:1>:int,<<bcopy_1046@365:2>@368:0>:int),
          (<<bcopy_1046@365:2>@368:0> < <bcopy_1046@365:1>)
          |- P[<<bcopy_1046@365:2>@368:0>](<bcopy_1046@365:0>:int,<bcopy_1046@365:1>:int,
                                           <<bcopy_1046@365:2>@368:0>:int)
          
           ((<bcopy_1046@365:0> = <bcopy_1046@365:1>) && ((<bcopy_1046@365:0> > 0) && (<bcopy_1046@365:4> = 0)))
          |- P[<bcopy_1046@365:4>](<bcopy_1046@365:0>:int,<bcopy_1046@365:1>:int,
                                   <bcopy_1046@365:4>:int)Yhorn (Wed Sep 25 10:52:05 JST 2013)


(0=0) & (v_sep_fail_1893_sep_503_sep_0($870)) -> 1=0.
(($870-1=0) & (-$871<=0) & ($872>0) & ($871-$872>=0)) & (v_sep_print_array_1052_sep_445_sep_1_sep_491_sep_0($872,$871)) -> v_sep_fail_1893_sep_503_sep_0($870).
($873-$874<0) & (v_sep_print_array_1052_sep_482_sep_1_sep_485_sep_0($875,$876)) & (v_sep_print_array_1052_sep_445_sep_1_sep_448_sep_1_sep_472_sep_0($875,$873,$877)) & (v_sep_print_array_1052_sep_445_sep_4($875,$874,$873)) -> v_sep_print_array_1052_sep_445_sep_1_sep_491_sep_0($875,$876).
($878-$879<0) & (v_sep_print_array_1052_sep_482_sep_4($880,$879,$878)) -> v_sep_print_array_1052_sep_482_sep_1_sep_485_sep_0($880,$878).
((-$879+$881-1<0) & (-$881+$882+1=0) & (-$881+$883+1=0)) & (v_sep_print_array_1052_sep_445_sep_1_sep_448_sep_1_sep_472_sep_0($880,$883,$884)) & (v_sep_print_array_1052_sep_445_sep_4($880,$879,$882)) -> v_sep_print_array_1052_sep_482_sep_4($880,$879,$881).
(($885=0) & (-$873<=0) & ($873-$875<0) & ($875>0)) & (v_sep_print_array_1052_sep_445_sep_1_sep_448_sep_0($875,$873)) -> v_sep_print_array_1052_sep_445_sep_1_sep_448_sep_1_sep_472_sep_0($875,$873,$885).
($873-$886<0) & (v_sep_print_array_1052_sep_445_sep_4($875,$886,$873)) -> v_sep_print_array_1052_sep_445_sep_1_sep_448_sep_0($875,$873).
($887=0) & ($875>0) & ($875-$886=0) -> v_sep_print_array_1052_sep_445_sep_4($875,$886,$887).
(($888-$889-1<0) & (-$888+$890+1=0) & (-$888+$891+1=0)) & (v_sep_bcopy_1046_sep_365_sep_2_sep_368_sep_1_sep_388_sep_0($892,$889,$891,$893)) & (v_sep_bcopy_1046_sep_365_sep_4($892,$889,$890)) -> v_sep_bcopy_1046_sep_432_sep_4($892,$889,$888).
(($894=0) & (-$895<=0) & ($895-$896<0) & ($896>0) & ($896-$897=0)) & (v_sep_bcopy_1046_sep_365_sep_3_sep_398_sep_0($896,$896,$895)) -> v_sep_bcopy_1046_sep_365_sep_3_sep_398_sep_1_sep_418_sep_0($896,$897,$895,$894).
($895-$897<0) & (v_sep_bcopy_1046_sep_365_sep_4($896,$897,$895)) & (v_sep_bcopy_1046_sep_365_sep_2_sep_368_sep_1_sep_388_sep_0($896,$897,$895,$898)) -> v_sep_bcopy_1046_sep_365_sep_3_sep_398_sep_0($896,$897,$895).
(($899=0) & (-$900<=0) & (-$896+$900<0) & ($896>0) & ($896-$897=0)) & (v_sep_bcopy_1046_sep_365_sep_2_sep_368_sep_0($896,$896,$900)) -> v_sep_bcopy_1046_sep_365_sep_2_sep_368_sep_1_sep_388_sep_0($896,$897,$900,$899).
(-$897+$900<0) & (v_sep_bcopy_1046_sep_365_sep_4($896,$897,$900)) -> v_sep_bcopy_1046_sep_365_sep_2_sep_368_sep_0($896,$897,$900).
($901=0) & ($896>0) & ($896-$897=0) -> v_sep_bcopy_1046_sep_365_sep_4($896,$897,$901).


v_sep_bcopy_1046_sep_365_sep_2_sep_368_sep_0: X
v_sep_bcopy_1046_sep_365_sep_2_sep_368_sep_1_sep_388_sep_0: X
v_sep_bcopy_1046_sep_365_sep_3_sep_398_sep_0: X
v_sep_bcopy_1046_sep_365_sep_3_sep_398_sep_1_sep_418_sep_0: X
v_sep_bcopy_1046_sep_365_sep_4: X
v_sep_bcopy_1046_sep_432_sep_4: X
v_sep_fail_1893_sep_503_sep_0: X
v_sep_print_array_1052_sep_445_sep_1_sep_448_sep_0: X
v_sep_print_array_1052_sep_445_sep_1_sep_448_sep_1_sep_472_sep_0: X
v_sep_print_array_1052_sep_445_sep_1_sep_491_sep_0: X
v_sep_print_array_1052_sep_445_sep_4: X
v_sep_print_array_1052_sep_482_sep_1_sep_485_sep_0: X
v_sep_print_array_1052_sep_482_sep_4: X
....................
v_sep_bcopy_1046_sep_365_sep_2_sep_368_sep_0: X
v_sep_bcopy_1046_sep_365_sep_2_sep_368_sep_1_sep_388_sep_0: X
v_sep_bcopy_1046_sep_365_sep_3_sep_398_sep_0: X
v_sep_bcopy_1046_sep_365_sep_3_sep_398_sep_1_sep_418_sep_0: X
v_sep_bcopy_1046_sep_365_sep_4: X
v_sep_bcopy_1046_sep_432_sep_4: X
v_sep_fail_1893_sep_503_sep_0: X
v_sep_print_array_1052_sep_445_sep_1_sep_448_sep_0: X
v_sep_print_array_1052_sep_445_sep_1_sep_448_sep_1_sep_472_sep_0: X
v_sep_print_array_1052_sep_445_sep_1_sep_491_sep_0: X
v_sep_print_array_1052_sep_445_sep_4: X
v_sep_print_array_1052_sep_482_sep_1_sep_485_sep_0: X
v_sep_print_array_1052_sep_482_sep_4: X
........
v_sep_bcopy_1046_sep_365_sep_2_sep_368_sep_0: X
v_sep_bcopy_1046_sep_365_sep_2_sep_368_sep_1_sep_388_sep_0: X
v_sep_bcopy_1046_sep_365_sep_3_sep_398_sep_0: X
v_sep_bcopy_1046_sep_365_sep_3_sep_398_sep_1_sep_418_sep_0: X
v_sep_bcopy_1046_sep_365_sep_4: X
v_sep_bcopy_1046_sep_432_sep_4: X
v_sep_fail_1893_sep_503_sep_0: X
v_sep_print_array_1052_sep_445_sep_1_sep_448_sep_0: X
v_sep_print_array_1052_sep_445_sep_1_sep_448_sep_1_sep_472_sep_0: X
v_sep_print_array_1052_sep_445_sep_1_sep_491_sep_0: X
v_sep_print_array_1052_sep_445_sep_4: X
v_sep_print_array_1052_sep_482_sep_1_sep_485_sep_0: X
v_sep_print_array_1052_sep_482_sep_4: X
..............
v_sep_bcopy_1046_sep_365_sep_2_sep_368_sep_0: X
v_sep_bcopy_1046_sep_365_sep_2_sep_368_sep_1_sep_388_sep_0: X
v_sep_bcopy_1046_sep_365_sep_3_sep_398_sep_0: X
v_sep_bcopy_1046_sep_365_sep_3_sep_398_sep_1_sep_418_sep_0: X
v_sep_bcopy_1046_sep_365_sep_4: X
v_sep_bcopy_1046_sep_432_sep_4: X
v_sep_fail_1893_sep_503_sep_0: X
v_sep_print_array_1052_sep_445_sep_1_sep_448_sep_0: X
v_sep_print_array_1052_sep_445_sep_1_sep_448_sep_1_sep_472_sep_0: X
v_sep_print_array_1052_sep_445_sep_1_sep_491_sep_0: X
v_sep_print_array_1052_sep_445_sep_4: X
v_sep_print_array_1052_sep_482_sep_1_sep_485_sep_0: X
v_sep_print_array_1052_sep_482_sep_4: X
.................
v_sep_bcopy_1046_sep_365_sep_2_sep_368_sep_0: X
v_sep_bcopy_1046_sep_365_sep_2_sep_368_sep_1_sep_388_sep_0: X
v_sep_bcopy_1046_sep_365_sep_3_sep_398_sep_0: X
v_sep_bcopy_1046_sep_365_sep_3_sep_398_sep_1_sep_418_sep_0: X
v_sep_bcopy_1046_sep_365_sep_4: X
v_sep_bcopy_1046_sep_432_sep_4: X
v_sep_fail_1893_sep_503_sep_0: X
v_sep_print_array_1052_sep_445_sep_1_sep_448_sep_0: X
v_sep_print_array_1052_sep_445_sep_1_sep_448_sep_1_sep_472_sep_0: X
v_sep_print_array_1052_sep_445_sep_1_sep_491_sep_0: X
v_sep_print_array_1052_sep_445_sep_4: X
v_sep_print_array_1052_sep_482_sep_1_sep_485_sep_0: X
v_sep_print_array_1052_sep_482_sep_4: X
....................Split conj [45] 1.57176
(Reconstrcut: 11 **)
v_sep_bcopy_1046_sep_365_sep_2_sep_368_sep_0: X
v_sep_bcopy_1046_sep_365_sep_2_sep_368_sep_1_sep_388_sep_0: X
v_sep_bcopy_1046_sep_365_sep_3_sep_398_sep_0: X
v_sep_bcopy_1046_sep_365_sep_3_sep_398_sep_1_sep_418_sep_0: X
v_sep_bcopy_1046_sep_365_sep_4: X
v_sep_bcopy_1046_sep_432_sep_4: X
v_sep_fail_1893_sep_503_sep_0: X
v_sep_print_array_1052_sep_445_sep_1_sep_448_sep_0: X
v_sep_print_array_1052_sep_445_sep_1_sep_448_sep_1_sep_472_sep_0: (X) & (X)
v_sep_print_array_1052_sep_445_sep_1_sep_491_sep_0: X
v_sep_print_array_1052_sep_445_sep_4: X
v_sep_print_array_1052_sep_482_sep_1_sep_485_sep_0: X
v_sep_print_array_1052_sep_482_sep_4: X
.............
v_sep_bcopy_1046_sep_365_sep_2_sep_368_sep_0: X
v_sep_bcopy_1046_sep_365_sep_2_sep_368_sep_1_sep_388_sep_0: X
v_sep_bcopy_1046_sep_365_sep_3_sep_398_sep_0: X
v_sep_bcopy_1046_sep_365_sep_3_sep_398_sep_1_sep_418_sep_0: X
v_sep_bcopy_1046_sep_365_sep_4: X
v_sep_bcopy_1046_sep_432_sep_4: X
v_sep_fail_1893_sep_503_sep_0: X
v_sep_print_array_1052_sep_445_sep_1_sep_448_sep_0: X
v_sep_print_array_1052_sep_445_sep_1_sep_448_sep_1_sep_472_sep_0: (X) & (X)
v_sep_print_array_1052_sep_445_sep_1_sep_491_sep_0: X
v_sep_print_array_1052_sep_445_sep_4: X
v_sep_print_array_1052_sep_482_sep_1_sep_485_sep_0: X
v_sep_print_array_1052_sep_482_sep_4: X
........
v_sep_bcopy_1046_sep_365_sep_2_sep_368_sep_0: X
v_sep_bcopy_1046_sep_365_sep_2_sep_368_sep_1_sep_388_sep_0: X
v_sep_bcopy_1046_sep_365_sep_3_sep_398_sep_0: X
v_sep_bcopy_1046_sep_365_sep_3_sep_398_sep_1_sep_418_sep_0: X
v_sep_bcopy_1046_sep_365_sep_4: X
v_sep_bcopy_1046_sep_432_sep_4: X
v_sep_fail_1893_sep_503_sep_0: X
v_sep_print_array_1052_sep_445_sep_1_sep_448_sep_0: X
v_sep_print_array_1052_sep_445_sep_1_sep_448_sep_1_sep_472_sep_0: (X) & (X)
v_sep_print_array_1052_sep_445_sep_1_sep_491_sep_0: X
v_sep_print_array_1052_sep_445_sep_4: X
v_sep_print_array_1052_sep_482_sep_1_sep_485_sep_0: X
v_sep_print_array_1052_sep_482_sep_4: X
..............
v_sep_bcopy_1046_sep_365_sep_2_sep_368_sep_0: X
v_sep_bcopy_1046_sep_365_sep_2_sep_368_sep_1_sep_388_sep_0: X
v_sep_bcopy_1046_sep_365_sep_3_sep_398_sep_0: X
v_sep_bcopy_1046_sep_365_sep_3_sep_398_sep_1_sep_418_sep_0: X
v_sep_bcopy_1046_sep_365_sep_4: X
v_sep_bcopy_1046_sep_432_sep_4: X
v_sep_fail_1893_sep_503_sep_0: X
v_sep_print_array_1052_sep_445_sep_1_sep_448_sep_0: X
v_sep_print_array_1052_sep_445_sep_1_sep_448_sep_1_sep_472_sep_0: (X) & (X)
v_sep_print_array_1052_sep_445_sep_1_sep_491_sep_0: X
v_sep_print_array_1052_sep_445_sep_4: X
v_sep_print_array_1052_sep_482_sep_1_sep_485_sep_0: X
v_sep_print_array_1052_sep_482_sep_4: X
.................
v_sep_bcopy_1046_sep_365_sep_2_sep_368_sep_0: X
v_sep_bcopy_1046_sep_365_sep_2_sep_368_sep_1_sep_388_sep_0: X
v_sep_bcopy_1046_sep_365_sep_3_sep_398_sep_0: X
v_sep_bcopy_1046_sep_365_sep_3_sep_398_sep_1_sep_418_sep_0: X
v_sep_bcopy_1046_sep_365_sep_4: X
v_sep_bcopy_1046_sep_432_sep_4: X
v_sep_fail_1893_sep_503_sep_0: X
v_sep_print_array_1052_sep_445_sep_1_sep_448_sep_0: X
v_sep_print_array_1052_sep_445_sep_1_sep_448_sep_1_sep_472_sep_0: (X) & (X)
v_sep_print_array_1052_sep_445_sep_1_sep_491_sep_0: X
v_sep_print_array_1052_sep_445_sep_4: X
v_sep_print_array_1052_sep_482_sep_1_sep_485_sep_0: X
v_sep_print_array_1052_sep_482_sep_4: X
....................
v_sep_bcopy_1046_sep_365_sep_2_sep_368_sep_0: X
v_sep_bcopy_1046_sep_365_sep_2_sep_368_sep_1_sep_388_sep_0: X
v_sep_bcopy_1046_sep_365_sep_3_sep_398_sep_0: X
v_sep_bcopy_1046_sep_365_sep_3_sep_398_sep_1_sep_418_sep_0: X
v_sep_bcopy_1046_sep_365_sep_4: X
v_sep_bcopy_1046_sep_432_sep_4: X
v_sep_fail_1893_sep_503_sep_0: X
v_sep_print_array_1052_sep_445_sep_1_sep_448_sep_0: X
v_sep_print_array_1052_sep_445_sep_1_sep_448_sep_1_sep_472_sep_0: (X) & (X)
v_sep_print_array_1052_sep_445_sep_1_sep_491_sep_0: X
v_sep_print_array_1052_sep_445_sep_4: X
v_sep_print_array_1052_sep_482_sep_1_sep_485_sep_0: X
v_sep_print_array_1052_sep_482_sep_4: X
.....................(0=0) & (v_sep_fail_1893_sep_503_sep_0($870)) -> 1=0.
(($870-1=0) & (-$871<=0) & ($872>0) & ($871-$872>=0)) & (v_sep_print_array_1052_sep_445_sep_1_sep_491_sep_0($872,$871)) -> v_sep_fail_1893_sep_503_sep_0($870).
($873-$874<0) & (v_sep_print_array_1052_sep_482_sep_1_sep_485_sep_0($875,$876)) & (v_sep_print_array_1052_sep_445_sep_1_sep_448_sep_1_sep_472_sep_0($875,$873,$877)) & (v_sep_print_array_1052_sep_445_sep_4($875,$874,$873)) -> v_sep_print_array_1052_sep_445_sep_1_sep_491_sep_0($875,$876).
($878-$879<0) & (v_sep_print_array_1052_sep_482_sep_4($880,$879,$878)) -> v_sep_print_array_1052_sep_482_sep_1_sep_485_sep_0($880,$878).
((-$879+$881-1<0) & (-$881+$882+1=0) & (-$881+$883+1=0)) & (v_sep_print_array_1052_sep_445_sep_1_sep_448_sep_1_sep_472_sep_0($880,$883,$884)) & (v_sep_print_array_1052_sep_445_sep_4($880,$879,$882)) -> v_sep_print_array_1052_sep_482_sep_4($880,$879,$881).
(($885=0) & (-$873<=0) & ($873-$875<0) & ($875>0)) & (v_sep_print_array_1052_sep_445_sep_1_sep_448_sep_0($875,$873)) -> v_sep_print_array_1052_sep_445_sep_1_sep_448_sep_1_sep_472_sep_0($875,$873,$885).
($873-$886<0) & (v_sep_print_array_1052_sep_445_sep_4($875,$886,$873)) -> v_sep_print_array_1052_sep_445_sep_1_sep_448_sep_0($875,$873).
($887=0) & ($875>0) & ($875-$886=0) -> v_sep_print_array_1052_sep_445_sep_4($875,$886,$887).
(($888-$889-1<0) & (-$888+$890+1=0) & (-$888+$891+1=0)) & (v_sep_bcopy_1046_sep_365_sep_2_sep_368_sep_1_sep_388_sep_0($892,$889,$891,$893)) & (v_sep_bcopy_1046_sep_365_sep_4($892,$889,$890)) -> v_sep_bcopy_1046_sep_432_sep_4($892,$889,$888).
(($894=0) & (-$895<=0) & ($895-$896<0) & ($896>0) & ($896-$897=0)) & (v_sep_bcopy_1046_sep_365_sep_3_sep_398_sep_0($896,$896,$895)) -> v_sep_bcopy_1046_sep_365_sep_3_sep_398_sep_1_sep_418_sep_0($896,$897,$895,$894).
($895-$897<0) & (v_sep_bcopy_1046_sep_365_sep_4($896,$897,$895)) & (v_sep_bcopy_1046_sep_365_sep_2_sep_368_sep_1_sep_388_sep_0($896,$897,$895,$898)) -> v_sep_bcopy_1046_sep_365_sep_3_sep_398_sep_0($896,$897,$895).
(($899=0) & (-$900<=0) & (-$896+$900<0) & ($896>0) & ($896-$897=0)) & (v_sep_bcopy_1046_sep_365_sep_2_sep_368_sep_0($896,$896,$900)) -> v_sep_bcopy_1046_sep_365_sep_2_sep_368_sep_1_sep_388_sep_0($896,$897,$900,$899).
(-$897+$900<0) & (v_sep_bcopy_1046_sep_365_sep_4($896,$897,$900)) -> v_sep_bcopy_1046_sep_365_sep_2_sep_368_sep_0($896,$897,$900).
($901=0) & ($896>0) & ($896-$897=0) -> v_sep_bcopy_1046_sep_365_sep_4($896,$897,$901).

        solution:
          P[<<bcopy_1046@365:2>@368:0>]($980:int,$982:int,$984:int) = true
          P[<<<bcopy_1046@365:2>@368:1>@388:0>]($948:int,$950:int,$952:int,$954:int) = true
          P[<<bcopy_1046@365:3>@398:0>]($973:int,$975:int,$977:int) = true
          P[<<<bcopy_1046@365:3>@398:1>@418:0>]($964:int,$966:int,$968:int,$970:int) = true
          P[<bcopy_1046@365:4>]($957:int,$959:int,$961:int) = true
          P[<bcopy_1046@432:4>]($941:int,$943:int,$945:int) = true
          P[<fail_1893@503:0>]($902:bool) = false
          P[<<print_array_1052@445:1>@448:0>]($936:int,$938:int) = ((1 + (2 * $938)) <= $936)
          P[<<<print_array_1052@445:1>@448:1>@472:0>]($915:int,$917:int,$919:int) =
          ((1 <= ((2 * $917) + $915)) && ((1 + (2 * $917)) <= $915))
          P[<<print_array_1052@445:1>@491:0>]($905:int,$907:int) = ((1 + (4 * $907)) <= (4 * $905))
          P[<print_array_1052@445:4>]($922:int,$924:int,$926:int) = (($926 + $924) <= $922)
          P[<<print_array_1052@482:1>@485:0>]($910:int,$912:int) = ((4 * $912) <= (1 + (2 * $910)))
          P[<print_array_1052@482:4>]($929:int,$931:int,$933:int) = (((3 * $933) + $931) <= (2 + (2 * $929)))
        
      end HcSolver.solve_ub(74076)[4] (0.135979 sec.)
      begin HcSolver.check_validity(75296)[4]
        input:
          P[<fail_1893@503:0>](<fail_1893@503:0>:bool)|- bot
          
          P[<<print_array_1052@445:1>@491:0>](<k_make_array_u_1321@500:1>:int,<k_make_array_u_1321@500:0>:int),
          ((0 <= <k_make_array_u_1321@500:0>) &&
           ((<k_make_array_u_1321@500:1> > 0) &&
            ((<k_make_array_u_1321@500:0> >= <k_make_array_u_1321@500:1>) && <fail_1893@503:0>)))
          |- P[<fail_1893@503:0>](<fail_1893@503:0>:bool)
          
          P[<print_array_1052@445:4>](<print_array_1052@445:0>:int,<f_print_array_1888@474:2>:int,<<print_array_1052@445:1>@448:0>:int),
          P[<<<print_array_1052@445:1>@448:1>@472:0>](<print_array_1052@445:0>:int,<<print_array_1052@445:1>@448:0>:int,var880:int),
          P[<<print_array_1052@482:1>@485:0>](<print_array_1052@445:0>:int,<<print_array_1052@445:1>@491:0>:int),
          (<<print_array_1052@445:1>@448:0> < <f_print_array_1888@474:2>)
          |- P[<<print_array_1052@445:1>@491:0>](<print_array_1052@445:0>:int,
                                                 <<print_array_1052@445:1>@491:0>:int)
          
          P[<print_array_1052@482:4>](<print_array_1052@482:0>:int,<print_array_1052@482:2>:int,<<print_array_1052@482:1>@485:0>:int),
          (<<print_array_1052@482:1>@485:0> < <print_array_1052@482:2>)
          |- P[<<print_array_1052@482:1>@485:0>](<print_array_1052@482:0>:int,
                                                 <<print_array_1052@482:1>@485:0>:int)
          
          P[<print_array_1052@445:4>](<print_array_1052@482:0>:int,<print_array_1052@482:2>:int,(
                                      -1 + <print_array_1052@482:4>):int),
          P[<<<print_array_1052@445:1>@448:1>@472:0>](<print_array_1052@482:0>:int,(
                                                      -1 + <print_array_1052@482:4>):int,<f_print_array_1889@480:3>:int),
          (<print_array_1052@482:4> < (1 + <print_array_1052@482:2>))
          |- P[<print_array_1052@482:4>](<print_array_1052@482:0>:int,
                                         <print_array_1052@482:2>:int,
                                         <print_array_1052@482:4>:int)
          
          P[<<print_array_1052@445:1>@448:0>](<print_array_1052@445:0>:int,<<print_array_1052@445:1>@448:0>:int),
          ((<<<print_array_1052@445:1>@448:1>@472:0> = 0) &&
           ((0 <= <<print_array_1052@445:1>@448:0>) &&
            ((<<print_array_1052@445:1>@448:0> < <print_array_1052@445:0>) && (<print_array_1052@445:0> > 0))))
          |- P[<<<print_array_1052@445:1>@448:1>@472:0>](<print_array_1052@445:0>:int,
                                                         <<print_array_1052@445:1>@448:0>:int,
                                                         <<<print_array_1052@445:1>@448:1>@472:0>:int)
          
          P[<print_array_1052@445:4>](<print_array_1052@445:0>:int,<print_array_1052@445:2>:int,<<print_array_1052@445:1>@448:0>:int),
          (<<print_array_1052@445:1>@448:0> < <print_array_1052@445:2>)
          |- P[<<print_array_1052@445:1>@448:0>](<print_array_1052@445:0>:int,
                                                 <<print_array_1052@445:1>@448:0>:int)
          
          
          ((<print_array_1052@445:4> = 0) &&
           ((<print_array_1052@445:0> > 0) && (<print_array_1052@445:0> = <print_array_1052@445:2>)))
          |- P[<print_array_1052@445:4>](<print_array_1052@445:0>:int,
                                         <print_array_1052@445:2>:int,
                                         <print_array_1052@445:4>:int)
          
          P[<bcopy_1046@365:4>](<bcopy_1046@432:0>:int,<bcopy_1046@432:1>:int,(
                                -1 + <bcopy_1046@432:4>):int),
          P[<<<bcopy_1046@365:2>@368:1>@388:0>](<bcopy_1046@432:0>:int,<bcopy_1046@432:1>:int,(
                                                -1 + <bcopy_1046@432:4>):int,<f_bcopy_1887@430:3>:int),
          (<bcopy_1046@432:4> < (1 + <bcopy_1046@432:1>))
          |- P[<bcopy_1046@432:4>](<bcopy_1046@432:0>:int,<bcopy_1046@432:1>:int,
                                   <bcopy_1046@432:4>:int)
          
          P[<<bcopy_1046@365:3>@398:0>](<bcopy_1046@365:0>:int,<bcopy_1046@365:0>:int,<<bcopy_1046@365:3>@398:0>:int),
          ((<<<bcopy_1046@365:3>@398:1>@418:0> = 0) &&
           ((0 <= <<bcopy_1046@365:3>@398:0>) &&
            ((<<bcopy_1046@365:3>@398:0> < <bcopy_1046@365:0>) &&
             ((<bcopy_1046@365:0> > 0) && (<bcopy_1046@365:0> = <bcopy_1046@365:1>)))))
          |- P[<<<bcopy_1046@365:3>@398:1>@418:0>](<bcopy_1046@365:0>:int,
                                                   <bcopy_1046@365:1>:int,
                                                   <<bcopy_1046@365:3>@398:0>:int,
                                                   <<<bcopy_1046@365:3>@398:1>@418:0>:int)
          
          P[<<<bcopy_1046@365:2>@368:1>@388:0>](<bcopy_1046@365:0>:int,<bcopy_1046@365:1>:int,<<bcopy_1046@365:3>@398:0>:int,var881:int),
          P[<bcopy_1046@365:4>](<bcopy_1046@365:0>:int,<bcopy_1046@365:1>:int,<<bcopy_1046@365:3>@398:0>:int),
          (<<bcopy_1046@365:3>@398:0> < <bcopy_1046@365:1>)
          |- P[<<bcopy_1046@365:3>@398:0>](<bcopy_1046@365:0>:int,<bcopy_1046@365:1>:int,
                                           <<bcopy_1046@365:3>@398:0>:int)
          
          P[<<bcopy_1046@365:2>@368:0>](<bcopy_1046@365:0>:int,<bcopy_1046@365:0>:int,<<bcopy_1046@365:2>@368:0>:int),
          ((<<<bcopy_1046@365:2>@368:1>@388:0> = 0) &&
           ((0 <= <<bcopy_1046@365:2>@368:0>) &&
            ((<<bcopy_1046@365:2>@368:0> < <bcopy_1046@365:0>) &&
             ((<bcopy_1046@365:0> > 0) && (<bcopy_1046@365:0> = <bcopy_1046@365:1>)))))
          |- P[<<<bcopy_1046@365:2>@368:1>@388:0>](<bcopy_1046@365:0>:int,
                                                   <bcopy_1046@365:1>:int,
                                                   <<bcopy_1046@365:2>@368:0>:int,
                                                   <<<bcopy_1046@365:2>@368:1>@388:0>:int)
          
          P[<bcopy_1046@365:4>](<bcopy_1046@365:0>:int,<bcopy_1046@365:1>:int,<<bcopy_1046@365:2>@368:0>:int),
          (<<bcopy_1046@365:2>@368:0> < <bcopy_1046@365:1>)
          |- P[<<bcopy_1046@365:2>@368:0>](<bcopy_1046@365:0>:int,<bcopy_1046@365:1>:int,
                                           <<bcopy_1046@365:2>@368:0>:int)
          
           ((<bcopy_1046@365:4> = 0) && ((<bcopy_1046@365:0> > 0) && (<bcopy_1046@365:0> = <bcopy_1046@365:1>)))
          |- P[<bcopy_1046@365:4>](<bcopy_1046@365:0>:int,<bcopy_1046@365:1>:int,
                                   <bcopy_1046@365:4>:int)
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        
      end HcSolver.check_validity(75296)[4] (0.023996 sec.)
      solution:
        P[<<bcopy_1046@365:2>@368:0>]($980:int,$982:int,$984:int) = true
        P[<<<bcopy_1046@365:2>@368:1>@388:0>]($948:int,$950:int,$952:int,$954:int) = true
        P[<<bcopy_1046@365:3>@398:0>]($973:int,$975:int,$977:int) = true
        P[<<<bcopy_1046@365:3>@398:1>@418:0>]($964:int,$966:int,$968:int,$970:int) = true
        P[<bcopy_1046@365:4>]($957:int,$959:int,$961:int) = true
        P[<bcopy_1046@432:4>]($941:int,$943:int,$945:int) = true
        P[<fail_1893@503:0>]($902:bool) = false
        P[<<print_array_1052@445:1>@448:0>]($936:int,$938:int) = ((1 + (2 * $938)) <= $936)
        P[<<<print_array_1052@445:1>@448:1>@472:0>]($915:int,$917:int,$919:int) =
        ((1 <= ((2 * $917) + $915)) && ((1 + (2 * $917)) <= $915))
        P[<<print_array_1052@445:1>@491:0>]($905:int,$907:int) = ((1 + (4 * $907)) <= (4 * $905))
        P[<print_array_1052@445:4>]($922:int,$924:int,$926:int) = (($926 + $924) <= $922)
        P[<<print_array_1052@482:1>@485:0>]($910:int,$912:int) = ((4 * $912) <= (1 + (2 * $910)))
        P[<print_array_1052@482:4>]($929:int,$931:int,$933:int) = (((3 * $933) + $931) <= (2 + (2 * $929)))
    end YhornInterface.solve(74075)[3] (0.160975 sec.)
    
  end RefTypeInfer.infer_etrs(62066)[2] (2.043689 sec.)
  refinement types:
    main_1884: X
    f_1891: v1:int -> X
    main_1057: v1:int -> (v2:unit -> X) -> X
    f_1042: v1:int ->
            (v2:int -> (v3:int -> X) -> X) ->
            (v6:int -> (v7:int -> X) -> X /\
             v10:int -> (v11:int -> X) -> X /\
             v14:int -> (v15:int -> X) -> X) -> (v18:unit -> X) -> X
    bcopy_1046: v1:int ->
                v2:int ->
                (v3:int -> (v4:int -> X) -> X) ->
                (v7:int -> (v8:int -> X) -> X) -> v11:int -> ((v12:int -> (v13:int -> X) -> X) -> X) -> X
    make_array_1030: v1:int -> v2:int -> (v3:int -> X) -> X
    k_make_array_u_1321: v1:int -> v2:int -> (v3:int -> X) -> v5:bool -> X
    k_make_array_u_1332: v1:int -> v2:int -> (v3:int -> X) -> v5:unit -> X
    f_bcopy_1886: v1:int ->
                  v2:int ->
                  v3:int ->
                  (v4:int -> (v5:int -> X) -> X) ->
                  ((v8:int -> (v9:int -> X) -> X) -> X) -> (v13:int -> (v14:int -> X) -> X) -> v17:int -> X
    update_1033: v1:int ->
                 v2:int -> (v3:int -> (v4:int -> X) -> X) -> v7:int -> ((v8:int -> (v9:int -> X) -> X) -> X) -> X
    make_array_1030: v1:int -> v2:int -> (v3:int -> X) -> X
    k_make_array_u_1321: v1:int -> v2:int -> (v3:int -> X) -> v5:bool -> X
    k_make_array_u_1332: v1:int -> v2:int -> (v3:int -> X) -> v5:unit -> X
    f_update_1885: v1:int ->
                   v2:int ->
                   v3:int -> (v4:int -> (v5:int -> X) -> X) -> ((v8:int -> (v9:int -> X) -> X) -> X) -> v13:int -> X
    f_bcopy_1887: v1:int ->
                  v2:int ->
                  v3:int ->
                  v4:int ->
                  ((v5:int -> (v6:int -> X) -> X) -> X) ->
                  (v10:int -> (v11:int -> X) -> X) -> (v14:int -> (v15:int -> X) -> X) -> X
    bcopy_1046: v1:int ->
                v2:int ->
                (v3:int -> (v4:int -> X) -> X) ->
                (v7:int -> (v8:int -> X) -> X) -> v11:int -> ((v12:int -> (v13:int -> X) -> X) -> X) -> X
    f_f_1890: v1:int ->
              (v2:int -> (v3:int -> X) -> X /\
               v6:int -> (v7:int -> X) -> X) -> (v10:unit -> X) -> (v12:int -> (v13:int -> X) -> X) -> X
    print_array_1052: v1:int ->
                      (v2:{v2:int | ((1 + (2 * v2)) <= v1)} ->
                       (v3:{v3:int | ((1 <= ((2 * v2) + v1)) && ((1 + (2 * v2)) <= v1))} -> X) -> X /\
                       v6:{v6:int | ((1 + (4 * v6)) <= (4 * v1))} -> (v7:int -> X) -> X) ->
                      v10:int ->
                      (v11:int -> (v12:int -> X) -> X) -> v15:{v15:int | ((v15 + v10) <= v1)} -> (v16:unit -> X) -> X
    make_array_1030: v1:int -> v2:int -> (v3:int -> X) -> X
    k_make_array_u_1321: v1:int -> v2:int -> (v3:int -> X) -> v5:bool -> X
    k_make_array_u_1332: v1:int -> v2:int -> (v3:int -> X) -> v5:unit -> X
    f_print_array_1888: v1:int ->
                        v2:int ->
                        v3:int ->
                        (v4:int -> (v5:int -> X) -> X) ->
                        (v8:int -> (v9:int -> X) -> X) -> (v12:unit -> X) -> v14:int -> X
    print_int_1040: v1:int -> (v2:unit -> X) -> X
    f_print_array_1889: v1:int ->
                        v2:int ->
                        v3:int ->
                        v4:int ->
                        (v5:int -> (v6:int -> X) -> X) ->
                        (v9:int -> (v10:int -> X) -> X) -> (v13:unit -> X) -> v15:unit -> X
    print_array_1052: v1:int ->
                      (v2:{v2:int | ((4 * v2) <= (1 + (2 * v1)))} -> (v3:int -> X) -> X) ->
                      v6:int ->
                      (v7:int -> (v8:int -> X) -> X) ->
                      v11:{v11:int | (((3 * v11) + v6) <= (2 + (2 * v1)))} -> (v12:unit -> X) -> X
    make_array_1030: v1:int -> v2:int -> (v3:int -> X) -> X
    k_make_array_u_1321: v1:int -> v2:int -> (v3:int -> X) -> v5:bool -> X
    fail_1893: v1:{v1:bool | false} -> (v2:unit -> X) -> X
    a_1038: var997:int ->
            var996:int ->
            var995:int -> var994:int -> (var993:int -> (var992:int -> X) -> X) -> var989:int -> (var988:int -> X) -> X
    f_1892: var1000:int -> var999:unit -> X
  abstraction types:
    main_1884: X
    f_1891: v1:int -> X
    main_1057: v1:int -> (v2:unit -> X) -> X
    f_1042: v1:int ->
            (v2:int -> (v3:int -> X) -> X) -> (var1005:int -> (var1006:int -> X) -> X) -> (v18:unit -> X) -> X
    bcopy_1046: var1017:int ->
                var1018:int ->
                (var1019:int -> (var1020:int -> X) -> X) ->
                (var1023:int -> (var1024:int -> X) -> X) ->
                var1027:int -> ((var1028:int -> (var1029:int -> X) -> X) -> X) -> X
    make_array_1030: var1044:int -> var1045:int -> (var1046:int -> X) -> X
    k_make_array_u_1321: var1061:int -> var1062:int -> (var1063:int -> X) -> var1065:bool -> X
    k_make_array_u_1332: var1073:int -> var1074:int -> (var1075:int -> X) -> var1077:unit -> X
    f_bcopy_1886: v1:int ->
                  v2:int ->
                  v3:int ->
                  (v4:int -> (v5:int -> X) -> X) ->
                  ((v8:int -> (v9:int -> X) -> X) -> X) -> (v13:int -> (v14:int -> X) -> X) -> v17:int -> X
    update_1033: v1:int ->
                 v2:int -> (v3:int -> (v4:int -> X) -> X) -> v7:int -> ((v8:int -> (v9:int -> X) -> X) -> X) -> X
    f_update_1885: v1:int ->
                   v2:int ->
                   v3:int -> (v4:int -> (v5:int -> X) -> X) -> ((v8:int -> (v9:int -> X) -> X) -> X) -> v13:int -> X
    f_bcopy_1887: v1:int ->
                  v2:int ->
                  v3:int ->
                  v4:int ->
                  ((v5:int -> (v6:int -> X) -> X) -> X) ->
                  (v10:int -> (v11:int -> X) -> X) -> (v14:int -> (v15:int -> X) -> X) -> X
    f_f_1890: v1:int ->
              (var1009:int -> (var1010:int -> X) -> X) -> (v10:unit -> X) -> (v12:int -> (v13:int -> X) -> X) -> X
    print_array_1052: var1079:int ->
                      (var1080:int[var1080 -> ((1 + (2 * var1080)) <= var1079),
                                   var1080 -> ((1 + (4 * var1080)) <= (4 * var1079)),
                                   var1080 -> ((4 * var1080) <= (1 + (2 * var1079)))] ->
                       (var1081:int[var1081 -> ((1 <= ((2 * var1080) + var1079)) && ((1 + (2 * var1080)) <= var1079))]
                        -> X) -> X) ->
                      var1084:int ->
                      (var1085:int -> (var1086:int -> X) -> X) ->
                      var1089:int[var1089 -> ((var1089 + var1084) <= var1079),
                                  var1089 -> (((3 * var1089) + var1084) <= (2 + (2 * var1079)))] ->
                      (var1090:unit -> X) -> X
    f_print_array_1888: v1:int ->
                        v2:int ->
                        v3:int ->
                        (v4:int -> (v5:int -> X) -> X) ->
                        (v8:int -> (v9:int -> X) -> X) -> (v12:unit -> X) -> v14:int -> X
    print_int_1040: v1:int -> (v2:unit -> X) -> X
    f_print_array_1889: v1:int ->
                        v2:int ->
                        v3:int ->
                        v4:int ->
                        (v5:int -> (v6:int -> X) -> X) ->
                        (v9:int -> (v10:int -> X) -> X) -> (v13:unit -> X) -> v15:unit -> X
    fail_1893: v1:bool -> (v2:unit -> X) -> X
    a_1038: var997:int ->
            var996:int ->
            var995:int -> var994:int -> (var993:int -> (var992:int -> X) -> X) -> var989:int -> (var988:int -> X) -> X
    f_1892: var1000:int -> var999:unit -> X
  
end AbsTypeInfer.refine(62065)[1] (2.068686 sec.)
DONE!

Prefix of spurious counter-example::
0; 0; 0; 0; 1; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 1; 0; 0; 0; 0; 0; 0; 1

Program with abstraction types (CEGAR-cycle 6)::
Main: main_1884
  main_1884 -> (rand_int f_1891)
  a_1038 i_1034 n_1035 x_1037 x_1386 des_1036 j_1039 k_update_a_1401 when (i_1034 = j_1039) -> (k_update_a_1401 x_1037)
  a_1038 i_1034 n_1035 x_1037 x_1386 des_1036 j_1039 k_update_a_1401 when (
      not (i_1034 = j_1039)) -> (des_1036 i_1034 k_update_a_1401)
  bcopy_1046 m_1043 m_1047 src_1048 des_1049 i_1050 k_f_bcopy_1535 when (i_1050 >= m_1047) -> (k_f_bcopy_1535 des_1049)
  bcopy_1046 m_1043 m_1047 src_1048 des_1049 i_1050 k_f_bcopy_1535 when (
      not (i_1050 >= m_1047)) -> (src_1048 i_1050 (f_bcopy_1886 i_1050 m_1043 m_1047 des_1049 k_f_bcopy_1535 src_1048))
  f_1042 m_1043 src_1044 des_1045 k_f_1476 ->
      (bcopy_1046 m_1043 m_1043 src_1044 des_1045 0 (f_f_1890 m_1043 des_1045 k_f_1476))
  f_1891 x_1859 -> (main_1057 x_1859 (f_1892 x_1859))
  f_1892 x_1859 x_1856 -> end
  f_bcopy_1886 i_1050 m_1043 m_1047 des_1049 k_f_bcopy_1535 src_1048 x_1591 ->
      (update_1033 i_1050 m_1047 des_1049 x_1591 (f_bcopy_1887 i_1050 m_1043 m_1047 x_1591 k_f_bcopy_1535 src_1048))
  f_bcopy_1887 i_1050 m_1043 m_1047 x_1591 k_f_bcopy_1535 src_1048 x_1547 ->
      (bcopy_1046 m_1043 m_1047 src_1048 x_1547 (i_1050 + 1) k_f_bcopy_1535)
  f_f_1890 m_1043 des_1045 k_f_1476 x_1715 -> (print_array_1052 m_1043 des_1045 m_1043 x_1715 0 k_f_1476)
  f_print_array_1888 i_1055 m_1043 m_1053 array_1054 des_1045 k_f_print_array_1664 x_1687 ->
      (print_int_1040 x_1687 (f_print_array_1889 i_1055 m_1043 m_1053 x_1687 array_1054 des_1045 k_f_print_array_1664))
  f_print_array_1889 i_1055 m_1043 m_1053 x_1687 array_1054 des_1045 k_f_print_array_1664 x_1667 ->
      (print_array_1052 m_1043 des_1045 m_1053 array_1054 (i_1055 + 1) k_f_print_array_1664)
  f_update_1885 i_1034 n_1035 x_1037 des_1036 k_update_1380 x_1386 ->
      (k_update_1380 (a_1038 i_1034 n_1035 x_1037 x_1386 des_1036))
  fail_1893 b k -> {fail} => (k ())
  k_make_array_u_1321 i_1032 n_1031 k_make_array_1315 b_1333 when b_1333 ->
      (k_make_array_u_1332 i_1032 n_1031 k_make_array_1315 ())
  k_make_array_u_1321 i_1032 n_1031 k_make_array_1315 b_1333 when (not b_1333) ->
      (fail_1893 true (k_make_array_u_1332 i_1032 n_1031 k_make_array_1315))
  k_make_array_u_1332 i_1032 n_1031 k_make_array_1315 x_1318 -> (k_make_array_1315 0)
  main_1057 n_1058 k_main_1787 when (n_1058 > 0) ->
      (f_1042 n_1058 (make_array_1030 n_1058) (make_array_1030 n_1058) k_main_1787)
  main_1057 n_1058 k_main_1787 when (not (n_1058 > 0)) -> (k_main_1787 ())
  make_array_1030 n_1031 i_1032 k_make_array_1315 when (0 <= i_1032) ->
      (k_make_array_u_1321 i_1032 n_1031 k_make_array_1315 (i_1032 < n_1031))
  make_array_1030 n_1031 i_1032 k_make_array_1315 when (not (0 <= i_1032)) ->
      (k_make_array_u_1321 i_1032 n_1031 k_make_array_1315 false)
  print_array_1052 m_1043 des_1045 m_1053 array_1054 i_1055 k_f_print_array_1664 when (
      i_1055 >= m_1053) -> (k_f_print_array_1664 ())
  print_array_1052 m_1043 des_1045 m_1053 array_1054 i_1055 k_f_print_array_1664 when (
      not (i_1055 >= m_1053)) ->
      (des_1045 i_1055 (f_print_array_1888 i_1055 m_1043 m_1053 array_1054 des_1045 k_f_print_array_1664))
  print_int_1040 n_1041 k_print_int_1432 -> (k_print_int_1432 ())
  update_1033 i_1034 n_1035 des_1036 x_1037 k_update_1380 ->
      (des_1036 i_1034 (f_update_1885 i_1034 n_1035 x_1037 des_1036 k_update_1380))
Types:
  main_1884 : X
  bcopy_1046 : (x_1:int ->
                x_2:int ->
                (x_4:int[x_4 >= 0; x_2 >= x_4 + 1] -> (int[x_4 >= 0; x_1 >= x_4 + 1] -> X) -> X) ->
                (x_10:int[x_10 >= 0; x_1 >= -x_2 + 2*x_10 + 2] -> (int -> X) -> X) ->
                x_15:int[x_15 >= 0; x_2 >= x_15 + 1] -> ((int -> (int -> X) -> X) -> X) -> X)
  fail_1893 : (x_1:bool[x_1] -> (unit -> X) -> X)
  print_array_1052 : (x_1:int ->
                      (x_3:int[2*x_1 >= 4*x_3 - 1; x_1 >= 2*x_3 + 1; x_1 >= x_3 + 1; x_3 >= 0] ->
                       (int[x_1 >= -2*x_3 + 1 && x_1 >= 2*x_3 + 1] -> X) -> X) ->
                      x_8:int ->
                      (int -> (int -> X) -> X) ->
                      x_15:int[2*x_1 >= x_8 + 3*x_15 - 2; x_1 >= x_8 + x_15; x_1 >= x_15 + 1; x_15 >= 0] ->
                      (unit -> X) -> X)
  
(6-1) Abstracting ... DONE!

(6-2) Checking HORS ... Restart TRecS (param: 1000 -> 2000)
Restart TRecS (param: 2000 -> 4000)
Restart TRecS (param: 4000 -> 8000)
Restart TRecS (param: 8000 -> 16000)
Restart TRecS (param: 16000 -> 32000)
