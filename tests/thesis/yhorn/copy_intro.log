MoCHi: Model Checker for Higher-Order Programs
  TRecS version: 1.30
  OCaml version: 4.00.1
  Command: ../mochi.opt -yhorn copy_intro.ml

parsed::
 let rec copy_1030 x_1031 = if x_1031 = 0 then
                              0
                            else
                              1 + copy_1030 (x_1031 - 1) 
 in
 let main_1032 n_1033 = if copy_1030 (copy_1030 n_1033) = n_1033 then
                          ()
                        else
                          {fail} () 
 in
   ()

set_target::
 let rec copy_1030 x_1031 = if x_1031 = 0 then
                              0
                            else
                              1 + copy_1030 (x_1031 - 1) 
 in
 let main_1032 n_1033 = if copy_1030 (copy_1030 n_1033) = n_1033 then
                          ()
                        else
                          {fail} () 
 in
 let main_1049 = let arg1_1048 = rand_int () 
                 in
                   main_1032 arg1_1048 
 in
   ()

CPS::
 let rec copy_1030 (x_1031:int) (k_copy_1074:(int -> X)) =
   if x_1031 = 0 then
     k_copy_1074 0
   else
     copy_1030 (x_1031 - 1) (fun x_1078 -> k_copy_1074 (1 + x_1078)) 
 in
 let main_1032 (n_1033:int) (k_main_1106:(unit -> X)) =
   copy_1030 n_1033
     (fun x_1130 ->
        copy_1030 x_1130 (fun x_1109 -> (if x_1109 = n_1033 then
                                           k_main_1106 ()
                                         else
                                           {|fail|} () k_main_1106))) 
 in
   rand_int_cps () (fun x_1147 -> main_1032 x_1147 (fun x_1144 -> end))

Program with abstraction types (CEGAR-cycle 0)::
Main: main_1172
  main_1172 -> (rand_int f_1176)
  copy_1030 x_1031 k_copy_1074 when (x_1031 = 0) -> (k_copy_1074 0)
  copy_1030 x_1031 k_copy_1074 when (not (x_1031 = 0)) -> (copy_1030 (x_1031 - 1) (f_copy_1173 x_1031 k_copy_1074))
  f_1176 x_1147 -> (main_1032 x_1147 (f_1177 x_1147))
  f_1177 x_1147 x_1144 -> end
  f_copy_1173 x_1031 k_copy_1074 x_1078 -> (k_copy_1074 (1 + x_1078))
  f_main_1174 n_1033 k_main_1106 x_1130 -> (copy_1030 x_1130 (f_main_1175 n_1033 x_1130 k_main_1106))
  f_main_1175 n_1033 x_1130 k_main_1106 x_1109 when (x_1109 = n_1033) -> (k_main_1106 ())
  f_main_1175 n_1033 x_1130 k_main_1106 x_1109 when (not (x_1109 = n_1033)) -> (fail_1178 true k_main_1106)
  fail_1178 b k -> {fail} => (k ())
  main_1032 n_1033 k_main_1106 -> (copy_1030 n_1033 (f_main_1174 n_1033 k_main_1106))
Types:
  main_1172 : X
  copy_1030 : (int -> (int -> X) -> X)
  fail_1178 : (x_1:bool[x_1] -> (unit -> X) -> X)
  
(0-1) Abstracting ... DONE!

(0-2) Checking HORS ... DONE!

Error trace::
  main_1172 ... --> 
  f_1176 ... --> 
  main_1032 ... --> 
  copy_1030 [1/2] ... --> 
  f_main_1174 ... --> 
  copy_1030 [1/2] ... --> 
  f_main_1175 [2/2] ... --> 
  fail_1178 ... --> fail -->
  ERROR!

Spurious counter-example::
  0; 0; 0; 0; 0; 0; 1; 0

(0-3) Checking counter-example ... DONE!

(0-4) Discovering predicates ... 
begin AbsTypeInfer.refine(107)[1]
  program:
    main_1172  | true = ((Random.int 0) f_1176)
    copy_1030 x_1031 k_copy_1074 | (x_1031 = 0) = (k_copy_1074 0)
    copy_1030 x_1031 k_copy_1074 | (not (x_1031 = 0)) = (copy_1030 (x_1031 - 1)
                                                                   (f_copy_1173 x_1031
                                                                    k_copy_1074))
    f_1176 x_1147 | true = (main_1032 x_1147
                                      (f_1177 x_1147))
    f_1177 x_1147 x_1144 | true = end
    f_copy_1173 x_1031 k_copy_1074 x_1078 | true = (k_copy_1074 (1 + x_1078))
    f_main_1174 n_1033 k_main_1106 x_1130 | true = (copy_1030 x_1130
                                                              (f_main_1175 n_1033
                                                                    x_1130
                                                                    k_main_1106))
    f_main_1175 n_1033 x_1130 k_main_1106 x_1109 | (x_1109 = n_1033) = (
    k_main_1106 ())
    f_main_1175 n_1033 x_1130 k_main_1106 x_1109 | (not (x_1109 = n_1033)) = (
    fail_1178 true
              k_main_1106)
    fail_1178 b k | true = (fail ())
    main_1032 n_1033 k_main_1106 | true = (copy_1030 n_1033
                                                     (f_main_1174 n_1033
                                                                  k_main_1106))
    main_1172:X
    copy_1030:int -> (int -> X) -> X
    f_1176:int -> X
    f_1177:int -> unit -> X
    f_copy_1173:int -> (int -> X) -> int -> X
    f_main_1174:int -> (unit -> X) -> int -> X
    f_main_1175:int -> int -> (unit -> X) -> int -> X
    fail_1178:bool -> (unit -> X) -> X
    main_1032:int -> (unit -> X) -> X
  inlined functions: f_1176,f_1177,f_copy_1173,f_main_1174,f_main_1175,main_1032
  counterexample: 0:0:0:0:0:0:1:0
  error traces:
    [true.nop(<f_1176@4:0> = var2)
     [true.(<main_1032@6:0> = <f_1176@4:0>)
      [true.(<copy_1030@8:0> = <main_1032@6:0>)
       [(<copy_1030@8:0> = 0).(<<copy_1030@8:1>@11:0> = 0)
        [true.((<f_main_1174@13:0> = <main_1032@6:0>) && (<f_main_1174@13:2> = <<copy_1030@8:1>@11:0>))
         [true.(<copy_1030@15:0> = <f_main_1174@13:2>)
          [(<copy_1030@15:0> = 0).(<<copy_1030@15:1>@18:0> = 0)
           [true.
            ((<f_main_1175@20:0> = <f_main_1174@13:0>) &&
             ((<f_main_1175@20:1> = <f_main_1174@13:2>) && (<f_main_1175@20:3> = <<copy_1030@15:1>@18:0>)))
            [(not (<f_main_1175@20:3> = <f_main_1175@20:0>)).(<fail_1178@23:0> = true)[true.error
  begin RefTypeInfer.infer_etrs(108)[2]
    horn clauses:
      P[<fail_1178@23:0>](<fail_1178@23:0>:bool)|- bot
      
      P[<f_main_1175@20:3>](<f_main_1175@20:0>:int,<f_main_1175@20:1>:int,<f_main_1175@20:3>:int),
      ((<f_main_1175@20:3> <> <f_main_1175@20:0>) && <fail_1178@23:0>) |- P[<fail_1178@23:0>](
      <fail_1178@23:0>:bool)
      
      P[<f_main_1174@13:2>](<f_main_1175@20:0>:int,<f_main_1175@20:1>:int),
      P[<<copy_1030@15:1>@18:0>](<f_main_1175@20:1>:int,<f_main_1175@20:3>:int)|- P[<f_main_1175@20:3>](
      <f_main_1175@20:0>:int,<f_main_1175@20:1>:int,<f_main_1175@20:3>:int)
      
      P[<copy_1030@15:0>](<copy_1030@15:0>:int), ((<copy_1030@15:0> = 0) && (<<copy_1030@15:1>@18:0> = 0))
      |- P[<<copy_1030@15:1>@18:0>](<copy_1030@15:0>:int,<<copy_1030@15:1>@18:0>:int)
      
      P[<f_main_1174@13:2>](<f_main_1174@13:0>:int,<copy_1030@15:0>:int)|- P[<copy_1030@15:0>](<copy_1030@15:0>:int)
      
      P[<main_1032@6:0>](<f_main_1174@13:0>:int),
      P[<<copy_1030@8:1>@11:0>](<f_main_1174@13:0>:int,<f_main_1174@13:2>:int)|- P[<f_main_1174@13:2>](
      <f_main_1174@13:0>:int,<f_main_1174@13:2>:int)
      
      P[<copy_1030@8:0>](<copy_1030@8:0>:int), ((<copy_1030@8:0> = 0) && (<<copy_1030@8:1>@11:0> = 0))
      |- P[<<copy_1030@8:1>@11:0>](<copy_1030@8:0>:int,<<copy_1030@8:1>@11:0>:int)
      
      P[<main_1032@6:0>](<copy_1030@8:0>:int)|- P[<copy_1030@8:0>](<copy_1030@8:0>:int)
      
      P[<f_1176@4:0>](<main_1032@6:0>:int)|- P[<main_1032@6:0>](<main_1032@6:0>:int)
      
      |- P[<f_1176@4:0>](<f_1176@4:0>:int)
    call trees:
      <main_1172@1>
        <f_1176@4>
          <main_1032@6>
            <copy_1030@8>
            </<copy_1030@8:1>@11>
            <f_main_1174@13>
              <copy_1030@15>
              </<copy_1030@15:1>@18>
              <f_main_1175@20>
                <fail_1178@23>
    inlined horn clauses:
      P[<fail_1178@23:0>](<fail_1178@23:0>:bool)|- bot
      
      P[<<copy_1030@8:1>@11:0>](<f_main_1175@20:0>:int,<f_main_1175@20:1>:int),
      P[<<copy_1030@15:1>@18:0>](<f_main_1175@20:1>:int,<f_main_1175@20:3>:int),
      ((<f_main_1175@20:3> <> <f_main_1175@20:0>) && <fail_1178@23:0>) |- P[<fail_1178@23:0>](
      <fail_1178@23:0>:bool)
      
      P[<copy_1030@15:0>](<copy_1030@15:0>:int), ((<copy_1030@15:0> = 0) && (<<copy_1030@15:1>@18:0> = 0))
      |- P[<<copy_1030@15:1>@18:0>](<copy_1030@15:0>:int,<<copy_1030@15:1>@18:0>:int)
      
      P[<<copy_1030@8:1>@11:0>](<f_main_1174@13:0>:int,<copy_1030@15:0>:int)|- P[<copy_1030@15:0>](
      <copy_1030@15:0>:int)
      
      P[<copy_1030@8:0>](<copy_1030@8:0>:int), ((<copy_1030@8:0> = 0) && (<<copy_1030@8:1>@11:0> = 0))
      |- P[<<copy_1030@8:1>@11:0>](<copy_1030@8:0>:int,<<copy_1030@8:1>@11:0>:int)
      
      |- P[<copy_1030@8:0>](<copy_1030@8:0>:int)
    begin ParamSubstInfer.infer(1184)[3]
      
    end ParamSubstInfer.infer(1184)[3] (0.006999 sec.)
    inferred extra parameters:
      
    begin RefTypeInfer.elim_coeffs(1186)[3]
      
    end RefTypeInfer.elim_coeffs(1186)[3] (0.001000 sec.)
    begin YhornInterface.solve(1395)[3]
      begin HcSolver.solve_ub(1396)[4]
        encoded:
          P[<fail_1178@23:0>](<fail_1178@23:0>:int)|- bot
          
          P[<<copy_1030@8:1>@11:0>](<f_main_1175@20:0>:int,<f_main_1175@20:1>:int),
          P[<<copy_1030@15:1>@18:0>](<f_main_1175@20:1>:int,<f_main_1175@20:3>:int),
          ((<f_main_1175@20:3> <> <f_main_1175@20:0>) && (<fail_1178@23:0> = 1))
          |- P[<fail_1178@23:0>](<fail_1178@23:0>:int)
          
          P[<copy_1030@15:0>](<copy_1030@15:0>:int), ((<copy_1030@15:0> = 0) && (<<copy_1030@15:1>@18:0> = 0))
          |- P[<<copy_1030@15:1>@18:0>](<copy_1030@15:0>:int,<<copy_1030@15:1>@18:0>:int)
          
          P[<<copy_1030@8:1>@11:0>](<f_main_1174@13:0>:int,<copy_1030@15:0>:int)|- P[<copy_1030@15:0>](
          <copy_1030@15:0>:int)
          
          P[<copy_1030@8:0>](<copy_1030@8:0>:int), ((<copy_1030@8:0> = 0) && (<<copy_1030@8:1>@11:0> = 0))
          |- P[<<copy_1030@8:1>@11:0>](<copy_1030@8:0>:int,<<copy_1030@8:1>@11:0>:int)
          
          |- P[<copy_1030@8:0>](<copy_1030@8:0>:int)
        input to Yhorn:
          P[<fail_1178@23:0>](<fail_1178@23:0>:int)|- bot
          
          P[<<copy_1030@8:1>@11:0>](<f_main_1175@20:0>:int,<f_main_1175@20:1>:int),
          P[<<copy_1030@15:1>@18:0>](<f_main_1175@20:1>:int,<f_main_1175@20:3>:int),
          ((<f_main_1175@20:3> <> <f_main_1175@20:0>) && (<fail_1178@23:0> = 1))
          |- P[<fail_1178@23:0>](<fail_1178@23:0>:int)
          
          P[<copy_1030@15:0>](<copy_1030@15:0>:int), ((<<copy_1030@15:1>@18:0> = 0) && (<copy_1030@15:0> = 0))
          |- P[<<copy_1030@15:1>@18:0>](<copy_1030@15:0>:int,<<copy_1030@15:1>@18:0>:int)
          
          P[<<copy_1030@8:1>@11:0>](<f_main_1174@13:0>:int,<copy_1030@15:0>:int)|- P[<copy_1030@15:0>](
          <copy_1030@15:0>:int)
          
          P[<copy_1030@8:0>](<copy_1030@8:0>:int), ((<<copy_1030@8:1>@11:0> = 0) && (<copy_1030@8:0> = 0))
          |- P[<<copy_1030@8:1>@11:0>](<copy_1030@8:0>:int,<<copy_1030@8:1>@11:0>:int)
          Yhorn (Wed Sep 25 10:52:05 JST 2013)


(0=0) & (v_sep_fail_1178_sep_23_sep_0($10)) -> 1=0.
(($10-1=0) & ($11-$12<>0)) & (v_sep_copy_1030_sep_15_sep_1_sep_18_sep_0($13,$11)) & (v_sep_copy_1030_sep_8_sep_1_sep_11_sep_0($12,$13)) -> v_sep_fail_1178_sep_23_sep_0($10).
(($14=0) & ($15=0)) & (v_sep_copy_1030_sep_15_sep_0($14)) -> v_sep_copy_1030_sep_15_sep_1_sep_18_sep_0($14,$15).
(0=0) & (v_sep_copy_1030_sep_8_sep_1_sep_11_sep_0($16,$14)) -> v_sep_copy_1030_sep_15_sep_0($14).
(($17=0) & ($18=0)) & (v_sep_copy_1030_sep_8_sep_0($17)) -> v_sep_copy_1030_sep_8_sep_1_sep_11_sep_0($17,$18).
0=0 -> v_sep_copy_1030_sep_8_sep_0($17).


v_sep_copy_1030_sep_15_sep_0: X
v_sep_copy_1030_sep_15_sep_1_sep_18_sep_0: X
v_sep_copy_1030_sep_8_sep_0: X
v_sep_copy_1030_sep_8_sep_1_sep_11_sep_0: X
v_sep_fail_1178_sep_23_sep_0: X
.........Split disj [20] 0.219966
Reconstrcut: 3 **)

v_sep_copy_1030_sep_15_sep_0: X
v_sep_copy_1030_sep_15_sep_1_sep_18_sep_0: X
v_sep_copy_1030_sep_8_sep_0: X
v_sep_copy_1030_sep_8_sep_1_sep_11_sep_0: X
v_sep_fail_1178_sep_23_sep_0: (X) | (X)
.......
v_sep_copy_1030_sep_15_sep_0: X
v_sep_copy_1030_sep_15_sep_1_sep_18_sep_0: X
v_sep_copy_1030_sep_8_sep_0: X
v_sep_copy_1030_sep_8_sep_1_sep_11_sep_0: X
v_sep_fail_1178_sep_23_sep_0: (X) | (X)
.......Split conj [22] 0.223965
(Reconstrcut: 8 **)
v_sep_copy_1030_sep_15_sep_0: X
v_sep_copy_1030_sep_15_sep_1_sep_18_sep_0: (X) & (X)
v_sep_copy_1030_sep_8_sep_0: X
v_sep_copy_1030_sep_8_sep_1_sep_11_sep_0: X
v_sep_fail_1178_sep_23_sep_0: (X) | (X)
.........
v_sep_copy_1030_sep_15_sep_0: X
v_sep_copy_1030_sep_15_sep_1_sep_18_sep_0: (X) & (X)
v_sep_copy_1030_sep_8_sep_0: X
v_sep_copy_1030_sep_8_sep_1_sep_11_sep_0: X
v_sep_fail_1178_sep_23_sep_0: (X) | (X)
.......Split conj [24] 0.230964
(Reconstrcut: 14 ***)
v_sep_copy_1030_sep_15_sep_0: X
v_sep_copy_1030_sep_15_sep_1_sep_18_sep_0: (X) & (X)
v_sep_copy_1030_sep_8_sep_0: X
v_sep_copy_1030_sep_8_sep_1_sep_11_sep_0: (X) & (X) & (X)
v_sep_fail_1178_sep_23_sep_0: (X) | (X)
.............
v_sep_copy_1030_sep_15_sep_0: X
v_sep_copy_1030_sep_15_sep_1_sep_18_sep_0: (X) & (X)
v_sep_copy_1030_sep_8_sep_0: X
v_sep_copy_1030_sep_8_sep_1_sep_11_sep_0: (X) & (X) & (X)
v_sep_fail_1178_sep_23_sep_0: (X) | (X)
.......
v_sep_copy_1030_sep_15_sep_0: X
v_sep_copy_1030_sep_15_sep_1_sep_18_sep_0: (X) & (X)
v_sep_copy_1030_sep_8_sep_0: X
v_sep_copy_1030_sep_8_sep_1_sep_11_sep_0: (X) & (X) & (X)
v_sep_fail_1178_sep_23_sep_0: (X) | (X)
...........
v_sep_copy_1030_sep_15_sep_0: X
v_sep_copy_1030_sep_15_sep_1_sep_18_sep_0: (X) & (X)
v_sep_copy_1030_sep_8_sep_0: X
v_sep_copy_1030_sep_8_sep_1_sep_11_sep_0: (X) & (X) & (X)
v_sep_fail_1178_sep_23_sep_0: (X) | (X)
............
v_sep_copy_1030_sep_15_sep_0: X
v_sep_copy_1030_sep_15_sep_1_sep_18_sep_0: (X) & (X)
v_sep_copy_1030_sep_8_sep_0: X
v_sep_copy_1030_sep_8_sep_1_sep_11_sep_0: (X) & (X) & (X)
v_sep_fail_1178_sep_23_sep_0: (X) | (X)
.............(0=0) & (v_sep_fail_1178_sep_23_sep_0($10)) -> 1=0.
(($10-1=0) & ($11-$12<>0)) & (v_sep_copy_1030_sep_15_sep_1_sep_18_sep_0($13,$11)) & (v_sep_copy_1030_sep_8_sep_1_sep_11_sep_0($12,$13)) -> v_sep_fail_1178_sep_23_sep_0($10).
(($14=0) & ($15=0)) & (v_sep_copy_1030_sep_15_sep_0($14)) -> v_sep_copy_1030_sep_15_sep_1_sep_18_sep_0($14,$15).
(0=0) & (v_sep_copy_1030_sep_8_sep_1_sep_11_sep_0($16,$14)) -> v_sep_copy_1030_sep_15_sep_0($14).
(($17=0) & ($18=0)) & (v_sep_copy_1030_sep_8_sep_0($17)) -> v_sep_copy_1030_sep_8_sep_1_sep_11_sep_0($17,$18).
0=0 -> v_sep_copy_1030_sep_8_sep_0($17).

          |- P[<copy_1030@8:0>](<copy_1030@8:0>:int)
        solution:
          P[<copy_1030@15:0>]($32:int) = true
          P[<<copy_1030@15:1>@18:0>]($22:int,$24:int) = ($24 = 0)
          P[<copy_1030@8:0>]($35:int) = true
          P[<<copy_1030@8:1>@11:0>]($27:int,$29:int) = ($27 = 0)
          P[<fail_1178@23:0>]($19:bool) = false
        
      end HcSolver.solve_ub(1396)[4] (0.035994 sec.)
      begin HcSolver.check_validity(1545)[4]
        input:
          P[<fail_1178@23:0>](<fail_1178@23:0>:bool)|- bot
          
          P[<<copy_1030@8:1>@11:0>](<f_main_1175@20:0>:int,<f_main_1175@20:1>:int),
          P[<<copy_1030@15:1>@18:0>](<f_main_1175@20:1>:int,<f_main_1175@20:3>:int),
          ((<f_main_1175@20:3> <> <f_main_1175@20:0>) && <fail_1178@23:0>)
          |- P[<fail_1178@23:0>](<fail_1178@23:0>:bool)
          
          P[<copy_1030@15:0>](<copy_1030@15:0>:int), ((<copy_1030@15:0> = 0) && (<<copy_1030@15:1>@18:0> = 0))
          |- P[<<copy_1030@15:1>@18:0>](<copy_1030@15:0>:int,<<copy_1030@15:1>@18:0>:int)
          
          P[<<copy_1030@8:1>@11:0>](<f_main_1174@13:0>:int,<copy_1030@15:0>:int)|- P[<copy_1030@15:0>](
          <copy_1030@15:0>:int)
          
          P[<copy_1030@8:0>](<copy_1030@8:0>:int), ((<copy_1030@8:0> = 0) && (<<copy_1030@8:1>@11:0> = 0))
          |- P[<<copy_1030@8:1>@11:0>](<copy_1030@8:0>:int,<<copy_1030@8:1>@11:0>:int)
          
          |- P[<copy_1030@8:0>](<copy_1030@8:0>:int)
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        
      end HcSolver.check_validity(1545)[4] (0.002000 sec.)
      solution:
        P[<copy_1030@15:0>]($32:int) = true
        P[<<copy_1030@15:1>@18:0>]($22:int,$24:int) = ($24 = 0)
        P[<copy_1030@8:0>]($35:int) = true
        P[<<copy_1030@8:1>@11:0>]($27:int,$29:int) = ($27 = 0)
        P[<fail_1178@23:0>]($19:bool) = false
    end YhornInterface.solve(1395)[3] (0.037994 sec.)
    
  end RefTypeInfer.infer_etrs(108)[2] (0.050992 sec.)
  refinement types:
    main_1172: X
    f_1176: v1:int -> X
    main_1032: v1:int -> (v2:unit -> X) -> X
    copy_1030: v1:int -> (v2:{v2:int | (v1 = 0)} -> X) -> X
    f_main_1174: v1:int -> (v2:unit -> X) -> v4:int -> X
    copy_1030: v1:int -> (v2:{v2:int | (v2 = 0)} -> X) -> X
    f_main_1175: v1:int -> v2:int -> (v3:unit -> X) -> v5:int -> X
    fail_1178: v1:{v1:bool | false} -> (v2:unit -> X) -> X
    f_1177: var13:int -> var12:unit -> X
    f_copy_1173: var18:int -> (var17:int -> X) -> var15:int -> X
  abstraction types:
    main_1172: X
    f_1176: v1:int -> X
    main_1032: v1:int -> (v2:unit -> X) -> X
    copy_1030: var19:int -> (var20:int[var20 -> (var19 = 0),
                                       var20 -> (var20 = 0)] -> X) -> X
    f_main_1174: v1:int -> (v2:unit -> X) -> v4:int -> X
    f_main_1175: v1:int -> v2:int -> (v3:unit -> X) -> v5:int -> X
    fail_1178: v1:bool -> (v2:unit -> X) -> X
    f_1177: var13:int -> var12:unit -> X
    f_copy_1173: var18:int -> (var17:int -> X) -> var15:int -> X
  
end AbsTypeInfer.refine(107)[1] (0.051992 sec.)
DONE!

Prefix of spurious counter-example::
0; 0; 0; 0; 0; 0; 1

Program with abstraction types (CEGAR-cycle 1)::
Main: main_1172
  main_1172 -> (rand_int f_1176)
  copy_1030 x_1031 k_copy_1074 when (x_1031 = 0) -> (k_copy_1074 0)
  copy_1030 x_1031 k_copy_1074 when (not (x_1031 = 0)) -> (copy_1030 (x_1031 - 1) (f_copy_1173 x_1031 k_copy_1074))
  f_1176 x_1147 -> (main_1032 x_1147 (f_1177 x_1147))
  f_1177 x_1147 x_1144 -> end
  f_copy_1173 x_1031 k_copy_1074 x_1078 -> (k_copy_1074 (1 + x_1078))
  f_main_1174 n_1033 k_main_1106 x_1130 -> (copy_1030 x_1130 (f_main_1175 n_1033 x_1130 k_main_1106))
  f_main_1175 n_1033 x_1130 k_main_1106 x_1109 when (x_1109 = n_1033) -> (k_main_1106 ())
  f_main_1175 n_1033 x_1130 k_main_1106 x_1109 when (not (x_1109 = n_1033)) -> (fail_1178 true k_main_1106)
  fail_1178 b k -> {fail} => (k ())
  main_1032 n_1033 k_main_1106 -> (copy_1030 n_1033 (f_main_1174 n_1033 k_main_1106))
Types:
  main_1172 : X
  copy_1030 : (x_1:int -> (x_3:int[x_3 = 0; x_1 = 0] -> X) -> X)
  fail_1178 : (x_1:bool[x_1] -> (unit -> X) -> X)
  
(1-1) Abstracting ... DONE!

(1-2) Checking HORS ... DONE!

Error trace::
  main_1172 ... --> 
  f_1176 ... --> 
  main_1032 ... --> 
  copy_1030 [2/2] ... --> 
  copy_1030 [1/2] ... --> 
  f_copy_1173 ... --> 
  f_main_1174 ... --> 
  copy_1030 [2/2] ... --> 
  copy_1030 [1/2] ... --> 
  f_copy_1173 ... --> 
  f_main_1175 [2/2] ... --> 
  fail_1178 ... --> fail -->
  ERROR!

Spurious counter-example::
  0; 0; 0; 1; 0; 0; 0; 1; 0; 0; 1; 0

(1-3) Checking counter-example ... DONE!

(1-4) Discovering predicates ... 
begin AbsTypeInfer.refine(2136)[1]
  program:
    main_1172  | true = ((Random.int 0) f_1176)
    copy_1030 x_1031 k_copy_1074 | (x_1031 = 0) = (k_copy_1074 0)
    copy_1030 x_1031 k_copy_1074 | (not (x_1031 = 0)) = (copy_1030 (x_1031 - 1)
                                                                   (f_copy_1173 x_1031
                                                                    k_copy_1074))
    f_1176 x_1147 | true = (main_1032 x_1147
                                      (f_1177 x_1147))
    f_1177 x_1147 x_1144 | true = end
    f_copy_1173 x_1031 k_copy_1074 x_1078 | true = (k_copy_1074 (1 + x_1078))
    f_main_1174 n_1033 k_main_1106 x_1130 | true = (copy_1030 x_1130
                                                              (f_main_1175 n_1033
                                                                    x_1130
                                                                    k_main_1106))
    f_main_1175 n_1033 x_1130 k_main_1106 x_1109 | (x_1109 = n_1033) = (
    k_main_1106 ())
    f_main_1175 n_1033 x_1130 k_main_1106 x_1109 | (not (x_1109 = n_1033)) = (
    fail_1178 true
              k_main_1106)
    fail_1178 b k | true = (fail ())
    main_1032 n_1033 k_main_1106 | true = (copy_1030 n_1033
                                                     (f_main_1174 n_1033
                                                                  k_main_1106))
    main_1172:X
    copy_1030:int -> (int -> X) -> X
    f_1176:int -> X
    f_1177:int -> unit -> X
    f_copy_1173:int -> (int -> X) -> int -> X
    f_main_1174:int -> (unit -> X) -> int -> X
    f_main_1175:int -> int -> (unit -> X) -> int -> X
    fail_1178:bool -> (unit -> X) -> X
    main_1032:int -> (unit -> X) -> X
  inlined functions: f_1176,f_1177,f_copy_1173,f_main_1174,f_main_1175,main_1032
  counterexample: 0:0:0:1:0:0:0:1:0:0:1:0
  error traces:
    [true.nop(<f_1176@29:0> = var23)
     [true.(<main_1032@31:0> = <f_1176@29:0>)
      [true.(<copy_1030@33:0> = <main_1032@31:0>)
       [(not (<copy_1030@33:0> = 0)).(<copy_1030@36:0> = (<copy_1030@33:0> - 1))
        [(<copy_1030@36:0> = 0).(<<copy_1030@36:1>@39:0> = 0)
         [true.((<f_copy_1173@41:0> = <copy_1030@33:0>) && (<f_copy_1173@41:2> = <<copy_1030@36:1>@39:0>))
          [true.(<<f_copy_1173@41:1>@43:0> = (1 + <f_copy_1173@41:2>))
           [true.(<<copy_1030@33:1>@45:0> = <<f_copy_1173@41:1>@43:0>)
            [true.((<f_main_1174@47:0> = <main_1032@31:0>) && (<f_main_1174@47:2> = <<copy_1030@33:1>@45:0>))
             [true.(<copy_1030@49:0> = <f_main_1174@47:2>)
              [(not (<copy_1030@49:0> = 0)).(<copy_1030@52:0> = (<copy_1030@49:0> - 1))
               [(<copy_1030@52:0> = 0).(<<copy_1030@52:1>@55:0> = 0)
                [true.((<f_copy_1173@57:0> = <copy_1030@49:0>) && (<f_copy_1173@57:2> = <<copy_1030@52:1>@55:0>))
                 [true.(<<f_copy_1173@57:1>@59:0> = (1 + <f_copy_1173@57:2>))
                  [true.(<<copy_1030@49:1>@61:0> = <<f_copy_1173@57:1>@59:0>)
                   [true.
                    ((<f_main_1175@63:0> = <f_main_1174@47:0>) &&
                     ((<f_main_1175@63:1> = <f_main_1174@47:2>) && (<f_main_1175@63:3> = <<copy_1030@49:1>@61:0>)))
                    [(not (<f_main_1175@63:3> = <f_main_1175@63:0>)).(<fail_1178@66:0> = true)[true.error
  begin RefTypeInfer.infer_etrs(2137)[2]
    horn clauses:
      P[<fail_1178@66:0>](<fail_1178@66:0>:bool)|- bot
      
      P[<f_main_1175@63:3>](<f_main_1175@63:0>:int,<f_main_1175@63:1>:int,<f_main_1175@63:3>:int),
      ((<f_main_1175@63:3> <> <f_main_1175@63:0>) && <fail_1178@66:0>) |- P[<fail_1178@66:0>](
      <fail_1178@66:0>:bool)
      
      P[<f_main_1174@47:2>](<f_main_1175@63:0>:int,<f_main_1175@63:1>:int),
      P[<<copy_1030@49:1>@61:0>](<f_main_1175@63:1>:int,<f_main_1175@63:3>:int)|- P[<f_main_1175@63:3>](
      <f_main_1175@63:0>:int,<f_main_1175@63:1>:int,<f_main_1175@63:3>:int)
      
      P[<copy_1030@49:0>](<copy_1030@49:0>:int),
      P[<<f_copy_1173@57:1>@59:0>](<copy_1030@49:0>:int,<<copy_1030@49:1>@61:0>:int), (
      <copy_1030@49:0> <> 0) |- P[<<copy_1030@49:1>@61:0>](<copy_1030@49:0>:int,
                                                           <<copy_1030@49:1>@61:0>:int)
      
      P[<f_copy_1173@57:2>](<f_copy_1173@57:0>:int,(-1 + <<f_copy_1173@57:1>@59:0>):int)|- P[<<f_copy_1173@57:1>@59:0>](
      <f_copy_1173@57:0>:int,<<f_copy_1173@57:1>@59:0>:int)
      
      P[<copy_1030@49:0>](<f_copy_1173@57:0>:int),
      P[<<copy_1030@52:1>@55:0>]((-1 + <f_copy_1173@57:0>):int,<f_copy_1173@57:2>:int), (
      <f_copy_1173@57:0> <> 0) |- P[<f_copy_1173@57:2>](<f_copy_1173@57:0>:int,
                                                        <f_copy_1173@57:2>:int)
      
      P[<copy_1030@52:0>](<copy_1030@52:0>:int), ((<copy_1030@52:0> = 0) && (<<copy_1030@52:1>@55:0> = 0))
      |- P[<<copy_1030@52:1>@55:0>](<copy_1030@52:0>:int,<<copy_1030@52:1>@55:0>:int)
      
      P[<copy_1030@49:0>]((1 + <copy_1030@52:0>):int), ((1 + <copy_1030@52:0>) <> 0)
      |- P[<copy_1030@52:0>](<copy_1030@52:0>:int)
      
      P[<f_main_1174@47:2>](<f_main_1174@47:0>:int,<copy_1030@49:0>:int)|- P[<copy_1030@49:0>](<copy_1030@49:0>:int)
      
      P[<main_1032@31:0>](<f_main_1174@47:0>:int),
      P[<<copy_1030@33:1>@45:0>](<f_main_1174@47:0>:int,<f_main_1174@47:2>:int)|- P[<f_main_1174@47:2>](
      <f_main_1174@47:0>:int,<f_main_1174@47:2>:int)
      
      P[<copy_1030@33:0>](<copy_1030@33:0>:int),
      P[<<f_copy_1173@41:1>@43:0>](<copy_1030@33:0>:int,<<copy_1030@33:1>@45:0>:int), (
      <copy_1030@33:0> <> 0) |- P[<<copy_1030@33:1>@45:0>](<copy_1030@33:0>:int,
                                                           <<copy_1030@33:1>@45:0>:int)
      
      P[<f_copy_1173@41:2>](<f_copy_1173@41:0>:int,(-1 + <<f_copy_1173@41:1>@43:0>):int)|- P[<<f_copy_1173@41:1>@43:0>](
      <f_copy_1173@41:0>:int,<<f_copy_1173@41:1>@43:0>:int)
      
      P[<copy_1030@33:0>](<f_copy_1173@41:0>:int),
      P[<<copy_1030@36:1>@39:0>]((-1 + <f_copy_1173@41:0>):int,<f_copy_1173@41:2>:int), (
      <f_copy_1173@41:0> <> 0) |- P[<f_copy_1173@41:2>](<f_copy_1173@41:0>:int,
                                                        <f_copy_1173@41:2>:int)
      
      P[<copy_1030@36:0>](<copy_1030@36:0>:int), ((<copy_1030@36:0> = 0) && (<<copy_1030@36:1>@39:0> = 0))
      |- P[<<copy_1030@36:1>@39:0>](<copy_1030@36:0>:int,<<copy_1030@36:1>@39:0>:int)
      
      P[<copy_1030@33:0>]((1 + <copy_1030@36:0>):int), ((1 + <copy_1030@36:0>) <> 0)
      |- P[<copy_1030@36:0>](<copy_1030@36:0>:int)
      
      P[<main_1032@31:0>](<copy_1030@33:0>:int)|- P[<copy_1030@33:0>](<copy_1030@33:0>:int)
      
      P[<f_1176@29:0>](<main_1032@31:0>:int)|- P[<main_1032@31:0>](<main_1032@31:0>:int)
      
      |- P[<f_1176@29:0>](<f_1176@29:0>:int)
    call trees:
      <main_1172@26>
        <f_1176@29>
          <main_1032@31>
            <copy_1030@33>
              <copy_1030@36>
              </<copy_1030@36:1>@39>
              <f_copy_1173@41>
              </<f_copy_1173@41:1>@43>
            </<copy_1030@33:1>@45>
            <f_main_1174@47>
              <copy_1030@49>
                <copy_1030@52>
                </<copy_1030@52:1>@55>
                <f_copy_1173@57>
                </<f_copy_1173@57:1>@59>
              </<copy_1030@49:1>@61>
              <f_main_1175@63>
                <fail_1178@66>
    inlined horn clauses:
      P[<fail_1178@66:0>](<fail_1178@66:0>:bool)|- bot
      
      P[<<copy_1030@33:1>@45:0>](<f_main_1175@63:0>:int,<f_main_1175@63:1>:int),
      P[<<copy_1030@49:1>@61:0>](<f_main_1175@63:1>:int,<f_main_1175@63:3>:int),
      ((<f_main_1175@63:3> <> <f_main_1175@63:0>) && <fail_1178@66:0>) |- P[<fail_1178@66:0>](
      <fail_1178@66:0>:bool)
      
      P[<copy_1030@49:0>](<copy_1030@49:0>:int),
      P[<<copy_1030@52:1>@55:0>]((-1 + <copy_1030@49:0>):int,(-1 + <<copy_1030@49:1>@61:0>):int),
      (<copy_1030@49:0> <> 0) |- P[<<copy_1030@49:1>@61:0>](<copy_1030@49:0>:int,
                                                            <<copy_1030@49:1>@61:0>:int)
      
      P[<copy_1030@52:0>](<copy_1030@52:0>:int), ((<copy_1030@52:0> = 0) && (<<copy_1030@52:1>@55:0> = 0))
      |- P[<<copy_1030@52:1>@55:0>](<copy_1030@52:0>:int,<<copy_1030@52:1>@55:0>:int)
      
      P[<copy_1030@49:0>]((1 + <copy_1030@52:0>):int), ((1 + <copy_1030@52:0>) <> 0)
      |- P[<copy_1030@52:0>](<copy_1030@52:0>:int)
      
      P[<<copy_1030@33:1>@45:0>](<f_main_1174@47:0>:int,<copy_1030@49:0>:int)|- P[<copy_1030@49:0>](
      <copy_1030@49:0>:int)
      
      P[<copy_1030@33:0>](<copy_1030@33:0>:int),
      P[<<copy_1030@36:1>@39:0>]((-1 + <copy_1030@33:0>):int,(-1 + <<copy_1030@33:1>@45:0>):int),
      (<copy_1030@33:0> <> 0) |- P[<<copy_1030@33:1>@45:0>](<copy_1030@33:0>:int,
                                                            <<copy_1030@33:1>@45:0>:int)
      
      P[<copy_1030@36:0>](<copy_1030@36:0>:int), ((<copy_1030@36:0> = 0) && (<<copy_1030@36:1>@39:0> = 0))
      |- P[<<copy_1030@36:1>@39:0>](<copy_1030@36:0>:int,<<copy_1030@36:1>@39:0>:int)
      
      P[<copy_1030@33:0>]((1 + <copy_1030@36:0>):int), ((1 + <copy_1030@36:0>) <> 0)
      |- P[<copy_1030@36:0>](<copy_1030@36:0>:int)
      
      |- P[<copy_1030@33:0>](<copy_1030@33:0>:int)
    begin ParamSubstInfer.infer(4239)[3]
      
    end ParamSubstInfer.infer(4239)[3] (0.020997 sec.)
    inferred extra parameters:
      
    begin RefTypeInfer.elim_coeffs(4241)[3]
      
    end RefTypeInfer.elim_coeffs(4241)[3] (0.001000 sec.)
    begin YhornInterface.solve(4558)[3]
      begin HcSolver.solve_ub(4559)[4]
        encoded:
          P[<fail_1178@66:0>](<fail_1178@66:0>:int)|- bot
          
          P[<<copy_1030@33:1>@45:0>](<f_main_1175@63:0>:int,<f_main_1175@63:1>:int),
          P[<<copy_1030@49:1>@61:0>](<f_main_1175@63:1>:int,<f_main_1175@63:3>:int),
          ((<f_main_1175@63:3> <> <f_main_1175@63:0>) && (<fail_1178@66:0> = 1))
          |- P[<fail_1178@66:0>](<fail_1178@66:0>:int)
          
          P[<copy_1030@49:0>](<copy_1030@49:0>:int),
          P[<<copy_1030@52:1>@55:0>]((-1 + <copy_1030@49:0>):int,(-1 + <<copy_1030@49:1>@61:0>):int),
          (<copy_1030@49:0> <> 0) |- P[<<copy_1030@49:1>@61:0>](<copy_1030@49:0>:int,
                                                                <<copy_1030@49:1>@61:0>:int)
          
          P[<copy_1030@52:0>](<copy_1030@52:0>:int), ((<copy_1030@52:0> = 0) && (<<copy_1030@52:1>@55:0> = 0))
          |- P[<<copy_1030@52:1>@55:0>](<copy_1030@52:0>:int,<<copy_1030@52:1>@55:0>:int)
          
          P[<copy_1030@49:0>]((1 + <copy_1030@52:0>):int), ((1 + <copy_1030@52:0>) <> 0)
          |- P[<copy_1030@52:0>](<copy_1030@52:0>:int)
          
          P[<<copy_1030@33:1>@45:0>](<f_main_1174@47:0>:int,<copy_1030@49:0>:int)|- P[<copy_1030@49:0>](
          <copy_1030@49:0>:int)
          
          P[<copy_1030@33:0>](<copy_1030@33:0>:int),
          P[<<copy_1030@36:1>@39:0>]((-1 + <copy_1030@33:0>):int,(-1 + <<copy_1030@33:1>@45:0>):int),
          (<copy_1030@33:0> <> 0) |- P[<<copy_1030@33:1>@45:0>](<copy_1030@33:0>:int,
                                                                <<copy_1030@33:1>@45:0>:int)
          
          P[<copy_1030@36:0>](<copy_1030@36:0>:int), ((<copy_1030@36:0> = 0) && (<<copy_1030@36:1>@39:0> = 0))
          |- P[<<copy_1030@36:1>@39:0>](<copy_1030@36:0>:int,<<copy_1030@36:1>@39:0>:int)
          
          P[<copy_1030@33:0>]((1 + <copy_1030@36:0>):int), ((1 + <copy_1030@36:0>) <> 0)
          |- P[<copy_1030@36:0>](<copy_1030@36:0>:int)
          
          |- P[<copy_1030@33:0>](<copy_1030@33:0>:int)
        input to Yhorn:
          P[<fail_1178@66:0>](<fail_1178@66:0>:int)|- bot
          
          P[<<copy_1030@33:1>@45:0>](<f_main_1175@63:0>:int,<f_main_1175@63:1>:int),
          P[<<copy_1030@49:1>@61:0>](<f_main_1175@63:1>:int,<f_main_1175@63:3>:int),
          ((<f_main_1175@63:3> <> <f_main_1175@63:0>) && (<fail_1178@66:0> = 1))
          |- P[<fail_1178@66:0>](<fail_1178@66:0>:int)
          
          P[<copy_1030@49:0>](<copy_1030@49:0>:int),
          P[<<copy_1030@52:1>@55:0>](var24:int,var25:int),
          (((1 + var25) = <<copy_1030@49:1>@61:0>) && (((1 + var24) = <copy_1030@49:0>) && (<copy_1030@49:0> <> 0)))
          |- P[<<copy_1030@49:1>@61:0>](<copy_1030@49:0>:int,<<copy_1030@49:1>@61:0>:int)
          
          P[<copy_1030@52:0>](<copy_1030@52:0>:int), ((<<copy_1030@52:1>@55:0> = 0) && (<copy_1030@52:0> = 0))
          |- P[<<copy_1030@52:1>@55:0>](<copy_1030@52:0>:int,<<copy_1030@52:1>@55:0>:int)
          
          P[<copy_1030@49:0>](var26:int), ((var26 = (1 + <copy_1030@52:0>)) && ((1 + <copy_1030@52:0>) <> 0))
          |- P[<copy_1030@52:0>](<copy_1030@52:0>:int)
          
          P[<<copy_1030@33:1>@45:0>](<f_main_1174@47:0>:int,<copy_1030@49:0>:int)|- P[<copy_1030@49:0>](
          <copy_1030@49:0>:int)
          
          P[<copy_1030@33:0>](<copy_1030@33:0>:int),
          P[<<copy_1030@36:1>@39:0>](var27:int,var28:int),
          (((1 + var28) = <<copy_1030@33:1>@45:0>) && (((1 + var27) = <copy_1030@33:0>) && (<copy_1030@33:0> <> 0)))
          |- P[<<copy_1030@33:1>@45:0>](<copy_1030@33:0>:int,<<copy_1030@33:1>@45:0>:int)
          
          P[<copy_1030@36:0>](<copy_1030@36:0>:int), ((<<copy_1030@36:1>@39:0> = 0) && (<copy_1030@36:0> = 0))
          |- P[<<copy_1030@36:1>@39:0>](<copy_1030@36:0>:int,<<copy_1030@36:1>@39:0>:int)
          
          P[<copy_1030@33:0>](var29:int), ((var29 = (1 + <copy_1030@36:0>)) && ((1 + <copy_1030@36:0>) <> 0))
          |- P[<copy_1030@36:0>](<copy_1030@36:0>:int)
          Yhorn (Wed Sep 25 10:52:05 JST 2013)


(0=0) & (v_sep_fail_1178_sep_66_sep_0($275)) -> 1=0.
(($275-1=0) & ($276-$277<>0)) & (v_sep_copy_1030_sep_49_sep_1_sep_61_sep_0($278,$276)) & (v_sep_copy_1030_sep_33_sep_1_sep_45_sep_0($277,$278)) -> v_sep_fail_1178_sep_66_sep_0($275).
(($279<>0) & (-$279+$280+1=0) & ($281-$282+1=0)) & (v_sep_copy_1030_sep_52_sep_1_sep_55_sep_0($280,$281)) & (v_sep_copy_1030_sep_49_sep_0($279)) -> v_sep_copy_1030_sep_49_sep_1_sep_61_sep_0($279,$282).
(($283=0) & ($284=0)) & (v_sep_copy_1030_sep_52_sep_0($283)) -> v_sep_copy_1030_sep_52_sep_1_sep_55_sep_0($283,$284).
(($283+1<>0) & (-$283+$285-1=0)) & (v_sep_copy_1030_sep_49_sep_0($285)) -> v_sep_copy_1030_sep_52_sep_0($283).
(0=0) & (v_sep_copy_1030_sep_33_sep_1_sep_45_sep_0($286,$279)) -> v_sep_copy_1030_sep_49_sep_0($279).
(($287<>0) & (-$287+$288+1=0) & ($289-$290+1=0)) & (v_sep_copy_1030_sep_36_sep_1_sep_39_sep_0($288,$289)) & (v_sep_copy_1030_sep_33_sep_0($287)) -> v_sep_copy_1030_sep_33_sep_1_sep_45_sep_0($287,$290).
(($291=0) & ($292=0)) & (v_sep_copy_1030_sep_36_sep_0($291)) -> v_sep_copy_1030_sep_36_sep_1_sep_39_sep_0($291,$292).
(($291+1<>0) & (-$291+$293-1=0)) & (v_sep_copy_1030_sep_33_sep_0($293)) -> v_sep_copy_1030_sep_36_sep_0($291).
0=0 -> v_sep_copy_1030_sep_33_sep_0($287).


v_sep_copy_1030_sep_33_sep_0: X
v_sep_copy_1030_sep_33_sep_1_sep_45_sep_0: X
v_sep_copy_1030_sep_36_sep_0: X
v_sep_copy_1030_sep_36_sep_1_sep_39_sep_0: X
v_sep_copy_1030_sep_49_sep_0: X
v_sep_copy_1030_sep_49_sep_1_sep_61_sep_0: X
v_sep_copy_1030_sep_52_sep_0: X
v_sep_copy_1030_sep_52_sep_1_sep_55_sep_0: X
v_sep_fail_1178_sep_66_sep_0: X
.....................Split disj [40] 0.317951
Reconstrcut: 3 **)

v_sep_copy_1030_sep_33_sep_0: X
v_sep_copy_1030_sep_33_sep_1_sep_45_sep_0: X
v_sep_copy_1030_sep_36_sep_0: X
v_sep_copy_1030_sep_36_sep_1_sep_39_sep_0: X
v_sep_copy_1030_sep_49_sep_0: X
v_sep_copy_1030_sep_49_sep_1_sep_61_sep_0: X
v_sep_copy_1030_sep_52_sep_0: X
v_sep_copy_1030_sep_52_sep_1_sep_55_sep_0: X
v_sep_fail_1178_sep_66_sep_0: (X) | (X)
.......
v_sep_copy_1030_sep_33_sep_0: X
v_sep_copy_1030_sep_33_sep_1_sep_45_sep_0: X
v_sep_copy_1030_sep_36_sep_0: X
v_sep_copy_1030_sep_36_sep_1_sep_39_sep_0: X
v_sep_copy_1030_sep_49_sep_0: X
v_sep_copy_1030_sep_49_sep_1_sep_61_sep_0: X
v_sep_copy_1030_sep_52_sep_0: X
v_sep_copy_1030_sep_52_sep_1_sep_55_sep_0: X
v_sep_fail_1178_sep_66_sep_0: (X) | (X)
.......Split conj [42] 0.32295
(Reconstrcut: 8 **)
v_sep_copy_1030_sep_33_sep_0: X
v_sep_copy_1030_sep_33_sep_1_sep_45_sep_0: X
v_sep_copy_1030_sep_36_sep_0: X
v_sep_copy_1030_sep_36_sep_1_sep_39_sep_0: X
v_sep_copy_1030_sep_49_sep_0: X
v_sep_copy_1030_sep_49_sep_1_sep_61_sep_0: (X) & (X)
v_sep_copy_1030_sep_52_sep_0: X
v_sep_copy_1030_sep_52_sep_1_sep_55_sep_0: X
v_sep_fail_1178_sep_66_sep_0: (X) | (X)
...............
v_sep_copy_1030_sep_33_sep_0: X
v_sep_copy_1030_sep_33_sep_1_sep_45_sep_0: X
v_sep_copy_1030_sep_36_sep_0: X
v_sep_copy_1030_sep_36_sep_1_sep_39_sep_0: X
v_sep_copy_1030_sep_49_sep_0: X
v_sep_copy_1030_sep_49_sep_1_sep_61_sep_0: (X) & (X)
v_sep_copy_1030_sep_52_sep_0: X
v_sep_copy_1030_sep_52_sep_1_sep_55_sep_0: X
v_sep_fail_1178_sep_66_sep_0: (X) | (X)
.......Split conj [45] 0.337948
(Reconstrcut: 21 ***)
v_sep_copy_1030_sep_33_sep_0: X
v_sep_copy_1030_sep_33_sep_1_sep_45_sep_0: (X) & (X) & (X)
v_sep_copy_1030_sep_36_sep_0: X
v_sep_copy_1030_sep_36_sep_1_sep_39_sep_0: X
v_sep_copy_1030_sep_49_sep_0: X
v_sep_copy_1030_sep_49_sep_1_sep_61_sep_0: (X) & (X)
v_sep_copy_1030_sep_52_sep_0: X
v_sep_copy_1030_sep_52_sep_1_sep_55_sep_0: X
v_sep_fail_1178_sep_66_sep_0: (X) | (X)
...............................
v_sep_copy_1030_sep_33_sep_0: X
v_sep_copy_1030_sep_33_sep_1_sep_45_sep_0: (X) & (X) & (X)
v_sep_copy_1030_sep_36_sep_0: X
v_sep_copy_1030_sep_36_sep_1_sep_39_sep_0: X
v_sep_copy_1030_sep_49_sep_0: X
v_sep_copy_1030_sep_49_sep_1_sep_61_sep_0: (X) & (X)
v_sep_copy_1030_sep_52_sep_0: X
v_sep_copy_1030_sep_52_sep_1_sep_55_sep_0: X
v_sep_fail_1178_sep_66_sep_0: (X) | (X)
.......
v_sep_copy_1030_sep_33_sep_0: X
v_sep_copy_1030_sep_33_sep_1_sep_45_sep_0: (X) & (X) & (X)
v_sep_copy_1030_sep_36_sep_0: X
v_sep_copy_1030_sep_36_sep_1_sep_39_sep_0: X
v_sep_copy_1030_sep_49_sep_0: X
v_sep_copy_1030_sep_49_sep_1_sep_61_sep_0: (X) & (X)
v_sep_copy_1030_sep_52_sep_0: X
v_sep_copy_1030_sep_52_sep_1_sep_55_sep_0: X
v_sep_fail_1178_sep_66_sep_0: (X) | (X)
.......................Split conj [51] 0.357945
(Reconstrcut: 14 ****)
v_sep_copy_1030_sep_33_sep_0: X
v_sep_copy_1030_sep_33_sep_1_sep_45_sep_0: (X) & (X) & (X)
v_sep_copy_1030_sep_36_sep_0: X
v_sep_copy_1030_sep_36_sep_1_sep_39_sep_0: X
v_sep_copy_1030_sep_49_sep_0: X
v_sep_copy_1030_sep_49_sep_1_sep_61_sep_0: (X) & (X)
v_sep_copy_1030_sep_52_sep_0: X
v_sep_copy_1030_sep_52_sep_1_sep_55_sep_0: (X) & (X) & (X) & (X)
v_sep_fail_1178_sep_66_sep_0: (X) | (X)
...................
v_sep_copy_1030_sep_33_sep_0: X
v_sep_copy_1030_sep_33_sep_1_sep_45_sep_0: (X) & (X) & (X)
v_sep_copy_1030_sep_36_sep_0: X
v_sep_copy_1030_sep_36_sep_1_sep_39_sep_0: X
v_sep_copy_1030_sep_49_sep_0: X
v_sep_copy_1030_sep_49_sep_1_sep_61_sep_0: (X) & (X)
v_sep_copy_1030_sep_52_sep_0: X
v_sep_copy_1030_sep_52_sep_1_sep_55_sep_0: (X) & (X) & (X) & (X)
v_sep_fail_1178_sep_66_sep_0: (X) | (X)
.......
v_sep_copy_1030_sep_33_sep_0: X
v_sep_copy_1030_sep_33_sep_1_sep_45_sep_0: (X) & (X) & (X)
v_sep_copy_1030_sep_36_sep_0: X
v_sep_copy_1030_sep_36_sep_1_sep_39_sep_0: X
v_sep_copy_1030_sep_49_sep_0: X
v_sep_copy_1030_sep_49_sep_1_sep_61_sep_0: (X) & (X)
v_sep_copy_1030_sep_52_sep_0: X
v_sep_copy_1030_sep_52_sep_1_sep_55_sep_0: (X) & (X) & (X) & (X)
v_sep_fail_1178_sep_66_sep_0: (X) | (X)
.......................Split conj [57] 0.38394
(Reconstrcut: 25 ******)
v_sep_copy_1030_sep_33_sep_0: X
v_sep_copy_1030_sep_33_sep_1_sep_45_sep_0: (X) & (X) & (X)
v_sep_copy_1030_sep_36_sep_0: X
v_sep_copy_1030_sep_36_sep_1_sep_39_sep_0: X
v_sep_copy_1030_sep_49_sep_0: (X) & (X) & (X) & (X) & (X) & (X)
v_sep_copy_1030_sep_49_sep_1_sep_61_sep_0: (X) & (X)
v_sep_copy_1030_sep_52_sep_0: X
v_sep_copy_1030_sep_52_sep_1_sep_55_sep_0: (X) & (X) & (X) & (X)
v_sep_fail_1178_sep_66_sep_0: (X) | (X)
...........................
v_sep_copy_1030_sep_33_sep_0: X
v_sep_copy_1030_sep_33_sep_1_sep_45_sep_0: (X) & (X) & (X)
v_sep_copy_1030_sep_36_sep_0: X
v_sep_copy_1030_sep_36_sep_1_sep_39_sep_0: X
v_sep_copy_1030_sep_49_sep_0: (X) & (X) & (X) & (X) & (X) & (X)
v_sep_copy_1030_sep_49_sep_1_sep_61_sep_0: (X) & (X)
v_sep_copy_1030_sep_52_sep_0: X
v_sep_copy_1030_sep_52_sep_1_sep_55_sep_0: (X) & (X) & (X) & (X)
v_sep_fail_1178_sep_66_sep_0: (X) | (X)
.......
v_sep_copy_1030_sep_33_sep_0: X
v_sep_copy_1030_sep_33_sep_1_sep_45_sep_0: (X) & (X) & (X)
v_sep_copy_1030_sep_36_sep_0: X
v_sep_copy_1030_sep_36_sep_1_sep_39_sep_0: X
v_sep_copy_1030_sep_49_sep_0: (X) & (X) & (X) & (X) & (X) & (X)
v_sep_copy_1030_sep_49_sep_1_sep_61_sep_0: (X) & (X)
v_sep_copy_1030_sep_52_sep_0: X
v_sep_copy_1030_sep_52_sep_1_sep_55_sep_0: (X) & (X) & (X) & (X)
v_sep_fail_1178_sep_66_sep_0: (X) | (X)
.......................Split conj [67] 0.413936
(Reconstrcut: 46 ******)
v_sep_copy_1030_sep_33_sep_0: X
v_sep_copy_1030_sep_33_sep_1_sep_45_sep_0: (X) & (X) & (X)
v_sep_copy_1030_sep_36_sep_0: X
v_sep_copy_1030_sep_36_sep_1_sep_39_sep_0: (X) & (X) & (X) & (X) & (X) & (X)
v_sep_copy_1030_sep_49_sep_0: (X) & (X) & (X) & (X) & (X) & (X)
v_sep_copy_1030_sep_49_sep_1_sep_61_sep_0: (X) & (X)
v_sep_copy_1030_sep_52_sep_0: X
v_sep_copy_1030_sep_52_sep_1_sep_55_sep_0: (X) & (X) & (X) & (X)
v_sep_fail_1178_sep_66_sep_0: (X) | (X)
.............................................
v_sep_copy_1030_sep_33_sep_0: X
v_sep_copy_1030_sep_33_sep_1_sep_45_sep_0: (X) & (X) & (X)
v_sep_copy_1030_sep_36_sep_0: X
v_sep_copy_1030_sep_36_sep_1_sep_39_sep_0: (X) & (X) & (X) & (X) & (X) & (X)
v_sep_copy_1030_sep_49_sep_0: (X) & (X) & (X) & (X) & (X) & (X)
v_sep_copy_1030_sep_49_sep_1_sep_61_sep_0: (X) & (X)
v_sep_copy_1030_sep_52_sep_0: X
v_sep_copy_1030_sep_52_sep_1_sep_55_sep_0: (X) & (X) & (X) & (X)
v_sep_fail_1178_sep_66_sep_0: (X) | (X)
.......
v_sep_copy_1030_sep_33_sep_0: X
v_sep_copy_1030_sep_33_sep_1_sep_45_sep_0: (X) & (X) & (X)
v_sep_copy_1030_sep_36_sep_0: X
v_sep_copy_1030_sep_36_sep_1_sep_39_sep_0: (X) & (X) & (X) & (X) & (X) & (X)
v_sep_copy_1030_sep_49_sep_0: (X) & (X) & (X) & (X) & (X) & (X)
v_sep_copy_1030_sep_49_sep_1_sep_61_sep_0: (X) & (X)
v_sep_copy_1030_sep_52_sep_0: X
v_sep_copy_1030_sep_52_sep_1_sep_55_sep_0: (X) & (X) & (X) & (X)
v_sep_fail_1178_sep_66_sep_0: (X) | (X)
.......................
v_sep_copy_1030_sep_33_sep_0: X
v_sep_copy_1030_sep_33_sep_1_sep_45_sep_0: (X) & (X) & (X)
v_sep_copy_1030_sep_36_sep_0: X
v_sep_copy_1030_sep_36_sep_1_sep_39_sep_0: (X) & (X) & (X) & (X) & (X) & (X)
v_sep_copy_1030_sep_49_sep_0: (X) & (X) & (X) & (X) & (X) & (X)
v_sep_copy_1030_sep_49_sep_1_sep_61_sep_0: (X) & (X)
v_sep_copy_1030_sep_52_sep_0: X
v_sep_copy_1030_sep_52_sep_1_sep_55_sep_0: (X) & (X) & (X) & (X)
v_sep_fail_1178_sep_66_sep_0: (X) | (X)
...................................
v_sep_copy_1030_sep_33_sep_0: X
v_sep_copy_1030_sep_33_sep_1_sep_45_sep_0: (X) & (X) & (X)
v_sep_copy_1030_sep_36_sep_0: X
v_sep_copy_1030_sep_36_sep_1_sep_39_sep_0: (X) & (X) & (X) & (X) & (X) & (X)
v_sep_copy_1030_sep_49_sep_0: (X) & (X) & (X) & (X) & (X) & (X)
v_sep_copy_1030_sep_49_sep_1_sep_61_sep_0: (X) & (X)
v_sep_copy_1030_sep_52_sep_0: X
v_sep_copy_1030_sep_52_sep_1_sep_55_sep_0: (X) & (X) & (X) & (X)
v_sep_fail_1178_sep_66_sep_0: (X) | (X)
...........................................
v_sep_copy_1030_sep_33_sep_0: X
v_sep_copy_1030_sep_33_sep_1_sep_45_sep_0: (X) & (X) & (X)
v_sep_copy_1030_sep_36_sep_0: X
v_sep_copy_1030_sep_36_sep_1_sep_39_sep_0: (X) & (X) & (X) & (X) & (X) & (X)
v_sep_copy_1030_sep_49_sep_0: (X) & (X) & (X) & (X) & (X) & (X)
v_sep_copy_1030_sep_49_sep_1_sep_61_sep_0: (X) & (X)
v_sep_copy_1030_sep_52_sep_0: X
v_sep_copy_1030_sep_52_sep_1_sep_55_sep_0: (X) & (X) & (X) & (X)
v_sep_fail_1178_sep_66_sep_0: (X) | (X)
...............................................(0=0) & (v_sep_fail_1178_sep_66_sep_0($275)) -> 1=0.
(($275-1=0) & ($276-$277<>0)) & (v_sep_copy_1030_sep_49_sep_1_sep_61_sep_0($278,$276)) & (v_sep_copy_1030_sep_33_sep_1_sep_45_sep_0($277,$278)) -> v_sep_fail_1178_sep_66_sep_0($275).
(($279<>0) & (-$279+$280+1=0) & ($281-$282+1=0)) & (v_sep_copy_1030_sep_52_sep_1_sep_55_sep_0($280,$281)) & (v_sep_copy_1030_sep_49_sep_0($279)) -> v_sep_copy_1030_sep_49_sep_1_sep_61_sep_0($279,$282).
(($283=0) & ($284=0)) & (v_sep_copy_1030_sep_52_sep_0($283)) -> v_sep_copy_1030_sep_52_sep_1_sep_55_sep_0($283,$284).
(($283+1<>0) & (-$283+$285-1=0)) & (v_sep_copy_1030_sep_49_sep_0($285)) -> v_sep_copy_1030_sep_52_sep_0($283).
(0=0) & (v_sep_copy_1030_sep_33_sep_1_sep_45_sep_0($286,$279)) -> v_sep_copy_1030_sep_49_sep_0($279).
(($287<>0) & (-$287+$288+1=0) & ($289-$290+1=0)) & (v_sep_copy_1030_sep_36_sep_1_sep_39_sep_0($288,$289)) & (v_sep_copy_1030_sep_33_sep_0($287)) -> v_sep_copy_1030_sep_33_sep_1_sep_45_sep_0($287,$290).
(($291=0) & ($292=0)) & (v_sep_copy_1030_sep_36_sep_0($291)) -> v_sep_copy_1030_sep_36_sep_1_sep_39_sep_0($291,$292).
(($291+1<>0) & (-$291+$293-1=0)) & (v_sep_copy_1030_sep_33_sep_0($293)) -> v_sep_copy_1030_sep_36_sep_0($291).
0=0 -> v_sep_copy_1030_sep_33_sep_0($287).

          |- P[<copy_1030@33:0>](<copy_1030@33:0>:int)
        solution:
          P[<copy_1030@33:0>]($323:int) = true
          P[<<copy_1030@33:1>@45:0>]($302:int,$304:int) = ($302 = 1)
          P[<copy_1030@36:0>]($326:int) = true
          P[<<copy_1030@36:1>@39:0>]($318:int,$320:int) = ($318 = 0)
          P[<copy_1030@49:0>]($312:int) = true
          P[<<copy_1030@49:1>@61:0>]($297:int,$299:int) = ($299 = 1)
          P[<copy_1030@52:0>]($315:int) = true
          P[<<copy_1030@52:1>@55:0>]($307:int,$309:int) = ($309 = 0)
          P[<fail_1178@66:0>]($294:bool) = false
        
      end HcSolver.solve_ub(4559)[4] (0.238964 sec.)
      begin HcSolver.check_validity(5054)[4]
        input:
          P[<fail_1178@66:0>](<fail_1178@66:0>:bool)|- bot
          
          P[<<copy_1030@33:1>@45:0>](<f_main_1175@63:0>:int,<f_main_1175@63:1>:int),
          P[<<copy_1030@49:1>@61:0>](<f_main_1175@63:1>:int,<f_main_1175@63:3>:int),
          ((<f_main_1175@63:3> <> <f_main_1175@63:0>) && <fail_1178@66:0>)
          |- P[<fail_1178@66:0>](<fail_1178@66:0>:bool)
          
          P[<copy_1030@49:0>](<copy_1030@49:0>:int),
          P[<<copy_1030@52:1>@55:0>]((-1 + <copy_1030@49:0>):int,(-1 + <<copy_1030@49:1>@61:0>):int),
          (<copy_1030@49:0> <> 0) |- P[<<copy_1030@49:1>@61:0>](<copy_1030@49:0>:int,
                                                                <<copy_1030@49:1>@61:0>:int)
          
          P[<copy_1030@52:0>](<copy_1030@52:0>:int), ((<copy_1030@52:0> = 0) && (<<copy_1030@52:1>@55:0> = 0))
          |- P[<<copy_1030@52:1>@55:0>](<copy_1030@52:0>:int,<<copy_1030@52:1>@55:0>:int)
          
          P[<copy_1030@49:0>]((1 + <copy_1030@52:0>):int), ((1 + <copy_1030@52:0>) <> 0)
          |- P[<copy_1030@52:0>](<copy_1030@52:0>:int)
          
          P[<<copy_1030@33:1>@45:0>](<f_main_1174@47:0>:int,<copy_1030@49:0>:int)|- P[<copy_1030@49:0>](
          <copy_1030@49:0>:int)
          
          P[<copy_1030@33:0>](<copy_1030@33:0>:int),
          P[<<copy_1030@36:1>@39:0>]((-1 + <copy_1030@33:0>):int,(-1 + <<copy_1030@33:1>@45:0>):int),
          (<copy_1030@33:0> <> 0) |- P[<<copy_1030@33:1>@45:0>](<copy_1030@33:0>:int,
                                                                <<copy_1030@33:1>@45:0>:int)
          
          P[<copy_1030@36:0>](<copy_1030@36:0>:int), ((<copy_1030@36:0> = 0) && (<<copy_1030@36:1>@39:0> = 0))
          |- P[<<copy_1030@36:1>@39:0>](<copy_1030@36:0>:int,<<copy_1030@36:1>@39:0>:int)
          
          P[<copy_1030@33:0>]((1 + <copy_1030@36:0>):int), ((1 + <copy_1030@36:0>) <> 0)
          |- P[<copy_1030@36:0>](<copy_1030@36:0>:int)
          
          |- P[<copy_1030@33:0>](<copy_1030@33:0>:int)
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        
      end HcSolver.check_validity(5054)[4] (0.002999 sec.)
      solution:
        P[<copy_1030@33:0>]($323:int) = true
        P[<<copy_1030@33:1>@45:0>]($302:int,$304:int) = ($302 = 1)
        P[<copy_1030@36:0>]($326:int) = true
        P[<<copy_1030@36:1>@39:0>]($318:int,$320:int) = ($318 = 0)
        P[<copy_1030@49:0>]($312:int) = true
        P[<<copy_1030@49:1>@61:0>]($297:int,$299:int) = ($299 = 1)
        P[<copy_1030@52:0>]($315:int) = true
        P[<<copy_1030@52:1>@55:0>]($307:int,$309:int) = ($309 = 0)
        P[<fail_1178@66:0>]($294:bool) = false
    end YhornInterface.solve(4558)[3] (0.242963 sec.)
    
  end RefTypeInfer.infer_etrs(2137)[2] (0.276958 sec.)
  refinement types:
    main_1172: X
    f_1176: v1:int -> X
    main_1032: v1:int -> (v2:unit -> X) -> X
    copy_1030: v1:int -> (v2:{v2:int | (v1 = 1)} -> X) -> X
    copy_1030: v1:int -> (v2:{v2:int | (v1 = 0)} -> X) -> X
    f_copy_1173: v1:int -> (v2:int -> X) -> v4:int -> X
    f_main_1174: v1:int -> (v2:unit -> X) -> v4:int -> X
    copy_1030: v1:int -> (v2:{v2:int | (v2 = 1)} -> X) -> X
    copy_1030: v1:int -> (v2:{v2:int | (v2 = 0)} -> X) -> X
    f_copy_1173: v1:int -> (v2:int -> X) -> v4:int -> X
    f_main_1175: v1:int -> v2:int -> (v3:unit -> X) -> v5:int -> X
    fail_1178: v1:{v1:bool | false} -> (v2:unit -> X) -> X
    f_1177: var40:int -> var39:unit -> X
  abstraction types:
    main_1172: X
    f_1176: v1:int -> X
    main_1032: v1:int -> (v2:unit -> X) -> X
    copy_1030: var49:int ->
               (var50:int[var50 -> (var49 = 1),
                          var50 -> (var49 = 0),
                          var50 -> (var50 = 1),
                          var50 -> (var50 = 0)] -> X) -> X
    f_copy_1173: var53:int -> (var54:int -> X) -> var56:int -> X
    f_main_1174: v1:int -> (v2:unit -> X) -> v4:int -> X
    f_main_1175: v1:int -> v2:int -> (v3:unit -> X) -> v5:int -> X
    fail_1178: v1:bool -> (v2:unit -> X) -> X
    f_1177: var40:int -> var39:unit -> X
  
end AbsTypeInfer.refine(2136)[1] (0.278958 sec.)
DONE!

Prefix of spurious counter-example::
0; 0; 0; 1; 0; 0; 0; 1; 0; 0; 1

Program with abstraction types (CEGAR-cycle 2)::
Main: main_1172
  main_1172 -> (rand_int f_1176)
  copy_1030 x_1031 k_copy_1074 when (x_1031 = 0) -> (k_copy_1074 0)
  copy_1030 x_1031 k_copy_1074 when (not (x_1031 = 0)) -> (copy_1030 (x_1031 - 1) (f_copy_1173 x_1031 k_copy_1074))
  f_1176 x_1147 -> (main_1032 x_1147 (f_1177 x_1147))
  f_1177 x_1147 x_1144 -> end
  f_copy_1173 x_1031 k_copy_1074 x_1078 -> (k_copy_1074 (1 + x_1078))
  f_main_1174 n_1033 k_main_1106 x_1130 -> (copy_1030 x_1130 (f_main_1175 n_1033 x_1130 k_main_1106))
  f_main_1175 n_1033 x_1130 k_main_1106 x_1109 when (x_1109 = n_1033) -> (k_main_1106 ())
  f_main_1175 n_1033 x_1130 k_main_1106 x_1109 when (not (x_1109 = n_1033)) -> (fail_1178 true k_main_1106)
  fail_1178 b k -> {fail} => (k ())
  main_1032 n_1033 k_main_1106 -> (copy_1030 n_1033 (f_main_1174 n_1033 k_main_1106))
Types:
  main_1172 : X
  copy_1030 : (x_1:int -> (x_3:int[x_3 = 1; x_1 = 1; x_3 = 0; x_1 = 0] -> X) -> X)
  fail_1178 : (x_1:bool[x_1] -> (unit -> X) -> X)
  
(2-1) Abstracting ... DONE!

(2-2) Checking HORS ... DONE!

Error trace::
  main_1172 ... --> 
  f_1176 ... --> 
  main_1032 ... --> 
  copy_1030 [2/2] ... --> 
  copy_1030 [1/2] ... --> 
  f_copy_1173 ... --> 
  f_main_1174 ... --> 
  copy_1030 [1/2] ... --> 
  f_main_1175 [2/2] ... --> 
  fail_1178 ... --> fail -->
  ERROR!

Spurious counter-example::
  0; 0; 0; 1; 0; 0; 0; 0; 1; 0

(2-3) Checking counter-example ... DONE!

(2-4) Discovering predicates ... 
begin AbsTypeInfer.refine(6347)[1]
  program:
    main_1172  | true = ((Random.int 0) f_1176)
    copy_1030 x_1031 k_copy_1074 | (x_1031 = 0) = (k_copy_1074 0)
    copy_1030 x_1031 k_copy_1074 | (not (x_1031 = 0)) = (copy_1030 (x_1031 - 1)
                                                                   (f_copy_1173 x_1031
                                                                    k_copy_1074))
    f_1176 x_1147 | true = (main_1032 x_1147
                                      (f_1177 x_1147))
    f_1177 x_1147 x_1144 | true = end
    f_copy_1173 x_1031 k_copy_1074 x_1078 | true = (k_copy_1074 (1 + x_1078))
    f_main_1174 n_1033 k_main_1106 x_1130 | true = (copy_1030 x_1130
                                                              (f_main_1175 n_1033
                                                                    x_1130
                                                                    k_main_1106))
    f_main_1175 n_1033 x_1130 k_main_1106 x_1109 | (x_1109 = n_1033) = (
    k_main_1106 ())
    f_main_1175 n_1033 x_1130 k_main_1106 x_1109 | (not (x_1109 = n_1033)) = (
    fail_1178 true
              k_main_1106)
    fail_1178 b k | true = (fail ())
    main_1032 n_1033 k_main_1106 | true = (copy_1030 n_1033
                                                     (f_main_1174 n_1033
                                                                  k_main_1106))
    main_1172:X
    copy_1030:int -> (int -> X) -> X
    f_1176:int -> X
    f_1177:int -> unit -> X
    f_copy_1173:int -> (int -> X) -> int -> X
    f_main_1174:int -> (unit -> X) -> int -> X
    f_main_1175:int -> int -> (unit -> X) -> int -> X
    fail_1178:bool -> (unit -> X) -> X
    main_1032:int -> (unit -> X) -> X
  inlined functions: f_1176,f_1177,f_copy_1173,f_main_1174,f_main_1175,main_1032
  counterexample: 0:0:0:1:0:0:0:0:1:0
  error traces:
    [true.nop(<f_1176@72:0> = var58)
     [true.(<main_1032@74:0> = <f_1176@72:0>)
      [true.(<copy_1030@76:0> = <main_1032@74:0>)
       [(not (<copy_1030@76:0> = 0)).(<copy_1030@79:0> = (<copy_1030@76:0> - 1))
        [(<copy_1030@79:0> = 0).(<<copy_1030@79:1>@82:0> = 0)
         [true.((<f_copy_1173@84:0> = <copy_1030@76:0>) && (<f_copy_1173@84:2> = <<copy_1030@79:1>@82:0>))
          [true.(<<f_copy_1173@84:1>@86:0> = (1 + <f_copy_1173@84:2>))
           [true.(<<copy_1030@76:1>@88:0> = <<f_copy_1173@84:1>@86:0>)
            [true.((<f_main_1174@90:0> = <main_1032@74:0>) && (<f_main_1174@90:2> = <<copy_1030@76:1>@88:0>))
             [true.(<copy_1030@92:0> = <f_main_1174@90:2>)
              [(<copy_1030@92:0> = 0).(<<copy_1030@92:1>@95:0> = 0)
               [true.
                ((<f_main_1175@97:0> = <f_main_1174@90:0>) &&
                 ((<f_main_1175@97:1> = <f_main_1174@90:2>) && (<f_main_1175@97:3> = <<copy_1030@92:1>@95:0>)))
                [(not (<f_main_1175@97:3> = <f_main_1175@97:0>)).(<fail_1178@100:0> = true)[true.error
  begin RefTypeInfer.infer_etrs(6348)[2]
    horn clauses:
      P[<fail_1178@100:0>](<fail_1178@100:0>:bool)|- bot
      
      P[<f_main_1175@97:3>](<f_main_1175@97:0>:int,<f_main_1175@97:1>:int,<f_main_1175@97:3>:int),
      ((<f_main_1175@97:3> <> <f_main_1175@97:0>) && <fail_1178@100:0>) |- P[<fail_1178@100:0>](
      <fail_1178@100:0>:bool)
      
      P[<f_main_1174@90:2>](<f_main_1175@97:0>:int,<f_main_1175@97:1>:int),
      P[<<copy_1030@92:1>@95:0>](<f_main_1175@97:1>:int,<f_main_1175@97:3>:int)|- P[<f_main_1175@97:3>](
      <f_main_1175@97:0>:int,<f_main_1175@97:1>:int,<f_main_1175@97:3>:int)
      
      P[<copy_1030@92:0>](<copy_1030@92:0>:int), ((<copy_1030@92:0> = 0) && (<<copy_1030@92:1>@95:0> = 0))
      |- P[<<copy_1030@92:1>@95:0>](<copy_1030@92:0>:int,<<copy_1030@92:1>@95:0>:int)
      
      P[<f_main_1174@90:2>](<f_main_1174@90:0>:int,<copy_1030@92:0>:int)|- P[<copy_1030@92:0>](<copy_1030@92:0>:int)
      
      P[<main_1032@74:0>](<f_main_1174@90:0>:int),
      P[<<copy_1030@76:1>@88:0>](<f_main_1174@90:0>:int,<f_main_1174@90:2>:int)|- P[<f_main_1174@90:2>](
      <f_main_1174@90:0>:int,<f_main_1174@90:2>:int)
      
      P[<copy_1030@76:0>](<copy_1030@76:0>:int),
      P[<<f_copy_1173@84:1>@86:0>](<copy_1030@76:0>:int,<<copy_1030@76:1>@88:0>:int), (
      <copy_1030@76:0> <> 0) |- P[<<copy_1030@76:1>@88:0>](<copy_1030@76:0>:int,
                                                           <<copy_1030@76:1>@88:0>:int)
      
      P[<f_copy_1173@84:2>](<f_copy_1173@84:0>:int,(-1 + <<f_copy_1173@84:1>@86:0>):int)|- P[<<f_copy_1173@84:1>@86:0>](
      <f_copy_1173@84:0>:int,<<f_copy_1173@84:1>@86:0>:int)
      
      P[<copy_1030@76:0>](<f_copy_1173@84:0>:int),
      P[<<copy_1030@79:1>@82:0>]((-1 + <f_copy_1173@84:0>):int,<f_copy_1173@84:2>:int), (
      <f_copy_1173@84:0> <> 0) |- P[<f_copy_1173@84:2>](<f_copy_1173@84:0>:int,
                                                        <f_copy_1173@84:2>:int)
      
      P[<copy_1030@79:0>](<copy_1030@79:0>:int), ((<copy_1030@79:0> = 0) && (<<copy_1030@79:1>@82:0> = 0))
      |- P[<<copy_1030@79:1>@82:0>](<copy_1030@79:0>:int,<<copy_1030@79:1>@82:0>:int)
      
      P[<copy_1030@76:0>]((1 + <copy_1030@79:0>):int), ((1 + <copy_1030@79:0>) <> 0)
      |- P[<copy_1030@79:0>](<copy_1030@79:0>:int)
      
      P[<main_1032@74:0>](<copy_1030@76:0>:int)|- P[<copy_1030@76:0>](<copy_1030@76:0>:int)
      
      P[<f_1176@72:0>](<main_1032@74:0>:int)|- P[<main_1032@74:0>](<main_1032@74:0>:int)
      
      |- P[<f_1176@72:0>](<f_1176@72:0>:int)
    call trees:
      <main_1172@69>
        <f_1176@72>
          <main_1032@74>
            <copy_1030@76>
              <copy_1030@79>
              </<copy_1030@79:1>@82>
              <f_copy_1173@84>
              </<f_copy_1173@84:1>@86>
            </<copy_1030@76:1>@88>
            <f_main_1174@90>
              <copy_1030@92>
              </<copy_1030@92:1>@95>
              <f_main_1175@97>
                <fail_1178@100>
    inlined horn clauses:
      P[<fail_1178@100:0>](<fail_1178@100:0>:bool)|- bot
      
      P[<<copy_1030@76:1>@88:0>](<f_main_1175@97:0>:int,<f_main_1175@97:1>:int),
      P[<<copy_1030@92:1>@95:0>](<f_main_1175@97:1>:int,<f_main_1175@97:3>:int),
      ((<f_main_1175@97:3> <> <f_main_1175@97:0>) && <fail_1178@100:0>) |- P[<fail_1178@100:0>](
      <fail_1178@100:0>:bool)
      
      P[<copy_1030@92:0>](<copy_1030@92:0>:int), ((<copy_1030@92:0> = 0) && (<<copy_1030@92:1>@95:0> = 0))
      |- P[<<copy_1030@92:1>@95:0>](<copy_1030@92:0>:int,<<copy_1030@92:1>@95:0>:int)
      
      P[<<copy_1030@76:1>@88:0>](<f_main_1174@90:0>:int,<copy_1030@92:0>:int)|- P[<copy_1030@92:0>](
      <copy_1030@92:0>:int)
      
      P[<copy_1030@76:0>](<copy_1030@76:0>:int),
      P[<<copy_1030@79:1>@82:0>]((-1 + <copy_1030@76:0>):int,(-1 + <<copy_1030@76:1>@88:0>):int),
      (<copy_1030@76:0> <> 0) |- P[<<copy_1030@76:1>@88:0>](<copy_1030@76:0>:int,
                                                            <<copy_1030@76:1>@88:0>:int)
      
      P[<copy_1030@79:0>](<copy_1030@79:0>:int), ((<copy_1030@79:0> = 0) && (<<copy_1030@79:1>@82:0> = 0))
      |- P[<<copy_1030@79:1>@82:0>](<copy_1030@79:0>:int,<<copy_1030@79:1>@82:0>:int)
      
      P[<copy_1030@76:0>]((1 + <copy_1030@79:0>):int), ((1 + <copy_1030@79:0>) <> 0)
      |- P[<copy_1030@79:0>](<copy_1030@79:0>:int)
      
      |- P[<copy_1030@76:0>](<copy_1030@76:0>:int)
    begin ParamSubstInfer.infer(7937)[3]
      
    end ParamSubstInfer.infer(7937)[3] (0.048993 sec.)
    inferred extra parameters:
      
    begin RefTypeInfer.elim_coeffs(7939)[3]
      
    end RefTypeInfer.elim_coeffs(7939)[3] (0.001000 sec.)
    begin YhornInterface.solve(8202)[3]
      begin HcSolver.solve_ub(8203)[4]
        encoded:
          P[<fail_1178@100:0>](<fail_1178@100:0>:int)|- bot
          
          P[<<copy_1030@76:1>@88:0>](<f_main_1175@97:0>:int,<f_main_1175@97:1>:int),
          P[<<copy_1030@92:1>@95:0>](<f_main_1175@97:1>:int,<f_main_1175@97:3>:int),
          ((<f_main_1175@97:3> <> <f_main_1175@97:0>) && (<fail_1178@100:0> = 1))
          |- P[<fail_1178@100:0>](<fail_1178@100:0>:int)
          
          P[<copy_1030@92:0>](<copy_1030@92:0>:int), ((<copy_1030@92:0> = 0) && (<<copy_1030@92:1>@95:0> = 0))
          |- P[<<copy_1030@92:1>@95:0>](<copy_1030@92:0>:int,<<copy_1030@92:1>@95:0>:int)
          
          P[<<copy_1030@76:1>@88:0>](<f_main_1174@90:0>:int,<copy_1030@92:0>:int)|- P[<copy_1030@92:0>](
          <copy_1030@92:0>:int)
          
          P[<copy_1030@76:0>](<copy_1030@76:0>:int),
          P[<<copy_1030@79:1>@82:0>]((-1 + <copy_1030@76:0>):int,(-1 + <<copy_1030@76:1>@88:0>):int),
          (<copy_1030@76:0> <> 0) |- P[<<copy_1030@76:1>@88:0>](<copy_1030@76:0>:int,
                                                                <<copy_1030@76:1>@88:0>:int)
          
          P[<copy_1030@79:0>](<copy_1030@79:0>:int), ((<copy_1030@79:0> = 0) && (<<copy_1030@79:1>@82:0> = 0))
          |- P[<<copy_1030@79:1>@82:0>](<copy_1030@79:0>:int,<<copy_1030@79:1>@82:0>:int)
          
          P[<copy_1030@76:0>]((1 + <copy_1030@79:0>):int), ((1 + <copy_1030@79:0>) <> 0)
          |- P[<copy_1030@79:0>](<copy_1030@79:0>:int)
          
          |- P[<copy_1030@76:0>](<copy_1030@76:0>:int)
        input to Yhorn:
          P[<fail_1178@100:0>](<fail_1178@100:0>:int)|- bot
          
          P[<<copy_1030@76:1>@88:0>](<f_main_1175@97:0>:int,<f_main_1175@97:1>:int),
          P[<<copy_1030@92:1>@95:0>](<f_main_1175@97:1>:int,<f_main_1175@97:3>:int),
          ((<f_main_1175@97:3> <> <f_main_1175@97:0>) && (<fail_1178@100:0> = 1))
          |- P[<fail_1178@100:0>](<fail_1178@100:0>:int)
          
          P[<copy_1030@92:0>](<copy_1030@92:0>:int), ((<<copy_1030@92:1>@95:0> = 0) && (<copy_1030@92:0> = 0))
          |- P[<<copy_1030@92:1>@95:0>](<copy_1030@92:0>:int,<<copy_1030@92:1>@95:0>:int)
          
          P[<<copy_1030@76:1>@88:0>](<f_main_1174@90:0>:int,<copy_1030@92:0>:int)|- P[<copy_1030@92:0>](
          <copy_1030@92:0>:int)
          
          P[<copy_1030@76:0>](<copy_1030@76:0>:int),
          P[<<copy_1030@79:1>@82:0>](var59:int,var60:int),
          (((1 + var60) = <<copy_1030@76:1>@88:0>) && (((1 + var59) = <copy_1030@76:0>) && (<copy_1030@76:0> <> 0)))
          |- P[<<copy_1030@76:1>@88:0>](<copy_1030@76:0>:int,<<copy_1030@76:1>@88:0>:int)
          
          P[<copy_1030@79:0>](<copy_1030@79:0>:int), ((<<copy_1030@79:1>@82:0> = 0) && (<copy_1030@79:0> = 0))
          |- P[<<copy_1030@79:1>@82:0>](<copy_1030@79:0>:int,<<copy_1030@79:1>@82:0>:int)
          
          P[<copy_1030@76:0>](var61:int), ((var61 = (1 + <copy_1030@79:0>)) && ((1 + <copy_1030@79:0>) <> 0))
          |- P[<copy_1030@79:0>](<copy_1030@79:0>:int)
          Yhorn (Wed Sep 25 10:52:05 JST 2013)


(0=0) & (v_sep_fail_1178_sep_100_sep_0($1511)) -> 1=0.
(($1511-1=0) & ($1512-$1513<>0)) & (v_sep_copy_1030_sep_92_sep_1_sep_95_sep_0($1514,$1512)) & (v_sep_copy_1030_sep_76_sep_1_sep_88_sep_0($1513,$1514)) -> v_sep_fail_1178_sep_100_sep_0($1511).
(($1515=0) & ($1516=0)) & (v_sep_copy_1030_sep_92_sep_0($1515)) -> v_sep_copy_1030_sep_92_sep_1_sep_95_sep_0($1515,$1516).
(0=0) & (v_sep_copy_1030_sep_76_sep_1_sep_88_sep_0($1517,$1515)) -> v_sep_copy_1030_sep_92_sep_0($1515).
(($1518<>0) & (-$1518+$1519+1=0) & ($1520-$1521+1=0)) & (v_sep_copy_1030_sep_79_sep_1_sep_82_sep_0($1519,$1520)) & (v_sep_copy_1030_sep_76_sep_0($1518)) -> v_sep_copy_1030_sep_76_sep_1_sep_88_sep_0($1518,$1521).
(($1522=0) & ($1523=0)) & (v_sep_copy_1030_sep_79_sep_0($1522)) -> v_sep_copy_1030_sep_79_sep_1_sep_82_sep_0($1522,$1523).
(($1522+1<>0) & (-$1522+$1524-1=0)) & (v_sep_copy_1030_sep_76_sep_0($1524)) -> v_sep_copy_1030_sep_79_sep_0($1522).
0=0 -> v_sep_copy_1030_sep_76_sep_0($1518).


v_sep_copy_1030_sep_76_sep_0: X
v_sep_copy_1030_sep_76_sep_1_sep_88_sep_0: X
v_sep_copy_1030_sep_79_sep_0: X
v_sep_copy_1030_sep_79_sep_1_sep_82_sep_0: X
v_sep_copy_1030_sep_92_sep_0: X
v_sep_copy_1030_sep_92_sep_1_sep_95_sep_0: X
v_sep_fail_1178_sep_100_sep_0: X
...............
v_sep_copy_1030_sep_76_sep_0: X
v_sep_copy_1030_sep_76_sep_1_sep_88_sep_0: X
v_sep_copy_1030_sep_79_sep_0: X
v_sep_copy_1030_sep_79_sep_1_sep_82_sep_0: X
v_sep_copy_1030_sep_92_sep_0: X
v_sep_copy_1030_sep_92_sep_1_sep_95_sep_0: X
v_sep_fail_1178_sep_100_sep_0: X
......
v_sep_copy_1030_sep_76_sep_0: X
v_sep_copy_1030_sep_76_sep_1_sep_88_sep_0: X
v_sep_copy_1030_sep_79_sep_0: X
v_sep_copy_1030_sep_79_sep_1_sep_82_sep_0: X
v_sep_copy_1030_sep_92_sep_0: X
v_sep_copy_1030_sep_92_sep_1_sep_95_sep_0: X
v_sep_fail_1178_sep_100_sep_0: X
...........
v_sep_copy_1030_sep_76_sep_0: X
v_sep_copy_1030_sep_76_sep_1_sep_88_sep_0: X
v_sep_copy_1030_sep_79_sep_0: X
v_sep_copy_1030_sep_79_sep_1_sep_82_sep_0: X
v_sep_copy_1030_sep_92_sep_0: X
v_sep_copy_1030_sep_92_sep_1_sep_95_sep_0: X
v_sep_fail_1178_sep_100_sep_0: X
.............
v_sep_copy_1030_sep_76_sep_0: X
v_sep_copy_1030_sep_76_sep_1_sep_88_sep_0: X
v_sep_copy_1030_sep_79_sep_0: X
v_sep_copy_1030_sep_79_sep_1_sep_82_sep_0: X
v_sep_copy_1030_sep_92_sep_0: X
v_sep_copy_1030_sep_92_sep_1_sep_95_sep_0: X
v_sep_fail_1178_sep_100_sep_0: X
...............(0=0) & (v_sep_fail_1178_sep_100_sep_0($1511)) -> 1=0.
(($1511-1=0) & ($1512-$1513<>0)) & (v_sep_copy_1030_sep_92_sep_1_sep_95_sep_0($1514,$1512)) & (v_sep_copy_1030_sep_76_sep_1_sep_88_sep_0($1513,$1514)) -> v_sep_fail_1178_sep_100_sep_0($1511).
(($1515=0) & ($1516=0)) & (v_sep_copy_1030_sep_92_sep_0($1515)) -> v_sep_copy_1030_sep_92_sep_1_sep_95_sep_0($1515,$1516).
(0=0) & (v_sep_copy_1030_sep_76_sep_1_sep_88_sep_0($1517,$1515)) -> v_sep_copy_1030_sep_92_sep_0($1515).
(($1518<>0) & (-$1518+$1519+1=0) & ($1520-$1521+1=0)) & (v_sep_copy_1030_sep_79_sep_1_sep_82_sep_0($1519,$1520)) & (v_sep_copy_1030_sep_76_sep_0($1518)) -> v_sep_copy_1030_sep_76_sep_1_sep_88_sep_0($1518,$1521).
(($1522=0) & ($1523=0)) & (v_sep_copy_1030_sep_79_sep_0($1522)) -> v_sep_copy_1030_sep_79_sep_1_sep_82_sep_0($1522,$1523).
(($1522+1<>0) & (-$1522+$1524-1=0)) & (v_sep_copy_1030_sep_76_sep_0($1524)) -> v_sep_copy_1030_sep_79_sep_0($1522).
0=0 -> v_sep_copy_1030_sep_76_sep_0($1518).

          |- P[<copy_1030@76:0>](<copy_1030@76:0>:int)
        solution:
          P[<copy_1030@76:0>]($1546:int) = true
          P[<<copy_1030@76:1>@88:0>]($1533:int,$1535:int) = (1 <= $1535)
          P[<copy_1030@79:0>]($1549:int) = true
          P[<<copy_1030@79:1>@82:0>]($1541:int,$1543:int) = (0 <= $1543)
          P[<copy_1030@92:0>]($1538:int) = (1 <= $1538)
          P[<<copy_1030@92:1>@95:0>]($1528:int,$1530:int) = ((1 + $1528) <= 0)
          P[<fail_1178@100:0>]($1525:bool) = false
        
      end HcSolver.solve_ub(8203)[4] (0.045993 sec.)
      begin HcSolver.check_validity(8497)[4]
        input:
          P[<fail_1178@100:0>](<fail_1178@100:0>:bool)|- bot
          
          P[<<copy_1030@76:1>@88:0>](<f_main_1175@97:0>:int,<f_main_1175@97:1>:int),
          P[<<copy_1030@92:1>@95:0>](<f_main_1175@97:1>:int,<f_main_1175@97:3>:int),
          ((<f_main_1175@97:3> <> <f_main_1175@97:0>) && <fail_1178@100:0>)
          |- P[<fail_1178@100:0>](<fail_1178@100:0>:bool)
          
          P[<copy_1030@92:0>](<copy_1030@92:0>:int), ((<copy_1030@92:0> = 0) && (<<copy_1030@92:1>@95:0> = 0))
          |- P[<<copy_1030@92:1>@95:0>](<copy_1030@92:0>:int,<<copy_1030@92:1>@95:0>:int)
          
          P[<<copy_1030@76:1>@88:0>](<f_main_1174@90:0>:int,<copy_1030@92:0>:int)|- P[<copy_1030@92:0>](
          <copy_1030@92:0>:int)
          
          P[<copy_1030@76:0>](<copy_1030@76:0>:int),
          P[<<copy_1030@79:1>@82:0>]((-1 + <copy_1030@76:0>):int,(-1 + <<copy_1030@76:1>@88:0>):int),
          (<copy_1030@76:0> <> 0) |- P[<<copy_1030@76:1>@88:0>](<copy_1030@76:0>:int,
                                                                <<copy_1030@76:1>@88:0>:int)
          
          P[<copy_1030@79:0>](<copy_1030@79:0>:int), ((<copy_1030@79:0> = 0) && (<<copy_1030@79:1>@82:0> = 0))
          |- P[<<copy_1030@79:1>@82:0>](<copy_1030@79:0>:int,<<copy_1030@79:1>@82:0>:int)
          
          P[<copy_1030@76:0>]((1 + <copy_1030@79:0>):int), ((1 + <copy_1030@79:0>) <> 0)
          |- P[<copy_1030@79:0>](<copy_1030@79:0>:int)
          
          |- P[<copy_1030@76:0>](<copy_1030@76:0>:int)
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        
      end HcSolver.check_validity(8497)[4] (0.008999 sec.)
      solution:
        P[<copy_1030@76:0>]($1546:int) = true
        P[<<copy_1030@76:1>@88:0>]($1533:int,$1535:int) = (1 <= $1535)
        P[<copy_1030@79:0>]($1549:int) = true
        P[<<copy_1030@79:1>@82:0>]($1541:int,$1543:int) = (0 <= $1543)
        P[<copy_1030@92:0>]($1538:int) = (1 <= $1538)
        P[<<copy_1030@92:1>@95:0>]($1528:int,$1530:int) = ((1 + $1528) <= 0)
        P[<fail_1178@100:0>]($1525:bool) = false
    end YhornInterface.solve(8202)[3] (0.054992 sec.)
    
  end RefTypeInfer.infer_etrs(6348)[2] (0.112983 sec.)
  refinement types:
    main_1172: X
    f_1176: v1:int -> X
    main_1032: v1:int -> (v2:unit -> X) -> X
    copy_1030: v1:int -> (v2:{v2:int | (1 <= v2)} -> X) -> X
    copy_1030: v1:int -> (v2:{v2:int | (0 <= v2)} -> X) -> X
    f_copy_1173: v1:int -> (v2:int -> X) -> v4:int -> X
    f_main_1174: v1:int -> (v2:unit -> X) -> v4:int -> X
    copy_1030: v1:{v1:int | (1 <= v1)} -> (v2:{v2:int | ((1 + v1) <= 0)} -> X) -> X
    f_main_1175: v1:int -> v2:int -> (v3:unit -> X) -> v5:int -> X
    fail_1178: v1:{v1:bool | false} -> (v2:unit -> X) -> X
    f_1177: var72:int -> var71:unit -> X
  abstraction types:
    main_1172: X
    f_1176: v1:int -> X
    main_1032: v1:int -> (v2:unit -> X) -> X
    copy_1030: var77:int[var77 -> (1 <= var77)] ->
               (var78:int[var78 -> (1 <= var78),
                          var78 -> (0 <= var78),
                          var78 -> ((1 + var77) <= 0)] -> X) -> X
    f_copy_1173: v1:int -> (v2:int -> X) -> v4:int -> X
    f_main_1174: v1:int -> (v2:unit -> X) -> v4:int -> X
    f_main_1175: v1:int -> v2:int -> (v3:unit -> X) -> v5:int -> X
    fail_1178: v1:bool -> (v2:unit -> X) -> X
    f_1177: var72:int -> var71:unit -> X
  
end AbsTypeInfer.refine(6347)[1] (0.114983 sec.)
DONE!

Prefix of spurious counter-example::
0; 0; 0; 1; 0; 0; 0; 0

Program with abstraction types (CEGAR-cycle 3)::
Main: main_1172
  main_1172 -> (rand_int f_1176)
  copy_1030 x_1031 k_copy_1074 when (x_1031 = 0) -> (k_copy_1074 0)
  copy_1030 x_1031 k_copy_1074 when (not (x_1031 = 0)) -> (copy_1030 (x_1031 - 1) (f_copy_1173 x_1031 k_copy_1074))
  f_1176 x_1147 -> (main_1032 x_1147 (f_1177 x_1147))
  f_1177 x_1147 x_1144 -> end
  f_copy_1173 x_1031 k_copy_1074 x_1078 -> (k_copy_1074 (1 + x_1078))
  f_main_1174 n_1033 k_main_1106 x_1130 -> (copy_1030 x_1130 (f_main_1175 n_1033 x_1130 k_main_1106))
  f_main_1175 n_1033 x_1130 k_main_1106 x_1109 when (x_1109 = n_1033) -> (k_main_1106 ())
  f_main_1175 n_1033 x_1130 k_main_1106 x_1109 when (not (x_1109 = n_1033)) -> (fail_1178 true k_main_1106)
  fail_1178 b k -> {fail} => (k ())
  main_1032 n_1033 k_main_1106 -> (copy_1030 n_1033 (f_main_1174 n_1033 k_main_1106))
Types:
  main_1172 : X
  copy_1030 : (x_1:int[x_1 >= 1] ->
               (x_3:int[x_1 <= -1; x_3 >= 0; x_3 >= 1; x_3 = 1; x_1 = 1; x_3 = 0; x_1 = 0] -> X) -> X)
  fail_1178 : (x_1:bool[x_1] -> (unit -> X) -> X)
  
(3-1) Abstracting ... DONE!

(3-2) Checking HORS ... DONE!

Error trace::
  main_1172 ... --> 
  f_1176 ... --> 
  main_1032 ... --> 
  copy_1030 [1/2] ... --> 
  f_main_1174 ... --> 
  copy_1030 [2/2] ... --> 
  copy_1030 [2/2] ... --> 
  copy_1030 [2/2] ... --> 
  copy_1030 [2/2] ... --> 
  copy_1030 [1/2] ... --> 
  f_copy_1173 ... --> 
  f_copy_1173 ... --> 
  f_copy_1173 ... --> 
  f_copy_1173 ... --> 
  f_main_1175 [2/2] ... --> 
  fail_1178 ... --> fail -->
  ERROR!

Spurious counter-example::
  0; 0; 0; 0; 0; 1; 1; 1; 1; 0; 0; 0; 0; 0; 1; 0

(3-3) Checking counter-example ... DONE!

(3-4) Discovering predicates ... 
begin AbsTypeInfer.refine(10906)[1]
  program:
    main_1172  | true = ((Random.int 0) f_1176)
    copy_1030 x_1031 k_copy_1074 | (x_1031 = 0) = (k_copy_1074 0)
    copy_1030 x_1031 k_copy_1074 | (not (x_1031 = 0)) = (copy_1030 (x_1031 - 1)
                                                                   (f_copy_1173 x_1031
                                                                    k_copy_1074))
    f_1176 x_1147 | true = (main_1032 x_1147
                                      (f_1177 x_1147))
    f_1177 x_1147 x_1144 | true = end
    f_copy_1173 x_1031 k_copy_1074 x_1078 | true = (k_copy_1074 (1 + x_1078))
    f_main_1174 n_1033 k_main_1106 x_1130 | true = (copy_1030 x_1130
                                                              (f_main_1175 n_1033
                                                                    x_1130
                                                                    k_main_1106))
    f_main_1175 n_1033 x_1130 k_main_1106 x_1109 | (x_1109 = n_1033) = (
    k_main_1106 ())
    f_main_1175 n_1033 x_1130 k_main_1106 x_1109 | (not (x_1109 = n_1033)) = (
    fail_1178 true
              k_main_1106)
    fail_1178 b k | true = (fail ())
    main_1032 n_1033 k_main_1106 | true = (copy_1030 n_1033
                                                     (f_main_1174 n_1033
                                                                  k_main_1106))
    main_1172:X
    copy_1030:int -> (int -> X) -> X
    f_1176:int -> X
    f_1177:int -> unit -> X
    f_copy_1173:int -> (int -> X) -> int -> X
    f_main_1174:int -> (unit -> X) -> int -> X
    f_main_1175:int -> int -> (unit -> X) -> int -> X
    fail_1178:bool -> (unit -> X) -> X
    main_1032:int -> (unit -> X) -> X
  inlined functions: f_1176,f_1177,f_copy_1173,f_main_1174,f_main_1175,main_1032
  counterexample: 0:0:0:0:0:1:1:1:1:0:0:0:0:0:1:0
  error traces:
    [true.nop(<f_1176@106:0> = var81)
     [true.(<main_1032@108:0> = <f_1176@106:0>)
      [true.(<copy_1030@110:0> = <main_1032@108:0>)
       [(<copy_1030@110:0> = 0).(<<copy_1030@110:1>@113:0> = 0)
        [true.((<f_main_1174@115:0> = <main_1032@108:0>) && (<f_main_1174@115:2> = <<copy_1030@110:1>@113:0>))
         [true.(<copy_1030@117:0> = <f_main_1174@115:2>)
          [(not (<copy_1030@117:0> = 0)).(<copy_1030@120:0> = (<copy_1030@117:0> - 1))
           [(not (<copy_1030@120:0> = 0)).(<copy_1030@123:0> = (<copy_1030@120:0> - 1))
            [(not (<copy_1030@123:0> = 0)).(<copy_1030@126:0> = (<copy_1030@123:0> - 1))
             [(not (<copy_1030@126:0> = 0)).(<copy_1030@129:0> = (<copy_1030@126:0> - 1))
              [(<copy_1030@129:0> = 0).(<<copy_1030@129:1>@132:0> = 0)
               [true.((<f_copy_1173@134:0> = <copy_1030@126:0>) && (<f_copy_1173@134:2> = <<copy_1030@129:1>@132:0>))
                [true.(<<f_copy_1173@134:1>@136:0> = (1 + <f_copy_1173@134:2>))
                 [true.(<<copy_1030@126:1>@138:0> = <<f_copy_1173@134:1>@136:0>)
                  [true.
                   ((<f_copy_1173@140:0> = <copy_1030@123:0>) && (<f_copy_1173@140:2> = <<copy_1030@126:1>@138:0>))
                   [true.(<<f_copy_1173@140:1>@142:0> = (1 + <f_copy_1173@140:2>))
                    [true.(<<copy_1030@123:1>@144:0> = <<f_copy_1173@140:1>@142:0>)
                     [true.
                      ((<f_copy_1173@146:0> = <copy_1030@120:0>) && (<f_copy_1173@146:2> = <<copy_1030@123:1>@144:0>))
                      [true.(<<f_copy_1173@146:1>@148:0> = (1 + <f_copy_1173@146:2>))
                       [true.(<<copy_1030@120:1>@150:0> = <<f_copy_1173@146:1>@148:0>)
                        [true.
                         ((<f_copy_1173@152:0> = <copy_1030@117:0>) &&
                          (<f_copy_1173@152:2> = <<copy_1030@120:1>@150:0>))
                         [true.(<<f_copy_1173@152:1>@154:0> = (1 + <f_copy_1173@152:2>))
                          [true.(<<copy_1030@117:1>@156:0> = <<f_copy_1173@152:1>@154:0>)
                           [true.
                            ((<f_main_1175@158:0> = <f_main_1174@115:0>) &&
                             ((<f_main_1175@158:1> = <f_main_1174@115:2>) &&
                              (<f_main_1175@158:3> = <<copy_1030@117:1>@156:0>)))
                            [(not (<f_main_1175@158:3> = <f_main_1175@158:0>)).(<fail_1178@161:0> = true)[true.error
  begin RefTypeInfer.infer_etrs(10907)[2]
    horn clauses:
      P[<fail_1178@161:0>](<fail_1178@161:0>:bool)|- bot
      
      P[<f_main_1175@158:3>](<f_main_1175@158:0>:int,<f_main_1175@158:1>:int,<f_main_1175@158:3>:int),
      ((<f_main_1175@158:3> <> <f_main_1175@158:0>) && <fail_1178@161:0>)
      |- P[<fail_1178@161:0>](<fail_1178@161:0>:bool)
      
      P[<f_main_1174@115:2>](<f_main_1175@158:0>:int,<f_main_1175@158:1>:int),
      P[<<copy_1030@117:1>@156:0>](<f_main_1175@158:1>:int,<f_main_1175@158:3>:int)|- P[<f_main_1175@158:3>](
      <f_main_1175@158:0>:int,<f_main_1175@158:1>:int,<f_main_1175@158:3>:int)
      
      P[<copy_1030@117:0>](<copy_1030@117:0>:int),
      P[<<f_copy_1173@152:1>@154:0>](<copy_1030@117:0>:int,<<copy_1030@117:1>@156:0>:int), (
      <copy_1030@117:0> <> 0) |- P[<<copy_1030@117:1>@156:0>](<copy_1030@117:0>:int,
                                                              <<copy_1030@117:1>@156:0>:int)
      
      P[<f_copy_1173@152:2>](<f_copy_1173@152:0>:int,(-1 + <<f_copy_1173@152:1>@154:0>):int)|- P[<<f_copy_1173@152:1>@154:0>](
      <f_copy_1173@152:0>:int,<<f_copy_1173@152:1>@154:0>:int)
      
      P[<copy_1030@117:0>](<f_copy_1173@152:0>:int),
      P[<<copy_1030@120:1>@150:0>]((-1 + <f_copy_1173@152:0>):int,<f_copy_1173@152:2>:int), (
      <f_copy_1173@152:0> <> 0) |- P[<f_copy_1173@152:2>](<f_copy_1173@152:0>:int,
                                                          <f_copy_1173@152:2>:int)
      
      P[<copy_1030@120:0>](<copy_1030@120:0>:int),
      P[<<f_copy_1173@146:1>@148:0>](<copy_1030@120:0>:int,<<copy_1030@120:1>@150:0>:int), (
      <copy_1030@120:0> <> 0) |- P[<<copy_1030@120:1>@150:0>](<copy_1030@120:0>:int,
                                                              <<copy_1030@120:1>@150:0>:int)
      
      P[<f_copy_1173@146:2>](<f_copy_1173@146:0>:int,(-1 + <<f_copy_1173@146:1>@148:0>):int)|- P[<<f_copy_1173@146:1>@148:0>](
      <f_copy_1173@146:0>:int,<<f_copy_1173@146:1>@148:0>:int)
      
      P[<copy_1030@120:0>](<f_copy_1173@146:0>:int),
      P[<<copy_1030@123:1>@144:0>]((-1 + <f_copy_1173@146:0>):int,<f_copy_1173@146:2>:int), (
      <f_copy_1173@146:0> <> 0) |- P[<f_copy_1173@146:2>](<f_copy_1173@146:0>:int,
                                                          <f_copy_1173@146:2>:int)
      
      P[<copy_1030@123:0>](<copy_1030@123:0>:int),
      P[<<f_copy_1173@140:1>@142:0>](<copy_1030@123:0>:int,<<copy_1030@123:1>@144:0>:int), (
      <copy_1030@123:0> <> 0) |- P[<<copy_1030@123:1>@144:0>](<copy_1030@123:0>:int,
                                                              <<copy_1030@123:1>@144:0>:int)
      
      P[<f_copy_1173@140:2>](<f_copy_1173@140:0>:int,(-1 + <<f_copy_1173@140:1>@142:0>):int)|- P[<<f_copy_1173@140:1>@142:0>](
      <f_copy_1173@140:0>:int,<<f_copy_1173@140:1>@142:0>:int)
      
      P[<copy_1030@123:0>](<f_copy_1173@140:0>:int),
      P[<<copy_1030@126:1>@138:0>]((-1 + <f_copy_1173@140:0>):int,<f_copy_1173@140:2>:int), (
      <f_copy_1173@140:0> <> 0) |- P[<f_copy_1173@140:2>](<f_copy_1173@140:0>:int,
                                                          <f_copy_1173@140:2>:int)
      
      P[<copy_1030@126:0>](<copy_1030@126:0>:int),
      P[<<f_copy_1173@134:1>@136:0>](<copy_1030@126:0>:int,<<copy_1030@126:1>@138:0>:int), (
      <copy_1030@126:0> <> 0) |- P[<<copy_1030@126:1>@138:0>](<copy_1030@126:0>:int,
                                                              <<copy_1030@126:1>@138:0>:int)
      
      P[<f_copy_1173@134:2>](<f_copy_1173@134:0>:int,(-1 + <<f_copy_1173@134:1>@136:0>):int)|- P[<<f_copy_1173@134:1>@136:0>](
      <f_copy_1173@134:0>:int,<<f_copy_1173@134:1>@136:0>:int)
      
      P[<copy_1030@126:0>](<f_copy_1173@134:0>:int),
      P[<<copy_1030@129:1>@132:0>]((-1 + <f_copy_1173@134:0>):int,<f_copy_1173@134:2>:int), (
      <f_copy_1173@134:0> <> 0) |- P[<f_copy_1173@134:2>](<f_copy_1173@134:0>:int,
                                                          <f_copy_1173@134:2>:int)
      
      P[<copy_1030@129:0>](<copy_1030@129:0>:int), ((<copy_1030@129:0> = 0) && (<<copy_1030@129:1>@132:0> = 0))
      |- P[<<copy_1030@129:1>@132:0>](<copy_1030@129:0>:int,<<copy_1030@129:1>@132:0>:int)
      
      P[<copy_1030@126:0>]((1 + <copy_1030@129:0>):int), ((1 + <copy_1030@129:0>) <> 0)
      |- P[<copy_1030@129:0>](<copy_1030@129:0>:int)
      
      P[<copy_1030@123:0>]((1 + <copy_1030@126:0>):int), ((1 + <copy_1030@126:0>) <> 0)
      |- P[<copy_1030@126:0>](<copy_1030@126:0>:int)
      
      P[<copy_1030@120:0>]((1 + <copy_1030@123:0>):int), ((1 + <copy_1030@123:0>) <> 0)
      |- P[<copy_1030@123:0>](<copy_1030@123:0>:int)
      
      P[<copy_1030@117:0>]((1 + <copy_1030@120:0>):int), ((1 + <copy_1030@120:0>) <> 0)
      |- P[<copy_1030@120:0>](<copy_1030@120:0>:int)
      
      P[<f_main_1174@115:2>](<f_main_1174@115:0>:int,<copy_1030@117:0>:int)|- P[<copy_1030@117:0>](
      <copy_1030@117:0>:int)
      
      P[<main_1032@108:0>](<f_main_1174@115:0>:int),
      P[<<copy_1030@110:1>@113:0>](<f_main_1174@115:0>:int,<f_main_1174@115:2>:int)|- P[<f_main_1174@115:2>](
      <f_main_1174@115:0>:int,<f_main_1174@115:2>:int)
      
      P[<copy_1030@110:0>](<copy_1030@110:0>:int), ((<copy_1030@110:0> = 0) && (<<copy_1030@110:1>@113:0> = 0))
      |- P[<<copy_1030@110:1>@113:0>](<copy_1030@110:0>:int,<<copy_1030@110:1>@113:0>:int)
      
      P[<main_1032@108:0>](<copy_1030@110:0>:int)|- P[<copy_1030@110:0>](<copy_1030@110:0>:int)
      
      P[<f_1176@106:0>](<main_1032@108:0>:int)|- P[<main_1032@108:0>](<main_1032@108:0>:int)
      
      |- P[<f_1176@106:0>](<f_1176@106:0>:int)
    call trees:
      <main_1172@103>
        <f_1176@106>
          <main_1032@108>
            <copy_1030@110>
            </<copy_1030@110:1>@113>
            <f_main_1174@115>
              <copy_1030@117>
                <copy_1030@120>
                  <copy_1030@123>
                    <copy_1030@126>
                      <copy_1030@129>
                      </<copy_1030@129:1>@132>
                      <f_copy_1173@134>
                      </<f_copy_1173@134:1>@136>
                    </<copy_1030@126:1>@138>
                    <f_copy_1173@140>
                    </<f_copy_1173@140:1>@142>
                  </<copy_1030@123:1>@144>
                  <f_copy_1173@146>
                  </<f_copy_1173@146:1>@148>
                </<copy_1030@120:1>@150>
                <f_copy_1173@152>
                </<f_copy_1173@152:1>@154>
              </<copy_1030@117:1>@156>
              <f_main_1175@158>
                <fail_1178@161>
    inlined horn clauses:
      P[<fail_1178@161:0>](<fail_1178@161:0>:bool)|- bot
      
      P[<<copy_1030@110:1>@113:0>](<f_main_1175@158:0>:int,<f_main_1175@158:1>:int),
      P[<<copy_1030@117:1>@156:0>](<f_main_1175@158:1>:int,<f_main_1175@158:3>:int),
      ((<f_main_1175@158:3> <> <f_main_1175@158:0>) && <fail_1178@161:0>)
      |- P[<fail_1178@161:0>](<fail_1178@161:0>:bool)
      
      P[<copy_1030@117:0>](<copy_1030@117:0>:int),
      P[<<copy_1030@120:1>@150:0>]((-1 + <copy_1030@117:0>):int,(-1 + <<copy_1030@117:1>@156:0>):int),
      (<copy_1030@117:0> <> 0) |- P[<<copy_1030@117:1>@156:0>](<copy_1030@117:0>:int,
                                                               <<copy_1030@117:1>@156:0>:int)
      
      P[<copy_1030@120:0>](<copy_1030@120:0>:int),
      P[<<copy_1030@123:1>@144:0>]((-1 + <copy_1030@120:0>):int,(-1 + <<copy_1030@120:1>@150:0>):int),
      (<copy_1030@120:0> <> 0) |- P[<<copy_1030@120:1>@150:0>](<copy_1030@120:0>:int,
                                                               <<copy_1030@120:1>@150:0>:int)
      
      P[<copy_1030@123:0>](<copy_1030@123:0>:int),
      P[<<copy_1030@126:1>@138:0>]((-1 + <copy_1030@123:0>):int,(-1 + <<copy_1030@123:1>@144:0>):int),
      (<copy_1030@123:0> <> 0) |- P[<<copy_1030@123:1>@144:0>](<copy_1030@123:0>:int,
                                                               <<copy_1030@123:1>@144:0>:int)
      
      P[<copy_1030@126:0>](<copy_1030@126:0>:int),
      P[<<copy_1030@129:1>@132:0>]((-1 + <copy_1030@126:0>):int,(-1 + <<copy_1030@126:1>@138:0>):int),
      (<copy_1030@126:0> <> 0) |- P[<<copy_1030@126:1>@138:0>](<copy_1030@126:0>:int,
                                                               <<copy_1030@126:1>@138:0>:int)
      
      P[<copy_1030@129:0>](<copy_1030@129:0>:int), ((<copy_1030@129:0> = 0) && (<<copy_1030@129:1>@132:0> = 0))
      |- P[<<copy_1030@129:1>@132:0>](<copy_1030@129:0>:int,<<copy_1030@129:1>@132:0>:int)
      
      P[<copy_1030@126:0>]((1 + <copy_1030@129:0>):int), ((1 + <copy_1030@129:0>) <> 0)
      |- P[<copy_1030@129:0>](<copy_1030@129:0>:int)
      
      P[<copy_1030@123:0>]((1 + <copy_1030@126:0>):int), ((1 + <copy_1030@126:0>) <> 0)
      |- P[<copy_1030@126:0>](<copy_1030@126:0>:int)
      
      P[<copy_1030@120:0>]((1 + <copy_1030@123:0>):int), ((1 + <copy_1030@123:0>) <> 0)
      |- P[<copy_1030@123:0>](<copy_1030@123:0>:int)
      
      P[<copy_1030@117:0>]((1 + <copy_1030@120:0>):int), ((1 + <copy_1030@120:0>) <> 0)
      |- P[<copy_1030@120:0>](<copy_1030@120:0>:int)
      
      P[<<copy_1030@110:1>@113:0>](<f_main_1174@115:0>:int,<copy_1030@117:0>:int)|- P[<copy_1030@117:0>](
      <copy_1030@117:0>:int)
      
      P[<copy_1030@110:0>](<copy_1030@110:0>:int), ((<copy_1030@110:0> = 0) && (<<copy_1030@110:1>@113:0> = 0))
      |- P[<<copy_1030@110:1>@113:0>](<copy_1030@110:0>:int,<<copy_1030@110:1>@113:0>:int)
      
      |- P[<copy_1030@110:0>](<copy_1030@110:0>:int)
    begin ParamSubstInfer.infer(14035)[3]
      
    end ParamSubstInfer.infer(14035)[3] (0.171974 sec.)
    inferred extra parameters:
      
    begin RefTypeInfer.elim_coeffs(14037)[3]
      
    end RefTypeInfer.elim_coeffs(14037)[3] (0.002000 sec.)
    begin YhornInterface.solve(14462)[3]
      begin HcSolver.solve_ub(14463)[4]
        encoded:
          P[<fail_1178@161:0>](<fail_1178@161:0>:int)|- bot
          
          P[<<copy_1030@110:1>@113:0>](<f_main_1175@158:0>:int,<f_main_1175@158:1>:int),
          P[<<copy_1030@117:1>@156:0>](<f_main_1175@158:1>:int,<f_main_1175@158:3>:int),
          ((<f_main_1175@158:3> <> <f_main_1175@158:0>) && (<fail_1178@161:0> = 1))
          |- P[<fail_1178@161:0>](<fail_1178@161:0>:int)
          
          P[<copy_1030@117:0>](<copy_1030@117:0>:int),
          P[<<copy_1030@120:1>@150:0>]((-1 + <copy_1030@117:0>):int,(
                                       -1 + <<copy_1030@117:1>@156:0>):int), (
          <copy_1030@117:0> <> 0) |- P[<<copy_1030@117:1>@156:0>](<copy_1030@117:0>:int,
                                                                  <<copy_1030@117:1>@156:0>:int)
          
          P[<copy_1030@120:0>](<copy_1030@120:0>:int),
          P[<<copy_1030@123:1>@144:0>]((-1 + <copy_1030@120:0>):int,(
                                       -1 + <<copy_1030@120:1>@150:0>):int), (
          <copy_1030@120:0> <> 0) |- P[<<copy_1030@120:1>@150:0>](<copy_1030@120:0>:int,
                                                                  <<copy_1030@120:1>@150:0>:int)
          
          P[<copy_1030@123:0>](<copy_1030@123:0>:int),
          P[<<copy_1030@126:1>@138:0>]((-1 + <copy_1030@123:0>):int,(
                                       -1 + <<copy_1030@123:1>@144:0>):int), (
          <copy_1030@123:0> <> 0) |- P[<<copy_1030@123:1>@144:0>](<copy_1030@123:0>:int,
                                                                  <<copy_1030@123:1>@144:0>:int)
          
          P[<copy_1030@126:0>](<copy_1030@126:0>:int),
          P[<<copy_1030@129:1>@132:0>]((-1 + <copy_1030@126:0>):int,(
                                       -1 + <<copy_1030@126:1>@138:0>):int), (
          <copy_1030@126:0> <> 0) |- P[<<copy_1030@126:1>@138:0>](<copy_1030@126:0>:int,
                                                                  <<copy_1030@126:1>@138:0>:int)
          
          P[<copy_1030@129:0>](<copy_1030@129:0>:int), ((<copy_1030@129:0> = 0) && (<<copy_1030@129:1>@132:0> = 0))
          |- P[<<copy_1030@129:1>@132:0>](<copy_1030@129:0>:int,<<copy_1030@129:1>@132:0>:int)
          
          P[<copy_1030@126:0>]((1 + <copy_1030@129:0>):int), ((1 + <copy_1030@129:0>) <> 0)
          |- P[<copy_1030@129:0>](<copy_1030@129:0>:int)
          
          P[<copy_1030@123:0>]((1 + <copy_1030@126:0>):int), ((1 + <copy_1030@126:0>) <> 0)
          |- P[<copy_1030@126:0>](<copy_1030@126:0>:int)
          
          P[<copy_1030@120:0>]((1 + <copy_1030@123:0>):int), ((1 + <copy_1030@123:0>) <> 0)
          |- P[<copy_1030@123:0>](<copy_1030@123:0>:int)
          
          P[<copy_1030@117:0>]((1 + <copy_1030@120:0>):int), ((1 + <copy_1030@120:0>) <> 0)
          |- P[<copy_1030@120:0>](<copy_1030@120:0>:int)
          
          P[<<copy_1030@110:1>@113:0>](<f_main_1174@115:0>:int,<copy_1030@117:0>:int)|- P[<copy_1030@117:0>](
          <copy_1030@117:0>:int)
          
          P[<copy_1030@110:0>](<copy_1030@110:0>:int), ((<copy_1030@110:0> = 0) && (<<copy_1030@110:1>@113:0> = 0))
          |- P[<<copy_1030@110:1>@113:0>](<copy_1030@110:0>:int,<<copy_1030@110:1>@113:0>:int)
          
          |- P[<copy_1030@110:0>](<copy_1030@110:0>:int)
        input to Yhorn:
          P[<fail_1178@161:0>](<fail_1178@161:0>:int)|- bot
          
          P[<<copy_1030@110:1>@113:0>](<f_main_1175@158:0>:int,<f_main_1175@158:1>:int),
          P[<<copy_1030@117:1>@156:0>](<f_main_1175@158:1>:int,<f_main_1175@158:3>:int),
          ((<f_main_1175@158:3> <> <f_main_1175@158:0>) && (<fail_1178@161:0> = 1))
          |- P[<fail_1178@161:0>](<fail_1178@161:0>:int)
          
          P[<copy_1030@117:0>](<copy_1030@117:0>:int),
          P[<<copy_1030@120:1>@150:0>](var82:int,var83:int),
          (((1 + var83) = <<copy_1030@117:1>@156:0>) && (((1 + var82) = <copy_1030@117:0>) && (<copy_1030@117:0> <> 0)))
          |- P[<<copy_1030@117:1>@156:0>](<copy_1030@117:0>:int,<<copy_1030@117:1>@156:0>:int)
          
          P[<copy_1030@120:0>](<copy_1030@120:0>:int),
          P[<<copy_1030@123:1>@144:0>](var84:int,var85:int),
          (((1 + var85) = <<copy_1030@120:1>@150:0>) && (((1 + var84) = <copy_1030@120:0>) && (<copy_1030@120:0> <> 0)))
          |- P[<<copy_1030@120:1>@150:0>](<copy_1030@120:0>:int,<<copy_1030@120:1>@150:0>:int)
          
          P[<copy_1030@123:0>](<copy_1030@123:0>:int),
          P[<<copy_1030@126:1>@138:0>](var86:int,var87:int),
          (((1 + var87) = <<copy_1030@123:1>@144:0>) && (((1 + var86) = <copy_1030@123:0>) && (<copy_1030@123:0> <> 0)))
          |- P[<<copy_1030@123:1>@144:0>](<copy_1030@123:0>:int,<<copy_1030@123:1>@144:0>:int)
          
          P[<copy_1030@126:0>](<copy_1030@126:0>:int),
          P[<<copy_1030@129:1>@132:0>](var88:int,var89:int),
          (((1 + var89) = <<copy_1030@126:1>@138:0>) && (((1 + var88) = <copy_1030@126:0>) && (<copy_1030@126:0> <> 0)))
          |- P[<<copy_1030@126:1>@138:0>](<copy_1030@126:0>:int,<<copy_1030@126:1>@138:0>:int)
          
          P[<copy_1030@129:0>](<copy_1030@129:0>:int), ((<<copy_1030@129:1>@132:0> = 0) && (<copy_1030@129:0> = 0))
          |- P[<<copy_1030@129:1>@132:0>](<copy_1030@129:0>:int,<<copy_1030@129:1>@132:0>:int)
          
          P[<copy_1030@126:0>](var90:int), ((var90 = (1 + <copy_1030@129:0>)) && ((1 + <copy_1030@129:0>) <> 0))
          |- P[<copy_1030@129:0>](<copy_1030@129:0>:int)
          
          P[<copy_1030@123:0>](var91:int), ((var91 = (1 + <copy_1030@126:0>)) && ((1 + <copy_1030@126:0>) <> 0))
          |- P[<copy_1030@126:0>](<copy_1030@126:0>:int)
          
          P[<copy_1030@120:0>](var92:int), ((var92 = (1 + <copy_1030@123:0>)) && ((1 + <copy_1030@123:0>) <> 0))
          |- P[<copy_1030@123:0>](<copy_1030@123:0>:int)
          
          P[<copy_1030@117:0>](var93:int), ((var93 = (1 + <copy_1030@120:0>)) && ((1 + <copy_1030@120:0>) <> 0))
          |- P[<copy_1030@120:0>](<copy_1030@120:0>:int)
          
          P[<<copy_1030@110:1>@113:0>](<f_main_1174@115:0>:int,<copy_1030@117:0>:int)|- P[<copy_1030@117:0>](
          <copy_1030@117:0>:int)
          
          P[<copy_1030@110:0>](<copy_1030@110:0>:int), ((<<copy_1030@110:1>@113:0> = 0) && (<copy_1030@110:0> = 0))
          |- P[<<copy_1030@110:1>@113:0>](<copy_1030@110:0>:int,<<copy_1030@110:1>@113:0>:int)
          Yhorn (Wed Sep 25 10:52:05 JST 2013)


(0=0) & (v_sep_fail_1178_sep_161_sep_0($1726)) -> 1=0.
(($1726-1=0) & ($1727-$1728<>0)) & (v_sep_copy_1030_sep_117_sep_1_sep_156_sep_0($1729,$1727)) & (v_sep_copy_1030_sep_110_sep_1_sep_113_sep_0($1728,$1729)) -> v_sep_fail_1178_sep_161_sep_0($1726).
(($1730<>0) & (-$1730+$1731+1=0) & ($1732-$1733+1=0)) & (v_sep_copy_1030_sep_120_sep_1_sep_150_sep_0($1731,$1732)) & (v_sep_copy_1030_sep_117_sep_0($1730)) -> v_sep_copy_1030_sep_117_sep_1_sep_156_sep_0($1730,$1733).
(($1734<>0) & (-$1734+$1735+1=0) & ($1736-$1737+1=0)) & (v_sep_copy_1030_sep_123_sep_1_sep_144_sep_0($1735,$1736)) & (v_sep_copy_1030_sep_120_sep_0($1734)) -> v_sep_copy_1030_sep_120_sep_1_sep_150_sep_0($1734,$1737).
(($1738<>0) & (-$1738+$1739+1=0) & ($1740-$1741+1=0)) & (v_sep_copy_1030_sep_126_sep_1_sep_138_sep_0($1739,$1740)) & (v_sep_copy_1030_sep_123_sep_0($1738)) -> v_sep_copy_1030_sep_123_sep_1_sep_144_sep_0($1738,$1741).
(($1742<>0) & (-$1742+$1743+1=0) & ($1744-$1745+1=0)) & (v_sep_copy_1030_sep_129_sep_1_sep_132_sep_0($1743,$1744)) & (v_sep_copy_1030_sep_126_sep_0($1742)) -> v_sep_copy_1030_sep_126_sep_1_sep_138_sep_0($1742,$1745).
(($1746=0) & ($1747=0)) & (v_sep_copy_1030_sep_129_sep_0($1746)) -> v_sep_copy_1030_sep_129_sep_1_sep_132_sep_0($1746,$1747).
(($1746+1<>0) & (-$1746+$1748-1=0)) & (v_sep_copy_1030_sep_126_sep_0($1748)) -> v_sep_copy_1030_sep_129_sep_0($1746).
(($1742+1<>0) & (-$1742+$1749-1=0)) & (v_sep_copy_1030_sep_123_sep_0($1749)) -> v_sep_copy_1030_sep_126_sep_0($1742).
(($1738+1<>0) & (-$1738+$1750-1=0)) & (v_sep_copy_1030_sep_120_sep_0($1750)) -> v_sep_copy_1030_sep_123_sep_0($1738).
(($1734+1<>0) & (-$1734+$1751-1=0)) & (v_sep_copy_1030_sep_117_sep_0($1751)) -> v_sep_copy_1030_sep_120_sep_0($1734).
(0=0) & (v_sep_copy_1030_sep_110_sep_1_sep_113_sep_0($1752,$1730)) -> v_sep_copy_1030_sep_117_sep_0($1730).
(($1753=0) & ($1754=0)) & (v_sep_copy_1030_sep_110_sep_0($1753)) -> v_sep_copy_1030_sep_110_sep_1_sep_113_sep_0($1753,$1754).
0=0 -> v_sep_copy_1030_sep_110_sep_0($1753).


v_sep_copy_1030_sep_110_sep_0: X
v_sep_copy_1030_sep_110_sep_1_sep_113_sep_0: X
v_sep_copy_1030_sep_117_sep_0: X
v_sep_copy_1030_sep_117_sep_1_sep_156_sep_0: X
v_sep_copy_1030_sep_120_sep_0: X
v_sep_copy_1030_sep_120_sep_1_sep_150_sep_0: X
v_sep_copy_1030_sep_123_sep_0: X
v_sep_copy_1030_sep_123_sep_1_sep_144_sep_0: X
v_sep_copy_1030_sep_126_sep_0: X
v_sep_copy_1030_sep_126_sep_1_sep_138_sep_0: X
v_sep_copy_1030_sep_129_sep_0: X
v_sep_copy_1030_sep_129_sep_1_sep_132_sep_0: X
v_sep_fail_1178_sep_161_sep_0: X
.................................
v_sep_copy_1030_sep_110_sep_0: X
v_sep_copy_1030_sep_110_sep_1_sep_113_sep_0: X
v_sep_copy_1030_sep_117_sep_0: X
v_sep_copy_1030_sep_117_sep_1_sep_156_sep_0: X
v_sep_copy_1030_sep_120_sep_0: X
v_sep_copy_1030_sep_120_sep_1_sep_150_sep_0: X
v_sep_copy_1030_sep_123_sep_0: X
v_sep_copy_1030_sep_123_sep_1_sep_144_sep_0: X
v_sep_copy_1030_sep_126_sep_0: X
v_sep_copy_1030_sep_126_sep_1_sep_138_sep_0: X
v_sep_copy_1030_sep_129_sep_0: X
v_sep_copy_1030_sep_129_sep_1_sep_132_sep_0: X
v_sep_fail_1178_sep_161_sep_0: X
......
v_sep_copy_1030_sep_110_sep_0: X
v_sep_copy_1030_sep_110_sep_1_sep_113_sep_0: X
v_sep_copy_1030_sep_117_sep_0: X
v_sep_copy_1030_sep_117_sep_1_sep_156_sep_0: X
v_sep_copy_1030_sep_120_sep_0: X
v_sep_copy_1030_sep_120_sep_1_sep_150_sep_0: X
v_sep_copy_1030_sep_123_sep_0: X
v_sep_copy_1030_sep_123_sep_1_sep_144_sep_0: X
v_sep_copy_1030_sep_126_sep_0: X
v_sep_copy_1030_sep_126_sep_1_sep_138_sep_0: X
v_sep_copy_1030_sep_129_sep_0: X
v_sep_copy_1030_sep_129_sep_1_sep_132_sep_0: X
v_sep_fail_1178_sep_161_sep_0: X
...........
v_sep_copy_1030_sep_110_sep_0: X
v_sep_copy_1030_sep_110_sep_1_sep_113_sep_0: X
v_sep_copy_1030_sep_117_sep_0: X
v_sep_copy_1030_sep_117_sep_1_sep_156_sep_0: X
v_sep_copy_1030_sep_120_sep_0: X
v_sep_copy_1030_sep_120_sep_1_sep_150_sep_0: X
v_sep_copy_1030_sep_123_sep_0: X
v_sep_copy_1030_sep_123_sep_1_sep_144_sep_0: X
v_sep_copy_1030_sep_126_sep_0: X
v_sep_copy_1030_sep_126_sep_1_sep_138_sep_0: X
v_sep_copy_1030_sep_129_sep_0: X
v_sep_copy_1030_sep_129_sep_1_sep_132_sep_0: X
v_sep_fail_1178_sep_161_sep_0: X
................
v_sep_copy_1030_sep_110_sep_0: X
v_sep_copy_1030_sep_110_sep_1_sep_113_sep_0: X
v_sep_copy_1030_sep_117_sep_0: X
v_sep_copy_1030_sep_117_sep_1_sep_156_sep_0: X
v_sep_copy_1030_sep_120_sep_0: X
v_sep_copy_1030_sep_120_sep_1_sep_150_sep_0: X
v_sep_copy_1030_sep_123_sep_0: X
v_sep_copy_1030_sep_123_sep_1_sep_144_sep_0: X
v_sep_copy_1030_sep_126_sep_0: X
v_sep_copy_1030_sep_126_sep_1_sep_138_sep_0: X
v_sep_copy_1030_sep_129_sep_0: X
v_sep_copy_1030_sep_129_sep_1_sep_132_sep_0: X
v_sep_fail_1178_sep_161_sep_0: X
......................
v_sep_copy_1030_sep_110_sep_0: X
v_sep_copy_1030_sep_110_sep_1_sep_113_sep_0: X
v_sep_copy_1030_sep_117_sep_0: X
v_sep_copy_1030_sep_117_sep_1_sep_156_sep_0: X
v_sep_copy_1030_sep_120_sep_0: X
v_sep_copy_1030_sep_120_sep_1_sep_150_sep_0: X
v_sep_copy_1030_sep_123_sep_0: X
v_sep_copy_1030_sep_123_sep_1_sep_144_sep_0: X
v_sep_copy_1030_sep_126_sep_0: X
v_sep_copy_1030_sep_126_sep_1_sep_138_sep_0: X
v_sep_copy_1030_sep_129_sep_0: X
v_sep_copy_1030_sep_129_sep_1_sep_132_sep_0: X
v_sep_fail_1178_sep_161_sep_0: X
............................
v_sep_copy_1030_sep_110_sep_0: X
v_sep_copy_1030_sep_110_sep_1_sep_113_sep_0: X
v_sep_copy_1030_sep_117_sep_0: X
v_sep_copy_1030_sep_117_sep_1_sep_156_sep_0: X
v_sep_copy_1030_sep_120_sep_0: X
v_sep_copy_1030_sep_120_sep_1_sep_150_sep_0: X
v_sep_copy_1030_sep_123_sep_0: X
v_sep_copy_1030_sep_123_sep_1_sep_144_sep_0: X
v_sep_copy_1030_sep_126_sep_0: X
v_sep_copy_1030_sep_126_sep_1_sep_138_sep_0: X
v_sep_copy_1030_sep_129_sep_0: X
v_sep_copy_1030_sep_129_sep_1_sep_132_sep_0: X
v_sep_fail_1178_sep_161_sep_0: X
...............................
v_sep_copy_1030_sep_110_sep_0: X
v_sep_copy_1030_sep_110_sep_1_sep_113_sep_0: X
v_sep_copy_1030_sep_117_sep_0: X
v_sep_copy_1030_sep_117_sep_1_sep_156_sep_0: X
v_sep_copy_1030_sep_120_sep_0: X
v_sep_copy_1030_sep_120_sep_1_sep_150_sep_0: X
v_sep_copy_1030_sep_123_sep_0: X
v_sep_copy_1030_sep_123_sep_1_sep_144_sep_0: X
v_sep_copy_1030_sep_126_sep_0: X
v_sep_copy_1030_sep_126_sep_1_sep_138_sep_0: X
v_sep_copy_1030_sep_129_sep_0: X
v_sep_copy_1030_sep_129_sep_1_sep_132_sep_0: X
v_sep_fail_1178_sep_161_sep_0: X
.................................(0=0) & (v_sep_fail_1178_sep_161_sep_0($1726)) -> 1=0.
(($1726-1=0) & ($1727-$1728<>0)) & (v_sep_copy_1030_sep_117_sep_1_sep_156_sep_0($1729,$1727)) & (v_sep_copy_1030_sep_110_sep_1_sep_113_sep_0($1728,$1729)) -> v_sep_fail_1178_sep_161_sep_0($1726).
(($1730<>0) & (-$1730+$1731+1=0) & ($1732-$1733+1=0)) & (v_sep_copy_1030_sep_120_sep_1_sep_150_sep_0($1731,$1732)) & (v_sep_copy_1030_sep_117_sep_0($1730)) -> v_sep_copy_1030_sep_117_sep_1_sep_156_sep_0($1730,$1733).
(($1734<>0) & (-$1734+$1735+1=0) & ($1736-$1737+1=0)) & (v_sep_copy_1030_sep_123_sep_1_sep_144_sep_0($1735,$1736)) & (v_sep_copy_1030_sep_120_sep_0($1734)) -> v_sep_copy_1030_sep_120_sep_1_sep_150_sep_0($1734,$1737).
(($1738<>0) & (-$1738+$1739+1=0) & ($1740-$1741+1=0)) & (v_sep_copy_1030_sep_126_sep_1_sep_138_sep_0($1739,$1740)) & (v_sep_copy_1030_sep_123_sep_0($1738)) -> v_sep_copy_1030_sep_123_sep_1_sep_144_sep_0($1738,$1741).
(($1742<>0) & (-$1742+$1743+1=0) & ($1744-$1745+1=0)) & (v_sep_copy_1030_sep_129_sep_1_sep_132_sep_0($1743,$1744)) & (v_sep_copy_1030_sep_126_sep_0($1742)) -> v_sep_copy_1030_sep_126_sep_1_sep_138_sep_0($1742,$1745).
(($1746=0) & ($1747=0)) & (v_sep_copy_1030_sep_129_sep_0($1746)) -> v_sep_copy_1030_sep_129_sep_1_sep_132_sep_0($1746,$1747).
(($1746+1<>0) & (-$1746+$1748-1=0)) & (v_sep_copy_1030_sep_126_sep_0($1748)) -> v_sep_copy_1030_sep_129_sep_0($1746).
(($1742+1<>0) & (-$1742+$1749-1=0)) & (v_sep_copy_1030_sep_123_sep_0($1749)) -> v_sep_copy_1030_sep_126_sep_0($1742).
(($1738+1<>0) & (-$1738+$1750-1=0)) & (v_sep_copy_1030_sep_120_sep_0($1750)) -> v_sep_copy_1030_sep_123_sep_0($1738).
(($1734+1<>0) & (-$1734+$1751-1=0)) & (v_sep_copy_1030_sep_117_sep_0($1751)) -> v_sep_copy_1030_sep_120_sep_0($1734).
(0=0) & (v_sep_copy_1030_sep_110_sep_1_sep_113_sep_0($1752,$1730)) -> v_sep_copy_1030_sep_117_sep_0($1730).
(($1753=0) & ($1754=0)) & (v_sep_copy_1030_sep_110_sep_0($1753)) -> v_sep_copy_1030_sep_110_sep_1_sep_113_sep_0($1753,$1754).
0=0 -> v_sep_copy_1030_sep_110_sep_0($1753).

          |- P[<copy_1030@110:0>](<copy_1030@110:0>:int)
        solution:
          P[<copy_1030@110:0>]($1803:int) = true
          P[<<copy_1030@110:1>@113:0>]($1763:int,$1765:int) = ($1765 <= 0)
          P[<copy_1030@117:0>]($1773:int) = ($1773 <= 0)
          P[<<copy_1030@117:1>@156:0>]($1758:int,$1760:int) = (24 <= $1758)
          P[<copy_1030@120:0>]($1781:int) = ((1 + $1781) <= 0)
          P[<<copy_1030@120:1>@150:0>]($1768:int,$1770:int) = (11 <= $1768)
          P[<copy_1030@123:0>]($1789:int) = ((2 + $1789) <= 0)
          P[<<copy_1030@123:1>@144:0>]($1776:int,$1778:int) = (6 <= $1776)
          P[<copy_1030@126:0>]($1797:int) = ((3 + $1797) <= 0)
          P[<<copy_1030@126:1>@138:0>]($1784:int,$1786:int) = (3 <= $1784)
          P[<copy_1030@129:0>]($1800:int) = ((4 + $1800) <= 0)
          P[<<copy_1030@129:1>@132:0>]($1792:int,$1794:int) = (4 <= (5 * $1792))
          P[<fail_1178@161:0>]($1755:bool) = false
        
      end HcSolver.solve_ub(14463)[4] (3.733432 sec.)
      begin HcSolver.check_validity(15223)[4]
        input:
          P[<fail_1178@161:0>](<fail_1178@161:0>:bool)|- bot
          
          P[<<copy_1030@110:1>@113:0>](<f_main_1175@158:0>:int,<f_main_1175@158:1>:int),
          P[<<copy_1030@117:1>@156:0>](<f_main_1175@158:1>:int,<f_main_1175@158:3>:int),
          ((<f_main_1175@158:3> <> <f_main_1175@158:0>) && <fail_1178@161:0>)
          |- P[<fail_1178@161:0>](<fail_1178@161:0>:bool)
          
          P[<copy_1030@117:0>](<copy_1030@117:0>:int),
          P[<<copy_1030@120:1>@150:0>]((-1 + <copy_1030@117:0>):int,(
                                       -1 + <<copy_1030@117:1>@156:0>):int), (
          <copy_1030@117:0> <> 0) |- P[<<copy_1030@117:1>@156:0>](<copy_1030@117:0>:int,
                                                                  <<copy_1030@117:1>@156:0>:int)
          
          P[<copy_1030@120:0>](<copy_1030@120:0>:int),
          P[<<copy_1030@123:1>@144:0>]((-1 + <copy_1030@120:0>):int,(
                                       -1 + <<copy_1030@120:1>@150:0>):int), (
          <copy_1030@120:0> <> 0) |- P[<<copy_1030@120:1>@150:0>](<copy_1030@120:0>:int,
                                                                  <<copy_1030@120:1>@150:0>:int)
          
          P[<copy_1030@123:0>](<copy_1030@123:0>:int),
          P[<<copy_1030@126:1>@138:0>]((-1 + <copy_1030@123:0>):int,(
                                       -1 + <<copy_1030@123:1>@144:0>):int), (
          <copy_1030@123:0> <> 0) |- P[<<copy_1030@123:1>@144:0>](<copy_1030@123:0>:int,
                                                                  <<copy_1030@123:1>@144:0>:int)
          
          P[<copy_1030@126:0>](<copy_1030@126:0>:int),
          P[<<copy_1030@129:1>@132:0>]((-1 + <copy_1030@126:0>):int,(
                                       -1 + <<copy_1030@126:1>@138:0>):int), (
          <copy_1030@126:0> <> 0) |- P[<<copy_1030@126:1>@138:0>](<copy_1030@126:0>:int,
                                                                  <<copy_1030@126:1>@138:0>:int)
          
          P[<copy_1030@129:0>](<copy_1030@129:0>:int), ((<copy_1030@129:0> = 0) && (<<copy_1030@129:1>@132:0> = 0))
          |- P[<<copy_1030@129:1>@132:0>](<copy_1030@129:0>:int,<<copy_1030@129:1>@132:0>:int)
          
          P[<copy_1030@126:0>]((1 + <copy_1030@129:0>):int), ((1 + <copy_1030@129:0>) <> 0)
          |- P[<copy_1030@129:0>](<copy_1030@129:0>:int)
          
          P[<copy_1030@123:0>]((1 + <copy_1030@126:0>):int), ((1 + <copy_1030@126:0>) <> 0)
          |- P[<copy_1030@126:0>](<copy_1030@126:0>:int)
          
          P[<copy_1030@120:0>]((1 + <copy_1030@123:0>):int), ((1 + <copy_1030@123:0>) <> 0)
          |- P[<copy_1030@123:0>](<copy_1030@123:0>:int)
          
          P[<copy_1030@117:0>]((1 + <copy_1030@120:0>):int), ((1 + <copy_1030@120:0>) <> 0)
          |- P[<copy_1030@120:0>](<copy_1030@120:0>:int)
          
          P[<<copy_1030@110:1>@113:0>](<f_main_1174@115:0>:int,<copy_1030@117:0>:int)|- P[<copy_1030@117:0>](
          <copy_1030@117:0>:int)
          
          P[<copy_1030@110:0>](<copy_1030@110:0>:int), ((<copy_1030@110:0> = 0) && (<<copy_1030@110:1>@113:0> = 0))
          |- P[<<copy_1030@110:1>@113:0>](<copy_1030@110:0>:int,<<copy_1030@110:1>@113:0>:int)
          
          |- P[<copy_1030@110:0>](<copy_1030@110:0>:int)
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        
      end HcSolver.check_validity(15223)[4] (0.006999 sec.)
      solution:
        P[<copy_1030@110:0>]($1803:int) = true
        P[<<copy_1030@110:1>@113:0>]($1763:int,$1765:int) = ($1765 <= 0)
        P[<copy_1030@117:0>]($1773:int) = ($1773 <= 0)
        P[<<copy_1030@117:1>@156:0>]($1758:int,$1760:int) = (24 <= $1758)
        P[<copy_1030@120:0>]($1781:int) = ((1 + $1781) <= 0)
        P[<<copy_1030@120:1>@150:0>]($1768:int,$1770:int) = (11 <= $1768)
        P[<copy_1030@123:0>]($1789:int) = ((2 + $1789) <= 0)
        P[<<copy_1030@123:1>@144:0>]($1776:int,$1778:int) = (6 <= $1776)
        P[<copy_1030@126:0>]($1797:int) = ((3 + $1797) <= 0)
        P[<<copy_1030@126:1>@138:0>]($1784:int,$1786:int) = (3 <= $1784)
        P[<copy_1030@129:0>]($1800:int) = ((4 + $1800) <= 0)
        P[<<copy_1030@129:1>@132:0>]($1792:int,$1794:int) = (4 <= (5 * $1792))
        P[<fail_1178@161:0>]($1755:bool) = false
    end YhornInterface.solve(14462)[3] (3.740431 sec.)
    
  end RefTypeInfer.infer_etrs(10907)[2] (3.934402 sec.)
  refinement types:
    main_1172: X
    f_1176: v1:int -> X
    main_1032: v1:int -> (v2:unit -> X) -> X
    copy_1030: v1:int -> (v2:{v2:int | (v2 <= 0)} -> X) -> X
    f_main_1174: v1:int -> (v2:unit -> X) -> v4:int -> X
    copy_1030: v1:{v1:int | (v1 <= 0)} -> (v2:{v2:int | (24 <= v1)} -> X) -> X
    copy_1030: v1:{v1:int | ((1 + v1) <= 0)} -> (v2:{v2:int | (11 <= v1)} -> X) -> X
    copy_1030: v1:{v1:int | ((2 + v1) <= 0)} -> (v2:{v2:int | (6 <= v1)} -> X) -> X
    copy_1030: v1:{v1:int | ((3 + v1) <= 0)} -> (v2:{v2:int | (3 <= v1)} -> X) -> X
    copy_1030: v1:{v1:int | ((4 + v1) <= 0)} -> (v2:{v2:int | (4 <= (5 * v1))} -> X) -> X
    f_copy_1173: v1:int -> (v2:int -> X) -> v4:int -> X
    f_copy_1173: v1:int -> (v2:int -> X) -> v4:int -> X
    f_copy_1173: v1:int -> (v2:int -> X) -> v4:int -> X
    f_copy_1173: v1:int -> (v2:int -> X) -> v4:int -> X
    f_main_1175: v1:int -> v2:int -> (v3:unit -> X) -> v5:int -> X
    fail_1178: v1:{v1:bool | false} -> (v2:unit -> X) -> X
    f_1177: var104:int -> var103:unit -> X
  abstraction types:
    main_1172: X
    f_1176: v1:int -> X
    main_1032: v1:int -> (v2:unit -> X) -> X
    copy_1030: var121:int[var121 -> (var121 <= 0),
                          var121 -> ((1 + var121) <= 0),
                          var121 -> ((2 + var121) <= 0),
                          var121 -> ((3 + var121) <= 0),
                          var121 -> ((4 + var121) <= 0)] ->
               (var122:int[var122 -> (var122 <= 0),
                           var122 -> (24 <= var121),
                           var122 -> (11 <= var121),
                           var122 -> (6 <= var121),
                           var122 -> (3 <= var121),
                           var122 -> (4 <= (5 * var121))] -> X) -> X
    f_main_1174: v1:int -> (v2:unit -> X) -> v4:int -> X
    f_copy_1173: var135:int -> (var136:int -> X) -> var138:int -> X
    f_main_1175: v1:int -> v2:int -> (v3:unit -> X) -> v5:int -> X
    fail_1178: v1:bool -> (v2:unit -> X) -> X
    f_1177: var104:int -> var103:unit -> X
  
end AbsTypeInfer.refine(10906)[1] (3.945401 sec.)
DONE!

Prefix of spurious counter-example::
0; 0; 0; 0; 0; 1

Program with abstraction types (CEGAR-cycle 4)::
Main: main_1172
  main_1172 -> (rand_int f_1176)
  copy_1030 x_1031 k_copy_1074 when (x_1031 = 0) -> (k_copy_1074 0)
  copy_1030 x_1031 k_copy_1074 when (not (x_1031 = 0)) -> (copy_1030 (x_1031 - 1) (f_copy_1173 x_1031 k_copy_1074))
  f_1176 x_1147 -> (main_1032 x_1147 (f_1177 x_1147))
  f_1177 x_1147 x_1144 -> end
  f_copy_1173 x_1031 k_copy_1074 x_1078 -> (k_copy_1074 (1 + x_1078))
  f_main_1174 n_1033 k_main_1106 x_1130 -> (copy_1030 x_1130 (f_main_1175 n_1033 x_1130 k_main_1106))
  f_main_1175 n_1033 x_1130 k_main_1106 x_1109 when (x_1109 = n_1033) -> (k_main_1106 ())
  f_main_1175 n_1033 x_1130 k_main_1106 x_1109 when (not (x_1109 = n_1033)) -> (fail_1178 true k_main_1106)
  fail_1178 b k -> {fail} => (k ())
  main_1032 n_1033 k_main_1106 -> (copy_1030 n_1033 (f_main_1174 n_1033 k_main_1106))
Types:
  main_1172 : X
  copy_1030 : (x_1:int[x_1 <= -4; x_1 <= -3; x_1 <= -2; x_1 <= -1; x_1 <= 0; x_1 >= 1] ->
               (x_3:int[5*x_1 >= 4; x_1 >= 3; x_1 >= 6; x_1 >= 11; x_1 >= 24; 
                        x_3 <= 0; x_1 <= -1; x_3 >= 0; x_3 >= 1; x_3 = 1; 
                        x_1 = 1; x_3 = 0; x_1 = 0] -> X) -> X)
  fail_1178 : (x_1:bool[x_1] -> (unit -> X) -> X)
  
(4-1) Abstracting ... DONE!

(4-2) Checking HORS ... DONE!

Error trace::
  main_1172 ... --> 
  f_1176 ... --> 
  main_1032 ... --> 
  copy_1030 [2/2] ... --> 
  copy_1030 [2/2] ... --> 
  copy_1030 [1/2] ... --> 
  f_copy_1173 ... --> 
  f_copy_1173 ... --> 
  f_main_1174 ... --> 
  copy_1030 [2/2] ... --> 
  copy_1030 [2/2] ... --> 
  copy_1030 [1/2] ... --> 
  f_copy_1173 ... --> 
  f_copy_1173 ... --> 
  f_main_1175 [2/2] ... --> 
  fail_1178 ... --> fail -->
  ERROR!

Spurious counter-example::
  0; 0; 0; 1; 1; 0; 0; 0; 0; 1; 1; 0; 0; 0; 1; 0

(4-3) Checking counter-example ... DONE!

(4-4) Discovering predicates ... 
begin AbsTypeInfer.refine(26797)[1]
  program:
    main_1172  | true = ((Random.int 0) f_1176)
    copy_1030 x_1031 k_copy_1074 | (x_1031 = 0) = (k_copy_1074 0)
    copy_1030 x_1031 k_copy_1074 | (not (x_1031 = 0)) = (copy_1030 (x_1031 - 1)
                                                                   (f_copy_1173 x_1031
                                                                    k_copy_1074))
    f_1176 x_1147 | true = (main_1032 x_1147
                                      (f_1177 x_1147))
    f_1177 x_1147 x_1144 | true = end
    f_copy_1173 x_1031 k_copy_1074 x_1078 | true = (k_copy_1074 (1 + x_1078))
    f_main_1174 n_1033 k_main_1106 x_1130 | true = (copy_1030 x_1130
                                                              (f_main_1175 n_1033
                                                                    x_1130
                                                                    k_main_1106))
    f_main_1175 n_1033 x_1130 k_main_1106 x_1109 | (x_1109 = n_1033) = (
    k_main_1106 ())
    f_main_1175 n_1033 x_1130 k_main_1106 x_1109 | (not (x_1109 = n_1033)) = (
    fail_1178 true
              k_main_1106)
    fail_1178 b k | true = (fail ())
    main_1032 n_1033 k_main_1106 | true = (copy_1030 n_1033
                                                     (f_main_1174 n_1033
                                                                  k_main_1106))
    main_1172:X
    copy_1030:int -> (int -> X) -> X
    f_1176:int -> X
    f_1177:int -> unit -> X
    f_copy_1173:int -> (int -> X) -> int -> X
    f_main_1174:int -> (unit -> X) -> int -> X
    f_main_1175:int -> int -> (unit -> X) -> int -> X
    fail_1178:bool -> (unit -> X) -> X
    main_1032:int -> (unit -> X) -> X
  inlined functions: f_1176,f_1177,f_copy_1173,f_main_1174,f_main_1175,main_1032
  counterexample: 0:0:0:1:1:0:0:0:0:1:1:0:0:0:1:0
  error traces:
    [true.nop(<f_1176@167:0> = var140)
     [true.(<main_1032@169:0> = <f_1176@167:0>)
      [true.(<copy_1030@171:0> = <main_1032@169:0>)
       [(not (<copy_1030@171:0> = 0)).(<copy_1030@174:0> = (<copy_1030@171:0> - 1))
        [(not (<copy_1030@174:0> = 0)).(<copy_1030@177:0> = (<copy_1030@174:0> - 1))
         [(<copy_1030@177:0> = 0).(<<copy_1030@177:1>@180:0> = 0)
          [true.((<f_copy_1173@182:0> = <copy_1030@174:0>) && (<f_copy_1173@182:2> = <<copy_1030@177:1>@180:0>))
           [true.(<<f_copy_1173@182:1>@184:0> = (1 + <f_copy_1173@182:2>))
            [true.(<<copy_1030@174:1>@186:0> = <<f_copy_1173@182:1>@184:0>)
             [true.((<f_copy_1173@188:0> = <copy_1030@171:0>) && (<f_copy_1173@188:2> = <<copy_1030@174:1>@186:0>))
              [true.(<<f_copy_1173@188:1>@190:0> = (1 + <f_copy_1173@188:2>))
               [true.(<<copy_1030@171:1>@192:0> = <<f_copy_1173@188:1>@190:0>)
                [true.((<f_main_1174@194:0> = <main_1032@169:0>) && (<f_main_1174@194:2> = <<copy_1030@171:1>@192:0>))
                 [true.(<copy_1030@196:0> = <f_main_1174@194:2>)
                  [(not (<copy_1030@196:0> = 0)).(<copy_1030@199:0> = (<copy_1030@196:0> - 1))
                   [(not (<copy_1030@199:0> = 0)).(<copy_1030@202:0> = (<copy_1030@199:0> - 1))
                    [(<copy_1030@202:0> = 0).(<<copy_1030@202:1>@205:0> = 0)
                     [true.
                      ((<f_copy_1173@207:0> = <copy_1030@199:0>) && (<f_copy_1173@207:2> = <<copy_1030@202:1>@205:0>))
                      [true.(<<f_copy_1173@207:1>@209:0> = (1 + <f_copy_1173@207:2>))
                       [true.(<<copy_1030@199:1>@211:0> = <<f_copy_1173@207:1>@209:0>)
                        [true.
                         ((<f_copy_1173@213:0> = <copy_1030@196:0>) &&
                          (<f_copy_1173@213:2> = <<copy_1030@199:1>@211:0>))
                         [true.(<<f_copy_1173@213:1>@215:0> = (1 + <f_copy_1173@213:2>))
                          [true.(<<copy_1030@196:1>@217:0> = <<f_copy_1173@213:1>@215:0>)
                           [true.
                            ((<f_main_1175@219:0> = <f_main_1174@194:0>) &&
                             ((<f_main_1175@219:1> = <f_main_1174@194:2>) &&
                              (<f_main_1175@219:3> = <<copy_1030@196:1>@217:0>)))
                            [(not (<f_main_1175@219:3> = <f_main_1175@219:0>)).(<fail_1178@222:0> = true)[true.error
  begin RefTypeInfer.infer_etrs(26798)[2]
    horn clauses:
      P[<fail_1178@222:0>](<fail_1178@222:0>:bool)|- bot
      
      P[<f_main_1175@219:3>](<f_main_1175@219:0>:int,<f_main_1175@219:1>:int,<f_main_1175@219:3>:int),
      ((<f_main_1175@219:3> <> <f_main_1175@219:0>) && <fail_1178@222:0>)
      |- P[<fail_1178@222:0>](<fail_1178@222:0>:bool)
      
      P[<f_main_1174@194:2>](<f_main_1175@219:0>:int,<f_main_1175@219:1>:int),
      P[<<copy_1030@196:1>@217:0>](<f_main_1175@219:1>:int,<f_main_1175@219:3>:int)|- P[<f_main_1175@219:3>](
      <f_main_1175@219:0>:int,<f_main_1175@219:1>:int,<f_main_1175@219:3>:int)
      
      P[<copy_1030@196:0>](<copy_1030@196:0>:int),
      P[<<f_copy_1173@213:1>@215:0>](<copy_1030@196:0>:int,<<copy_1030@196:1>@217:0>:int), (
      <copy_1030@196:0> <> 0) |- P[<<copy_1030@196:1>@217:0>](<copy_1030@196:0>:int,
                                                              <<copy_1030@196:1>@217:0>:int)
      
      P[<f_copy_1173@213:2>](<f_copy_1173@213:0>:int,(-1 + <<f_copy_1173@213:1>@215:0>):int)|- P[<<f_copy_1173@213:1>@215:0>](
      <f_copy_1173@213:0>:int,<<f_copy_1173@213:1>@215:0>:int)
      
      P[<copy_1030@196:0>](<f_copy_1173@213:0>:int),
      P[<<copy_1030@199:1>@211:0>]((-1 + <f_copy_1173@213:0>):int,<f_copy_1173@213:2>:int), (
      <f_copy_1173@213:0> <> 0) |- P[<f_copy_1173@213:2>](<f_copy_1173@213:0>:int,
                                                          <f_copy_1173@213:2>:int)
      
      P[<copy_1030@199:0>](<copy_1030@199:0>:int),
      P[<<f_copy_1173@207:1>@209:0>](<copy_1030@199:0>:int,<<copy_1030@199:1>@211:0>:int), (
      <copy_1030@199:0> <> 0) |- P[<<copy_1030@199:1>@211:0>](<copy_1030@199:0>:int,
                                                              <<copy_1030@199:1>@211:0>:int)
      
      P[<f_copy_1173@207:2>](<f_copy_1173@207:0>:int,(-1 + <<f_copy_1173@207:1>@209:0>):int)|- P[<<f_copy_1173@207:1>@209:0>](
      <f_copy_1173@207:0>:int,<<f_copy_1173@207:1>@209:0>:int)
      
      P[<copy_1030@199:0>](<f_copy_1173@207:0>:int),
      P[<<copy_1030@202:1>@205:0>]((-1 + <f_copy_1173@207:0>):int,<f_copy_1173@207:2>:int), (
      <f_copy_1173@207:0> <> 0) |- P[<f_copy_1173@207:2>](<f_copy_1173@207:0>:int,
                                                          <f_copy_1173@207:2>:int)
      
      P[<copy_1030@202:0>](<copy_1030@202:0>:int), ((<copy_1030@202:0> = 0) && (<<copy_1030@202:1>@205:0> = 0))
      |- P[<<copy_1030@202:1>@205:0>](<copy_1030@202:0>:int,<<copy_1030@202:1>@205:0>:int)
      
      P[<copy_1030@199:0>]((1 + <copy_1030@202:0>):int), ((1 + <copy_1030@202:0>) <> 0)
      |- P[<copy_1030@202:0>](<copy_1030@202:0>:int)
      
      P[<copy_1030@196:0>]((1 + <copy_1030@199:0>):int), ((1 + <copy_1030@199:0>) <> 0)
      |- P[<copy_1030@199:0>](<copy_1030@199:0>:int)
      
      P[<f_main_1174@194:2>](<f_main_1174@194:0>:int,<copy_1030@196:0>:int)|- P[<copy_1030@196:0>](
      <copy_1030@196:0>:int)
      
      P[<main_1032@169:0>](<f_main_1174@194:0>:int),
      P[<<copy_1030@171:1>@192:0>](<f_main_1174@194:0>:int,<f_main_1174@194:2>:int)|- P[<f_main_1174@194:2>](
      <f_main_1174@194:0>:int,<f_main_1174@194:2>:int)
      
      P[<copy_1030@171:0>](<copy_1030@171:0>:int),
      P[<<f_copy_1173@188:1>@190:0>](<copy_1030@171:0>:int,<<copy_1030@171:1>@192:0>:int), (
      <copy_1030@171:0> <> 0) |- P[<<copy_1030@171:1>@192:0>](<copy_1030@171:0>:int,
                                                              <<copy_1030@171:1>@192:0>:int)
      
      P[<f_copy_1173@188:2>](<f_copy_1173@188:0>:int,(-1 + <<f_copy_1173@188:1>@190:0>):int)|- P[<<f_copy_1173@188:1>@190:0>](
      <f_copy_1173@188:0>:int,<<f_copy_1173@188:1>@190:0>:int)
      
      P[<copy_1030@171:0>](<f_copy_1173@188:0>:int),
      P[<<copy_1030@174:1>@186:0>]((-1 + <f_copy_1173@188:0>):int,<f_copy_1173@188:2>:int), (
      <f_copy_1173@188:0> <> 0) |- P[<f_copy_1173@188:2>](<f_copy_1173@188:0>:int,
                                                          <f_copy_1173@188:2>:int)
      
      P[<copy_1030@174:0>](<copy_1030@174:0>:int),
      P[<<f_copy_1173@182:1>@184:0>](<copy_1030@174:0>:int,<<copy_1030@174:1>@186:0>:int), (
      <copy_1030@174:0> <> 0) |- P[<<copy_1030@174:1>@186:0>](<copy_1030@174:0>:int,
                                                              <<copy_1030@174:1>@186:0>:int)
      
      P[<f_copy_1173@182:2>](<f_copy_1173@182:0>:int,(-1 + <<f_copy_1173@182:1>@184:0>):int)|- P[<<f_copy_1173@182:1>@184:0>](
      <f_copy_1173@182:0>:int,<<f_copy_1173@182:1>@184:0>:int)
      
      P[<copy_1030@174:0>](<f_copy_1173@182:0>:int),
      P[<<copy_1030@177:1>@180:0>]((-1 + <f_copy_1173@182:0>):int,<f_copy_1173@182:2>:int), (
      <f_copy_1173@182:0> <> 0) |- P[<f_copy_1173@182:2>](<f_copy_1173@182:0>:int,
                                                          <f_copy_1173@182:2>:int)
      
      P[<copy_1030@177:0>](<copy_1030@177:0>:int), ((<copy_1030@177:0> = 0) && (<<copy_1030@177:1>@180:0> = 0))
      |- P[<<copy_1030@177:1>@180:0>](<copy_1030@177:0>:int,<<copy_1030@177:1>@180:0>:int)
      
      P[<copy_1030@174:0>]((1 + <copy_1030@177:0>):int), ((1 + <copy_1030@177:0>) <> 0)
      |- P[<copy_1030@177:0>](<copy_1030@177:0>:int)
      
      P[<copy_1030@171:0>]((1 + <copy_1030@174:0>):int), ((1 + <copy_1030@174:0>) <> 0)
      |- P[<copy_1030@174:0>](<copy_1030@174:0>:int)
      
      P[<main_1032@169:0>](<copy_1030@171:0>:int)|- P[<copy_1030@171:0>](<copy_1030@171:0>:int)
      
      P[<f_1176@167:0>](<main_1032@169:0>:int)|- P[<main_1032@169:0>](<main_1032@169:0>:int)
      
      |- P[<f_1176@167:0>](<f_1176@167:0>:int)
    call trees:
      <main_1172@164>
        <f_1176@167>
          <main_1032@169>
            <copy_1030@171>
              <copy_1030@174>
                <copy_1030@177>
                </<copy_1030@177:1>@180>
                <f_copy_1173@182>
                </<f_copy_1173@182:1>@184>
              </<copy_1030@174:1>@186>
              <f_copy_1173@188>
              </<f_copy_1173@188:1>@190>
            </<copy_1030@171:1>@192>
            <f_main_1174@194>
              <copy_1030@196>
                <copy_1030@199>
                  <copy_1030@202>
                  </<copy_1030@202:1>@205>
                  <f_copy_1173@207>
                  </<f_copy_1173@207:1>@209>
                </<copy_1030@199:1>@211>
                <f_copy_1173@213>
                </<f_copy_1173@213:1>@215>
              </<copy_1030@196:1>@217>
              <f_main_1175@219>
                <fail_1178@222>
    inlined horn clauses:
      P[<fail_1178@222:0>](<fail_1178@222:0>:bool)|- bot
      
      P[<<copy_1030@171:1>@192:0>](<f_main_1175@219:0>:int,<f_main_1175@219:1>:int),
      P[<<copy_1030@196:1>@217:0>](<f_main_1175@219:1>:int,<f_main_1175@219:3>:int),
      ((<f_main_1175@219:3> <> <f_main_1175@219:0>) && <fail_1178@222:0>)
      |- P[<fail_1178@222:0>](<fail_1178@222:0>:bool)
      
      P[<copy_1030@196:0>](<copy_1030@196:0>:int),
      P[<<copy_1030@199:1>@211:0>]((-1 + <copy_1030@196:0>):int,(-1 + <<copy_1030@196:1>@217:0>):int),
      (<copy_1030@196:0> <> 0) |- P[<<copy_1030@196:1>@217:0>](<copy_1030@196:0>:int,
                                                               <<copy_1030@196:1>@217:0>:int)
      
      P[<copy_1030@199:0>](<copy_1030@199:0>:int),
      P[<<copy_1030@202:1>@205:0>]((-1 + <copy_1030@199:0>):int,(-1 + <<copy_1030@199:1>@211:0>):int),
      (<copy_1030@199:0> <> 0) |- P[<<copy_1030@199:1>@211:0>](<copy_1030@199:0>:int,
                                                               <<copy_1030@199:1>@211:0>:int)
      
      P[<copy_1030@202:0>](<copy_1030@202:0>:int), ((<copy_1030@202:0> = 0) && (<<copy_1030@202:1>@205:0> = 0))
      |- P[<<copy_1030@202:1>@205:0>](<copy_1030@202:0>:int,<<copy_1030@202:1>@205:0>:int)
      
      P[<copy_1030@199:0>]((1 + <copy_1030@202:0>):int), ((1 + <copy_1030@202:0>) <> 0)
      |- P[<copy_1030@202:0>](<copy_1030@202:0>:int)
      
      P[<copy_1030@196:0>]((1 + <copy_1030@199:0>):int), ((1 + <copy_1030@199:0>) <> 0)
      |- P[<copy_1030@199:0>](<copy_1030@199:0>:int)
      
      P[<<copy_1030@171:1>@192:0>](<f_main_1174@194:0>:int,<copy_1030@196:0>:int)|- P[<copy_1030@196:0>](
      <copy_1030@196:0>:int)
      
      P[<copy_1030@171:0>](<copy_1030@171:0>:int),
      P[<<copy_1030@174:1>@186:0>]((-1 + <copy_1030@171:0>):int,(-1 + <<copy_1030@171:1>@192:0>):int),
      (<copy_1030@171:0> <> 0) |- P[<<copy_1030@171:1>@192:0>](<copy_1030@171:0>:int,
                                                               <<copy_1030@171:1>@192:0>:int)
      
      P[<copy_1030@174:0>](<copy_1030@174:0>:int),
      P[<<copy_1030@177:1>@180:0>]((-1 + <copy_1030@174:0>):int,(-1 + <<copy_1030@174:1>@186:0>):int),
      (<copy_1030@174:0> <> 0) |- P[<<copy_1030@174:1>@186:0>](<copy_1030@174:0>:int,
                                                               <<copy_1030@174:1>@186:0>:int)
      
      P[<copy_1030@177:0>](<copy_1030@177:0>:int), ((<copy_1030@177:0> = 0) && (<<copy_1030@177:1>@180:0> = 0))
      |- P[<<copy_1030@177:1>@180:0>](<copy_1030@177:0>:int,<<copy_1030@177:1>@180:0>:int)
      
      P[<copy_1030@174:0>]((1 + <copy_1030@177:0>):int), ((1 + <copy_1030@177:0>) <> 0)
      |- P[<copy_1030@177:0>](<copy_1030@177:0>:int)
      
      P[<copy_1030@171:0>]((1 + <copy_1030@174:0>):int), ((1 + <copy_1030@174:0>) <> 0)
      |- P[<copy_1030@174:0>](<copy_1030@174:0>:int)
      
      |- P[<copy_1030@171:0>](<copy_1030@171:0>:int)
    begin ParamSubstInfer.infer(29926)[3]
      
    end ParamSubstInfer.infer(29926)[3] (1.240811 sec.)
    inferred extra parameters:
      
    begin RefTypeInfer.elim_coeffs(29928)[3]
      
    end RefTypeInfer.elim_coeffs(29928)[3] (0.002000 sec.)
    begin YhornInterface.solve(30353)[3]
      begin HcSolver.solve_ub(30354)[4]
        encoded:
          P[<fail_1178@222:0>](<fail_1178@222:0>:int)|- bot
          
          P[<<copy_1030@171:1>@192:0>](<f_main_1175@219:0>:int,<f_main_1175@219:1>:int),
          P[<<copy_1030@196:1>@217:0>](<f_main_1175@219:1>:int,<f_main_1175@219:3>:int),
          ((<f_main_1175@219:3> <> <f_main_1175@219:0>) && (<fail_1178@222:0> = 1))
          |- P[<fail_1178@222:0>](<fail_1178@222:0>:int)
          
          P[<copy_1030@196:0>](<copy_1030@196:0>:int),
          P[<<copy_1030@199:1>@211:0>]((-1 + <copy_1030@196:0>):int,(
                                       -1 + <<copy_1030@196:1>@217:0>):int), (
          <copy_1030@196:0> <> 0) |- P[<<copy_1030@196:1>@217:0>](<copy_1030@196:0>:int,
                                                                  <<copy_1030@196:1>@217:0>:int)
          
          P[<copy_1030@199:0>](<copy_1030@199:0>:int),
          P[<<copy_1030@202:1>@205:0>]((-1 + <copy_1030@199:0>):int,(
                                       -1 + <<copy_1030@199:1>@211:0>):int), (
          <copy_1030@199:0> <> 0) |- P[<<copy_1030@199:1>@211:0>](<copy_1030@199:0>:int,
                                                                  <<copy_1030@199:1>@211:0>:int)
          
          P[<copy_1030@202:0>](<copy_1030@202:0>:int), ((<copy_1030@202:0> = 0) && (<<copy_1030@202:1>@205:0> = 0))
          |- P[<<copy_1030@202:1>@205:0>](<copy_1030@202:0>:int,<<copy_1030@202:1>@205:0>:int)
          
          P[<copy_1030@199:0>]((1 + <copy_1030@202:0>):int), ((1 + <copy_1030@202:0>) <> 0)
          |- P[<copy_1030@202:0>](<copy_1030@202:0>:int)
          
          P[<copy_1030@196:0>]((1 + <copy_1030@199:0>):int), ((1 + <copy_1030@199:0>) <> 0)
          |- P[<copy_1030@199:0>](<copy_1030@199:0>:int)
          
          P[<<copy_1030@171:1>@192:0>](<f_main_1174@194:0>:int,<copy_1030@196:0>:int)|- P[<copy_1030@196:0>](
          <copy_1030@196:0>:int)
          
          P[<copy_1030@171:0>](<copy_1030@171:0>:int),
          P[<<copy_1030@174:1>@186:0>]((-1 + <copy_1030@171:0>):int,(
                                       -1 + <<copy_1030@171:1>@192:0>):int), (
          <copy_1030@171:0> <> 0) |- P[<<copy_1030@171:1>@192:0>](<copy_1030@171:0>:int,
                                                                  <<copy_1030@171:1>@192:0>:int)
          
          P[<copy_1030@174:0>](<copy_1030@174:0>:int),
          P[<<copy_1030@177:1>@180:0>]((-1 + <copy_1030@174:0>):int,(
                                       -1 + <<copy_1030@174:1>@186:0>):int), (
          <copy_1030@174:0> <> 0) |- P[<<copy_1030@174:1>@186:0>](<copy_1030@174:0>:int,
                                                                  <<copy_1030@174:1>@186:0>:int)
          
          P[<copy_1030@177:0>](<copy_1030@177:0>:int), ((<copy_1030@177:0> = 0) && (<<copy_1030@177:1>@180:0> = 0))
          |- P[<<copy_1030@177:1>@180:0>](<copy_1030@177:0>:int,<<copy_1030@177:1>@180:0>:int)
          
          P[<copy_1030@174:0>]((1 + <copy_1030@177:0>):int), ((1 + <copy_1030@177:0>) <> 0)
          |- P[<copy_1030@177:0>](<copy_1030@177:0>:int)
          
          P[<copy_1030@171:0>]((1 + <copy_1030@174:0>):int), ((1 + <copy_1030@174:0>) <> 0)
          |- P[<copy_1030@174:0>](<copy_1030@174:0>:int)
          
          |- P[<copy_1030@171:0>](<copy_1030@171:0>:int)
        input to Yhorn:
          P[<fail_1178@222:0>](<fail_1178@222:0>:int)|- bot
          
          P[<<copy_1030@171:1>@192:0>](<f_main_1175@219:0>:int,<f_main_1175@219:1>:int),
          P[<<copy_1030@196:1>@217:0>](<f_main_1175@219:1>:int,<f_main_1175@219:3>:int),
          ((<f_main_1175@219:3> <> <f_main_1175@219:0>) && (<fail_1178@222:0> = 1))
          |- P[<fail_1178@222:0>](<fail_1178@222:0>:int)
          
          P[<copy_1030@196:0>](<copy_1030@196:0>:int),
          P[<<copy_1030@199:1>@211:0>](var141:int,var142:int),
          (((1 + var142) = <<copy_1030@196:1>@217:0>) &&
           (((1 + var141) = <copy_1030@196:0>) && (<copy_1030@196:0> <> 0)))
          |- P[<<copy_1030@196:1>@217:0>](<copy_1030@196:0>:int,<<copy_1030@196:1>@217:0>:int)
          
          P[<copy_1030@199:0>](<copy_1030@199:0>:int),
          P[<<copy_1030@202:1>@205:0>](var143:int,var144:int),
          (((1 + var144) = <<copy_1030@199:1>@211:0>) &&
           (((1 + var143) = <copy_1030@199:0>) && (<copy_1030@199:0> <> 0)))
          |- P[<<copy_1030@199:1>@211:0>](<copy_1030@199:0>:int,<<copy_1030@199:1>@211:0>:int)
          
          P[<copy_1030@202:0>](<copy_1030@202:0>:int), ((<<copy_1030@202:1>@205:0> = 0) && (<copy_1030@202:0> = 0))
          |- P[<<copy_1030@202:1>@205:0>](<copy_1030@202:0>:int,<<copy_1030@202:1>@205:0>:int)
          
          P[<copy_1030@199:0>](var145:int), ((var145 = (1 + <copy_1030@202:0>)) && ((1 + <copy_1030@202:0>) <> 0))
          |- P[<copy_1030@202:0>](<copy_1030@202:0>:int)
          
          P[<copy_1030@196:0>](var146:int), ((var146 = (1 + <copy_1030@199:0>)) && ((1 + <copy_1030@199:0>) <> 0))
          |- P[<copy_1030@199:0>](<copy_1030@199:0>:int)
          
          P[<<copy_1030@171:1>@192:0>](<f_main_1174@194:0>:int,<copy_1030@196:0>:int)|- P[<copy_1030@196:0>](
          <copy_1030@196:0>:int)
          
          P[<copy_1030@171:0>](<copy_1030@171:0>:int),
          P[<<copy_1030@174:1>@186:0>](var147:int,var148:int),
          (((1 + var148) = <<copy_1030@171:1>@192:0>) &&
           (((1 + var147) = <copy_1030@171:0>) && (<copy_1030@171:0> <> 0)))
          |- P[<<copy_1030@171:1>@192:0>](<copy_1030@171:0>:int,<<copy_1030@171:1>@192:0>:int)
          
          P[<copy_1030@174:0>](<copy_1030@174:0>:int),
          P[<<copy_1030@177:1>@180:0>](var149:int,var150:int),
          (((1 + var150) = <<copy_1030@174:1>@186:0>) &&
           (((1 + var149) = <copy_1030@174:0>) && (<copy_1030@174:0> <> 0)))
          |- P[<<copy_1030@174:1>@186:0>](<copy_1030@174:0>:int,<<copy_1030@174:1>@186:0>:int)
          
          P[<copy_1030@177:0>](<copy_1030@177:0>:int), ((<<copy_1030@177:1>@180:0> = 0) && (<copy_1030@177:0> = 0))
          |- P[<<copy_1030@177:1>@180:0>](<copy_1030@177:0>:int,<<copy_1030@177:1>@180:0>:int)
          
          P[<copy_1030@174:0>](var151:int), ((var151 = (1 + <copy_1030@177:0>)) && ((1 + <copy_1030@177:0>) <> 0))
          |- P[<copy_1030@177:0>](<copy_1030@177:0>:int)
          
          P[<copy_1030@171:0>](var152:int), ((var152 = (1 + <copy_1030@174:0>)) && ((1 + <copy_1030@174:0>) <> 0))
          |- P[<copy_1030@174:0>](<copy_1030@174:0>:int)
          Yhorn (Wed Sep 25 10:52:05 JST 2013)


(0=0) & (v_sep_fail_1178_sep_222_sep_0($2298)) -> 1=0.
(($2298-1=0) & ($2299-$2300<>0)) & (v_sep_copy_1030_sep_196_sep_1_sep_217_sep_0($2301,$2299)) & (v_sep_copy_1030_sep_171_sep_1_sep_192_sep_0($2300,$2301)) -> v_sep_fail_1178_sep_222_sep_0($2298).
(($2302<>0) & (-$2302+$2303+1=0) & ($2304-$2305+1=0)) & (v_sep_copy_1030_sep_199_sep_1_sep_211_sep_0($2303,$2304)) & (v_sep_copy_1030_sep_196_sep_0($2302)) -> v_sep_copy_1030_sep_196_sep_1_sep_217_sep_0($2302,$2305).
(($2306<>0) & (-$2306+$2307+1=0) & ($2308-$2309+1=0)) & (v_sep_copy_1030_sep_202_sep_1_sep_205_sep_0($2307,$2308)) & (v_sep_copy_1030_sep_199_sep_0($2306)) -> v_sep_copy_1030_sep_199_sep_1_sep_211_sep_0($2306,$2309).
(($2310=0) & ($2311=0)) & (v_sep_copy_1030_sep_202_sep_0($2310)) -> v_sep_copy_1030_sep_202_sep_1_sep_205_sep_0($2310,$2311).
(($2310+1<>0) & (-$2310+$2312-1=0)) & (v_sep_copy_1030_sep_199_sep_0($2312)) -> v_sep_copy_1030_sep_202_sep_0($2310).
(($2306+1<>0) & (-$2306+$2313-1=0)) & (v_sep_copy_1030_sep_196_sep_0($2313)) -> v_sep_copy_1030_sep_199_sep_0($2306).
(0=0) & (v_sep_copy_1030_sep_171_sep_1_sep_192_sep_0($2314,$2302)) -> v_sep_copy_1030_sep_196_sep_0($2302).
(($2315<>0) & (-$2315+$2316+1=0) & ($2317-$2318+1=0)) & (v_sep_copy_1030_sep_174_sep_1_sep_186_sep_0($2316,$2317)) & (v_sep_copy_1030_sep_171_sep_0($2315)) -> v_sep_copy_1030_sep_171_sep_1_sep_192_sep_0($2315,$2318).
(($2319<>0) & (-$2319+$2320+1=0) & ($2321-$2322+1=0)) & (v_sep_copy_1030_sep_177_sep_1_sep_180_sep_0($2320,$2321)) & (v_sep_copy_1030_sep_174_sep_0($2319)) -> v_sep_copy_1030_sep_174_sep_1_sep_186_sep_0($2319,$2322).
(($2323=0) & ($2324=0)) & (v_sep_copy_1030_sep_177_sep_0($2323)) -> v_sep_copy_1030_sep_177_sep_1_sep_180_sep_0($2323,$2324).
(($2323+1<>0) & (-$2323+$2325-1=0)) & (v_sep_copy_1030_sep_174_sep_0($2325)) -> v_sep_copy_1030_sep_177_sep_0($2323).
(($2319+1<>0) & (-$2319+$2326-1=0)) & (v_sep_copy_1030_sep_171_sep_0($2326)) -> v_sep_copy_1030_sep_174_sep_0($2319).
0=0 -> v_sep_copy_1030_sep_171_sep_0($2315).


v_sep_copy_1030_sep_171_sep_0: X
v_sep_copy_1030_sep_171_sep_1_sep_192_sep_0: X
v_sep_copy_1030_sep_174_sep_0: X
v_sep_copy_1030_sep_174_sep_1_sep_186_sep_0: X
v_sep_copy_1030_sep_177_sep_0: X
v_sep_copy_1030_sep_177_sep_1_sep_180_sep_0: X
v_sep_copy_1030_sep_196_sep_0: X
v_sep_copy_1030_sep_196_sep_1_sep_217_sep_0: X
v_sep_copy_1030_sep_199_sep_0: X
v_sep_copy_1030_sep_199_sep_1_sep_211_sep_0: X
v_sep_copy_1030_sep_202_sep_0: X
v_sep_copy_1030_sep_202_sep_1_sep_205_sep_0: X
v_sep_fail_1178_sep_222_sep_0: X
.................................Split disj [60] 5.505162
Reconstrcut: 3 **)

v_sep_copy_1030_sep_171_sep_0: X
v_sep_copy_1030_sep_171_sep_1_sep_192_sep_0: X
v_sep_copy_1030_sep_174_sep_0: X
v_sep_copy_1030_sep_174_sep_1_sep_186_sep_0: X
v_sep_copy_1030_sep_177_sep_0: X
v_sep_copy_1030_sep_177_sep_1_sep_180_sep_0: X
v_sep_copy_1030_sep_196_sep_0: X
v_sep_copy_1030_sep_196_sep_1_sep_217_sep_0: X
v_sep_copy_1030_sep_199_sep_0: X
v_sep_copy_1030_sep_199_sep_1_sep_211_sep_0: X
v_sep_copy_1030_sep_202_sep_0: X
v_sep_copy_1030_sep_202_sep_1_sep_205_sep_0: X
v_sep_fail_1178_sep_222_sep_0: (X) | (X)
.......
v_sep_copy_1030_sep_171_sep_0: X
v_sep_copy_1030_sep_171_sep_1_sep_192_sep_0: X
v_sep_copy_1030_sep_174_sep_0: X
v_sep_copy_1030_sep_174_sep_1_sep_186_sep_0: X
v_sep_copy_1030_sep_177_sep_0: X
v_sep_copy_1030_sep_177_sep_1_sep_180_sep_0: X
v_sep_copy_1030_sep_196_sep_0: X
v_sep_copy_1030_sep_196_sep_1_sep_217_sep_0: X
v_sep_copy_1030_sep_199_sep_0: X
v_sep_copy_1030_sep_199_sep_1_sep_211_sep_0: X
v_sep_copy_1030_sep_202_sep_0: X
v_sep_copy_1030_sep_202_sep_1_sep_205_sep_0: X
v_sep_fail_1178_sep_222_sep_0: (X) | (X)
.......Split conj [62] 5.511161
(Reconstrcut: 8 **)
v_sep_copy_1030_sep_171_sep_0: X
v_sep_copy_1030_sep_171_sep_1_sep_192_sep_0: X
v_sep_copy_1030_sep_174_sep_0: X
v_sep_copy_1030_sep_174_sep_1_sep_186_sep_0: X
v_sep_copy_1030_sep_177_sep_0: X
v_sep_copy_1030_sep_177_sep_1_sep_180_sep_0: X
v_sep_copy_1030_sep_196_sep_0: X
v_sep_copy_1030_sep_196_sep_1_sep_217_sep_0: (X) & (X)
v_sep_copy_1030_sep_199_sep_0: X
v_sep_copy_1030_sep_199_sep_1_sep_211_sep_0: X
v_sep_copy_1030_sep_202_sep_0: X
v_sep_copy_1030_sep_202_sep_1_sep_205_sep_0: X
v_sep_fail_1178_sep_222_sep_0: (X) | (X)
...............
v_sep_copy_1030_sep_171_sep_0: X
v_sep_copy_1030_sep_171_sep_1_sep_192_sep_0: X
v_sep_copy_1030_sep_174_sep_0: X
v_sep_copy_1030_sep_174_sep_1_sep_186_sep_0: X
v_sep_copy_1030_sep_177_sep_0: X
v_sep_copy_1030_sep_177_sep_1_sep_180_sep_0: X
v_sep_copy_1030_sep_196_sep_0: X
v_sep_copy_1030_sep_196_sep_1_sep_217_sep_0: (X) & (X)
v_sep_copy_1030_sep_199_sep_0: X
v_sep_copy_1030_sep_199_sep_1_sep_211_sep_0: X
v_sep_copy_1030_sep_202_sep_0: X
v_sep_copy_1030_sep_202_sep_1_sep_205_sep_0: X
v_sep_fail_1178_sep_222_sep_0: (X) | (X)
.......Split conj [65] 5.51916
(Reconstrcut: 27 ***)
v_sep_copy_1030_sep_171_sep_0: X
v_sep_copy_1030_sep_171_sep_1_sep_192_sep_0: (X) & (X) & (X)
v_sep_copy_1030_sep_174_sep_0: X
v_sep_copy_1030_sep_174_sep_1_sep_186_sep_0: X
v_sep_copy_1030_sep_177_sep_0: X
v_sep_copy_1030_sep_177_sep_1_sep_180_sep_0: X
v_sep_copy_1030_sep_196_sep_0: X
v_sep_copy_1030_sep_196_sep_1_sep_217_sep_0: (X) & (X)
v_sep_copy_1030_sep_199_sep_0: X
v_sep_copy_1030_sep_199_sep_1_sep_211_sep_0: X
v_sep_copy_1030_sep_202_sep_0: X
v_sep_copy_1030_sep_202_sep_1_sep_205_sep_0: X
v_sep_fail_1178_sep_222_sep_0: (X) | (X)
.....................................
v_sep_copy_1030_sep_171_sep_0: X
v_sep_copy_1030_sep_171_sep_1_sep_192_sep_0: (X) & (X) & (X)
v_sep_copy_1030_sep_174_sep_0: X
v_sep_copy_1030_sep_174_sep_1_sep_186_sep_0: X
v_sep_copy_1030_sep_177_sep_0: X
v_sep_copy_1030_sep_177_sep_1_sep_180_sep_0: X
v_sep_copy_1030_sep_196_sep_0: X
v_sep_copy_1030_sep_196_sep_1_sep_217_sep_0: (X) & (X)
v_sep_copy_1030_sep_199_sep_0: X
v_sep_copy_1030_sep_199_sep_1_sep_211_sep_0: X
v_sep_copy_1030_sep_202_sep_0: X
v_sep_copy_1030_sep_202_sep_1_sep_205_sep_0: X
v_sep_fail_1178_sep_222_sep_0: (X) | (X)
.......
v_sep_copy_1030_sep_171_sep_0: X
v_sep_copy_1030_sep_171_sep_1_sep_192_sep_0: (X) & (X) & (X)
v_sep_copy_1030_sep_174_sep_0: X
v_sep_copy_1030_sep_174_sep_1_sep_186_sep_0: X
v_sep_copy_1030_sep_177_sep_0: X
v_sep_copy_1030_sep_177_sep_1_sep_180_sep_0: X
v_sep_copy_1030_sep_196_sep_0: X
v_sep_copy_1030_sep_196_sep_1_sep_217_sep_0: (X) & (X)
v_sep_copy_1030_sep_199_sep_0: X
v_sep_copy_1030_sep_199_sep_1_sep_211_sep_0: X
v_sep_copy_1030_sep_202_sep_0: X
v_sep_copy_1030_sep_202_sep_1_sep_205_sep_0: X
v_sep_fail_1178_sep_222_sep_0: (X) | (X)
.......................Split conj [71] 5.543156
(Reconstrcut: 14 ****)
v_sep_copy_1030_sep_171_sep_0: X
v_sep_copy_1030_sep_171_sep_1_sep_192_sep_0: (X) & (X) & (X)
v_sep_copy_1030_sep_174_sep_0: X
v_sep_copy_1030_sep_174_sep_1_sep_186_sep_0: X
v_sep_copy_1030_sep_177_sep_0: X
v_sep_copy_1030_sep_177_sep_1_sep_180_sep_0: X
v_sep_copy_1030_sep_196_sep_0: X
v_sep_copy_1030_sep_196_sep_1_sep_217_sep_0: (X) & (X)
v_sep_copy_1030_sep_199_sep_0: X
v_sep_copy_1030_sep_199_sep_1_sep_211_sep_0: (X) & (X) & (X) & (X)
v_sep_copy_1030_sep_202_sep_0: X
v_sep_copy_1030_sep_202_sep_1_sep_205_sep_0: X
v_sep_fail_1178_sep_222_sep_0: (X) | (X)
...............................
v_sep_copy_1030_sep_171_sep_0: X
v_sep_copy_1030_sep_171_sep_1_sep_192_sep_0: (X) & (X) & (X)
v_sep_copy_1030_sep_174_sep_0: X
v_sep_copy_1030_sep_174_sep_1_sep_186_sep_0: X
v_sep_copy_1030_sep_177_sep_0: X
v_sep_copy_1030_sep_177_sep_1_sep_180_sep_0: X
v_sep_copy_1030_sep_196_sep_0: X
v_sep_copy_1030_sep_196_sep_1_sep_217_sep_0: (X) & (X)
v_sep_copy_1030_sep_199_sep_0: X
v_sep_copy_1030_sep_199_sep_1_sep_211_sep_0: (X) & (X) & (X) & (X)
v_sep_copy_1030_sep_202_sep_0: X
v_sep_copy_1030_sep_202_sep_1_sep_205_sep_0: X
v_sep_fail_1178_sep_222_sep_0: (X) | (X)
.......
v_sep_copy_1030_sep_171_sep_0: X
v_sep_copy_1030_sep_171_sep_1_sep_192_sep_0: (X) & (X) & (X)
v_sep_copy_1030_sep_174_sep_0: X
v_sep_copy_1030_sep_174_sep_1_sep_186_sep_0: X
v_sep_copy_1030_sep_177_sep_0: X
v_sep_copy_1030_sep_177_sep_1_sep_180_sep_0: X
v_sep_copy_1030_sep_196_sep_0: X
v_sep_copy_1030_sep_196_sep_1_sep_217_sep_0: (X) & (X)
v_sep_copy_1030_sep_199_sep_0: X
v_sep_copy_1030_sep_199_sep_1_sep_211_sep_0: (X) & (X) & (X) & (X)
v_sep_copy_1030_sep_202_sep_0: X
v_sep_copy_1030_sep_202_sep_1_sep_205_sep_0: X
v_sep_fail_1178_sep_222_sep_0: (X) | (X)
.......................Split conj [80] 5.573152
(Reconstrcut: 34 ******)
v_sep_copy_1030_sep_171_sep_0: X
v_sep_copy_1030_sep_171_sep_1_sep_192_sep_0: (X) & (X) & (X)
v_sep_copy_1030_sep_174_sep_0: X
v_sep_copy_1030_sep_174_sep_1_sep_186_sep_0: X
v_sep_copy_1030_sep_177_sep_0: X
v_sep_copy_1030_sep_177_sep_1_sep_180_sep_0: X
v_sep_copy_1030_sep_196_sep_0: (X) & (X) & (X) & (X) & (X) & (X)
v_sep_copy_1030_sep_196_sep_1_sep_217_sep_0: (X) & (X)
v_sep_copy_1030_sep_199_sep_0: X
v_sep_copy_1030_sep_199_sep_1_sep_211_sep_0: (X) & (X) & (X) & (X)
v_sep_copy_1030_sep_202_sep_0: X
v_sep_copy_1030_sep_202_sep_1_sep_205_sep_0: X
v_sep_fail_1178_sep_222_sep_0: (X) | (X)
..........................................
v_sep_copy_1030_sep_171_sep_0: X
v_sep_copy_1030_sep_171_sep_1_sep_192_sep_0: (X) & (X) & (X)
v_sep_copy_1030_sep_174_sep_0: X
v_sep_copy_1030_sep_174_sep_1_sep_186_sep_0: X
v_sep_copy_1030_sep_177_sep_0: X
v_sep_copy_1030_sep_177_sep_1_sep_180_sep_0: X
v_sep_copy_1030_sep_196_sep_0: (X) & (X) & (X) & (X) & (X) & (X)
v_sep_copy_1030_sep_196_sep_1_sep_217_sep_0: (X) & (X)
v_sep_copy_1030_sep_199_sep_0: X
v_sep_copy_1030_sep_199_sep_1_sep_211_sep_0: (X) & (X) & (X) & (X)
v_sep_copy_1030_sep_202_sep_0: X
v_sep_copy_1030_sep_202_sep_1_sep_205_sep_0: X
v_sep_fail_1178_sep_222_sep_0: (X) | (X)
.......
v_sep_copy_1030_sep_171_sep_0: X
v_sep_copy_1030_sep_171_sep_1_sep_192_sep_0: (X) & (X) & (X)
v_sep_copy_1030_sep_174_sep_0: X
v_sep_copy_1030_sep_174_sep_1_sep_186_sep_0: X
v_sep_copy_1030_sep_177_sep_0: X
v_sep_copy_1030_sep_177_sep_1_sep_180_sep_0: X
v_sep_copy_1030_sep_196_sep_0: (X) & (X) & (X) & (X) & (X) & (X)
v_sep_copy_1030_sep_196_sep_1_sep_217_sep_0: (X) & (X)
v_sep_copy_1030_sep_199_sep_0: X
v_sep_copy_1030_sep_199_sep_1_sep_211_sep_0: (X) & (X) & (X) & (X)
v_sep_copy_1030_sep_202_sep_0: X
v_sep_copy_1030_sep_202_sep_1_sep_205_sep_0: X
v_sep_fail_1178_sep_222_sep_0: (X) | (X)
.......................Split conj [90] 5.606147
(Reconstrcut: 55 ******)
v_sep_copy_1030_sep_171_sep_0: X
v_sep_copy_1030_sep_171_sep_1_sep_192_sep_0: (X) & (X) & (X)
v_sep_copy_1030_sep_174_sep_0: X
v_sep_copy_1030_sep_174_sep_1_sep_186_sep_0: (X) & (X) & (X) & (X) & (X) & (X)
v_sep_copy_1030_sep_177_sep_0: X
v_sep_copy_1030_sep_177_sep_1_sep_180_sep_0: X
v_sep_copy_1030_sep_196_sep_0: (X) & (X) & (X) & (X) & (X) & (X)
v_sep_copy_1030_sep_196_sep_1_sep_217_sep_0: (X) & (X)
v_sep_copy_1030_sep_199_sep_0: X
v_sep_copy_1030_sep_199_sep_1_sep_211_sep_0: (X) & (X) & (X) & (X)
v_sep_copy_1030_sep_202_sep_0: X
v_sep_copy_1030_sep_202_sep_1_sep_205_sep_0: X
v_sep_fail_1178_sep_222_sep_0: (X) | (X)
..............................................................................
v_sep_copy_1030_sep_171_sep_0: X
v_sep_copy_1030_sep_171_sep_1_sep_192_sep_0: (X) & (X) & (X)
v_sep_copy_1030_sep_174_sep_0: X
v_sep_copy_1030_sep_174_sep_1_sep_186_sep_0: (X) & (X) & (X) & (X) & (X) & (X)
v_sep_copy_1030_sep_177_sep_0: X
v_sep_copy_1030_sep_177_sep_1_sep_180_sep_0: X
v_sep_copy_1030_sep_196_sep_0: (X) & (X) & (X) & (X) & (X) & (X)
v_sep_copy_1030_sep_196_sep_1_sep_217_sep_0: (X) & (X)
v_sep_copy_1030_sep_199_sep_0: X
v_sep_copy_1030_sep_199_sep_1_sep_211_sep_0: (X) & (X) & (X) & (X)
v_sep_copy_1030_sep_202_sep_0: X
v_sep_copy_1030_sep_202_sep_1_sep_205_sep_0: X
v_sep_fail_1178_sep_222_sep_0: (X) | (X)
.......
v_sep_copy_1030_sep_171_sep_0: X
v_sep_copy_1030_sep_171_sep_1_sep_192_sep_0: (X) & (X) & (X)
v_sep_copy_1030_sep_174_sep_0: X
v_sep_copy_1030_sep_174_sep_1_sep_186_sep_0: (X) & (X) & (X) & (X) & (X) & (X)
v_sep_copy_1030_sep_177_sep_0: X
v_sep_copy_1030_sep_177_sep_1_sep_180_sep_0: X
v_sep_copy_1030_sep_196_sep_0: (X) & (X) & (X) & (X) & (X) & (X)
v_sep_copy_1030_sep_196_sep_1_sep_217_sep_0: (X) & (X)
v_sep_copy_1030_sep_199_sep_0: X
v_sep_copy_1030_sep_199_sep_1_sep_211_sep_0: (X) & (X) & (X) & (X)
v_sep_copy_1030_sep_202_sep_0: X
v_sep_copy_1030_sep_202_sep_1_sep_205_sep_0: X
v_sep_fail_1178_sep_222_sep_0: (X) | (X)
.......................
v_sep_copy_1030_sep_171_sep_0: X
v_sep_copy_1030_sep_171_sep_1_sep_192_sep_0: (X) & (X) & (X)
v_sep_copy_1030_sep_174_sep_0: X
v_sep_copy_1030_sep_174_sep_1_sep_186_sep_0: (X) & (X) & (X) & (X) & (X) & (X)
v_sep_copy_1030_sep_177_sep_0: X
v_sep_copy_1030_sep_177_sep_1_sep_180_sep_0: X
v_sep_copy_1030_sep_196_sep_0: (X) & (X) & (X) & (X) & (X) & (X)
v_sep_copy_1030_sep_196_sep_1_sep_217_sep_0: (X) & (X)
v_sep_copy_1030_sep_199_sep_0: X
v_sep_copy_1030_sep_199_sep_1_sep_211_sep_0: (X) & (X) & (X) & (X)
v_sep_copy_1030_sep_202_sep_0: X
v_sep_copy_1030_sep_202_sep_1_sep_205_sep_0: X
v_sep_fail_1178_sep_222_sep_0: (X) | (X)
...........................................................Split conj [105] 5.677136
(Reconstrcut: 46 ******)
v_sep_copy_1030_sep_171_sep_0: X
v_sep_copy_1030_sep_171_sep_1_sep_192_sep_0: (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X)
v_sep_copy_1030_sep_174_sep_0: X
v_sep_copy_1030_sep_174_sep_1_sep_186_sep_0: (X) & (X) & (X) & (X) & (X) & (X)
v_sep_copy_1030_sep_177_sep_0: X
v_sep_copy_1030_sep_177_sep_1_sep_180_sep_0: X
v_sep_copy_1030_sep_196_sep_0: (X) & (X) & (X) & (X) & (X) & (X)
v_sep_copy_1030_sep_196_sep_1_sep_217_sep_0: (X) & (X)
v_sep_copy_1030_sep_199_sep_0: X
v_sep_copy_1030_sep_199_sep_1_sep_211_sep_0: (X) & (X) & (X) & (X)
v_sep_copy_1030_sep_202_sep_0: X
v_sep_copy_1030_sep_202_sep_1_sep_205_sep_0: X
v_sep_fail_1178_sep_222_sep_0: (X) | (X)
..................................................................
v_sep_copy_1030_sep_171_sep_0: X
v_sep_copy_1030_sep_171_sep_1_sep_192_sep_0: (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X)
v_sep_copy_1030_sep_174_sep_0: X
v_sep_copy_1030_sep_174_sep_1_sep_186_sep_0: (X) & (X) & (X) & (X) & (X) & (X)
v_sep_copy_1030_sep_177_sep_0: X
v_sep_copy_1030_sep_177_sep_1_sep_180_sep_0: X
v_sep_copy_1030_sep_196_sep_0: (X) & (X) & (X) & (X) & (X) & (X)
v_sep_copy_1030_sep_196_sep_1_sep_217_sep_0: (X) & (X)
v_sep_copy_1030_sep_199_sep_0: X
v_sep_copy_1030_sep_199_sep_1_sep_211_sep_0: (X) & (X) & (X) & (X)
v_sep_copy_1030_sep_202_sep_0: X
v_sep_copy_1030_sep_202_sep_1_sep_205_sep_0: X
v_sep_fail_1178_sep_222_sep_0: (X) | (X)
.......
v_sep_copy_1030_sep_171_sep_0: X
v_sep_copy_1030_sep_171_sep_1_sep_192_sep_0: (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X)
v_sep_copy_1030_sep_174_sep_0: X
v_sep_copy_1030_sep_174_sep_1_sep_186_sep_0: (X) & (X) & (X) & (X) & (X) & (X)
v_sep_copy_1030_sep_177_sep_0: X
v_sep_copy_1030_sep_177_sep_1_sep_180_sep_0: X
v_sep_copy_1030_sep_196_sep_0: (X) & (X) & (X) & (X) & (X) & (X)
v_sep_copy_1030_sep_196_sep_1_sep_217_sep_0: (X) & (X)
v_sep_copy_1030_sep_199_sep_0: X
v_sep_copy_1030_sep_199_sep_1_sep_211_sep_0: (X) & (X) & (X) & (X)
v_sep_copy_1030_sep_202_sep_0: X
v_sep_copy_1030_sep_202_sep_1_sep_205_sep_0: X
v_sep_fail_1178_sep_222_sep_0: (X) | (X)
.......................
v_sep_copy_1030_sep_171_sep_0: X
v_sep_copy_1030_sep_171_sep_1_sep_192_sep_0: (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X)
v_sep_copy_1030_sep_174_sep_0: X
v_sep_copy_1030_sep_174_sep_1_sep_186_sep_0: (X) & (X) & (X) & (X) & (X) & (X)
v_sep_copy_1030_sep_177_sep_0: X
v_sep_copy_1030_sep_177_sep_1_sep_180_sep_0: X
v_sep_copy_1030_sep_196_sep_0: (X) & (X) & (X) & (X) & (X) & (X)
v_sep_copy_1030_sep_196_sep_1_sep_217_sep_0: (X) & (X)
v_sep_copy_1030_sep_199_sep_0: X
v_sep_copy_1030_sep_199_sep_1_sep_211_sep_0: (X) & (X) & (X) & (X)
v_sep_copy_1030_sep_202_sep_0: X
v_sep_copy_1030_sep_202_sep_1_sep_205_sep_0: X
v_sep_fail_1178_sep_222_sep_0: (X) | (X)
...........................................................Split conj [120] 5.774121
(Reconstrcut: 26 ********)
v_sep_copy_1030_sep_171_sep_0: X
v_sep_copy_1030_sep_171_sep_1_sep_192_sep_0: (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X)
v_sep_copy_1030_sep_174_sep_0: X
v_sep_copy_1030_sep_174_sep_1_sep_186_sep_0: (X) & (X) & (X) & (X) & (X) & (X)
v_sep_copy_1030_sep_177_sep_0: X
v_sep_copy_1030_sep_177_sep_1_sep_180_sep_0: X
v_sep_copy_1030_sep_196_sep_0: (X) & (X) & (X) & (X) & (X) & (X)
v_sep_copy_1030_sep_196_sep_1_sep_217_sep_0: (X) & (X)
v_sep_copy_1030_sep_199_sep_0: X
v_sep_copy_1030_sep_199_sep_1_sep_211_sep_0: (X) & (X) & (X) & (X)
v_sep_copy_1030_sep_202_sep_0: X
v_sep_copy_1030_sep_202_sep_1_sep_205_sep_0: (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X)
v_sep_fail_1178_sep_222_sep_0: (X) | (X)
.......................................
v_sep_copy_1030_sep_171_sep_0: X
v_sep_copy_1030_sep_171_sep_1_sep_192_sep_0: (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X)
v_sep_copy_1030_sep_174_sep_0: X
v_sep_copy_1030_sep_174_sep_1_sep_186_sep_0: (X) & (X) & (X) & (X) & (X) & (X)
v_sep_copy_1030_sep_177_sep_0: X
v_sep_copy_1030_sep_177_sep_1_sep_180_sep_0: X
v_sep_copy_1030_sep_196_sep_0: (X) & (X) & (X) & (X) & (X) & (X)
v_sep_copy_1030_sep_196_sep_1_sep_217_sep_0: (X) & (X)
v_sep_copy_1030_sep_199_sep_0: X
v_sep_copy_1030_sep_199_sep_1_sep_211_sep_0: (X) & (X) & (X) & (X)
v_sep_copy_1030_sep_202_sep_0: X
v_sep_copy_1030_sep_202_sep_1_sep_205_sep_0: (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X)
v_sep_fail_1178_sep_222_sep_0: (X) | (X)
.......
v_sep_copy_1030_sep_171_sep_0: X
v_sep_copy_1030_sep_171_sep_1_sep_192_sep_0: (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X)
v_sep_copy_1030_sep_174_sep_0: X
v_sep_copy_1030_sep_174_sep_1_sep_186_sep_0: (X) & (X) & (X) & (X) & (X) & (X)
v_sep_copy_1030_sep_177_sep_0: X
v_sep_copy_1030_sep_177_sep_1_sep_180_sep_0: X
v_sep_copy_1030_sep_196_sep_0: (X) & (X) & (X) & (X) & (X) & (X)
v_sep_copy_1030_sep_196_sep_1_sep_217_sep_0: (X) & (X)
v_sep_copy_1030_sep_199_sep_0: X
v_sep_copy_1030_sep_199_sep_1_sep_211_sep_0: (X) & (X) & (X) & (X)
v_sep_copy_1030_sep_202_sep_0: X
v_sep_copy_1030_sep_202_sep_1_sep_205_sep_0: (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X)
v_sep_fail_1178_sep_222_sep_0: (X) | (X)
.......................
v_sep_copy_1030_sep_171_sep_0: X
v_sep_copy_1030_sep_171_sep_1_sep_192_sep_0: (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X)
v_sep_copy_1030_sep_174_sep_0: X
v_sep_copy_1030_sep_174_sep_1_sep_186_sep_0: (X) & (X) & (X) & (X) & (X) & (X)
v_sep_copy_1030_sep_177_sep_0: X
v_sep_copy_1030_sep_177_sep_1_sep_180_sep_0: X
v_sep_copy_1030_sep_196_sep_0: (X) & (X) & (X) & (X) & (X) & (X)
v_sep_copy_1030_sep_196_sep_1_sep_217_sep_0: (X) & (X)
v_sep_copy_1030_sep_199_sep_0: X
v_sep_copy_1030_sep_199_sep_1_sep_211_sep_0: (X) & (X) & (X) & (X)
v_sep_copy_1030_sep_202_sep_0: X
v_sep_copy_1030_sep_202_sep_1_sep_205_sep_0: (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X)
v_sep_fail_1178_sep_222_sep_0: (X) | (X)
...........................................................Split conj [134] 5.878106
(Reconstrcut: 45 **********)
v_sep_copy_1030_sep_171_sep_0: X
v_sep_copy_1030_sep_171_sep_1_sep_192_sep_0: (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X)
v_sep_copy_1030_sep_174_sep_0: X
v_sep_copy_1030_sep_174_sep_1_sep_186_sep_0: (X) & (X) & (X) & (X) & (X) & (X)
v_sep_copy_1030_sep_177_sep_0: X
v_sep_copy_1030_sep_177_sep_1_sep_180_sep_0: X
v_sep_copy_1030_sep_196_sep_0: (X) & (X) & (X) & (X) & (X) & (X)
v_sep_copy_1030_sep_196_sep_1_sep_217_sep_0: (X) & (X)
v_sep_copy_1030_sep_199_sep_0: (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X)
v_sep_copy_1030_sep_199_sep_1_sep_211_sep_0: (X) & (X) & (X) & (X)
v_sep_copy_1030_sep_202_sep_0: X
v_sep_copy_1030_sep_202_sep_1_sep_205_sep_0: (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X)
v_sep_fail_1178_sep_222_sep_0: (X) | (X)
.............................................................
v_sep_copy_1030_sep_171_sep_0: X
v_sep_copy_1030_sep_171_sep_1_sep_192_sep_0: (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X)
v_sep_copy_1030_sep_174_sep_0: X
v_sep_copy_1030_sep_174_sep_1_sep_186_sep_0: (X) & (X) & (X) & (X) & (X) & (X)
v_sep_copy_1030_sep_177_sep_0: X
v_sep_copy_1030_sep_177_sep_1_sep_180_sep_0: X
v_sep_copy_1030_sep_196_sep_0: (X) & (X) & (X) & (X) & (X) & (X)
v_sep_copy_1030_sep_196_sep_1_sep_217_sep_0: (X) & (X)
v_sep_copy_1030_sep_199_sep_0: (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X)
v_sep_copy_1030_sep_199_sep_1_sep_211_sep_0: (X) & (X) & (X) & (X)
v_sep_copy_1030_sep_202_sep_0: X
v_sep_copy_1030_sep_202_sep_1_sep_205_sep_0: (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X)
v_sep_fail_1178_sep_222_sep_0: (X) | (X)
.......
v_sep_copy_1030_sep_171_sep_0: X
v_sep_copy_1030_sep_171_sep_1_sep_192_sep_0: (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X)
v_sep_copy_1030_sep_174_sep_0: X
v_sep_copy_1030_sep_174_sep_1_sep_186_sep_0: (X) & (X) & (X) & (X) & (X) & (X)
v_sep_copy_1030_sep_177_sep_0: X
v_sep_copy_1030_sep_177_sep_1_sep_180_sep_0: X
v_sep_copy_1030_sep_196_sep_0: (X) & (X) & (X) & (X) & (X) & (X)
v_sep_copy_1030_sep_196_sep_1_sep_217_sep_0: (X) & (X)
v_sep_copy_1030_sep_199_sep_0: (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X)
v_sep_copy_1030_sep_199_sep_1_sep_211_sep_0: (X) & (X) & (X) & (X)
v_sep_copy_1030_sep_202_sep_0: X
v_sep_copy_1030_sep_202_sep_1_sep_205_sep_0: (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X)
v_sep_fail_1178_sep_222_sep_0: (X) | (X)
.......................
v_sep_copy_1030_sep_171_sep_0: X
v_sep_copy_1030_sep_171_sep_1_sep_192_sep_0: (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X)
v_sep_copy_1030_sep_174_sep_0: X
v_sep_copy_1030_sep_174_sep_1_sep_186_sep_0: (X) & (X) & (X) & (X) & (X) & (X)
v_sep_copy_1030_sep_177_sep_0: X
v_sep_copy_1030_sep_177_sep_1_sep_180_sep_0: X
v_sep_copy_1030_sep_196_sep_0: (X) & (X) & (X) & (X) & (X) & (X)
v_sep_copy_1030_sep_196_sep_1_sep_217_sep_0: (X) & (X)
v_sep_copy_1030_sep_199_sep_0: (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X)
v_sep_copy_1030_sep_199_sep_1_sep_211_sep_0: (X) & (X) & (X) & (X)
v_sep_copy_1030_sep_202_sep_0: X
v_sep_copy_1030_sep_202_sep_1_sep_205_sep_0: (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X)
v_sep_fail_1178_sep_222_sep_0: (X) | (X)
...........................................................Split conj [161] 5.98409
(Reconstrcut: 137 ******************)
v_sep_copy_1030_sep_171_sep_0: (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X)
v_sep_copy_1030_sep_171_sep_1_sep_192_sep_0: (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X)
v_sep_copy_1030_sep_174_sep_0: X
v_sep_copy_1030_sep_174_sep_1_sep_186_sep_0: (X) & (X) & (X) & (X) & (X) & (X)
v_sep_copy_1030_sep_177_sep_0: X
v_sep_copy_1030_sep_177_sep_1_sep_180_sep_0: X
v_sep_copy_1030_sep_196_sep_0: (X) & (X) & (X) & (X) & (X) & (X)
v_sep_copy_1030_sep_196_sep_1_sep_217_sep_0: (X) & (X)
v_sep_copy_1030_sep_199_sep_0: (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X)
v_sep_copy_1030_sep_199_sep_1_sep_211_sep_0: (X) & (X) & (X) & (X)
v_sep_copy_1030_sep_202_sep_0: X
v_sep_copy_1030_sep_202_sep_1_sep_205_sep_0: (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X)
v_sep_fail_1178_sep_222_sep_0: (X) | (X)
................................................................................................................................
v_sep_copy_1030_sep_171_sep_0: (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X)
v_sep_copy_1030_sep_171_sep_1_sep_192_sep_0: (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X)
v_sep_copy_1030_sep_174_sep_0: X
v_sep_copy_1030_sep_174_sep_1_sep_186_sep_0: (X) & (X) & (X) & (X) & (X) & (X)
v_sep_copy_1030_sep_177_sep_0: X
v_sep_copy_1030_sep_177_sep_1_sep_180_sep_0: X
v_sep_copy_1030_sep_196_sep_0: (X) & (X) & (X) & (X) & (X) & (X)
v_sep_copy_1030_sep_196_sep_1_sep_217_sep_0: (X) & (X)
v_sep_copy_1030_sep_199_sep_0: (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X)
v_sep_copy_1030_sep_199_sep_1_sep_211_sep_0: (X) & (X) & (X) & (X)
v_sep_copy_1030_sep_202_sep_0: X
v_sep_copy_1030_sep_202_sep_1_sep_205_sep_0: (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X)
v_sep_fail_1178_sep_222_sep_0: (X) | (X)
.......
v_sep_copy_1030_sep_171_sep_0: (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X)
v_sep_copy_1030_sep_171_sep_1_sep_192_sep_0: (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X)
v_sep_copy_1030_sep_174_sep_0: X
v_sep_copy_1030_sep_174_sep_1_sep_186_sep_0: (X) & (X) & (X) & (X) & (X) & (X)
v_sep_copy_1030_sep_177_sep_0: X
v_sep_copy_1030_sep_177_sep_1_sep_180_sep_0: X
v_sep_copy_1030_sep_196_sep_0: (X) & (X) & (X) & (X) & (X) & (X)
v_sep_copy_1030_sep_196_sep_1_sep_217_sep_0: (X) & (X)
v_sep_copy_1030_sep_199_sep_0: (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X)
v_sep_copy_1030_sep_199_sep_1_sep_211_sep_0: (X) & (X) & (X) & (X)
v_sep_copy_1030_sep_202_sep_0: X
v_sep_copy_1030_sep_202_sep_1_sep_205_sep_0: (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X)
v_sep_fail_1178_sep_222_sep_0: (X) | (X)
.......................
v_sep_copy_1030_sep_171_sep_0: (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X)
v_sep_copy_1030_sep_171_sep_1_sep_192_sep_0: (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X)
v_sep_copy_1030_sep_174_sep_0: X
v_sep_copy_1030_sep_174_sep_1_sep_186_sep_0: (X) & (X) & (X) & (X) & (X) & (X)
v_sep_copy_1030_sep_177_sep_0: X
v_sep_copy_1030_sep_177_sep_1_sep_180_sep_0: X
v_sep_copy_1030_sep_196_sep_0: (X) & (X) & (X) & (X) & (X) & (X)
v_sep_copy_1030_sep_196_sep_1_sep_217_sep_0: (X) & (X)
v_sep_copy_1030_sep_199_sep_0: (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X)
v_sep_copy_1030_sep_199_sep_1_sep_211_sep_0: (X) & (X) & (X) & (X)
v_sep_copy_1030_sep_202_sep_0: X
v_sep_copy_1030_sep_202_sep_1_sep_205_sep_0: (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X)
v_sep_fail_1178_sep_222_sep_0: (X) | (X)
...........................................................Split conj [195] 6.094073
(Reconstrcut: 129 ************)
v_sep_copy_1030_sep_171_sep_0: (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X)
v_sep_copy_1030_sep_171_sep_1_sep_192_sep_0: (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X)
v_sep_copy_1030_sep_174_sep_0: X
v_sep_copy_1030_sep_174_sep_1_sep_186_sep_0: (X) & (X) & (X) & (X) & (X) & (X)
v_sep_copy_1030_sep_177_sep_0: X
v_sep_copy_1030_sep_177_sep_1_sep_180_sep_0: (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X)
v_sep_copy_1030_sep_196_sep_0: (X) & (X) & (X) & (X) & (X) & (X)
v_sep_copy_1030_sep_196_sep_1_sep_217_sep_0: (X) & (X)
v_sep_copy_1030_sep_199_sep_0: (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X)
v_sep_copy_1030_sep_199_sep_1_sep_211_sep_0: (X) & (X) & (X) & (X)
v_sep_copy_1030_sep_202_sep_0: X
v_sep_copy_1030_sep_202_sep_1_sep_205_sep_0: (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X)
v_sep_fail_1178_sep_222_sep_0: (X) | (X)
.......................................................................................................................................
v_sep_copy_1030_sep_171_sep_0: (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X)
v_sep_copy_1030_sep_171_sep_1_sep_192_sep_0: (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X)
v_sep_copy_1030_sep_174_sep_0: X
v_sep_copy_1030_sep_174_sep_1_sep_186_sep_0: (X) & (X) & (X) & (X) & (X) & (X)
v_sep_copy_1030_sep_177_sep_0: X
v_sep_copy_1030_sep_177_sep_1_sep_180_sep_0: (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X)
v_sep_copy_1030_sep_196_sep_0: (X) & (X) & (X) & (X) & (X) & (X)
v_sep_copy_1030_sep_196_sep_1_sep_217_sep_0: (X) & (X)
v_sep_copy_1030_sep_199_sep_0: (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X)
v_sep_copy_1030_sep_199_sep_1_sep_211_sep_0: (X) & (X) & (X) & (X)
v_sep_copy_1030_sep_202_sep_0: X
v_sep_copy_1030_sep_202_sep_1_sep_205_sep_0: (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X)
v_sep_fail_1178_sep_222_sep_0: (X) | (X)
.......
v_sep_copy_1030_sep_171_sep_0: (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X)
v_sep_copy_1030_sep_171_sep_1_sep_192_sep_0: (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X)
v_sep_copy_1030_sep_174_sep_0: X
v_sep_copy_1030_sep_174_sep_1_sep_186_sep_0: (X) & (X) & (X) & (X) & (X) & (X)
v_sep_copy_1030_sep_177_sep_0: X
v_sep_copy_1030_sep_177_sep_1_sep_180_sep_0: (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X)
v_sep_copy_1030_sep_196_sep_0: (X) & (X) & (X) & (X) & (X) & (X)
v_sep_copy_1030_sep_196_sep_1_sep_217_sep_0: (X) & (X)
v_sep_copy_1030_sep_199_sep_0: (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X)
v_sep_copy_1030_sep_199_sep_1_sep_211_sep_0: (X) & (X) & (X) & (X)
v_sep_copy_1030_sep_202_sep_0: X
v_sep_copy_1030_sep_202_sep_1_sep_205_sep_0: (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X)
v_sep_fail_1178_sep_222_sep_0: (X) | (X)
.......................
v_sep_copy_1030_sep_171_sep_0: (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X)
v_sep_copy_1030_sep_171_sep_1_sep_192_sep_0: (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X)
v_sep_copy_1030_sep_174_sep_0: X
v_sep_copy_1030_sep_174_sep_1_sep_186_sep_0: (X) & (X) & (X) & (X) & (X) & (X)
v_sep_copy_1030_sep_177_sep_0: X
v_sep_copy_1030_sep_177_sep_1_sep_180_sep_0: (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X)
v_sep_copy_1030_sep_196_sep_0: (X) & (X) & (X) & (X) & (X) & (X)
v_sep_copy_1030_sep_196_sep_1_sep_217_sep_0: (X) & (X)
v_sep_copy_1030_sep_199_sep_0: (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X)
v_sep_copy_1030_sep_199_sep_1_sep_211_sep_0: (X) & (X) & (X) & (X)
v_sep_copy_1030_sep_202_sep_0: X
v_sep_copy_1030_sep_202_sep_1_sep_205_sep_0: (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X)
v_sep_fail_1178_sep_222_sep_0: (X) | (X)
...........................................................
v_sep_copy_1030_sep_171_sep_0: (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X)
v_sep_copy_1030_sep_171_sep_1_sep_192_sep_0: (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X)
v_sep_copy_1030_sep_174_sep_0: X
v_sep_copy_1030_sep_174_sep_1_sep_186_sep_0: (X) & (X) & (X) & (X) & (X) & (X)
v_sep_copy_1030_sep_177_sep_0: X
v_sep_copy_1030_sep_177_sep_1_sep_180_sep_0: (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X)
v_sep_copy_1030_sep_196_sep_0: (X) & (X) & (X) & (X) & (X) & (X)
v_sep_copy_1030_sep_196_sep_1_sep_217_sep_0: (X) & (X)
v_sep_copy_1030_sep_199_sep_0: (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X)
v_sep_copy_1030_sep_199_sep_1_sep_211_sep_0: (X) & (X) & (X) & (X)
v_sep_copy_1030_sep_202_sep_0: X
v_sep_copy_1030_sep_202_sep_1_sep_205_sep_0: (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X)
v_sep_fail_1178_sep_222_sep_0: (X) | (X)
.............................................................................................................
v_sep_copy_1030_sep_171_sep_0: (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X)
v_sep_copy_1030_sep_171_sep_1_sep_192_sep_0: (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X)
v_sep_copy_1030_sep_174_sep_0: X
v_sep_copy_1030_sep_174_sep_1_sep_186_sep_0: (X) & (X) & (X) & (X) & (X) & (X)
v_sep_copy_1030_sep_177_sep_0: X
v_sep_copy_1030_sep_177_sep_1_sep_180_sep_0: (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X)
v_sep_copy_1030_sep_196_sep_0: (X) & (X) & (X) & (X) & (X) & (X)
v_sep_copy_1030_sep_196_sep_1_sep_217_sep_0: (X) & (X)
v_sep_copy_1030_sep_199_sep_0: (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X)
v_sep_copy_1030_sep_199_sep_1_sep_211_sep_0: (X) & (X) & (X) & (X)
v_sep_copy_1030_sep_202_sep_0: X
v_sep_copy_1030_sep_202_sep_1_sep_205_sep_0: (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X)
v_sep_fail_1178_sep_222_sep_0: (X) | (X)
...........................................................................................................................
v_sep_copy_1030_sep_171_sep_0: (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X)
v_sep_copy_1030_sep_171_sep_1_sep_192_sep_0: (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X)
v_sep_copy_1030_sep_174_sep_0: X
v_sep_copy_1030_sep_174_sep_1_sep_186_sep_0: (X) & (X) & (X) & (X) & (X) & (X)
v_sep_copy_1030_sep_177_sep_0: X
v_sep_copy_1030_sep_177_sep_1_sep_180_sep_0: (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X)
v_sep_copy_1030_sep_196_sep_0: (X) & (X) & (X) & (X) & (X) & (X)
v_sep_copy_1030_sep_196_sep_1_sep_217_sep_0: (X) & (X)
v_sep_copy_1030_sep_199_sep_0: (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X)
v_sep_copy_1030_sep_199_sep_1_sep_211_sep_0: (X) & (X) & (X) & (X)
v_sep_copy_1030_sep_202_sep_0: X
v_sep_copy_1030_sep_202_sep_1_sep_205_sep_0: (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X)
v_sep_fail_1178_sep_222_sep_0: (X) | (X)
...........................................................................................................................................
v_sep_copy_1030_sep_171_sep_0: (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X)
v_sep_copy_1030_sep_171_sep_1_sep_192_sep_0: (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X)
v_sep_copy_1030_sep_174_sep_0: X
v_sep_copy_1030_sep_174_sep_1_sep_186_sep_0: (X) & (X) & (X) & (X) & (X) & (X)
v_sep_copy_1030_sep_177_sep_0: X
v_sep_copy_1030_sep_177_sep_1_sep_180_sep_0: (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X)
v_sep_copy_1030_sep_196_sep_0: (X) & (X) & (X) & (X) & (X) & (X)
v_sep_copy_1030_sep_196_sep_1_sep_217_sep_0: (X) & (X)
v_sep_copy_1030_sep_199_sep_0: (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X)
v_sep_copy_1030_sep_199_sep_1_sep_211_sep_0: (X) & (X) & (X) & (X)
v_sep_copy_1030_sep_202_sep_0: X
v_sep_copy_1030_sep_202_sep_1_sep_205_sep_0: (X) & (X) & (X) & (X) & (X) & (X) & (X) & (X)
v_sep_fail_1178_sep_222_sep_0: (X) | (X)
...........................................................................................................................................(0=0) & (v_sep_fail_1178_sep_222_sep_0($2298)) -> 1=0.
(($2298-1=0) & ($2299-$2300<>0)) & (v_sep_copy_1030_sep_196_sep_1_sep_217_sep_0($2301,$2299)) & (v_sep_copy_1030_sep_171_sep_1_sep_192_sep_0($2300,$2301)) -> v_sep_fail_1178_sep_222_sep_0($2298).
(($2302<>0) & (-$2302+$2303+1=0) & ($2304-$2305+1=0)) & (v_sep_copy_1030_sep_199_sep_1_sep_211_sep_0($2303,$2304)) & (v_sep_copy_1030_sep_196_sep_0($2302)) -> v_sep_copy_1030_sep_196_sep_1_sep_217_sep_0($2302,$2305).
(($2306<>0) & (-$2306+$2307+1=0) & ($2308-$2309+1=0)) & (v_sep_copy_1030_sep_202_sep_1_sep_205_sep_0($2307,$2308)) & (v_sep_copy_1030_sep_199_sep_0($2306)) -> v_sep_copy_1030_sep_199_sep_1_sep_211_sep_0($2306,$2309).
(($2310=0) & ($2311=0)) & (v_sep_copy_1030_sep_202_sep_0($2310)) -> v_sep_copy_1030_sep_202_sep_1_sep_205_sep_0($2310,$2311).
(($2310+1<>0) & (-$2310+$2312-1=0)) & (v_sep_copy_1030_sep_199_sep_0($2312)) -> v_sep_copy_1030_sep_202_sep_0($2310).
(($2306+1<>0) & (-$2306+$2313-1=0)) & (v_sep_copy_1030_sep_196_sep_0($2313)) -> v_sep_copy_1030_sep_199_sep_0($2306).
(0=0) & (v_sep_copy_1030_sep_171_sep_1_sep_192_sep_0($2314,$2302)) -> v_sep_copy_1030_sep_196_sep_0($2302).
(($2315<>0) & (-$2315+$2316+1=0) & ($2317-$2318+1=0)) & (v_sep_copy_1030_sep_174_sep_1_sep_186_sep_0($2316,$2317)) & (v_sep_copy_1030_sep_171_sep_0($2315)) -> v_sep_copy_1030_sep_171_sep_1_sep_192_sep_0($2315,$2318).
(($2319<>0) & (-$2319+$2320+1=0) & ($2321-$2322+1=0)) & (v_sep_copy_1030_sep_177_sep_1_sep_180_sep_0($2320,$2321)) & (v_sep_copy_1030_sep_174_sep_0($2319)) -> v_sep_copy_1030_sep_174_sep_1_sep_186_sep_0($2319,$2322).
(($2323=0) & ($2324=0)) & (v_sep_copy_1030_sep_177_sep_0($2323)) -> v_sep_copy_1030_sep_177_sep_1_sep_180_sep_0($2323,$2324).
(($2323+1<>0) & (-$2323+$2325-1=0)) & (v_sep_copy_1030_sep_174_sep_0($2325)) -> v_sep_copy_1030_sep_177_sep_0($2323).
(($2319+1<>0) & (-$2319+$2326-1=0)) & (v_sep_copy_1030_sep_171_sep_0($2326)) -> v_sep_copy_1030_sep_174_sep_0($2319).
0=0 -> v_sep_copy_1030_sep_171_sep_0($2315).

          |- P[<copy_1030@171:0>](<copy_1030@171:0>:int)
        solution:
          P[<copy_1030@171:0>]($2364:int) = true
          P[<<copy_1030@171:1>@192:0>]($2335:int,$2337:int) = ($2335 = 2)
          P[<copy_1030@174:0>]($2372:int) = true
          P[<<copy_1030@174:1>@186:0>]($2359:int,$2361:int) = ($2359 = 1)
          P[<copy_1030@177:0>]($2375:int) = true
          P[<<copy_1030@177:1>@180:0>]($2367:int,$2369:int) = ($2367 = 0)
          P[<copy_1030@196:0>]($2345:int) = true
          P[<<copy_1030@196:1>@217:0>]($2330:int,$2332:int) = ($2332 = 2)
          P[<copy_1030@199:0>]($2353:int) = true
          P[<<copy_1030@199:1>@211:0>]($2340:int,$2342:int) = ($2342 = 1)
          P[<copy_1030@202:0>]($2356:int) = true
          P[<<copy_1030@202:1>@205:0>]($2348:int,$2350:int) = ($2350 = 0)
          P[<fail_1178@222:0>]($2327:bool) = false
        
      end HcSolver.solve_ub(30354)[4] (5.777121 sec.)
      begin HcSolver.check_validity(31272)[4]
        input:
          P[<fail_1178@222:0>](<fail_1178@222:0>:bool)|- bot
          
          P[<<copy_1030@171:1>@192:0>](<f_main_1175@219:0>:int,<f_main_1175@219:1>:int),
          P[<<copy_1030@196:1>@217:0>](<f_main_1175@219:1>:int,<f_main_1175@219:3>:int),
          ((<f_main_1175@219:3> <> <f_main_1175@219:0>) && <fail_1178@222:0>)
          |- P[<fail_1178@222:0>](<fail_1178@222:0>:bool)
          
          P[<copy_1030@196:0>](<copy_1030@196:0>:int),
          P[<<copy_1030@199:1>@211:0>]((-1 + <copy_1030@196:0>):int,(
                                       -1 + <<copy_1030@196:1>@217:0>):int), (
          <copy_1030@196:0> <> 0) |- P[<<copy_1030@196:1>@217:0>](<copy_1030@196:0>:int,
                                                                  <<copy_1030@196:1>@217:0>:int)
          
          P[<copy_1030@199:0>](<copy_1030@199:0>:int),
          P[<<copy_1030@202:1>@205:0>]((-1 + <copy_1030@199:0>):int,(
                                       -1 + <<copy_1030@199:1>@211:0>):int), (
          <copy_1030@199:0> <> 0) |- P[<<copy_1030@199:1>@211:0>](<copy_1030@199:0>:int,
                                                                  <<copy_1030@199:1>@211:0>:int)
          
          P[<copy_1030@202:0>](<copy_1030@202:0>:int), ((<copy_1030@202:0> = 0) && (<<copy_1030@202:1>@205:0> = 0))
          |- P[<<copy_1030@202:1>@205:0>](<copy_1030@202:0>:int,<<copy_1030@202:1>@205:0>:int)
          
          P[<copy_1030@199:0>]((1 + <copy_1030@202:0>):int), ((1 + <copy_1030@202:0>) <> 0)
          |- P[<copy_1030@202:0>](<copy_1030@202:0>:int)
          
          P[<copy_1030@196:0>]((1 + <copy_1030@199:0>):int), ((1 + <copy_1030@199:0>) <> 0)
          |- P[<copy_1030@199:0>](<copy_1030@199:0>:int)
          
          P[<<copy_1030@171:1>@192:0>](<f_main_1174@194:0>:int,<copy_1030@196:0>:int)|- P[<copy_1030@196:0>](
          <copy_1030@196:0>:int)
          
          P[<copy_1030@171:0>](<copy_1030@171:0>:int),
          P[<<copy_1030@174:1>@186:0>]((-1 + <copy_1030@171:0>):int,(
                                       -1 + <<copy_1030@171:1>@192:0>):int), (
          <copy_1030@171:0> <> 0) |- P[<<copy_1030@171:1>@192:0>](<copy_1030@171:0>:int,
                                                                  <<copy_1030@171:1>@192:0>:int)
          
          P[<copy_1030@174:0>](<copy_1030@174:0>:int),
          P[<<copy_1030@177:1>@180:0>]((-1 + <copy_1030@174:0>):int,(
                                       -1 + <<copy_1030@174:1>@186:0>):int), (
          <copy_1030@174:0> <> 0) |- P[<<copy_1030@174:1>@186:0>](<copy_1030@174:0>:int,
                                                                  <<copy_1030@174:1>@186:0>:int)
          
          P[<copy_1030@177:0>](<copy_1030@177:0>:int), ((<copy_1030@177:0> = 0) && (<<copy_1030@177:1>@180:0> = 0))
          |- P[<<copy_1030@177:1>@180:0>](<copy_1030@177:0>:int,<<copy_1030@177:1>@180:0>:int)
          
          P[<copy_1030@174:0>]((1 + <copy_1030@177:0>):int), ((1 + <copy_1030@177:0>) <> 0)
          |- P[<copy_1030@177:0>](<copy_1030@177:0>:int)
          
          P[<copy_1030@171:0>]((1 + <copy_1030@174:0>):int), ((1 + <copy_1030@174:0>) <> 0)
          |- P[<copy_1030@174:0>](<copy_1030@174:0>:int)
          
          |- P[<copy_1030@171:0>](<copy_1030@171:0>:int)
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        
      end HcSolver.check_validity(31272)[4] (0.005000 sec.)
      solution:
        P[<copy_1030@171:0>]($2364:int) = true
        P[<<copy_1030@171:1>@192:0>]($2335:int,$2337:int) = ($2335 = 2)
        P[<copy_1030@174:0>]($2372:int) = true
        P[<<copy_1030@174:1>@186:0>]($2359:int,$2361:int) = ($2359 = 1)
        P[<copy_1030@177:0>]($2375:int) = true
        P[<<copy_1030@177:1>@180:0>]($2367:int,$2369:int) = ($2367 = 0)
        P[<copy_1030@196:0>]($2345:int) = true
        P[<<copy_1030@196:1>@217:0>]($2330:int,$2332:int) = ($2332 = 2)
        P[<copy_1030@199:0>]($2353:int) = true
        P[<<copy_1030@199:1>@211:0>]($2340:int,$2342:int) = ($2342 = 1)
        P[<copy_1030@202:0>]($2356:int) = true
        P[<<copy_1030@202:1>@205:0>]($2348:int,$2350:int) = ($2350 = 0)
        P[<fail_1178@222:0>]($2327:bool) = false
    end YhornInterface.solve(30353)[3] (5.784120 sec.)
    
  end RefTypeInfer.infer_etrs(26798)[2] (7.041929 sec.)
  refinement types:
    main_1172: X
    f_1176: v1:int -> X
    main_1032: v1:int -> (v2:unit -> X) -> X
    copy_1030: v1:int -> (v2:{v2:int | (v1 = 2)} -> X) -> X
    copy_1030: v1:int -> (v2:{v2:int | (v1 = 1)} -> X) -> X
    copy_1030: v1:int -> (v2:{v2:int | (v1 = 0)} -> X) -> X
    f_copy_1173: v1:int -> (v2:int -> X) -> v4:int -> X
    f_copy_1173: v1:int -> (v2:int -> X) -> v4:int -> X
    f_main_1174: v1:int -> (v2:unit -> X) -> v4:int -> X
    copy_1030: v1:int -> (v2:{v2:int | (v2 = 2)} -> X) -> X
    copy_1030: v1:int -> (v2:{v2:int | (v2 = 1)} -> X) -> X
    copy_1030: v1:int -> (v2:{v2:int | (v2 = 0)} -> X) -> X
    f_copy_1173: v1:int -> (v2:int -> X) -> v4:int -> X
    f_copy_1173: v1:int -> (v2:int -> X) -> v4:int -> X
    f_main_1175: v1:int -> v2:int -> (v3:unit -> X) -> v5:int -> X
    fail_1178: v1:{v1:bool | false} -> (v2:unit -> X) -> X
    f_1177: var163:int -> var162:unit -> X
  abstraction types:
    main_1172: X
    f_1176: v1:int -> X
    main_1032: v1:int -> (v2:unit -> X) -> X
    copy_1030: var180:int ->
               (var181:int[var181 -> (var180 = 2),
                           var181 -> (var180 = 1),
                           var181 -> (var180 = 0),
                           var181 -> (var181 = 2),
                           var181 -> (var181 = 1),
                           var181 -> (var181 = 0)] -> X) -> X
    f_copy_1173: var194:int -> (var195:int -> X) -> var197:int -> X
    f_main_1174: v1:int -> (v2:unit -> X) -> v4:int -> X
    f_main_1175: v1:int -> v2:int -> (v3:unit -> X) -> v5:int -> X
    fail_1178: v1:bool -> (v2:unit -> X) -> X
    f_1177: var163:int -> var162:unit -> X
  
end AbsTypeInfer.refine(26797)[1] (7.045928 sec.)
DONE!

Prefix of spurious counter-example::
0; 0; 0; 1; 1; 0; 0; 0; 0; 1; 1; 0; 0; 0; 1

Program with abstraction types (CEGAR-cycle 5)::
Main: main_1172
  main_1172 -> (rand_int f_1176)
  copy_1030 x_1031 k_copy_1074 when (x_1031 = 0) -> (k_copy_1074 0)
  copy_1030 x_1031 k_copy_1074 when (not (x_1031 = 0)) -> (copy_1030 (x_1031 - 1) (f_copy_1173 x_1031 k_copy_1074))
  f_1176 x_1147 -> (main_1032 x_1147 (f_1177 x_1147))
  f_1177 x_1147 x_1144 -> end
  f_copy_1173 x_1031 k_copy_1074 x_1078 -> (k_copy_1074 (1 + x_1078))
  f_main_1174 n_1033 k_main_1106 x_1130 -> (copy_1030 x_1130 (f_main_1175 n_1033 x_1130 k_main_1106))
  f_main_1175 n_1033 x_1130 k_main_1106 x_1109 when (x_1109 = n_1033) -> (k_main_1106 ())
  f_main_1175 n_1033 x_1130 k_main_1106 x_1109 when (not (x_1109 = n_1033)) -> (fail_1178 true k_main_1106)
  fail_1178 b k -> {fail} => (k ())
  main_1032 n_1033 k_main_1106 -> (copy_1030 n_1033 (f_main_1174 n_1033 k_main_1106))
Types:
  main_1172 : X
  copy_1030 : (x_1:int[x_1 <= -4; x_1 <= -3; x_1 <= -2; x_1 <= -1; x_1 <= 0; x_1 >= 1] ->
               (x_3:int[x_3 = 2; x_1 = 2; 5*x_1 >= 4; x_1 >= 3; x_1 >= 6; 
                        x_1 >= 11; x_1 >= 24; x_3 <= 0; x_1 <= -1; x_3 >= 0; 
                        x_3 >= 1; x_3 = 1; x_1 = 1; x_3 = 0; x_1 = 0] -> X) -> X)
  fail_1178 : (x_1:bool[x_1] -> (unit -> X) -> X)
  
(5-1) Abstracting ... DONE!

(5-2) Checking HORS ... DONE!

Error trace::
  main_1172 ... --> 
  f_1176 ... --> 
  main_1032 ... --> 
  copy_1030 [2/2] ... --> 
  copy_1030 [2/2] ... --> 
  copy_1030 [1/2] ... --> 
  f_copy_1173 ... --> 
  f_copy_1173 ... --> 
  f_main_1174 ... --> 
  copy_1030 [2/2] ... --> 
  copy_1030 [1/2] ... --> 
  f_copy_1173 ... --> 
  f_main_1175 [2/2] ... --> 
  fail_1178 ... --> fail -->
  ERROR!

Spurious counter-example::
  0; 0; 0; 1; 1; 0; 0; 0; 0; 1; 0; 0; 1; 0

(5-3) Checking counter-example ... DONE!

(5-4) Discovering predicates ... 
begin AbsTypeInfer.refine(44775)[1]
  program:
    main_1172  | true = ((Random.int 0) f_1176)
    copy_1030 x_1031 k_copy_1074 | (x_1031 = 0) = (k_copy_1074 0)
    copy_1030 x_1031 k_copy_1074 | (not (x_1031 = 0)) = (copy_1030 (x_1031 - 1)
                                                                   (f_copy_1173 x_1031
                                                                    k_copy_1074))
    f_1176 x_1147 | true = (main_1032 x_1147
                                      (f_1177 x_1147))
    f_1177 x_1147 x_1144 | true = end
    f_copy_1173 x_1031 k_copy_1074 x_1078 | true = (k_copy_1074 (1 + x_1078))
    f_main_1174 n_1033 k_main_1106 x_1130 | true = (copy_1030 x_1130
                                                              (f_main_1175 n_1033
                                                                    x_1130
                                                                    k_main_1106))
    f_main_1175 n_1033 x_1130 k_main_1106 x_1109 | (x_1109 = n_1033) = (
    k_main_1106 ())
    f_main_1175 n_1033 x_1130 k_main_1106 x_1109 | (not (x_1109 = n_1033)) = (
    fail_1178 true
              k_main_1106)
    fail_1178 b k | true = (fail ())
    main_1032 n_1033 k_main_1106 | true = (copy_1030 n_1033
                                                     (f_main_1174 n_1033
                                                                  k_main_1106))
    main_1172:X
    copy_1030:int -> (int -> X) -> X
    f_1176:int -> X
    f_1177:int -> unit -> X
    f_copy_1173:int -> (int -> X) -> int -> X
    f_main_1174:int -> (unit -> X) -> int -> X
    f_main_1175:int -> int -> (unit -> X) -> int -> X
    fail_1178:bool -> (unit -> X) -> X
    main_1032:int -> (unit -> X) -> X
  inlined functions: f_1176,f_1177,f_copy_1173,f_main_1174,f_main_1175,main_1032
  counterexample: 0:0:0:1:1:0:0:0:0:1:0:0:1:0
  error traces:
    [true.nop(<f_1176@228:0> = var199)
     [true.(<main_1032@230:0> = <f_1176@228:0>)
      [true.(<copy_1030@232:0> = <main_1032@230:0>)
       [(not (<copy_1030@232:0> = 0)).(<copy_1030@235:0> = (<copy_1030@232:0> - 1))
        [(not (<copy_1030@235:0> = 0)).(<copy_1030@238:0> = (<copy_1030@235:0> - 1))
         [(<copy_1030@238:0> = 0).(<<copy_1030@238:1>@241:0> = 0)
          [true.((<f_copy_1173@243:0> = <copy_1030@235:0>) && (<f_copy_1173@243:2> = <<copy_1030@238:1>@241:0>))
           [true.(<<f_copy_1173@243:1>@245:0> = (1 + <f_copy_1173@243:2>))
            [true.(<<copy_1030@235:1>@247:0> = <<f_copy_1173@243:1>@245:0>)
             [true.((<f_copy_1173@249:0> = <copy_1030@232:0>) && (<f_copy_1173@249:2> = <<copy_1030@235:1>@247:0>))
              [true.(<<f_copy_1173@249:1>@251:0> = (1 + <f_copy_1173@249:2>))
               [true.(<<copy_1030@232:1>@253:0> = <<f_copy_1173@249:1>@251:0>)
                [true.((<f_main_1174@255:0> = <main_1032@230:0>) && (<f_main_1174@255:2> = <<copy_1030@232:1>@253:0>))
                 [true.(<copy_1030@257:0> = <f_main_1174@255:2>)
                  [(not (<copy_1030@257:0> = 0)).(<copy_1030@260:0> = (<copy_1030@257:0> - 1))
                   [(<copy_1030@260:0> = 0).(<<copy_1030@260:1>@263:0> = 0)
                    [true.
                     ((<f_copy_1173@265:0> = <copy_1030@257:0>) && (<f_copy_1173@265:2> = <<copy_1030@260:1>@263:0>))
                     [true.(<<f_copy_1173@265:1>@267:0> = (1 + <f_copy_1173@265:2>))
                      [true.(<<copy_1030@257:1>@269:0> = <<f_copy_1173@265:1>@267:0>)
                       [true.
                        ((<f_main_1175@271:0> = <f_main_1174@255:0>) &&
                         ((<f_main_1175@271:1> = <f_main_1174@255:2>) &&
                          (<f_main_1175@271:3> = <<copy_1030@257:1>@269:0>)))
                        [(not (<f_main_1175@271:3> = <f_main_1175@271:0>)).(<fail_1178@274:0> = true)[true.error
  begin RefTypeInfer.infer_etrs(44776)[2]
    horn clauses:
      P[<fail_1178@274:0>](<fail_1178@274:0>:bool)|- bot
      
      P[<f_main_1175@271:3>](<f_main_1175@271:0>:int,<f_main_1175@271:1>:int,<f_main_1175@271:3>:int),
      ((<f_main_1175@271:3> <> <f_main_1175@271:0>) && <fail_1178@274:0>)
      |- P[<fail_1178@274:0>](<fail_1178@274:0>:bool)
      
      P[<f_main_1174@255:2>](<f_main_1175@271:0>:int,<f_main_1175@271:1>:int),
      P[<<copy_1030@257:1>@269:0>](<f_main_1175@271:1>:int,<f_main_1175@271:3>:int)|- P[<f_main_1175@271:3>](
      <f_main_1175@271:0>:int,<f_main_1175@271:1>:int,<f_main_1175@271:3>:int)
      
      P[<copy_1030@257:0>](<copy_1030@257:0>:int),
      P[<<f_copy_1173@265:1>@267:0>](<copy_1030@257:0>:int,<<copy_1030@257:1>@269:0>:int), (
      <copy_1030@257:0> <> 0) |- P[<<copy_1030@257:1>@269:0>](<copy_1030@257:0>:int,
                                                              <<copy_1030@257:1>@269:0>:int)
      
      P[<f_copy_1173@265:2>](<f_copy_1173@265:0>:int,(-1 + <<f_copy_1173@265:1>@267:0>):int)|- P[<<f_copy_1173@265:1>@267:0>](
      <f_copy_1173@265:0>:int,<<f_copy_1173@265:1>@267:0>:int)
      
      P[<copy_1030@257:0>](<f_copy_1173@265:0>:int),
      P[<<copy_1030@260:1>@263:0>]((-1 + <f_copy_1173@265:0>):int,<f_copy_1173@265:2>:int), (
      <f_copy_1173@265:0> <> 0) |- P[<f_copy_1173@265:2>](<f_copy_1173@265:0>:int,
                                                          <f_copy_1173@265:2>:int)
      
      P[<copy_1030@260:0>](<copy_1030@260:0>:int), ((<copy_1030@260:0> = 0) && (<<copy_1030@260:1>@263:0> = 0))
      |- P[<<copy_1030@260:1>@263:0>](<copy_1030@260:0>:int,<<copy_1030@260:1>@263:0>:int)
      
      P[<copy_1030@257:0>]((1 + <copy_1030@260:0>):int), ((1 + <copy_1030@260:0>) <> 0)
      |- P[<copy_1030@260:0>](<copy_1030@260:0>:int)
      
      P[<f_main_1174@255:2>](<f_main_1174@255:0>:int,<copy_1030@257:0>:int)|- P[<copy_1030@257:0>](
      <copy_1030@257:0>:int)
      
      P[<main_1032@230:0>](<f_main_1174@255:0>:int),
      P[<<copy_1030@232:1>@253:0>](<f_main_1174@255:0>:int,<f_main_1174@255:2>:int)|- P[<f_main_1174@255:2>](
      <f_main_1174@255:0>:int,<f_main_1174@255:2>:int)
      
      P[<copy_1030@232:0>](<copy_1030@232:0>:int),
      P[<<f_copy_1173@249:1>@251:0>](<copy_1030@232:0>:int,<<copy_1030@232:1>@253:0>:int), (
      <copy_1030@232:0> <> 0) |- P[<<copy_1030@232:1>@253:0>](<copy_1030@232:0>:int,
                                                              <<copy_1030@232:1>@253:0>:int)
      
      P[<f_copy_1173@249:2>](<f_copy_1173@249:0>:int,(-1 + <<f_copy_1173@249:1>@251:0>):int)|- P[<<f_copy_1173@249:1>@251:0>](
      <f_copy_1173@249:0>:int,<<f_copy_1173@249:1>@251:0>:int)
      
      P[<copy_1030@232:0>](<f_copy_1173@249:0>:int),
      P[<<copy_1030@235:1>@247:0>]((-1 + <f_copy_1173@249:0>):int,<f_copy_1173@249:2>:int), (
      <f_copy_1173@249:0> <> 0) |- P[<f_copy_1173@249:2>](<f_copy_1173@249:0>:int,
                                                          <f_copy_1173@249:2>:int)
      
      P[<copy_1030@235:0>](<copy_1030@235:0>:int),
      P[<<f_copy_1173@243:1>@245:0>](<copy_1030@235:0>:int,<<copy_1030@235:1>@247:0>:int), (
      <copy_1030@235:0> <> 0) |- P[<<copy_1030@235:1>@247:0>](<copy_1030@235:0>:int,
                                                              <<copy_1030@235:1>@247:0>:int)
      
      P[<f_copy_1173@243:2>](<f_copy_1173@243:0>:int,(-1 + <<f_copy_1173@243:1>@245:0>):int)|- P[<<f_copy_1173@243:1>@245:0>](
      <f_copy_1173@243:0>:int,<<f_copy_1173@243:1>@245:0>:int)
      
      P[<copy_1030@235:0>](<f_copy_1173@243:0>:int),
      P[<<copy_1030@238:1>@241:0>]((-1 + <f_copy_1173@243:0>):int,<f_copy_1173@243:2>:int), (
      <f_copy_1173@243:0> <> 0) |- P[<f_copy_1173@243:2>](<f_copy_1173@243:0>:int,
                                                          <f_copy_1173@243:2>:int)
      
      P[<copy_1030@238:0>](<copy_1030@238:0>:int), ((<copy_1030@238:0> = 0) && (<<copy_1030@238:1>@241:0> = 0))
      |- P[<<copy_1030@238:1>@241:0>](<copy_1030@238:0>:int,<<copy_1030@238:1>@241:0>:int)
      
      P[<copy_1030@235:0>]((1 + <copy_1030@238:0>):int), ((1 + <copy_1030@238:0>) <> 0)
      |- P[<copy_1030@238:0>](<copy_1030@238:0>:int)
      
      P[<copy_1030@232:0>]((1 + <copy_1030@235:0>):int), ((1 + <copy_1030@235:0>) <> 0)
      |- P[<copy_1030@235:0>](<copy_1030@235:0>:int)
      
      P[<main_1032@230:0>](<copy_1030@232:0>:int)|- P[<copy_1030@232:0>](<copy_1030@232:0>:int)
      
      P[<f_1176@228:0>](<main_1032@230:0>:int)|- P[<main_1032@230:0>](<main_1032@230:0>:int)
      
      |- P[<f_1176@228:0>](<f_1176@228:0>:int)
    call trees:
      <main_1172@225>
        <f_1176@228>
          <main_1032@230>
            <copy_1030@232>
              <copy_1030@235>
                <copy_1030@238>
                </<copy_1030@238:1>@241>
                <f_copy_1173@243>
                </<f_copy_1173@243:1>@245>
              </<copy_1030@235:1>@247>
              <f_copy_1173@249>
              </<f_copy_1173@249:1>@251>
            </<copy_1030@232:1>@253>
            <f_main_1174@255>
              <copy_1030@257>
                <copy_1030@260>
                </<copy_1030@260:1>@263>
                <f_copy_1173@265>
                </<f_copy_1173@265:1>@267>
              </<copy_1030@257:1>@269>
              <f_main_1175@271>
                <fail_1178@274>
    inlined horn clauses:
      P[<fail_1178@274:0>](<fail_1178@274:0>:bool)|- bot
      
      P[<<copy_1030@232:1>@253:0>](<f_main_1175@271:0>:int,<f_main_1175@271:1>:int),
      P[<<copy_1030@257:1>@269:0>](<f_main_1175@271:1>:int,<f_main_1175@271:3>:int),
      ((<f_main_1175@271:3> <> <f_main_1175@271:0>) && <fail_1178@274:0>)
      |- P[<fail_1178@274:0>](<fail_1178@274:0>:bool)
      
      P[<copy_1030@257:0>](<copy_1030@257:0>:int),
      P[<<copy_1030@260:1>@263:0>]((-1 + <copy_1030@257:0>):int,(-1 + <<copy_1030@257:1>@269:0>):int),
      (<copy_1030@257:0> <> 0) |- P[<<copy_1030@257:1>@269:0>](<copy_1030@257:0>:int,
                                                               <<copy_1030@257:1>@269:0>:int)
      
      P[<copy_1030@260:0>](<copy_1030@260:0>:int), ((<copy_1030@260:0> = 0) && (<<copy_1030@260:1>@263:0> = 0))
      |- P[<<copy_1030@260:1>@263:0>](<copy_1030@260:0>:int,<<copy_1030@260:1>@263:0>:int)
      
      P[<copy_1030@257:0>]((1 + <copy_1030@260:0>):int), ((1 + <copy_1030@260:0>) <> 0)
      |- P[<copy_1030@260:0>](<copy_1030@260:0>:int)
      
      P[<<copy_1030@232:1>@253:0>](<f_main_1174@255:0>:int,<copy_1030@257:0>:int)|- P[<copy_1030@257:0>](
      <copy_1030@257:0>:int)
      
      P[<copy_1030@232:0>](<copy_1030@232:0>:int),
      P[<<copy_1030@235:1>@247:0>]((-1 + <copy_1030@232:0>):int,(-1 + <<copy_1030@232:1>@253:0>):int),
      (<copy_1030@232:0> <> 0) |- P[<<copy_1030@232:1>@253:0>](<copy_1030@232:0>:int,
                                                               <<copy_1030@232:1>@253:0>:int)
      
      P[<copy_1030@235:0>](<copy_1030@235:0>:int),
      P[<<copy_1030@238:1>@241:0>]((-1 + <copy_1030@235:0>):int,(-1 + <<copy_1030@235:1>@247:0>):int),
      (<copy_1030@235:0> <> 0) |- P[<<copy_1030@235:1>@247:0>](<copy_1030@235:0>:int,
                                                               <<copy_1030@235:1>@247:0>:int)
      
      P[<copy_1030@238:0>](<copy_1030@238:0>:int), ((<copy_1030@238:0> = 0) && (<<copy_1030@238:1>@241:0> = 0))
      |- P[<<copy_1030@238:1>@241:0>](<copy_1030@238:0>:int,<<copy_1030@238:1>@241:0>:int)
      
      P[<copy_1030@235:0>]((1 + <copy_1030@238:0>):int), ((1 + <copy_1030@238:0>) <> 0)
      |- P[<copy_1030@238:0>](<copy_1030@238:0>:int)
      
      P[<copy_1030@232:0>]((1 + <copy_1030@235:0>):int), ((1 + <copy_1030@235:0>) <> 0)
      |- P[<copy_1030@235:0>](<copy_1030@235:0>:int)
      
      |- P[<copy_1030@232:0>](<copy_1030@232:0>:int)
    begin ParamSubstInfer.infer(47391)[3]
      
    end ParamSubstInfer.infer(47391)[3] (1.445780 sec.)
    inferred extra parameters:
      
    begin RefTypeInfer.elim_coeffs(47393)[3]
      
    end RefTypeInfer.elim_coeffs(47393)[3] (0.002000 sec.)
    begin YhornInterface.solve(47764)[3]
      begin HcSolver.solve_ub(47765)[4]
        encoded:
          P[<fail_1178@274:0>](<fail_1178@274:0>:int)|- bot
          
          P[<<copy_1030@232:1>@253:0>](<f_main_1175@271:0>:int,<f_main_1175@271:1>:int),
          P[<<copy_1030@257:1>@269:0>](<f_main_1175@271:1>:int,<f_main_1175@271:3>:int),
          ((<f_main_1175@271:3> <> <f_main_1175@271:0>) && (<fail_1178@274:0> = 1))
          |- P[<fail_1178@274:0>](<fail_1178@274:0>:int)
          
          P[<copy_1030@257:0>](<copy_1030@257:0>:int),
          P[<<copy_1030@260:1>@263:0>]((-1 + <copy_1030@257:0>):int,(
                                       -1 + <<copy_1030@257:1>@269:0>):int), (
          <copy_1030@257:0> <> 0) |- P[<<copy_1030@257:1>@269:0>](<copy_1030@257:0>:int,
                                                                  <<copy_1030@257:1>@269:0>:int)
          
          P[<copy_1030@260:0>](<copy_1030@260:0>:int), ((<copy_1030@260:0> = 0) && (<<copy_1030@260:1>@263:0> = 0))
          |- P[<<copy_1030@260:1>@263:0>](<copy_1030@260:0>:int,<<copy_1030@260:1>@263:0>:int)
          
          P[<copy_1030@257:0>]((1 + <copy_1030@260:0>):int), ((1 + <copy_1030@260:0>) <> 0)
          |- P[<copy_1030@260:0>](<copy_1030@260:0>:int)
          
          P[<<copy_1030@232:1>@253:0>](<f_main_1174@255:0>:int,<copy_1030@257:0>:int)|- P[<copy_1030@257:0>](
          <copy_1030@257:0>:int)
          
          P[<copy_1030@232:0>](<copy_1030@232:0>:int),
          P[<<copy_1030@235:1>@247:0>]((-1 + <copy_1030@232:0>):int,(
                                       -1 + <<copy_1030@232:1>@253:0>):int), (
          <copy_1030@232:0> <> 0) |- P[<<copy_1030@232:1>@253:0>](<copy_1030@232:0>:int,
                                                                  <<copy_1030@232:1>@253:0>:int)
          
          P[<copy_1030@235:0>](<copy_1030@235:0>:int),
          P[<<copy_1030@238:1>@241:0>]((-1 + <copy_1030@235:0>):int,(
                                       -1 + <<copy_1030@235:1>@247:0>):int), (
          <copy_1030@235:0> <> 0) |- P[<<copy_1030@235:1>@247:0>](<copy_1030@235:0>:int,
                                                                  <<copy_1030@235:1>@247:0>:int)
          
          P[<copy_1030@238:0>](<copy_1030@238:0>:int), ((<copy_1030@238:0> = 0) && (<<copy_1030@238:1>@241:0> = 0))
          |- P[<<copy_1030@238:1>@241:0>](<copy_1030@238:0>:int,<<copy_1030@238:1>@241:0>:int)
          
          P[<copy_1030@235:0>]((1 + <copy_1030@238:0>):int), ((1 + <copy_1030@238:0>) <> 0)
          |- P[<copy_1030@238:0>](<copy_1030@238:0>:int)
          
          P[<copy_1030@232:0>]((1 + <copy_1030@235:0>):int), ((1 + <copy_1030@235:0>) <> 0)
          |- P[<copy_1030@235:0>](<copy_1030@235:0>:int)
          
          |- P[<copy_1030@232:0>](<copy_1030@232:0>:int)
        input to Yhorn:
          P[<fail_1178@274:0>](<fail_1178@274:0>:int)|- bot
          
          P[<<copy_1030@232:1>@253:0>](<f_main_1175@271:0>:int,<f_main_1175@271:1>:int),
          P[<<copy_1030@257:1>@269:0>](<f_main_1175@271:1>:int,<f_main_1175@271:3>:int),
          ((<f_main_1175@271:3> <> <f_main_1175@271:0>) && (<fail_1178@274:0> = 1))
          |- P[<fail_1178@274:0>](<fail_1178@274:0>:int)
          
          P[<copy_1030@257:0>](<copy_1030@257:0>:int),
          P[<<copy_1030@260:1>@263:0>](var200:int,var201:int),
          (((1 + var201) = <<copy_1030@257:1>@269:0>) &&
           (((1 + var200) = <copy_1030@257:0>) && (<copy_1030@257:0> <> 0)))
          |- P[<<copy_1030@257:1>@269:0>](<copy_1030@257:0>:int,<<copy_1030@257:1>@269:0>:int)
          
          P[<copy_1030@260:0>](<copy_1030@260:0>:int), ((<<copy_1030@260:1>@263:0> = 0) && (<copy_1030@260:0> = 0))
          |- P[<<copy_1030@260:1>@263:0>](<copy_1030@260:0>:int,<<copy_1030@260:1>@263:0>:int)
          
          P[<copy_1030@257:0>](var202:int), ((var202 = (1 + <copy_1030@260:0>)) && ((1 + <copy_1030@260:0>) <> 0))
          |- P[<copy_1030@260:0>](<copy_1030@260:0>:int)
          
          P[<<copy_1030@232:1>@253:0>](<f_main_1174@255:0>:int,<copy_1030@257:0>:int)|- P[<copy_1030@257:0>](
          <copy_1030@257:0>:int)
          
          P[<copy_1030@232:0>](<copy_1030@232:0>:int),
          P[<<copy_1030@235:1>@247:0>](var203:int,var204:int),
          (((1 + var204) = <<copy_1030@232:1>@253:0>) &&
           (((1 + var203) = <copy_1030@232:0>) && (<copy_1030@232:0> <> 0)))
          |- P[<<copy_1030@232:1>@253:0>](<copy_1030@232:0>:int,<<copy_1030@232:1>@253:0>:int)
          
          P[<copy_1030@235:0>](<copy_1030@235:0>:int),
          P[<<copy_1030@238:1>@241:0>](var205:int,var206:int),
          (((1 + var206) = <<copy_1030@235:1>@247:0>) &&
           (((1 + var205) = <copy_1030@235:0>) && (<copy_1030@235:0> <> 0)))
          |- P[<<copy_1030@235:1>@247:0>](<copy_1030@235:0>:int,<<copy_1030@235:1>@247:0>:int)
          
          P[<copy_1030@238:0>](<copy_1030@238:0>:int), ((<<copy_1030@238:1>@241:0> = 0) && (<copy_1030@238:0> = 0))
          |- P[<<copy_1030@238:1>@241:0>](<copy_1030@238:0>:int,<<copy_1030@238:1>@241:0>:int)
          
          P[<copy_1030@235:0>](var207:int), ((var207 = (1 + <copy_1030@238:0>)) && ((1 + <copy_1030@238:0>) <> 0))
          |- P[<copy_1030@238:0>](<copy_1030@238:0>:int)
          
          P[<copy_1030@232:0>](var208:int), ((var208 = (1 + <copy_1030@235:0>)) && ((1 + <copy_1030@235:0>) <> 0))
          |- P[<copy_1030@235:0>](<copy_1030@235:0>:int)
          Yhorn (Wed Sep 25 10:52:05 JST 2013)


(0=0) & (v_sep_fail_1178_sep_274_sep_0($8219)) -> 1=0.
(($8219-1=0) & ($8220-$8221<>0)) & (v_sep_copy_1030_sep_257_sep_1_sep_269_sep_0($8222,$8220)) & (v_sep_copy_1030_sep_232_sep_1_sep_253_sep_0($8221,$8222)) -> v_sep_fail_1178_sep_274_sep_0($8219).
(($8223<>0) & (-$8223+$8224+1=0) & ($8225-$8226+1=0)) & (v_sep_copy_1030_sep_260_sep_1_sep_263_sep_0($8224,$8225)) & (v_sep_copy_1030_sep_257_sep_0($8223)) -> v_sep_copy_1030_sep_257_sep_1_sep_269_sep_0($8223,$8226).
(($8227=0) & ($8228=0)) & (v_sep_copy_1030_sep_260_sep_0($8227)) -> v_sep_copy_1030_sep_260_sep_1_sep_263_sep_0($8227,$8228).
(($8227+1<>0) & (-$8227+$8229-1=0)) & (v_sep_copy_1030_sep_257_sep_0($8229)) -> v_sep_copy_1030_sep_260_sep_0($8227).
(0=0) & (v_sep_copy_1030_sep_232_sep_1_sep_253_sep_0($8230,$8223)) -> v_sep_copy_1030_sep_257_sep_0($8223).
(($8231<>0) & (-$8231+$8232+1=0) & ($8233-$8234+1=0)) & (v_sep_copy_1030_sep_235_sep_1_sep_247_sep_0($8232,$8233)) & (v_sep_copy_1030_sep_232_sep_0($8231)) -> v_sep_copy_1030_sep_232_sep_1_sep_253_sep_0($8231,$8234).
(($8235<>0) & (-$8235+$8236+1=0) & ($8237-$8238+1=0)) & (v_sep_copy_1030_sep_238_sep_1_sep_241_sep_0($8236,$8237)) & (v_sep_copy_1030_sep_235_sep_0($8235)) -> v_sep_copy_1030_sep_235_sep_1_sep_247_sep_0($8235,$8238).
(($8239=0) & ($8240=0)) & (v_sep_copy_1030_sep_238_sep_0($8239)) -> v_sep_copy_1030_sep_238_sep_1_sep_241_sep_0($8239,$8240).
(($8239+1<>0) & (-$8239+$8241-1=0)) & (v_sep_copy_1030_sep_235_sep_0($8241)) -> v_sep_copy_1030_sep_238_sep_0($8239).
(($8235+1<>0) & (-$8235+$8242-1=0)) & (v_sep_copy_1030_sep_232_sep_0($8242)) -> v_sep_copy_1030_sep_235_sep_0($8235).
0=0 -> v_sep_copy_1030_sep_232_sep_0($8231).


v_sep_copy_1030_sep_232_sep_0: X
v_sep_copy_1030_sep_232_sep_1_sep_253_sep_0: X
v_sep_copy_1030_sep_235_sep_0: X
v_sep_copy_1030_sep_235_sep_1_sep_247_sep_0: X
v_sep_copy_1030_sep_238_sep_0: X
v_sep_copy_1030_sep_238_sep_1_sep_241_sep_0: X
v_sep_copy_1030_sep_257_sep_0: X
v_sep_copy_1030_sep_257_sep_1_sep_269_sep_0: X
v_sep_copy_1030_sep_260_sep_0: X
v_sep_copy_1030_sep_260_sep_1_sep_263_sep_0: X
v_sep_fail_1178_sep_274_sep_0: X
...........................
v_sep_copy_1030_sep_232_sep_0: X
v_sep_copy_1030_sep_232_sep_1_sep_253_sep_0: X
v_sep_copy_1030_sep_235_sep_0: X
v_sep_copy_1030_sep_235_sep_1_sep_247_sep_0: X
v_sep_copy_1030_sep_238_sep_0: X
v_sep_copy_1030_sep_238_sep_1_sep_241_sep_0: X
v_sep_copy_1030_sep_257_sep_0: X
v_sep_copy_1030_sep_257_sep_1_sep_269_sep_0: X
v_sep_copy_1030_sep_260_sep_0: X
v_sep_copy_1030_sep_260_sep_1_sep_263_sep_0: X
v_sep_fail_1178_sep_274_sep_0: X
......
v_sep_copy_1030_sep_232_sep_0: X
v_sep_copy_1030_sep_232_sep_1_sep_253_sep_0: X
v_sep_copy_1030_sep_235_sep_0: X
v_sep_copy_1030_sep_235_sep_1_sep_247_sep_0: X
v_sep_copy_1030_sep_238_sep_0: X
v_sep_copy_1030_sep_238_sep_1_sep_241_sep_0: X
v_sep_copy_1030_sep_257_sep_0: X
v_sep_copy_1030_sep_257_sep_1_sep_269_sep_0: X
v_sep_copy_1030_sep_260_sep_0: X
v_sep_copy_1030_sep_260_sep_1_sep_263_sep_0: X
v_sep_fail_1178_sep_274_sep_0: X
..............
v_sep_copy_1030_sep_232_sep_0: X
v_sep_copy_1030_sep_232_sep_1_sep_253_sep_0: X
v_sep_copy_1030_sep_235_sep_0: X
v_sep_copy_1030_sep_235_sep_1_sep_247_sep_0: X
v_sep_copy_1030_sep_238_sep_0: X
v_sep_copy_1030_sep_238_sep_1_sep_241_sep_0: X
v_sep_copy_1030_sep_257_sep_0: X
v_sep_copy_1030_sep_257_sep_1_sep_269_sep_0: X
v_sep_copy_1030_sep_260_sep_0: X
v_sep_copy_1030_sep_260_sep_1_sep_263_sep_0: X
v_sep_fail_1178_sep_274_sep_0: X
....................
v_sep_copy_1030_sep_232_sep_0: X
v_sep_copy_1030_sep_232_sep_1_sep_253_sep_0: X
v_sep_copy_1030_sep_235_sep_0: X
v_sep_copy_1030_sep_235_sep_1_sep_247_sep_0: X
v_sep_copy_1030_sep_238_sep_0: X
v_sep_copy_1030_sep_238_sep_1_sep_241_sep_0: X
v_sep_copy_1030_sep_257_sep_0: X
v_sep_copy_1030_sep_257_sep_1_sep_269_sep_0: X
v_sep_copy_1030_sep_260_sep_0: X
v_sep_copy_1030_sep_260_sep_1_sep_263_sep_0: X
v_sep_fail_1178_sep_274_sep_0: X
.........................
v_sep_copy_1030_sep_232_sep_0: X
v_sep_copy_1030_sep_232_sep_1_sep_253_sep_0: X
v_sep_copy_1030_sep_235_sep_0: X
v_sep_copy_1030_sep_235_sep_1_sep_247_sep_0: X
v_sep_copy_1030_sep_238_sep_0: X
v_sep_copy_1030_sep_238_sep_1_sep_241_sep_0: X
v_sep_copy_1030_sep_257_sep_0: X
v_sep_copy_1030_sep_257_sep_1_sep_269_sep_0: X
v_sep_copy_1030_sep_260_sep_0: X
v_sep_copy_1030_sep_260_sep_1_sep_263_sep_0: X
v_sep_fail_1178_sep_274_sep_0: X
...........................(0=0) & (v_sep_fail_1178_sep_274_sep_0($8219)) -> 1=0.
(($8219-1=0) & ($8220-$8221<>0)) & (v_sep_copy_1030_sep_257_sep_1_sep_269_sep_0($8222,$8220)) & (v_sep_copy_1030_sep_232_sep_1_sep_253_sep_0($8221,$8222)) -> v_sep_fail_1178_sep_274_sep_0($8219).
(($8223<>0) & (-$8223+$8224+1=0) & ($8225-$8226+1=0)) & (v_sep_copy_1030_sep_260_sep_1_sep_263_sep_0($8224,$8225)) & (v_sep_copy_1030_sep_257_sep_0($8223)) -> v_sep_copy_1030_sep_257_sep_1_sep_269_sep_0($8223,$8226).
(($8227=0) & ($8228=0)) & (v_sep_copy_1030_sep_260_sep_0($8227)) -> v_sep_copy_1030_sep_260_sep_1_sep_263_sep_0($8227,$8228).
(($8227+1<>0) & (-$8227+$8229-1=0)) & (v_sep_copy_1030_sep_257_sep_0($8229)) -> v_sep_copy_1030_sep_260_sep_0($8227).
(0=0) & (v_sep_copy_1030_sep_232_sep_1_sep_253_sep_0($8230,$8223)) -> v_sep_copy_1030_sep_257_sep_0($8223).
(($8231<>0) & (-$8231+$8232+1=0) & ($8233-$8234+1=0)) & (v_sep_copy_1030_sep_235_sep_1_sep_247_sep_0($8232,$8233)) & (v_sep_copy_1030_sep_232_sep_0($8231)) -> v_sep_copy_1030_sep_232_sep_1_sep_253_sep_0($8231,$8234).
(($8235<>0) & (-$8235+$8236+1=0) & ($8237-$8238+1=0)) & (v_sep_copy_1030_sep_238_sep_1_sep_241_sep_0($8236,$8237)) & (v_sep_copy_1030_sep_235_sep_0($8235)) -> v_sep_copy_1030_sep_235_sep_1_sep_247_sep_0($8235,$8238).
(($8239=0) & ($8240=0)) & (v_sep_copy_1030_sep_238_sep_0($8239)) -> v_sep_copy_1030_sep_238_sep_1_sep_241_sep_0($8239,$8240).
(($8239+1<>0) & (-$8239+$8241-1=0)) & (v_sep_copy_1030_sep_235_sep_0($8241)) -> v_sep_copy_1030_sep_238_sep_0($8239).
(($8235+1<>0) & (-$8235+$8242-1=0)) & (v_sep_copy_1030_sep_232_sep_0($8242)) -> v_sep_copy_1030_sep_235_sep_0($8235).
0=0 -> v_sep_copy_1030_sep_232_sep_0($8231).

          |- P[<copy_1030@232:0>](<copy_1030@232:0>:int)
        solution:
          P[<copy_1030@232:0>]($8272:int) = true
          P[<<copy_1030@232:1>@253:0>]($8251:int,$8253:int) = (2 <= $8253)
          P[<copy_1030@235:0>]($8280:int) = true
          P[<<copy_1030@235:1>@247:0>]($8267:int,$8269:int) = (1 <= $8269)
          P[<copy_1030@238:0>]($8283:int) = true
          P[<<copy_1030@238:1>@241:0>]($8275:int,$8277:int) = (0 <= $8277)
          P[<copy_1030@257:0>]($8261:int) = (2 <= $8261)
          P[<<copy_1030@257:1>@269:0>]($8246:int,$8248:int) = ((1 + $8246) <= 0)
          P[<copy_1030@260:0>]($8264:int) = (1 <= $8264)
          P[<<copy_1030@260:1>@263:0>]($8256:int,$8258:int) = ((1 + (2 * $8256)) <= 0)
          P[<fail_1178@274:0>]($8243:bool) = false
        
      end HcSolver.solve_ub(47765)[4] (0.448932 sec.)
      begin HcSolver.check_validity(48367)[4]
        input:
          P[<fail_1178@274:0>](<fail_1178@274:0>:bool)|- bot
          
          P[<<copy_1030@232:1>@253:0>](<f_main_1175@271:0>:int,<f_main_1175@271:1>:int),
          P[<<copy_1030@257:1>@269:0>](<f_main_1175@271:1>:int,<f_main_1175@271:3>:int),
          ((<f_main_1175@271:3> <> <f_main_1175@271:0>) && <fail_1178@274:0>)
          |- P[<fail_1178@274:0>](<fail_1178@274:0>:bool)
          
          P[<copy_1030@257:0>](<copy_1030@257:0>:int),
          P[<<copy_1030@260:1>@263:0>]((-1 + <copy_1030@257:0>):int,(
                                       -1 + <<copy_1030@257:1>@269:0>):int), (
          <copy_1030@257:0> <> 0) |- P[<<copy_1030@257:1>@269:0>](<copy_1030@257:0>:int,
                                                                  <<copy_1030@257:1>@269:0>:int)
          
          P[<copy_1030@260:0>](<copy_1030@260:0>:int), ((<copy_1030@260:0> = 0) && (<<copy_1030@260:1>@263:0> = 0))
          |- P[<<copy_1030@260:1>@263:0>](<copy_1030@260:0>:int,<<copy_1030@260:1>@263:0>:int)
          
          P[<copy_1030@257:0>]((1 + <copy_1030@260:0>):int), ((1 + <copy_1030@260:0>) <> 0)
          |- P[<copy_1030@260:0>](<copy_1030@260:0>:int)
          
          P[<<copy_1030@232:1>@253:0>](<f_main_1174@255:0>:int,<copy_1030@257:0>:int)|- P[<copy_1030@257:0>](
          <copy_1030@257:0>:int)
          
          P[<copy_1030@232:0>](<copy_1030@232:0>:int),
          P[<<copy_1030@235:1>@247:0>]((-1 + <copy_1030@232:0>):int,(
                                       -1 + <<copy_1030@232:1>@253:0>):int), (
          <copy_1030@232:0> <> 0) |- P[<<copy_1030@232:1>@253:0>](<copy_1030@232:0>:int,
                                                                  <<copy_1030@232:1>@253:0>:int)
          
          P[<copy_1030@235:0>](<copy_1030@235:0>:int),
          P[<<copy_1030@238:1>@241:0>]((-1 + <copy_1030@235:0>):int,(
                                       -1 + <<copy_1030@235:1>@247:0>):int), (
          <copy_1030@235:0> <> 0) |- P[<<copy_1030@235:1>@247:0>](<copy_1030@235:0>:int,
                                                                  <<copy_1030@235:1>@247:0>:int)
          
          P[<copy_1030@238:0>](<copy_1030@238:0>:int), ((<copy_1030@238:0> = 0) && (<<copy_1030@238:1>@241:0> = 0))
          |- P[<<copy_1030@238:1>@241:0>](<copy_1030@238:0>:int,<<copy_1030@238:1>@241:0>:int)
          
          P[<copy_1030@235:0>]((1 + <copy_1030@238:0>):int), ((1 + <copy_1030@238:0>) <> 0)
          |- P[<copy_1030@238:0>](<copy_1030@238:0>:int)
          
          P[<copy_1030@232:0>]((1 + <copy_1030@235:0>):int), ((1 + <copy_1030@235:0>) <> 0)
          |- P[<copy_1030@235:0>](<copy_1030@235:0>:int)
          
          |- P[<copy_1030@232:0>](<copy_1030@232:0>:int)
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        
      end HcSolver.check_validity(48367)[4] (0.020996 sec.)
      solution:
        P[<copy_1030@232:0>]($8272:int) = true
        P[<<copy_1030@232:1>@253:0>]($8251:int,$8253:int) = (2 <= $8253)
        P[<copy_1030@235:0>]($8280:int) = true
        P[<<copy_1030@235:1>@247:0>]($8267:int,$8269:int) = (1 <= $8269)
        P[<copy_1030@238:0>]($8283:int) = true
        P[<<copy_1030@238:1>@241:0>]($8275:int,$8277:int) = (0 <= $8277)
        P[<copy_1030@257:0>]($8261:int) = (2 <= $8261)
        P[<<copy_1030@257:1>@269:0>]($8246:int,$8248:int) = ((1 + $8246) <= 0)
        P[<copy_1030@260:0>]($8264:int) = (1 <= $8264)
        P[<<copy_1030@260:1>@263:0>]($8256:int,$8258:int) = ((1 + (2 * $8256)) <= 0)
        P[<fail_1178@274:0>]($8243:bool) = false
    end YhornInterface.solve(47764)[3] (0.469928 sec.)
    
  end RefTypeInfer.infer_etrs(44776)[2] (1.933706 sec.)
  refinement types:
    main_1172: X
    f_1176: v1:int -> X
    main_1032: v1:int -> (v2:unit -> X) -> X
    copy_1030: v1:int -> (v2:{v2:int | (2 <= v2)} -> X) -> X
    copy_1030: v1:int -> (v2:{v2:int | (1 <= v2)} -> X) -> X
    copy_1030: v1:int -> (v2:{v2:int | (0 <= v2)} -> X) -> X
    f_copy_1173: v1:int -> (v2:int -> X) -> v4:int -> X
    f_copy_1173: v1:int -> (v2:int -> X) -> v4:int -> X
    f_main_1174: v1:int -> (v2:unit -> X) -> v4:int -> X
    copy_1030: v1:{v1:int | (2 <= v1)} -> (v2:{v2:int | ((1 + v1) <= 0)} -> X) -> X
    copy_1030: v1:{v1:int | (1 <= v1)} -> (v2:{v2:int | ((1 + (2 * v1)) <= 0)} -> X) -> X
    f_copy_1173: v1:int -> (v2:int -> X) -> v4:int -> X
    f_main_1175: v1:int -> v2:int -> (v3:unit -> X) -> v5:int -> X
    fail_1178: v1:{v1:bool | false} -> (v2:unit -> X) -> X
    f_1177: var219:int -> var218:unit -> X
  abstraction types:
    main_1172: X
    f_1176: v1:int -> X
    main_1032: v1:int -> (v2:unit -> X) -> X
    copy_1030: var232:int[var232 -> (2 <= var232),
                          var232 -> (1 <= var232)] ->
               (var233:int[var233 -> (2 <= var233),
                           var233 -> (1 <= var233),
                           var233 -> (0 <= var233),
                           var233 -> ((1 + var232) <= 0),
                           var233 -> ((1 + (2 * var232)) <= 0)] -> X) -> X
    f_copy_1173: var241:int -> (var242:int -> X) -> var244:int -> X
    f_main_1174: v1:int -> (v2:unit -> X) -> v4:int -> X
    f_main_1175: v1:int -> v2:int -> (v3:unit -> X) -> v5:int -> X
    fail_1178: v1:bool -> (v2:unit -> X) -> X
    f_1177: var219:int -> var218:unit -> X
  
end AbsTypeInfer.refine(44775)[1] (1.935706 sec.)
DONE!

Prefix of spurious counter-example::
0; 0; 0; 1; 1; 0; 0; 0; 0; 1; 0

Program with abstraction types (CEGAR-cycle 6)::
Main: main_1172
  main_1172 -> (rand_int f_1176)
  copy_1030 x_1031 k_copy_1074 when (x_1031 = 0) -> (k_copy_1074 0)
  copy_1030 x_1031 k_copy_1074 when (not (x_1031 = 0)) -> (copy_1030 (x_1031 - 1) (f_copy_1173 x_1031 k_copy_1074))
  f_1176 x_1147 -> (main_1032 x_1147 (f_1177 x_1147))
  f_1177 x_1147 x_1144 -> end
  f_copy_1173 x_1031 k_copy_1074 x_1078 -> (k_copy_1074 (1 + x_1078))
  f_main_1174 n_1033 k_main_1106 x_1130 -> (copy_1030 x_1130 (f_main_1175 n_1033 x_1130 k_main_1106))
  f_main_1175 n_1033 x_1130 k_main_1106 x_1109 when (x_1109 = n_1033) -> (k_main_1106 ())
  f_main_1175 n_1033 x_1130 k_main_1106 x_1109 when (not (x_1109 = n_1033)) -> (fail_1178 true k_main_1106)
  fail_1178 b k -> {fail} => (k ())
  main_1032 n_1033 k_main_1106 -> (copy_1030 n_1033 (f_main_1174 n_1033 k_main_1106))
Types:
  main_1172 : X
  copy_1030 : (x_1:int[x_1 >= 2; x_1 <= -4; x_1 <= -3; x_1 <= -2; x_1 <= -1; x_1 <= 0; x_1 >= 1] ->
               (x_3:int[x_3 >= 2; x_3 = 2; x_1 = 2; 5*x_1 >= 4; x_1 >= 3; 
                        x_1 >= 6; x_1 >= 11; x_1 >= 24; x_3 <= 0; x_1 <= -1; 
                        x_3 >= 0; x_3 >= 1; x_3 = 1; x_1 = 1; x_3 = 0; 
                        x_1 = 0] -> X) -> X)
  fail_1178 : (x_1:bool[x_1] -> (unit -> X) -> X)
  
(6-1) Abstracting ... DONE!

(6-2) Checking HORS ... Restart TRecS (param: 1000 -> 2000)
Restart TRecS (param: 2000 -> 4000)
Restart TRecS (param: 4000 -> 8000)
