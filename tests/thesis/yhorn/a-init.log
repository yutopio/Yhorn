MoCHi: Model Checker for Higher-Order Programs
  TRecS version: 1.30
  OCaml version: 4.00.1
  Command: ../mochi.opt -yhorn a-init.ml

parsed::
 let make_array_1030 n_1031 i_1032 = let u_1045 = if 0 <= i_1032 && i_1032 < n_1031 then
                                                    ()
                                                  else
                                                    {fail} () 
                                     in
                                       0 
 in
 let update_1033 i_1034 a_1035 x_1036 j_1037 =
   if j_1037 > i_1034 - 1 && j_1037 <= i_1034 then
     x_1036
   else
     a_1035 j_1037 
 in
 let rec init_1038 i_1039 n_1040 a_1041 =
   if i_1039 >= n_1040 then
     a_1041
   else
     init_1038 (i_1039 + 1) n_1040 (update_1033 i_1039 a_1041 1) 
 in
 let main_1042 k_1043 n_1044 i_1045 =
   if k_1043 >= 0 && k_1043 <= 0 then
     let x_1046 = init_1038 k_1043 n_1044 (make_array_1030 n_1044) 
     in
       if 0 <= i_1045 && i_1045 < n_1044 then
         if x_1046 i_1045 >= 1 then
           ()
         else
           {fail} ()
       else
         ()
   else
     () 
 in
   ()

set_target::
 let make_array_1030 n_1031 i_1032 = let u_1045 = if 0 <= i_1032 && i_1032 < n_1031 then
                                                    ()
                                                  else
                                                    {fail} () 
                                     in
                                       0 
 in
 let update_1033 i_1034 a_1035 x_1036 j_1037 =
   if j_1037 > i_1034 - 1 && j_1037 <= i_1034 then
     x_1036
   else
     a_1035 j_1037 
 in
 let rec init_1038 i_1039 n_1040 a_1041 =
   if i_1039 >= n_1040 then
     a_1041
   else
     init_1038 (i_1039 + 1) n_1040 (update_1033 i_1039 a_1041 1) 
 in
 let main_1042 k_1043 n_1044 i_1045 =
   if k_1043 >= 0 && k_1043 <= 0 then
     let x_1046 = init_1038 k_1043 n_1044 (make_array_1030 n_1044) 
     in
       if 0 <= i_1045 && i_1045 < n_1044 then
         if x_1046 i_1045 >= 1 then
           ()
         else
           {fail} ()
       else
         ()
   else
     () 
 in
 let main_1177 =
   let arg1_1174 = rand_int () 
   in
   let arg2_1175 = rand_int () 
   in
   let arg3_1176 = rand_int () 
   in
     main_1042 arg1_1174 arg2_1175 arg3_1176 
 in
   ()

abst_list::
 let make_array_1030 (n_1031:int) (i_1032:int) =
   let u_1045 = if 0 <= i_1032 && i_1032 < n_1031 then
                  ()
                else
                  {fail} () 
   in
     0 
 in
 let update_1033 (i_1034:int) (a_1035:(int -> int)) (x_1036:int) (j_1037:int) =
   if j_1037 > i_1034 - 1 && j_1037 <= i_1034 then
     x_1036
   else
     a_1035 j_1037 
 in
 let rec init_1038 (i_1039:int) (n_1040:int) (a_1041:(int -> int)) =
   if i_1039 >= n_1040 then
     a_1041
   else
     init_1038 (i_1039 + 1) n_1040 (update_1033 i_1039 a_1041 1) 
 in
 let main_1042 (k_1043:int) (n_1044:int) (i_1045:int) =
   if k_1043 >= 0 && k_1043 <= 0 then
     let x_1046 = init_1038 k_1043 n_1044 (make_array_1030 n_1044) 
     in
       if 0 <= i_1045 && i_1045 < n_1044 then
         if x_1046 i_1045 >= 1 then
           ()
         else
           {fail} ()
       else
         ()
   else
     () 
 in
 let main_1177 =
   let arg1_1174 = rand_int () 
   in
   let arg2_1175 = rand_int () 
   in
   let arg3_1176 = rand_int () 
   in
     main_1042 arg1_1174 arg2_1175 arg3_1176 
 in
   ()

CPS::
 let make_array_1030 (n_1031:int) (i_1032:int) (k_make_array_1207:(int -> X)) =
   let k_make_array_u_1224 (x_1210:unit) = k_make_array_1207 0 
   in
   let k_make_array_u_1213 (b_1225:bool) =
     if b_1225 then
       k_make_array_u_1224 ()
     else
       {|fail|} () k_make_array_u_1224 
   in
     if 0 <= i_1032 then
       k_make_array_u_1213 (i_1032 < n_1031)
     else
       k_make_array_u_1213 false 
 in
 let update_1033
   (i_1034:int) (a_1035:(int -> ((int -> X) -> X))) (x_1036:int) (j_1037:int) (k_update_1260:(
   int -> X)) =
   let k_update_1263 (b_1278:bool) = if b_1278 then
                                       k_update_1260 x_1036
                                     else
                                       a_1035 j_1037 k_update_1260 
   in
     if j_1037 > i_1034 - 1 then
       k_update_1263 (j_1037 <= i_1034)
     else
       k_update_1263 false 
 in
 let rec init_1038
   (i_1039:int) (n_1040:int) (a_1041:(int -> ((int -> X) -> X))) (k_init_1322:(
   (int -> ((int -> X) -> X)) -> X)) =
   if i_1039 >= n_1040 then
     k_init_1322 a_1041
   else
     init_1038 (i_1039 + 1) n_1040 (update_1033 i_1039 a_1041 1) k_init_1322 
 in
 let main_1042 (k_1043:int) (n_1044:int) (i_1045:int) (k_main_1394:(unit -> X)) =
   let k_main_1397 (b_1481:bool) =
     if b_1481 then
       init_1038 k_1043 n_1044 (make_array_1030 n_1044)
         (fun x_1404 ->
            (let k_main_1447 (b_1477:bool) =
               if b_1477 then
                 x_1404 i_1045 (fun x_1451 -> (if x_1451 >= 1 then
                                                 k_main_1394 ()
                                               else
                                                 {|fail|} () k_main_1394))
               else
                 k_main_1394 () 
             in
               if 0 <= i_1045 then
                 k_main_1447 (i_1045 < n_1044)
               else
                 k_main_1447 false))
     else
       k_main_1394 () 
   in
     if k_1043 >= 0 then
       k_main_1397 (k_1043 <= 0)
     else
       k_main_1397 false 
 in
   rand_int_cps ()
     (fun x_1487 ->
        rand_int_cps ()
          (fun x_1500 -> rand_int_cps () (fun x_1513 -> main_1042 x_1487 x_1500 x_1513 (fun x_1484 -> end))))

Program with abstraction types (CEGAR-cycle 0)::
Main: main_1546
  main_1546 -> (rand_int f_1549)
  f_1549 x_1487 -> (rand_int (f_1550 x_1487))
  f_1550 x_1487 x_1500 -> (rand_int (f_1551 x_1487 x_1500))
  f_1551 x_1487 x_1500 x_1513 -> (main_1042 x_1487 x_1500 x_1513 (f_1552 x_1487 x_1500 x_1513))
  f_1552 x_1487 x_1500 x_1513 x_1484 -> end
  f_k_main_1547 b_1481 i_1045 k_1043 n_1044 k_main_1394 x_1404 when (
      0 <= i_1045) -> (k_main_1447 b_1481 i_1045 k_1043 n_1044 k_main_1394 x_1404 (i_1045 < n_1044))
  f_k_main_1547 b_1481 i_1045 k_1043 n_1044 k_main_1394 x_1404 when (
      not (0 <= i_1045)) -> (k_main_1447 b_1481 i_1045 k_1043 n_1044 k_main_1394 x_1404 false)
  f_k_main_1548 b_1477 b_1481 i_1045 k_1043 n_1044 k_main_1394 x_1451 when (x_1451 >= 1) -> (k_main_1394 ())
  f_k_main_1548 b_1477 b_1481 i_1045 k_1043 n_1044 k_main_1394 x_1451 when (
      not (x_1451 >= 1)) -> (fail_1554 true k_main_1394)
  fail_1553 b k -> {fail} => (k ())
  fail_1554 b k -> {fail} => (k ())
  init_1038 i_1039 n_1040 a_1041 k_init_1322 when (i_1039 >= n_1040) -> (k_init_1322 a_1041)
  init_1038 i_1039 n_1040 a_1041 k_init_1322 when (not (i_1039 >= n_1040)) ->
      (init_1038 (i_1039 + 1) n_1040 (update_1033 i_1039 a_1041 1) k_init_1322)
  k_main_1397 i_1045 k_1043 n_1044 k_main_1394 b_1481 when b_1481 ->
      (init_1038 k_1043 n_1044 (make_array_1030 n_1044) (f_k_main_1547 b_1481 i_1045 k_1043 n_1044 k_main_1394))
  k_main_1397 i_1045 k_1043 n_1044 k_main_1394 b_1481 when (not b_1481) -> (k_main_1394 ())
  k_main_1447 b_1481 i_1045 k_1043 n_1044 k_main_1394 x_1404 b_1477 when b_1477 ->
      (x_1404 i_1045 (f_k_main_1548 b_1477 b_1481 i_1045 k_1043 n_1044 k_main_1394))
  k_main_1447 b_1481 i_1045 k_1043 n_1044 k_main_1394 x_1404 b_1477 when (not b_1477) -> (k_main_1394 ())
  k_make_array_u_1213 i_1032 n_1031 k_make_array_1207 b_1225 when b_1225 ->
      (k_make_array_u_1224 i_1032 n_1031 k_make_array_1207 ())
  k_make_array_u_1213 i_1032 n_1031 k_make_array_1207 b_1225 when (not b_1225) ->
      (fail_1553 true (k_make_array_u_1224 i_1032 n_1031 k_make_array_1207))
  k_make_array_u_1224 i_1032 n_1031 k_make_array_1207 x_1210 -> (k_make_array_1207 0)
  k_update_1263 i_1034 j_1037 x_1036 a_1035 k_update_1260 b_1278 when b_1278 -> (k_update_1260 x_1036)
  k_update_1263 i_1034 j_1037 x_1036 a_1035 k_update_1260 b_1278 when (not b_1278) -> (a_1035 j_1037 k_update_1260)
  main_1042 k_1043 n_1044 i_1045 k_main_1394 when (k_1043 >= 0) ->
      (k_main_1397 i_1045 k_1043 n_1044 k_main_1394 (k_1043 <= 0))
  main_1042 k_1043 n_1044 i_1045 k_main_1394 when (not (k_1043 >= 0)) ->
      (k_main_1397 i_1045 k_1043 n_1044 k_main_1394 false)
  make_array_1030 n_1031 i_1032 k_make_array_1207 when (0 <= i_1032) ->
      (k_make_array_u_1213 i_1032 n_1031 k_make_array_1207 (i_1032 < n_1031))
  make_array_1030 n_1031 i_1032 k_make_array_1207 when (not (0 <= i_1032)) ->
      (k_make_array_u_1213 i_1032 n_1031 k_make_array_1207 false)
  update_1033 i_1034 a_1035 x_1036 j_1037 k_update_1260 when (j_1037 > (i_1034 - 1)) ->
      (k_update_1263 i_1034 j_1037 x_1036 a_1035 k_update_1260 (j_1037 <= i_1034))
  update_1033 i_1034 a_1035 x_1036 j_1037 k_update_1260 when (not (j_1037 > (i_1034 - 1))) ->
      (k_update_1263 i_1034 j_1037 x_1036 a_1035 k_update_1260 false)
Types:
  main_1546 : X
  fail_1553 : (x_1:bool[x_1] -> (unit -> X) -> X)
  fail_1554 : (x_1:bool[x_1] -> (unit -> X) -> X)
  init_1038 : (int -> int -> (int -> (int -> X) -> X) -> ((int -> (int -> X) -> X) -> X) -> X)
  
(0-1) Abstracting ... DONE!

(0-2) Checking HORS ... DONE!

Error trace::
  main_1546 ... --> 
  f_1549 ... --> 
  f_1550 ... --> 
  f_1551 ... --> 
  main_1042 [1/2] ... --> 
  k_main_1397 [1/2] ... --> 
  init_1038 [1/2] ... --> 
  f_k_main_1547 [1/2] ... --> 
  k_main_1447 [1/2] ... --> 
  make_array_1030 [2/2] ... --> 
  k_make_array_u_1213 [2/2] ... --> 
  fail_1553 ... --> fail -->
  ERROR!

Spurious counter-example::
  0; 0; 0; 0; 0; 0; 0; 0; 0; 1; 1; 0

(0-3) Checking counter-example ... DONE!

(0-4) Discovering predicates ... 
begin AbsTypeInfer.refine(285)[1]
  program:
    main_1546  | true = ((Random.int 0) f_1549)
    f_1549 x_1487 | true = ((Random.int 0) (f_1550 x_1487))
    f_1550 x_1487 x_1500 | true = ((Random.int 0) (f_1551 x_1487
                                                          x_1500))
    f_1551 x_1487 x_1500 x_1513 | true = (main_1042 x_1487
                                                    x_1500
                                                    x_1513
                                                    (f_1552 x_1487
                                                            x_1500
                                                            x_1513))
    f_1552 x_1487 x_1500 x_1513 x_1484 | true = end
    f_k_main_1547 b_1481 i_1045 k_1043 n_1044 k_main_1394 x_1404 | (0 <= i_1045) = (
    k_main_1447 b_1481
                i_1045
                k_1043
                n_1044
                k_main_1394
                x_1404
                (i_1045 < n_1044))
    f_k_main_1547 b_1481 i_1045 k_1043 n_1044 k_main_1394 x_1404 | (not (
                                                                    0 <= i_1045)) = (
    k_main_1447 b_1481
                i_1045
                k_1043
                n_1044
                k_main_1394
                x_1404
                false)
    f_k_main_1548 b_1477 b_1481 i_1045 k_1043 n_1044 k_main_1394 x_1451 | (
    x_1451 >= 1) = (k_main_1394 ())
    f_k_main_1548 b_1477 b_1481 i_1045 k_1043 n_1044 k_main_1394 x_1451 | (
    not (x_1451 >= 1)) = (fail_1554 true
                                    k_main_1394)
    fail_1553 b k | true = (fail ())
    fail_1554 b k | true = (fail ())
    init_1038 i_1039 n_1040 a_1041 k_init_1322 | (i_1039 >= n_1040) = (
    k_init_1322 a_1041)
    init_1038 i_1039 n_1040 a_1041 k_init_1322 | (not (i_1039 >= n_1040)) = (
    init_1038 (i_1039 + 1)
              n_1040
              (update_1033 i_1039
                           a_1041
                           1)
              k_init_1322)
    k_main_1397 i_1045 k_1043 n_1044 k_main_1394 b_1481 | b_1481 = (init_1038
                                                                    k_1043
                                                                    n_1044
                                                                    (
                                                                    make_array_1030 n_1044)
                                                                    (
                                                                    f_k_main_1547
                                                                    b_1481
                                                                    i_1045
                                                                    k_1043
                                                                    n_1044
                                                                    k_main_1394))
    k_main_1397 i_1045 k_1043 n_1044 k_main_1394 b_1481 | (not b_1481) = (
    k_main_1394 ())
    k_main_1447 b_1481 i_1045 k_1043 n_1044 k_main_1394 x_1404 b_1477 | b_1477 = (
    x_1404 i_1045
           (f_k_main_1548 b_1477
                          b_1481
                          i_1045
                          k_1043
                          n_1044
                          k_main_1394))
    k_main_1447 b_1481 i_1045 k_1043 n_1044 k_main_1394 x_1404 b_1477 | (
    not b_1477) = (k_main_1394 ())
    k_make_array_u_1213 i_1032 n_1031 k_make_array_1207 b_1225 | b_1225 = (
    k_make_array_u_1224 i_1032
                        n_1031
                        k_make_array_1207
                        ())
    k_make_array_u_1213 i_1032 n_1031 k_make_array_1207 b_1225 | (not b_1225) = (
    fail_1553 true
              (k_make_array_u_1224 i_1032
                                   n_1031
                                   k_make_array_1207))
    k_make_array_u_1224 i_1032 n_1031 k_make_array_1207 x_1210 | true = (
    k_make_array_1207 0)
    k_update_1263 i_1034 j_1037 x_1036 a_1035 k_update_1260 b_1278 | b_1278 = (
    k_update_1260 x_1036)
    k_update_1263 i_1034 j_1037 x_1036 a_1035 k_update_1260 b_1278 | (
    not b_1278) = (a_1035 j_1037
                          k_update_1260)
    main_1042 k_1043 n_1044 i_1045 k_main_1394 | (k_1043 >= 0) = (k_main_1397
                                                                    i_1045
                                                                    k_1043
                                                                    n_1044
                                                                    k_main_1394
                                                                    (
                                                                    k_1043 <= 0))
    main_1042 k_1043 n_1044 i_1045 k_main_1394 | (not (k_1043 >= 0)) = (
    k_main_1397 i_1045
                k_1043
                n_1044
                k_main_1394
                false)
    make_array_1030 n_1031 i_1032 k_make_array_1207 | (0 <= i_1032) = (
    k_make_array_u_1213 i_1032
                        n_1031
                        k_make_array_1207
                        (i_1032 < n_1031))
    make_array_1030 n_1031 i_1032 k_make_array_1207 | (not (0 <= i_1032)) = (
    k_make_array_u_1213 i_1032
                        n_1031
                        k_make_array_1207
                        false)
    update_1033 i_1034 a_1035 x_1036 j_1037 k_update_1260 | (j_1037 > (i_1034 - 1)) = (
    k_update_1263 i_1034
                  j_1037
                  x_1036
                  a_1035
                  k_update_1260
                  (j_1037 <= i_1034))
    update_1033 i_1034 a_1035 x_1036 j_1037 k_update_1260 | (not (j_1037 > (i_1034 - 1))) = (
    k_update_1263 i_1034
                  j_1037
                  x_1036
                  a_1035
                  k_update_1260
                  false)
    main_1546:X
    f_1549:int -> X
    f_1550:int -> int -> X
    f_1551:int -> int -> int -> X
    f_1552:int -> int -> int -> unit -> X
    f_k_main_1547:bool -> int -> int -> int -> (unit -> X) -> (int -> (int -> X) -> X) -> X
    f_k_main_1548:bool -> bool -> int -> int -> int -> (unit -> X) -> int -> X
    fail_1553:bool -> (unit -> X) -> X
    fail_1554:bool -> (unit -> X) -> X
    init_1038:int -> int -> (int -> (int -> X) -> X) -> ((int -> (int -> X) -> X) -> X) -> X
    k_main_1397:int -> int -> int -> (unit -> X) -> bool -> X
    k_main_1447:bool -> int -> int -> int -> (unit -> X) -> (int -> (int -> X) -> X) -> bool -> X
    k_make_array_u_1213:int -> int -> (int -> X) -> bool -> X
    k_make_array_u_1224:int -> int -> (int -> X) -> unit -> X
    k_update_1263:int -> int -> int -> (int -> (int -> X) -> X) -> (int -> X) -> bool -> X
    main_1042:int -> int -> int -> (unit -> X) -> X
    make_array_1030:int -> int -> (int -> X) -> X
    update_1033:int -> (int -> (int -> X) -> X) -> int -> int -> (int -> X) -> X
  inlined functions: f_1549,f_1550,f_1551,f_1552,f_k_main_1547,f_k_main_1548,k_main_1397,k_main_1447,k_make_array_u_1213,k_make_array_u_1224,k_update_1263,main_1042,make_array_1030,update_1033
  counterexample: 0:0:0:0:0:0:0:0:0:1:1:0
  error traces:
    [true.nop(<f_1549@4:0> = var2)
     [true.nop((<f_1550@7:0> = <f_1549@4:0>) && (<f_1550@7:1> = var3))
      [true.nop((<f_1551@10:0> = <f_1550@7:0>) && ((<f_1551@10:1> = <f_1550@7:1>) && (<f_1551@10:2> = var4)))
       [true.
        ((<main_1042@12:0> = <f_1551@10:0>) &&
         ((<main_1042@12:1> = <f_1551@10:1>) && (<main_1042@12:2> = <f_1551@10:2>)))
        [(<main_1042@12:0> >= 0).
         ((<k_main_1397@15:0> = <main_1042@12:2>) &&
          ((<k_main_1397@15:1> = <main_1042@12:0>) &&
           ((<k_main_1397@15:2> = <main_1042@12:1>) && (<k_main_1397@15:4> = (<main_1042@12:0> <= 0)))))
         [<k_main_1397@15:4>.((<init_1038@18:0> = <k_main_1397@15:1>) && (<init_1038@18:1> = <k_main_1397@15:2>))
          [(<init_1038@18:0> >= <init_1038@18:1>).true
           [true.
            ((<f_k_main_1547@23:0> = <k_main_1397@15:4>) &&
             ((<f_k_main_1547@23:1> = <k_main_1397@15:0>) &&
              ((<f_k_main_1547@23:2> = <k_main_1397@15:1>) && (<f_k_main_1547@23:3> = <k_main_1397@15:2>))))
            [(0 <= <f_k_main_1547@23:1>).
             ((<k_main_1447@26:0> = <f_k_main_1547@23:0>) &&
              ((<k_main_1447@26:1> = <f_k_main_1547@23:1>) &&
               ((<k_main_1447@26:2> = <f_k_main_1547@23:2>) &&
                ((<k_main_1447@26:3> = <f_k_main_1547@23:3>) &&
                 (<k_main_1447@26:6> = (<f_k_main_1547@23:1> < <f_k_main_1547@23:3>))))))
             [<k_main_1447@26:6>.(<<k_main_1447@26:5>@29:0> = <k_main_1447@26:1>)
              [true.(<<f_k_main_1547@23:5>@31:0> = <<k_main_1447@26:5>@29:0>)
               [true.(<<<init_1038@18:3>@21:0>@33:0> = <<f_k_main_1547@23:5>@31:0>)
                [true.(<<init_1038@18:2>@35:0> = <<<init_1038@18:3>@21:0>@33:0>)
                 [true.
                  ((<make_array_1030@37:0> = <k_main_1397@15:2>) && (<make_array_1030@37:1> = <<init_1038@18:2>@35:0>))
                  [(not (0 <= <make_array_1030@37:1>)).
                   ((<k_make_array_u_1213@40:0> = <make_array_1030@37:1>) &&
                    ((<k_make_array_u_1213@40:1> = <make_array_1030@37:0>) && (<k_make_array_u_1213@40:3> = false)))
                   [(not <k_make_array_u_1213@40:3>).(<fail_1553@43:0> = true)[true.error
  begin RefTypeInfer.infer_etrs(286)[2]
    horn clauses:
      P[<fail_1553@43:0>](<fail_1553@43:0>:bool)|- bot
      
      P[<k_make_array_u_1213@40:3>](<k_make_array_u_1213@40:0>:int,<k_make_array_u_1213@40:1>:int,false:bool),
      <fail_1553@43:0> |- P[<fail_1553@43:0>](<fail_1553@43:0>:bool)
      
      P[<make_array_1030@37:1>](<k_make_array_u_1213@40:1>:int,<k_make_array_u_1213@40:0>:int),
      ((0 > <k_make_array_u_1213@40:0>) && (not <k_make_array_u_1213@40:3>))
      |- P[<k_make_array_u_1213@40:3>](<k_make_array_u_1213@40:0>:int,
                                       <k_make_array_u_1213@40:1>:int,
                                       <k_make_array_u_1213@40:3>:bool)
      
      P[<k_main_1397@15:4>](<f_k_main_1547@23:1>:int,<init_1038@18:0>:int,<make_array_1030@37:0>:int,true:bool),
      P[<<init_1038@18:2>@35:0>](<init_1038@18:0>:int,<make_array_1030@37:0>:int,<make_array_1030@37:1>:int)|- P[<make_array_1030@37:1>](
      <make_array_1030@37:0>:int,<make_array_1030@37:1>:int)
      
      P[<init_1038@18:1>](<init_1038@18:0>:int,<init_1038@18:1>:int),
      P[<<<init_1038@18:3>@21:0>@33:0>](<init_1038@18:0>:int,<init_1038@18:1>:int,<<init_1038@18:2>@35:0>:int),
      (<init_1038@18:0> >= <init_1038@18:1>)
      |- P[<<init_1038@18:2>@35:0>](<init_1038@18:0>:int,<init_1038@18:1>:int,
                                    <<init_1038@18:2>@35:0>:int)
      
      P[<k_main_1397@15:4>](<f_k_main_1547@23:1>:int,<init_1038@18:0>:int,<init_1038@18:1>:int,true:bool),
      P[<<f_k_main_1547@23:5>@31:0>](true:bool,<f_k_main_1547@23:1>:int,<init_1038@18:0>:int,<init_1038@18:1>:int,<<<init_1038@18:3>@21:0>@33:0>:int),
      P[<init_1038@18:1>](<init_1038@18:0>:int,<init_1038@18:1>:int)|- P[<<<init_1038@18:3>@21:0>@33:0>](
      <init_1038@18:0>:int,<init_1038@18:1>:int,<<<init_1038@18:3>@21:0>@33:0>:int)
      
      P[<f_k_main_1547@23:3>](<f_k_main_1547@23:0>:bool,<f_k_main_1547@23:1>:int,<f_k_main_1547@23:2>:int,<f_k_main_1547@23:3>:int),
      P[<<k_main_1447@26:5>@29:0>](<f_k_main_1547@23:0>:bool,<f_k_main_1547@23:1>:int,<f_k_main_1547@23:2>:int,<f_k_main_1547@23:3>:int,<<f_k_main_1547@23:5>@31:0>:int),
      (0 <= <f_k_main_1547@23:1>)
      |- P[<<f_k_main_1547@23:5>@31:0>](<f_k_main_1547@23:0>:bool,<f_k_main_1547@23:1>:int,
                                        <f_k_main_1547@23:2>:int,<f_k_main_1547@23:3>:int,
                                        <<f_k_main_1547@23:5>@31:0>:int)
      
      P[<k_main_1447@26:6>](<k_main_1447@26:0>:bool,<k_main_1447@26:1>:int,<k_main_1447@26:2>:int,<k_main_1447@26:3>:int,true:bool),
      (<<k_main_1447@26:5>@29:0> = <k_main_1447@26:1>)
      |- P[<<k_main_1447@26:5>@29:0>](<k_main_1447@26:0>:bool,<k_main_1447@26:1>:int,
                                      <k_main_1447@26:2>:int,<k_main_1447@26:3>:int,
                                      <<k_main_1447@26:5>@29:0>:int)
      
      P[<f_k_main_1547@23:3>](<k_main_1447@26:0>:bool,<k_main_1447@26:1>:int,<k_main_1447@26:2>:int,<k_main_1447@26:3>:int),
      ((0 <= <k_main_1447@26:1>) && (<k_main_1447@26:6> = (<k_main_1447@26:1> < <k_main_1447@26:3>)))
      |- P[<k_main_1447@26:6>](<k_main_1447@26:0>:bool,<k_main_1447@26:1>:int,
                               <k_main_1447@26:2>:int,<k_main_1447@26:3>:int,
                               <k_main_1447@26:6>:bool)
      
      P[<k_main_1397@15:4>](<f_k_main_1547@23:1>:int,<f_k_main_1547@23:2>:int,<f_k_main_1547@23:3>:int,<f_k_main_1547@23:0>:bool),
      <f_k_main_1547@23:0>
      |- P[<f_k_main_1547@23:3>](<f_k_main_1547@23:0>:bool,<f_k_main_1547@23:1>:int,
                                 <f_k_main_1547@23:2>:int,<f_k_main_1547@23:3>:int)
      
      P[<k_main_1397@15:4>](<k_main_1397@15:0>:int,<init_1038@18:0>:int,<init_1038@18:1>:int,true:bool)|- P[<init_1038@18:1>](
      <init_1038@18:0>:int,<init_1038@18:1>:int)
      
      P[<main_1042@12:2>](<k_main_1397@15:1>:int,<k_main_1397@15:2>:int,<k_main_1397@15:0>:int),
      ((<k_main_1397@15:1> >= 0) && (<k_main_1397@15:4> = (<k_main_1397@15:1> <= 0)))
      |- P[<k_main_1397@15:4>](<k_main_1397@15:0>:int,<k_main_1397@15:1>:int,
                               <k_main_1397@15:2>:int,<k_main_1397@15:4>:bool)
      
      P[<f_1551@10:2>](<main_1042@12:0>:int,<main_1042@12:1>:int,<main_1042@12:2>:int)|- P[<main_1042@12:2>](
      <main_1042@12:0>:int,<main_1042@12:1>:int,<main_1042@12:2>:int)
      
      P[<f_1550@7:1>](<f_1551@10:0>:int,<f_1551@10:1>:int)|- P[<f_1551@10:2>](
      <f_1551@10:0>:int,<f_1551@10:1>:int,<f_1551@10:2>:int)
      
      P[<f_1549@4:0>](<f_1550@7:0>:int)|- P[<f_1550@7:1>](<f_1550@7:0>:int,
                                                          <f_1550@7:1>:int)
      
      |- P[<f_1549@4:0>](<f_1549@4:0>:int)
    call trees:
      <main_1546@1>
        <f_1549@4>
          <f_1550@7>
            <f_1551@10>
              <main_1042@12>
                <k_main_1397@15>
                  <init_1038@18>
                  </<init_1038@18:3>@21>
                  <f_k_main_1547@23>
                    <k_main_1447@26>
                    </<k_main_1447@26:5>@29>
                  </<f_k_main_1547@23:5>@31>
                  <<<init_1038@18:3>@21:0>@33>
                  </<init_1038@18:2>@35>
                  <make_array_1030@37>
                    <k_make_array_u_1213@40>
                      <fail_1553@43>
    inlined horn clauses:
      P[<fail_1553@43:0>](<fail_1553@43:0>:bool)|- bot
      
      P[<<init_1038@18:2>@35:0>](0:int,<k_make_array_u_1213@40:1>:int,<k_make_array_u_1213@40:0>:int),
      ((0 > <k_make_array_u_1213@40:0>) && <fail_1553@43:0>) |- P[<fail_1553@43:0>](
      <fail_1553@43:0>:bool)
      
      P[<init_1038@18:1>](<init_1038@18:0>:int,<init_1038@18:1>:int),
      P[<<<init_1038@18:3>@21:0>@33:0>](<init_1038@18:0>:int,<init_1038@18:1>:int,<<init_1038@18:2>@35:0>:int),
      (<init_1038@18:0> >= <init_1038@18:1>)
      |- P[<<init_1038@18:2>@35:0>](<init_1038@18:0>:int,<init_1038@18:1>:int,
                                    <<init_1038@18:2>@35:0>:int)
      
      P[<init_1038@18:1>](<init_1038@18:0>:int,<init_1038@18:1>:int),
      ((<init_1038@18:0> = 0) &&
       ((0 <= <<<init_1038@18:3>@21:0>@33:0>) && (<<<init_1038@18:3>@21:0>@33:0> < <init_1038@18:1>)))
      |- P[<<<init_1038@18:3>@21:0>@33:0>](<init_1038@18:0>:int,<init_1038@18:1>:int,
                                           <<<init_1038@18:3>@21:0>@33:0>:int)
      
       (<init_1038@18:0> = 0) |- P[<init_1038@18:1>](<init_1038@18:0>:int,
                                                     <init_1038@18:1>:int)
    begin ParamSubstInfer.infer(2924)[3]
      
    end ParamSubstInfer.infer(2924)[3] (0.062990 sec.)
    inferred extra parameters:
      
    begin RefTypeInfer.elim_coeffs(2926)[3]
      
    end RefTypeInfer.elim_coeffs(2926)[3] (0.002000 sec.)
    begin YhornInterface.solve(3162)[3]
      begin HcSolver.solve_ub(3163)[4]
        encoded:
          P[<fail_1553@43:0>](<fail_1553@43:0>:int)|- bot
          
          P[<<init_1038@18:2>@35:0>](0:int,<k_make_array_u_1213@40:1>:int,<k_make_array_u_1213@40:0>:int),
          ((0 > <k_make_array_u_1213@40:0>) && (<fail_1553@43:0> = 1)) |- P[<fail_1553@43:0>](
          <fail_1553@43:0>:int)
          
          P[<init_1038@18:1>](<init_1038@18:0>:int,<init_1038@18:1>:int),
          P[<<<init_1038@18:3>@21:0>@33:0>](<init_1038@18:0>:int,<init_1038@18:1>:int,<<init_1038@18:2>@35:0>:int),
          (<init_1038@18:0> >= <init_1038@18:1>)
          |- P[<<init_1038@18:2>@35:0>](<init_1038@18:0>:int,<init_1038@18:1>:int,
                                        <<init_1038@18:2>@35:0>:int)
          
          P[<init_1038@18:1>](<init_1038@18:0>:int,<init_1038@18:1>:int),
          ((<init_1038@18:0> = 0) &&
           ((0 <= <<<init_1038@18:3>@21:0>@33:0>) && (<<<init_1038@18:3>@21:0>@33:0> < <init_1038@18:1>)))
          |- P[<<<init_1038@18:3>@21:0>@33:0>](<init_1038@18:0>:int,<init_1038@18:1>:int,
                                               <<<init_1038@18:3>@21:0>@33:0>:int)
          
           (<init_1038@18:0> = 0) |- P[<init_1038@18:1>](<init_1038@18:0>:int,
                                                         <init_1038@18:1>:int)
        input to Yhorn:
          P[<fail_1553@43:0>](<fail_1553@43:0>:int)|- bot
          
          P[<<init_1038@18:2>@35:0>](var5:int,<k_make_array_u_1213@40:1>:int,<k_make_array_u_1213@40:0>:int),
          ((0 > <k_make_array_u_1213@40:0>) && ((var5 = 0) && (<fail_1553@43:0> = 1)))
          |- P[<fail_1553@43:0>](<fail_1553@43:0>:int)
          
          P[<init_1038@18:1>](<init_1038@18:0>:int,<init_1038@18:1>:int),
          P[<<<init_1038@18:3>@21:0>@33:0>](<init_1038@18:0>:int,<init_1038@18:1>:int,<<init_1038@18:2>@35:0>:int),
          (<init_1038@18:0> >= <init_1038@18:1>)
          |- P[<<init_1038@18:2>@35:0>](<init_1038@18:0>:int,<init_1038@18:1>:int,
                                        <<init_1038@18:2>@35:0>:int)
          
          P[<init_1038@18:1>](<init_1038@18:0>:int,<init_1038@18:1>:int),
          ((<<<init_1038@18:3>@21:0>@33:0> < <init_1038@18:1>) &&
           ((0 <= <<<init_1038@18:3>@21:0>@33:0>) && (<init_1038@18:0> = 0)))
          |- P[<<<init_1038@18:3>@21:0>@33:0>](<init_1038@18:0>:int,<init_1038@18:1>:int,
                                               <<<init_1038@18:3>@21:0>@33:0>:int)
          Yhorn (Wed Sep 25 10:52:05 JST 2013)


(0=0) & (v_sep_fail_1553_sep_43_sep_0($9)) -> 1=0.
(($9-1=0) & ($10=0) & (-$11>0)) & (v_sep_init_1038_sep_18_sep_2_sep_35_sep_0($10,$12,$11)) -> v_sep_fail_1553_sep_43_sep_0($9).
($13-$14>=0) & (v_sep_init_1038_sep_18_sep_3_sep_21_sep_0_sep_33_sep_0($13,$14,$15)) & (v_sep_init_1038_sep_18_sep_1($13,$14)) -> v_sep_init_1038_sep_18_sep_2_sep_35_sep_0($13,$14,$15).
(($13=0) & (-$16<=0) & (-$14+$16<0)) & (v_sep_init_1038_sep_18_sep_1($13,$14)) -> v_sep_init_1038_sep_18_sep_3_sep_21_sep_0_sep_33_sep_0($13,$14,$16).
$13=0 -> v_sep_init_1038_sep_18_sep_1($13,$14).


v_sep_fail_1553_sep_43_sep_0: X
v_sep_init_1038_sep_18_sep_1: X
v_sep_init_1038_sep_18_sep_2_sep_35_sep_0: X
v_sep_init_1038_sep_18_sep_3_sep_21_sep_0_sep_33_sep_0: X
......
v_sep_fail_1553_sep_43_sep_0: X
v_sep_init_1038_sep_18_sep_1: X
v_sep_init_1038_sep_18_sep_2_sep_35_sep_0: X
v_sep_init_1038_sep_18_sep_3_sep_21_sep_0_sep_33_sep_0: X
...
v_sep_fail_1553_sep_43_sep_0: X
v_sep_init_1038_sep_18_sep_1: X
v_sep_init_1038_sep_18_sep_2_sep_35_sep_0: X
v_sep_init_1038_sep_18_sep_3_sep_21_sep_0_sep_33_sep_0: X
.....
v_sep_fail_1553_sep_43_sep_0: X
v_sep_init_1038_sep_18_sep_1: X
v_sep_init_1038_sep_18_sep_2_sep_35_sep_0: X
v_sep_init_1038_sep_18_sep_3_sep_21_sep_0_sep_33_sep_0: X
......(0=0) & (v_sep_fail_1553_sep_43_sep_0($9)) -> 1=0.
(($9-1=0) & ($10=0) & (-$11>0)) & (v_sep_init_1038_sep_18_sep_2_sep_35_sep_0($10,$12,$11)) -> v_sep_fail_1553_sep_43_sep_0($9).
($13-$14>=0) & (v_sep_init_1038_sep_18_sep_3_sep_21_sep_0_sep_33_sep_0($13,$14,$15)) & (v_sep_init_1038_sep_18_sep_1($13,$14)) -> v_sep_init_1038_sep_18_sep_2_sep_35_sep_0($13,$14,$15).
(($13=0) & (-$16<=0) & (-$14+$16<0)) & (v_sep_init_1038_sep_18_sep_1($13,$14)) -> v_sep_init_1038_sep_18_sep_3_sep_21_sep_0_sep_33_sep_0($13,$14,$16).
$13=0 -> v_sep_init_1038_sep_18_sep_1($13,$14).

           (<init_1038@18:0> = 0) |- P[<init_1038@18:1>](<init_1038@18:0>:int,
                                                         <init_1038@18:1>:int)
        solution:
          P[<fail_1553@43:0>]($17:bool) = false
          P[<init_1038@18:1>]($34:int,$36:int) = true
          P[<<init_1038@18:2>@35:0>]($20:int,$22:int,$24:int) = (0 <= $24)
          P[<<<init_1038@18:3>@21:0>@33:0>]($27:int,$29:int,$31:int) = (0 <= $31)
        
      end HcSolver.solve_ub(3163)[4] (0.013998 sec.)
      begin HcSolver.check_validity(3346)[4]
        input:
          P[<fail_1553@43:0>](<fail_1553@43:0>:bool)|- bot
          
          P[<<init_1038@18:2>@35:0>](0:int,<k_make_array_u_1213@40:1>:int,<k_make_array_u_1213@40:0>:int),
          ((0 > <k_make_array_u_1213@40:0>) && <fail_1553@43:0>) |- P[<fail_1553@43:0>](
          <fail_1553@43:0>:bool)
          
          P[<init_1038@18:1>](<init_1038@18:0>:int,<init_1038@18:1>:int),
          P[<<<init_1038@18:3>@21:0>@33:0>](<init_1038@18:0>:int,<init_1038@18:1>:int,<<init_1038@18:2>@35:0>:int),
          (<init_1038@18:0> >= <init_1038@18:1>)
          |- P[<<init_1038@18:2>@35:0>](<init_1038@18:0>:int,<init_1038@18:1>:int,
                                        <<init_1038@18:2>@35:0>:int)
          
          P[<init_1038@18:1>](<init_1038@18:0>:int,<init_1038@18:1>:int),
          ((<init_1038@18:0> = 0) &&
           ((0 <= <<<init_1038@18:3>@21:0>@33:0>) && (<<<init_1038@18:3>@21:0>@33:0> < <init_1038@18:1>)))
          |- P[<<<init_1038@18:3>@21:0>@33:0>](<init_1038@18:0>:int,<init_1038@18:1>:int,
                                               <<<init_1038@18:3>@21:0>@33:0>:int)
          
           (<init_1038@18:0> = 0) |- P[<init_1038@18:1>](<init_1038@18:0>:int,
                                                         <init_1038@18:1>:int)
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        
      end HcSolver.check_validity(3346)[4] (0.001000 sec.)
      solution:
        P[<fail_1553@43:0>]($17:bool) = false
        P[<init_1038@18:1>]($34:int,$36:int) = true
        P[<<init_1038@18:2>@35:0>]($20:int,$22:int,$24:int) = (0 <= $24)
        P[<<<init_1038@18:3>@21:0>@33:0>]($27:int,$29:int,$31:int) = (0 <= $31)
    end YhornInterface.solve(3162)[3] (0.014998 sec.)
    
  end RefTypeInfer.infer_etrs(286)[2] (0.096985 sec.)
  refinement types:
    main_1546: X
    f_1549: v1:int -> X
    f_1550: v1:int -> v2:int -> X
    f_1551: v1:int -> v2:int -> v3:int -> X
    main_1042: v1:int -> v2:int -> v3:int -> (v4:unit -> X) -> X
    k_main_1397: v1:int -> v2:int -> v3:int -> (v4:unit -> X) -> v6:bool -> X
    init_1038: v1:int ->
               v2:int ->
               (v3:{v3:int | (0 <= v3)} -> (v4:int -> X) -> X) ->
               ((v7:{v7:int | (0 <= v7)} -> (v8:int -> X) -> X) -> X) -> X
    f_k_main_1547: v1:bool -> v2:int -> v3:int -> v4:int -> (v5:unit -> X) -> (v7:int -> (v8:int -> X) -> X) -> X
    k_main_1447: v1:bool ->
                 v2:int -> v3:int -> v4:int -> (v5:unit -> X) -> (v7:int -> (v8:int -> X) -> X) -> v11:bool -> X
    make_array_1030: v1:int -> v2:int -> (v3:int -> X) -> X
    k_make_array_u_1213: v1:int -> v2:int -> (v3:int -> X) -> v5:bool -> X
    fail_1553: v1:{v1:bool | false} -> (v2:unit -> X) -> X
    f_1552: var32:int -> var31:int -> var30:int -> var29:unit -> X
    f_k_main_1548: var41:bool ->
                   var40:bool -> var39:int -> var38:int -> var37:int -> (var36:unit -> X) -> var34:int -> X
    fail_1554: var45:bool -> (var44:unit -> X) -> X
    k_make_array_u_1224: var51:int -> var50:int -> (var49:int -> X) -> var47:unit -> X
    k_update_1263: var62:int ->
                   var61:int ->
                   var60:int -> (var59:int -> (var58:int -> X) -> X) -> (var55:int -> X) -> var53:bool -> X
    update_1033: var72:int -> (var71:int -> (var70:int -> X) -> X) -> var67:int -> var66:int -> (var65:int -> X) -> X
  abstraction types:
    main_1546: X
    f_1549: v1:int -> X
    f_1550: v1:int -> v2:int -> X
    f_1551: v1:int -> v2:int -> v3:int -> X
    main_1042: v1:int -> v2:int -> v3:int -> (v4:unit -> X) -> X
    k_main_1397: v1:int -> v2:int -> v3:int -> (v4:unit -> X) -> v6:bool -> X
    init_1038: v1:int ->
               v2:int ->
               (v3:int[v3 -> (0 <= v3)] -> (v4:int -> X) -> X) ->
               ((v7:int[v7 -> (0 <= v7)] -> (v8:int -> X) -> X) -> X) -> X
    f_k_main_1547: v1:bool -> v2:int -> v3:int -> v4:int -> (v5:unit -> X) -> (v7:int -> (v8:int -> X) -> X) -> X
    k_main_1447: v1:bool ->
                 v2:int -> v3:int -> v4:int -> (v5:unit -> X) -> (v7:int -> (v8:int -> X) -> X) -> v11:bool -> X
    make_array_1030: v1:int -> v2:int -> (v3:int -> X) -> X
    k_make_array_u_1213: v1:int -> v2:int -> (v3:int -> X) -> v5:bool -> X
    fail_1553: v1:bool -> (v2:unit -> X) -> X
    f_1552: var32:int -> var31:int -> var30:int -> var29:unit -> X
    f_k_main_1548: var41:bool ->
                   var40:bool -> var39:int -> var38:int -> var37:int -> (var36:unit -> X) -> var34:int -> X
    fail_1554: var45:bool -> (var44:unit -> X) -> X
    k_make_array_u_1224: var51:int -> var50:int -> (var49:int -> X) -> var47:unit -> X
    k_update_1263: var62:int ->
                   var61:int ->
                   var60:int -> (var59:int -> (var58:int -> X) -> X) -> (var55:int -> X) -> var53:bool -> X
    update_1033: var72:int -> (var71:int -> (var70:int -> X) -> X) -> var67:int -> var66:int -> (var65:int -> X) -> X
  
end AbsTypeInfer.refine(285)[1] (0.101984 sec.)
DONE!

Prefix of spurious counter-example::
0; 0; 0; 0; 0; 0; 0; 0; 0

Program with abstraction types (CEGAR-cycle 1)::
Main: main_1546
  main_1546 -> (rand_int f_1549)
  f_1549 x_1487 -> (rand_int (f_1550 x_1487))
  f_1550 x_1487 x_1500 -> (rand_int (f_1551 x_1487 x_1500))
  f_1551 x_1487 x_1500 x_1513 -> (main_1042 x_1487 x_1500 x_1513 (f_1552 x_1487 x_1500 x_1513))
  f_1552 x_1487 x_1500 x_1513 x_1484 -> end
  f_k_main_1547 b_1481 i_1045 k_1043 n_1044 k_main_1394 x_1404 when (
      0 <= i_1045) -> (k_main_1447 b_1481 i_1045 k_1043 n_1044 k_main_1394 x_1404 (i_1045 < n_1044))
  f_k_main_1547 b_1481 i_1045 k_1043 n_1044 k_main_1394 x_1404 when (
      not (0 <= i_1045)) -> (k_main_1447 b_1481 i_1045 k_1043 n_1044 k_main_1394 x_1404 false)
  f_k_main_1548 b_1477 b_1481 i_1045 k_1043 n_1044 k_main_1394 x_1451 when (x_1451 >= 1) -> (k_main_1394 ())
  f_k_main_1548 b_1477 b_1481 i_1045 k_1043 n_1044 k_main_1394 x_1451 when (
      not (x_1451 >= 1)) -> (fail_1554 true k_main_1394)
  fail_1553 b k -> {fail} => (k ())
  fail_1554 b k -> {fail} => (k ())
  init_1038 i_1039 n_1040 a_1041 k_init_1322 when (i_1039 >= n_1040) -> (k_init_1322 a_1041)
  init_1038 i_1039 n_1040 a_1041 k_init_1322 when (not (i_1039 >= n_1040)) ->
      (init_1038 (i_1039 + 1) n_1040 (update_1033 i_1039 a_1041 1) k_init_1322)
  k_main_1397 i_1045 k_1043 n_1044 k_main_1394 b_1481 when b_1481 ->
      (init_1038 k_1043 n_1044 (make_array_1030 n_1044) (f_k_main_1547 b_1481 i_1045 k_1043 n_1044 k_main_1394))
  k_main_1397 i_1045 k_1043 n_1044 k_main_1394 b_1481 when (not b_1481) -> (k_main_1394 ())
  k_main_1447 b_1481 i_1045 k_1043 n_1044 k_main_1394 x_1404 b_1477 when b_1477 ->
      (x_1404 i_1045 (f_k_main_1548 b_1477 b_1481 i_1045 k_1043 n_1044 k_main_1394))
  k_main_1447 b_1481 i_1045 k_1043 n_1044 k_main_1394 x_1404 b_1477 when (not b_1477) -> (k_main_1394 ())
  k_make_array_u_1213 i_1032 n_1031 k_make_array_1207 b_1225 when b_1225 ->
      (k_make_array_u_1224 i_1032 n_1031 k_make_array_1207 ())
  k_make_array_u_1213 i_1032 n_1031 k_make_array_1207 b_1225 when (not b_1225) ->
      (fail_1553 true (k_make_array_u_1224 i_1032 n_1031 k_make_array_1207))
  k_make_array_u_1224 i_1032 n_1031 k_make_array_1207 x_1210 -> (k_make_array_1207 0)
  k_update_1263 i_1034 j_1037 x_1036 a_1035 k_update_1260 b_1278 when b_1278 -> (k_update_1260 x_1036)
  k_update_1263 i_1034 j_1037 x_1036 a_1035 k_update_1260 b_1278 when (not b_1278) -> (a_1035 j_1037 k_update_1260)
  main_1042 k_1043 n_1044 i_1045 k_main_1394 when (k_1043 >= 0) ->
      (k_main_1397 i_1045 k_1043 n_1044 k_main_1394 (k_1043 <= 0))
  main_1042 k_1043 n_1044 i_1045 k_main_1394 when (not (k_1043 >= 0)) ->
      (k_main_1397 i_1045 k_1043 n_1044 k_main_1394 false)
  make_array_1030 n_1031 i_1032 k_make_array_1207 when (0 <= i_1032) ->
      (k_make_array_u_1213 i_1032 n_1031 k_make_array_1207 (i_1032 < n_1031))
  make_array_1030 n_1031 i_1032 k_make_array_1207 when (not (0 <= i_1032)) ->
      (k_make_array_u_1213 i_1032 n_1031 k_make_array_1207 false)
  update_1033 i_1034 a_1035 x_1036 j_1037 k_update_1260 when (j_1037 > (i_1034 - 1)) ->
      (k_update_1263 i_1034 j_1037 x_1036 a_1035 k_update_1260 (j_1037 <= i_1034))
  update_1033 i_1034 a_1035 x_1036 j_1037 k_update_1260 when (not (j_1037 > (i_1034 - 1))) ->
      (k_update_1263 i_1034 j_1037 x_1036 a_1035 k_update_1260 false)
Types:
  main_1546 : X
  fail_1553 : (x_1:bool[x_1] -> (unit -> X) -> X)
  fail_1554 : (x_1:bool[x_1] -> (unit -> X) -> X)
  init_1038 : (int ->
               int -> (x_4:int[x_4 >= 0] -> (int -> X) -> X) -> ((x_11:int[x_11 >= 0] -> (int -> X) -> X) -> X) -> X)
  
(1-1) Abstracting ... DONE!

(1-2) Checking HORS ... DONE!

Error trace::
  main_1546 ... --> 
  f_1549 ... --> 
  f_1550 ... --> 
  f_1551 ... --> 
  main_1042 [1/2] ... --> 
  k_main_1397 [1/2] ... --> 
  init_1038 [1/2] ... --> 
  f_k_main_1547 [1/2] ... --> 
  k_main_1447 [1/2] ... --> 
  make_array_1030 [1/2] ... --> 
  k_make_array_u_1213 [2/2] ... --> 
  fail_1553 ... --> fail -->
  ERROR!

Spurious counter-example::
  0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 1; 0

(1-3) Checking counter-example ... DONE!

(1-4) Discovering predicates ... 
begin AbsTypeInfer.refine(4249)[1]
  program:
    main_1546  | true = ((Random.int 0) f_1549)
    f_1549 x_1487 | true = ((Random.int 0) (f_1550 x_1487))
    f_1550 x_1487 x_1500 | true = ((Random.int 0) (f_1551 x_1487
                                                          x_1500))
    f_1551 x_1487 x_1500 x_1513 | true = (main_1042 x_1487
                                                    x_1500
                                                    x_1513
                                                    (f_1552 x_1487
                                                            x_1500
                                                            x_1513))
    f_1552 x_1487 x_1500 x_1513 x_1484 | true = end
    f_k_main_1547 b_1481 i_1045 k_1043 n_1044 k_main_1394 x_1404 | (0 <= i_1045) = (
    k_main_1447 b_1481
                i_1045
                k_1043
                n_1044
                k_main_1394
                x_1404
                (i_1045 < n_1044))
    f_k_main_1547 b_1481 i_1045 k_1043 n_1044 k_main_1394 x_1404 | (not (
                                                                    0 <= i_1045)) = (
    k_main_1447 b_1481
                i_1045
                k_1043
                n_1044
                k_main_1394
                x_1404
                false)
    f_k_main_1548 b_1477 b_1481 i_1045 k_1043 n_1044 k_main_1394 x_1451 | (
    x_1451 >= 1) = (k_main_1394 ())
    f_k_main_1548 b_1477 b_1481 i_1045 k_1043 n_1044 k_main_1394 x_1451 | (
    not (x_1451 >= 1)) = (fail_1554 true
                                    k_main_1394)
    fail_1553 b k | true = (fail ())
    fail_1554 b k | true = (fail ())
    init_1038 i_1039 n_1040 a_1041 k_init_1322 | (i_1039 >= n_1040) = (
    k_init_1322 a_1041)
    init_1038 i_1039 n_1040 a_1041 k_init_1322 | (not (i_1039 >= n_1040)) = (
    init_1038 (i_1039 + 1)
              n_1040
              (update_1033 i_1039
                           a_1041
                           1)
              k_init_1322)
    k_main_1397 i_1045 k_1043 n_1044 k_main_1394 b_1481 | b_1481 = (init_1038
                                                                    k_1043
                                                                    n_1044
                                                                    (
                                                                    make_array_1030 n_1044)
                                                                    (
                                                                    f_k_main_1547
                                                                    b_1481
                                                                    i_1045
                                                                    k_1043
                                                                    n_1044
                                                                    k_main_1394))
    k_main_1397 i_1045 k_1043 n_1044 k_main_1394 b_1481 | (not b_1481) = (
    k_main_1394 ())
    k_main_1447 b_1481 i_1045 k_1043 n_1044 k_main_1394 x_1404 b_1477 | b_1477 = (
    x_1404 i_1045
           (f_k_main_1548 b_1477
                          b_1481
                          i_1045
                          k_1043
                          n_1044
                          k_main_1394))
    k_main_1447 b_1481 i_1045 k_1043 n_1044 k_main_1394 x_1404 b_1477 | (
    not b_1477) = (k_main_1394 ())
    k_make_array_u_1213 i_1032 n_1031 k_make_array_1207 b_1225 | b_1225 = (
    k_make_array_u_1224 i_1032
                        n_1031
                        k_make_array_1207
                        ())
    k_make_array_u_1213 i_1032 n_1031 k_make_array_1207 b_1225 | (not b_1225) = (
    fail_1553 true
              (k_make_array_u_1224 i_1032
                                   n_1031
                                   k_make_array_1207))
    k_make_array_u_1224 i_1032 n_1031 k_make_array_1207 x_1210 | true = (
    k_make_array_1207 0)
    k_update_1263 i_1034 j_1037 x_1036 a_1035 k_update_1260 b_1278 | b_1278 = (
    k_update_1260 x_1036)
    k_update_1263 i_1034 j_1037 x_1036 a_1035 k_update_1260 b_1278 | (
    not b_1278) = (a_1035 j_1037
                          k_update_1260)
    main_1042 k_1043 n_1044 i_1045 k_main_1394 | (k_1043 >= 0) = (k_main_1397
                                                                    i_1045
                                                                    k_1043
                                                                    n_1044
                                                                    k_main_1394
                                                                    (
                                                                    k_1043 <= 0))
    main_1042 k_1043 n_1044 i_1045 k_main_1394 | (not (k_1043 >= 0)) = (
    k_main_1397 i_1045
                k_1043
                n_1044
                k_main_1394
                false)
    make_array_1030 n_1031 i_1032 k_make_array_1207 | (0 <= i_1032) = (
    k_make_array_u_1213 i_1032
                        n_1031
                        k_make_array_1207
                        (i_1032 < n_1031))
    make_array_1030 n_1031 i_1032 k_make_array_1207 | (not (0 <= i_1032)) = (
    k_make_array_u_1213 i_1032
                        n_1031
                        k_make_array_1207
                        false)
    update_1033 i_1034 a_1035 x_1036 j_1037 k_update_1260 | (j_1037 > (i_1034 - 1)) = (
    k_update_1263 i_1034
                  j_1037
                  x_1036
                  a_1035
                  k_update_1260
                  (j_1037 <= i_1034))
    update_1033 i_1034 a_1035 x_1036 j_1037 k_update_1260 | (not (j_1037 > (i_1034 - 1))) = (
    k_update_1263 i_1034
                  j_1037
                  x_1036
                  a_1035
                  k_update_1260
                  false)
    main_1546:X
    f_1549:int -> X
    f_1550:int -> int -> X
    f_1551:int -> int -> int -> X
    f_1552:int -> int -> int -> unit -> X
    f_k_main_1547:bool -> int -> int -> int -> (unit -> X) -> (int -> (int -> X) -> X) -> X
    f_k_main_1548:bool -> bool -> int -> int -> int -> (unit -> X) -> int -> X
    fail_1553:bool -> (unit -> X) -> X
    fail_1554:bool -> (unit -> X) -> X
    init_1038:int -> int -> (int -> (int -> X) -> X) -> ((int -> (int -> X) -> X) -> X) -> X
    k_main_1397:int -> int -> int -> (unit -> X) -> bool -> X
    k_main_1447:bool -> int -> int -> int -> (unit -> X) -> (int -> (int -> X) -> X) -> bool -> X
    k_make_array_u_1213:int -> int -> (int -> X) -> bool -> X
    k_make_array_u_1224:int -> int -> (int -> X) -> unit -> X
    k_update_1263:int -> int -> int -> (int -> (int -> X) -> X) -> (int -> X) -> bool -> X
    main_1042:int -> int -> int -> (unit -> X) -> X
    make_array_1030:int -> int -> (int -> X) -> X
    update_1033:int -> (int -> (int -> X) -> X) -> int -> int -> (int -> X) -> X
  inlined functions: f_1549,f_1550,f_1551,f_1552,f_k_main_1547,f_k_main_1548,k_main_1397,k_main_1447,k_make_array_u_1213,k_make_array_u_1224,k_update_1263,main_1042,make_array_1030,update_1033
  counterexample: 0:0:0:0:0:0:0:0:0:0:1:0
  error traces:
    [true.nop(<f_1549@49:0> = var73)
     [true.nop((<f_1550@52:0> = <f_1549@49:0>) && (<f_1550@52:1> = var74))
      [true.nop((<f_1551@55:0> = <f_1550@52:0>) && ((<f_1551@55:1> = <f_1550@52:1>) && (<f_1551@55:2> = var75)))
       [true.
        ((<main_1042@57:0> = <f_1551@55:0>) &&
         ((<main_1042@57:1> = <f_1551@55:1>) && (<main_1042@57:2> = <f_1551@55:2>)))
        [(<main_1042@57:0> >= 0).
         ((<k_main_1397@60:0> = <main_1042@57:2>) &&
          ((<k_main_1397@60:1> = <main_1042@57:0>) &&
           ((<k_main_1397@60:2> = <main_1042@57:1>) && (<k_main_1397@60:4> = (<main_1042@57:0> <= 0)))))
         [<k_main_1397@60:4>.((<init_1038@63:0> = <k_main_1397@60:1>) && (<init_1038@63:1> = <k_main_1397@60:2>))
          [(<init_1038@63:0> >= <init_1038@63:1>).true
           [true.
            ((<f_k_main_1547@68:0> = <k_main_1397@60:4>) &&
             ((<f_k_main_1547@68:1> = <k_main_1397@60:0>) &&
              ((<f_k_main_1547@68:2> = <k_main_1397@60:1>) && (<f_k_main_1547@68:3> = <k_main_1397@60:2>))))
            [(0 <= <f_k_main_1547@68:1>).
             ((<k_main_1447@71:0> = <f_k_main_1547@68:0>) &&
              ((<k_main_1447@71:1> = <f_k_main_1547@68:1>) &&
               ((<k_main_1447@71:2> = <f_k_main_1547@68:2>) &&
                ((<k_main_1447@71:3> = <f_k_main_1547@68:3>) &&
                 (<k_main_1447@71:6> = (<f_k_main_1547@68:1> < <f_k_main_1547@68:3>))))))
             [<k_main_1447@71:6>.(<<k_main_1447@71:5>@74:0> = <k_main_1447@71:1>)
              [true.(<<f_k_main_1547@68:5>@76:0> = <<k_main_1447@71:5>@74:0>)
               [true.(<<<init_1038@63:3>@66:0>@78:0> = <<f_k_main_1547@68:5>@76:0>)
                [true.(<<init_1038@63:2>@80:0> = <<<init_1038@63:3>@66:0>@78:0>)
                 [true.
                  ((<make_array_1030@82:0> = <k_main_1397@60:2>) && (<make_array_1030@82:1> = <<init_1038@63:2>@80:0>))
                  [(0 <= <make_array_1030@82:1>).
                   ((<k_make_array_u_1213@85:0> = <make_array_1030@82:1>) &&
                    ((<k_make_array_u_1213@85:1> = <make_array_1030@82:0>) &&
                     (<k_make_array_u_1213@85:3> = (<make_array_1030@82:1> < <make_array_1030@82:0>))))
                   [(not <k_make_array_u_1213@85:3>).(<fail_1553@88:0> = true)[true.error
  begin RefTypeInfer.infer_etrs(4250)[2]
    horn clauses:
      P[<fail_1553@88:0>](<fail_1553@88:0>:bool)|- bot
      
      P[<k_make_array_u_1213@85:3>](<k_make_array_u_1213@85:0>:int,<k_make_array_u_1213@85:1>:int,false:bool),
      <fail_1553@88:0> |- P[<fail_1553@88:0>](<fail_1553@88:0>:bool)
      
      P[<make_array_1030@82:1>](<k_make_array_u_1213@85:1>:int,<k_make_array_u_1213@85:0>:int),
      ((0 <= <k_make_array_u_1213@85:0>) &&
       (<k_make_array_u_1213@85:3> = (<k_make_array_u_1213@85:0> < <k_make_array_u_1213@85:1>)))
      |- P[<k_make_array_u_1213@85:3>](<k_make_array_u_1213@85:0>:int,
                                       <k_make_array_u_1213@85:1>:int,
                                       <k_make_array_u_1213@85:3>:bool)
      
      P[<k_main_1397@60:4>](<f_k_main_1547@68:1>:int,<init_1038@63:0>:int,<make_array_1030@82:0>:int,true:bool),
      P[<<init_1038@63:2>@80:0>](<init_1038@63:0>:int,<make_array_1030@82:0>:int,<make_array_1030@82:1>:int)|- P[<make_array_1030@82:1>](
      <make_array_1030@82:0>:int,<make_array_1030@82:1>:int)
      
      P[<init_1038@63:1>](<init_1038@63:0>:int,<init_1038@63:1>:int),
      P[<<<init_1038@63:3>@66:0>@78:0>](<init_1038@63:0>:int,<init_1038@63:1>:int,<<init_1038@63:2>@80:0>:int),
      (<init_1038@63:0> >= <init_1038@63:1>)
      |- P[<<init_1038@63:2>@80:0>](<init_1038@63:0>:int,<init_1038@63:1>:int,
                                    <<init_1038@63:2>@80:0>:int)
      
      P[<k_main_1397@60:4>](<f_k_main_1547@68:1>:int,<init_1038@63:0>:int,<init_1038@63:1>:int,true:bool),
      P[<<f_k_main_1547@68:5>@76:0>](true:bool,<f_k_main_1547@68:1>:int,<init_1038@63:0>:int,<init_1038@63:1>:int,<<<init_1038@63:3>@66:0>@78:0>:int),
      P[<init_1038@63:1>](<init_1038@63:0>:int,<init_1038@63:1>:int)|- P[<<<init_1038@63:3>@66:0>@78:0>](
      <init_1038@63:0>:int,<init_1038@63:1>:int,<<<init_1038@63:3>@66:0>@78:0>:int)
      
      P[<f_k_main_1547@68:3>](<f_k_main_1547@68:0>:bool,<f_k_main_1547@68:1>:int,<f_k_main_1547@68:2>:int,<f_k_main_1547@68:3>:int),
      P[<<k_main_1447@71:5>@74:0>](<f_k_main_1547@68:0>:bool,<f_k_main_1547@68:1>:int,<f_k_main_1547@68:2>:int,<f_k_main_1547@68:3>:int,<<f_k_main_1547@68:5>@76:0>:int),
      (0 <= <f_k_main_1547@68:1>)
      |- P[<<f_k_main_1547@68:5>@76:0>](<f_k_main_1547@68:0>:bool,<f_k_main_1547@68:1>:int,
                                        <f_k_main_1547@68:2>:int,<f_k_main_1547@68:3>:int,
                                        <<f_k_main_1547@68:5>@76:0>:int)
      
      P[<k_main_1447@71:6>](<k_main_1447@71:0>:bool,<k_main_1447@71:1>:int,<k_main_1447@71:2>:int,<k_main_1447@71:3>:int,true:bool),
      (<<k_main_1447@71:5>@74:0> = <k_main_1447@71:1>)
      |- P[<<k_main_1447@71:5>@74:0>](<k_main_1447@71:0>:bool,<k_main_1447@71:1>:int,
                                      <k_main_1447@71:2>:int,<k_main_1447@71:3>:int,
                                      <<k_main_1447@71:5>@74:0>:int)
      
      P[<f_k_main_1547@68:3>](<k_main_1447@71:0>:bool,<k_main_1447@71:1>:int,<k_main_1447@71:2>:int,<k_main_1447@71:3>:int),
      ((0 <= <k_main_1447@71:1>) && (<k_main_1447@71:6> = (<k_main_1447@71:1> < <k_main_1447@71:3>)))
      |- P[<k_main_1447@71:6>](<k_main_1447@71:0>:bool,<k_main_1447@71:1>:int,
                               <k_main_1447@71:2>:int,<k_main_1447@71:3>:int,
                               <k_main_1447@71:6>:bool)
      
      P[<k_main_1397@60:4>](<f_k_main_1547@68:1>:int,<f_k_main_1547@68:2>:int,<f_k_main_1547@68:3>:int,<f_k_main_1547@68:0>:bool),
      <f_k_main_1547@68:0>
      |- P[<f_k_main_1547@68:3>](<f_k_main_1547@68:0>:bool,<f_k_main_1547@68:1>:int,
                                 <f_k_main_1547@68:2>:int,<f_k_main_1547@68:3>:int)
      
      P[<k_main_1397@60:4>](<k_main_1397@60:0>:int,<init_1038@63:0>:int,<init_1038@63:1>:int,true:bool)|- P[<init_1038@63:1>](
      <init_1038@63:0>:int,<init_1038@63:1>:int)
      
      P[<main_1042@57:2>](<k_main_1397@60:1>:int,<k_main_1397@60:2>:int,<k_main_1397@60:0>:int),
      ((<k_main_1397@60:1> >= 0) && (<k_main_1397@60:4> = (<k_main_1397@60:1> <= 0)))
      |- P[<k_main_1397@60:4>](<k_main_1397@60:0>:int,<k_main_1397@60:1>:int,
                               <k_main_1397@60:2>:int,<k_main_1397@60:4>:bool)
      
      P[<f_1551@55:2>](<main_1042@57:0>:int,<main_1042@57:1>:int,<main_1042@57:2>:int)|- P[<main_1042@57:2>](
      <main_1042@57:0>:int,<main_1042@57:1>:int,<main_1042@57:2>:int)
      
      P[<f_1550@52:1>](<f_1551@55:0>:int,<f_1551@55:1>:int)|- P[<f_1551@55:2>](
      <f_1551@55:0>:int,<f_1551@55:1>:int,<f_1551@55:2>:int)
      
      P[<f_1549@49:0>](<f_1550@52:0>:int)|- P[<f_1550@52:1>](<f_1550@52:0>:int,
                                                             <f_1550@52:1>:int)
      
      |- P[<f_1549@49:0>](<f_1549@49:0>:int)
    call trees:
      <main_1546@46>
        <f_1549@49>
          <f_1550@52>
            <f_1551@55>
              <main_1042@57>
                <k_main_1397@60>
                  <init_1038@63>
                  </<init_1038@63:3>@66>
                  <f_k_main_1547@68>
                    <k_main_1447@71>
                    </<k_main_1447@71:5>@74>
                  </<f_k_main_1547@68:5>@76>
                  <<<init_1038@63:3>@66:0>@78>
                  </<init_1038@63:2>@80>
                  <make_array_1030@82>
                    <k_make_array_u_1213@85>
                      <fail_1553@88>
    inlined horn clauses:
      P[<fail_1553@88:0>](<fail_1553@88:0>:bool)|- bot
      
      P[<<init_1038@63:2>@80:0>](0:int,<k_make_array_u_1213@85:1>:int,<k_make_array_u_1213@85:0>:int),
      ((0 <= <k_make_array_u_1213@85:0>) &&
       ((<k_make_array_u_1213@85:0> >= <k_make_array_u_1213@85:1>) && <fail_1553@88:0>))
      |- P[<fail_1553@88:0>](<fail_1553@88:0>:bool)
      
      P[<init_1038@63:1>](<init_1038@63:0>:int,<init_1038@63:1>:int),
      P[<<<init_1038@63:3>@66:0>@78:0>](<init_1038@63:0>:int,<init_1038@63:1>:int,<<init_1038@63:2>@80:0>:int),
      (<init_1038@63:0> >= <init_1038@63:1>)
      |- P[<<init_1038@63:2>@80:0>](<init_1038@63:0>:int,<init_1038@63:1>:int,
                                    <<init_1038@63:2>@80:0>:int)
      
      P[<init_1038@63:1>](<init_1038@63:0>:int,<init_1038@63:1>:int),
      ((<init_1038@63:0> = 0) &&
       ((0 <= <<<init_1038@63:3>@66:0>@78:0>) && (<<<init_1038@63:3>@66:0>@78:0> < <init_1038@63:1>)))
      |- P[<<<init_1038@63:3>@66:0>@78:0>](<init_1038@63:0>:int,<init_1038@63:1>:int,
                                           <<<init_1038@63:3>@66:0>@78:0>:int)
      
       (<init_1038@63:0> = 0) |- P[<init_1038@63:1>](<init_1038@63:0>:int,
                                                     <init_1038@63:1>:int)
    begin ParamSubstInfer.infer(7106)[3]
      
    end ParamSubstInfer.infer(7106)[3] (0.090986 sec.)
    inferred extra parameters:
      
    begin RefTypeInfer.elim_coeffs(7108)[3]
      
    end RefTypeInfer.elim_coeffs(7108)[3] (0.001000 sec.)
    begin YhornInterface.solve(7411)[3]
      begin HcSolver.solve_ub(7412)[4]
        encoded:
          P[<fail_1553@88:0>](<fail_1553@88:0>:int)|- bot
          
          P[<<init_1038@63:2>@80:0>](0:int,<k_make_array_u_1213@85:1>:int,<k_make_array_u_1213@85:0>:int),
          ((0 <= <k_make_array_u_1213@85:0>) &&
           ((<k_make_array_u_1213@85:0> >= <k_make_array_u_1213@85:1>) && (<fail_1553@88:0> = 1)))
          |- P[<fail_1553@88:0>](<fail_1553@88:0>:int)
          
          P[<init_1038@63:1>](<init_1038@63:0>:int,<init_1038@63:1>:int),
          P[<<<init_1038@63:3>@66:0>@78:0>](<init_1038@63:0>:int,<init_1038@63:1>:int,<<init_1038@63:2>@80:0>:int),
          (<init_1038@63:0> >= <init_1038@63:1>)
          |- P[<<init_1038@63:2>@80:0>](<init_1038@63:0>:int,<init_1038@63:1>:int,
                                        <<init_1038@63:2>@80:0>:int)
          
          P[<init_1038@63:1>](<init_1038@63:0>:int,<init_1038@63:1>:int),
          ((<init_1038@63:0> = 0) &&
           ((0 <= <<<init_1038@63:3>@66:0>@78:0>) && (<<<init_1038@63:3>@66:0>@78:0> < <init_1038@63:1>)))
          |- P[<<<init_1038@63:3>@66:0>@78:0>](<init_1038@63:0>:int,<init_1038@63:1>:int,
                                               <<<init_1038@63:3>@66:0>@78:0>:int)
          
           (<init_1038@63:0> = 0) |- P[<init_1038@63:1>](<init_1038@63:0>:int,
                                                         <init_1038@63:1>:int)
        input to Yhorn:
          P[<fail_1553@88:0>](<fail_1553@88:0>:int)|- bot
          
          P[<<init_1038@63:2>@80:0>](var76:int,<k_make_array_u_1213@85:1>:int,<k_make_array_u_1213@85:0>:int),
          ((<k_make_array_u_1213@85:0> >= <k_make_array_u_1213@85:1>) &&
           ((0 <= <k_make_array_u_1213@85:0>) && ((var76 = 0) && (<fail_1553@88:0> = 1))))
          |- P[<fail_1553@88:0>](<fail_1553@88:0>:int)
          
          P[<init_1038@63:1>](<init_1038@63:0>:int,<init_1038@63:1>:int),
          P[<<<init_1038@63:3>@66:0>@78:0>](<init_1038@63:0>:int,<init_1038@63:1>:int,<<init_1038@63:2>@80:0>:int),
          (<init_1038@63:0> >= <init_1038@63:1>)
          |- P[<<init_1038@63:2>@80:0>](<init_1038@63:0>:int,<init_1038@63:1>:int,
                                        <<init_1038@63:2>@80:0>:int)
          
          P[<init_1038@63:1>](<init_1038@63:0>:int,<init_1038@63:1>:int),
          ((<<<init_1038@63:3>@66:0>@78:0> < <init_1038@63:1>) &&
           ((0 <= <<<init_1038@63:3>@66:0>@78:0>) && (<init_1038@63:0> = 0)))
          |- P[<<<init_1038@63:3>@66:0>@78:0>](<init_1038@63:0>:int,<init_1038@63:1>:int,
                                               <<<init_1038@63:3>@66:0>@78:0>:int)
          Yhorn (Wed Sep 25 10:52:05 JST 2013)


(0=0) & (v_sep_fail_1553_sep_88_sep_0($93)) -> 1=0.
(($93-1=0) & ($94=0) & (-$95<=0) & ($95-$96>=0)) & (v_sep_init_1038_sep_63_sep_2_sep_80_sep_0($94,$96,$95)) -> v_sep_fail_1553_sep_88_sep_0($93).
($97-$98>=0) & (v_sep_init_1038_sep_63_sep_3_sep_66_sep_0_sep_78_sep_0($97,$98,$99)) & (v_sep_init_1038_sep_63_sep_1($97,$98)) -> v_sep_init_1038_sep_63_sep_2_sep_80_sep_0($97,$98,$99).
(($97=0) & (-$100<=0) & (-$98+$100<0)) & (v_sep_init_1038_sep_63_sep_1($97,$98)) -> v_sep_init_1038_sep_63_sep_3_sep_66_sep_0_sep_78_sep_0($97,$98,$100).
$97=0 -> v_sep_init_1038_sep_63_sep_1($97,$98).


v_sep_fail_1553_sep_88_sep_0: X
v_sep_init_1038_sep_63_sep_1: X
v_sep_init_1038_sep_63_sep_2_sep_80_sep_0: X
v_sep_init_1038_sep_63_sep_3_sep_66_sep_0_sep_78_sep_0: X
......
v_sep_fail_1553_sep_88_sep_0: X
v_sep_init_1038_sep_63_sep_1: X
v_sep_init_1038_sep_63_sep_2_sep_80_sep_0: X
v_sep_init_1038_sep_63_sep_3_sep_66_sep_0_sep_78_sep_0: X
...
v_sep_fail_1553_sep_88_sep_0: X
v_sep_init_1038_sep_63_sep_1: X
v_sep_init_1038_sep_63_sep_2_sep_80_sep_0: X
v_sep_init_1038_sep_63_sep_3_sep_66_sep_0_sep_78_sep_0: X
.....
v_sep_fail_1553_sep_88_sep_0: X
v_sep_init_1038_sep_63_sep_1: X
v_sep_init_1038_sep_63_sep_2_sep_80_sep_0: X
v_sep_init_1038_sep_63_sep_3_sep_66_sep_0_sep_78_sep_0: X
......(0=0) & (v_sep_fail_1553_sep_88_sep_0($93)) -> 1=0.
(($93-1=0) & ($94=0) & (-$95<=0) & ($95-$96>=0)) & (v_sep_init_1038_sep_63_sep_2_sep_80_sep_0($94,$96,$95)) -> v_sep_fail_1553_sep_88_sep_0($93).
($97-$98>=0) & (v_sep_init_1038_sep_63_sep_3_sep_66_sep_0_sep_78_sep_0($97,$98,$99)) & (v_sep_init_1038_sep_63_sep_1($97,$98)) -> v_sep_init_1038_sep_63_sep_2_sep_80_sep_0($97,$98,$99).
(($97=0) & (-$100<=0) & (-$98+$100<0)) & (v_sep_init_1038_sep_63_sep_1($97,$98)) -> v_sep_init_1038_sep_63_sep_3_sep_66_sep_0_sep_78_sep_0($97,$98,$100).
$97=0 -> v_sep_init_1038_sep_63_sep_1($97,$98).

           (<init_1038@63:0> = 0) |- P[<init_1038@63:1>](<init_1038@63:0>:int,
                                                         <init_1038@63:1>:int)
        solution:
          P[<fail_1553@88:0>]($101:bool) = false
          P[<init_1038@63:1>]($118:int,$120:int) = true
          P[<<init_1038@63:2>@80:0>]($104:int,$106:int,$108:int) = ((1 + $108) <= $106)
          P[<<<init_1038@63:3>@66:0>@78:0>]($111:int,$113:int,$115:int) = ((1 + $115) <= $113)
        
      end HcSolver.solve_ub(7412)[4] (0.012998 sec.)
      begin HcSolver.check_validity(7656)[4]
        input:
          P[<fail_1553@88:0>](<fail_1553@88:0>:bool)|- bot
          
          P[<<init_1038@63:2>@80:0>](0:int,<k_make_array_u_1213@85:1>:int,<k_make_array_u_1213@85:0>:int),
          ((0 <= <k_make_array_u_1213@85:0>) &&
           ((<k_make_array_u_1213@85:0> >= <k_make_array_u_1213@85:1>) && <fail_1553@88:0>))
          |- P[<fail_1553@88:0>](<fail_1553@88:0>:bool)
          
          P[<init_1038@63:1>](<init_1038@63:0>:int,<init_1038@63:1>:int),
          P[<<<init_1038@63:3>@66:0>@78:0>](<init_1038@63:0>:int,<init_1038@63:1>:int,<<init_1038@63:2>@80:0>:int),
          (<init_1038@63:0> >= <init_1038@63:1>)
          |- P[<<init_1038@63:2>@80:0>](<init_1038@63:0>:int,<init_1038@63:1>:int,
                                        <<init_1038@63:2>@80:0>:int)
          
          P[<init_1038@63:1>](<init_1038@63:0>:int,<init_1038@63:1>:int),
          ((<init_1038@63:0> = 0) &&
           ((0 <= <<<init_1038@63:3>@66:0>@78:0>) && (<<<init_1038@63:3>@66:0>@78:0> < <init_1038@63:1>)))
          |- P[<<<init_1038@63:3>@66:0>@78:0>](<init_1038@63:0>:int,<init_1038@63:1>:int,
                                               <<<init_1038@63:3>@66:0>@78:0>:int)
          
           (<init_1038@63:0> = 0) |- P[<init_1038@63:1>](<init_1038@63:0>:int,
                                                         <init_1038@63:1>:int)
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        
      end HcSolver.check_validity(7656)[4] (0.008999 sec.)
      solution:
        P[<fail_1553@88:0>]($101:bool) = false
        P[<init_1038@63:1>]($118:int,$120:int) = true
        P[<<init_1038@63:2>@80:0>]($104:int,$106:int,$108:int) = ((1 + $108) <= $106)
        P[<<<init_1038@63:3>@66:0>@78:0>]($111:int,$113:int,$115:int) = ((1 + $115) <= $113)
    end YhornInterface.solve(7411)[3] (0.022996 sec.)
    
  end RefTypeInfer.infer_etrs(4250)[2] (0.132980 sec.)
  refinement types:
    main_1546: X
    f_1549: v1:int -> X
    f_1550: v1:int -> v2:int -> X
    f_1551: v1:int -> v2:int -> v3:int -> X
    main_1042: v1:int -> v2:int -> v3:int -> (v4:unit -> X) -> X
    k_main_1397: v1:int -> v2:int -> v3:int -> (v4:unit -> X) -> v6:bool -> X
    init_1038: v1:int ->
               v2:int ->
               (v3:{v3:int | ((1 + v3) <= v2)} -> (v4:int -> X) -> X) ->
               ((v7:{v7:int | ((1 + v7) <= v2)} -> (v8:int -> X) -> X) -> X) -> X
    f_k_main_1547: v1:bool -> v2:int -> v3:int -> v4:int -> (v5:unit -> X) -> (v7:int -> (v8:int -> X) -> X) -> X
    k_main_1447: v1:bool ->
                 v2:int -> v3:int -> v4:int -> (v5:unit -> X) -> (v7:int -> (v8:int -> X) -> X) -> v11:bool -> X
    make_array_1030: v1:int -> v2:int -> (v3:int -> X) -> X
    k_make_array_u_1213: v1:int -> v2:int -> (v3:int -> X) -> v5:bool -> X
    fail_1553: v1:{v1:bool | false} -> (v2:unit -> X) -> X
    f_1552: var103:int -> var102:int -> var101:int -> var100:unit -> X
    f_k_main_1548: var112:bool ->
                   var111:bool -> var110:int -> var109:int -> var108:int -> (var107:unit -> X) -> var105:int -> X
    fail_1554: var116:bool -> (var115:unit -> X) -> X
    k_make_array_u_1224: var122:int -> var121:int -> (var120:int -> X) -> var118:unit -> X
    k_update_1263: var133:int ->
                   var132:int ->
                   var131:int -> (var130:int -> (var129:int -> X) -> X) -> (var126:int -> X) -> var124:bool -> X
    update_1033: var143:int ->
                 (var142:int -> (var141:int -> X) -> X) -> var138:int -> var137:int -> (var136:int -> X) -> X
  abstraction types:
    main_1546: X
    f_1549: v1:int -> X
    f_1550: v1:int -> v2:int -> X
    f_1551: v1:int -> v2:int -> v3:int -> X
    main_1042: v1:int -> v2:int -> v3:int -> (v4:unit -> X) -> X
    k_main_1397: v1:int -> v2:int -> v3:int -> (v4:unit -> X) -> v6:bool -> X
    init_1038: v1:int ->
               v2:int ->
               (v3:int[v3 -> ((1 + v3) <= v2)] -> (v4:int -> X) -> X) ->
               ((v7:int[v7 -> ((1 + v7) <= v2)] -> (v8:int -> X) -> X) -> X) -> X
    f_k_main_1547: v1:bool -> v2:int -> v3:int -> v4:int -> (v5:unit -> X) -> (v7:int -> (v8:int -> X) -> X) -> X
    k_main_1447: v1:bool ->
                 v2:int -> v3:int -> v4:int -> (v5:unit -> X) -> (v7:int -> (v8:int -> X) -> X) -> v11:bool -> X
    make_array_1030: v1:int -> v2:int -> (v3:int -> X) -> X
    k_make_array_u_1213: v1:int -> v2:int -> (v3:int -> X) -> v5:bool -> X
    fail_1553: v1:bool -> (v2:unit -> X) -> X
    f_1552: var103:int -> var102:int -> var101:int -> var100:unit -> X
    f_k_main_1548: var112:bool ->
                   var111:bool -> var110:int -> var109:int -> var108:int -> (var107:unit -> X) -> var105:int -> X
    fail_1554: var116:bool -> (var115:unit -> X) -> X
    k_make_array_u_1224: var122:int -> var121:int -> (var120:int -> X) -> var118:unit -> X
    k_update_1263: var133:int ->
                   var132:int ->
                   var131:int -> (var130:int -> (var129:int -> X) -> X) -> (var126:int -> X) -> var124:bool -> X
    update_1033: var143:int ->
                 (var142:int -> (var141:int -> X) -> X) -> var138:int -> var137:int -> (var136:int -> X) -> X
  
end AbsTypeInfer.refine(4249)[1] (0.140978 sec.)
DONE!

Prefix of spurious counter-example::
0; 0; 0; 0; 0; 0; 0; 0; 0

Program with abstraction types (CEGAR-cycle 2)::
Main: main_1546
  main_1546 -> (rand_int f_1549)
  f_1549 x_1487 -> (rand_int (f_1550 x_1487))
  f_1550 x_1487 x_1500 -> (rand_int (f_1551 x_1487 x_1500))
  f_1551 x_1487 x_1500 x_1513 -> (main_1042 x_1487 x_1500 x_1513 (f_1552 x_1487 x_1500 x_1513))
  f_1552 x_1487 x_1500 x_1513 x_1484 -> end
  f_k_main_1547 b_1481 i_1045 k_1043 n_1044 k_main_1394 x_1404 when (
      0 <= i_1045) -> (k_main_1447 b_1481 i_1045 k_1043 n_1044 k_main_1394 x_1404 (i_1045 < n_1044))
  f_k_main_1547 b_1481 i_1045 k_1043 n_1044 k_main_1394 x_1404 when (
      not (0 <= i_1045)) -> (k_main_1447 b_1481 i_1045 k_1043 n_1044 k_main_1394 x_1404 false)
  f_k_main_1548 b_1477 b_1481 i_1045 k_1043 n_1044 k_main_1394 x_1451 when (x_1451 >= 1) -> (k_main_1394 ())
  f_k_main_1548 b_1477 b_1481 i_1045 k_1043 n_1044 k_main_1394 x_1451 when (
      not (x_1451 >= 1)) -> (fail_1554 true k_main_1394)
  fail_1553 b k -> {fail} => (k ())
  fail_1554 b k -> {fail} => (k ())
  init_1038 i_1039 n_1040 a_1041 k_init_1322 when (i_1039 >= n_1040) -> (k_init_1322 a_1041)
  init_1038 i_1039 n_1040 a_1041 k_init_1322 when (not (i_1039 >= n_1040)) ->
      (init_1038 (i_1039 + 1) n_1040 (update_1033 i_1039 a_1041 1) k_init_1322)
  k_main_1397 i_1045 k_1043 n_1044 k_main_1394 b_1481 when b_1481 ->
      (init_1038 k_1043 n_1044 (make_array_1030 n_1044) (f_k_main_1547 b_1481 i_1045 k_1043 n_1044 k_main_1394))
  k_main_1397 i_1045 k_1043 n_1044 k_main_1394 b_1481 when (not b_1481) -> (k_main_1394 ())
  k_main_1447 b_1481 i_1045 k_1043 n_1044 k_main_1394 x_1404 b_1477 when b_1477 ->
      (x_1404 i_1045 (f_k_main_1548 b_1477 b_1481 i_1045 k_1043 n_1044 k_main_1394))
  k_main_1447 b_1481 i_1045 k_1043 n_1044 k_main_1394 x_1404 b_1477 when (not b_1477) -> (k_main_1394 ())
  k_make_array_u_1213 i_1032 n_1031 k_make_array_1207 b_1225 when b_1225 ->
      (k_make_array_u_1224 i_1032 n_1031 k_make_array_1207 ())
  k_make_array_u_1213 i_1032 n_1031 k_make_array_1207 b_1225 when (not b_1225) ->
      (fail_1553 true (k_make_array_u_1224 i_1032 n_1031 k_make_array_1207))
  k_make_array_u_1224 i_1032 n_1031 k_make_array_1207 x_1210 -> (k_make_array_1207 0)
  k_update_1263 i_1034 j_1037 x_1036 a_1035 k_update_1260 b_1278 when b_1278 -> (k_update_1260 x_1036)
  k_update_1263 i_1034 j_1037 x_1036 a_1035 k_update_1260 b_1278 when (not b_1278) -> (a_1035 j_1037 k_update_1260)
  main_1042 k_1043 n_1044 i_1045 k_main_1394 when (k_1043 >= 0) ->
      (k_main_1397 i_1045 k_1043 n_1044 k_main_1394 (k_1043 <= 0))
  main_1042 k_1043 n_1044 i_1045 k_main_1394 when (not (k_1043 >= 0)) ->
      (k_main_1397 i_1045 k_1043 n_1044 k_main_1394 false)
  make_array_1030 n_1031 i_1032 k_make_array_1207 when (0 <= i_1032) ->
      (k_make_array_u_1213 i_1032 n_1031 k_make_array_1207 (i_1032 < n_1031))
  make_array_1030 n_1031 i_1032 k_make_array_1207 when (not (0 <= i_1032)) ->
      (k_make_array_u_1213 i_1032 n_1031 k_make_array_1207 false)
  update_1033 i_1034 a_1035 x_1036 j_1037 k_update_1260 when (j_1037 > (i_1034 - 1)) ->
      (k_update_1263 i_1034 j_1037 x_1036 a_1035 k_update_1260 (j_1037 <= i_1034))
  update_1033 i_1034 a_1035 x_1036 j_1037 k_update_1260 when (not (j_1037 > (i_1034 - 1))) ->
      (k_update_1263 i_1034 j_1037 x_1036 a_1035 k_update_1260 false)
Types:
  main_1546 : X
  fail_1553 : (x_1:bool[x_1] -> (unit -> X) -> X)
  fail_1554 : (x_1:bool[x_1] -> (unit -> X) -> X)
  init_1038 : (int ->
               x_2:int ->
               (x_4:int[x_2 >= x_4 + 1; x_4 >= 0] -> (int -> X) -> X) ->
               ((x_11:int[x_2 >= x_11 + 1; x_11 >= 0] -> (int -> X) -> X) -> X) -> X)
  
(2-1) Abstracting ... DONE!

(2-2) Checking HORS ... DONE!

Error trace::
  main_1546 ... --> 
  f_1549 ... --> 
  f_1550 ... --> 
  f_1551 ... --> 
  main_1042 [1/2] ... --> 
  k_main_1397 [1/2] ... --> 
  init_1038 [1/2] ... --> 
  f_k_main_1547 [1/2] ... --> 
  k_main_1447 [1/2] ... --> 
  make_array_1030 [1/2] ... --> 
  k_make_array_u_1213 [1/2] ... --> 
  k_make_array_u_1224 ... --> 
  f_k_main_1548 [2/2] ... --> 
  fail_1554 ... --> fail -->
  ERROR!

Spurious counter-example::
  0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 0; 1; 0

(2-3) Checking counter-example ... DONE!

(2-4) Discovering predicates ... 
begin AbsTypeInfer.refine(9034)[1]
  program:
    main_1546  | true = ((Random.int 0) f_1549)
    f_1549 x_1487 | true = ((Random.int 0) (f_1550 x_1487))
    f_1550 x_1487 x_1500 | true = ((Random.int 0) (f_1551 x_1487
                                                          x_1500))
    f_1551 x_1487 x_1500 x_1513 | true = (main_1042 x_1487
                                                    x_1500
                                                    x_1513
                                                    (f_1552 x_1487
                                                            x_1500
                                                            x_1513))
    f_1552 x_1487 x_1500 x_1513 x_1484 | true = end
    f_k_main_1547 b_1481 i_1045 k_1043 n_1044 k_main_1394 x_1404 | (0 <= i_1045) = (
    k_main_1447 b_1481
                i_1045
                k_1043
                n_1044
                k_main_1394
                x_1404
                (i_1045 < n_1044))
    f_k_main_1547 b_1481 i_1045 k_1043 n_1044 k_main_1394 x_1404 | (not (
                                                                    0 <= i_1045)) = (
    k_main_1447 b_1481
                i_1045
                k_1043
                n_1044
                k_main_1394
                x_1404
                false)
    f_k_main_1548 b_1477 b_1481 i_1045 k_1043 n_1044 k_main_1394 x_1451 | (
    x_1451 >= 1) = (k_main_1394 ())
    f_k_main_1548 b_1477 b_1481 i_1045 k_1043 n_1044 k_main_1394 x_1451 | (
    not (x_1451 >= 1)) = (fail_1554 true
                                    k_main_1394)
    fail_1553 b k | true = (fail ())
    fail_1554 b k | true = (fail ())
    init_1038 i_1039 n_1040 a_1041 k_init_1322 | (i_1039 >= n_1040) = (
    k_init_1322 a_1041)
    init_1038 i_1039 n_1040 a_1041 k_init_1322 | (not (i_1039 >= n_1040)) = (
    init_1038 (i_1039 + 1)
              n_1040
              (update_1033 i_1039
                           a_1041
                           1)
              k_init_1322)
    k_main_1397 i_1045 k_1043 n_1044 k_main_1394 b_1481 | b_1481 = (init_1038
                                                                    k_1043
                                                                    n_1044
                                                                    (
                                                                    make_array_1030 n_1044)
                                                                    (
                                                                    f_k_main_1547
                                                                    b_1481
                                                                    i_1045
                                                                    k_1043
                                                                    n_1044
                                                                    k_main_1394))
    k_main_1397 i_1045 k_1043 n_1044 k_main_1394 b_1481 | (not b_1481) = (
    k_main_1394 ())
    k_main_1447 b_1481 i_1045 k_1043 n_1044 k_main_1394 x_1404 b_1477 | b_1477 = (
    x_1404 i_1045
           (f_k_main_1548 b_1477
                          b_1481
                          i_1045
                          k_1043
                          n_1044
                          k_main_1394))
    k_main_1447 b_1481 i_1045 k_1043 n_1044 k_main_1394 x_1404 b_1477 | (
    not b_1477) = (k_main_1394 ())
    k_make_array_u_1213 i_1032 n_1031 k_make_array_1207 b_1225 | b_1225 = (
    k_make_array_u_1224 i_1032
                        n_1031
                        k_make_array_1207
                        ())
    k_make_array_u_1213 i_1032 n_1031 k_make_array_1207 b_1225 | (not b_1225) = (
    fail_1553 true
              (k_make_array_u_1224 i_1032
                                   n_1031
                                   k_make_array_1207))
    k_make_array_u_1224 i_1032 n_1031 k_make_array_1207 x_1210 | true = (
    k_make_array_1207 0)
    k_update_1263 i_1034 j_1037 x_1036 a_1035 k_update_1260 b_1278 | b_1278 = (
    k_update_1260 x_1036)
    k_update_1263 i_1034 j_1037 x_1036 a_1035 k_update_1260 b_1278 | (
    not b_1278) = (a_1035 j_1037
                          k_update_1260)
    main_1042 k_1043 n_1044 i_1045 k_main_1394 | (k_1043 >= 0) = (k_main_1397
                                                                    i_1045
                                                                    k_1043
                                                                    n_1044
                                                                    k_main_1394
                                                                    (
                                                                    k_1043 <= 0))
    main_1042 k_1043 n_1044 i_1045 k_main_1394 | (not (k_1043 >= 0)) = (
    k_main_1397 i_1045
                k_1043
                n_1044
                k_main_1394
                false)
    make_array_1030 n_1031 i_1032 k_make_array_1207 | (0 <= i_1032) = (
    k_make_array_u_1213 i_1032
                        n_1031
                        k_make_array_1207
                        (i_1032 < n_1031))
    make_array_1030 n_1031 i_1032 k_make_array_1207 | (not (0 <= i_1032)) = (
    k_make_array_u_1213 i_1032
                        n_1031
                        k_make_array_1207
                        false)
    update_1033 i_1034 a_1035 x_1036 j_1037 k_update_1260 | (j_1037 > (i_1034 - 1)) = (
    k_update_1263 i_1034
                  j_1037
                  x_1036
                  a_1035
                  k_update_1260
                  (j_1037 <= i_1034))
    update_1033 i_1034 a_1035 x_1036 j_1037 k_update_1260 | (not (j_1037 > (i_1034 - 1))) = (
    k_update_1263 i_1034
                  j_1037
                  x_1036
                  a_1035
                  k_update_1260
                  false)
    main_1546:X
    f_1549:int -> X
    f_1550:int -> int -> X
    f_1551:int -> int -> int -> X
    f_1552:int -> int -> int -> unit -> X
    f_k_main_1547:bool -> int -> int -> int -> (unit -> X) -> (int -> (int -> X) -> X) -> X
    f_k_main_1548:bool -> bool -> int -> int -> int -> (unit -> X) -> int -> X
    fail_1553:bool -> (unit -> X) -> X
    fail_1554:bool -> (unit -> X) -> X
    init_1038:int -> int -> (int -> (int -> X) -> X) -> ((int -> (int -> X) -> X) -> X) -> X
    k_main_1397:int -> int -> int -> (unit -> X) -> bool -> X
    k_main_1447:bool -> int -> int -> int -> (unit -> X) -> (int -> (int -> X) -> X) -> bool -> X
    k_make_array_u_1213:int -> int -> (int -> X) -> bool -> X
    k_make_array_u_1224:int -> int -> (int -> X) -> unit -> X
    k_update_1263:int -> int -> int -> (int -> (int -> X) -> X) -> (int -> X) -> bool -> X
    main_1042:int -> int -> int -> (unit -> X) -> X
    make_array_1030:int -> int -> (int -> X) -> X
    update_1033:int -> (int -> (int -> X) -> X) -> int -> int -> (int -> X) -> X
  inlined functions: f_1549,f_1550,f_1551,f_1552,f_k_main_1547,f_k_main_1548,k_main_1397,k_main_1447,k_make_array_u_1213,k_make_array_u_1224,k_update_1263,main_1042,make_array_1030,update_1033
  counterexample: 0:0:0:0:0:0:0:0:0:0:0:0:1:0
  error traces:
    [true.nop(<f_1549@94:0> = var144)
     [true.nop((<f_1550@97:0> = <f_1549@94:0>) && (<f_1550@97:1> = var145))
      [true.nop((<f_1551@100:0> = <f_1550@97:0>) && ((<f_1551@100:1> = <f_1550@97:1>) && (<f_1551@100:2> = var146)))
       [true.
        ((<main_1042@102:0> = <f_1551@100:0>) &&
         ((<main_1042@102:1> = <f_1551@100:1>) && (<main_1042@102:2> = <f_1551@100:2>)))
        [(<main_1042@102:0> >= 0).
         ((<k_main_1397@105:0> = <main_1042@102:2>) &&
          ((<k_main_1397@105:1> = <main_1042@102:0>) &&
           ((<k_main_1397@105:2> = <main_1042@102:1>) && (<k_main_1397@105:4> = (<main_1042@102:0> <= 0)))))
         [<k_main_1397@105:4>.((<init_1038@108:0> = <k_main_1397@105:1>) && (<init_1038@108:1> = <k_main_1397@105:2>))
          [(<init_1038@108:0> >= <init_1038@108:1>).true
           [true.
            ((<f_k_main_1547@113:0> = <k_main_1397@105:4>) &&
             ((<f_k_main_1547@113:1> = <k_main_1397@105:0>) &&
              ((<f_k_main_1547@113:2> = <k_main_1397@105:1>) && (<f_k_main_1547@113:3> = <k_main_1397@105:2>))))
            [(0 <= <f_k_main_1547@113:1>).
             ((<k_main_1447@116:0> = <f_k_main_1547@113:0>) &&
              ((<k_main_1447@116:1> = <f_k_main_1547@113:1>) &&
               ((<k_main_1447@116:2> = <f_k_main_1547@113:2>) &&
                ((<k_main_1447@116:3> = <f_k_main_1547@113:3>) &&
                 (<k_main_1447@116:6> = (<f_k_main_1547@113:1> < <f_k_main_1547@113:3>))))))
             [<k_main_1447@116:6>.(<<k_main_1447@116:5>@119:0> = <k_main_1447@116:1>)
              [true.(<<f_k_main_1547@113:5>@121:0> = <<k_main_1447@116:5>@119:0>)
               [true.(<<<init_1038@108:3>@111:0>@123:0> = <<f_k_main_1547@113:5>@121:0>)
                [true.(<<init_1038@108:2>@125:0> = <<<init_1038@108:3>@111:0>@123:0>)
                 [true.
                  ((<make_array_1030@127:0> = <k_main_1397@105:2>) &&
                   (<make_array_1030@127:1> = <<init_1038@108:2>@125:0>))
                  [(0 <= <make_array_1030@127:1>).
                   ((<k_make_array_u_1213@130:0> = <make_array_1030@127:1>) &&
                    ((<k_make_array_u_1213@130:1> = <make_array_1030@127:0>) &&
                     (<k_make_array_u_1213@130:3> = (<make_array_1030@127:1> < <make_array_1030@127:0>))))
                   [<k_make_array_u_1213@130:3>.
                    ((<k_make_array_u_1224@133:0> = <k_make_array_u_1213@130:0>) &&
                     ((<k_make_array_u_1224@133:1> = <k_make_array_u_1213@130:1>) && (<k_make_array_u_1224@133:3> = ())))
                    [true.(<<k_make_array_u_1224@133:2>@135:0> = 0)
                     [true.(<<k_make_array_u_1213@130:2>@137:0> = <<k_make_array_u_1224@133:2>@135:0>)
                      [true.(<<make_array_1030@127:2>@139:0> = <<k_make_array_u_1213@130:2>@137:0>)
                       [true.(<<<init_1038@108:2>@125:1>@141:0> = <<make_array_1030@127:2>@139:0>)
                        [true.(<<<<init_1038@108:3>@111:0>@123:1>@143:0> = <<<init_1038@108:2>@125:1>@141:0>)
                         [true.(<<<f_k_main_1547@113:5>@121:1>@145:0> = <<<<init_1038@108:3>@111:0>@123:1>@143:0>)
                          [true.(<<<k_main_1447@116:5>@119:1>@147:0> = <<<f_k_main_1547@113:5>@121:1>@145:0>)
                           [true.
                            ((<f_k_main_1548@149:0> = <k_main_1447@116:6>) &&
                             ((<f_k_main_1548@149:1> = <k_main_1447@116:0>) &&
                              ((<f_k_main_1548@149:2> = <k_main_1447@116:1>) &&
                               ((<f_k_main_1548@149:3> = <k_main_1447@116:2>) &&
                                ((<f_k_main_1548@149:4> = <k_main_1447@116:3>) &&
                                 (<f_k_main_1548@149:6> = <<<k_main_1447@116:5>@119:1>@147:0>))))))
                            [(not (<f_k_main_1548@149:6> >= 1)).(<fail_1554@152:0> = true)[true.error
  begin RefTypeInfer.infer_etrs(9035)[2]
    horn clauses:
      P[<fail_1554@152:0>](<fail_1554@152:0>:bool)|- bot
      
      P[<f_k_main_1548@149:6>](<f_k_main_1548@149:0>:bool,<f_k_main_1548@149:1>:bool,<f_k_main_1548@149:2>:int,<f_k_main_1548@149:3>:int,<f_k_main_1548@149:4>:int,<f_k_main_1548@149:6>:int),
      ((<f_k_main_1548@149:6> < 1) && <fail_1554@152:0>) |- P[<fail_1554@152:0>](
      <fail_1554@152:0>:bool)
      
      P[<k_main_1447@116:6>](<f_k_main_1548@149:1>:bool,<f_k_main_1548@149:2>:int,<f_k_main_1548@149:3>:int,<f_k_main_1548@149:4>:int,<f_k_main_1548@149:0>:bool),
      P[<<<k_main_1447@116:5>@119:1>@147:0>](<f_k_main_1548@149:1>:bool,<f_k_main_1548@149:2>:int,<f_k_main_1548@149:3>:int,<f_k_main_1548@149:4>:int,<f_k_main_1548@149:2>:int,<f_k_main_1548@149:6>:int),
      <f_k_main_1548@149:0>
      |- P[<f_k_main_1548@149:6>](<f_k_main_1548@149:0>:bool,<f_k_main_1548@149:1>:bool,
                                  <f_k_main_1548@149:2>:int,<f_k_main_1548@149:3>:int,
                                  <f_k_main_1548@149:4>:int,<f_k_main_1548@149:6>:int)
      
      P[<f_k_main_1547@113:3>](<k_main_1447@116:0>:bool,<k_main_1447@116:1>:int,<k_main_1447@116:2>:int,<k_main_1447@116:3>:int),
      P[<<<f_k_main_1547@113:5>@121:1>@145:0>](<k_main_1447@116:0>:bool,<k_main_1447@116:1>:int,<k_main_1447@116:2>:int,<k_main_1447@116:3>:int,<<k_main_1447@116:5>@119:0>:int,<<<k_main_1447@116:5>@119:1>@147:0>:int),
      (0 <= <k_main_1447@116:1>)
      |- P[<<<k_main_1447@116:5>@119:1>@147:0>](<k_main_1447@116:0>:bool,
                                                <k_main_1447@116:1>:int,
                                                <k_main_1447@116:2>:int,
                                                <k_main_1447@116:3>:int,
                                                <<k_main_1447@116:5>@119:0>:int,
                                                <<<k_main_1447@116:5>@119:1>@147:0>:int)
      
      P[<k_main_1397@105:4>](<f_k_main_1547@113:1>:int,<f_k_main_1547@113:2>:int,<f_k_main_1547@113:3>:int,<f_k_main_1547@113:0>:bool),
      P[<<<<init_1038@108:3>@111:0>@123:1>@143:0>](<f_k_main_1547@113:2>:int,<f_k_main_1547@113:3>:int,<<f_k_main_1547@113:5>@121:0>:int,<<<f_k_main_1547@113:5>@121:1>@145:0>:int),
      P[<f_k_main_1547@113:3>](<f_k_main_1547@113:0>:bool,<f_k_main_1547@113:1>:int,<f_k_main_1547@113:2>:int,<f_k_main_1547@113:3>:int),
      <f_k_main_1547@113:0>
      |- P[<<<f_k_main_1547@113:5>@121:1>@145:0>](<f_k_main_1547@113:0>:bool,
                                                  <f_k_main_1547@113:1>:int,
                                                  <f_k_main_1547@113:2>:int,
                                                  <f_k_main_1547@113:3>:int,
                                                  <<f_k_main_1547@113:5>@121:0>:int,
                                                  <<<f_k_main_1547@113:5>@121:1>@145:0>:int)
      
      P[<init_1038@108:1>](<init_1038@108:0>:int,<init_1038@108:1>:int),
      P[<<<init_1038@108:2>@125:1>@141:0>](<init_1038@108:0>:int,<init_1038@108:1>:int,<<<init_1038@108:3>@111:0>@123:0>:int,<<<<init_1038@108:3>@111:0>@123:1>@143:0>:int),
      (<init_1038@108:0> >= <init_1038@108:1>)
      |- P[<<<<init_1038@108:3>@111:0>@123:1>@143:0>](<init_1038@108:0>:int,
                                                      <init_1038@108:1>:int,
                                                      <<<init_1038@108:3>@111:0>@123:0>:int,
                                                      <<<<init_1038@108:3>@111:0>@123:1>@143:0>:int)
      
      P[<k_main_1397@105:4>](<f_k_main_1547@113:1>:int,<init_1038@108:0>:int,<init_1038@108:1>:int,true:bool),
      P[<<make_array_1030@127:2>@139:0>](<init_1038@108:1>:int,<<init_1038@108:2>@125:0>:int,<<<init_1038@108:2>@125:1>@141:0>:int),
      P[<init_1038@108:1>](<init_1038@108:0>:int,<init_1038@108:1>:int)|- P[<<<init_1038@108:2>@125:1>@141:0>](
      <init_1038@108:0>:int,<init_1038@108:1>:int,<<init_1038@108:2>@125:0>:int,
      <<<init_1038@108:2>@125:1>@141:0>:int)
      
      P[<make_array_1030@127:1>](<make_array_1030@127:0>:int,<make_array_1030@127:1>:int),
      P[<<k_make_array_u_1213@130:2>@137:0>](<make_array_1030@127:1>:int,<make_array_1030@127:0>:int,<<make_array_1030@127:2>@139:0>:int),
      (0 <= <make_array_1030@127:1>)
      |- P[<<make_array_1030@127:2>@139:0>](<make_array_1030@127:0>:int,
                                            <make_array_1030@127:1>:int,
                                            <<make_array_1030@127:2>@139:0>:int)
      
      P[<k_make_array_u_1213@130:3>](<k_make_array_u_1213@130:0>:int,<k_make_array_u_1213@130:1>:int,true:bool),
      P[<<k_make_array_u_1224@133:2>@135:0>](<k_make_array_u_1213@130:0>:int,<k_make_array_u_1213@130:1>:int,<<k_make_array_u_1213@130:2>@137:0>:int)|- P[<<k_make_array_u_1213@130:2>@137:0>](
      <k_make_array_u_1213@130:0>:int,<k_make_array_u_1213@130:1>:int,
      <<k_make_array_u_1213@130:2>@137:0>:int)
      
      P[<k_make_array_u_1224@133:3>](<k_make_array_u_1224@133:0>:int,<k_make_array_u_1224@133:1>:int,<k_make_array_u_1224@133:3>:unit),
      (<<k_make_array_u_1224@133:2>@135:0> = 0)
      |- P[<<k_make_array_u_1224@133:2>@135:0>](<k_make_array_u_1224@133:0>:int,
                                                <k_make_array_u_1224@133:1>:int,
                                                <<k_make_array_u_1224@133:2>@135:0>:int)
      
      P[<k_make_array_u_1213@130:3>](<k_make_array_u_1224@133:0>:int,<k_make_array_u_1224@133:1>:int,true:bool)|- P[<k_make_array_u_1224@133:3>](
      <k_make_array_u_1224@133:0>:int,<k_make_array_u_1224@133:1>:int,
      <k_make_array_u_1224@133:3>:unit)
      
      P[<make_array_1030@127:1>](<k_make_array_u_1213@130:1>:int,<k_make_array_u_1213@130:0>:int),
      ((0 <= <k_make_array_u_1213@130:0>) &&
       (<k_make_array_u_1213@130:3> = (<k_make_array_u_1213@130:0> < <k_make_array_u_1213@130:1>)))
      |- P[<k_make_array_u_1213@130:3>](<k_make_array_u_1213@130:0>:int,
                                        <k_make_array_u_1213@130:1>:int,
                                        <k_make_array_u_1213@130:3>:bool)
      
      P[<k_main_1397@105:4>](<f_k_main_1547@113:1>:int,<init_1038@108:0>:int,<make_array_1030@127:0>:int,true:bool),
      P[<<init_1038@108:2>@125:0>](<init_1038@108:0>:int,<make_array_1030@127:0>:int,<make_array_1030@127:1>:int)|- P[<make_array_1030@127:1>](
      <make_array_1030@127:0>:int,<make_array_1030@127:1>:int)
      
      P[<init_1038@108:1>](<init_1038@108:0>:int,<init_1038@108:1>:int),
      P[<<<init_1038@108:3>@111:0>@123:0>](<init_1038@108:0>:int,<init_1038@108:1>:int,<<init_1038@108:2>@125:0>:int),
      (<init_1038@108:0> >= <init_1038@108:1>)
      |- P[<<init_1038@108:2>@125:0>](<init_1038@108:0>:int,<init_1038@108:1>:int,
                                      <<init_1038@108:2>@125:0>:int)
      
      P[<k_main_1397@105:4>](<f_k_main_1547@113:1>:int,<init_1038@108:0>:int,<init_1038@108:1>:int,true:bool),
      P[<<f_k_main_1547@113:5>@121:0>](true:bool,<f_k_main_1547@113:1>:int,<init_1038@108:0>:int,<init_1038@108:1>:int,<<<init_1038@108:3>@111:0>@123:0>:int),
      P[<init_1038@108:1>](<init_1038@108:0>:int,<init_1038@108:1>:int)|- P[<<<init_1038@108:3>@111:0>@123:0>](
      <init_1038@108:0>:int,<init_1038@108:1>:int,<<<init_1038@108:3>@111:0>@123:0>:int)
      
      P[<f_k_main_1547@113:3>](<f_k_main_1547@113:0>:bool,<f_k_main_1547@113:1>:int,<f_k_main_1547@113:2>:int,<f_k_main_1547@113:3>:int),
      P[<<k_main_1447@116:5>@119:0>](<f_k_main_1547@113:0>:bool,<f_k_main_1547@113:1>:int,<f_k_main_1547@113:2>:int,<f_k_main_1547@113:3>:int,<<f_k_main_1547@113:5>@121:0>:int),
      (0 <= <f_k_main_1547@113:1>)
      |- P[<<f_k_main_1547@113:5>@121:0>](<f_k_main_1547@113:0>:bool,
                                          <f_k_main_1547@113:1>:int,<f_k_main_1547@113:2>:int,
                                          <f_k_main_1547@113:3>:int,<<f_k_main_1547@113:5>@121:0>:int)
      
      P[<k_main_1447@116:6>](<k_main_1447@116:0>:bool,<k_main_1447@116:1>:int,<k_main_1447@116:2>:int,<k_main_1447@116:3>:int,true:bool),
      (<<k_main_1447@116:5>@119:0> = <k_main_1447@116:1>)
      |- P[<<k_main_1447@116:5>@119:0>](<k_main_1447@116:0>:bool,<k_main_1447@116:1>:int,
                                        <k_main_1447@116:2>:int,<k_main_1447@116:3>:int,
                                        <<k_main_1447@116:5>@119:0>:int)
      
      P[<f_k_main_1547@113:3>](<k_main_1447@116:0>:bool,<k_main_1447@116:1>:int,<k_main_1447@116:2>:int,<k_main_1447@116:3>:int),
      ((0 <= <k_main_1447@116:1>) && (<k_main_1447@116:6> = (<k_main_1447@116:1> < <k_main_1447@116:3>)))
      |- P[<k_main_1447@116:6>](<k_main_1447@116:0>:bool,<k_main_1447@116:1>:int,
                                <k_main_1447@116:2>:int,<k_main_1447@116:3>:int,
                                <k_main_1447@116:6>:bool)
      
      P[<k_main_1397@105:4>](<f_k_main_1547@113:1>:int,<f_k_main_1547@113:2>:int,<f_k_main_1547@113:3>:int,<f_k_main_1547@113:0>:bool),
      <f_k_main_1547@113:0>
      |- P[<f_k_main_1547@113:3>](<f_k_main_1547@113:0>:bool,<f_k_main_1547@113:1>:int,
                                  <f_k_main_1547@113:2>:int,<f_k_main_1547@113:3>:int)
      
      P[<k_main_1397@105:4>](<k_main_1397@105:0>:int,<init_1038@108:0>:int,<init_1038@108:1>:int,true:bool)|- P[<init_1038@108:1>](
      <init_1038@108:0>:int,<init_1038@108:1>:int)
      
      P[<main_1042@102:2>](<k_main_1397@105:1>:int,<k_main_1397@105:2>:int,<k_main_1397@105:0>:int),
      ((<k_main_1397@105:1> >= 0) && (<k_main_1397@105:4> = (<k_main_1397@105:1> <= 0)))
      |- P[<k_main_1397@105:4>](<k_main_1397@105:0>:int,<k_main_1397@105:1>:int,
                                <k_main_1397@105:2>:int,<k_main_1397@105:4>:bool)
      
      P[<f_1551@100:2>](<main_1042@102:0>:int,<main_1042@102:1>:int,<main_1042@102:2>:int)|- P[<main_1042@102:2>](
      <main_1042@102:0>:int,<main_1042@102:1>:int,<main_1042@102:2>:int)
      
      P[<f_1550@97:1>](<f_1551@100:0>:int,<f_1551@100:1>:int)|- P[<f_1551@100:2>](
      <f_1551@100:0>:int,<f_1551@100:1>:int,<f_1551@100:2>:int)
      
      P[<f_1549@94:0>](<f_1550@97:0>:int)|- P[<f_1550@97:1>](<f_1550@97:0>:int,
                                                             <f_1550@97:1>:int)
      
      |- P[<f_1549@94:0>](<f_1549@94:0>:int)
    call trees:
      <main_1546@91>
        <f_1549@94>
          <f_1550@97>
            <f_1551@100>
              <main_1042@102>
                <k_main_1397@105>
                  <init_1038@108>
                  </<init_1038@108:3>@111>
                  <f_k_main_1547@113>
                    <k_main_1447@116>
                    </<k_main_1447@116:5>@119>
                  </<f_k_main_1547@113:5>@121>
                  <<<init_1038@108:3>@111:0>@123>
                  </<init_1038@108:2>@125>
                  <make_array_1030@127>
                    <k_make_array_u_1213@130>
                      <k_make_array_u_1224@133>
                      </<k_make_array_u_1224@133:2>@135>
                    </<k_make_array_u_1213@130:2>@137>
                  </<make_array_1030@127:2>@139>
                  <<<init_1038@108:2>@125:1>@141>
                  </<<<init_1038@108:3>@111:0>@123:1>@143>
                  <<<f_k_main_1547@113:5>@121:1>@145>
                    <<<k_main_1447@116:5>@119:1>@147>
                      <f_k_main_1548@149>
                        <fail_1554@152>
    inlined horn clauses:
      P[<fail_1554@152:0>](<fail_1554@152:0>:bool)|- bot
      
      P[<<<<init_1038@108:3>@111:0>@123:1>@143:0>](0:int,<f_k_main_1548@149:4>:int,<f_k_main_1548@149:2>:int,<f_k_main_1548@149:6>:int),
      ((<f_k_main_1548@149:2> < <f_k_main_1548@149:4>) &&
       ((0 <= <f_k_main_1548@149:2>) && ((<f_k_main_1548@149:6> < 1) && <fail_1554@152:0>)))
      |- P[<fail_1554@152:0>](<fail_1554@152:0>:bool)
      
      P[<init_1038@108:1>](<init_1038@108:0>:int,<init_1038@108:1>:int),
      P[<<<init_1038@108:2>@125:1>@141:0>](<init_1038@108:0>:int,<init_1038@108:1>:int,<<<init_1038@108:3>@111:0>@123:0>:int,<<<<init_1038@108:3>@111:0>@123:1>@143:0>:int),
      (<init_1038@108:0> >= <init_1038@108:1>)
      |- P[<<<<init_1038@108:3>@111:0>@123:1>@143:0>](<init_1038@108:0>:int,
                                                      <init_1038@108:1>:int,
                                                      <<<init_1038@108:3>@111:0>@123:0>:int,
                                                      <<<<init_1038@108:3>@111:0>@123:1>@143:0>:int)
      
      P[<<init_1038@108:2>@125:0>](0:int,<init_1038@108:1>:int,<<init_1038@108:2>@125:0>:int),
      P[<init_1038@108:1>](<init_1038@108:0>:int,<init_1038@108:1>:int),
      ((<init_1038@108:0> = 0) &&
       ((<<<init_1038@108:2>@125:1>@141:0> = 0) &&
        ((0 <= <<init_1038@108:2>@125:0>) && (<<init_1038@108:2>@125:0> < <init_1038@108:1>))))
      |- P[<<<init_1038@108:2>@125:1>@141:0>](<init_1038@108:0>:int,<init_1038@108:1>:int,
                                              <<init_1038@108:2>@125:0>:int,
                                              <<<init_1038@108:2>@125:1>@141:0>:int)
      
      P[<init_1038@108:1>](<init_1038@108:0>:int,<init_1038@108:1>:int),
      P[<<<init_1038@108:3>@111:0>@123:0>](<init_1038@108:0>:int,<init_1038@108:1>:int,<<init_1038@108:2>@125:0>:int),
      (<init_1038@108:0> >= <init_1038@108:1>)
      |- P[<<init_1038@108:2>@125:0>](<init_1038@108:0>:int,<init_1038@108:1>:int,
                                      <<init_1038@108:2>@125:0>:int)
      
      P[<init_1038@108:1>](<init_1038@108:0>:int,<init_1038@108:1>:int),
      ((<init_1038@108:0> = 0) &&
       ((0 <= <<<init_1038@108:3>@111:0>@123:0>) && (<<<init_1038@108:3>@111:0>@123:0> < <init_1038@108:1>)))
      |- P[<<<init_1038@108:3>@111:0>@123:0>](<init_1038@108:0>:int,<init_1038@108:1>:int,
                                              <<<init_1038@108:3>@111:0>@123:0>:int)
      
       (<init_1038@108:0> = 0) |- P[<init_1038@108:1>](<init_1038@108:0>:int,
                                                       <init_1038@108:1>:int)
    begin ParamSubstInfer.infer(14046)[3]
      
    end ParamSubstInfer.infer(14046)[3] (0.171974 sec.)
    inferred extra parameters:
      
    begin RefTypeInfer.elim_coeffs(14048)[3]
      
    end RefTypeInfer.elim_coeffs(14048)[3] (0.001000 sec.)
    begin YhornInterface.solve(14612)[3]
      begin HcSolver.solve_ub(14613)[4]
        encoded:
          P[<fail_1554@152:0>](<fail_1554@152:0>:int)|- bot
          
          P[<<<<init_1038@108:3>@111:0>@123:1>@143:0>](0:int,<f_k_main_1548@149:4>:int,<f_k_main_1548@149:2>:int,<f_k_main_1548@149:6>:int),
          ((<f_k_main_1548@149:2> < <f_k_main_1548@149:4>) &&
           ((0 <= <f_k_main_1548@149:2>) && ((<f_k_main_1548@149:6> < 1) && (<fail_1554@152:0> = 1))))
          |- P[<fail_1554@152:0>](<fail_1554@152:0>:int)
          
          P[<init_1038@108:1>](<init_1038@108:0>:int,<init_1038@108:1>:int),
          P[<<<init_1038@108:2>@125:1>@141:0>](<init_1038@108:0>:int,<init_1038@108:1>:int,<<<init_1038@108:3>@111:0>@123:0>:int,<<<<init_1038@108:3>@111:0>@123:1>@143:0>:int),
          (<init_1038@108:0> >= <init_1038@108:1>)
          |- P[<<<<init_1038@108:3>@111:0>@123:1>@143:0>](<init_1038@108:0>:int,
                                                          <init_1038@108:1>:int,
                                                          <<<init_1038@108:3>@111:0>@123:0>:int,
                                                          <<<<init_1038@108:3>@111:0>@123:1>@143:0>:int)
          
          P[<<init_1038@108:2>@125:0>](0:int,<init_1038@108:1>:int,<<init_1038@108:2>@125:0>:int),
          P[<init_1038@108:1>](<init_1038@108:0>:int,<init_1038@108:1>:int),
          ((<init_1038@108:0> = 0) &&
           ((<<<init_1038@108:2>@125:1>@141:0> = 0) &&
            ((0 <= <<init_1038@108:2>@125:0>) && (<<init_1038@108:2>@125:0> < <init_1038@108:1>))))
          |- P[<<<init_1038@108:2>@125:1>@141:0>](<init_1038@108:0>:int,
                                                  <init_1038@108:1>:int,
                                                  <<init_1038@108:2>@125:0>:int,
                                                  <<<init_1038@108:2>@125:1>@141:0>:int)
          
          P[<init_1038@108:1>](<init_1038@108:0>:int,<init_1038@108:1>:int),
          P[<<<init_1038@108:3>@111:0>@123:0>](<init_1038@108:0>:int,<init_1038@108:1>:int,<<init_1038@108:2>@125:0>:int),
          (<init_1038@108:0> >= <init_1038@108:1>)
          |- P[<<init_1038@108:2>@125:0>](<init_1038@108:0>:int,<init_1038@108:1>:int,
                                          <<init_1038@108:2>@125:0>:int)
          
          P[<init_1038@108:1>](<init_1038@108:0>:int,<init_1038@108:1>:int),
          ((<init_1038@108:0> = 0) &&
           ((0 <= <<<init_1038@108:3>@111:0>@123:0>) && (<<<init_1038@108:3>@111:0>@123:0> < <init_1038@108:1>)))
          |- P[<<<init_1038@108:3>@111:0>@123:0>](<init_1038@108:0>:int,
                                                  <init_1038@108:1>:int,
                                                  <<<init_1038@108:3>@111:0>@123:0>:int)
          
           (<init_1038@108:0> = 0) |- P[<init_1038@108:1>](<init_1038@108:0>:int,
                                                           <init_1038@108:1>:int)
        input to Yhorn:
          P[<fail_1554@152:0>](<fail_1554@152:0>:int)|- bot
          
          P[<<<<init_1038@108:3>@111:0>@123:1>@143:0>](var147:int,<f_k_main_1548@149:4>:int,<f_k_main_1548@149:2>:int,<f_k_main_1548@149:6>:int),
          ((<f_k_main_1548@149:6> < 1) &&
           ((0 <= <f_k_main_1548@149:2>) &&
            ((<f_k_main_1548@149:2> < <f_k_main_1548@149:4>) && ((var147 = 0) && (<fail_1554@152:0> = 1)))))
          |- P[<fail_1554@152:0>](<fail_1554@152:0>:int)
          
          P[<init_1038@108:1>](<init_1038@108:0>:int,<init_1038@108:1>:int),
          P[<<<init_1038@108:2>@125:1>@141:0>](<init_1038@108:0>:int,<init_1038@108:1>:int,<<<init_1038@108:3>@111:0>@123:0>:int,<<<<init_1038@108:3>@111:0>@123:1>@143:0>:int),
          (<init_1038@108:0> >= <init_1038@108:1>)
          |- P[<<<<init_1038@108:3>@111:0>@123:1>@143:0>](<init_1038@108:0>:int,
                                                          <init_1038@108:1>:int,
                                                          <<<init_1038@108:3>@111:0>@123:0>:int,
                                                          <<<<init_1038@108:3>@111:0>@123:1>@143:0>:int)
          
          P[<<init_1038@108:2>@125:0>](var148:int,<init_1038@108:1>:int,<<init_1038@108:2>@125:0>:int),
          P[<init_1038@108:1>](<init_1038@108:0>:int,<init_1038@108:1>:int),
          ((<<init_1038@108:2>@125:0> < <init_1038@108:1>) &&
           ((0 <= <<init_1038@108:2>@125:0>) &&
            ((var148 = 0) && ((<<<init_1038@108:2>@125:1>@141:0> = 0) && (<init_1038@108:0> = 0)))))
          |- P[<<<init_1038@108:2>@125:1>@141:0>](<init_1038@108:0>:int,
                                                  <init_1038@108:1>:int,
                                                  <<init_1038@108:2>@125:0>:int,
                                                  <<<init_1038@108:2>@125:1>@141:0>:int)
          
          P[<init_1038@108:1>](<init_1038@108:0>:int,<init_1038@108:1>:int),
          P[<<<init_1038@108:3>@111:0>@123:0>](<init_1038@108:0>:int,<init_1038@108:1>:int,<<init_1038@108:2>@125:0>:int),
          (<init_1038@108:0> >= <init_1038@108:1>)
          |- P[<<init_1038@108:2>@125:0>](<init_1038@108:0>:int,<init_1038@108:1>:int,
                                          <<init_1038@108:2>@125:0>:int)
          
          P[<init_1038@108:1>](<init_1038@108:0>:int,<init_1038@108:1>:int),
          ((<<<init_1038@108:3>@111:0>@123:0> < <init_1038@108:1>) &&
           ((0 <= <<<init_1038@108:3>@111:0>@123:0>) && (<init_1038@108:0> = 0)))
          |- P[<<<init_1038@108:3>@111:0>@123:0>](<init_1038@108:0>:int,
                                                  <init_1038@108:1>:int,
                                                  <<<init_1038@108:3>@111:0>@123:0>:int)
          Yhorn (Wed Sep 25 10:52:05 JST 2013)


(0=0) & (v_sep_fail_1554_sep_152_sep_0($185)) -> 1=0.
(($185-1=0) & ($186=0) & ($187-$188<0) & (-$187<=0) & ($189-1<0)) & (v_sep_init_1038_sep_108_sep_3_sep_111_sep_0_sep_123_sep_1_sep_143_sep_0($186,$188,$187,$189)) -> v_sep_fail_1554_sep_152_sep_0($185).
($190-$191>=0) & (v_sep_init_1038_sep_108_sep_2_sep_125_sep_1_sep_141_sep_0($190,$191,$192,$193)) & (v_sep_init_1038_sep_108_sep_1($190,$191)) -> v_sep_init_1038_sep_108_sep_3_sep_111_sep_0_sep_123_sep_1_sep_143_sep_0($190,$191,$192,$193).
(($190=0) & ($194=0) & ($195=0) & (-$196<=0) & (-$191+$196<0)) & (v_sep_init_1038_sep_108_sep_1($190,$191)) & (v_sep_init_1038_sep_108_sep_2_sep_125_sep_0($195,$191,$196)) -> v_sep_init_1038_sep_108_sep_2_sep_125_sep_1_sep_141_sep_0($190,$191,$196,$194).
($190-$191>=0) & (v_sep_init_1038_sep_108_sep_3_sep_111_sep_0_sep_123_sep_0($190,$191,$196)) & (v_sep_init_1038_sep_108_sep_1($190,$191)) -> v_sep_init_1038_sep_108_sep_2_sep_125_sep_0($190,$191,$196).
(($190=0) & (-$192<=0) & (-$191+$192<0)) & (v_sep_init_1038_sep_108_sep_1($190,$191)) -> v_sep_init_1038_sep_108_sep_3_sep_111_sep_0_sep_123_sep_0($190,$191,$192).
$190=0 -> v_sep_init_1038_sep_108_sep_1($190,$191).


v_sep_fail_1554_sep_152_sep_0: X
v_sep_init_1038_sep_108_sep_1: X
v_sep_init_1038_sep_108_sep_2_sep_125_sep_0: X
v_sep_init_1038_sep_108_sep_2_sep_125_sep_1_sep_141_sep_0: X
v_sep_init_1038_sep_108_sep_3_sep_111_sep_0_sep_123_sep_0: X
v_sep_init_1038_sep_108_sep_3_sep_111_sep_0_sep_123_sep_1_sep_143_sep_0: X
..........
v_sep_fail_1554_sep_152_sep_0: X
v_sep_init_1038_sep_108_sep_1: X
v_sep_init_1038_sep_108_sep_2_sep_125_sep_0: X
v_sep_init_1038_sep_108_sep_2_sep_125_sep_1_sep_141_sep_0: X
v_sep_init_1038_sep_108_sep_3_sep_111_sep_0_sep_123_sep_0: X
v_sep_init_1038_sep_108_sep_3_sep_111_sep_0_sep_123_sep_1_sep_143_sep_0: X
...
v_sep_fail_1554_sep_152_sep_0: X
v_sep_init_1038_sep_108_sep_1: X
v_sep_init_1038_sep_108_sep_2_sep_125_sep_0: X
v_sep_init_1038_sep_108_sep_2_sep_125_sep_1_sep_141_sep_0: X
v_sep_init_1038_sep_108_sep_3_sep_111_sep_0_sep_123_sep_0: X
v_sep_init_1038_sep_108_sep_3_sep_111_sep_0_sep_123_sep_1_sep_143_sep_0: X
.....
v_sep_fail_1554_sep_152_sep_0: X
v_sep_init_1038_sep_108_sep_1: X
v_sep_init_1038_sep_108_sep_2_sep_125_sep_0: X
v_sep_init_1038_sep_108_sep_2_sep_125_sep_1_sep_141_sep_0: X
v_sep_init_1038_sep_108_sep_3_sep_111_sep_0_sep_123_sep_0: X
v_sep_init_1038_sep_108_sep_3_sep_111_sep_0_sep_123_sep_1_sep_143_sep_0: X
.......
v_sep_fail_1554_sep_152_sep_0: X
v_sep_init_1038_sep_108_sep_1: X
v_sep_init_1038_sep_108_sep_2_sep_125_sep_0: X
v_sep_init_1038_sep_108_sep_2_sep_125_sep_1_sep_141_sep_0: X
v_sep_init_1038_sep_108_sep_3_sep_111_sep_0_sep_123_sep_0: X
v_sep_init_1038_sep_108_sep_3_sep_111_sep_0_sep_123_sep_1_sep_143_sep_0: X
.........
v_sep_fail_1554_sep_152_sep_0: X
v_sep_init_1038_sep_108_sep_1: X
v_sep_init_1038_sep_108_sep_2_sep_125_sep_0: X
v_sep_init_1038_sep_108_sep_2_sep_125_sep_1_sep_141_sep_0: X
v_sep_init_1038_sep_108_sep_3_sep_111_sep_0_sep_123_sep_0: X
v_sep_init_1038_sep_108_sep_3_sep_111_sep_0_sep_123_sep_1_sep_143_sep_0: X
..........(0=0) & (v_sep_fail_1554_sep_152_sep_0($185)) -> 1=0.
(($185-1=0) & ($186=0) & ($187-$188<0) & (-$187<=0) & ($189-1<0)) & (v_sep_init_1038_sep_108_sep_3_sep_111_sep_0_sep_123_sep_1_sep_143_sep_0($186,$188,$187,$189)) -> v_sep_fail_1554_sep_152_sep_0($185).
($190-$191>=0) & (v_sep_init_1038_sep_108_sep_2_sep_125_sep_1_sep_141_sep_0($190,$191,$192,$193)) & (v_sep_init_1038_sep_108_sep_1($190,$191)) -> v_sep_init_1038_sep_108_sep_3_sep_111_sep_0_sep_123_sep_1_sep_143_sep_0($190,$191,$192,$193).
(($190=0) & ($194=0) & ($195=0) & (-$196<=0) & (-$191+$196<0)) & (v_sep_init_1038_sep_108_sep_1($190,$191)) & (v_sep_init_1038_sep_108_sep_2_sep_125_sep_0($195,$191,$196)) -> v_sep_init_1038_sep_108_sep_2_sep_125_sep_1_sep_141_sep_0($190,$191,$196,$194).
($190-$191>=0) & (v_sep_init_1038_sep_108_sep_3_sep_111_sep_0_sep_123_sep_0($190,$191,$196)) & (v_sep_init_1038_sep_108_sep_1($190,$191)) -> v_sep_init_1038_sep_108_sep_2_sep_125_sep_0($190,$191,$196).
(($190=0) & (-$192<=0) & (-$191+$192<0)) & (v_sep_init_1038_sep_108_sep_1($190,$191)) -> v_sep_init_1038_sep_108_sep_3_sep_111_sep_0_sep_123_sep_0($190,$191,$192).
$190=0 -> v_sep_init_1038_sep_108_sep_1($190,$191).

           (<init_1038@108:0> = 0) |- P[<init_1038@108:1>](<init_1038@108:0>:int,
                                                           <init_1038@108:1>:int)
        solution:
          P[<fail_1554@152:0>]($197:bool) = false
          P[<init_1038@108:1>]($218:int,$220:int) = true
          P[<<init_1038@108:2>@125:0>]($223:int,$225:int,$227:int) = ($225 <= 0)
          P[<<<init_1038@108:2>@125:1>@141:0>]($209:int,$211:int,$213:int,$215:int) = ($211 <= 0)
          P[<<<init_1038@108:3>@111:0>@123:0>]($230:int,$232:int,$234:int) = ($230 <= 0)
          P[<<<<init_1038@108:3>@111:0>@123:1>@143:0>]($200:int,$202:int,$204:int,$206:int) = ($202 <= 0)
        
      end HcSolver.solve_ub(14613)[4] (0.020996 sec.)
      begin HcSolver.check_validity(15088)[4]
        input:
          P[<fail_1554@152:0>](<fail_1554@152:0>:bool)|- bot
          
          P[<<<<init_1038@108:3>@111:0>@123:1>@143:0>](0:int,<f_k_main_1548@149:4>:int,<f_k_main_1548@149:2>:int,<f_k_main_1548@149:6>:int),
          ((<f_k_main_1548@149:2> < <f_k_main_1548@149:4>) &&
           ((0 <= <f_k_main_1548@149:2>) && ((<f_k_main_1548@149:6> < 1) && <fail_1554@152:0>)))
          |- P[<fail_1554@152:0>](<fail_1554@152:0>:bool)
          
          P[<init_1038@108:1>](<init_1038@108:0>:int,<init_1038@108:1>:int),
          P[<<<init_1038@108:2>@125:1>@141:0>](<init_1038@108:0>:int,<init_1038@108:1>:int,<<<init_1038@108:3>@111:0>@123:0>:int,<<<<init_1038@108:3>@111:0>@123:1>@143:0>:int),
          (<init_1038@108:0> >= <init_1038@108:1>)
          |- P[<<<<init_1038@108:3>@111:0>@123:1>@143:0>](<init_1038@108:0>:int,
                                                          <init_1038@108:1>:int,
                                                          <<<init_1038@108:3>@111:0>@123:0>:int,
                                                          <<<<init_1038@108:3>@111:0>@123:1>@143:0>:int)
          
          P[<<init_1038@108:2>@125:0>](0:int,<init_1038@108:1>:int,<<init_1038@108:2>@125:0>:int),
          P[<init_1038@108:1>](<init_1038@108:0>:int,<init_1038@108:1>:int),
          ((<init_1038@108:0> = 0) &&
           ((<<<init_1038@108:2>@125:1>@141:0> = 0) &&
            ((0 <= <<init_1038@108:2>@125:0>) && (<<init_1038@108:2>@125:0> < <init_1038@108:1>))))
          |- P[<<<init_1038@108:2>@125:1>@141:0>](<init_1038@108:0>:int,
                                                  <init_1038@108:1>:int,
                                                  <<init_1038@108:2>@125:0>:int,
                                                  <<<init_1038@108:2>@125:1>@141:0>:int)
          
          P[<init_1038@108:1>](<init_1038@108:0>:int,<init_1038@108:1>:int),
          P[<<<init_1038@108:3>@111:0>@123:0>](<init_1038@108:0>:int,<init_1038@108:1>:int,<<init_1038@108:2>@125:0>:int),
          (<init_1038@108:0> >= <init_1038@108:1>)
          |- P[<<init_1038@108:2>@125:0>](<init_1038@108:0>:int,<init_1038@108:1>:int,
                                          <<init_1038@108:2>@125:0>:int)
          
          P[<init_1038@108:1>](<init_1038@108:0>:int,<init_1038@108:1>:int),
          ((<init_1038@108:0> = 0) &&
           ((0 <= <<<init_1038@108:3>@111:0>@123:0>) && (<<<init_1038@108:3>@111:0>@123:0> < <init_1038@108:1>)))
          |- P[<<<init_1038@108:3>@111:0>@123:0>](<init_1038@108:0>:int,
                                                  <init_1038@108:1>:int,
                                                  <<<init_1038@108:3>@111:0>@123:0>:int)
          
           (<init_1038@108:0> = 0) |- P[<init_1038@108:1>](<init_1038@108:0>:int,
                                                           <init_1038@108:1>:int)
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        
      end HcSolver.check_validity(15088)[4] (0.005000 sec.)
      solution:
        P[<fail_1554@152:0>]($197:bool) = false
        P[<init_1038@108:1>]($218:int,$220:int) = true
        P[<<init_1038@108:2>@125:0>]($223:int,$225:int,$227:int) = ($225 <= 0)
        P[<<<init_1038@108:2>@125:1>@141:0>]($209:int,$211:int,$213:int,$215:int) = ($211 <= 0)
        P[<<<init_1038@108:3>@111:0>@123:0>]($230:int,$232:int,$234:int) = ($230 <= 0)
        P[<<<<init_1038@108:3>@111:0>@123:1>@143:0>]($200:int,$202:int,$204:int,$206:int) = ($202 <= 0)
    end YhornInterface.solve(14612)[3] (0.025996 sec.)
    
  end RefTypeInfer.infer_etrs(9035)[2] (0.219966 sec.)
  refinement types:
    main_1546: X
    f_1549: v1:int -> X
    f_1550: v1:int -> v2:int -> X
    f_1551: v1:int -> v2:int -> v3:int -> X
    main_1042: v1:int -> v2:int -> v3:int -> (v4:unit -> X) -> X
    k_main_1397: v1:int -> v2:int -> v3:int -> (v4:unit -> X) -> v6:bool -> X
    init_1038: v1:int ->
               v2:int ->
               (v3:{v3:int | (v2 <= 0)} -> (v4:{v4:int | (v2 <= 0)} -> X) -> X) ->
               ((v7:{v7:int | (v1 <= 0)} -> (v8:{v8:int | (v2 <= 0)} -> X) -> X) -> X) -> X
    f_k_main_1547: v1:bool -> v2:int -> v3:int -> v4:int -> (v5:unit -> X) -> (v7:int -> (v8:int -> X) -> X) -> X
    k_main_1447: v1:bool ->
                 v2:int -> v3:int -> v4:int -> (v5:unit -> X) -> (v7:int -> (v8:int -> X) -> X) -> v11:bool -> X
    make_array_1030: v1:int -> v2:int -> (v3:int -> X) -> X
    k_make_array_u_1213: v1:int -> v2:int -> (v3:int -> X) -> v5:bool -> X
    k_make_array_u_1224: v1:int -> v2:int -> (v3:int -> X) -> v5:unit -> X
    f_k_main_1548: v1:bool -> v2:bool -> v3:int -> v4:int -> v5:int -> (v6:unit -> X) -> v8:int -> X
    fail_1554: v1:{v1:bool | false} -> (v2:unit -> X) -> X
    f_1552: var165:int -> var164:int -> var163:int -> var162:unit -> X
    fail_1553: var169:bool -> (var168:unit -> X) -> X
    k_update_1263: var180:int ->
                   var179:int ->
                   var178:int -> (var177:int -> (var176:int -> X) -> X) -> (var173:int -> X) -> var171:bool -> X
    update_1033: var190:int ->
                 (var189:int -> (var188:int -> X) -> X) -> var185:int -> var184:int -> (var183:int -> X) -> X
  abstraction types:
    main_1546: X
    f_1549: v1:int -> X
    f_1550: v1:int -> v2:int -> X
    f_1551: v1:int -> v2:int -> v3:int -> X
    main_1042: v1:int -> v2:int -> v3:int -> (v4:unit -> X) -> X
    k_main_1397: v1:int -> v2:int -> v3:int -> (v4:unit -> X) -> v6:bool -> X
    init_1038: v1:int ->
               v2:int ->
               (v3:int[v3 -> (v2 <= 0)] -> (v4:int[v4 -> (v2 <= 0)] -> X) -> X) ->
               ((v7:int[v7 -> (v1 <= 0)] -> (v8:int[v8 -> (v2 <= 0)] -> X) -> X) -> X) -> X
    f_k_main_1547: v1:bool -> v2:int -> v3:int -> v4:int -> (v5:unit -> X) -> (v7:int -> (v8:int -> X) -> X) -> X
    k_main_1447: v1:bool ->
                 v2:int -> v3:int -> v4:int -> (v5:unit -> X) -> (v7:int -> (v8:int -> X) -> X) -> v11:bool -> X
    make_array_1030: v1:int -> v2:int -> (v3:int -> X) -> X
    k_make_array_u_1213: v1:int -> v2:int -> (v3:int -> X) -> v5:bool -> X
    k_make_array_u_1224: v1:int -> v2:int -> (v3:int -> X) -> v5:unit -> X
    f_k_main_1548: v1:bool -> v2:bool -> v3:int -> v4:int -> v5:int -> (v6:unit -> X) -> v8:int -> X
    fail_1554: v1:bool -> (v2:unit -> X) -> X
    f_1552: var165:int -> var164:int -> var163:int -> var162:unit -> X
    fail_1553: var169:bool -> (var168:unit -> X) -> X
    k_update_1263: var180:int ->
                   var179:int ->
                   var178:int -> (var177:int -> (var176:int -> X) -> X) -> (var173:int -> X) -> var171:bool -> X
    update_1033: var190:int ->
                 (var189:int -> (var188:int -> X) -> X) -> var185:int -> var184:int -> (var183:int -> X) -> X
  
end AbsTypeInfer.refine(9034)[1] (0.225966 sec.)
DONE!

Prefix of spurious counter-example::
0; 0; 0; 0; 0; 0; 0; 0; 0

Program with abstraction types (CEGAR-cycle 3)::
Main: main_1546
  main_1546 -> (rand_int f_1549)
  f_1549 x_1487 -> (rand_int (f_1550 x_1487))
  f_1550 x_1487 x_1500 -> (rand_int (f_1551 x_1487 x_1500))
  f_1551 x_1487 x_1500 x_1513 -> (main_1042 x_1487 x_1500 x_1513 (f_1552 x_1487 x_1500 x_1513))
  f_1552 x_1487 x_1500 x_1513 x_1484 -> end
  f_k_main_1547 b_1481 i_1045 k_1043 n_1044 k_main_1394 x_1404 when (
      0 <= i_1045) -> (k_main_1447 b_1481 i_1045 k_1043 n_1044 k_main_1394 x_1404 (i_1045 < n_1044))
  f_k_main_1547 b_1481 i_1045 k_1043 n_1044 k_main_1394 x_1404 when (
      not (0 <= i_1045)) -> (k_main_1447 b_1481 i_1045 k_1043 n_1044 k_main_1394 x_1404 false)
  f_k_main_1548 b_1477 b_1481 i_1045 k_1043 n_1044 k_main_1394 x_1451 when (x_1451 >= 1) -> (k_main_1394 ())
  f_k_main_1548 b_1477 b_1481 i_1045 k_1043 n_1044 k_main_1394 x_1451 when (
      not (x_1451 >= 1)) -> (fail_1554 true k_main_1394)
  fail_1553 b k -> {fail} => (k ())
  fail_1554 b k -> {fail} => (k ())
  init_1038 i_1039 n_1040 a_1041 k_init_1322 when (i_1039 >= n_1040) -> (k_init_1322 a_1041)
  init_1038 i_1039 n_1040 a_1041 k_init_1322 when (not (i_1039 >= n_1040)) ->
      (init_1038 (i_1039 + 1) n_1040 (update_1033 i_1039 a_1041 1) k_init_1322)
  k_main_1397 i_1045 k_1043 n_1044 k_main_1394 b_1481 when b_1481 ->
      (init_1038 k_1043 n_1044 (make_array_1030 n_1044) (f_k_main_1547 b_1481 i_1045 k_1043 n_1044 k_main_1394))
  k_main_1397 i_1045 k_1043 n_1044 k_main_1394 b_1481 when (not b_1481) -> (k_main_1394 ())
  k_main_1447 b_1481 i_1045 k_1043 n_1044 k_main_1394 x_1404 b_1477 when b_1477 ->
      (x_1404 i_1045 (f_k_main_1548 b_1477 b_1481 i_1045 k_1043 n_1044 k_main_1394))
  k_main_1447 b_1481 i_1045 k_1043 n_1044 k_main_1394 x_1404 b_1477 when (not b_1477) -> (k_main_1394 ())
  k_make_array_u_1213 i_1032 n_1031 k_make_array_1207 b_1225 when b_1225 ->
      (k_make_array_u_1224 i_1032 n_1031 k_make_array_1207 ())
  k_make_array_u_1213 i_1032 n_1031 k_make_array_1207 b_1225 when (not b_1225) ->
      (fail_1553 true (k_make_array_u_1224 i_1032 n_1031 k_make_array_1207))
  k_make_array_u_1224 i_1032 n_1031 k_make_array_1207 x_1210 -> (k_make_array_1207 0)
  k_update_1263 i_1034 j_1037 x_1036 a_1035 k_update_1260 b_1278 when b_1278 -> (k_update_1260 x_1036)
  k_update_1263 i_1034 j_1037 x_1036 a_1035 k_update_1260 b_1278 when (not b_1278) -> (a_1035 j_1037 k_update_1260)
  main_1042 k_1043 n_1044 i_1045 k_main_1394 when (k_1043 >= 0) ->
      (k_main_1397 i_1045 k_1043 n_1044 k_main_1394 (k_1043 <= 0))
  main_1042 k_1043 n_1044 i_1045 k_main_1394 when (not (k_1043 >= 0)) ->
      (k_main_1397 i_1045 k_1043 n_1044 k_main_1394 false)
  make_array_1030 n_1031 i_1032 k_make_array_1207 when (0 <= i_1032) ->
      (k_make_array_u_1213 i_1032 n_1031 k_make_array_1207 (i_1032 < n_1031))
  make_array_1030 n_1031 i_1032 k_make_array_1207 when (not (0 <= i_1032)) ->
      (k_make_array_u_1213 i_1032 n_1031 k_make_array_1207 false)
  update_1033 i_1034 a_1035 x_1036 j_1037 k_update_1260 when (j_1037 > (i_1034 - 1)) ->
      (k_update_1263 i_1034 j_1037 x_1036 a_1035 k_update_1260 (j_1037 <= i_1034))
  update_1033 i_1034 a_1035 x_1036 j_1037 k_update_1260 when (not (j_1037 > (i_1034 - 1))) ->
      (k_update_1263 i_1034 j_1037 x_1036 a_1035 k_update_1260 false)
Types:
  main_1546 : X
  fail_1553 : (x_1:bool[x_1] -> (unit -> X) -> X)
  fail_1554 : (x_1:bool[x_1] -> (unit -> X) -> X)
  init_1038 : (x_1:int ->
               x_2:int ->
               (x_4:int[x_2 <= 0; x_2 >= x_4 + 1; x_4 >= 0] -> (int[x_2 <= 0] -> X) -> X) ->
               ((x_11:int[x_1 <= 0; x_2 >= x_11 + 1; x_11 >= 0] -> (int[x_2 <= 0] -> X) -> X) -> X) -> X)
  
(3-1) Abstracting ... DONE!

(3-2) Checking HORS ... DONE!

Filter option enabled.
Restart CEGAR-loop.
Program with abstraction types (CEGAR-cycle 4)::
Main: main_1546
  main_1546 -> (rand_int f_1549)
  f_1549 x_1487 -> (rand_int (f_1550 x_1487))
  f_1550 x_1487 x_1500 -> (rand_int (f_1551 x_1487 x_1500))
  f_1551 x_1487 x_1500 x_1513 -> (main_1042 x_1487 x_1500 x_1513 (f_1552 x_1487 x_1500 x_1513))
  f_1552 x_1487 x_1500 x_1513 x_1484 -> end
  f_k_main_1547 b_1481 i_1045 k_1043 n_1044 k_main_1394 x_1404 when (
      0 <= i_1045) -> (k_main_1447 b_1481 i_1045 k_1043 n_1044 k_main_1394 x_1404 (i_1045 < n_1044))
  f_k_main_1547 b_1481 i_1045 k_1043 n_1044 k_main_1394 x_1404 when (
      not (0 <= i_1045)) -> (k_main_1447 b_1481 i_1045 k_1043 n_1044 k_main_1394 x_1404 false)
  f_k_main_1548 b_1477 b_1481 i_1045 k_1043 n_1044 k_main_1394 x_1451 when (x_1451 >= 1) -> (k_main_1394 ())
  f_k_main_1548 b_1477 b_1481 i_1045 k_1043 n_1044 k_main_1394 x_1451 when (
      not (x_1451 >= 1)) -> (fail_1554 true k_main_1394)
  fail_1553 b k -> {fail} => (k ())
  fail_1554 b k -> {fail} => (k ())
  init_1038 i_1039 n_1040 a_1041 k_init_1322 when (i_1039 >= n_1040) -> (k_init_1322 a_1041)
  init_1038 i_1039 n_1040 a_1041 k_init_1322 when (not (i_1039 >= n_1040)) ->
      (init_1038 (i_1039 + 1) n_1040 (update_1033 i_1039 a_1041 1) k_init_1322)
  k_main_1397 i_1045 k_1043 n_1044 k_main_1394 b_1481 when b_1481 ->
      (init_1038 k_1043 n_1044 (make_array_1030 n_1044) (f_k_main_1547 b_1481 i_1045 k_1043 n_1044 k_main_1394))
  k_main_1397 i_1045 k_1043 n_1044 k_main_1394 b_1481 when (not b_1481) -> (k_main_1394 ())
  k_main_1447 b_1481 i_1045 k_1043 n_1044 k_main_1394 x_1404 b_1477 when b_1477 ->
      (x_1404 i_1045 (f_k_main_1548 b_1477 b_1481 i_1045 k_1043 n_1044 k_main_1394))
  k_main_1447 b_1481 i_1045 k_1043 n_1044 k_main_1394 x_1404 b_1477 when (not b_1477) -> (k_main_1394 ())
  k_make_array_u_1213 i_1032 n_1031 k_make_array_1207 b_1225 when b_1225 ->
      (k_make_array_u_1224 i_1032 n_1031 k_make_array_1207 ())
  k_make_array_u_1213 i_1032 n_1031 k_make_array_1207 b_1225 when (not b_1225) ->
      (fail_1553 true (k_make_array_u_1224 i_1032 n_1031 k_make_array_1207))
  k_make_array_u_1224 i_1032 n_1031 k_make_array_1207 x_1210 -> (k_make_array_1207 0)
  k_update_1263 i_1034 j_1037 x_1036 a_1035 k_update_1260 b_1278 when b_1278 -> (k_update_1260 x_1036)
  k_update_1263 i_1034 j_1037 x_1036 a_1035 k_update_1260 b_1278 when (not b_1278) -> (a_1035 j_1037 k_update_1260)
  main_1042 k_1043 n_1044 i_1045 k_main_1394 when (k_1043 >= 0) ->
      (k_main_1397 i_1045 k_1043 n_1044 k_main_1394 (k_1043 <= 0))
  main_1042 k_1043 n_1044 i_1045 k_main_1394 when (not (k_1043 >= 0)) ->
      (k_main_1397 i_1045 k_1043 n_1044 k_main_1394 false)
  make_array_1030 n_1031 i_1032 k_make_array_1207 when (0 <= i_1032) ->
      (k_make_array_u_1213 i_1032 n_1031 k_make_array_1207 (i_1032 < n_1031))
  make_array_1030 n_1031 i_1032 k_make_array_1207 when (not (0 <= i_1032)) ->
      (k_make_array_u_1213 i_1032 n_1031 k_make_array_1207 false)
  update_1033 i_1034 a_1035 x_1036 j_1037 k_update_1260 when (j_1037 > (i_1034 - 1)) ->
      (k_update_1263 i_1034 j_1037 x_1036 a_1035 k_update_1260 (j_1037 <= i_1034))
  update_1033 i_1034 a_1035 x_1036 j_1037 k_update_1260 when (not (j_1037 > (i_1034 - 1))) ->
      (k_update_1263 i_1034 j_1037 x_1036 a_1035 k_update_1260 false)
Types:
  main_1546 : X
  fail_1553 : (x_1:bool[x_1] -> (unit -> X) -> X)
  fail_1554 : (x_1:bool[x_1] -> (unit -> X) -> X)
  init_1038 : (x_1:int ->
               x_2:int ->
               (x_4:int[x_2 <= 0; x_2 >= x_4 + 1; x_4 >= 0] -> (int[x_2 <= 0] -> X) -> X) ->
               ((x_11:int[x_1 <= 0; x_2 >= x_11 + 1; x_11 >= 0] -> (int[x_2 <= 0] -> X) -> X) -> X) -> X)
  
(4-1) Abstracting ... DONE!

(4-2) Checking HORS ... DONE!

Error trace::
  main_1546 ... --> 
  f_1549 ... --> 
  f_1550 ... --> 
  f_1551 ... --> 
  main_1042 [1/2] ... --> 
  k_main_1397 [1/2] ... --> 
  init_1038 [2/2] ... --> 
  init_1038 [1/2] ... --> 
  f_k_main_1547 [1/2] ... --> 
  k_main_1447 [1/2] ... --> 
  update_1033 [1/2] ... --> 
  k_update_1263 [1/2] ... --> 
  f_k_main_1548 [2/2] ... --> 
  fail_1554 ... --> fail -->
  ERROR!

Spurious counter-example::
  0; 0; 0; 0; 0; 0; 1; 0; 0; 0; 0; 0; 1; 0

(4-3) Checking counter-example ... DONE!

(4-4) Discovering predicates ... 
begin AbsTypeInfer.refine(21415)[1]
  program:
    main_1546  | true = ((Random.int 0) f_1549)
    f_1549 x_1487 | true = ((Random.int 0) (f_1550 x_1487))
    f_1550 x_1487 x_1500 | true = ((Random.int 0) (f_1551 x_1487
                                                          x_1500))
    f_1551 x_1487 x_1500 x_1513 | true = (main_1042 x_1487
                                                    x_1500
                                                    x_1513
                                                    (f_1552 x_1487
                                                            x_1500
                                                            x_1513))
    f_1552 x_1487 x_1500 x_1513 x_1484 | true = end
    f_k_main_1547 b_1481 i_1045 k_1043 n_1044 k_main_1394 x_1404 | (0 <= i_1045) = (
    k_main_1447 b_1481
                i_1045
                k_1043
                n_1044
                k_main_1394
                x_1404
                (i_1045 < n_1044))
    f_k_main_1547 b_1481 i_1045 k_1043 n_1044 k_main_1394 x_1404 | (not (
                                                                    0 <= i_1045)) = (
    k_main_1447 b_1481
                i_1045
                k_1043
                n_1044
                k_main_1394
                x_1404
                false)
    f_k_main_1548 b_1477 b_1481 i_1045 k_1043 n_1044 k_main_1394 x_1451 | (
    x_1451 >= 1) = (k_main_1394 ())
    f_k_main_1548 b_1477 b_1481 i_1045 k_1043 n_1044 k_main_1394 x_1451 | (
    not (x_1451 >= 1)) = (fail_1554 true
                                    k_main_1394)
    fail_1553 b k | true = (fail ())
    fail_1554 b k | true = (fail ())
    init_1038 i_1039 n_1040 a_1041 k_init_1322 | (i_1039 >= n_1040) = (
    k_init_1322 a_1041)
    init_1038 i_1039 n_1040 a_1041 k_init_1322 | (not (i_1039 >= n_1040)) = (
    init_1038 (i_1039 + 1)
              n_1040
              (update_1033 i_1039
                           a_1041
                           1)
              k_init_1322)
    k_main_1397 i_1045 k_1043 n_1044 k_main_1394 b_1481 | b_1481 = (init_1038
                                                                    k_1043
                                                                    n_1044
                                                                    (
                                                                    make_array_1030 n_1044)
                                                                    (
                                                                    f_k_main_1547
                                                                    b_1481
                                                                    i_1045
                                                                    k_1043
                                                                    n_1044
                                                                    k_main_1394))
    k_main_1397 i_1045 k_1043 n_1044 k_main_1394 b_1481 | (not b_1481) = (
    k_main_1394 ())
    k_main_1447 b_1481 i_1045 k_1043 n_1044 k_main_1394 x_1404 b_1477 | b_1477 = (
    x_1404 i_1045
           (f_k_main_1548 b_1477
                          b_1481
                          i_1045
                          k_1043
                          n_1044
                          k_main_1394))
    k_main_1447 b_1481 i_1045 k_1043 n_1044 k_main_1394 x_1404 b_1477 | (
    not b_1477) = (k_main_1394 ())
    k_make_array_u_1213 i_1032 n_1031 k_make_array_1207 b_1225 | b_1225 = (
    k_make_array_u_1224 i_1032
                        n_1031
                        k_make_array_1207
                        ())
    k_make_array_u_1213 i_1032 n_1031 k_make_array_1207 b_1225 | (not b_1225) = (
    fail_1553 true
              (k_make_array_u_1224 i_1032
                                   n_1031
                                   k_make_array_1207))
    k_make_array_u_1224 i_1032 n_1031 k_make_array_1207 x_1210 | true = (
    k_make_array_1207 0)
    k_update_1263 i_1034 j_1037 x_1036 a_1035 k_update_1260 b_1278 | b_1278 = (
    k_update_1260 x_1036)
    k_update_1263 i_1034 j_1037 x_1036 a_1035 k_update_1260 b_1278 | (
    not b_1278) = (a_1035 j_1037
                          k_update_1260)
    main_1042 k_1043 n_1044 i_1045 k_main_1394 | (k_1043 >= 0) = (k_main_1397
                                                                    i_1045
                                                                    k_1043
                                                                    n_1044
                                                                    k_main_1394
                                                                    (
                                                                    k_1043 <= 0))
    main_1042 k_1043 n_1044 i_1045 k_main_1394 | (not (k_1043 >= 0)) = (
    k_main_1397 i_1045
                k_1043
                n_1044
                k_main_1394
                false)
    make_array_1030 n_1031 i_1032 k_make_array_1207 | (0 <= i_1032) = (
    k_make_array_u_1213 i_1032
                        n_1031
                        k_make_array_1207
                        (i_1032 < n_1031))
    make_array_1030 n_1031 i_1032 k_make_array_1207 | (not (0 <= i_1032)) = (
    k_make_array_u_1213 i_1032
                        n_1031
                        k_make_array_1207
                        false)
    update_1033 i_1034 a_1035 x_1036 j_1037 k_update_1260 | (j_1037 > (i_1034 - 1)) = (
    k_update_1263 i_1034
                  j_1037
                  x_1036
                  a_1035
                  k_update_1260
                  (j_1037 <= i_1034))
    update_1033 i_1034 a_1035 x_1036 j_1037 k_update_1260 | (not (j_1037 > (i_1034 - 1))) = (
    k_update_1263 i_1034
                  j_1037
                  x_1036
                  a_1035
                  k_update_1260
                  false)
    main_1546:X
    f_1549:int -> X
    f_1550:int -> int -> X
    f_1551:int -> int -> int -> X
    f_1552:int -> int -> int -> unit -> X
    f_k_main_1547:bool -> int -> int -> int -> (unit -> X) -> (int -> (int -> X) -> X) -> X
    f_k_main_1548:bool -> bool -> int -> int -> int -> (unit -> X) -> int -> X
    fail_1553:bool -> (unit -> X) -> X
    fail_1554:bool -> (unit -> X) -> X
    init_1038:int -> int -> (int -> (int -> X) -> X) -> ((int -> (int -> X) -> X) -> X) -> X
    k_main_1397:int -> int -> int -> (unit -> X) -> bool -> X
    k_main_1447:bool -> int -> int -> int -> (unit -> X) -> (int -> (int -> X) -> X) -> bool -> X
    k_make_array_u_1213:int -> int -> (int -> X) -> bool -> X
    k_make_array_u_1224:int -> int -> (int -> X) -> unit -> X
    k_update_1263:int -> int -> int -> (int -> (int -> X) -> X) -> (int -> X) -> bool -> X
    main_1042:int -> int -> int -> (unit -> X) -> X
    make_array_1030:int -> int -> (int -> X) -> X
    update_1033:int -> (int -> (int -> X) -> X) -> int -> int -> (int -> X) -> X
  inlined functions: f_1549,f_1550,f_1551,f_1552,f_k_main_1547,f_k_main_1548,k_main_1397,k_main_1447,k_make_array_u_1213,k_make_array_u_1224,k_update_1263,main_1042,make_array_1030,update_1033
  counterexample: 0:0:0:0:0:0:1:0:0:0:0:0:1:0
  error traces:
    [true.nop(<f_1549@158:0> = var191)
     [true.nop((<f_1550@161:0> = <f_1549@158:0>) && (<f_1550@161:1> = var192))
      [true.nop((<f_1551@164:0> = <f_1550@161:0>) && ((<f_1551@164:1> = <f_1550@161:1>) && (<f_1551@164:2> = var193)))
       [true.
        ((<main_1042@166:0> = <f_1551@164:0>) &&
         ((<main_1042@166:1> = <f_1551@164:1>) && (<main_1042@166:2> = <f_1551@164:2>)))
        [(<main_1042@166:0> >= 0).
         ((<k_main_1397@169:0> = <main_1042@166:2>) &&
          ((<k_main_1397@169:1> = <main_1042@166:0>) &&
           ((<k_main_1397@169:2> = <main_1042@166:1>) && (<k_main_1397@169:4> = (<main_1042@166:0> <= 0)))))
         [<k_main_1397@169:4>.((<init_1038@172:0> = <k_main_1397@169:1>) && (<init_1038@172:1> = <k_main_1397@169:2>))
          [(not (<init_1038@172:0> >= <init_1038@172:1>)).
           ((<init_1038@175:0> = (<init_1038@172:0> + 1)) && (<init_1038@175:1> = <init_1038@172:1>))
           [(<init_1038@175:0> >= <init_1038@175:1>).true
            [true.true
             [true.
              ((<f_k_main_1547@182:0> = <k_main_1397@169:4>) &&
               ((<f_k_main_1547@182:1> = <k_main_1397@169:0>) &&
                ((<f_k_main_1547@182:2> = <k_main_1397@169:1>) && (<f_k_main_1547@182:3> = <k_main_1397@169:2>))))
              [(0 <= <f_k_main_1547@182:1>).
               ((<k_main_1447@185:0> = <f_k_main_1547@182:0>) &&
                ((<k_main_1447@185:1> = <f_k_main_1547@182:1>) &&
                 ((<k_main_1447@185:2> = <f_k_main_1547@182:2>) &&
                  ((<k_main_1447@185:3> = <f_k_main_1547@182:3>) &&
                   (<k_main_1447@185:6> = (<f_k_main_1547@182:1> < <f_k_main_1547@182:3>))))))
               [<k_main_1447@185:6>.(<<k_main_1447@185:5>@188:0> = <k_main_1447@185:1>)
                [true.(<<f_k_main_1547@182:5>@190:0> = <<k_main_1447@185:5>@188:0>)
                 [true.(<<<init_1038@172:3>@180:0>@192:0> = <<f_k_main_1547@182:5>@190:0>)
                  [true.(<<<init_1038@175:3>@178:0>@194:0> = <<<init_1038@172:3>@180:0>@192:0>)
                   [true.(<<init_1038@175:2>@196:0> = <<<init_1038@175:3>@178:0>@194:0>)
                    [true.
                     ((<update_1033@198:0> = <init_1038@172:0>) &&
                      ((<update_1033@198:2> = 1) && (<update_1033@198:3> = <<init_1038@175:2>@196:0>)))
                     [(<update_1033@198:3> > (<update_1033@198:0> - 1)).
                      ((<k_update_1263@201:0> = <update_1033@198:0>) &&
                       ((<k_update_1263@201:1> = <update_1033@198:3>) &&
                        ((<k_update_1263@201:2> = <update_1033@198:2>) &&
                         (<k_update_1263@201:5> = (<update_1033@198:3> <= <update_1033@198:0>)))))
                      [<k_update_1263@201:5>.(<<k_update_1263@201:4>@204:0> = <k_update_1263@201:2>)
                       [true.(<<update_1033@198:4>@206:0> = <<k_update_1263@201:4>@204:0>)
                        [true.(<<<init_1038@175:2>@196:1>@208:0> = <<update_1033@198:4>@206:0>)
                         [true.(<<<<init_1038@175:3>@178:0>@194:1>@210:0> = <<<init_1038@175:2>@196:1>@208:0>)
                          [true.(<<<<init_1038@172:3>@180:0>@192:1>@212:0> = <<<<init_1038@175:3>@178:0>@194:1>@210:0>)
                           [true.(<<<f_k_main_1547@182:5>@190:1>@214:0> = <<<<init_1038@172:3>@180:0>@192:1>@212:0>)
                            [true.(<<<k_main_1447@185:5>@188:1>@216:0> = <<<f_k_main_1547@182:5>@190:1>@214:0>)
                             [true.
                              ((<f_k_main_1548@218:0> = <k_main_1447@185:6>) &&
                               ((<f_k_main_1548@218:1> = <k_main_1447@185:0>) &&
                                ((<f_k_main_1548@218:2> = <k_main_1447@185:1>) &&
                                 ((<f_k_main_1548@218:3> = <k_main_1447@185:2>) &&
                                  ((<f_k_main_1548@218:4> = <k_main_1447@185:3>) &&
                                   (<f_k_main_1548@218:6> = <<<k_main_1447@185:5>@188:1>@216:0>))))))
                              [(not (<f_k_main_1548@218:6> >= 1)).(<fail_1554@221:0> = true)[true.error
  begin RefTypeInfer.infer_etrs(21416)[2]
    horn clauses:
      P[<fail_1554@221:0>](<fail_1554@221:0>:bool)|- bot
      
      P[<f_k_main_1548@218:6>](<f_k_main_1548@218:0>:bool,<f_k_main_1548@218:1>:bool,<f_k_main_1548@218:2>:int,<f_k_main_1548@218:3>:int,<f_k_main_1548@218:4>:int,<f_k_main_1548@218:6>:int),
      ((<f_k_main_1548@218:6> < 1) && <fail_1554@221:0>) |- P[<fail_1554@221:0>](
      <fail_1554@221:0>:bool)
      
      P[<k_main_1447@185:6>](<f_k_main_1548@218:1>:bool,<f_k_main_1548@218:2>:int,<f_k_main_1548@218:3>:int,<f_k_main_1548@218:4>:int,<f_k_main_1548@218:0>:bool),
      P[<<<k_main_1447@185:5>@188:1>@216:0>](<f_k_main_1548@218:1>:bool,<f_k_main_1548@218:2>:int,<f_k_main_1548@218:3>:int,<f_k_main_1548@218:4>:int,<f_k_main_1548@218:2>:int,<f_k_main_1548@218:6>:int),
      <f_k_main_1548@218:0>
      |- P[<f_k_main_1548@218:6>](<f_k_main_1548@218:0>:bool,<f_k_main_1548@218:1>:bool,
                                  <f_k_main_1548@218:2>:int,<f_k_main_1548@218:3>:int,
                                  <f_k_main_1548@218:4>:int,<f_k_main_1548@218:6>:int)
      
      P[<f_k_main_1547@182:3>](<k_main_1447@185:0>:bool,<k_main_1447@185:1>:int,<k_main_1447@185:2>:int,<k_main_1447@185:3>:int),
      P[<<<f_k_main_1547@182:5>@190:1>@214:0>](<k_main_1447@185:0>:bool,<k_main_1447@185:1>:int,<k_main_1447@185:2>:int,<k_main_1447@185:3>:int,<<k_main_1447@185:5>@188:0>:int,<<<k_main_1447@185:5>@188:1>@216:0>:int),
      (0 <= <k_main_1447@185:1>)
      |- P[<<<k_main_1447@185:5>@188:1>@216:0>](<k_main_1447@185:0>:bool,
                                                <k_main_1447@185:1>:int,
                                                <k_main_1447@185:2>:int,
                                                <k_main_1447@185:3>:int,
                                                <<k_main_1447@185:5>@188:0>:int,
                                                <<<k_main_1447@185:5>@188:1>@216:0>:int)
      
      P[<k_main_1397@169:4>](<f_k_main_1547@182:1>:int,<f_k_main_1547@182:2>:int,<f_k_main_1547@182:3>:int,<f_k_main_1547@182:0>:bool),
      P[<<<<init_1038@172:3>@180:0>@192:1>@212:0>](<f_k_main_1547@182:2>:int,<f_k_main_1547@182:3>:int,<<f_k_main_1547@182:5>@190:0>:int,<<<f_k_main_1547@182:5>@190:1>@214:0>:int),
      P[<f_k_main_1547@182:3>](<f_k_main_1547@182:0>:bool,<f_k_main_1547@182:1>:int,<f_k_main_1547@182:2>:int,<f_k_main_1547@182:3>:int),
      <f_k_main_1547@182:0>
      |- P[<<<f_k_main_1547@182:5>@190:1>@214:0>](<f_k_main_1547@182:0>:bool,
                                                  <f_k_main_1547@182:1>:int,
                                                  <f_k_main_1547@182:2>:int,
                                                  <f_k_main_1547@182:3>:int,
                                                  <<f_k_main_1547@182:5>@190:0>:int,
                                                  <<<f_k_main_1547@182:5>@190:1>@214:0>:int)
      
      P[<init_1038@172:1>](<init_1038@172:0>:int,<init_1038@172:1>:int),
      P[<<<<init_1038@175:3>@178:0>@194:1>@210:0>]((1 + <init_1038@172:0>):int,<init_1038@172:1>:int,<<<init_1038@172:3>@180:0>@192:0>:int,<<<<init_1038@172:3>@180:0>@192:1>@212:0>:int),
      (<init_1038@172:0> < <init_1038@172:1>)
      |- P[<<<<init_1038@172:3>@180:0>@192:1>@212:0>](<init_1038@172:0>:int,
                                                      <init_1038@172:1>:int,
                                                      <<<init_1038@172:3>@180:0>@192:0>:int,
                                                      <<<<init_1038@172:3>@180:0>@192:1>@212:0>:int)
      
      P[<init_1038@175:1>](<init_1038@175:0>:int,<init_1038@175:1>:int),
      P[<<<init_1038@175:2>@196:1>@208:0>](<init_1038@175:0>:int,<init_1038@175:1>:int,<<<init_1038@175:3>@178:0>@194:0>:int,<<<<init_1038@175:3>@178:0>@194:1>@210:0>:int),
      (<init_1038@175:0> >= <init_1038@175:1>)
      |- P[<<<<init_1038@175:3>@178:0>@194:1>@210:0>](<init_1038@175:0>:int,
                                                      <init_1038@175:1>:int,
                                                      <<<init_1038@175:3>@178:0>@194:0>:int,
                                                      <<<<init_1038@175:3>@178:0>@194:1>@210:0>:int)
      
      P[<init_1038@172:1>]((-1 + <init_1038@175:0>):int,<init_1038@175:1>:int),
      P[<<update_1033@198:4>@206:0>]((-1 + <init_1038@175:0>):int,1:int,<<init_1038@175:2>@196:0>:int,<<<init_1038@175:2>@196:1>@208:0>:int),
      P[<init_1038@175:1>](<init_1038@175:0>:int,<init_1038@175:1>:int), (
      <init_1038@175:0> < (1 + <init_1038@175:1>))
      |- P[<<<init_1038@175:2>@196:1>@208:0>](<init_1038@175:0>:int,<init_1038@175:1>:int,
                                              <<init_1038@175:2>@196:0>:int,
                                              <<<init_1038@175:2>@196:1>@208:0>:int)
      
      P[<update_1033@198:3>](<update_1033@198:0>:int,<update_1033@198:2>:int,<update_1033@198:3>:int),
      P[<<k_update_1263@201:4>@204:0>](<update_1033@198:0>:int,<update_1033@198:3>:int,<update_1033@198:2>:int,<<update_1033@198:4>@206:0>:int),
      ((1 + <update_1033@198:3>) > <update_1033@198:0>)
      |- P[<<update_1033@198:4>@206:0>](<update_1033@198:0>:int,<update_1033@198:2>:int,
                                        <update_1033@198:3>:int,<<update_1033@198:4>@206:0>:int)
      
      P[<k_update_1263@201:5>](<k_update_1263@201:0>:int,<k_update_1263@201:1>:int,<k_update_1263@201:2>:int,true:bool),
      (<<k_update_1263@201:4>@204:0> = <k_update_1263@201:2>)
      |- P[<<k_update_1263@201:4>@204:0>](<k_update_1263@201:0>:int,<k_update_1263@201:1>:int,
                                          <k_update_1263@201:2>:int,<<k_update_1263@201:4>@204:0>:int)
      
      P[<update_1033@198:3>](<k_update_1263@201:0>:int,<k_update_1263@201:2>:int,<k_update_1263@201:1>:int),
      (((1 + <k_update_1263@201:1>) > <k_update_1263@201:0>) &&
       (<k_update_1263@201:5> = (<k_update_1263@201:1> <= <k_update_1263@201:0>)))
      |- P[<k_update_1263@201:5>](<k_update_1263@201:0>:int,<k_update_1263@201:1>:int,
                                  <k_update_1263@201:2>:int,<k_update_1263@201:5>:bool)
      
      P[<init_1038@172:1>](<update_1033@198:0>:int,<init_1038@175:1>:int),
      P[<<init_1038@175:2>@196:0>]((1 + <update_1033@198:0>):int,<init_1038@175:1>:int,<update_1033@198:3>:int),
      ((<update_1033@198:2> = 1) && (<update_1033@198:0> < <init_1038@175:1>))
      |- P[<update_1033@198:3>](<update_1033@198:0>:int,<update_1033@198:2>:int,
                                <update_1033@198:3>:int)
      
      P[<init_1038@175:1>](<init_1038@175:0>:int,<init_1038@175:1>:int),
      P[<<<init_1038@175:3>@178:0>@194:0>](<init_1038@175:0>:int,<init_1038@175:1>:int,<<init_1038@175:2>@196:0>:int),
      (<init_1038@175:0> >= <init_1038@175:1>)
      |- P[<<init_1038@175:2>@196:0>](<init_1038@175:0>:int,<init_1038@175:1>:int,
                                      <<init_1038@175:2>@196:0>:int)
      
      P[<init_1038@172:1>]((-1 + <init_1038@175:0>):int,<init_1038@175:1>:int),
      P[<<<init_1038@172:3>@180:0>@192:0>]((-1 + <init_1038@175:0>):int,<init_1038@175:1>:int,<<<init_1038@175:3>@178:0>@194:0>:int),
      P[<init_1038@175:1>](<init_1038@175:0>:int,<init_1038@175:1>:int), (
      <init_1038@175:0> < (1 + <init_1038@175:1>))
      |- P[<<<init_1038@175:3>@178:0>@194:0>](<init_1038@175:0>:int,<init_1038@175:1>:int,
                                              <<<init_1038@175:3>@178:0>@194:0>:int)
      
      P[<k_main_1397@169:4>](<f_k_main_1547@182:1>:int,<init_1038@172:0>:int,<init_1038@172:1>:int,true:bool),
      P[<<f_k_main_1547@182:5>@190:0>](true:bool,<f_k_main_1547@182:1>:int,<init_1038@172:0>:int,<init_1038@172:1>:int,<<<init_1038@172:3>@180:0>@192:0>:int),
      P[<init_1038@172:1>](<init_1038@172:0>:int,<init_1038@172:1>:int)|- P[<<<init_1038@172:3>@180:0>@192:0>](
      <init_1038@172:0>:int,<init_1038@172:1>:int,<<<init_1038@172:3>@180:0>@192:0>:int)
      
      P[<f_k_main_1547@182:3>](<f_k_main_1547@182:0>:bool,<f_k_main_1547@182:1>:int,<f_k_main_1547@182:2>:int,<f_k_main_1547@182:3>:int),
      P[<<k_main_1447@185:5>@188:0>](<f_k_main_1547@182:0>:bool,<f_k_main_1547@182:1>:int,<f_k_main_1547@182:2>:int,<f_k_main_1547@182:3>:int,<<f_k_main_1547@182:5>@190:0>:int),
      (0 <= <f_k_main_1547@182:1>)
      |- P[<<f_k_main_1547@182:5>@190:0>](<f_k_main_1547@182:0>:bool,
                                          <f_k_main_1547@182:1>:int,<f_k_main_1547@182:2>:int,
                                          <f_k_main_1547@182:3>:int,<<f_k_main_1547@182:5>@190:0>:int)
      
      P[<k_main_1447@185:6>](<k_main_1447@185:0>:bool,<k_main_1447@185:1>:int,<k_main_1447@185:2>:int,<k_main_1447@185:3>:int,true:bool),
      (<<k_main_1447@185:5>@188:0> = <k_main_1447@185:1>)
      |- P[<<k_main_1447@185:5>@188:0>](<k_main_1447@185:0>:bool,<k_main_1447@185:1>:int,
                                        <k_main_1447@185:2>:int,<k_main_1447@185:3>:int,
                                        <<k_main_1447@185:5>@188:0>:int)
      
      P[<f_k_main_1547@182:3>](<k_main_1447@185:0>:bool,<k_main_1447@185:1>:int,<k_main_1447@185:2>:int,<k_main_1447@185:3>:int),
      ((0 <= <k_main_1447@185:1>) && (<k_main_1447@185:6> = (<k_main_1447@185:1> < <k_main_1447@185:3>)))
      |- P[<k_main_1447@185:6>](<k_main_1447@185:0>:bool,<k_main_1447@185:1>:int,
                                <k_main_1447@185:2>:int,<k_main_1447@185:3>:int,
                                <k_main_1447@185:6>:bool)
      
      P[<k_main_1397@169:4>](<f_k_main_1547@182:1>:int,<f_k_main_1547@182:2>:int,<f_k_main_1547@182:3>:int,<f_k_main_1547@182:0>:bool),
      <f_k_main_1547@182:0>
      |- P[<f_k_main_1547@182:3>](<f_k_main_1547@182:0>:bool,<f_k_main_1547@182:1>:int,
                                  <f_k_main_1547@182:2>:int,<f_k_main_1547@182:3>:int)
      
      P[<init_1038@172:1>]((-1 + <init_1038@175:0>):int,<init_1038@175:1>:int),
      (<init_1038@175:0> < (1 + <init_1038@175:1>))
      |- P[<init_1038@175:1>](<init_1038@175:0>:int,<init_1038@175:1>:int)
      
      P[<k_main_1397@169:4>](<k_main_1397@169:0>:int,<init_1038@172:0>:int,<init_1038@172:1>:int,true:bool)|- P[<init_1038@172:1>](
      <init_1038@172:0>:int,<init_1038@172:1>:int)
      
      P[<main_1042@166:2>](<k_main_1397@169:1>:int,<k_main_1397@169:2>:int,<k_main_1397@169:0>:int),
      ((<k_main_1397@169:1> >= 0) && (<k_main_1397@169:4> = (<k_main_1397@169:1> <= 0)))
      |- P[<k_main_1397@169:4>](<k_main_1397@169:0>:int,<k_main_1397@169:1>:int,
                                <k_main_1397@169:2>:int,<k_main_1397@169:4>:bool)
      
      P[<f_1551@164:2>](<main_1042@166:0>:int,<main_1042@166:1>:int,<main_1042@166:2>:int)|- P[<main_1042@166:2>](
      <main_1042@166:0>:int,<main_1042@166:1>:int,<main_1042@166:2>:int)
      
      P[<f_1550@161:1>](<f_1551@164:0>:int,<f_1551@164:1>:int)|- P[<f_1551@164:2>](
      <f_1551@164:0>:int,<f_1551@164:1>:int,<f_1551@164:2>:int)
      
      P[<f_1549@158:0>](<f_1550@161:0>:int)|- P[<f_1550@161:1>](<f_1550@161:0>:int,
                                                                <f_1550@161:1>:int)
      
      |- P[<f_1549@158:0>](<f_1549@158:0>:int)
    call trees:
      <main_1546@155>
        <f_1549@158>
          <f_1550@161>
            <f_1551@164>
              <main_1042@166>
                <k_main_1397@169>
                  <init_1038@172>
                    <init_1038@175>
                    </<init_1038@175:3>@178>
                  </<init_1038@172:3>@180>
                  <f_k_main_1547@182>
                    <k_main_1447@185>
                    </<k_main_1447@185:5>@188>
                  </<f_k_main_1547@182:5>@190>
                  <<<init_1038@172:3>@180:0>@192>
                    <<<init_1038@175:3>@178:0>@194>
                    </<init_1038@175:2>@196>
                    <update_1033@198>
                      <k_update_1263@201>
                      </<k_update_1263@201:4>@204>
                    </<update_1033@198:4>@206>
                    <<<init_1038@175:2>@196:1>@208>
                    </<<<init_1038@175:3>@178:0>@194:1>@210>
                  </<<<init_1038@172:3>@180:0>@192:1>@212>
                  <<<f_k_main_1547@182:5>@190:1>@214>
                    <<<k_main_1447@185:5>@188:1>@216>
                      <f_k_main_1548@218>
                        <fail_1554@221>
    inlined horn clauses:
      P[<fail_1554@221:0>](<fail_1554@221:0>:bool)|- bot
      
      P[<<<<init_1038@172:3>@180:0>@192:1>@212:0>](0:int,<f_k_main_1548@218:4>:int,<f_k_main_1548@218:2>:int,<f_k_main_1548@218:6>:int),
      ((<f_k_main_1548@218:2> < <f_k_main_1548@218:4>) &&
       ((0 <= <f_k_main_1548@218:2>) && ((<f_k_main_1548@218:6> < 1) && <fail_1554@221:0>)))
      |- P[<fail_1554@221:0>](<fail_1554@221:0>:bool)
      
      P[<init_1038@172:1>](<init_1038@172:0>:int,<init_1038@172:1>:int),
      P[<<<<init_1038@175:3>@178:0>@194:1>@210:0>]((1 + <init_1038@172:0>):int,<init_1038@172:1>:int,<<<init_1038@172:3>@180:0>@192:0>:int,<<<<init_1038@172:3>@180:0>@192:1>@212:0>:int),
      (<init_1038@172:0> < <init_1038@172:1>)
      |- P[<<<<init_1038@172:3>@180:0>@192:1>@212:0>](<init_1038@172:0>:int,
                                                      <init_1038@172:1>:int,
                                                      <<<init_1038@172:3>@180:0>@192:0>:int,
                                                      <<<<init_1038@172:3>@180:0>@192:1>@212:0>:int)
      
      P[<init_1038@175:1>](<init_1038@175:0>:int,<init_1038@175:1>:int),
      P[<<<init_1038@175:2>@196:1>@208:0>](<init_1038@175:0>:int,<init_1038@175:1>:int,<<<init_1038@175:3>@178:0>@194:0>:int,<<<<init_1038@175:3>@178:0>@194:1>@210:0>:int),
      (<init_1038@175:0> >= <init_1038@175:1>)
      |- P[<<<<init_1038@175:3>@178:0>@194:1>@210:0>](<init_1038@175:0>:int,
                                                      <init_1038@175:1>:int,
                                                      <<<init_1038@175:3>@178:0>@194:0>:int,
                                                      <<<<init_1038@175:3>@178:0>@194:1>@210:0>:int)
      
      P[<init_1038@172:1>]((-1 + <init_1038@175:0>):int,<init_1038@175:1>:int),
      P[<init_1038@175:1>](<init_1038@175:0>:int,<init_1038@175:1>:int),
      P[<init_1038@172:1>]((-1 + <init_1038@175:0>):int,var198:int),
      P[<<init_1038@175:2>@196:0>](<init_1038@175:0>:int,var198:int,<<init_1038@175:2>@196:0>:int),
      ((<init_1038@175:0> < (1 + var198)) &&
       ((<<<init_1038@175:2>@196:1>@208:0> = 1) &&
        ((<init_1038@175:0> < (1 + <init_1038@175:1>)) && ((1 + <<init_1038@175:2>@196:0>) = <init_1038@175:0>))))
      |- P[<<<init_1038@175:2>@196:1>@208:0>](<init_1038@175:0>:int,<init_1038@175:1>:int,
                                              <<init_1038@175:2>@196:0>:int,
                                              <<<init_1038@175:2>@196:1>@208:0>:int)
      
      P[<init_1038@175:1>](<init_1038@175:0>:int,<init_1038@175:1>:int),
      P[<<<init_1038@175:3>@178:0>@194:0>](<init_1038@175:0>:int,<init_1038@175:1>:int,<<init_1038@175:2>@196:0>:int),
      (<init_1038@175:0> >= <init_1038@175:1>)
      |- P[<<init_1038@175:2>@196:0>](<init_1038@175:0>:int,<init_1038@175:1>:int,
                                      <<init_1038@175:2>@196:0>:int)
      
      P[<init_1038@172:1>]((-1 + <init_1038@175:0>):int,<init_1038@175:1>:int),
      P[<<<init_1038@172:3>@180:0>@192:0>]((-1 + <init_1038@175:0>):int,<init_1038@175:1>:int,<<<init_1038@175:3>@178:0>@194:0>:int),
      P[<init_1038@175:1>](<init_1038@175:0>:int,<init_1038@175:1>:int), (
      <init_1038@175:0> < (1 + <init_1038@175:1>))
      |- P[<<<init_1038@175:3>@178:0>@194:0>](<init_1038@175:0>:int,<init_1038@175:1>:int,
                                              <<<init_1038@175:3>@178:0>@194:0>:int)
      
      P[<init_1038@172:1>](<init_1038@172:0>:int,<init_1038@172:1>:int),
      ((<init_1038@172:0> = 0) &&
       ((0 <= <<<init_1038@172:3>@180:0>@192:0>) && (<<<init_1038@172:3>@180:0>@192:0> < <init_1038@172:1>)))
      |- P[<<<init_1038@172:3>@180:0>@192:0>](<init_1038@172:0>:int,<init_1038@172:1>:int,
                                              <<<init_1038@172:3>@180:0>@192:0>:int)
      
      P[<init_1038@172:1>]((-1 + <init_1038@175:0>):int,<init_1038@175:1>:int),
      (<init_1038@175:0> < (1 + <init_1038@175:1>))
      |- P[<init_1038@175:1>](<init_1038@175:0>:int,<init_1038@175:1>:int)
      
       (<init_1038@172:0> = 0) |- P[<init_1038@172:1>](<init_1038@172:0>:int,
                                                       <init_1038@172:1>:int)
    begin ParamSubstInfer.infer(28116)[3]
      
    end ParamSubstInfer.infer(28116)[3] (1.399787 sec.)
    inferred extra parameters:
      
    begin RefTypeInfer.elim_coeffs(28118)[3]
      
    end RefTypeInfer.elim_coeffs(28118)[3] (0.002999 sec.)
    begin YhornInterface.solve(28938)[3]
      begin HcSolver.solve_ub(28939)[4]
        encoded:
          P[<fail_1554@221:0>](<fail_1554@221:0>:int)|- bot
          
          P[<<<<init_1038@172:3>@180:0>@192:1>@212:0>](0:int,<f_k_main_1548@218:4>:int,<f_k_main_1548@218:2>:int,<f_k_main_1548@218:6>:int),
          ((<f_k_main_1548@218:2> < <f_k_main_1548@218:4>) &&
           ((0 <= <f_k_main_1548@218:2>) && ((<f_k_main_1548@218:6> < 1) && (<fail_1554@221:0> = 1))))
          |- P[<fail_1554@221:0>](<fail_1554@221:0>:int)
          
          P[<init_1038@172:1>](<init_1038@172:0>:int,<init_1038@172:1>:int),
          P[<<<<init_1038@175:3>@178:0>@194:1>@210:0>]((1 + <init_1038@172:0>):int,<init_1038@172:1>:int,<<<init_1038@172:3>@180:0>@192:0>:int,<<<<init_1038@172:3>@180:0>@192:1>@212:0>:int),
          (<init_1038@172:0> < <init_1038@172:1>)
          |- P[<<<<init_1038@172:3>@180:0>@192:1>@212:0>](<init_1038@172:0>:int,
                                                          <init_1038@172:1>:int,
                                                          <<<init_1038@172:3>@180:0>@192:0>:int,
                                                          <<<<init_1038@172:3>@180:0>@192:1>@212:0>:int)
          
          P[<init_1038@175:1>](<init_1038@175:0>:int,<init_1038@175:1>:int),
          P[<<<init_1038@175:2>@196:1>@208:0>](<init_1038@175:0>:int,<init_1038@175:1>:int,<<<init_1038@175:3>@178:0>@194:0>:int,<<<<init_1038@175:3>@178:0>@194:1>@210:0>:int),
          (<init_1038@175:0> >= <init_1038@175:1>)
          |- P[<<<<init_1038@175:3>@178:0>@194:1>@210:0>](<init_1038@175:0>:int,
                                                          <init_1038@175:1>:int,
                                                          <<<init_1038@175:3>@178:0>@194:0>:int,
                                                          <<<<init_1038@175:3>@178:0>@194:1>@210:0>:int)
          
          P[<init_1038@172:1>]((-1 + <init_1038@175:0>):int,<init_1038@175:1>:int),
          P[<init_1038@175:1>](<init_1038@175:0>:int,<init_1038@175:1>:int),
          P[<init_1038@172:1>]((-1 + <init_1038@175:0>):int,var198:int),
          P[<<init_1038@175:2>@196:0>](<init_1038@175:0>:int,var198:int,<<init_1038@175:2>@196:0>:int),
          ((<<<init_1038@175:2>@196:1>@208:0> = 1) &&
           ((<init_1038@175:0> < (1 + var198)) &&
            ((<init_1038@175:0> < (1 + <init_1038@175:1>)) && ((1 + <<init_1038@175:2>@196:0>) = <init_1038@175:0>))))
          |- P[<<<init_1038@175:2>@196:1>@208:0>](<init_1038@175:0>:int,
                                                  <init_1038@175:1>:int,
                                                  <<init_1038@175:2>@196:0>:int,
                                                  <<<init_1038@175:2>@196:1>@208:0>:int)
          
          P[<init_1038@175:1>](<init_1038@175:0>:int,<init_1038@175:1>:int),
          P[<<<init_1038@175:3>@178:0>@194:0>](<init_1038@175:0>:int,<init_1038@175:1>:int,<<init_1038@175:2>@196:0>:int),
          (<init_1038@175:0> >= <init_1038@175:1>)
          |- P[<<init_1038@175:2>@196:0>](<init_1038@175:0>:int,<init_1038@175:1>:int,
                                          <<init_1038@175:2>@196:0>:int)
          
          P[<init_1038@172:1>]((-1 + <init_1038@175:0>):int,<init_1038@175:1>:int),
          P[<<<init_1038@172:3>@180:0>@192:0>]((-1 + <init_1038@175:0>):int,<init_1038@175:1>:int,<<<init_1038@175:3>@178:0>@194:0>:int),
          P[<init_1038@175:1>](<init_1038@175:0>:int,<init_1038@175:1>:int),
          (<init_1038@175:0> < (1 + <init_1038@175:1>))
          |- P[<<<init_1038@175:3>@178:0>@194:0>](<init_1038@175:0>:int,
                                                  <init_1038@175:1>:int,
                                                  <<<init_1038@175:3>@178:0>@194:0>:int)
          
          P[<init_1038@172:1>](<init_1038@172:0>:int,<init_1038@172:1>:int),
          ((<init_1038@172:0> = 0) &&
           ((0 <= <<<init_1038@172:3>@180:0>@192:0>) && (<<<init_1038@172:3>@180:0>@192:0> < <init_1038@172:1>)))
          |- P[<<<init_1038@172:3>@180:0>@192:0>](<init_1038@172:0>:int,
                                                  <init_1038@172:1>:int,
                                                  <<<init_1038@172:3>@180:0>@192:0>:int)
          
          P[<init_1038@172:1>]((-1 + <init_1038@175:0>):int,<init_1038@175:1>:int),
          (<init_1038@175:0> < (1 + <init_1038@175:1>))
          |- P[<init_1038@175:1>](<init_1038@175:0>:int,<init_1038@175:1>:int)
          
           (<init_1038@172:0> = 0) |- P[<init_1038@172:1>](<init_1038@172:0>:int,
                                                           <init_1038@172:1>:int)
        input to Yhorn:
          P[<fail_1554@221:0>](<fail_1554@221:0>:int)|- bot
          
          P[<<<<init_1038@172:3>@180:0>@192:1>@212:0>](var199:int,<f_k_main_1548@218:4>:int,<f_k_main_1548@218:2>:int,<f_k_main_1548@218:6>:int),
          ((<f_k_main_1548@218:6> < 1) &&
           ((0 <= <f_k_main_1548@218:2>) &&
            ((<f_k_main_1548@218:2> < <f_k_main_1548@218:4>) && ((var199 = 0) && (<fail_1554@221:0> = 1)))))
          |- P[<fail_1554@221:0>](<fail_1554@221:0>:int)
          
          P[<init_1038@172:1>](<init_1038@172:0>:int,<init_1038@172:1>:int),
          P[<<<<init_1038@175:3>@178:0>@194:1>@210:0>](var200:int,<init_1038@172:1>:int,<<<init_1038@172:3>@180:0>@192:0>:int,<<<<init_1038@172:3>@180:0>@192:1>@212:0>:int),
          ((var200 = (1 + <init_1038@172:0>)) && (<init_1038@172:0> < <init_1038@172:1>))
          |- P[<<<<init_1038@172:3>@180:0>@192:1>@212:0>](<init_1038@172:0>:int,
                                                          <init_1038@172:1>:int,
                                                          <<<init_1038@172:3>@180:0>@192:0>:int,
                                                          <<<<init_1038@172:3>@180:0>@192:1>@212:0>:int)
          
          P[<init_1038@175:1>](<init_1038@175:0>:int,<init_1038@175:1>:int),
          P[<<<init_1038@175:2>@196:1>@208:0>](<init_1038@175:0>:int,<init_1038@175:1>:int,<<<init_1038@175:3>@178:0>@194:0>:int,<<<<init_1038@175:3>@178:0>@194:1>@210:0>:int),
          (<init_1038@175:0> >= <init_1038@175:1>)
          |- P[<<<<init_1038@175:3>@178:0>@194:1>@210:0>](<init_1038@175:0>:int,
                                                          <init_1038@175:1>:int,
                                                          <<<init_1038@175:3>@178:0>@194:0>:int,
                                                          <<<<init_1038@175:3>@178:0>@194:1>@210:0>:int)
          
          P[<init_1038@172:1>](var201:int,<init_1038@175:1>:int),
          P[<init_1038@175:1>](<init_1038@175:0>:int,<init_1038@175:1>:int),
          P[<init_1038@172:1>](var202:int,var198:int),
          P[<<init_1038@175:2>@196:0>](<init_1038@175:0>:int,var198:int,<<init_1038@175:2>@196:0>:int),
          (((1 + var202) = <init_1038@175:0>) &&
           (((1 + var201) = <init_1038@175:0>) &&
            (((1 + <<init_1038@175:2>@196:0>) = <init_1038@175:0>) &&
             ((<init_1038@175:0> < (1 + <init_1038@175:1>)) &&
              ((<init_1038@175:0> < (1 + var198)) && (<<<init_1038@175:2>@196:1>@208:0> = 1))))))
          |- P[<<<init_1038@175:2>@196:1>@208:0>](<init_1038@175:0>:int,
                                                  <init_1038@175:1>:int,
                                                  <<init_1038@175:2>@196:0>:int,
                                                  <<<init_1038@175:2>@196:1>@208:0>:int)
          
          P[<init_1038@175:1>](<init_1038@175:0>:int,<init_1038@175:1>:int),
          P[<<<init_1038@175:3>@178:0>@194:0>](<init_1038@175:0>:int,<init_1038@175:1>:int,<<init_1038@175:2>@196:0>:int),
          (<init_1038@175:0> >= <init_1038@175:1>)
          |- P[<<init_1038@175:2>@196:0>](<init_1038@175:0>:int,<init_1038@175:1>:int,
                                          <<init_1038@175:2>@196:0>:int)
          
          P[<init_1038@172:1>](var203:int,<init_1038@175:1>:int),
          P[<<<init_1038@172:3>@180:0>@192:0>](var204:int,<init_1038@175:1>:int,<<<init_1038@175:3>@178:0>@194:0>:int),
          P[<init_1038@175:1>](<init_1038@175:0>:int,<init_1038@175:1>:int),
          (((1 + var204) = <init_1038@175:0>) &&
           (((1 + var203) = <init_1038@175:0>) && (<init_1038@175:0> < (1 + <init_1038@175:1>))))
          |- P[<<<init_1038@175:3>@178:0>@194:0>](<init_1038@175:0>:int,
                                                  <init_1038@175:1>:int,
                                                  <<<init_1038@175:3>@178:0>@194:0>:int)
          
          P[<init_1038@172:1>](<init_1038@172:0>:int,<init_1038@172:1>:int),
          ((<<<init_1038@172:3>@180:0>@192:0> < <init_1038@172:1>) &&
           ((0 <= <<<init_1038@172:3>@180:0>@192:0>) && (<init_1038@172:0> = 0)))
          |- P[<<<init_1038@172:3>@180:0>@192:0>](<init_1038@172:0>:int,
                                                  <init_1038@172:1>:int,
                                                  <<<init_1038@172:3>@180:0>@192:0>:int)
          
          P[<init_1038@172:1>](var205:int,<init_1038@175:1>:int),
          (((1 + var205) = <init_1038@175:0>) && (<init_1038@175:0> < (1 + <init_1038@175:1>)))
          |- P[<init_1038@175:1>](<init_1038@175:0>:int,<init_1038@175:1>:int)
          Yhorn (Wed Sep 25 10:52:05 JST 2013)


(0=0) & (v_sep_fail_1554_sep_221_sep_0($374)) -> 1=0.
(($374-1=0) & ($375=0) & ($376-$377<0) & (-$376<=0) & ($378-1<0)) & (v_sep_init_1038_sep_172_sep_3_sep_180_sep_0_sep_192_sep_1_sep_212_sep_0($375,$377,$376,$378)) -> v_sep_fail_1554_sep_221_sep_0($374).
(($379-$380<0) & (-$379+$381-1=0)) & (v_sep_init_1038_sep_175_sep_3_sep_178_sep_0_sep_194_sep_1_sep_210_sep_0($381,$380,$382,$383)) & (v_sep_init_1038_sep_172_sep_1($379,$380)) -> v_sep_init_1038_sep_172_sep_3_sep_180_sep_0_sep_192_sep_1_sep_212_sep_0($379,$380,$382,$383).
($384-$385>=0) & (v_sep_init_1038_sep_175_sep_2_sep_196_sep_1_sep_208_sep_0($384,$385,$386,$387)) & (v_sep_init_1038_sep_175_sep_1($384,$385)) -> v_sep_init_1038_sep_175_sep_3_sep_178_sep_0_sep_194_sep_1_sep_210_sep_0($384,$385,$386,$387).
(($388-1=0) & ($384-$389-1<0) & ($384-$385-1<0) & (-$384+$390+1=0) & (-$384+$391+1=0) & (-$384+$392+1=0)) & (v_sep_init_1038_sep_175_sep_2_sep_196_sep_0($384,$389,$390)) & (v_sep_init_1038_sep_172_sep_1($392,$389)) & (v_sep_init_1038_sep_175_sep_1($384,$385)) & (v_sep_init_1038_sep_172_sep_1($391,$385)) -> v_sep_init_1038_sep_175_sep_2_sep_196_sep_1_sep_208_sep_0($384,$385,$390,$388).
($384-$385>=0) & (v_sep_init_1038_sep_175_sep_3_sep_178_sep_0_sep_194_sep_0($384,$385,$390)) & (v_sep_init_1038_sep_175_sep_1($384,$385)) -> v_sep_init_1038_sep_175_sep_2_sep_196_sep_0($384,$385,$390).
(($384-$385-1<0) & (-$384+$393+1=0) & (-$384+$394+1=0)) & (v_sep_init_1038_sep_175_sep_1($384,$385)) & (v_sep_init_1038_sep_172_sep_3_sep_180_sep_0_sep_192_sep_0($394,$385,$386)) & (v_sep_init_1038_sep_172_sep_1($393,$385)) -> v_sep_init_1038_sep_175_sep_3_sep_178_sep_0_sep_194_sep_0($384,$385,$386).
(($379=0) & (-$382<=0) & (-$380+$382<0)) & (v_sep_init_1038_sep_172_sep_1($379,$380)) -> v_sep_init_1038_sep_172_sep_3_sep_180_sep_0_sep_192_sep_0($379,$380,$382).
(($384-$385-1<0) & (-$384+$395+1=0)) & (v_sep_init_1038_sep_172_sep_1($395,$385)) -> v_sep_init_1038_sep_175_sep_1($384,$385).
$379=0 -> v_sep_init_1038_sep_172_sep_1($379,$380).


v_sep_fail_1554_sep_221_sep_0: X
v_sep_init_1038_sep_172_sep_1: X
v_sep_init_1038_sep_172_sep_3_sep_180_sep_0_sep_192_sep_0: X
v_sep_init_1038_sep_172_sep_3_sep_180_sep_0_sep_192_sep_1_sep_212_sep_0: X
v_sep_init_1038_sep_175_sep_1: X
v_sep_init_1038_sep_175_sep_2_sep_196_sep_0: X
v_sep_init_1038_sep_175_sep_2_sep_196_sep_1_sep_208_sep_0: X
v_sep_init_1038_sep_175_sep_3_sep_178_sep_0_sep_194_sep_0: X
v_sep_init_1038_sep_175_sep_3_sep_178_sep_0_sep_194_sep_1_sep_210_sep_0: X
..................
v_sep_fail_1554_sep_221_sep_0: X
v_sep_init_1038_sep_172_sep_1: X
v_sep_init_1038_sep_172_sep_3_sep_180_sep_0_sep_192_sep_0: X
v_sep_init_1038_sep_172_sep_3_sep_180_sep_0_sep_192_sep_1_sep_212_sep_0: X
v_sep_init_1038_sep_175_sep_1: X
v_sep_init_1038_sep_175_sep_2_sep_196_sep_0: X
v_sep_init_1038_sep_175_sep_2_sep_196_sep_1_sep_208_sep_0: X
v_sep_init_1038_sep_175_sep_3_sep_178_sep_0_sep_194_sep_0: X
v_sep_init_1038_sep_175_sep_3_sep_178_sep_0_sep_194_sep_1_sep_210_sep_0: X
...
v_sep_fail_1554_sep_221_sep_0: X
v_sep_init_1038_sep_172_sep_1: X
v_sep_init_1038_sep_172_sep_3_sep_180_sep_0_sep_192_sep_0: X
v_sep_init_1038_sep_172_sep_3_sep_180_sep_0_sep_192_sep_1_sep_212_sep_0: X
v_sep_init_1038_sep_175_sep_1: X
v_sep_init_1038_sep_175_sep_2_sep_196_sep_0: X
v_sep_init_1038_sep_175_sep_2_sep_196_sep_1_sep_208_sep_0: X
v_sep_init_1038_sep_175_sep_3_sep_178_sep_0_sep_194_sep_0: X
v_sep_init_1038_sep_175_sep_3_sep_178_sep_0_sep_194_sep_1_sep_210_sep_0: X
.....
v_sep_fail_1554_sep_221_sep_0: X
v_sep_init_1038_sep_172_sep_1: X
v_sep_init_1038_sep_172_sep_3_sep_180_sep_0_sep_192_sep_0: X
v_sep_init_1038_sep_172_sep_3_sep_180_sep_0_sep_192_sep_1_sep_212_sep_0: X
v_sep_init_1038_sep_175_sep_1: X
v_sep_init_1038_sep_175_sep_2_sep_196_sep_0: X
v_sep_init_1038_sep_175_sep_2_sep_196_sep_1_sep_208_sep_0: X
v_sep_init_1038_sep_175_sep_3_sep_178_sep_0_sep_194_sep_0: X
v_sep_init_1038_sep_175_sep_3_sep_178_sep_0_sep_194_sep_1_sep_210_sep_0: X
.......
v_sep_fail_1554_sep_221_sep_0: X
v_sep_init_1038_sep_172_sep_1: X
v_sep_init_1038_sep_172_sep_3_sep_180_sep_0_sep_192_sep_0: X
v_sep_init_1038_sep_172_sep_3_sep_180_sep_0_sep_192_sep_1_sep_212_sep_0: X
v_sep_init_1038_sep_175_sep_1: X
v_sep_init_1038_sep_175_sep_2_sep_196_sep_0: X
v_sep_init_1038_sep_175_sep_2_sep_196_sep_1_sep_208_sep_0: X
v_sep_init_1038_sep_175_sep_3_sep_178_sep_0_sep_194_sep_0: X
v_sep_init_1038_sep_175_sep_3_sep_178_sep_0_sep_194_sep_1_sep_210_sep_0: X
............
v_sep_fail_1554_sep_221_sep_0: X
v_sep_init_1038_sep_172_sep_1: X
v_sep_init_1038_sep_172_sep_3_sep_180_sep_0_sep_192_sep_0: X
v_sep_init_1038_sep_172_sep_3_sep_180_sep_0_sep_192_sep_1_sep_212_sep_0: X
v_sep_init_1038_sep_175_sep_1: X
v_sep_init_1038_sep_175_sep_2_sep_196_sep_0: X
v_sep_init_1038_sep_175_sep_2_sep_196_sep_1_sep_208_sep_0: X
v_sep_init_1038_sep_175_sep_3_sep_178_sep_0_sep_194_sep_0: X
v_sep_init_1038_sep_175_sep_3_sep_178_sep_0_sep_194_sep_1_sep_210_sep_0: X
..............
v_sep_fail_1554_sep_221_sep_0: X
v_sep_init_1038_sep_172_sep_1: X
v_sep_init_1038_sep_172_sep_3_sep_180_sep_0_sep_192_sep_0: X
v_sep_init_1038_sep_172_sep_3_sep_180_sep_0_sep_192_sep_1_sep_212_sep_0: X
v_sep_init_1038_sep_175_sep_1: X
v_sep_init_1038_sep_175_sep_2_sep_196_sep_0: X
v_sep_init_1038_sep_175_sep_2_sep_196_sep_1_sep_208_sep_0: X
v_sep_init_1038_sep_175_sep_3_sep_178_sep_0_sep_194_sep_0: X
v_sep_init_1038_sep_175_sep_3_sep_178_sep_0_sep_194_sep_1_sep_210_sep_0: X
.................
v_sep_fail_1554_sep_221_sep_0: X
v_sep_init_1038_sep_172_sep_1: X
v_sep_init_1038_sep_172_sep_3_sep_180_sep_0_sep_192_sep_0: X
v_sep_init_1038_sep_172_sep_3_sep_180_sep_0_sep_192_sep_1_sep_212_sep_0: X
v_sep_init_1038_sep_175_sep_1: X
v_sep_init_1038_sep_175_sep_2_sep_196_sep_0: X
v_sep_init_1038_sep_175_sep_2_sep_196_sep_1_sep_208_sep_0: X
v_sep_init_1038_sep_175_sep_3_sep_178_sep_0_sep_194_sep_0: X
v_sep_init_1038_sep_175_sep_3_sep_178_sep_0_sep_194_sep_1_sep_210_sep_0: X
..................(0=0) & (v_sep_fail_1554_sep_221_sep_0($374)) -> 1=0.
(($374-1=0) & ($375=0) & ($376-$377<0) & (-$376<=0) & ($378-1<0)) & (v_sep_init_1038_sep_172_sep_3_sep_180_sep_0_sep_192_sep_1_sep_212_sep_0($375,$377,$376,$378)) -> v_sep_fail_1554_sep_221_sep_0($374).
(($379-$380<0) & (-$379+$381-1=0)) & (v_sep_init_1038_sep_175_sep_3_sep_178_sep_0_sep_194_sep_1_sep_210_sep_0($381,$380,$382,$383)) & (v_sep_init_1038_sep_172_sep_1($379,$380)) -> v_sep_init_1038_sep_172_sep_3_sep_180_sep_0_sep_192_sep_1_sep_212_sep_0($379,$380,$382,$383).
($384-$385>=0) & (v_sep_init_1038_sep_175_sep_2_sep_196_sep_1_sep_208_sep_0($384,$385,$386,$387)) & (v_sep_init_1038_sep_175_sep_1($384,$385)) -> v_sep_init_1038_sep_175_sep_3_sep_178_sep_0_sep_194_sep_1_sep_210_sep_0($384,$385,$386,$387).
(($388-1=0) & ($384-$389-1<0) & ($384-$385-1<0) & (-$384+$390+1=0) & (-$384+$391+1=0) & (-$384+$392+1=0)) & (v_sep_init_1038_sep_175_sep_2_sep_196_sep_0($384,$389,$390)) & (v_sep_init_1038_sep_172_sep_1($392,$389)) & (v_sep_init_1038_sep_175_sep_1($384,$385)) & (v_sep_init_1038_sep_172_sep_1($391,$385)) -> v_sep_init_1038_sep_175_sep_2_sep_196_sep_1_sep_208_sep_0($384,$385,$390,$388).
($384-$385>=0) & (v_sep_init_1038_sep_175_sep_3_sep_178_sep_0_sep_194_sep_0($384,$385,$390)) & (v_sep_init_1038_sep_175_sep_1($384,$385)) -> v_sep_init_1038_sep_175_sep_2_sep_196_sep_0($384,$385,$390).
(($384-$385-1<0) & (-$384+$393+1=0) & (-$384+$394+1=0)) & (v_sep_init_1038_sep_175_sep_1($384,$385)) & (v_sep_init_1038_sep_172_sep_3_sep_180_sep_0_sep_192_sep_0($394,$385,$386)) & (v_sep_init_1038_sep_172_sep_1($393,$385)) -> v_sep_init_1038_sep_175_sep_3_sep_178_sep_0_sep_194_sep_0($384,$385,$386).
(($379=0) & (-$382<=0) & (-$380+$382<0)) & (v_sep_init_1038_sep_172_sep_1($379,$380)) -> v_sep_init_1038_sep_172_sep_3_sep_180_sep_0_sep_192_sep_0($379,$380,$382).
(($384-$385-1<0) & (-$384+$395+1=0)) & (v_sep_init_1038_sep_172_sep_1($395,$385)) -> v_sep_init_1038_sep_175_sep_1($384,$385).
$379=0 -> v_sep_init_1038_sep_172_sep_1($379,$380).

           (<init_1038@172:0> = 0) |- P[<init_1038@172:1>](<init_1038@172:0>:int,
                                                           <init_1038@172:1>:int)
        solution:
          P[<fail_1554@221:0>]($396:bool) = false
          P[<init_1038@172:1>]($417:int,$419:int) = true
          P[<<<init_1038@172:3>@180:0>@192:0>]($450:int,$452:int,$454:int) = true
          P[<<<<init_1038@172:3>@180:0>@192:1>@212:0>]($399:int,$401:int,$403:int,$405:int) = (1 <= $405)
          P[<init_1038@175:1>]($431:int,$433:int) = true
          P[<<init_1038@175:2>@196:0>]($436:int,$438:int,$440:int) = true
          P[<<<init_1038@175:2>@196:1>@208:0>]($422:int,$424:int,$426:int,$428:int) = (1 <= $428)
          P[<<<init_1038@175:3>@178:0>@194:0>]($443:int,$445:int,$447:int) = true
          P[<<<<init_1038@175:3>@178:0>@194:1>@210:0>]($408:int,$410:int,$412:int,$414:int) = (1 <= $414)
        
      end HcSolver.solve_ub(28939)[4] (0.030995 sec.)
      begin HcSolver.check_validity(29879)[4]
        input:
          P[<fail_1554@221:0>](<fail_1554@221:0>:bool)|- bot
          
          P[<<<<init_1038@172:3>@180:0>@192:1>@212:0>](0:int,<f_k_main_1548@218:4>:int,<f_k_main_1548@218:2>:int,<f_k_main_1548@218:6>:int),
          ((<f_k_main_1548@218:2> < <f_k_main_1548@218:4>) &&
           ((0 <= <f_k_main_1548@218:2>) && ((<f_k_main_1548@218:6> < 1) && <fail_1554@221:0>)))
          |- P[<fail_1554@221:0>](<fail_1554@221:0>:bool)
          
          P[<init_1038@172:1>](<init_1038@172:0>:int,<init_1038@172:1>:int),
          P[<<<<init_1038@175:3>@178:0>@194:1>@210:0>]((1 + <init_1038@172:0>):int,<init_1038@172:1>:int,<<<init_1038@172:3>@180:0>@192:0>:int,<<<<init_1038@172:3>@180:0>@192:1>@212:0>:int),
          (<init_1038@172:0> < <init_1038@172:1>)
          |- P[<<<<init_1038@172:3>@180:0>@192:1>@212:0>](<init_1038@172:0>:int,
                                                          <init_1038@172:1>:int,
                                                          <<<init_1038@172:3>@180:0>@192:0>:int,
                                                          <<<<init_1038@172:3>@180:0>@192:1>@212:0>:int)
          
          P[<init_1038@175:1>](<init_1038@175:0>:int,<init_1038@175:1>:int),
          P[<<<init_1038@175:2>@196:1>@208:0>](<init_1038@175:0>:int,<init_1038@175:1>:int,<<<init_1038@175:3>@178:0>@194:0>:int,<<<<init_1038@175:3>@178:0>@194:1>@210:0>:int),
          (<init_1038@175:0> >= <init_1038@175:1>)
          |- P[<<<<init_1038@175:3>@178:0>@194:1>@210:0>](<init_1038@175:0>:int,
                                                          <init_1038@175:1>:int,
                                                          <<<init_1038@175:3>@178:0>@194:0>:int,
                                                          <<<<init_1038@175:3>@178:0>@194:1>@210:0>:int)
          
          P[<init_1038@172:1>]((-1 + <init_1038@175:0>):int,<init_1038@175:1>:int),
          P[<init_1038@175:1>](<init_1038@175:0>:int,<init_1038@175:1>:int),
          P[<init_1038@172:1>]((-1 + <init_1038@175:0>):int,var198:int),
          P[<<init_1038@175:2>@196:0>](<init_1038@175:0>:int,var198:int,<<init_1038@175:2>@196:0>:int),
          ((<init_1038@175:0> < (1 + var198)) &&
           ((<<<init_1038@175:2>@196:1>@208:0> = 1) &&
            ((<init_1038@175:0> < (1 + <init_1038@175:1>)) && ((1 + <<init_1038@175:2>@196:0>) = <init_1038@175:0>))))
          |- P[<<<init_1038@175:2>@196:1>@208:0>](<init_1038@175:0>:int,
                                                  <init_1038@175:1>:int,
                                                  <<init_1038@175:2>@196:0>:int,
                                                  <<<init_1038@175:2>@196:1>@208:0>:int)
          
          P[<init_1038@175:1>](<init_1038@175:0>:int,<init_1038@175:1>:int),
          P[<<<init_1038@175:3>@178:0>@194:0>](<init_1038@175:0>:int,<init_1038@175:1>:int,<<init_1038@175:2>@196:0>:int),
          (<init_1038@175:0> >= <init_1038@175:1>)
          |- P[<<init_1038@175:2>@196:0>](<init_1038@175:0>:int,<init_1038@175:1>:int,
                                          <<init_1038@175:2>@196:0>:int)
          
          P[<init_1038@172:1>]((-1 + <init_1038@175:0>):int,<init_1038@175:1>:int),
          P[<<<init_1038@172:3>@180:0>@192:0>]((-1 + <init_1038@175:0>):int,<init_1038@175:1>:int,<<<init_1038@175:3>@178:0>@194:0>:int),
          P[<init_1038@175:1>](<init_1038@175:0>:int,<init_1038@175:1>:int),
          (<init_1038@175:0> < (1 + <init_1038@175:1>))
          |- P[<<<init_1038@175:3>@178:0>@194:0>](<init_1038@175:0>:int,
                                                  <init_1038@175:1>:int,
                                                  <<<init_1038@175:3>@178:0>@194:0>:int)
          
          P[<init_1038@172:1>](<init_1038@172:0>:int,<init_1038@172:1>:int),
          ((<init_1038@172:0> = 0) &&
           ((0 <= <<<init_1038@172:3>@180:0>@192:0>) && (<<<init_1038@172:3>@180:0>@192:0> < <init_1038@172:1>)))
          |- P[<<<init_1038@172:3>@180:0>@192:0>](<init_1038@172:0>:int,
                                                  <init_1038@172:1>:int,
                                                  <<<init_1038@172:3>@180:0>@192:0>:int)
          
          P[<init_1038@172:1>]((-1 + <init_1038@175:0>):int,<init_1038@175:1>:int),
          (<init_1038@175:0> < (1 + <init_1038@175:1>))
          |- P[<init_1038@175:1>](<init_1038@175:0>:int,<init_1038@175:1>:int)
          
           (<init_1038@172:0> = 0) |- P[<init_1038@172:1>](<init_1038@172:0>:int,
                                                           <init_1038@172:1>:int)
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        
      end HcSolver.check_validity(29879)[4] (0.004000 sec.)
      solution:
        P[<fail_1554@221:0>]($396:bool) = false
        P[<init_1038@172:1>]($417:int,$419:int) = true
        P[<<<init_1038@172:3>@180:0>@192:0>]($450:int,$452:int,$454:int) = true
        P[<<<<init_1038@172:3>@180:0>@192:1>@212:0>]($399:int,$401:int,$403:int,$405:int) = (1 <= $405)
        P[<init_1038@175:1>]($431:int,$433:int) = true
        P[<<init_1038@175:2>@196:0>]($436:int,$438:int,$440:int) = true
        P[<<<init_1038@175:2>@196:1>@208:0>]($422:int,$424:int,$426:int,$428:int) = (1 <= $428)
        P[<<<init_1038@175:3>@178:0>@194:0>]($443:int,$445:int,$447:int) = true
        P[<<<<init_1038@175:3>@178:0>@194:1>@210:0>]($408:int,$410:int,$412:int,$414:int) = (1 <= $414)
    end YhornInterface.solve(28938)[3] (0.034995 sec.)
    
  end RefTypeInfer.infer_etrs(21416)[2] (1.475776 sec.)
  refinement types:
    main_1546: X
    f_1549: v1:int -> X
    f_1550: v1:int -> v2:int -> X
    f_1551: v1:int -> v2:int -> v3:int -> X
    main_1042: v1:int -> v2:int -> v3:int -> (v4:unit -> X) -> X
    k_main_1397: v1:int -> v2:int -> v3:int -> (v4:unit -> X) -> v6:bool -> X
    init_1038: v1:int ->
               v2:int -> (v3:int -> (v4:int -> X) -> X) -> ((v7:int -> (v8:{v8:int | (1 <= v8)} -> X) -> X) -> X) -> X
    init_1038: v1:int ->
               v2:int ->
               (v3:int -> (v4:{v4:int | (1 <= v4)} -> X) -> X) ->
               ((v7:int -> (v8:{v8:int | (1 <= v8)} -> X) -> X) -> X) -> X
    f_k_main_1547: v1:bool -> v2:int -> v3:int -> v4:int -> (v5:unit -> X) -> (v7:int -> (v8:int -> X) -> X) -> X
    k_main_1447: v1:bool ->
                 v2:int -> v3:int -> v4:int -> (v5:unit -> X) -> (v7:int -> (v8:int -> X) -> X) -> v11:bool -> X
    update_1033: v1:int -> (v2:int -> (v3:int -> X) -> X) -> v6:int -> v7:int -> (v8:int -> X) -> X
    k_update_1263: v1:int -> v2:int -> v3:int -> (v4:int -> (v5:int -> X) -> X) -> (v8:int -> X) -> v10:bool -> X
    f_k_main_1548: v1:bool -> v2:bool -> v3:int -> v4:int -> v5:int -> (v6:unit -> X) -> v8:int -> X
    fail_1554: v1:{v1:bool | false} -> (v2:unit -> X) -> X
    f_1552: var234:int -> var233:int -> var232:int -> var231:unit -> X
    fail_1553: var238:bool -> (var237:unit -> X) -> X
    k_make_array_u_1213: var244:int -> var243:int -> (var242:int -> X) -> var240:bool -> X
    k_make_array_u_1224: var250:int -> var249:int -> (var248:int -> X) -> var246:unit -> X
    make_array_1030: var255:int -> var254:int -> (var253:int -> X) -> X
  abstraction types:
    main_1546: X
    f_1549: v1:int -> X
    f_1550: v1:int -> v2:int -> X
    f_1551: v1:int -> v2:int -> v3:int -> X
    main_1042: v1:int -> v2:int -> v3:int -> (v4:unit -> X) -> X
    k_main_1397: v1:int -> v2:int -> v3:int -> (v4:unit -> X) -> v6:bool -> X
    init_1038: var256:int ->
               var257:int ->
               (var258:int -> (var259:int[var259 -> (1 <= var259)] -> X) -> X) ->
               ((var262:int -> (var263:int[var263 -> (1 <= var263)] -> X) -> X) -> X) -> X
    f_k_main_1547: v1:bool -> v2:int -> v3:int -> v4:int -> (v5:unit -> X) -> (v7:int -> (v8:int -> X) -> X) -> X
    k_main_1447: v1:bool ->
                 v2:int -> v3:int -> v4:int -> (v5:unit -> X) -> (v7:int -> (v8:int -> X) -> X) -> v11:bool -> X
    update_1033: v1:int -> (v2:int -> (v3:int -> X) -> X) -> v6:int -> v7:int -> (v8:int -> X) -> X
    k_update_1263: v1:int -> v2:int -> v3:int -> (v4:int -> (v5:int -> X) -> X) -> (v8:int -> X) -> v10:bool -> X
    f_k_main_1548: v1:bool -> v2:bool -> v3:int -> v4:int -> v5:int -> (v6:unit -> X) -> v8:int -> X
    fail_1554: v1:bool -> (v2:unit -> X) -> X
    f_1552: var234:int -> var233:int -> var232:int -> var231:unit -> X
    fail_1553: var238:bool -> (var237:unit -> X) -> X
    k_make_array_u_1213: var244:int -> var243:int -> (var242:int -> X) -> var240:bool -> X
    k_make_array_u_1224: var250:int -> var249:int -> (var248:int -> X) -> var246:unit -> X
    make_array_1030: var255:int -> var254:int -> (var253:int -> X) -> X
  
end AbsTypeInfer.refine(21415)[1] (1.482775 sec.)
DONE!

Prefix of spurious counter-example::
0; 0; 0; 0; 0; 0; 1; 0; 0; 0; 0; 0; 1

Program with abstraction types (CEGAR-cycle 5)::
Main: main_1546
  main_1546 -> (rand_int f_1549)
  f_1549 x_1487 -> (rand_int (f_1550 x_1487))
  f_1550 x_1487 x_1500 -> (rand_int (f_1551 x_1487 x_1500))
  f_1551 x_1487 x_1500 x_1513 -> (main_1042 x_1487 x_1500 x_1513 (f_1552 x_1487 x_1500 x_1513))
  f_1552 x_1487 x_1500 x_1513 x_1484 -> end
  f_k_main_1547 b_1481 i_1045 k_1043 n_1044 k_main_1394 x_1404 when (
      0 <= i_1045) -> (k_main_1447 b_1481 i_1045 k_1043 n_1044 k_main_1394 x_1404 (i_1045 < n_1044))
  f_k_main_1547 b_1481 i_1045 k_1043 n_1044 k_main_1394 x_1404 when (
      not (0 <= i_1045)) -> (k_main_1447 b_1481 i_1045 k_1043 n_1044 k_main_1394 x_1404 false)
  f_k_main_1548 b_1477 b_1481 i_1045 k_1043 n_1044 k_main_1394 x_1451 when (x_1451 >= 1) -> (k_main_1394 ())
  f_k_main_1548 b_1477 b_1481 i_1045 k_1043 n_1044 k_main_1394 x_1451 when (
      not (x_1451 >= 1)) -> (fail_1554 true k_main_1394)
  fail_1553 b k -> {fail} => (k ())
  fail_1554 b k -> {fail} => (k ())
  init_1038 i_1039 n_1040 a_1041 k_init_1322 when (i_1039 >= n_1040) -> (k_init_1322 a_1041)
  init_1038 i_1039 n_1040 a_1041 k_init_1322 when (not (i_1039 >= n_1040)) ->
      (init_1038 (i_1039 + 1) n_1040 (update_1033 i_1039 a_1041 1) k_init_1322)
  k_main_1397 i_1045 k_1043 n_1044 k_main_1394 b_1481 when b_1481 ->
      (init_1038 k_1043 n_1044 (make_array_1030 n_1044) (f_k_main_1547 b_1481 i_1045 k_1043 n_1044 k_main_1394))
  k_main_1397 i_1045 k_1043 n_1044 k_main_1394 b_1481 when (not b_1481) -> (k_main_1394 ())
  k_main_1447 b_1481 i_1045 k_1043 n_1044 k_main_1394 x_1404 b_1477 when b_1477 ->
      (x_1404 i_1045 (f_k_main_1548 b_1477 b_1481 i_1045 k_1043 n_1044 k_main_1394))
  k_main_1447 b_1481 i_1045 k_1043 n_1044 k_main_1394 x_1404 b_1477 when (not b_1477) -> (k_main_1394 ())
  k_make_array_u_1213 i_1032 n_1031 k_make_array_1207 b_1225 when b_1225 ->
      (k_make_array_u_1224 i_1032 n_1031 k_make_array_1207 ())
  k_make_array_u_1213 i_1032 n_1031 k_make_array_1207 b_1225 when (not b_1225) ->
      (fail_1553 true (k_make_array_u_1224 i_1032 n_1031 k_make_array_1207))
  k_make_array_u_1224 i_1032 n_1031 k_make_array_1207 x_1210 -> (k_make_array_1207 0)
  k_update_1263 i_1034 j_1037 x_1036 a_1035 k_update_1260 b_1278 when b_1278 -> (k_update_1260 x_1036)
  k_update_1263 i_1034 j_1037 x_1036 a_1035 k_update_1260 b_1278 when (not b_1278) -> (a_1035 j_1037 k_update_1260)
  main_1042 k_1043 n_1044 i_1045 k_main_1394 when (k_1043 >= 0) ->
      (k_main_1397 i_1045 k_1043 n_1044 k_main_1394 (k_1043 <= 0))
  main_1042 k_1043 n_1044 i_1045 k_main_1394 when (not (k_1043 >= 0)) ->
      (k_main_1397 i_1045 k_1043 n_1044 k_main_1394 false)
  make_array_1030 n_1031 i_1032 k_make_array_1207 when (0 <= i_1032) ->
      (k_make_array_u_1213 i_1032 n_1031 k_make_array_1207 (i_1032 < n_1031))
  make_array_1030 n_1031 i_1032 k_make_array_1207 when (not (0 <= i_1032)) ->
      (k_make_array_u_1213 i_1032 n_1031 k_make_array_1207 false)
  update_1033 i_1034 a_1035 x_1036 j_1037 k_update_1260 when (j_1037 > (i_1034 - 1)) ->
      (k_update_1263 i_1034 j_1037 x_1036 a_1035 k_update_1260 (j_1037 <= i_1034))
  update_1033 i_1034 a_1035 x_1036 j_1037 k_update_1260 when (not (j_1037 > (i_1034 - 1))) ->
      (k_update_1263 i_1034 j_1037 x_1036 a_1035 k_update_1260 false)
Types:
  main_1546 : X
  fail_1553 : (x_1:bool[x_1] -> (unit -> X) -> X)
  fail_1554 : (x_1:bool[x_1] -> (unit -> X) -> X)
  init_1038 : (x_1:int ->
               x_2:int ->
               (x_4:int[x_2 <= 0; x_2 >= x_4 + 1; x_4 >= 0] -> (x_6:int[x_6 >= 1; x_2 <= 0] -> X) -> X) ->
               ((x_11:int[x_1 <= 0; x_2 >= x_11 + 1; x_11 >= 0] -> (x_13:int[x_13 >= 1; x_2 <= 0] -> X) -> X) -> X) -> X)
  
(5-1) Abstracting ... DONE!

(5-2) Checking HORS ... DONE!

Error trace::
  main_1546 ... --> 
  f_1549 ... --> 
  f_1550 ... --> 
  f_1551 ... --> 
  main_1042 [1/2] ... --> 
  k_main_1397 [1/2] ... --> 
  init_1038 [2/2] ... --> 
  init_1038 [1/2] ... --> 
  f_k_main_1547 [1/2] ... --> 
  k_main_1447 [1/2] ... --> 
  update_1033 [2/2] ... --> 
  k_update_1263 [2/2] ... --> 
  make_array_1030 [1/2] ... --> 
  k_make_array_u_1213 [1/2] ... --> 
  k_make_array_u_1224 ... --> 
  f_k_main_1548 [2/2] ... --> 
  fail_1554 ... --> fail -->
  ERROR!

Spurious counter-example::
  0; 0; 0; 0; 0; 0; 1; 0; 0; 0; 1; 1; 0; 0; 0; 1; 0

(5-3) Checking counter-example ... DONE!

(5-4) Discovering predicates ... 
begin AbsTypeInfer.refine(34071)[1]
  program:
    main_1546  | true = ((Random.int 0) f_1549)
    f_1549 x_1487 | true = ((Random.int 0) (f_1550 x_1487))
    f_1550 x_1487 x_1500 | true = ((Random.int 0) (f_1551 x_1487
                                                          x_1500))
    f_1551 x_1487 x_1500 x_1513 | true = (main_1042 x_1487
                                                    x_1500
                                                    x_1513
                                                    (f_1552 x_1487
                                                            x_1500
                                                            x_1513))
    f_1552 x_1487 x_1500 x_1513 x_1484 | true = end
    f_k_main_1547 b_1481 i_1045 k_1043 n_1044 k_main_1394 x_1404 | (0 <= i_1045) = (
    k_main_1447 b_1481
                i_1045
                k_1043
                n_1044
                k_main_1394
                x_1404
                (i_1045 < n_1044))
    f_k_main_1547 b_1481 i_1045 k_1043 n_1044 k_main_1394 x_1404 | (not (
                                                                    0 <= i_1045)) = (
    k_main_1447 b_1481
                i_1045
                k_1043
                n_1044
                k_main_1394
                x_1404
                false)
    f_k_main_1548 b_1477 b_1481 i_1045 k_1043 n_1044 k_main_1394 x_1451 | (
    x_1451 >= 1) = (k_main_1394 ())
    f_k_main_1548 b_1477 b_1481 i_1045 k_1043 n_1044 k_main_1394 x_1451 | (
    not (x_1451 >= 1)) = (fail_1554 true
                                    k_main_1394)
    fail_1553 b k | true = (fail ())
    fail_1554 b k | true = (fail ())
    init_1038 i_1039 n_1040 a_1041 k_init_1322 | (i_1039 >= n_1040) = (
    k_init_1322 a_1041)
    init_1038 i_1039 n_1040 a_1041 k_init_1322 | (not (i_1039 >= n_1040)) = (
    init_1038 (i_1039 + 1)
              n_1040
              (update_1033 i_1039
                           a_1041
                           1)
              k_init_1322)
    k_main_1397 i_1045 k_1043 n_1044 k_main_1394 b_1481 | b_1481 = (init_1038
                                                                    k_1043
                                                                    n_1044
                                                                    (
                                                                    make_array_1030 n_1044)
                                                                    (
                                                                    f_k_main_1547
                                                                    b_1481
                                                                    i_1045
                                                                    k_1043
                                                                    n_1044
                                                                    k_main_1394))
    k_main_1397 i_1045 k_1043 n_1044 k_main_1394 b_1481 | (not b_1481) = (
    k_main_1394 ())
    k_main_1447 b_1481 i_1045 k_1043 n_1044 k_main_1394 x_1404 b_1477 | b_1477 = (
    x_1404 i_1045
           (f_k_main_1548 b_1477
                          b_1481
                          i_1045
                          k_1043
                          n_1044
                          k_main_1394))
    k_main_1447 b_1481 i_1045 k_1043 n_1044 k_main_1394 x_1404 b_1477 | (
    not b_1477) = (k_main_1394 ())
    k_make_array_u_1213 i_1032 n_1031 k_make_array_1207 b_1225 | b_1225 = (
    k_make_array_u_1224 i_1032
                        n_1031
                        k_make_array_1207
                        ())
    k_make_array_u_1213 i_1032 n_1031 k_make_array_1207 b_1225 | (not b_1225) = (
    fail_1553 true
              (k_make_array_u_1224 i_1032
                                   n_1031
                                   k_make_array_1207))
    k_make_array_u_1224 i_1032 n_1031 k_make_array_1207 x_1210 | true = (
    k_make_array_1207 0)
    k_update_1263 i_1034 j_1037 x_1036 a_1035 k_update_1260 b_1278 | b_1278 = (
    k_update_1260 x_1036)
    k_update_1263 i_1034 j_1037 x_1036 a_1035 k_update_1260 b_1278 | (
    not b_1278) = (a_1035 j_1037
                          k_update_1260)
    main_1042 k_1043 n_1044 i_1045 k_main_1394 | (k_1043 >= 0) = (k_main_1397
                                                                    i_1045
                                                                    k_1043
                                                                    n_1044
                                                                    k_main_1394
                                                                    (
                                                                    k_1043 <= 0))
    main_1042 k_1043 n_1044 i_1045 k_main_1394 | (not (k_1043 >= 0)) = (
    k_main_1397 i_1045
                k_1043
                n_1044
                k_main_1394
                false)
    make_array_1030 n_1031 i_1032 k_make_array_1207 | (0 <= i_1032) = (
    k_make_array_u_1213 i_1032
                        n_1031
                        k_make_array_1207
                        (i_1032 < n_1031))
    make_array_1030 n_1031 i_1032 k_make_array_1207 | (not (0 <= i_1032)) = (
    k_make_array_u_1213 i_1032
                        n_1031
                        k_make_array_1207
                        false)
    update_1033 i_1034 a_1035 x_1036 j_1037 k_update_1260 | (j_1037 > (i_1034 - 1)) = (
    k_update_1263 i_1034
                  j_1037
                  x_1036
                  a_1035
                  k_update_1260
                  (j_1037 <= i_1034))
    update_1033 i_1034 a_1035 x_1036 j_1037 k_update_1260 | (not (j_1037 > (i_1034 - 1))) = (
    k_update_1263 i_1034
                  j_1037
                  x_1036
                  a_1035
                  k_update_1260
                  false)
    main_1546:X
    f_1549:int -> X
    f_1550:int -> int -> X
    f_1551:int -> int -> int -> X
    f_1552:int -> int -> int -> unit -> X
    f_k_main_1547:bool -> int -> int -> int -> (unit -> X) -> (int -> (int -> X) -> X) -> X
    f_k_main_1548:bool -> bool -> int -> int -> int -> (unit -> X) -> int -> X
    fail_1553:bool -> (unit -> X) -> X
    fail_1554:bool -> (unit -> X) -> X
    init_1038:int -> int -> (int -> (int -> X) -> X) -> ((int -> (int -> X) -> X) -> X) -> X
    k_main_1397:int -> int -> int -> (unit -> X) -> bool -> X
    k_main_1447:bool -> int -> int -> int -> (unit -> X) -> (int -> (int -> X) -> X) -> bool -> X
    k_make_array_u_1213:int -> int -> (int -> X) -> bool -> X
    k_make_array_u_1224:int -> int -> (int -> X) -> unit -> X
    k_update_1263:int -> int -> int -> (int -> (int -> X) -> X) -> (int -> X) -> bool -> X
    main_1042:int -> int -> int -> (unit -> X) -> X
    make_array_1030:int -> int -> (int -> X) -> X
    update_1033:int -> (int -> (int -> X) -> X) -> int -> int -> (int -> X) -> X
  inlined functions: f_1549,f_1550,f_1551,f_1552,f_k_main_1547,f_k_main_1548,k_main_1397,k_main_1447,k_make_array_u_1213,k_make_array_u_1224,k_update_1263,main_1042,make_array_1030,update_1033
  counterexample: 0:0:0:0:0:0:1:0:0:0:1:1:0:0:0:1:0
  error traces:
    [true.nop(<f_1549@227:0> = var268)
     [true.nop((<f_1550@230:0> = <f_1549@227:0>) && (<f_1550@230:1> = var269))
      [true.nop((<f_1551@233:0> = <f_1550@230:0>) && ((<f_1551@233:1> = <f_1550@230:1>) && (<f_1551@233:2> = var270)))
       [true.
        ((<main_1042@235:0> = <f_1551@233:0>) &&
         ((<main_1042@235:1> = <f_1551@233:1>) && (<main_1042@235:2> = <f_1551@233:2>)))
        [(<main_1042@235:0> >= 0).
         ((<k_main_1397@238:0> = <main_1042@235:2>) &&
          ((<k_main_1397@238:1> = <main_1042@235:0>) &&
           ((<k_main_1397@238:2> = <main_1042@235:1>) && (<k_main_1397@238:4> = (<main_1042@235:0> <= 0)))))
         [<k_main_1397@238:4>.((<init_1038@241:0> = <k_main_1397@238:1>) && (<init_1038@241:1> = <k_main_1397@238:2>))
          [(not (<init_1038@241:0> >= <init_1038@241:1>)).
           ((<init_1038@244:0> = (<init_1038@241:0> + 1)) && (<init_1038@244:1> = <init_1038@241:1>))
           [(<init_1038@244:0> >= <init_1038@244:1>).true
            [true.true
             [true.
              ((<f_k_main_1547@251:0> = <k_main_1397@238:4>) &&
               ((<f_k_main_1547@251:1> = <k_main_1397@238:0>) &&
                ((<f_k_main_1547@251:2> = <k_main_1397@238:1>) && (<f_k_main_1547@251:3> = <k_main_1397@238:2>))))
              [(0 <= <f_k_main_1547@251:1>).
               ((<k_main_1447@254:0> = <f_k_main_1547@251:0>) &&
                ((<k_main_1447@254:1> = <f_k_main_1547@251:1>) &&
                 ((<k_main_1447@254:2> = <f_k_main_1547@251:2>) &&
                  ((<k_main_1447@254:3> = <f_k_main_1547@251:3>) &&
                   (<k_main_1447@254:6> = (<f_k_main_1547@251:1> < <f_k_main_1547@251:3>))))))
               [<k_main_1447@254:6>.(<<k_main_1447@254:5>@257:0> = <k_main_1447@254:1>)
                [true.(<<f_k_main_1547@251:5>@259:0> = <<k_main_1447@254:5>@257:0>)
                 [true.(<<<init_1038@241:3>@249:0>@261:0> = <<f_k_main_1547@251:5>@259:0>)
                  [true.(<<<init_1038@244:3>@247:0>@263:0> = <<<init_1038@241:3>@249:0>@261:0>)
                   [true.(<<init_1038@244:2>@265:0> = <<<init_1038@244:3>@247:0>@263:0>)
                    [true.
                     ((<update_1033@267:0> = <init_1038@241:0>) &&
                      ((<update_1033@267:2> = 1) && (<update_1033@267:3> = <<init_1038@244:2>@265:0>)))
                     [(not (<update_1033@267:3> > (<update_1033@267:0> - 1))).
                      ((<k_update_1263@270:0> = <update_1033@267:0>) &&
                       ((<k_update_1263@270:1> = <update_1033@267:3>) &&
                        ((<k_update_1263@270:2> = <update_1033@267:2>) && (<k_update_1263@270:5> = false))))
                      [(not <k_update_1263@270:5>).(<<k_update_1263@270:3>@273:0> = <k_update_1263@270:1>)
                       [true.(<<update_1033@267:1>@275:0> = <<k_update_1263@270:3>@273:0>)
                        [true.(<<init_1038@241:2>@277:0> = <<update_1033@267:1>@275:0>)
                         [true.
                          ((<make_array_1030@279:0> = <k_main_1397@238:2>) &&
                           (<make_array_1030@279:1> = <<init_1038@241:2>@277:0>))
                          [(0 <= <make_array_1030@279:1>).
                           ((<k_make_array_u_1213@282:0> = <make_array_1030@279:1>) &&
                            ((<k_make_array_u_1213@282:1> = <make_array_1030@279:0>) &&
                             (<k_make_array_u_1213@282:3> = (<make_array_1030@279:1> < <make_array_1030@279:0>))))
                           [<k_make_array_u_1213@282:3>.
                            ((<k_make_array_u_1224@285:0> = <k_make_array_u_1213@282:0>) &&
                             ((<k_make_array_u_1224@285:1> = <k_make_array_u_1213@282:1>) &&
                              (<k_make_array_u_1224@285:3> = ())))
                            [true.(<<k_make_array_u_1224@285:2>@287:0> = 0)
                             [true.(<<k_make_array_u_1213@282:2>@289:0> = <<k_make_array_u_1224@285:2>@287:0>)
                              [true.(<<make_array_1030@279:2>@291:0> = <<k_make_array_u_1213@282:2>@289:0>)
                               [true.(<<<init_1038@241:2>@277:1>@293:0> = <<make_array_1030@279:2>@291:0>)
                                [true.(<<<update_1033@267:1>@275:1>@295:0> = <<<init_1038@241:2>@277:1>@293:0>)
                                 [true.(<<<k_update_1263@270:3>@273:1>@297:0> = <<<update_1033@267:1>@275:1>@295:0>)
                                  [true.(<<k_update_1263@270:4>@299:0> = <<<k_update_1263@270:3>@273:1>@297:0>)
                                   [true.(<<update_1033@267:4>@301:0> = <<k_update_1263@270:4>@299:0>)
                                    [true.(<<<init_1038@244:2>@265:1>@303:0> = <<update_1033@267:4>@301:0>)
                                     [true.
                                      (<<<<init_1038@244:3>@247:0>@263:1>@305:0> = <<<init_1038@244:2>@265:1>@303:0>)
                                      [true.
                                       (<<<<init_1038@241:3>@249:0>@261:1>@307:0> =
                                        <<<<init_1038@244:3>@247:0>@263:1>@305:0>)
                                       [true.
                                        (<<<f_k_main_1547@251:5>@259:1>@309:0> =
                                         <<<<init_1038@241:3>@249:0>@261:1>@307:0>)
                                        [true.
                                         (<<<k_main_1447@254:5>@257:1>@311:0> = <<<f_k_main_1547@251:5>@259:1>@309:0>)
                                         [true.
                                          ((<f_k_main_1548@313:0> = <k_main_1447@254:6>) &&
                                           ((<f_k_main_1548@313:1> = <k_main_1447@254:0>) &&
                                            ((<f_k_main_1548@313:2> = <k_main_1447@254:1>) &&
                                             ((<f_k_main_1548@313:3> = <k_main_1447@254:2>) &&
                                              ((<f_k_main_1548@313:4> = <k_main_1447@254:3>) &&
                                               (<f_k_main_1548@313:6> = <<<k_main_1447@254:5>@257:1>@311:0>))))))
                                          [(not (<f_k_main_1548@313:6> >= 1)).(<fail_1554@316:0> = true)[true.error
  begin RefTypeInfer.infer_etrs(34072)[2]
    horn clauses:
      P[<fail_1554@316:0>](<fail_1554@316:0>:bool)|- bot
      
      P[<f_k_main_1548@313:6>](<f_k_main_1548@313:0>:bool,<f_k_main_1548@313:1>:bool,<f_k_main_1548@313:2>:int,<f_k_main_1548@313:3>:int,<f_k_main_1548@313:4>:int,<f_k_main_1548@313:6>:int),
      ((<f_k_main_1548@313:6> < 1) && <fail_1554@316:0>) |- P[<fail_1554@316:0>](
      <fail_1554@316:0>:bool)
      
      P[<k_main_1447@254:6>](<f_k_main_1548@313:1>:bool,<f_k_main_1548@313:2>:int,<f_k_main_1548@313:3>:int,<f_k_main_1548@313:4>:int,<f_k_main_1548@313:0>:bool),
      P[<<<k_main_1447@254:5>@257:1>@311:0>](<f_k_main_1548@313:1>:bool,<f_k_main_1548@313:2>:int,<f_k_main_1548@313:3>:int,<f_k_main_1548@313:4>:int,<f_k_main_1548@313:2>:int,<f_k_main_1548@313:6>:int),
      <f_k_main_1548@313:0>
      |- P[<f_k_main_1548@313:6>](<f_k_main_1548@313:0>:bool,<f_k_main_1548@313:1>:bool,
                                  <f_k_main_1548@313:2>:int,<f_k_main_1548@313:3>:int,
                                  <f_k_main_1548@313:4>:int,<f_k_main_1548@313:6>:int)
      
      P[<f_k_main_1547@251:3>](<k_main_1447@254:0>:bool,<k_main_1447@254:1>:int,<k_main_1447@254:2>:int,<k_main_1447@254:3>:int),
      P[<<<f_k_main_1547@251:5>@259:1>@309:0>](<k_main_1447@254:0>:bool,<k_main_1447@254:1>:int,<k_main_1447@254:2>:int,<k_main_1447@254:3>:int,<<k_main_1447@254:5>@257:0>:int,<<<k_main_1447@254:5>@257:1>@311:0>:int),
      (0 <= <k_main_1447@254:1>)
      |- P[<<<k_main_1447@254:5>@257:1>@311:0>](<k_main_1447@254:0>:bool,
                                                <k_main_1447@254:1>:int,
                                                <k_main_1447@254:2>:int,
                                                <k_main_1447@254:3>:int,
                                                <<k_main_1447@254:5>@257:0>:int,
                                                <<<k_main_1447@254:5>@257:1>@311:0>:int)
      
      P[<k_main_1397@238:4>](<f_k_main_1547@251:1>:int,<f_k_main_1547@251:2>:int,<f_k_main_1547@251:3>:int,<f_k_main_1547@251:0>:bool),
      P[<<<<init_1038@241:3>@249:0>@261:1>@307:0>](<f_k_main_1547@251:2>:int,<f_k_main_1547@251:3>:int,<<f_k_main_1547@251:5>@259:0>:int,<<<f_k_main_1547@251:5>@259:1>@309:0>:int),
      P[<f_k_main_1547@251:3>](<f_k_main_1547@251:0>:bool,<f_k_main_1547@251:1>:int,<f_k_main_1547@251:2>:int,<f_k_main_1547@251:3>:int),
      <f_k_main_1547@251:0>
      |- P[<<<f_k_main_1547@251:5>@259:1>@309:0>](<f_k_main_1547@251:0>:bool,
                                                  <f_k_main_1547@251:1>:int,
                                                  <f_k_main_1547@251:2>:int,
                                                  <f_k_main_1547@251:3>:int,
                                                  <<f_k_main_1547@251:5>@259:0>:int,
                                                  <<<f_k_main_1547@251:5>@259:1>@309:0>:int)
      
      P[<init_1038@241:1>](<init_1038@241:0>:int,<init_1038@241:1>:int),
      P[<<<<init_1038@244:3>@247:0>@263:1>@305:0>]((1 + <init_1038@241:0>):int,<init_1038@241:1>:int,<<<init_1038@241:3>@249:0>@261:0>:int,<<<<init_1038@241:3>@249:0>@261:1>@307:0>:int),
      (<init_1038@241:0> < <init_1038@241:1>)
      |- P[<<<<init_1038@241:3>@249:0>@261:1>@307:0>](<init_1038@241:0>:int,
                                                      <init_1038@241:1>:int,
                                                      <<<init_1038@241:3>@249:0>@261:0>:int,
                                                      <<<<init_1038@241:3>@249:0>@261:1>@307:0>:int)
      
      P[<init_1038@244:1>](<init_1038@244:0>:int,<init_1038@244:1>:int),
      P[<<<init_1038@244:2>@265:1>@303:0>](<init_1038@244:0>:int,<init_1038@244:1>:int,<<<init_1038@244:3>@247:0>@263:0>:int,<<<<init_1038@244:3>@247:0>@263:1>@305:0>:int),
      (<init_1038@244:0> >= <init_1038@244:1>)
      |- P[<<<<init_1038@244:3>@247:0>@263:1>@305:0>](<init_1038@244:0>:int,
                                                      <init_1038@244:1>:int,
                                                      <<<init_1038@244:3>@247:0>@263:0>:int,
                                                      <<<<init_1038@244:3>@247:0>@263:1>@305:0>:int)
      
      P[<init_1038@241:1>]((-1 + <init_1038@244:0>):int,<init_1038@244:1>:int),
      P[<<update_1033@267:4>@301:0>]((-1 + <init_1038@244:0>):int,1:int,<<init_1038@244:2>@265:0>:int,<<<init_1038@244:2>@265:1>@303:0>:int),
      P[<init_1038@244:1>](<init_1038@244:0>:int,<init_1038@244:1>:int), (
      <init_1038@244:0> < (1 + <init_1038@244:1>))
      |- P[<<<init_1038@244:2>@265:1>@303:0>](<init_1038@244:0>:int,<init_1038@244:1>:int,
                                              <<init_1038@244:2>@265:0>:int,
                                              <<<init_1038@244:2>@265:1>@303:0>:int)
      
      P[<update_1033@267:3>](<update_1033@267:0>:int,<update_1033@267:2>:int,<update_1033@267:3>:int),
      P[<<k_update_1263@270:4>@299:0>](<update_1033@267:0>:int,<update_1033@267:3>:int,<update_1033@267:2>:int,<<update_1033@267:4>@301:0>:int),
      ((1 + <update_1033@267:3>) <= <update_1033@267:0>)
      |- P[<<update_1033@267:4>@301:0>](<update_1033@267:0>:int,<update_1033@267:2>:int,
                                        <update_1033@267:3>:int,<<update_1033@267:4>@301:0>:int)
      
      P[<k_update_1263@270:5>](<k_update_1263@270:0>:int,<k_update_1263@270:1>:int,<k_update_1263@270:2>:int,false:bool),
      P[<<<k_update_1263@270:3>@273:1>@297:0>](<k_update_1263@270:0>:int,<k_update_1263@270:1>:int,<k_update_1263@270:2>:int,<k_update_1263@270:1>:int,<<k_update_1263@270:4>@299:0>:int)|- P[<<k_update_1263@270:4>@299:0>](
      <k_update_1263@270:0>:int,<k_update_1263@270:1>:int,<k_update_1263@270:2>:int,
      <<k_update_1263@270:4>@299:0>:int)
      
      P[<update_1033@267:3>](<k_update_1263@270:0>:int,<k_update_1263@270:2>:int,<k_update_1263@270:1>:int),
      P[<<<update_1033@267:1>@275:1>@295:0>](<k_update_1263@270:0>:int,<<k_update_1263@270:3>@273:0>:int,<<<k_update_1263@270:3>@273:1>@297:0>:int),
      ((1 + <k_update_1263@270:1>) <= <k_update_1263@270:0>)
      |- P[<<<k_update_1263@270:3>@273:1>@297:0>](<k_update_1263@270:0>:int,
                                                  <k_update_1263@270:1>:int,
                                                  <k_update_1263@270:2>:int,
                                                  <<k_update_1263@270:3>@273:0>:int,
                                                  <<<k_update_1263@270:3>@273:1>@297:0>:int)
      
      P[<init_1038@241:1>](<update_1033@267:0>:int,<init_1038@244:1>:int),
      P[<<<init_1038@241:2>@277:1>@293:0>](<update_1033@267:0>:int,<init_1038@244:1>:int,<<update_1033@267:1>@275:0>:int,<<<update_1033@267:1>@275:1>@295:0>:int),
      (<update_1033@267:0> < <init_1038@244:1>)
      |- P[<<<update_1033@267:1>@275:1>@295:0>](<update_1033@267:0>:int,
                                                <<update_1033@267:1>@275:0>:int,
                                                <<<update_1033@267:1>@275:1>@295:0>:int)
      
      P[<k_main_1397@238:4>](<f_k_main_1547@251:1>:int,<init_1038@241:0>:int,<init_1038@241:1>:int,true:bool),
      P[<<make_array_1030@279:2>@291:0>](<init_1038@241:1>:int,<<init_1038@241:2>@277:0>:int,<<<init_1038@241:2>@277:1>@293:0>:int),
      P[<init_1038@241:1>](<init_1038@241:0>:int,<init_1038@241:1>:int)|- P[<<<init_1038@241:2>@277:1>@293:0>](
      <init_1038@241:0>:int,<init_1038@241:1>:int,<<init_1038@241:2>@277:0>:int,
      <<<init_1038@241:2>@277:1>@293:0>:int)
      
      P[<make_array_1030@279:1>](<make_array_1030@279:0>:int,<make_array_1030@279:1>:int),
      P[<<k_make_array_u_1213@282:2>@289:0>](<make_array_1030@279:1>:int,<make_array_1030@279:0>:int,<<make_array_1030@279:2>@291:0>:int),
      (0 <= <make_array_1030@279:1>)
      |- P[<<make_array_1030@279:2>@291:0>](<make_array_1030@279:0>:int,
                                            <make_array_1030@279:1>:int,
                                            <<make_array_1030@279:2>@291:0>:int)
      
      P[<k_make_array_u_1213@282:3>](<k_make_array_u_1213@282:0>:int,<k_make_array_u_1213@282:1>:int,true:bool),
      P[<<k_make_array_u_1224@285:2>@287:0>](<k_make_array_u_1213@282:0>:int,<k_make_array_u_1213@282:1>:int,<<k_make_array_u_1213@282:2>@289:0>:int)|- P[<<k_make_array_u_1213@282:2>@289:0>](
      <k_make_array_u_1213@282:0>:int,<k_make_array_u_1213@282:1>:int,
      <<k_make_array_u_1213@282:2>@289:0>:int)
      
      P[<k_make_array_u_1224@285:3>](<k_make_array_u_1224@285:0>:int,<k_make_array_u_1224@285:1>:int,<k_make_array_u_1224@285:3>:unit),
      (<<k_make_array_u_1224@285:2>@287:0> = 0)
      |- P[<<k_make_array_u_1224@285:2>@287:0>](<k_make_array_u_1224@285:0>:int,
                                                <k_make_array_u_1224@285:1>:int,
                                                <<k_make_array_u_1224@285:2>@287:0>:int)
      
      P[<k_make_array_u_1213@282:3>](<k_make_array_u_1224@285:0>:int,<k_make_array_u_1224@285:1>:int,true:bool)|- P[<k_make_array_u_1224@285:3>](
      <k_make_array_u_1224@285:0>:int,<k_make_array_u_1224@285:1>:int,
      <k_make_array_u_1224@285:3>:unit)
      
      P[<make_array_1030@279:1>](<k_make_array_u_1213@282:1>:int,<k_make_array_u_1213@282:0>:int),
      ((0 <= <k_make_array_u_1213@282:0>) &&
       (<k_make_array_u_1213@282:3> = (<k_make_array_u_1213@282:0> < <k_make_array_u_1213@282:1>)))
      |- P[<k_make_array_u_1213@282:3>](<k_make_array_u_1213@282:0>:int,
                                        <k_make_array_u_1213@282:1>:int,
                                        <k_make_array_u_1213@282:3>:bool)
      
      P[<k_main_1397@238:4>](<f_k_main_1547@251:1>:int,<init_1038@241:0>:int,<make_array_1030@279:0>:int,true:bool),
      P[<<init_1038@241:2>@277:0>](<init_1038@241:0>:int,<make_array_1030@279:0>:int,<make_array_1030@279:1>:int)|- P[<make_array_1030@279:1>](
      <make_array_1030@279:0>:int,<make_array_1030@279:1>:int)
      
      P[<init_1038@241:1>](<init_1038@241:0>:int,<init_1038@241:1>:int),
      P[<<update_1033@267:1>@275:0>](<init_1038@241:0>:int,<<init_1038@241:2>@277:0>:int),
      (<init_1038@241:0> < <init_1038@241:1>)
      |- P[<<init_1038@241:2>@277:0>](<init_1038@241:0>:int,<init_1038@241:1>:int,
                                      <<init_1038@241:2>@277:0>:int)
      
      P[<update_1033@267:3>](<update_1033@267:0>:int,<k_update_1263@270:2>:int,<k_update_1263@270:1>:int),
      P[<<k_update_1263@270:3>@273:0>](<update_1033@267:0>:int,<k_update_1263@270:1>:int,<k_update_1263@270:2>:int,<<update_1033@267:1>@275:0>:int),
      ((1 + <k_update_1263@270:1>) <= <update_1033@267:0>)
      |- P[<<update_1033@267:1>@275:0>](<update_1033@267:0>:int,<<update_1033@267:1>@275:0>:int)
      
      P[<k_update_1263@270:5>](<k_update_1263@270:0>:int,<k_update_1263@270:1>:int,<k_update_1263@270:2>:int,false:bool),
      (<<k_update_1263@270:3>@273:0> = <k_update_1263@270:1>)
      |- P[<<k_update_1263@270:3>@273:0>](<k_update_1263@270:0>:int,<k_update_1263@270:1>:int,
                                          <k_update_1263@270:2>:int,<<k_update_1263@270:3>@273:0>:int)
      
      P[<update_1033@267:3>](<k_update_1263@270:0>:int,<k_update_1263@270:2>:int,<k_update_1263@270:1>:int),
      (((1 + <k_update_1263@270:1>) <= <k_update_1263@270:0>) && (not <k_update_1263@270:5>))
      |- P[<k_update_1263@270:5>](<k_update_1263@270:0>:int,<k_update_1263@270:1>:int,
                                  <k_update_1263@270:2>:int,<k_update_1263@270:5>:bool)
      
      P[<init_1038@241:1>](<update_1033@267:0>:int,<init_1038@244:1>:int),
      P[<<init_1038@244:2>@265:0>]((1 + <update_1033@267:0>):int,<init_1038@244:1>:int,<update_1033@267:3>:int),
      ((<update_1033@267:2> = 1) && (<update_1033@267:0> < <init_1038@244:1>))
      |- P[<update_1033@267:3>](<update_1033@267:0>:int,<update_1033@267:2>:int,
                                <update_1033@267:3>:int)
      
      P[<init_1038@244:1>](<init_1038@244:0>:int,<init_1038@244:1>:int),
      P[<<<init_1038@244:3>@247:0>@263:0>](<init_1038@244:0>:int,<init_1038@244:1>:int,<<init_1038@244:2>@265:0>:int),
      (<init_1038@244:0> >= <init_1038@244:1>)
      |- P[<<init_1038@244:2>@265:0>](<init_1038@244:0>:int,<init_1038@244:1>:int,
                                      <<init_1038@244:2>@265:0>:int)
      
      P[<init_1038@241:1>]((-1 + <init_1038@244:0>):int,<init_1038@244:1>:int),
      P[<<<init_1038@241:3>@249:0>@261:0>]((-1 + <init_1038@244:0>):int,<init_1038@244:1>:int,<<<init_1038@244:3>@247:0>@263:0>:int),
      P[<init_1038@244:1>](<init_1038@244:0>:int,<init_1038@244:1>:int), (
      <init_1038@244:0> < (1 + <init_1038@244:1>))
      |- P[<<<init_1038@244:3>@247:0>@263:0>](<init_1038@244:0>:int,<init_1038@244:1>:int,
                                              <<<init_1038@244:3>@247:0>@263:0>:int)
      
      P[<k_main_1397@238:4>](<f_k_main_1547@251:1>:int,<init_1038@241:0>:int,<init_1038@241:1>:int,true:bool),
      P[<<f_k_main_1547@251:5>@259:0>](true:bool,<f_k_main_1547@251:1>:int,<init_1038@241:0>:int,<init_1038@241:1>:int,<<<init_1038@241:3>@249:0>@261:0>:int),
      P[<init_1038@241:1>](<init_1038@241:0>:int,<init_1038@241:1>:int)|- P[<<<init_1038@241:3>@249:0>@261:0>](
      <init_1038@241:0>:int,<init_1038@241:1>:int,<<<init_1038@241:3>@249:0>@261:0>:int)
      
      P[<f_k_main_1547@251:3>](<f_k_main_1547@251:0>:bool,<f_k_main_1547@251:1>:int,<f_k_main_1547@251:2>:int,<f_k_main_1547@251:3>:int),
      P[<<k_main_1447@254:5>@257:0>](<f_k_main_1547@251:0>:bool,<f_k_main_1547@251:1>:int,<f_k_main_1547@251:2>:int,<f_k_main_1547@251:3>:int,<<f_k_main_1547@251:5>@259:0>:int),
      (0 <= <f_k_main_1547@251:1>)
      |- P[<<f_k_main_1547@251:5>@259:0>](<f_k_main_1547@251:0>:bool,
                                          <f_k_main_1547@251:1>:int,<f_k_main_1547@251:2>:int,
                                          <f_k_main_1547@251:3>:int,<<f_k_main_1547@251:5>@259:0>:int)
      
      P[<k_main_1447@254:6>](<k_main_1447@254:0>:bool,<k_main_1447@254:1>:int,<k_main_1447@254:2>:int,<k_main_1447@254:3>:int,true:bool),
      (<<k_main_1447@254:5>@257:0> = <k_main_1447@254:1>)
      |- P[<<k_main_1447@254:5>@257:0>](<k_main_1447@254:0>:bool,<k_main_1447@254:1>:int,
                                        <k_main_1447@254:2>:int,<k_main_1447@254:3>:int,
                                        <<k_main_1447@254:5>@257:0>:int)
      
      P[<f_k_main_1547@251:3>](<k_main_1447@254:0>:bool,<k_main_1447@254:1>:int,<k_main_1447@254:2>:int,<k_main_1447@254:3>:int),
      ((0 <= <k_main_1447@254:1>) && (<k_main_1447@254:6> = (<k_main_1447@254:1> < <k_main_1447@254:3>)))
      |- P[<k_main_1447@254:6>](<k_main_1447@254:0>:bool,<k_main_1447@254:1>:int,
                                <k_main_1447@254:2>:int,<k_main_1447@254:3>:int,
                                <k_main_1447@254:6>:bool)
      
      P[<k_main_1397@238:4>](<f_k_main_1547@251:1>:int,<f_k_main_1547@251:2>:int,<f_k_main_1547@251:3>:int,<f_k_main_1547@251:0>:bool),
      <f_k_main_1547@251:0>
      |- P[<f_k_main_1547@251:3>](<f_k_main_1547@251:0>:bool,<f_k_main_1547@251:1>:int,
                                  <f_k_main_1547@251:2>:int,<f_k_main_1547@251:3>:int)
      
      P[<init_1038@241:1>]((-1 + <init_1038@244:0>):int,<init_1038@244:1>:int),
      (<init_1038@244:0> < (1 + <init_1038@244:1>))
      |- P[<init_1038@244:1>](<init_1038@244:0>:int,<init_1038@244:1>:int)
      
      P[<k_main_1397@238:4>](<k_main_1397@238:0>:int,<init_1038@241:0>:int,<init_1038@241:1>:int,true:bool)|- P[<init_1038@241:1>](
      <init_1038@241:0>:int,<init_1038@241:1>:int)
      
      P[<main_1042@235:2>](<k_main_1397@238:1>:int,<k_main_1397@238:2>:int,<k_main_1397@238:0>:int),
      ((<k_main_1397@238:1> >= 0) && (<k_main_1397@238:4> = (<k_main_1397@238:1> <= 0)))
      |- P[<k_main_1397@238:4>](<k_main_1397@238:0>:int,<k_main_1397@238:1>:int,
                                <k_main_1397@238:2>:int,<k_main_1397@238:4>:bool)
      
      P[<f_1551@233:2>](<main_1042@235:0>:int,<main_1042@235:1>:int,<main_1042@235:2>:int)|- P[<main_1042@235:2>](
      <main_1042@235:0>:int,<main_1042@235:1>:int,<main_1042@235:2>:int)
      
      P[<f_1550@230:1>](<f_1551@233:0>:int,<f_1551@233:1>:int)|- P[<f_1551@233:2>](
      <f_1551@233:0>:int,<f_1551@233:1>:int,<f_1551@233:2>:int)
      
      P[<f_1549@227:0>](<f_1550@230:0>:int)|- P[<f_1550@230:1>](<f_1550@230:0>:int,
                                                                <f_1550@230:1>:int)
      
      |- P[<f_1549@227:0>](<f_1549@227:0>:int)
    call trees:
      <main_1546@224>
        <f_1549@227>
          <f_1550@230>
            <f_1551@233>
              <main_1042@235>
                <k_main_1397@238>
                  <init_1038@241>
                    <init_1038@244>
                    </<init_1038@244:3>@247>
                  </<init_1038@241:3>@249>
                  <f_k_main_1547@251>
                    <k_main_1447@254>
                    </<k_main_1447@254:5>@257>
                  </<f_k_main_1547@251:5>@259>
                  <<<init_1038@241:3>@249:0>@261>
                    <<<init_1038@244:3>@247:0>@263>
                    </<init_1038@244:2>@265>
                    <update_1033@267>
                      <k_update_1263@270>
                      </<k_update_1263@270:3>@273>
                    </<update_1033@267:1>@275>
                  </<init_1038@241:2>@277>
                  <make_array_1030@279>
                    <k_make_array_u_1213@282>
                      <k_make_array_u_1224@285>
                      </<k_make_array_u_1224@285:2>@287>
                    </<k_make_array_u_1213@282:2>@289>
                  </<make_array_1030@279:2>@291>
                  <<<init_1038@241:2>@277:1>@293>
                    <<<update_1033@267:1>@275:1>@295>
                      <<<k_update_1263@270:3>@273:1>@297>
                      </<k_update_1263@270:4>@299>
                    </<update_1033@267:4>@301>
                    <<<init_1038@244:2>@265:1>@303>
                    </<<<init_1038@244:3>@247:0>@263:1>@305>
                  </<<<init_1038@241:3>@249:0>@261:1>@307>
                  <<<f_k_main_1547@251:5>@259:1>@309>
                    <<<k_main_1447@254:5>@257:1>@311>
                      <f_k_main_1548@313>
                        <fail_1554@316>
    inlined horn clauses:
      P[<fail_1554@316:0>](<fail_1554@316:0>:bool)|- bot
      
      P[<<<<init_1038@241:3>@249:0>@261:1>@307:0>](0:int,<f_k_main_1548@313:4>:int,<f_k_main_1548@313:2>:int,<f_k_main_1548@313:6>:int),
      ((<f_k_main_1548@313:2> < <f_k_main_1548@313:4>) &&
       ((0 <= <f_k_main_1548@313:2>) && ((<f_k_main_1548@313:6> < 1) && <fail_1554@316:0>)))
      |- P[<fail_1554@316:0>](<fail_1554@316:0>:bool)
      
      P[<init_1038@241:1>](<init_1038@241:0>:int,<init_1038@241:1>:int),
      P[<<<<init_1038@244:3>@247:0>@263:1>@305:0>]((1 + <init_1038@241:0>):int,<init_1038@241:1>:int,<<<init_1038@241:3>@249:0>@261:0>:int,<<<<init_1038@241:3>@249:0>@261:1>@307:0>:int),
      (<init_1038@241:0> < <init_1038@241:1>)
      |- P[<<<<init_1038@241:3>@249:0>@261:1>@307:0>](<init_1038@241:0>:int,
                                                      <init_1038@241:1>:int,
                                                      <<<init_1038@241:3>@249:0>@261:0>:int,
                                                      <<<<init_1038@241:3>@249:0>@261:1>@307:0>:int)
      
      P[<init_1038@244:1>](<init_1038@244:0>:int,<init_1038@244:1>:int),
      P[<<<init_1038@244:2>@265:1>@303:0>](<init_1038@244:0>:int,<init_1038@244:1>:int,<<<init_1038@244:3>@247:0>@263:0>:int,<<<<init_1038@244:3>@247:0>@263:1>@305:0>:int),
      (<init_1038@244:0> >= <init_1038@244:1>)
      |- P[<<<<init_1038@244:3>@247:0>@263:1>@305:0>](<init_1038@244:0>:int,
                                                      <init_1038@244:1>:int,
                                                      <<<init_1038@244:3>@247:0>@263:0>:int,
                                                      <<<<init_1038@244:3>@247:0>@263:1>@305:0>:int)
      
      P[<init_1038@241:1>]((-1 + <init_1038@244:0>):int,<init_1038@244:1>:int),
      P[<init_1038@244:1>](<init_1038@244:0>:int,<init_1038@244:1>:int),
      P[<init_1038@241:1>]((-1 + <init_1038@244:0>):int,var284:int),
      P[<<init_1038@244:2>@265:0>](<init_1038@244:0>:int,var284:int,<<init_1038@244:2>@265:0>:int),
      P[<init_1038@241:1>]((-1 + <init_1038@244:0>):int,var283:int),
      P[<<<init_1038@241:2>@277:1>@293:0>]((-1 + <init_1038@244:0>):int,var283:int,<<init_1038@244:2>@265:0>:int,<<<init_1038@244:2>@265:1>@303:0>:int),
      ((<init_1038@244:0> < (1 + var284)) &&
       ((<init_1038@244:0> < (1 + var283)) &&
        ((<init_1038@244:0> < (1 + <init_1038@244:1>)) && ((2 + <<init_1038@244:2>@265:0>) <= <init_1038@244:0>))))
      |- P[<<<init_1038@244:2>@265:1>@303:0>](<init_1038@244:0>:int,<init_1038@244:1>:int,
                                              <<init_1038@244:2>@265:0>:int,
                                              <<<init_1038@244:2>@265:1>@303:0>:int)
      
      P[<<init_1038@241:2>@277:0>](0:int,<init_1038@241:1>:int,<<init_1038@241:2>@277:0>:int),
      P[<init_1038@241:1>](<init_1038@241:0>:int,<init_1038@241:1>:int),
      ((<init_1038@241:0> = 0) &&
       ((<<<init_1038@241:2>@277:1>@293:0> = 0) &&
        ((0 <= <<init_1038@241:2>@277:0>) && (<<init_1038@241:2>@277:0> < <init_1038@241:1>))))
      |- P[<<<init_1038@241:2>@277:1>@293:0>](<init_1038@241:0>:int,<init_1038@241:1>:int,
                                              <<init_1038@241:2>@277:0>:int,
                                              <<<init_1038@241:2>@277:1>@293:0>:int)
      
      P[<init_1038@241:1>](<init_1038@241:0>:int,<init_1038@241:1>:int),
      P[<init_1038@241:1>](<init_1038@241:0>:int,var285:int),
      P[<<init_1038@244:2>@265:0>]((1 + <init_1038@241:0>):int,var285:int,<<init_1038@241:2>@277:0>:int),
      ((<init_1038@241:0> < var285) &&
       ((<init_1038@241:0> < <init_1038@241:1>) && ((1 + <<init_1038@241:2>@277:0>) <= <init_1038@241:0>)))
      |- P[<<init_1038@241:2>@277:0>](<init_1038@241:0>:int,<init_1038@241:1>:int,
                                      <<init_1038@241:2>@277:0>:int)
      
      P[<init_1038@244:1>](<init_1038@244:0>:int,<init_1038@244:1>:int),
      P[<<<init_1038@244:3>@247:0>@263:0>](<init_1038@244:0>:int,<init_1038@244:1>:int,<<init_1038@244:2>@265:0>:int),
      (<init_1038@244:0> >= <init_1038@244:1>)
      |- P[<<init_1038@244:2>@265:0>](<init_1038@244:0>:int,<init_1038@244:1>:int,
                                      <<init_1038@244:2>@265:0>:int)
      
      P[<init_1038@241:1>]((-1 + <init_1038@244:0>):int,<init_1038@244:1>:int),
      P[<<<init_1038@241:3>@249:0>@261:0>]((-1 + <init_1038@244:0>):int,<init_1038@244:1>:int,<<<init_1038@244:3>@247:0>@263:0>:int),
      P[<init_1038@244:1>](<init_1038@244:0>:int,<init_1038@244:1>:int), (
      <init_1038@244:0> < (1 + <init_1038@244:1>))
      |- P[<<<init_1038@244:3>@247:0>@263:0>](<init_1038@244:0>:int,<init_1038@244:1>:int,
                                              <<<init_1038@244:3>@247:0>@263:0>:int)
      
      P[<init_1038@241:1>](<init_1038@241:0>:int,<init_1038@241:1>:int),
      ((<init_1038@241:0> = 0) &&
       ((0 <= <<<init_1038@241:3>@249:0>@261:0>) && (<<<init_1038@241:3>@249:0>@261:0> < <init_1038@241:1>)))
      |- P[<<<init_1038@241:3>@249:0>@261:0>](<init_1038@241:0>:int,<init_1038@241:1>:int,
                                              <<<init_1038@241:3>@249:0>@261:0>:int)
      
      P[<init_1038@241:1>]((-1 + <init_1038@244:0>):int,<init_1038@244:1>:int),
      (<init_1038@244:0> < (1 + <init_1038@244:1>))
      |- P[<init_1038@244:1>](<init_1038@244:0>:int,<init_1038@244:1>:int)
      
       (<init_1038@241:0> = 0) |- P[<init_1038@241:1>](<init_1038@241:0>:int,
                                                       <init_1038@241:1>:int)
    begin ParamSubstInfer.infer(44075)[3]
      
    end ParamSubstInfer.infer(44075)[3] (0.663899 sec.)
    inferred extra parameters:
      
    begin RefTypeInfer.elim_coeffs(44077)[3]
      
    end RefTypeInfer.elim_coeffs(44077)[3] (0.006999 sec.)
    begin YhornInterface.solve(45306)[3]
      begin HcSolver.solve_ub(45307)[4]
        encoded:
          P[<fail_1554@316:0>](<fail_1554@316:0>:int)|- bot
          
          P[<<<<init_1038@241:3>@249:0>@261:1>@307:0>](0:int,<f_k_main_1548@313:4>:int,<f_k_main_1548@313:2>:int,<f_k_main_1548@313:6>:int),
          ((<f_k_main_1548@313:2> < <f_k_main_1548@313:4>) &&
           ((0 <= <f_k_main_1548@313:2>) && ((<f_k_main_1548@313:6> < 1) && (<fail_1554@316:0> = 1))))
          |- P[<fail_1554@316:0>](<fail_1554@316:0>:int)
          
          P[<init_1038@241:1>](<init_1038@241:0>:int,<init_1038@241:1>:int),
          P[<<<<init_1038@244:3>@247:0>@263:1>@305:0>]((1 + <init_1038@241:0>):int,<init_1038@241:1>:int,<<<init_1038@241:3>@249:0>@261:0>:int,<<<<init_1038@241:3>@249:0>@261:1>@307:0>:int),
          (<init_1038@241:0> < <init_1038@241:1>)
          |- P[<<<<init_1038@241:3>@249:0>@261:1>@307:0>](<init_1038@241:0>:int,
                                                          <init_1038@241:1>:int,
                                                          <<<init_1038@241:3>@249:0>@261:0>:int,
                                                          <<<<init_1038@241:3>@249:0>@261:1>@307:0>:int)
          
          P[<init_1038@244:1>](<init_1038@244:0>:int,<init_1038@244:1>:int),
          P[<<<init_1038@244:2>@265:1>@303:0>](<init_1038@244:0>:int,<init_1038@244:1>:int,<<<init_1038@244:3>@247:0>@263:0>:int,<<<<init_1038@244:3>@247:0>@263:1>@305:0>:int),
          (<init_1038@244:0> >= <init_1038@244:1>)
          |- P[<<<<init_1038@244:3>@247:0>@263:1>@305:0>](<init_1038@244:0>:int,
                                                          <init_1038@244:1>:int,
                                                          <<<init_1038@244:3>@247:0>@263:0>:int,
                                                          <<<<init_1038@244:3>@247:0>@263:1>@305:0>:int)
          
          P[<init_1038@241:1>]((-1 + <init_1038@244:0>):int,<init_1038@244:1>:int),
          P[<init_1038@244:1>](<init_1038@244:0>:int,<init_1038@244:1>:int),
          P[<init_1038@241:1>]((-1 + <init_1038@244:0>):int,var284:int),
          P[<<init_1038@244:2>@265:0>](<init_1038@244:0>:int,var284:int,<<init_1038@244:2>@265:0>:int),
          P[<init_1038@241:1>]((-1 + <init_1038@244:0>):int,var283:int),
          P[<<<init_1038@241:2>@277:1>@293:0>]((-1 + <init_1038@244:0>):int,var283:int,<<init_1038@244:2>@265:0>:int,<<<init_1038@244:2>@265:1>@303:0>:int),
          ((<init_1038@244:0> < (1 + var284)) &&
           ((<init_1038@244:0> < (1 + var283)) &&
            ((<init_1038@244:0> < (1 + <init_1038@244:1>)) && ((2 + <<init_1038@244:2>@265:0>) <= <init_1038@244:0>))))
          |- P[<<<init_1038@244:2>@265:1>@303:0>](<init_1038@244:0>:int,
                                                  <init_1038@244:1>:int,
                                                  <<init_1038@244:2>@265:0>:int,
                                                  <<<init_1038@244:2>@265:1>@303:0>:int)
          
          P[<<init_1038@241:2>@277:0>](0:int,<init_1038@241:1>:int,<<init_1038@241:2>@277:0>:int),
          P[<init_1038@241:1>](<init_1038@241:0>:int,<init_1038@241:1>:int),
          ((<init_1038@241:0> = 0) &&
           ((<<<init_1038@241:2>@277:1>@293:0> = 0) &&
            ((0 <= <<init_1038@241:2>@277:0>) && (<<init_1038@241:2>@277:0> < <init_1038@241:1>))))
          |- P[<<<init_1038@241:2>@277:1>@293:0>](<init_1038@241:0>:int,
                                                  <init_1038@241:1>:int,
                                                  <<init_1038@241:2>@277:0>:int,
                                                  <<<init_1038@241:2>@277:1>@293:0>:int)
          
          P[<init_1038@241:1>](<init_1038@241:0>:int,<init_1038@241:1>:int),
          P[<init_1038@241:1>](<init_1038@241:0>:int,var285:int),
          P[<<init_1038@244:2>@265:0>]((1 + <init_1038@241:0>):int,var285:int,<<init_1038@241:2>@277:0>:int),
          ((<init_1038@241:0> < var285) &&
           ((<init_1038@241:0> < <init_1038@241:1>) && ((1 + <<init_1038@241:2>@277:0>) <= <init_1038@241:0>)))
          |- P[<<init_1038@241:2>@277:0>](<init_1038@241:0>:int,<init_1038@241:1>:int,
                                          <<init_1038@241:2>@277:0>:int)
          
          P[<init_1038@244:1>](<init_1038@244:0>:int,<init_1038@244:1>:int),
          P[<<<init_1038@244:3>@247:0>@263:0>](<init_1038@244:0>:int,<init_1038@244:1>:int,<<init_1038@244:2>@265:0>:int),
          (<init_1038@244:0> >= <init_1038@244:1>)
          |- P[<<init_1038@244:2>@265:0>](<init_1038@244:0>:int,<init_1038@244:1>:int,
                                          <<init_1038@244:2>@265:0>:int)
          
          P[<init_1038@241:1>]((-1 + <init_1038@244:0>):int,<init_1038@244:1>:int),
          P[<<<init_1038@241:3>@249:0>@261:0>]((-1 + <init_1038@244:0>):int,<init_1038@244:1>:int,<<<init_1038@244:3>@247:0>@263:0>:int),
          P[<init_1038@244:1>](<init_1038@244:0>:int,<init_1038@244:1>:int),
          (<init_1038@244:0> < (1 + <init_1038@244:1>))
          |- P[<<<init_1038@244:3>@247:0>@263:0>](<init_1038@244:0>:int,
                                                  <init_1038@244:1>:int,
                                                  <<<init_1038@244:3>@247:0>@263:0>:int)
          
          P[<init_1038@241:1>](<init_1038@241:0>:int,<init_1038@241:1>:int),
          ((<init_1038@241:0> = 0) &&
           ((0 <= <<<init_1038@241:3>@249:0>@261:0>) && (<<<init_1038@241:3>@249:0>@261:0> < <init_1038@241:1>)))
          |- P[<<<init_1038@241:3>@249:0>@261:0>](<init_1038@241:0>:int,
                                                  <init_1038@241:1>:int,
                                                  <<<init_1038@241:3>@249:0>@261:0>:int)
          
          P[<init_1038@241:1>]((-1 + <init_1038@244:0>):int,<init_1038@244:1>:int),
          (<init_1038@244:0> < (1 + <init_1038@244:1>))
          |- P[<init_1038@244:1>](<init_1038@244:0>:int,<init_1038@244:1>:int)
          
           (<init_1038@241:0> = 0) |- P[<init_1038@241:1>](<init_1038@241:0>:int,
                                                           <init_1038@241:1>:int)
        input to Yhorn:
          P[<fail_1554@316:0>](<fail_1554@316:0>:int)|- bot
          
          P[<<<<init_1038@241:3>@249:0>@261:1>@307:0>](var286:int,<f_k_main_1548@313:4>:int,<f_k_main_1548@313:2>:int,<f_k_main_1548@313:6>:int),
          ((<f_k_main_1548@313:6> < 1) &&
           ((0 <= <f_k_main_1548@313:2>) &&
            ((<f_k_main_1548@313:2> < <f_k_main_1548@313:4>) && ((var286 = 0) && (<fail_1554@316:0> = 1)))))
          |- P[<fail_1554@316:0>](<fail_1554@316:0>:int)
          
          P[<init_1038@241:1>](<init_1038@241:0>:int,<init_1038@241:1>:int),
          P[<<<<init_1038@244:3>@247:0>@263:1>@305:0>](var287:int,<init_1038@241:1>:int,<<<init_1038@241:3>@249:0>@261:0>:int,<<<<init_1038@241:3>@249:0>@261:1>@307:0>:int),
          ((var287 = (1 + <init_1038@241:0>)) && (<init_1038@241:0> < <init_1038@241:1>))
          |- P[<<<<init_1038@241:3>@249:0>@261:1>@307:0>](<init_1038@241:0>:int,
                                                          <init_1038@241:1>:int,
                                                          <<<init_1038@241:3>@249:0>@261:0>:int,
                                                          <<<<init_1038@241:3>@249:0>@261:1>@307:0>:int)
          
          P[<init_1038@244:1>](<init_1038@244:0>:int,<init_1038@244:1>:int),
          P[<<<init_1038@244:2>@265:1>@303:0>](<init_1038@244:0>:int,<init_1038@244:1>:int,<<<init_1038@244:3>@247:0>@263:0>:int,<<<<init_1038@244:3>@247:0>@263:1>@305:0>:int),
          (<init_1038@244:0> >= <init_1038@244:1>)
          |- P[<<<<init_1038@244:3>@247:0>@263:1>@305:0>](<init_1038@244:0>:int,
                                                          <init_1038@244:1>:int,
                                                          <<<init_1038@244:3>@247:0>@263:0>:int,
                                                          <<<<init_1038@244:3>@247:0>@263:1>@305:0>:int)
          
          P[<init_1038@241:1>](var288:int,<init_1038@244:1>:int),
          P[<init_1038@244:1>](<init_1038@244:0>:int,<init_1038@244:1>:int),
          P[<init_1038@241:1>](var289:int,var284:int),
          P[<<init_1038@244:2>@265:0>](<init_1038@244:0>:int,var284:int,<<init_1038@244:2>@265:0>:int),
          P[<init_1038@241:1>](var290:int,var283:int),
          P[<<<init_1038@241:2>@277:1>@293:0>](var291:int,var283:int,<<init_1038@244:2>@265:0>:int,<<<init_1038@244:2>@265:1>@303:0>:int),
          (((1 + var291) = <init_1038@244:0>) &&
           (((1 + var290) = <init_1038@244:0>) &&
            (((1 + var289) = <init_1038@244:0>) &&
             (((1 + var288) = <init_1038@244:0>) &&
              (((2 + <<init_1038@244:2>@265:0>) <= <init_1038@244:0>) &&
               ((<init_1038@244:0> < (1 + <init_1038@244:1>)) &&
                ((<init_1038@244:0> < (1 + var283)) && (<init_1038@244:0> < (1 + var284)))))))))
          |- P[<<<init_1038@244:2>@265:1>@303:0>](<init_1038@244:0>:int,
                                                  <init_1038@244:1>:int,
                                                  <<init_1038@244:2>@265:0>:int,
                                                  <<<init_1038@244:2>@265:1>@303:0>:int)
          
          P[<<init_1038@241:2>@277:0>](var292:int,<init_1038@241:1>:int,<<init_1038@241:2>@277:0>:int),
          P[<init_1038@241:1>](<init_1038@241:0>:int,<init_1038@241:1>:int),
          ((<<init_1038@241:2>@277:0> < <init_1038@241:1>) &&
           ((0 <= <<init_1038@241:2>@277:0>) &&
            ((var292 = 0) && ((<<<init_1038@241:2>@277:1>@293:0> = 0) && (<init_1038@241:0> = 0)))))
          |- P[<<<init_1038@241:2>@277:1>@293:0>](<init_1038@241:0>:int,
                                                  <init_1038@241:1>:int,
                                                  <<init_1038@241:2>@277:0>:int,
                                                  <<<init_1038@241:2>@277:1>@293:0>:int)
          
          P[<init_1038@241:1>](<init_1038@241:0>:int,<init_1038@241:1>:int),
          P[<init_1038@241:1>](<init_1038@241:0>:int,var285:int),
          P[<<init_1038@244:2>@265:0>](var293:int,var285:int,<<init_1038@241:2>@277:0>:int),
          ((var293 = (1 + <init_1038@241:0>)) &&
           (((1 + <<init_1038@241:2>@277:0>) <= <init_1038@241:0>) &&
            ((<init_1038@241:0> < <init_1038@241:1>) && (<init_1038@241:0> < var285))))
          |- P[<<init_1038@241:2>@277:0>](<init_1038@241:0>:int,<init_1038@241:1>:int,
                                          <<init_1038@241:2>@277:0>:int)
          
          P[<init_1038@244:1>](<init_1038@244:0>:int,<init_1038@244:1>:int),
          P[<<<init_1038@244:3>@247:0>@263:0>](<init_1038@244:0>:int,<init_1038@244:1>:int,<<init_1038@244:2>@265:0>:int),
          (<init_1038@244:0> >= <init_1038@244:1>)
          |- P[<<init_1038@244:2>@265:0>](<init_1038@244:0>:int,<init_1038@244:1>:int,
                                          <<init_1038@244:2>@265:0>:int)
          
          P[<init_1038@241:1>](var294:int,<init_1038@244:1>:int),
          P[<<<init_1038@241:3>@249:0>@261:0>](var295:int,<init_1038@244:1>:int,<<<init_1038@244:3>@247:0>@263:0>:int),
          P[<init_1038@244:1>](<init_1038@244:0>:int,<init_1038@244:1>:int),
          (((1 + var295) = <init_1038@244:0>) &&
           (((1 + var294) = <init_1038@244:0>) && (<init_1038@244:0> < (1 + <init_1038@244:1>))))
          |- P[<<<init_1038@244:3>@247:0>@263:0>](<init_1038@244:0>:int,
                                                  <init_1038@244:1>:int,
                                                  <<<init_1038@244:3>@247:0>@263:0>:int)
          
          P[<init_1038@241:1>](<init_1038@241:0>:int,<init_1038@241:1>:int),
          ((<<<init_1038@241:3>@249:0>@261:0> < <init_1038@241:1>) &&
           ((0 <= <<<init_1038@241:3>@249:0>@261:0>) && (<init_1038@241:0> = 0)))
          |- P[<<<init_1038@241:3>@249:0>@261:0>](<init_1038@241:0>:int,
                                                  <init_1038@241:1>:int,
                                                  <<<init_1038@241:3>@249:0>@261:0>:int)
          
          P[<init_1038@241:1>](var296:int,<init_1038@244:1>:int),
          (((1 + var296) = <init_1038@244:0>) && (<init_1038@244:0> < (1 + <init_1038@244:1>)))
          |- P[<init_1038@244:1>](<init_1038@244:0>:int,<init_1038@244:1>:int)
          Yhorn (Wed Sep 25 10:52:05 JST 2013)


(0=0) & (v_sep_fail_1554_sep_316_sep_0($701)) -> 1=0.
(($701-1=0) & ($702=0) & ($703-$704<0) & (-$703<=0) & ($705-1<0)) & (v_sep_init_1038_sep_241_sep_3_sep_249_sep_0_sep_261_sep_1_sep_307_sep_0($702,$704,$703,$705)) -> v_sep_fail_1554_sep_316_sep_0($701).
(($706-$707<0) & (-$706+$708-1=0)) & (v_sep_init_1038_sep_244_sep_3_sep_247_sep_0_sep_263_sep_1_sep_305_sep_0($708,$707,$709,$710)) & (v_sep_init_1038_sep_241_sep_1($706,$707)) -> v_sep_init_1038_sep_241_sep_3_sep_249_sep_0_sep_261_sep_1_sep_307_sep_0($706,$707,$709,$710).
($711-$712>=0) & (v_sep_init_1038_sep_244_sep_2_sep_265_sep_1_sep_303_sep_0($711,$712,$713,$714)) & (v_sep_init_1038_sep_244_sep_1($711,$712)) -> v_sep_init_1038_sep_244_sep_3_sep_247_sep_0_sep_263_sep_1_sep_305_sep_0($711,$712,$713,$714).
(($711-$715-1<0) & ($711-$716-1<0) & ($711-$712-1<0) & (-$711+$717+2<=0) & (-$711+$718+1=0) & (-$711+$719+1=0) & (-$711+$720+1=0) & (-$711+$721+1=0)) & (v_sep_init_1038_sep_241_sep_2_sep_277_sep_1_sep_293_sep_0($721,$716,$717,$722)) & (v_sep_init_1038_sep_241_sep_1($720,$716)) & (v_sep_init_1038_sep_244_sep_2_sep_265_sep_0($711,$715,$717)) & (v_sep_init_1038_sep_241_sep_1($719,$715)) & (v_sep_init_1038_sep_244_sep_1($711,$712)) & (v_sep_init_1038_sep_241_sep_1($718,$712)) -> v_sep_init_1038_sep_244_sep_2_sep_265_sep_1_sep_303_sep_0($711,$712,$717,$722).
(($706=0) & ($723=0) & ($724=0) & (-$725<=0) & (-$707+$725<0)) & (v_sep_init_1038_sep_241_sep_1($706,$707)) & (v_sep_init_1038_sep_241_sep_2_sep_277_sep_0($724,$707,$725)) -> v_sep_init_1038_sep_241_sep_2_sep_277_sep_1_sep_293_sep_0($706,$707,$725,$723).
(($706-$726<0) & ($706-$707<0) & (-$706+$725+1<=0) & (-$706+$727-1=0)) & (v_sep_init_1038_sep_244_sep_2_sep_265_sep_0($727,$726,$725)) & (v_sep_init_1038_sep_241_sep_1($706,$726)) & (v_sep_init_1038_sep_241_sep_1($706,$707)) -> v_sep_init_1038_sep_241_sep_2_sep_277_sep_0($706,$707,$725).
($711-$712>=0) & (v_sep_init_1038_sep_244_sep_3_sep_247_sep_0_sep_263_sep_0($711,$712,$717)) & (v_sep_init_1038_sep_244_sep_1($711,$712)) -> v_sep_init_1038_sep_244_sep_2_sep_265_sep_0($711,$712,$717).
(($711-$712-1<0) & (-$711+$728+1=0) & (-$711+$729+1=0)) & (v_sep_init_1038_sep_244_sep_1($711,$712)) & (v_sep_init_1038_sep_241_sep_3_sep_249_sep_0_sep_261_sep_0($729,$712,$713)) & (v_sep_init_1038_sep_241_sep_1($728,$712)) -> v_sep_init_1038_sep_244_sep_3_sep_247_sep_0_sep_263_sep_0($711,$712,$713).
(($706=0) & (-$709<=0) & (-$707+$709<0)) & (v_sep_init_1038_sep_241_sep_1($706,$707)) -> v_sep_init_1038_sep_241_sep_3_sep_249_sep_0_sep_261_sep_0($706,$707,$709).
(($711-$712-1<0) & (-$711+$730+1=0)) & (v_sep_init_1038_sep_241_sep_1($730,$712)) -> v_sep_init_1038_sep_244_sep_1($711,$712).
$706=0 -> v_sep_init_1038_sep_241_sep_1($706,$707).


v_sep_fail_1554_sep_316_sep_0: X
v_sep_init_1038_sep_241_sep_1: X
v_sep_init_1038_sep_241_sep_2_sep_277_sep_0: X
v_sep_init_1038_sep_241_sep_2_sep_277_sep_1_sep_293_sep_0: X
v_sep_init_1038_sep_241_sep_3_sep_249_sep_0_sep_261_sep_0: X
v_sep_init_1038_sep_241_sep_3_sep_249_sep_0_sep_261_sep_1_sep_307_sep_0: X
v_sep_init_1038_sep_244_sep_1: X
v_sep_init_1038_sep_244_sep_2_sep_265_sep_0: X
v_sep_init_1038_sep_244_sep_2_sep_265_sep_1_sep_303_sep_0: X
v_sep_init_1038_sep_244_sep_3_sep_247_sep_0_sep_263_sep_0: X
v_sep_init_1038_sep_244_sep_3_sep_247_sep_0_sep_263_sep_1_sep_305_sep_0: X
.........................
v_sep_fail_1554_sep_316_sep_0: X
v_sep_init_1038_sep_241_sep_1: X
v_sep_init_1038_sep_241_sep_2_sep_277_sep_0: X
v_sep_init_1038_sep_241_sep_2_sep_277_sep_1_sep_293_sep_0: X
v_sep_init_1038_sep_241_sep_3_sep_249_sep_0_sep_261_sep_0: X
v_sep_init_1038_sep_241_sep_3_sep_249_sep_0_sep_261_sep_1_sep_307_sep_0: X
v_sep_init_1038_sep_244_sep_1: X
v_sep_init_1038_sep_244_sep_2_sep_265_sep_0: X
v_sep_init_1038_sep_244_sep_2_sep_265_sep_1_sep_303_sep_0: X
v_sep_init_1038_sep_244_sep_3_sep_247_sep_0_sep_263_sep_0: X
v_sep_init_1038_sep_244_sep_3_sep_247_sep_0_sep_263_sep_1_sep_305_sep_0: X
...
v_sep_fail_1554_sep_316_sep_0: X
v_sep_init_1038_sep_241_sep_1: X
v_sep_init_1038_sep_241_sep_2_sep_277_sep_0: X
v_sep_init_1038_sep_241_sep_2_sep_277_sep_1_sep_293_sep_0: X
v_sep_init_1038_sep_241_sep_3_sep_249_sep_0_sep_261_sep_0: X
v_sep_init_1038_sep_241_sep_3_sep_249_sep_0_sep_261_sep_1_sep_307_sep_0: X
v_sep_init_1038_sep_244_sep_1: X
v_sep_init_1038_sep_244_sep_2_sep_265_sep_0: X
v_sep_init_1038_sep_244_sep_2_sep_265_sep_1_sep_303_sep_0: X
v_sep_init_1038_sep_244_sep_3_sep_247_sep_0_sep_263_sep_0: X
v_sep_init_1038_sep_244_sep_3_sep_247_sep_0_sep_263_sep_1_sep_305_sep_0: X
.....
v_sep_fail_1554_sep_316_sep_0: X
v_sep_init_1038_sep_241_sep_1: X
v_sep_init_1038_sep_241_sep_2_sep_277_sep_0: X
v_sep_init_1038_sep_241_sep_2_sep_277_sep_1_sep_293_sep_0: X
v_sep_init_1038_sep_241_sep_3_sep_249_sep_0_sep_261_sep_0: X
v_sep_init_1038_sep_241_sep_3_sep_249_sep_0_sep_261_sep_1_sep_307_sep_0: X
v_sep_init_1038_sep_244_sep_1: X
v_sep_init_1038_sep_244_sep_2_sep_265_sep_0: X
v_sep_init_1038_sep_244_sep_2_sep_265_sep_1_sep_303_sep_0: X
v_sep_init_1038_sep_244_sep_3_sep_247_sep_0_sep_263_sep_0: X
v_sep_init_1038_sep_244_sep_3_sep_247_sep_0_sep_263_sep_1_sep_305_sep_0: X
.......
v_sep_fail_1554_sep_316_sep_0: X
v_sep_init_1038_sep_241_sep_1: X
v_sep_init_1038_sep_241_sep_2_sep_277_sep_0: X
v_sep_init_1038_sep_241_sep_2_sep_277_sep_1_sep_293_sep_0: X
v_sep_init_1038_sep_241_sep_3_sep_249_sep_0_sep_261_sep_0: X
v_sep_init_1038_sep_241_sep_3_sep_249_sep_0_sep_261_sep_1_sep_307_sep_0: X
v_sep_init_1038_sep_244_sep_1: X
v_sep_init_1038_sep_244_sep_2_sep_265_sep_0: X
v_sep_init_1038_sep_244_sep_2_sep_265_sep_1_sep_303_sep_0: X
v_sep_init_1038_sep_244_sep_3_sep_247_sep_0_sep_263_sep_0: X
v_sep_init_1038_sep_244_sep_3_sep_247_sep_0_sep_263_sep_1_sep_305_sep_0: X
..............
v_sep_fail_1554_sep_316_sep_0: X
v_sep_init_1038_sep_241_sep_1: X
v_sep_init_1038_sep_241_sep_2_sep_277_sep_0: X
v_sep_init_1038_sep_241_sep_2_sep_277_sep_1_sep_293_sep_0: X
v_sep_init_1038_sep_241_sep_3_sep_249_sep_0_sep_261_sep_0: X
v_sep_init_1038_sep_241_sep_3_sep_249_sep_0_sep_261_sep_1_sep_307_sep_0: X
v_sep_init_1038_sep_244_sep_1: X
v_sep_init_1038_sep_244_sep_2_sep_265_sep_0: X
v_sep_init_1038_sep_244_sep_2_sep_265_sep_1_sep_303_sep_0: X
v_sep_init_1038_sep_244_sep_3_sep_247_sep_0_sep_263_sep_0: X
v_sep_init_1038_sep_244_sep_3_sep_247_sep_0_sep_263_sep_1_sep_305_sep_0: X
..................
v_sep_fail_1554_sep_316_sep_0: X
v_sep_init_1038_sep_241_sep_1: X
v_sep_init_1038_sep_241_sep_2_sep_277_sep_0: X
v_sep_init_1038_sep_241_sep_2_sep_277_sep_1_sep_293_sep_0: X
v_sep_init_1038_sep_241_sep_3_sep_249_sep_0_sep_261_sep_0: X
v_sep_init_1038_sep_241_sep_3_sep_249_sep_0_sep_261_sep_1_sep_307_sep_0: X
v_sep_init_1038_sep_244_sep_1: X
v_sep_init_1038_sep_244_sep_2_sep_265_sep_0: X
v_sep_init_1038_sep_244_sep_2_sep_265_sep_1_sep_303_sep_0: X
v_sep_init_1038_sep_244_sep_3_sep_247_sep_0_sep_263_sep_0: X
v_sep_init_1038_sep_244_sep_3_sep_247_sep_0_sep_263_sep_1_sep_305_sep_0: X
........................
v_sep_fail_1554_sep_316_sep_0: X
v_sep_init_1038_sep_241_sep_1: X
v_sep_init_1038_sep_241_sep_2_sep_277_sep_0: X
v_sep_init_1038_sep_241_sep_2_sep_277_sep_1_sep_293_sep_0: X
v_sep_init_1038_sep_241_sep_3_sep_249_sep_0_sep_261_sep_0: X
v_sep_init_1038_sep_241_sep_3_sep_249_sep_0_sep_261_sep_1_sep_307_sep_0: X
v_sep_init_1038_sep_244_sep_1: X
v_sep_init_1038_sep_244_sep_2_sep_265_sep_0: X
v_sep_init_1038_sep_244_sep_2_sep_265_sep_1_sep_303_sep_0: X
v_sep_init_1038_sep_244_sep_3_sep_247_sep_0_sep_263_sep_0: X
v_sep_init_1038_sep_244_sep_3_sep_247_sep_0_sep_263_sep_1_sep_305_sep_0: X
.........................(0=0) & (v_sep_fail_1554_sep_316_sep_0($701)) -> 1=0.
(($701-1=0) & ($702=0) & ($703-$704<0) & (-$703<=0) & ($705-1<0)) & (v_sep_init_1038_sep_241_sep_3_sep_249_sep_0_sep_261_sep_1_sep_307_sep_0($702,$704,$703,$705)) -> v_sep_fail_1554_sep_316_sep_0($701).
(($706-$707<0) & (-$706+$708-1=0)) & (v_sep_init_1038_sep_244_sep_3_sep_247_sep_0_sep_263_sep_1_sep_305_sep_0($708,$707,$709,$710)) & (v_sep_init_1038_sep_241_sep_1($706,$707)) -> v_sep_init_1038_sep_241_sep_3_sep_249_sep_0_sep_261_sep_1_sep_307_sep_0($706,$707,$709,$710).
($711-$712>=0) & (v_sep_init_1038_sep_244_sep_2_sep_265_sep_1_sep_303_sep_0($711,$712,$713,$714)) & (v_sep_init_1038_sep_244_sep_1($711,$712)) -> v_sep_init_1038_sep_244_sep_3_sep_247_sep_0_sep_263_sep_1_sep_305_sep_0($711,$712,$713,$714).
(($711-$715-1<0) & ($711-$716-1<0) & ($711-$712-1<0) & (-$711+$717+2<=0) & (-$711+$718+1=0) & (-$711+$719+1=0) & (-$711+$720+1=0) & (-$711+$721+1=0)) & (v_sep_init_1038_sep_241_sep_2_sep_277_sep_1_sep_293_sep_0($721,$716,$717,$722)) & (v_sep_init_1038_sep_241_sep_1($720,$716)) & (v_sep_init_1038_sep_244_sep_2_sep_265_sep_0($711,$715,$717)) & (v_sep_init_1038_sep_241_sep_1($719,$715)) & (v_sep_init_1038_sep_244_sep_1($711,$712)) & (v_sep_init_1038_sep_241_sep_1($718,$712)) -> v_sep_init_1038_sep_244_sep_2_sep_265_sep_1_sep_303_sep_0($711,$712,$717,$722).
(($706=0) & ($723=0) & ($724=0) & (-$725<=0) & (-$707+$725<0)) & (v_sep_init_1038_sep_241_sep_1($706,$707)) & (v_sep_init_1038_sep_241_sep_2_sep_277_sep_0($724,$707,$725)) -> v_sep_init_1038_sep_241_sep_2_sep_277_sep_1_sep_293_sep_0($706,$707,$725,$723).
(($706-$726<0) & ($706-$707<0) & (-$706+$725+1<=0) & (-$706+$727-1=0)) & (v_sep_init_1038_sep_244_sep_2_sep_265_sep_0($727,$726,$725)) & (v_sep_init_1038_sep_241_sep_1($706,$726)) & (v_sep_init_1038_sep_241_sep_1($706,$707)) -> v_sep_init_1038_sep_241_sep_2_sep_277_sep_0($706,$707,$725).
($711-$712>=0) & (v_sep_init_1038_sep_244_sep_3_sep_247_sep_0_sep_263_sep_0($711,$712,$717)) & (v_sep_init_1038_sep_244_sep_1($711,$712)) -> v_sep_init_1038_sep_244_sep_2_sep_265_sep_0($711,$712,$717).
(($711-$712-1<0) & (-$711+$728+1=0) & (-$711+$729+1=0)) & (v_sep_init_1038_sep_244_sep_1($711,$712)) & (v_sep_init_1038_sep_241_sep_3_sep_249_sep_0_sep_261_sep_0($729,$712,$713)) & (v_sep_init_1038_sep_241_sep_1($728,$712)) -> v_sep_init_1038_sep_244_sep_3_sep_247_sep_0_sep_263_sep_0($711,$712,$713).
(($706=0) & (-$709<=0) & (-$707+$709<0)) & (v_sep_init_1038_sep_241_sep_1($706,$707)) -> v_sep_init_1038_sep_241_sep_3_sep_249_sep_0_sep_261_sep_0($706,$707,$709).
(($711-$712-1<0) & (-$711+$730+1=0)) & (v_sep_init_1038_sep_241_sep_1($730,$712)) -> v_sep_init_1038_sep_244_sep_1($711,$712).
$706=0 -> v_sep_init_1038_sep_241_sep_1($706,$707).

           (<init_1038@241:0> = 0) |- P[<init_1038@241:1>](<init_1038@241:0>:int,
                                                           <init_1038@241:1>:int)
        solution:
          P[<fail_1554@316:0>]($731:bool) = false
          P[<init_1038@241:1>]($752:int,$754:int) = true
          P[<<init_1038@241:2>@277:0>]($787:int,$789:int,$791:int) = true
          P[<<<init_1038@241:2>@277:1>@293:0>]($771:int,$773:int,$775:int,$777:int) = true
          P[<<<init_1038@241:3>@249:0>@261:0>]($801:int,$803:int,$805:int) = true
          P[<<<<init_1038@241:3>@249:0>@261:1>@307:0>]($734:int,$736:int,$738:int,$740:int) = ((1 + $738) <= $734)
          P[<init_1038@244:1>]($766:int,$768:int) = true
          P[<<init_1038@244:2>@265:0>]($780:int,$782:int,$784:int) = true
          P[<<<init_1038@244:2>@265:1>@303:0>]($757:int,$759:int,$761:int,$763:int) = ((2 + $761) <= $757)
          P[<<<init_1038@244:3>@247:0>@263:0>]($794:int,$796:int,$798:int) = true
          P[<<<<init_1038@244:3>@247:0>@263:1>@305:0>]($743:int,$745:int,$747:int,$749:int) = ((2 + $747) <= $743)
        
      end HcSolver.solve_ub(45307)[4] (0.079988 sec.)
      begin HcSolver.check_validity(46810)[4]
        input:
          P[<fail_1554@316:0>](<fail_1554@316:0>:bool)|- bot
          
          P[<<<<init_1038@241:3>@249:0>@261:1>@307:0>](0:int,<f_k_main_1548@313:4>:int,<f_k_main_1548@313:2>:int,<f_k_main_1548@313:6>:int),
          ((<f_k_main_1548@313:2> < <f_k_main_1548@313:4>) &&
           ((0 <= <f_k_main_1548@313:2>) && ((<f_k_main_1548@313:6> < 1) && <fail_1554@316:0>)))
          |- P[<fail_1554@316:0>](<fail_1554@316:0>:bool)
          
          P[<init_1038@241:1>](<init_1038@241:0>:int,<init_1038@241:1>:int),
          P[<<<<init_1038@244:3>@247:0>@263:1>@305:0>]((1 + <init_1038@241:0>):int,<init_1038@241:1>:int,<<<init_1038@241:3>@249:0>@261:0>:int,<<<<init_1038@241:3>@249:0>@261:1>@307:0>:int),
          (<init_1038@241:0> < <init_1038@241:1>)
          |- P[<<<<init_1038@241:3>@249:0>@261:1>@307:0>](<init_1038@241:0>:int,
                                                          <init_1038@241:1>:int,
                                                          <<<init_1038@241:3>@249:0>@261:0>:int,
                                                          <<<<init_1038@241:3>@249:0>@261:1>@307:0>:int)
          
          P[<init_1038@244:1>](<init_1038@244:0>:int,<init_1038@244:1>:int),
          P[<<<init_1038@244:2>@265:1>@303:0>](<init_1038@244:0>:int,<init_1038@244:1>:int,<<<init_1038@244:3>@247:0>@263:0>:int,<<<<init_1038@244:3>@247:0>@263:1>@305:0>:int),
          (<init_1038@244:0> >= <init_1038@244:1>)
          |- P[<<<<init_1038@244:3>@247:0>@263:1>@305:0>](<init_1038@244:0>:int,
                                                          <init_1038@244:1>:int,
                                                          <<<init_1038@244:3>@247:0>@263:0>:int,
                                                          <<<<init_1038@244:3>@247:0>@263:1>@305:0>:int)
          
          P[<init_1038@241:1>]((-1 + <init_1038@244:0>):int,<init_1038@244:1>:int),
          P[<init_1038@244:1>](<init_1038@244:0>:int,<init_1038@244:1>:int),
          P[<init_1038@241:1>]((-1 + <init_1038@244:0>):int,var284:int),
          P[<<init_1038@244:2>@265:0>](<init_1038@244:0>:int,var284:int,<<init_1038@244:2>@265:0>:int),
          P[<init_1038@241:1>]((-1 + <init_1038@244:0>):int,var283:int),
          P[<<<init_1038@241:2>@277:1>@293:0>]((-1 + <init_1038@244:0>):int,var283:int,<<init_1038@244:2>@265:0>:int,<<<init_1038@244:2>@265:1>@303:0>:int),
          ((<init_1038@244:0> < (1 + var284)) &&
           ((<init_1038@244:0> < (1 + var283)) &&
            ((<init_1038@244:0> < (1 + <init_1038@244:1>)) && ((2 + <<init_1038@244:2>@265:0>) <= <init_1038@244:0>))))
          |- P[<<<init_1038@244:2>@265:1>@303:0>](<init_1038@244:0>:int,
                                                  <init_1038@244:1>:int,
                                                  <<init_1038@244:2>@265:0>:int,
                                                  <<<init_1038@244:2>@265:1>@303:0>:int)
          
          P[<<init_1038@241:2>@277:0>](0:int,<init_1038@241:1>:int,<<init_1038@241:2>@277:0>:int),
          P[<init_1038@241:1>](<init_1038@241:0>:int,<init_1038@241:1>:int),
          ((<init_1038@241:0> = 0) &&
           ((<<<init_1038@241:2>@277:1>@293:0> = 0) &&
            ((0 <= <<init_1038@241:2>@277:0>) && (<<init_1038@241:2>@277:0> < <init_1038@241:1>))))
          |- P[<<<init_1038@241:2>@277:1>@293:0>](<init_1038@241:0>:int,
                                                  <init_1038@241:1>:int,
                                                  <<init_1038@241:2>@277:0>:int,
                                                  <<<init_1038@241:2>@277:1>@293:0>:int)
          
          P[<init_1038@241:1>](<init_1038@241:0>:int,<init_1038@241:1>:int),
          P[<init_1038@241:1>](<init_1038@241:0>:int,var285:int),
          P[<<init_1038@244:2>@265:0>]((1 + <init_1038@241:0>):int,var285:int,<<init_1038@241:2>@277:0>:int),
          ((<init_1038@241:0> < var285) &&
           ((<init_1038@241:0> < <init_1038@241:1>) && ((1 + <<init_1038@241:2>@277:0>) <= <init_1038@241:0>)))
          |- P[<<init_1038@241:2>@277:0>](<init_1038@241:0>:int,<init_1038@241:1>:int,
                                          <<init_1038@241:2>@277:0>:int)
          
          P[<init_1038@244:1>](<init_1038@244:0>:int,<init_1038@244:1>:int),
          P[<<<init_1038@244:3>@247:0>@263:0>](<init_1038@244:0>:int,<init_1038@244:1>:int,<<init_1038@244:2>@265:0>:int),
          (<init_1038@244:0> >= <init_1038@244:1>)
          |- P[<<init_1038@244:2>@265:0>](<init_1038@244:0>:int,<init_1038@244:1>:int,
                                          <<init_1038@244:2>@265:0>:int)
          
          P[<init_1038@241:1>]((-1 + <init_1038@244:0>):int,<init_1038@244:1>:int),
          P[<<<init_1038@241:3>@249:0>@261:0>]((-1 + <init_1038@244:0>):int,<init_1038@244:1>:int,<<<init_1038@244:3>@247:0>@263:0>:int),
          P[<init_1038@244:1>](<init_1038@244:0>:int,<init_1038@244:1>:int),
          (<init_1038@244:0> < (1 + <init_1038@244:1>))
          |- P[<<<init_1038@244:3>@247:0>@263:0>](<init_1038@244:0>:int,
                                                  <init_1038@244:1>:int,
                                                  <<<init_1038@244:3>@247:0>@263:0>:int)
          
          P[<init_1038@241:1>](<init_1038@241:0>:int,<init_1038@241:1>:int),
          ((<init_1038@241:0> = 0) &&
           ((0 <= <<<init_1038@241:3>@249:0>@261:0>) && (<<<init_1038@241:3>@249:0>@261:0> < <init_1038@241:1>)))
          |- P[<<<init_1038@241:3>@249:0>@261:0>](<init_1038@241:0>:int,
                                                  <init_1038@241:1>:int,
                                                  <<<init_1038@241:3>@249:0>@261:0>:int)
          
          P[<init_1038@241:1>]((-1 + <init_1038@244:0>):int,<init_1038@244:1>:int),
          (<init_1038@244:0> < (1 + <init_1038@244:1>))
          |- P[<init_1038@244:1>](<init_1038@244:0>:int,<init_1038@244:1>:int)
          
           (<init_1038@241:0> = 0) |- P[<init_1038@241:1>](<init_1038@241:0>:int,
                                                           <init_1038@241:1>:int)
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        
      end HcSolver.check_validity(46810)[4] (0.006999 sec.)
      solution:
        P[<fail_1554@316:0>]($731:bool) = false
        P[<init_1038@241:1>]($752:int,$754:int) = true
        P[<<init_1038@241:2>@277:0>]($787:int,$789:int,$791:int) = true
        P[<<<init_1038@241:2>@277:1>@293:0>]($771:int,$773:int,$775:int,$777:int) = true
        P[<<<init_1038@241:3>@249:0>@261:0>]($801:int,$803:int,$805:int) = true
        P[<<<<init_1038@241:3>@249:0>@261:1>@307:0>]($734:int,$736:int,$738:int,$740:int) = ((1 + $738) <= $734)
        P[<init_1038@244:1>]($766:int,$768:int) = true
        P[<<init_1038@244:2>@265:0>]($780:int,$782:int,$784:int) = true
        P[<<<init_1038@244:2>@265:1>@303:0>]($757:int,$759:int,$761:int,$763:int) = ((2 + $761) <= $757)
        P[<<<init_1038@244:3>@247:0>@263:0>]($794:int,$796:int,$798:int) = true
        P[<<<<init_1038@244:3>@247:0>@263:1>@305:0>]($743:int,$745:int,$747:int,$749:int) = ((2 + $747) <= $743)
    end YhornInterface.solve(45306)[3] (0.086987 sec.)
    
  end RefTypeInfer.infer_etrs(34072)[2] (0.827874 sec.)
  refinement types:
    main_1546: X
    f_1549: v1:int -> X
    f_1550: v1:int -> v2:int -> X
    f_1551: v1:int -> v2:int -> v3:int -> X
    main_1042: v1:int -> v2:int -> v3:int -> (v4:unit -> X) -> X
    k_main_1397: v1:int -> v2:int -> v3:int -> (v4:unit -> X) -> v6:bool -> X
    init_1038: v1:int ->
               v2:int ->
               (v3:int -> (v4:int -> X) -> X) -> ((v7:int -> (v8:{v8:int | ((1 + v7) <= v1)} -> X) -> X) -> X) -> X
    init_1038: v1:int ->
               v2:int ->
               (v3:int -> (v4:{v4:int | ((2 + v3) <= v1)} -> X) -> X) ->
               ((v7:int -> (v8:{v8:int | ((2 + v7) <= v1)} -> X) -> X) -> X) -> X
    f_k_main_1547: v1:bool -> v2:int -> v3:int -> v4:int -> (v5:unit -> X) -> (v7:int -> (v8:int -> X) -> X) -> X
    k_main_1447: v1:bool ->
                 v2:int -> v3:int -> v4:int -> (v5:unit -> X) -> (v7:int -> (v8:int -> X) -> X) -> v11:bool -> X
    update_1033: v1:int -> (v2:int -> (v3:int -> X) -> X) -> v6:int -> v7:int -> (v8:int -> X) -> X
    k_update_1263: v1:int -> v2:int -> v3:int -> (v4:int -> (v5:int -> X) -> X) -> (v8:int -> X) -> v10:bool -> X
    make_array_1030: v1:int -> v2:int -> (v3:int -> X) -> X
    k_make_array_u_1213: v1:int -> v2:int -> (v3:int -> X) -> v5:bool -> X
    k_make_array_u_1224: v1:int -> v2:int -> (v3:int -> X) -> v5:unit -> X
    f_k_main_1548: v1:bool -> v2:bool -> v3:int -> v4:int -> v5:int -> (v6:unit -> X) -> v8:int -> X
    fail_1554: v1:{v1:bool | false} -> (v2:unit -> X) -> X
    f_1552: var313:int -> var312:int -> var311:int -> var310:unit -> X
    fail_1553: var317:bool -> (var316:unit -> X) -> X
  abstraction types:
    main_1546: X
    f_1549: v1:int -> X
    f_1550: v1:int -> v2:int -> X
    f_1551: v1:int -> v2:int -> v3:int -> X
    main_1042: v1:int -> v2:int -> v3:int -> (v4:unit -> X) -> X
    k_main_1397: v1:int -> v2:int -> v3:int -> (v4:unit -> X) -> v6:bool -> X
    init_1038: var318:int ->
               var319:int ->
               (var320:int -> (var321:int[var321 -> ((2 + var320) <= var318)] -> X) -> X) ->
               ((var324:int ->
                 (var325:int[var325 -> ((1 + var324) <= var318),
                             var325 -> ((2 + var324) <= var318)] -> X) -> X) -> X) -> X
    f_k_main_1547: v1:bool -> v2:int -> v3:int -> v4:int -> (v5:unit -> X) -> (v7:int -> (v8:int -> X) -> X) -> X
    k_main_1447: v1:bool ->
                 v2:int -> v3:int -> v4:int -> (v5:unit -> X) -> (v7:int -> (v8:int -> X) -> X) -> v11:bool -> X
    update_1033: v1:int -> (v2:int -> (v3:int -> X) -> X) -> v6:int -> v7:int -> (v8:int -> X) -> X
    k_update_1263: v1:int -> v2:int -> v3:int -> (v4:int -> (v5:int -> X) -> X) -> (v8:int -> X) -> v10:bool -> X
    make_array_1030: v1:int -> v2:int -> (v3:int -> X) -> X
    k_make_array_u_1213: v1:int -> v2:int -> (v3:int -> X) -> v5:bool -> X
    k_make_array_u_1224: v1:int -> v2:int -> (v3:int -> X) -> v5:unit -> X
    f_k_main_1548: v1:bool -> v2:bool -> v3:int -> v4:int -> v5:int -> (v6:unit -> X) -> v8:int -> X
    fail_1554: v1:bool -> (v2:unit -> X) -> X
    f_1552: var313:int -> var312:int -> var311:int -> var310:unit -> X
    fail_1553: var317:bool -> (var316:unit -> X) -> X
  
end AbsTypeInfer.refine(34071)[1] (0.836872 sec.)
DONE!

Prefix of spurious counter-example::
0; 0; 0; 0; 0; 0; 1; 0; 0; 0; 1

Program with abstraction types (CEGAR-cycle 6)::
Main: main_1546
  main_1546 -> (rand_int f_1549)
  f_1549 x_1487 -> (rand_int (f_1550 x_1487))
  f_1550 x_1487 x_1500 -> (rand_int (f_1551 x_1487 x_1500))
  f_1551 x_1487 x_1500 x_1513 -> (main_1042 x_1487 x_1500 x_1513 (f_1552 x_1487 x_1500 x_1513))
  f_1552 x_1487 x_1500 x_1513 x_1484 -> end
  f_k_main_1547 b_1481 i_1045 k_1043 n_1044 k_main_1394 x_1404 when (
      0 <= i_1045) -> (k_main_1447 b_1481 i_1045 k_1043 n_1044 k_main_1394 x_1404 (i_1045 < n_1044))
  f_k_main_1547 b_1481 i_1045 k_1043 n_1044 k_main_1394 x_1404 when (
      not (0 <= i_1045)) -> (k_main_1447 b_1481 i_1045 k_1043 n_1044 k_main_1394 x_1404 false)
  f_k_main_1548 b_1477 b_1481 i_1045 k_1043 n_1044 k_main_1394 x_1451 when (x_1451 >= 1) -> (k_main_1394 ())
  f_k_main_1548 b_1477 b_1481 i_1045 k_1043 n_1044 k_main_1394 x_1451 when (
      not (x_1451 >= 1)) -> (fail_1554 true k_main_1394)
  fail_1553 b k -> {fail} => (k ())
  fail_1554 b k -> {fail} => (k ())
  init_1038 i_1039 n_1040 a_1041 k_init_1322 when (i_1039 >= n_1040) -> (k_init_1322 a_1041)
  init_1038 i_1039 n_1040 a_1041 k_init_1322 when (not (i_1039 >= n_1040)) ->
      (init_1038 (i_1039 + 1) n_1040 (update_1033 i_1039 a_1041 1) k_init_1322)
  k_main_1397 i_1045 k_1043 n_1044 k_main_1394 b_1481 when b_1481 ->
      (init_1038 k_1043 n_1044 (make_array_1030 n_1044) (f_k_main_1547 b_1481 i_1045 k_1043 n_1044 k_main_1394))
  k_main_1397 i_1045 k_1043 n_1044 k_main_1394 b_1481 when (not b_1481) -> (k_main_1394 ())
  k_main_1447 b_1481 i_1045 k_1043 n_1044 k_main_1394 x_1404 b_1477 when b_1477 ->
      (x_1404 i_1045 (f_k_main_1548 b_1477 b_1481 i_1045 k_1043 n_1044 k_main_1394))
  k_main_1447 b_1481 i_1045 k_1043 n_1044 k_main_1394 x_1404 b_1477 when (not b_1477) -> (k_main_1394 ())
  k_make_array_u_1213 i_1032 n_1031 k_make_array_1207 b_1225 when b_1225 ->
      (k_make_array_u_1224 i_1032 n_1031 k_make_array_1207 ())
  k_make_array_u_1213 i_1032 n_1031 k_make_array_1207 b_1225 when (not b_1225) ->
      (fail_1553 true (k_make_array_u_1224 i_1032 n_1031 k_make_array_1207))
  k_make_array_u_1224 i_1032 n_1031 k_make_array_1207 x_1210 -> (k_make_array_1207 0)
  k_update_1263 i_1034 j_1037 x_1036 a_1035 k_update_1260 b_1278 when b_1278 -> (k_update_1260 x_1036)
  k_update_1263 i_1034 j_1037 x_1036 a_1035 k_update_1260 b_1278 when (not b_1278) -> (a_1035 j_1037 k_update_1260)
  main_1042 k_1043 n_1044 i_1045 k_main_1394 when (k_1043 >= 0) ->
      (k_main_1397 i_1045 k_1043 n_1044 k_main_1394 (k_1043 <= 0))
  main_1042 k_1043 n_1044 i_1045 k_main_1394 when (not (k_1043 >= 0)) ->
      (k_main_1397 i_1045 k_1043 n_1044 k_main_1394 false)
  make_array_1030 n_1031 i_1032 k_make_array_1207 when (0 <= i_1032) ->
      (k_make_array_u_1213 i_1032 n_1031 k_make_array_1207 (i_1032 < n_1031))
  make_array_1030 n_1031 i_1032 k_make_array_1207 when (not (0 <= i_1032)) ->
      (k_make_array_u_1213 i_1032 n_1031 k_make_array_1207 false)
  update_1033 i_1034 a_1035 x_1036 j_1037 k_update_1260 when (j_1037 > (i_1034 - 1)) ->
      (k_update_1263 i_1034 j_1037 x_1036 a_1035 k_update_1260 (j_1037 <= i_1034))
  update_1033 i_1034 a_1035 x_1036 j_1037 k_update_1260 when (not (j_1037 > (i_1034 - 1))) ->
      (k_update_1263 i_1034 j_1037 x_1036 a_1035 k_update_1260 false)
Types:
  main_1546 : X
  fail_1553 : (x_1:bool[x_1] -> (unit -> X) -> X)
  fail_1554 : (x_1:bool[x_1] -> (unit -> X) -> X)
  init_1038 : (x_1:int ->
               x_2:int ->
               (x_4:int[x_2 <= 0; x_2 >= x_4 + 1; x_4 >= 0] -> (x_6:int[x_1 >= x_4 + 2; x_6 >= 1; x_2 <= 0] -> X) -> X) ->
               ((x_11:int[x_1 <= 0; x_2 >= x_11 + 1; x_11 >= 0] ->
                 (x_13:int[x_1 >= x_11 + 2; x_1 >= x_11 + 1; x_13 >= 1; x_2 <= 0] -> X) -> X) -> X) -> X)
  
(6-1) Abstracting ... DONE!

(6-2) Checking HORS ... DONE!

Error trace::
  main_1546 ... --> 
  f_1549 ... --> 
  f_1550 ... --> 
  f_1551 ... --> 
  main_1042 [1/2] ... --> 
  k_main_1397 [1/2] ... --> 
  init_1038 [2/2] ... --> 
  init_1038 [1/2] ... --> 
  f_k_main_1547 [1/2] ... --> 
  k_main_1447 [1/2] ... --> 
  update_1033 [1/2] ... --> 
  k_update_1263 [2/2] ... --> 
  make_array_1030 [1/2] ... --> 
  k_make_array_u_1213 [1/2] ... --> 
  k_make_array_u_1224 ... --> 
  f_k_main_1548 [2/2] ... --> 
  fail_1554 ... --> fail -->
  ERROR!

Spurious counter-example::
  0; 0; 0; 0; 0; 0; 1; 0; 0; 0; 0; 1; 0; 0; 0; 1; 0

(6-3) Checking counter-example ... DONE!

(6-4) Discovering predicates ... 
begin AbsTypeInfer.refine(53992)[1]
  program:
    main_1546  | true = ((Random.int 0) f_1549)
    f_1549 x_1487 | true = ((Random.int 0) (f_1550 x_1487))
    f_1550 x_1487 x_1500 | true = ((Random.int 0) (f_1551 x_1487
                                                          x_1500))
    f_1551 x_1487 x_1500 x_1513 | true = (main_1042 x_1487
                                                    x_1500
                                                    x_1513
                                                    (f_1552 x_1487
                                                            x_1500
                                                            x_1513))
    f_1552 x_1487 x_1500 x_1513 x_1484 | true = end
    f_k_main_1547 b_1481 i_1045 k_1043 n_1044 k_main_1394 x_1404 | (0 <= i_1045) = (
    k_main_1447 b_1481
                i_1045
                k_1043
                n_1044
                k_main_1394
                x_1404
                (i_1045 < n_1044))
    f_k_main_1547 b_1481 i_1045 k_1043 n_1044 k_main_1394 x_1404 | (not (
                                                                    0 <= i_1045)) = (
    k_main_1447 b_1481
                i_1045
                k_1043
                n_1044
                k_main_1394
                x_1404
                false)
    f_k_main_1548 b_1477 b_1481 i_1045 k_1043 n_1044 k_main_1394 x_1451 | (
    x_1451 >= 1) = (k_main_1394 ())
    f_k_main_1548 b_1477 b_1481 i_1045 k_1043 n_1044 k_main_1394 x_1451 | (
    not (x_1451 >= 1)) = (fail_1554 true
                                    k_main_1394)
    fail_1553 b k | true = (fail ())
    fail_1554 b k | true = (fail ())
    init_1038 i_1039 n_1040 a_1041 k_init_1322 | (i_1039 >= n_1040) = (
    k_init_1322 a_1041)
    init_1038 i_1039 n_1040 a_1041 k_init_1322 | (not (i_1039 >= n_1040)) = (
    init_1038 (i_1039 + 1)
              n_1040
              (update_1033 i_1039
                           a_1041
                           1)
              k_init_1322)
    k_main_1397 i_1045 k_1043 n_1044 k_main_1394 b_1481 | b_1481 = (init_1038
                                                                    k_1043
                                                                    n_1044
                                                                    (
                                                                    make_array_1030 n_1044)
                                                                    (
                                                                    f_k_main_1547
                                                                    b_1481
                                                                    i_1045
                                                                    k_1043
                                                                    n_1044
                                                                    k_main_1394))
    k_main_1397 i_1045 k_1043 n_1044 k_main_1394 b_1481 | (not b_1481) = (
    k_main_1394 ())
    k_main_1447 b_1481 i_1045 k_1043 n_1044 k_main_1394 x_1404 b_1477 | b_1477 = (
    x_1404 i_1045
           (f_k_main_1548 b_1477
                          b_1481
                          i_1045
                          k_1043
                          n_1044
                          k_main_1394))
    k_main_1447 b_1481 i_1045 k_1043 n_1044 k_main_1394 x_1404 b_1477 | (
    not b_1477) = (k_main_1394 ())
    k_make_array_u_1213 i_1032 n_1031 k_make_array_1207 b_1225 | b_1225 = (
    k_make_array_u_1224 i_1032
                        n_1031
                        k_make_array_1207
                        ())
    k_make_array_u_1213 i_1032 n_1031 k_make_array_1207 b_1225 | (not b_1225) = (
    fail_1553 true
              (k_make_array_u_1224 i_1032
                                   n_1031
                                   k_make_array_1207))
    k_make_array_u_1224 i_1032 n_1031 k_make_array_1207 x_1210 | true = (
    k_make_array_1207 0)
    k_update_1263 i_1034 j_1037 x_1036 a_1035 k_update_1260 b_1278 | b_1278 = (
    k_update_1260 x_1036)
    k_update_1263 i_1034 j_1037 x_1036 a_1035 k_update_1260 b_1278 | (
    not b_1278) = (a_1035 j_1037
                          k_update_1260)
    main_1042 k_1043 n_1044 i_1045 k_main_1394 | (k_1043 >= 0) = (k_main_1397
                                                                    i_1045
                                                                    k_1043
                                                                    n_1044
                                                                    k_main_1394
                                                                    (
                                                                    k_1043 <= 0))
    main_1042 k_1043 n_1044 i_1045 k_main_1394 | (not (k_1043 >= 0)) = (
    k_main_1397 i_1045
                k_1043
                n_1044
                k_main_1394
                false)
    make_array_1030 n_1031 i_1032 k_make_array_1207 | (0 <= i_1032) = (
    k_make_array_u_1213 i_1032
                        n_1031
                        k_make_array_1207
                        (i_1032 < n_1031))
    make_array_1030 n_1031 i_1032 k_make_array_1207 | (not (0 <= i_1032)) = (
    k_make_array_u_1213 i_1032
                        n_1031
                        k_make_array_1207
                        false)
    update_1033 i_1034 a_1035 x_1036 j_1037 k_update_1260 | (j_1037 > (i_1034 - 1)) = (
    k_update_1263 i_1034
                  j_1037
                  x_1036
                  a_1035
                  k_update_1260
                  (j_1037 <= i_1034))
    update_1033 i_1034 a_1035 x_1036 j_1037 k_update_1260 | (not (j_1037 > (i_1034 - 1))) = (
    k_update_1263 i_1034
                  j_1037
                  x_1036
                  a_1035
                  k_update_1260
                  false)
    main_1546:X
    f_1549:int -> X
    f_1550:int -> int -> X
    f_1551:int -> int -> int -> X
    f_1552:int -> int -> int -> unit -> X
    f_k_main_1547:bool -> int -> int -> int -> (unit -> X) -> (int -> (int -> X) -> X) -> X
    f_k_main_1548:bool -> bool -> int -> int -> int -> (unit -> X) -> int -> X
    fail_1553:bool -> (unit -> X) -> X
    fail_1554:bool -> (unit -> X) -> X
    init_1038:int -> int -> (int -> (int -> X) -> X) -> ((int -> (int -> X) -> X) -> X) -> X
    k_main_1397:int -> int -> int -> (unit -> X) -> bool -> X
    k_main_1447:bool -> int -> int -> int -> (unit -> X) -> (int -> (int -> X) -> X) -> bool -> X
    k_make_array_u_1213:int -> int -> (int -> X) -> bool -> X
    k_make_array_u_1224:int -> int -> (int -> X) -> unit -> X
    k_update_1263:int -> int -> int -> (int -> (int -> X) -> X) -> (int -> X) -> bool -> X
    main_1042:int -> int -> int -> (unit -> X) -> X
    make_array_1030:int -> int -> (int -> X) -> X
    update_1033:int -> (int -> (int -> X) -> X) -> int -> int -> (int -> X) -> X
  inlined functions: f_1549,f_1550,f_1551,f_1552,f_k_main_1547,f_k_main_1548,k_main_1397,k_main_1447,k_make_array_u_1213,k_make_array_u_1224,k_update_1263,main_1042,make_array_1030,update_1033
  counterexample: 0:0:0:0:0:0:1:0:0:0:0:1:0:0:0:1:0
  error traces:
    [true.nop(<f_1549@322:0> = var330)
     [true.nop((<f_1550@325:0> = <f_1549@322:0>) && (<f_1550@325:1> = var331))
      [true.nop((<f_1551@328:0> = <f_1550@325:0>) && ((<f_1551@328:1> = <f_1550@325:1>) && (<f_1551@328:2> = var332)))
       [true.
        ((<main_1042@330:0> = <f_1551@328:0>) &&
         ((<main_1042@330:1> = <f_1551@328:1>) && (<main_1042@330:2> = <f_1551@328:2>)))
        [(<main_1042@330:0> >= 0).
         ((<k_main_1397@333:0> = <main_1042@330:2>) &&
          ((<k_main_1397@333:1> = <main_1042@330:0>) &&
           ((<k_main_1397@333:2> = <main_1042@330:1>) && (<k_main_1397@333:4> = (<main_1042@330:0> <= 0)))))
         [<k_main_1397@333:4>.((<init_1038@336:0> = <k_main_1397@333:1>) && (<init_1038@336:1> = <k_main_1397@333:2>))
          [(not (<init_1038@336:0> >= <init_1038@336:1>)).
           ((<init_1038@339:0> = (<init_1038@336:0> + 1)) && (<init_1038@339:1> = <init_1038@336:1>))
           [(<init_1038@339:0> >= <init_1038@339:1>).true
            [true.true
             [true.
              ((<f_k_main_1547@346:0> = <k_main_1397@333:4>) &&
               ((<f_k_main_1547@346:1> = <k_main_1397@333:0>) &&
                ((<f_k_main_1547@346:2> = <k_main_1397@333:1>) && (<f_k_main_1547@346:3> = <k_main_1397@333:2>))))
              [(0 <= <f_k_main_1547@346:1>).
               ((<k_main_1447@349:0> = <f_k_main_1547@346:0>) &&
                ((<k_main_1447@349:1> = <f_k_main_1547@346:1>) &&
                 ((<k_main_1447@349:2> = <f_k_main_1547@346:2>) &&
                  ((<k_main_1447@349:3> = <f_k_main_1547@346:3>) &&
                   (<k_main_1447@349:6> = (<f_k_main_1547@346:1> < <f_k_main_1547@346:3>))))))
               [<k_main_1447@349:6>.(<<k_main_1447@349:5>@352:0> = <k_main_1447@349:1>)
                [true.(<<f_k_main_1547@346:5>@354:0> = <<k_main_1447@349:5>@352:0>)
                 [true.(<<<init_1038@336:3>@344:0>@356:0> = <<f_k_main_1547@346:5>@354:0>)
                  [true.(<<<init_1038@339:3>@342:0>@358:0> = <<<init_1038@336:3>@344:0>@356:0>)
                   [true.(<<init_1038@339:2>@360:0> = <<<init_1038@339:3>@342:0>@358:0>)
                    [true.
                     ((<update_1033@362:0> = <init_1038@336:0>) &&
                      ((<update_1033@362:2> = 1) && (<update_1033@362:3> = <<init_1038@339:2>@360:0>)))
                     [(<update_1033@362:3> > (<update_1033@362:0> - 1)).
                      ((<k_update_1263@365:0> = <update_1033@362:0>) &&
                       ((<k_update_1263@365:1> = <update_1033@362:3>) &&
                        ((<k_update_1263@365:2> = <update_1033@362:2>) &&
                         (<k_update_1263@365:5> = (<update_1033@362:3> <= <update_1033@362:0>)))))
                      [(not <k_update_1263@365:5>).(<<k_update_1263@365:3>@368:0> = <k_update_1263@365:1>)
                       [true.(<<update_1033@362:1>@370:0> = <<k_update_1263@365:3>@368:0>)
                        [true.(<<init_1038@336:2>@372:0> = <<update_1033@362:1>@370:0>)
                         [true.
                          ((<make_array_1030@374:0> = <k_main_1397@333:2>) &&
                           (<make_array_1030@374:1> = <<init_1038@336:2>@372:0>))
                          [(0 <= <make_array_1030@374:1>).
                           ((<k_make_array_u_1213@377:0> = <make_array_1030@374:1>) &&
                            ((<k_make_array_u_1213@377:1> = <make_array_1030@374:0>) &&
                             (<k_make_array_u_1213@377:3> = (<make_array_1030@374:1> < <make_array_1030@374:0>))))
                           [<k_make_array_u_1213@377:3>.
                            ((<k_make_array_u_1224@380:0> = <k_make_array_u_1213@377:0>) &&
                             ((<k_make_array_u_1224@380:1> = <k_make_array_u_1213@377:1>) &&
                              (<k_make_array_u_1224@380:3> = ())))
                            [true.(<<k_make_array_u_1224@380:2>@382:0> = 0)
                             [true.(<<k_make_array_u_1213@377:2>@384:0> = <<k_make_array_u_1224@380:2>@382:0>)
                              [true.(<<make_array_1030@374:2>@386:0> = <<k_make_array_u_1213@377:2>@384:0>)
                               [true.(<<<init_1038@336:2>@372:1>@388:0> = <<make_array_1030@374:2>@386:0>)
                                [true.(<<<update_1033@362:1>@370:1>@390:0> = <<<init_1038@336:2>@372:1>@388:0>)
                                 [true.(<<<k_update_1263@365:3>@368:1>@392:0> = <<<update_1033@362:1>@370:1>@390:0>)
                                  [true.(<<k_update_1263@365:4>@394:0> = <<<k_update_1263@365:3>@368:1>@392:0>)
                                   [true.(<<update_1033@362:4>@396:0> = <<k_update_1263@365:4>@394:0>)
                                    [true.(<<<init_1038@339:2>@360:1>@398:0> = <<update_1033@362:4>@396:0>)
                                     [true.
                                      (<<<<init_1038@339:3>@342:0>@358:1>@400:0> = <<<init_1038@339:2>@360:1>@398:0>)
                                      [true.
                                       (<<<<init_1038@336:3>@344:0>@356:1>@402:0> =
                                        <<<<init_1038@339:3>@342:0>@358:1>@400:0>)
                                       [true.
                                        (<<<f_k_main_1547@346:5>@354:1>@404:0> =
                                         <<<<init_1038@336:3>@344:0>@356:1>@402:0>)
                                        [true.
                                         (<<<k_main_1447@349:5>@352:1>@406:0> = <<<f_k_main_1547@346:5>@354:1>@404:0>)
                                         [true.
                                          ((<f_k_main_1548@408:0> = <k_main_1447@349:6>) &&
                                           ((<f_k_main_1548@408:1> = <k_main_1447@349:0>) &&
                                            ((<f_k_main_1548@408:2> = <k_main_1447@349:1>) &&
                                             ((<f_k_main_1548@408:3> = <k_main_1447@349:2>) &&
                                              ((<f_k_main_1548@408:4> = <k_main_1447@349:3>) &&
                                               (<f_k_main_1548@408:6> = <<<k_main_1447@349:5>@352:1>@406:0>))))))
                                          [(not (<f_k_main_1548@408:6> >= 1)).(<fail_1554@411:0> = true)[true.error
  begin RefTypeInfer.infer_etrs(53993)[2]
    horn clauses:
      P[<fail_1554@411:0>](<fail_1554@411:0>:bool)|- bot
      
      P[<f_k_main_1548@408:6>](<f_k_main_1548@408:0>:bool,<f_k_main_1548@408:1>:bool,<f_k_main_1548@408:2>:int,<f_k_main_1548@408:3>:int,<f_k_main_1548@408:4>:int,<f_k_main_1548@408:6>:int),
      ((<f_k_main_1548@408:6> < 1) && <fail_1554@411:0>) |- P[<fail_1554@411:0>](
      <fail_1554@411:0>:bool)
      
      P[<k_main_1447@349:6>](<f_k_main_1548@408:1>:bool,<f_k_main_1548@408:2>:int,<f_k_main_1548@408:3>:int,<f_k_main_1548@408:4>:int,<f_k_main_1548@408:0>:bool),
      P[<<<k_main_1447@349:5>@352:1>@406:0>](<f_k_main_1548@408:1>:bool,<f_k_main_1548@408:2>:int,<f_k_main_1548@408:3>:int,<f_k_main_1548@408:4>:int,<f_k_main_1548@408:2>:int,<f_k_main_1548@408:6>:int),
      <f_k_main_1548@408:0>
      |- P[<f_k_main_1548@408:6>](<f_k_main_1548@408:0>:bool,<f_k_main_1548@408:1>:bool,
                                  <f_k_main_1548@408:2>:int,<f_k_main_1548@408:3>:int,
                                  <f_k_main_1548@408:4>:int,<f_k_main_1548@408:6>:int)
      
      P[<f_k_main_1547@346:3>](<k_main_1447@349:0>:bool,<k_main_1447@349:1>:int,<k_main_1447@349:2>:int,<k_main_1447@349:3>:int),
      P[<<<f_k_main_1547@346:5>@354:1>@404:0>](<k_main_1447@349:0>:bool,<k_main_1447@349:1>:int,<k_main_1447@349:2>:int,<k_main_1447@349:3>:int,<<k_main_1447@349:5>@352:0>:int,<<<k_main_1447@349:5>@352:1>@406:0>:int),
      (0 <= <k_main_1447@349:1>)
      |- P[<<<k_main_1447@349:5>@352:1>@406:0>](<k_main_1447@349:0>:bool,
                                                <k_main_1447@349:1>:int,
                                                <k_main_1447@349:2>:int,
                                                <k_main_1447@349:3>:int,
                                                <<k_main_1447@349:5>@352:0>:int,
                                                <<<k_main_1447@349:5>@352:1>@406:0>:int)
      
      P[<k_main_1397@333:4>](<f_k_main_1547@346:1>:int,<f_k_main_1547@346:2>:int,<f_k_main_1547@346:3>:int,<f_k_main_1547@346:0>:bool),
      P[<<<<init_1038@336:3>@344:0>@356:1>@402:0>](<f_k_main_1547@346:2>:int,<f_k_main_1547@346:3>:int,<<f_k_main_1547@346:5>@354:0>:int,<<<f_k_main_1547@346:5>@354:1>@404:0>:int),
      P[<f_k_main_1547@346:3>](<f_k_main_1547@346:0>:bool,<f_k_main_1547@346:1>:int,<f_k_main_1547@346:2>:int,<f_k_main_1547@346:3>:int),
      <f_k_main_1547@346:0>
      |- P[<<<f_k_main_1547@346:5>@354:1>@404:0>](<f_k_main_1547@346:0>:bool,
                                                  <f_k_main_1547@346:1>:int,
                                                  <f_k_main_1547@346:2>:int,
                                                  <f_k_main_1547@346:3>:int,
                                                  <<f_k_main_1547@346:5>@354:0>:int,
                                                  <<<f_k_main_1547@346:5>@354:1>@404:0>:int)
      
      P[<init_1038@336:1>](<init_1038@336:0>:int,<init_1038@336:1>:int),
      P[<<<<init_1038@339:3>@342:0>@358:1>@400:0>]((1 + <init_1038@336:0>):int,<init_1038@336:1>:int,<<<init_1038@336:3>@344:0>@356:0>:int,<<<<init_1038@336:3>@344:0>@356:1>@402:0>:int),
      (<init_1038@336:0> < <init_1038@336:1>)
      |- P[<<<<init_1038@336:3>@344:0>@356:1>@402:0>](<init_1038@336:0>:int,
                                                      <init_1038@336:1>:int,
                                                      <<<init_1038@336:3>@344:0>@356:0>:int,
                                                      <<<<init_1038@336:3>@344:0>@356:1>@402:0>:int)
      
      P[<init_1038@339:1>](<init_1038@339:0>:int,<init_1038@339:1>:int),
      P[<<<init_1038@339:2>@360:1>@398:0>](<init_1038@339:0>:int,<init_1038@339:1>:int,<<<init_1038@339:3>@342:0>@358:0>:int,<<<<init_1038@339:3>@342:0>@358:1>@400:0>:int),
      (<init_1038@339:0> >= <init_1038@339:1>)
      |- P[<<<<init_1038@339:3>@342:0>@358:1>@400:0>](<init_1038@339:0>:int,
                                                      <init_1038@339:1>:int,
                                                      <<<init_1038@339:3>@342:0>@358:0>:int,
                                                      <<<<init_1038@339:3>@342:0>@358:1>@400:0>:int)
      
      P[<init_1038@336:1>]((-1 + <init_1038@339:0>):int,<init_1038@339:1>:int),
      P[<<update_1033@362:4>@396:0>]((-1 + <init_1038@339:0>):int,1:int,<<init_1038@339:2>@360:0>:int,<<<init_1038@339:2>@360:1>@398:0>:int),
      P[<init_1038@339:1>](<init_1038@339:0>:int,<init_1038@339:1>:int), (
      <init_1038@339:0> < (1 + <init_1038@339:1>))
      |- P[<<<init_1038@339:2>@360:1>@398:0>](<init_1038@339:0>:int,<init_1038@339:1>:int,
                                              <<init_1038@339:2>@360:0>:int,
                                              <<<init_1038@339:2>@360:1>@398:0>:int)
      
      P[<update_1033@362:3>](<update_1033@362:0>:int,<update_1033@362:2>:int,<update_1033@362:3>:int),
      P[<<k_update_1263@365:4>@394:0>](<update_1033@362:0>:int,<update_1033@362:3>:int,<update_1033@362:2>:int,<<update_1033@362:4>@396:0>:int),
      ((1 + <update_1033@362:3>) > <update_1033@362:0>)
      |- P[<<update_1033@362:4>@396:0>](<update_1033@362:0>:int,<update_1033@362:2>:int,
                                        <update_1033@362:3>:int,<<update_1033@362:4>@396:0>:int)
      
      P[<k_update_1263@365:5>](<k_update_1263@365:0>:int,<k_update_1263@365:1>:int,<k_update_1263@365:2>:int,false:bool),
      P[<<<k_update_1263@365:3>@368:1>@392:0>](<k_update_1263@365:0>:int,<k_update_1263@365:1>:int,<k_update_1263@365:2>:int,<k_update_1263@365:1>:int,<<k_update_1263@365:4>@394:0>:int)|- P[<<k_update_1263@365:4>@394:0>](
      <k_update_1263@365:0>:int,<k_update_1263@365:1>:int,<k_update_1263@365:2>:int,
      <<k_update_1263@365:4>@394:0>:int)
      
      P[<update_1033@362:3>](<k_update_1263@365:0>:int,<k_update_1263@365:2>:int,<k_update_1263@365:1>:int),
      P[<<<update_1033@362:1>@370:1>@390:0>](<k_update_1263@365:0>:int,<<k_update_1263@365:3>@368:0>:int,<<<k_update_1263@365:3>@368:1>@392:0>:int),
      ((1 + <k_update_1263@365:1>) > <k_update_1263@365:0>)
      |- P[<<<k_update_1263@365:3>@368:1>@392:0>](<k_update_1263@365:0>:int,
                                                  <k_update_1263@365:1>:int,
                                                  <k_update_1263@365:2>:int,
                                                  <<k_update_1263@365:3>@368:0>:int,
                                                  <<<k_update_1263@365:3>@368:1>@392:0>:int)
      
      P[<init_1038@336:1>](<update_1033@362:0>:int,<init_1038@339:1>:int),
      P[<<<init_1038@336:2>@372:1>@388:0>](<update_1033@362:0>:int,<init_1038@339:1>:int,<<update_1033@362:1>@370:0>:int,<<<update_1033@362:1>@370:1>@390:0>:int),
      (<update_1033@362:0> < <init_1038@339:1>)
      |- P[<<<update_1033@362:1>@370:1>@390:0>](<update_1033@362:0>:int,
                                                <<update_1033@362:1>@370:0>:int,
                                                <<<update_1033@362:1>@370:1>@390:0>:int)
      
      P[<k_main_1397@333:4>](<f_k_main_1547@346:1>:int,<init_1038@336:0>:int,<init_1038@336:1>:int,true:bool),
      P[<<make_array_1030@374:2>@386:0>](<init_1038@336:1>:int,<<init_1038@336:2>@372:0>:int,<<<init_1038@336:2>@372:1>@388:0>:int),
      P[<init_1038@336:1>](<init_1038@336:0>:int,<init_1038@336:1>:int)|- P[<<<init_1038@336:2>@372:1>@388:0>](
      <init_1038@336:0>:int,<init_1038@336:1>:int,<<init_1038@336:2>@372:0>:int,
      <<<init_1038@336:2>@372:1>@388:0>:int)
      
      P[<make_array_1030@374:1>](<make_array_1030@374:0>:int,<make_array_1030@374:1>:int),
      P[<<k_make_array_u_1213@377:2>@384:0>](<make_array_1030@374:1>:int,<make_array_1030@374:0>:int,<<make_array_1030@374:2>@386:0>:int),
      (0 <= <make_array_1030@374:1>)
      |- P[<<make_array_1030@374:2>@386:0>](<make_array_1030@374:0>:int,
                                            <make_array_1030@374:1>:int,
                                            <<make_array_1030@374:2>@386:0>:int)
      
      P[<k_make_array_u_1213@377:3>](<k_make_array_u_1213@377:0>:int,<k_make_array_u_1213@377:1>:int,true:bool),
      P[<<k_make_array_u_1224@380:2>@382:0>](<k_make_array_u_1213@377:0>:int,<k_make_array_u_1213@377:1>:int,<<k_make_array_u_1213@377:2>@384:0>:int)|- P[<<k_make_array_u_1213@377:2>@384:0>](
      <k_make_array_u_1213@377:0>:int,<k_make_array_u_1213@377:1>:int,
      <<k_make_array_u_1213@377:2>@384:0>:int)
      
      P[<k_make_array_u_1224@380:3>](<k_make_array_u_1224@380:0>:int,<k_make_array_u_1224@380:1>:int,<k_make_array_u_1224@380:3>:unit),
      (<<k_make_array_u_1224@380:2>@382:0> = 0)
      |- P[<<k_make_array_u_1224@380:2>@382:0>](<k_make_array_u_1224@380:0>:int,
                                                <k_make_array_u_1224@380:1>:int,
                                                <<k_make_array_u_1224@380:2>@382:0>:int)
      
      P[<k_make_array_u_1213@377:3>](<k_make_array_u_1224@380:0>:int,<k_make_array_u_1224@380:1>:int,true:bool)|- P[<k_make_array_u_1224@380:3>](
      <k_make_array_u_1224@380:0>:int,<k_make_array_u_1224@380:1>:int,
      <k_make_array_u_1224@380:3>:unit)
      
      P[<make_array_1030@374:1>](<k_make_array_u_1213@377:1>:int,<k_make_array_u_1213@377:0>:int),
      ((0 <= <k_make_array_u_1213@377:0>) &&
       (<k_make_array_u_1213@377:3> = (<k_make_array_u_1213@377:0> < <k_make_array_u_1213@377:1>)))
      |- P[<k_make_array_u_1213@377:3>](<k_make_array_u_1213@377:0>:int,
                                        <k_make_array_u_1213@377:1>:int,
                                        <k_make_array_u_1213@377:3>:bool)
      
      P[<k_main_1397@333:4>](<f_k_main_1547@346:1>:int,<init_1038@336:0>:int,<make_array_1030@374:0>:int,true:bool),
      P[<<init_1038@336:2>@372:0>](<init_1038@336:0>:int,<make_array_1030@374:0>:int,<make_array_1030@374:1>:int)|- P[<make_array_1030@374:1>](
      <make_array_1030@374:0>:int,<make_array_1030@374:1>:int)
      
      P[<init_1038@336:1>](<init_1038@336:0>:int,<init_1038@336:1>:int),
      P[<<update_1033@362:1>@370:0>](<init_1038@336:0>:int,<<init_1038@336:2>@372:0>:int),
      (<init_1038@336:0> < <init_1038@336:1>)
      |- P[<<init_1038@336:2>@372:0>](<init_1038@336:0>:int,<init_1038@336:1>:int,
                                      <<init_1038@336:2>@372:0>:int)
      
      P[<update_1033@362:3>](<update_1033@362:0>:int,<k_update_1263@365:2>:int,<k_update_1263@365:1>:int),
      P[<<k_update_1263@365:3>@368:0>](<update_1033@362:0>:int,<k_update_1263@365:1>:int,<k_update_1263@365:2>:int,<<update_1033@362:1>@370:0>:int),
      ((1 + <k_update_1263@365:1>) > <update_1033@362:0>)
      |- P[<<update_1033@362:1>@370:0>](<update_1033@362:0>:int,<<update_1033@362:1>@370:0>:int)
      
      P[<k_update_1263@365:5>](<k_update_1263@365:0>:int,<k_update_1263@365:1>:int,<k_update_1263@365:2>:int,false:bool),
      (<<k_update_1263@365:3>@368:0> = <k_update_1263@365:1>)
      |- P[<<k_update_1263@365:3>@368:0>](<k_update_1263@365:0>:int,<k_update_1263@365:1>:int,
                                          <k_update_1263@365:2>:int,<<k_update_1263@365:3>@368:0>:int)
      
      P[<update_1033@362:3>](<k_update_1263@365:0>:int,<k_update_1263@365:2>:int,<k_update_1263@365:1>:int),
      (((1 + <k_update_1263@365:1>) > <k_update_1263@365:0>) &&
       (<k_update_1263@365:5> = (<k_update_1263@365:1> <= <k_update_1263@365:0>)))
      |- P[<k_update_1263@365:5>](<k_update_1263@365:0>:int,<k_update_1263@365:1>:int,
                                  <k_update_1263@365:2>:int,<k_update_1263@365:5>:bool)
      
      P[<init_1038@336:1>](<update_1033@362:0>:int,<init_1038@339:1>:int),
      P[<<init_1038@339:2>@360:0>]((1 + <update_1033@362:0>):int,<init_1038@339:1>:int,<update_1033@362:3>:int),
      ((<update_1033@362:2> = 1) && (<update_1033@362:0> < <init_1038@339:1>))
      |- P[<update_1033@362:3>](<update_1033@362:0>:int,<update_1033@362:2>:int,
                                <update_1033@362:3>:int)
      
      P[<init_1038@339:1>](<init_1038@339:0>:int,<init_1038@339:1>:int),
      P[<<<init_1038@339:3>@342:0>@358:0>](<init_1038@339:0>:int,<init_1038@339:1>:int,<<init_1038@339:2>@360:0>:int),
      (<init_1038@339:0> >= <init_1038@339:1>)
      |- P[<<init_1038@339:2>@360:0>](<init_1038@339:0>:int,<init_1038@339:1>:int,
                                      <<init_1038@339:2>@360:0>:int)
      
      P[<init_1038@336:1>]((-1 + <init_1038@339:0>):int,<init_1038@339:1>:int),
      P[<<<init_1038@336:3>@344:0>@356:0>]((-1 + <init_1038@339:0>):int,<init_1038@339:1>:int,<<<init_1038@339:3>@342:0>@358:0>:int),
      P[<init_1038@339:1>](<init_1038@339:0>:int,<init_1038@339:1>:int), (
      <init_1038@339:0> < (1 + <init_1038@339:1>))
      |- P[<<<init_1038@339:3>@342:0>@358:0>](<init_1038@339:0>:int,<init_1038@339:1>:int,
                                              <<<init_1038@339:3>@342:0>@358:0>:int)
      
      P[<k_main_1397@333:4>](<f_k_main_1547@346:1>:int,<init_1038@336:0>:int,<init_1038@336:1>:int,true:bool),
      P[<<f_k_main_1547@346:5>@354:0>](true:bool,<f_k_main_1547@346:1>:int,<init_1038@336:0>:int,<init_1038@336:1>:int,<<<init_1038@336:3>@344:0>@356:0>:int),
      P[<init_1038@336:1>](<init_1038@336:0>:int,<init_1038@336:1>:int)|- P[<<<init_1038@336:3>@344:0>@356:0>](
      <init_1038@336:0>:int,<init_1038@336:1>:int,<<<init_1038@336:3>@344:0>@356:0>:int)
      
      P[<f_k_main_1547@346:3>](<f_k_main_1547@346:0>:bool,<f_k_main_1547@346:1>:int,<f_k_main_1547@346:2>:int,<f_k_main_1547@346:3>:int),
      P[<<k_main_1447@349:5>@352:0>](<f_k_main_1547@346:0>:bool,<f_k_main_1547@346:1>:int,<f_k_main_1547@346:2>:int,<f_k_main_1547@346:3>:int,<<f_k_main_1547@346:5>@354:0>:int),
      (0 <= <f_k_main_1547@346:1>)
      |- P[<<f_k_main_1547@346:5>@354:0>](<f_k_main_1547@346:0>:bool,
                                          <f_k_main_1547@346:1>:int,<f_k_main_1547@346:2>:int,
                                          <f_k_main_1547@346:3>:int,<<f_k_main_1547@346:5>@354:0>:int)
      
      P[<k_main_1447@349:6>](<k_main_1447@349:0>:bool,<k_main_1447@349:1>:int,<k_main_1447@349:2>:int,<k_main_1447@349:3>:int,true:bool),
      (<<k_main_1447@349:5>@352:0> = <k_main_1447@349:1>)
      |- P[<<k_main_1447@349:5>@352:0>](<k_main_1447@349:0>:bool,<k_main_1447@349:1>:int,
                                        <k_main_1447@349:2>:int,<k_main_1447@349:3>:int,
                                        <<k_main_1447@349:5>@352:0>:int)
      
      P[<f_k_main_1547@346:3>](<k_main_1447@349:0>:bool,<k_main_1447@349:1>:int,<k_main_1447@349:2>:int,<k_main_1447@349:3>:int),
      ((0 <= <k_main_1447@349:1>) && (<k_main_1447@349:6> = (<k_main_1447@349:1> < <k_main_1447@349:3>)))
      |- P[<k_main_1447@349:6>](<k_main_1447@349:0>:bool,<k_main_1447@349:1>:int,
                                <k_main_1447@349:2>:int,<k_main_1447@349:3>:int,
                                <k_main_1447@349:6>:bool)
      
      P[<k_main_1397@333:4>](<f_k_main_1547@346:1>:int,<f_k_main_1547@346:2>:int,<f_k_main_1547@346:3>:int,<f_k_main_1547@346:0>:bool),
      <f_k_main_1547@346:0>
      |- P[<f_k_main_1547@346:3>](<f_k_main_1547@346:0>:bool,<f_k_main_1547@346:1>:int,
                                  <f_k_main_1547@346:2>:int,<f_k_main_1547@346:3>:int)
      
      P[<init_1038@336:1>]((-1 + <init_1038@339:0>):int,<init_1038@339:1>:int),
      (<init_1038@339:0> < (1 + <init_1038@339:1>))
      |- P[<init_1038@339:1>](<init_1038@339:0>:int,<init_1038@339:1>:int)
      
      P[<k_main_1397@333:4>](<k_main_1397@333:0>:int,<init_1038@336:0>:int,<init_1038@336:1>:int,true:bool)|- P[<init_1038@336:1>](
      <init_1038@336:0>:int,<init_1038@336:1>:int)
      
      P[<main_1042@330:2>](<k_main_1397@333:1>:int,<k_main_1397@333:2>:int,<k_main_1397@333:0>:int),
      ((<k_main_1397@333:1> >= 0) && (<k_main_1397@333:4> = (<k_main_1397@333:1> <= 0)))
      |- P[<k_main_1397@333:4>](<k_main_1397@333:0>:int,<k_main_1397@333:1>:int,
                                <k_main_1397@333:2>:int,<k_main_1397@333:4>:bool)
      
      P[<f_1551@328:2>](<main_1042@330:0>:int,<main_1042@330:1>:int,<main_1042@330:2>:int)|- P[<main_1042@330:2>](
      <main_1042@330:0>:int,<main_1042@330:1>:int,<main_1042@330:2>:int)
      
      P[<f_1550@325:1>](<f_1551@328:0>:int,<f_1551@328:1>:int)|- P[<f_1551@328:2>](
      <f_1551@328:0>:int,<f_1551@328:1>:int,<f_1551@328:2>:int)
      
      P[<f_1549@322:0>](<f_1550@325:0>:int)|- P[<f_1550@325:1>](<f_1550@325:0>:int,
                                                                <f_1550@325:1>:int)
      
      |- P[<f_1549@322:0>](<f_1549@322:0>:int)
    call trees:
      <main_1546@319>
        <f_1549@322>
          <f_1550@325>
            <f_1551@328>
              <main_1042@330>
                <k_main_1397@333>
                  <init_1038@336>
                    <init_1038@339>
                    </<init_1038@339:3>@342>
                  </<init_1038@336:3>@344>
                  <f_k_main_1547@346>
                    <k_main_1447@349>
                    </<k_main_1447@349:5>@352>
                  </<f_k_main_1547@346:5>@354>
                  <<<init_1038@336:3>@344:0>@356>
                    <<<init_1038@339:3>@342:0>@358>
                    </<init_1038@339:2>@360>
                    <update_1033@362>
                      <k_update_1263@365>
                      </<k_update_1263@365:3>@368>
                    </<update_1033@362:1>@370>
                  </<init_1038@336:2>@372>
                  <make_array_1030@374>
                    <k_make_array_u_1213@377>
                      <k_make_array_u_1224@380>
                      </<k_make_array_u_1224@380:2>@382>
                    </<k_make_array_u_1213@377:2>@384>
                  </<make_array_1030@374:2>@386>
                  <<<init_1038@336:2>@372:1>@388>
                    <<<update_1033@362:1>@370:1>@390>
                      <<<k_update_1263@365:3>@368:1>@392>
                      </<k_update_1263@365:4>@394>
                    </<update_1033@362:4>@396>
                    <<<init_1038@339:2>@360:1>@398>
                    </<<<init_1038@339:3>@342:0>@358:1>@400>
                  </<<<init_1038@336:3>@344:0>@356:1>@402>
                  <<<f_k_main_1547@346:5>@354:1>@404>
                    <<<k_main_1447@349:5>@352:1>@406>
                      <f_k_main_1548@408>
                        <fail_1554@411>
    inlined horn clauses:
      P[<fail_1554@411:0>](<fail_1554@411:0>:bool)|- bot
      
      P[<<<<init_1038@336:3>@344:0>@356:1>@402:0>](0:int,<f_k_main_1548@408:4>:int,<f_k_main_1548@408:2>:int,<f_k_main_1548@408:6>:int),
      ((<f_k_main_1548@408:2> < <f_k_main_1548@408:4>) &&
       ((0 <= <f_k_main_1548@408:2>) && ((<f_k_main_1548@408:6> < 1) && <fail_1554@411:0>)))
      |- P[<fail_1554@411:0>](<fail_1554@411:0>:bool)
      
      P[<init_1038@336:1>](<init_1038@336:0>:int,<init_1038@336:1>:int),
      P[<<<<init_1038@339:3>@342:0>@358:1>@400:0>]((1 + <init_1038@336:0>):int,<init_1038@336:1>:int,<<<init_1038@336:3>@344:0>@356:0>:int,<<<<init_1038@336:3>@344:0>@356:1>@402:0>:int),
      (<init_1038@336:0> < <init_1038@336:1>)
      |- P[<<<<init_1038@336:3>@344:0>@356:1>@402:0>](<init_1038@336:0>:int,
                                                      <init_1038@336:1>:int,
                                                      <<<init_1038@336:3>@344:0>@356:0>:int,
                                                      <<<<init_1038@336:3>@344:0>@356:1>@402:0>:int)
      
      P[<init_1038@339:1>](<init_1038@339:0>:int,<init_1038@339:1>:int),
      P[<<<init_1038@339:2>@360:1>@398:0>](<init_1038@339:0>:int,<init_1038@339:1>:int,<<<init_1038@339:3>@342:0>@358:0>:int,<<<<init_1038@339:3>@342:0>@358:1>@400:0>:int),
      (<init_1038@339:0> >= <init_1038@339:1>)
      |- P[<<<<init_1038@339:3>@342:0>@358:1>@400:0>](<init_1038@339:0>:int,
                                                      <init_1038@339:1>:int,
                                                      <<<init_1038@339:3>@342:0>@358:0>:int,
                                                      <<<<init_1038@339:3>@342:0>@358:1>@400:0>:int)
      
      P[<init_1038@336:1>]((-1 + <init_1038@339:0>):int,<init_1038@339:1>:int),
      P[<init_1038@339:1>](<init_1038@339:0>:int,<init_1038@339:1>:int),
      P[<init_1038@336:1>]((-1 + <init_1038@339:0>):int,var346:int),
      P[<<init_1038@339:2>@360:0>](<init_1038@339:0>:int,var346:int,<<init_1038@339:2>@360:0>:int),
      P[<init_1038@336:1>]((-1 + <init_1038@339:0>):int,var345:int),
      P[<<<init_1038@336:2>@372:1>@388:0>]((-1 + <init_1038@339:0>):int,var345:int,<<init_1038@339:2>@360:0>:int,<<<init_1038@339:2>@360:1>@398:0>:int),
      ((<init_1038@339:0> < (1 + var346)) &&
       ((<init_1038@339:0> < (1 + var345)) &&
        ((<init_1038@339:0> < (1 + <init_1038@339:1>)) && ((1 + <<init_1038@339:2>@360:0>) > <init_1038@339:0>))))
      |- P[<<<init_1038@339:2>@360:1>@398:0>](<init_1038@339:0>:int,<init_1038@339:1>:int,
                                              <<init_1038@339:2>@360:0>:int,
                                              <<<init_1038@339:2>@360:1>@398:0>:int)
      
      P[<<init_1038@336:2>@372:0>](0:int,<init_1038@336:1>:int,<<init_1038@336:2>@372:0>:int),
      P[<init_1038@336:1>](<init_1038@336:0>:int,<init_1038@336:1>:int),
      ((<init_1038@336:0> = 0) &&
       ((<<<init_1038@336:2>@372:1>@388:0> = 0) &&
        ((0 <= <<init_1038@336:2>@372:0>) && (<<init_1038@336:2>@372:0> < <init_1038@336:1>))))
      |- P[<<<init_1038@336:2>@372:1>@388:0>](<init_1038@336:0>:int,<init_1038@336:1>:int,
                                              <<init_1038@336:2>@372:0>:int,
                                              <<<init_1038@336:2>@372:1>@388:0>:int)
      
      P[<init_1038@336:1>](<init_1038@336:0>:int,<init_1038@336:1>:int),
      P[<init_1038@336:1>](<init_1038@336:0>:int,var347:int),
      P[<<init_1038@339:2>@360:0>]((1 + <init_1038@336:0>):int,var347:int,<<init_1038@336:2>@372:0>:int),
      ((<init_1038@336:0> < var347) &&
       ((<init_1038@336:0> < <init_1038@336:1>) && (<<init_1038@336:2>@372:0> > <init_1038@336:0>)))
      |- P[<<init_1038@336:2>@372:0>](<init_1038@336:0>:int,<init_1038@336:1>:int,
                                      <<init_1038@336:2>@372:0>:int)
      
      P[<init_1038@339:1>](<init_1038@339:0>:int,<init_1038@339:1>:int),
      P[<<<init_1038@339:3>@342:0>@358:0>](<init_1038@339:0>:int,<init_1038@339:1>:int,<<init_1038@339:2>@360:0>:int),
      (<init_1038@339:0> >= <init_1038@339:1>)
      |- P[<<init_1038@339:2>@360:0>](<init_1038@339:0>:int,<init_1038@339:1>:int,
                                      <<init_1038@339:2>@360:0>:int)
      
      P[<init_1038@336:1>]((-1 + <init_1038@339:0>):int,<init_1038@339:1>:int),
      P[<<<init_1038@336:3>@344:0>@356:0>]((-1 + <init_1038@339:0>):int,<init_1038@339:1>:int,<<<init_1038@339:3>@342:0>@358:0>:int),
      P[<init_1038@339:1>](<init_1038@339:0>:int,<init_1038@339:1>:int), (
      <init_1038@339:0> < (1 + <init_1038@339:1>))
      |- P[<<<init_1038@339:3>@342:0>@358:0>](<init_1038@339:0>:int,<init_1038@339:1>:int,
                                              <<<init_1038@339:3>@342:0>@358:0>:int)
      
      P[<init_1038@336:1>](<init_1038@336:0>:int,<init_1038@336:1>:int),
      ((<init_1038@336:0> = 0) &&
       ((0 <= <<<init_1038@336:3>@344:0>@356:0>) && (<<<init_1038@336:3>@344:0>@356:0> < <init_1038@336:1>)))
      |- P[<<<init_1038@336:3>@344:0>@356:0>](<init_1038@336:0>:int,<init_1038@336:1>:int,
                                              <<<init_1038@336:3>@344:0>@356:0>:int)
      
      P[<init_1038@336:1>]((-1 + <init_1038@339:0>):int,<init_1038@339:1>:int),
      (<init_1038@339:0> < (1 + <init_1038@339:1>))
      |- P[<init_1038@339:1>](<init_1038@339:0>:int,<init_1038@339:1>:int)
      
       (<init_1038@336:0> = 0) |- P[<init_1038@336:1>](<init_1038@336:0>:int,
                                                       <init_1038@336:1>:int)
    begin ParamSubstInfer.infer(64077)[3]
      
    end ParamSubstInfer.infer(64077)[3] (1.339795 sec.)
    inferred extra parameters:
      
    begin RefTypeInfer.elim_coeffs(64079)[3]
      
    end RefTypeInfer.elim_coeffs(64079)[3] (0.007999 sec.)
    begin YhornInterface.solve(65290)[3]
      begin HcSolver.solve_ub(65291)[4]
        encoded:
          P[<fail_1554@411:0>](<fail_1554@411:0>:int)|- bot
          
          P[<<<<init_1038@336:3>@344:0>@356:1>@402:0>](0:int,<f_k_main_1548@408:4>:int,<f_k_main_1548@408:2>:int,<f_k_main_1548@408:6>:int),
          ((<f_k_main_1548@408:2> < <f_k_main_1548@408:4>) &&
           ((0 <= <f_k_main_1548@408:2>) && ((<f_k_main_1548@408:6> < 1) && (<fail_1554@411:0> = 1))))
          |- P[<fail_1554@411:0>](<fail_1554@411:0>:int)
          
          P[<init_1038@336:1>](<init_1038@336:0>:int,<init_1038@336:1>:int),
          P[<<<<init_1038@339:3>@342:0>@358:1>@400:0>]((1 + <init_1038@336:0>):int,<init_1038@336:1>:int,<<<init_1038@336:3>@344:0>@356:0>:int,<<<<init_1038@336:3>@344:0>@356:1>@402:0>:int),
          (<init_1038@336:0> < <init_1038@336:1>)
          |- P[<<<<init_1038@336:3>@344:0>@356:1>@402:0>](<init_1038@336:0>:int,
                                                          <init_1038@336:1>:int,
                                                          <<<init_1038@336:3>@344:0>@356:0>:int,
                                                          <<<<init_1038@336:3>@344:0>@356:1>@402:0>:int)
          
          P[<init_1038@339:1>](<init_1038@339:0>:int,<init_1038@339:1>:int),
          P[<<<init_1038@339:2>@360:1>@398:0>](<init_1038@339:0>:int,<init_1038@339:1>:int,<<<init_1038@339:3>@342:0>@358:0>:int,<<<<init_1038@339:3>@342:0>@358:1>@400:0>:int),
          (<init_1038@339:0> >= <init_1038@339:1>)
          |- P[<<<<init_1038@339:3>@342:0>@358:1>@400:0>](<init_1038@339:0>:int,
                                                          <init_1038@339:1>:int,
                                                          <<<init_1038@339:3>@342:0>@358:0>:int,
                                                          <<<<init_1038@339:3>@342:0>@358:1>@400:0>:int)
          
          P[<init_1038@336:1>]((-1 + <init_1038@339:0>):int,<init_1038@339:1>:int),
          P[<init_1038@339:1>](<init_1038@339:0>:int,<init_1038@339:1>:int),
          P[<init_1038@336:1>]((-1 + <init_1038@339:0>):int,var346:int),
          P[<<init_1038@339:2>@360:0>](<init_1038@339:0>:int,var346:int,<<init_1038@339:2>@360:0>:int),
          P[<init_1038@336:1>]((-1 + <init_1038@339:0>):int,var345:int),
          P[<<<init_1038@336:2>@372:1>@388:0>]((-1 + <init_1038@339:0>):int,var345:int,<<init_1038@339:2>@360:0>:int,<<<init_1038@339:2>@360:1>@398:0>:int),
          ((<init_1038@339:0> < (1 + var346)) &&
           ((<init_1038@339:0> < (1 + var345)) &&
            ((<init_1038@339:0> < (1 + <init_1038@339:1>)) && ((1 + <<init_1038@339:2>@360:0>) > <init_1038@339:0>))))
          |- P[<<<init_1038@339:2>@360:1>@398:0>](<init_1038@339:0>:int,
                                                  <init_1038@339:1>:int,
                                                  <<init_1038@339:2>@360:0>:int,
                                                  <<<init_1038@339:2>@360:1>@398:0>:int)
          
          P[<<init_1038@336:2>@372:0>](0:int,<init_1038@336:1>:int,<<init_1038@336:2>@372:0>:int),
          P[<init_1038@336:1>](<init_1038@336:0>:int,<init_1038@336:1>:int),
          ((<init_1038@336:0> = 0) &&
           ((<<<init_1038@336:2>@372:1>@388:0> = 0) &&
            ((0 <= <<init_1038@336:2>@372:0>) && (<<init_1038@336:2>@372:0> < <init_1038@336:1>))))
          |- P[<<<init_1038@336:2>@372:1>@388:0>](<init_1038@336:0>:int,
                                                  <init_1038@336:1>:int,
                                                  <<init_1038@336:2>@372:0>:int,
                                                  <<<init_1038@336:2>@372:1>@388:0>:int)
          
          P[<init_1038@336:1>](<init_1038@336:0>:int,<init_1038@336:1>:int),
          P[<init_1038@336:1>](<init_1038@336:0>:int,var347:int),
          P[<<init_1038@339:2>@360:0>]((1 + <init_1038@336:0>):int,var347:int,<<init_1038@336:2>@372:0>:int),
          ((<init_1038@336:0> < var347) &&
           ((<init_1038@336:0> < <init_1038@336:1>) && (<<init_1038@336:2>@372:0> > <init_1038@336:0>)))
          |- P[<<init_1038@336:2>@372:0>](<init_1038@336:0>:int,<init_1038@336:1>:int,
                                          <<init_1038@336:2>@372:0>:int)
          
          P[<init_1038@339:1>](<init_1038@339:0>:int,<init_1038@339:1>:int),
          P[<<<init_1038@339:3>@342:0>@358:0>](<init_1038@339:0>:int,<init_1038@339:1>:int,<<init_1038@339:2>@360:0>:int),
          (<init_1038@339:0> >= <init_1038@339:1>)
          |- P[<<init_1038@339:2>@360:0>](<init_1038@339:0>:int,<init_1038@339:1>:int,
                                          <<init_1038@339:2>@360:0>:int)
          
          P[<init_1038@336:1>]((-1 + <init_1038@339:0>):int,<init_1038@339:1>:int),
          P[<<<init_1038@336:3>@344:0>@356:0>]((-1 + <init_1038@339:0>):int,<init_1038@339:1>:int,<<<init_1038@339:3>@342:0>@358:0>:int),
          P[<init_1038@339:1>](<init_1038@339:0>:int,<init_1038@339:1>:int),
          (<init_1038@339:0> < (1 + <init_1038@339:1>))
          |- P[<<<init_1038@339:3>@342:0>@358:0>](<init_1038@339:0>:int,
                                                  <init_1038@339:1>:int,
                                                  <<<init_1038@339:3>@342:0>@358:0>:int)
          
          P[<init_1038@336:1>](<init_1038@336:0>:int,<init_1038@336:1>:int),
          ((<init_1038@336:0> = 0) &&
           ((0 <= <<<init_1038@336:3>@344:0>@356:0>) && (<<<init_1038@336:3>@344:0>@356:0> < <init_1038@336:1>)))
          |- P[<<<init_1038@336:3>@344:0>@356:0>](<init_1038@336:0>:int,
                                                  <init_1038@336:1>:int,
                                                  <<<init_1038@336:3>@344:0>@356:0>:int)
          
          P[<init_1038@336:1>]((-1 + <init_1038@339:0>):int,<init_1038@339:1>:int),
          (<init_1038@339:0> < (1 + <init_1038@339:1>))
          |- P[<init_1038@339:1>](<init_1038@339:0>:int,<init_1038@339:1>:int)
          
           (<init_1038@336:0> = 0) |- P[<init_1038@336:1>](<init_1038@336:0>:int,
                                                           <init_1038@336:1>:int)
        input to Yhorn:
          P[<fail_1554@411:0>](<fail_1554@411:0>:int)|- bot
          
          P[<<<<init_1038@336:3>@344:0>@356:1>@402:0>](var348:int,<f_k_main_1548@408:4>:int,<f_k_main_1548@408:2>:int,<f_k_main_1548@408:6>:int),
          ((<f_k_main_1548@408:6> < 1) &&
           ((0 <= <f_k_main_1548@408:2>) &&
            ((<f_k_main_1548@408:2> < <f_k_main_1548@408:4>) && ((var348 = 0) && (<fail_1554@411:0> = 1)))))
          |- P[<fail_1554@411:0>](<fail_1554@411:0>:int)
          
          P[<init_1038@336:1>](<init_1038@336:0>:int,<init_1038@336:1>:int),
          P[<<<<init_1038@339:3>@342:0>@358:1>@400:0>](var349:int,<init_1038@336:1>:int,<<<init_1038@336:3>@344:0>@356:0>:int,<<<<init_1038@336:3>@344:0>@356:1>@402:0>:int),
          ((var349 = (1 + <init_1038@336:0>)) && (<init_1038@336:0> < <init_1038@336:1>))
          |- P[<<<<init_1038@336:3>@344:0>@356:1>@402:0>](<init_1038@336:0>:int,
                                                          <init_1038@336:1>:int,
                                                          <<<init_1038@336:3>@344:0>@356:0>:int,
                                                          <<<<init_1038@336:3>@344:0>@356:1>@402:0>:int)
          
          P[<init_1038@339:1>](<init_1038@339:0>:int,<init_1038@339:1>:int),
          P[<<<init_1038@339:2>@360:1>@398:0>](<init_1038@339:0>:int,<init_1038@339:1>:int,<<<init_1038@339:3>@342:0>@358:0>:int,<<<<init_1038@339:3>@342:0>@358:1>@400:0>:int),
          (<init_1038@339:0> >= <init_1038@339:1>)
          |- P[<<<<init_1038@339:3>@342:0>@358:1>@400:0>](<init_1038@339:0>:int,
                                                          <init_1038@339:1>:int,
                                                          <<<init_1038@339:3>@342:0>@358:0>:int,
                                                          <<<<init_1038@339:3>@342:0>@358:1>@400:0>:int)
          
          P[<init_1038@336:1>](var350:int,<init_1038@339:1>:int),
          P[<init_1038@339:1>](<init_1038@339:0>:int,<init_1038@339:1>:int),
          P[<init_1038@336:1>](var351:int,var346:int),
          P[<<init_1038@339:2>@360:0>](<init_1038@339:0>:int,var346:int,<<init_1038@339:2>@360:0>:int),
          P[<init_1038@336:1>](var352:int,var345:int),
          P[<<<init_1038@336:2>@372:1>@388:0>](var353:int,var345:int,<<init_1038@339:2>@360:0>:int,<<<init_1038@339:2>@360:1>@398:0>:int),
          (((1 + var353) = <init_1038@339:0>) &&
           (((1 + var352) = <init_1038@339:0>) &&
            (((1 + var351) = <init_1038@339:0>) &&
             (((1 + var350) = <init_1038@339:0>) &&
              (((1 + <<init_1038@339:2>@360:0>) > <init_1038@339:0>) &&
               ((<init_1038@339:0> < (1 + <init_1038@339:1>)) &&
                ((<init_1038@339:0> < (1 + var345)) && (<init_1038@339:0> < (1 + var346)))))))))
          |- P[<<<init_1038@339:2>@360:1>@398:0>](<init_1038@339:0>:int,
                                                  <init_1038@339:1>:int,
                                                  <<init_1038@339:2>@360:0>:int,
                                                  <<<init_1038@339:2>@360:1>@398:0>:int)
          
          P[<<init_1038@336:2>@372:0>](var354:int,<init_1038@336:1>:int,<<init_1038@336:2>@372:0>:int),
          P[<init_1038@336:1>](<init_1038@336:0>:int,<init_1038@336:1>:int),
          ((<<init_1038@336:2>@372:0> < <init_1038@336:1>) &&
           ((0 <= <<init_1038@336:2>@372:0>) &&
            ((var354 = 0) && ((<<<init_1038@336:2>@372:1>@388:0> = 0) && (<init_1038@336:0> = 0)))))
          |- P[<<<init_1038@336:2>@372:1>@388:0>](<init_1038@336:0>:int,
                                                  <init_1038@336:1>:int,
                                                  <<init_1038@336:2>@372:0>:int,
                                                  <<<init_1038@336:2>@372:1>@388:0>:int)
          
          P[<init_1038@336:1>](<init_1038@336:0>:int,<init_1038@336:1>:int),
          P[<init_1038@336:1>](<init_1038@336:0>:int,var347:int),
          P[<<init_1038@339:2>@360:0>](var355:int,var347:int,<<init_1038@336:2>@372:0>:int),
          ((var355 = (1 + <init_1038@336:0>)) &&
           ((<<init_1038@336:2>@372:0> > <init_1038@336:0>) &&
            ((<init_1038@336:0> < <init_1038@336:1>) && (<init_1038@336:0> < var347))))
          |- P[<<init_1038@336:2>@372:0>](<init_1038@336:0>:int,<init_1038@336:1>:int,
                                          <<init_1038@336:2>@372:0>:int)
          
          P[<init_1038@339:1>](<init_1038@339:0>:int,<init_1038@339:1>:int),
          P[<<<init_1038@339:3>@342:0>@358:0>](<init_1038@339:0>:int,<init_1038@339:1>:int,<<init_1038@339:2>@360:0>:int),
          (<init_1038@339:0> >= <init_1038@339:1>)
          |- P[<<init_1038@339:2>@360:0>](<init_1038@339:0>:int,<init_1038@339:1>:int,
                                          <<init_1038@339:2>@360:0>:int)
          
          P[<init_1038@336:1>](var356:int,<init_1038@339:1>:int),
          P[<<<init_1038@336:3>@344:0>@356:0>](var357:int,<init_1038@339:1>:int,<<<init_1038@339:3>@342:0>@358:0>:int),
          P[<init_1038@339:1>](<init_1038@339:0>:int,<init_1038@339:1>:int),
          (((1 + var357) = <init_1038@339:0>) &&
           (((1 + var356) = <init_1038@339:0>) && (<init_1038@339:0> < (1 + <init_1038@339:1>))))
          |- P[<<<init_1038@339:3>@342:0>@358:0>](<init_1038@339:0>:int,
                                                  <init_1038@339:1>:int,
                                                  <<<init_1038@339:3>@342:0>@358:0>:int)
          
          P[<init_1038@336:1>](<init_1038@336:0>:int,<init_1038@336:1>:int),
          ((<<<init_1038@336:3>@344:0>@356:0> < <init_1038@336:1>) &&
           ((0 <= <<<init_1038@336:3>@344:0>@356:0>) && (<init_1038@336:0> = 0)))
          |- P[<<<init_1038@336:3>@344:0>@356:0>](<init_1038@336:0>:int,
                                                  <init_1038@336:1>:int,
                                                  <<<init_1038@336:3>@344:0>@356:0>:int)
          
          P[<init_1038@336:1>](var358:int,<init_1038@339:1>:int),
          (((1 + var358) = <init_1038@339:0>) && (<init_1038@339:0> < (1 + <init_1038@339:1>)))
          |- P[<init_1038@339:1>](<init_1038@339:0>:int,<init_1038@339:1>:int)
          Yhorn (Wed Sep 25 10:52:05 JST 2013)


(0=0) & (v_sep_fail_1554_sep_411_sep_0($1115)) -> 1=0.
(($1115-1=0) & ($1116=0) & ($1117-$1118<0) & (-$1117<=0) & ($1119-1<0)) & (v_sep_init_1038_sep_336_sep_3_sep_344_sep_0_sep_356_sep_1_sep_402_sep_0($1116,$1118,$1117,$1119)) -> v_sep_fail_1554_sep_411_sep_0($1115).
(($1120-$1121<0) & (-$1120+$1122-1=0)) & (v_sep_init_1038_sep_339_sep_3_sep_342_sep_0_sep_358_sep_1_sep_400_sep_0($1122,$1121,$1123,$1124)) & (v_sep_init_1038_sep_336_sep_1($1120,$1121)) -> v_sep_init_1038_sep_336_sep_3_sep_344_sep_0_sep_356_sep_1_sep_402_sep_0($1120,$1121,$1123,$1124).
($1125-$1126>=0) & (v_sep_init_1038_sep_339_sep_2_sep_360_sep_1_sep_398_sep_0($1125,$1126,$1127,$1128)) & (v_sep_init_1038_sep_339_sep_1($1125,$1126)) -> v_sep_init_1038_sep_339_sep_3_sep_342_sep_0_sep_358_sep_1_sep_400_sep_0($1125,$1126,$1127,$1128).
(($1125-$1129-1<0) & ($1125-$1130-1<0) & ($1125-$1126-1<0) & (-$1125+$1131+1>0) & (-$1125+$1132+1=0) & (-$1125+$1133+1=0) & (-$1125+$1134+1=0) & (-$1125+$1135+1=0)) & (v_sep_init_1038_sep_336_sep_2_sep_372_sep_1_sep_388_sep_0($1135,$1130,$1131,$1136)) & (v_sep_init_1038_sep_336_sep_1($1134,$1130)) & (v_sep_init_1038_sep_339_sep_2_sep_360_sep_0($1125,$1129,$1131)) & (v_sep_init_1038_sep_336_sep_1($1133,$1129)) & (v_sep_init_1038_sep_339_sep_1($1125,$1126)) & (v_sep_init_1038_sep_336_sep_1($1132,$1126)) -> v_sep_init_1038_sep_339_sep_2_sep_360_sep_1_sep_398_sep_0($1125,$1126,$1131,$1136).
(($1120=0) & ($1137=0) & ($1138=0) & (-$1139<=0) & (-$1121+$1139<0)) & (v_sep_init_1038_sep_336_sep_1($1120,$1121)) & (v_sep_init_1038_sep_336_sep_2_sep_372_sep_0($1138,$1121,$1139)) -> v_sep_init_1038_sep_336_sep_2_sep_372_sep_1_sep_388_sep_0($1120,$1121,$1139,$1137).
(($1120-$1140<0) & ($1120-$1121<0) & (-$1120+$1139>0) & (-$1120+$1141-1=0)) & (v_sep_init_1038_sep_339_sep_2_sep_360_sep_0($1141,$1140,$1139)) & (v_sep_init_1038_sep_336_sep_1($1120,$1140)) & (v_sep_init_1038_sep_336_sep_1($1120,$1121)) -> v_sep_init_1038_sep_336_sep_2_sep_372_sep_0($1120,$1121,$1139).
($1125-$1126>=0) & (v_sep_init_1038_sep_339_sep_3_sep_342_sep_0_sep_358_sep_0($1125,$1126,$1131)) & (v_sep_init_1038_sep_339_sep_1($1125,$1126)) -> v_sep_init_1038_sep_339_sep_2_sep_360_sep_0($1125,$1126,$1131).
(($1125-$1126-1<0) & (-$1125+$1142+1=0) & (-$1125+$1143+1=0)) & (v_sep_init_1038_sep_339_sep_1($1125,$1126)) & (v_sep_init_1038_sep_336_sep_3_sep_344_sep_0_sep_356_sep_0($1143,$1126,$1127)) & (v_sep_init_1038_sep_336_sep_1($1142,$1126)) -> v_sep_init_1038_sep_339_sep_3_sep_342_sep_0_sep_358_sep_0($1125,$1126,$1127).
(($1120=0) & (-$1123<=0) & (-$1121+$1123<0)) & (v_sep_init_1038_sep_336_sep_1($1120,$1121)) -> v_sep_init_1038_sep_336_sep_3_sep_344_sep_0_sep_356_sep_0($1120,$1121,$1123).
(($1125-$1126-1<0) & (-$1125+$1144+1=0)) & (v_sep_init_1038_sep_336_sep_1($1144,$1126)) -> v_sep_init_1038_sep_339_sep_1($1125,$1126).
$1120=0 -> v_sep_init_1038_sep_336_sep_1($1120,$1121).


v_sep_fail_1554_sep_411_sep_0: X
v_sep_init_1038_sep_336_sep_1: X
v_sep_init_1038_sep_336_sep_2_sep_372_sep_0: X
v_sep_init_1038_sep_336_sep_2_sep_372_sep_1_sep_388_sep_0: X
v_sep_init_1038_sep_336_sep_3_sep_344_sep_0_sep_356_sep_0: X
v_sep_init_1038_sep_336_sep_3_sep_344_sep_0_sep_356_sep_1_sep_402_sep_0: X
v_sep_init_1038_sep_339_sep_1: X
v_sep_init_1038_sep_339_sep_2_sep_360_sep_0: X
v_sep_init_1038_sep_339_sep_2_sep_360_sep_1_sep_398_sep_0: X
v_sep_init_1038_sep_339_sep_3_sep_342_sep_0_sep_358_sep_0: X
v_sep_init_1038_sep_339_sep_3_sep_342_sep_0_sep_358_sep_1_sep_400_sep_0: X
.........................
v_sep_fail_1554_sep_411_sep_0: X
v_sep_init_1038_sep_336_sep_1: X
v_sep_init_1038_sep_336_sep_2_sep_372_sep_0: X
v_sep_init_1038_sep_336_sep_2_sep_372_sep_1_sep_388_sep_0: X
v_sep_init_1038_sep_336_sep_3_sep_344_sep_0_sep_356_sep_0: X
v_sep_init_1038_sep_336_sep_3_sep_344_sep_0_sep_356_sep_1_sep_402_sep_0: X
v_sep_init_1038_sep_339_sep_1: X
v_sep_init_1038_sep_339_sep_2_sep_360_sep_0: X
v_sep_init_1038_sep_339_sep_2_sep_360_sep_1_sep_398_sep_0: X
v_sep_init_1038_sep_339_sep_3_sep_342_sep_0_sep_358_sep_0: X
v_sep_init_1038_sep_339_sep_3_sep_342_sep_0_sep_358_sep_1_sep_400_sep_0: X
...
v_sep_fail_1554_sep_411_sep_0: X
v_sep_init_1038_sep_336_sep_1: X
v_sep_init_1038_sep_336_sep_2_sep_372_sep_0: X
v_sep_init_1038_sep_336_sep_2_sep_372_sep_1_sep_388_sep_0: X
v_sep_init_1038_sep_336_sep_3_sep_344_sep_0_sep_356_sep_0: X
v_sep_init_1038_sep_336_sep_3_sep_344_sep_0_sep_356_sep_1_sep_402_sep_0: X
v_sep_init_1038_sep_339_sep_1: X
v_sep_init_1038_sep_339_sep_2_sep_360_sep_0: X
v_sep_init_1038_sep_339_sep_2_sep_360_sep_1_sep_398_sep_0: X
v_sep_init_1038_sep_339_sep_3_sep_342_sep_0_sep_358_sep_0: X
v_sep_init_1038_sep_339_sep_3_sep_342_sep_0_sep_358_sep_1_sep_400_sep_0: X
.....
v_sep_fail_1554_sep_411_sep_0: X
v_sep_init_1038_sep_336_sep_1: X
v_sep_init_1038_sep_336_sep_2_sep_372_sep_0: X
v_sep_init_1038_sep_336_sep_2_sep_372_sep_1_sep_388_sep_0: X
v_sep_init_1038_sep_336_sep_3_sep_344_sep_0_sep_356_sep_0: X
v_sep_init_1038_sep_336_sep_3_sep_344_sep_0_sep_356_sep_1_sep_402_sep_0: X
v_sep_init_1038_sep_339_sep_1: X
v_sep_init_1038_sep_339_sep_2_sep_360_sep_0: X
v_sep_init_1038_sep_339_sep_2_sep_360_sep_1_sep_398_sep_0: X
v_sep_init_1038_sep_339_sep_3_sep_342_sep_0_sep_358_sep_0: X
v_sep_init_1038_sep_339_sep_3_sep_342_sep_0_sep_358_sep_1_sep_400_sep_0: X
.......
v_sep_fail_1554_sep_411_sep_0: X
v_sep_init_1038_sep_336_sep_1: X
v_sep_init_1038_sep_336_sep_2_sep_372_sep_0: X
v_sep_init_1038_sep_336_sep_2_sep_372_sep_1_sep_388_sep_0: X
v_sep_init_1038_sep_336_sep_3_sep_344_sep_0_sep_356_sep_0: X
v_sep_init_1038_sep_336_sep_3_sep_344_sep_0_sep_356_sep_1_sep_402_sep_0: X
v_sep_init_1038_sep_339_sep_1: X
v_sep_init_1038_sep_339_sep_2_sep_360_sep_0: X
v_sep_init_1038_sep_339_sep_2_sep_360_sep_1_sep_398_sep_0: X
v_sep_init_1038_sep_339_sep_3_sep_342_sep_0_sep_358_sep_0: X
v_sep_init_1038_sep_339_sep_3_sep_342_sep_0_sep_358_sep_1_sep_400_sep_0: X
..............
v_sep_fail_1554_sep_411_sep_0: X
v_sep_init_1038_sep_336_sep_1: X
v_sep_init_1038_sep_336_sep_2_sep_372_sep_0: X
v_sep_init_1038_sep_336_sep_2_sep_372_sep_1_sep_388_sep_0: X
v_sep_init_1038_sep_336_sep_3_sep_344_sep_0_sep_356_sep_0: X
v_sep_init_1038_sep_336_sep_3_sep_344_sep_0_sep_356_sep_1_sep_402_sep_0: X
v_sep_init_1038_sep_339_sep_1: X
v_sep_init_1038_sep_339_sep_2_sep_360_sep_0: X
v_sep_init_1038_sep_339_sep_2_sep_360_sep_1_sep_398_sep_0: X
v_sep_init_1038_sep_339_sep_3_sep_342_sep_0_sep_358_sep_0: X
v_sep_init_1038_sep_339_sep_3_sep_342_sep_0_sep_358_sep_1_sep_400_sep_0: X
..................
v_sep_fail_1554_sep_411_sep_0: X
v_sep_init_1038_sep_336_sep_1: X
v_sep_init_1038_sep_336_sep_2_sep_372_sep_0: X
v_sep_init_1038_sep_336_sep_2_sep_372_sep_1_sep_388_sep_0: X
v_sep_init_1038_sep_336_sep_3_sep_344_sep_0_sep_356_sep_0: X
v_sep_init_1038_sep_336_sep_3_sep_344_sep_0_sep_356_sep_1_sep_402_sep_0: X
v_sep_init_1038_sep_339_sep_1: X
v_sep_init_1038_sep_339_sep_2_sep_360_sep_0: X
v_sep_init_1038_sep_339_sep_2_sep_360_sep_1_sep_398_sep_0: X
v_sep_init_1038_sep_339_sep_3_sep_342_sep_0_sep_358_sep_0: X
v_sep_init_1038_sep_339_sep_3_sep_342_sep_0_sep_358_sep_1_sep_400_sep_0: X
........................
v_sep_fail_1554_sep_411_sep_0: X
v_sep_init_1038_sep_336_sep_1: X
v_sep_init_1038_sep_336_sep_2_sep_372_sep_0: X
v_sep_init_1038_sep_336_sep_2_sep_372_sep_1_sep_388_sep_0: X
v_sep_init_1038_sep_336_sep_3_sep_344_sep_0_sep_356_sep_0: X
v_sep_init_1038_sep_336_sep_3_sep_344_sep_0_sep_356_sep_1_sep_402_sep_0: X
v_sep_init_1038_sep_339_sep_1: X
v_sep_init_1038_sep_339_sep_2_sep_360_sep_0: X
v_sep_init_1038_sep_339_sep_2_sep_360_sep_1_sep_398_sep_0: X
v_sep_init_1038_sep_339_sep_3_sep_342_sep_0_sep_358_sep_0: X
v_sep_init_1038_sep_339_sep_3_sep_342_sep_0_sep_358_sep_1_sep_400_sep_0: X
.........................(0=0) & (v_sep_fail_1554_sep_411_sep_0($1115)) -> 1=0.
(($1115-1=0) & ($1116=0) & ($1117-$1118<0) & (-$1117<=0) & ($1119-1<0)) & (v_sep_init_1038_sep_336_sep_3_sep_344_sep_0_sep_356_sep_1_sep_402_sep_0($1116,$1118,$1117,$1119)) -> v_sep_fail_1554_sep_411_sep_0($1115).
(($1120-$1121<0) & (-$1120+$1122-1=0)) & (v_sep_init_1038_sep_339_sep_3_sep_342_sep_0_sep_358_sep_1_sep_400_sep_0($1122,$1121,$1123,$1124)) & (v_sep_init_1038_sep_336_sep_1($1120,$1121)) -> v_sep_init_1038_sep_336_sep_3_sep_344_sep_0_sep_356_sep_1_sep_402_sep_0($1120,$1121,$1123,$1124).
($1125-$1126>=0) & (v_sep_init_1038_sep_339_sep_2_sep_360_sep_1_sep_398_sep_0($1125,$1126,$1127,$1128)) & (v_sep_init_1038_sep_339_sep_1($1125,$1126)) -> v_sep_init_1038_sep_339_sep_3_sep_342_sep_0_sep_358_sep_1_sep_400_sep_0($1125,$1126,$1127,$1128).
(($1125-$1129-1<0) & ($1125-$1130-1<0) & ($1125-$1126-1<0) & (-$1125+$1131+1>0) & (-$1125+$1132+1=0) & (-$1125+$1133+1=0) & (-$1125+$1134+1=0) & (-$1125+$1135+1=0)) & (v_sep_init_1038_sep_336_sep_2_sep_372_sep_1_sep_388_sep_0($1135,$1130,$1131,$1136)) & (v_sep_init_1038_sep_336_sep_1($1134,$1130)) & (v_sep_init_1038_sep_339_sep_2_sep_360_sep_0($1125,$1129,$1131)) & (v_sep_init_1038_sep_336_sep_1($1133,$1129)) & (v_sep_init_1038_sep_339_sep_1($1125,$1126)) & (v_sep_init_1038_sep_336_sep_1($1132,$1126)) -> v_sep_init_1038_sep_339_sep_2_sep_360_sep_1_sep_398_sep_0($1125,$1126,$1131,$1136).
(($1120=0) & ($1137=0) & ($1138=0) & (-$1139<=0) & (-$1121+$1139<0)) & (v_sep_init_1038_sep_336_sep_1($1120,$1121)) & (v_sep_init_1038_sep_336_sep_2_sep_372_sep_0($1138,$1121,$1139)) -> v_sep_init_1038_sep_336_sep_2_sep_372_sep_1_sep_388_sep_0($1120,$1121,$1139,$1137).
(($1120-$1140<0) & ($1120-$1121<0) & (-$1120+$1139>0) & (-$1120+$1141-1=0)) & (v_sep_init_1038_sep_339_sep_2_sep_360_sep_0($1141,$1140,$1139)) & (v_sep_init_1038_sep_336_sep_1($1120,$1140)) & (v_sep_init_1038_sep_336_sep_1($1120,$1121)) -> v_sep_init_1038_sep_336_sep_2_sep_372_sep_0($1120,$1121,$1139).
($1125-$1126>=0) & (v_sep_init_1038_sep_339_sep_3_sep_342_sep_0_sep_358_sep_0($1125,$1126,$1131)) & (v_sep_init_1038_sep_339_sep_1($1125,$1126)) -> v_sep_init_1038_sep_339_sep_2_sep_360_sep_0($1125,$1126,$1131).
(($1125-$1126-1<0) & (-$1125+$1142+1=0) & (-$1125+$1143+1=0)) & (v_sep_init_1038_sep_339_sep_1($1125,$1126)) & (v_sep_init_1038_sep_336_sep_3_sep_344_sep_0_sep_356_sep_0($1143,$1126,$1127)) & (v_sep_init_1038_sep_336_sep_1($1142,$1126)) -> v_sep_init_1038_sep_339_sep_3_sep_342_sep_0_sep_358_sep_0($1125,$1126,$1127).
(($1120=0) & (-$1123<=0) & (-$1121+$1123<0)) & (v_sep_init_1038_sep_336_sep_1($1120,$1121)) -> v_sep_init_1038_sep_336_sep_3_sep_344_sep_0_sep_356_sep_0($1120,$1121,$1123).
(($1125-$1126-1<0) & (-$1125+$1144+1=0)) & (v_sep_init_1038_sep_336_sep_1($1144,$1126)) -> v_sep_init_1038_sep_339_sep_1($1125,$1126).
$1120=0 -> v_sep_init_1038_sep_336_sep_1($1120,$1121).

           (<init_1038@336:0> = 0) |- P[<init_1038@336:1>](<init_1038@336:0>:int,
                                                           <init_1038@336:1>:int)
        solution:
          P[<fail_1554@411:0>]($1145:bool) = false
          P[<init_1038@336:1>]($1166:int,$1168:int) = true
          P[<<init_1038@336:2>@372:0>]($1201:int,$1203:int,$1205:int) = true
          P[<<<init_1038@336:2>@372:1>@388:0>]($1185:int,$1187:int,$1189:int,$1191:int) = true
          P[<<<init_1038@336:3>@344:0>@356:0>]($1215:int,$1217:int,$1219:int) = true
          P[<<<<init_1038@336:3>@344:0>@356:1>@402:0>]($1148:int,$1150:int,$1152:int,$1154:int) = ($1150 <= $1152)
          P[<init_1038@339:1>]($1180:int,$1182:int) = true
          P[<<init_1038@339:2>@360:0>]($1194:int,$1196:int,$1198:int) = true
          P[<<<init_1038@339:2>@360:1>@398:0>]($1171:int,$1173:int,$1175:int,$1177:int) = ($1171 <= $1175)
          P[<<<init_1038@339:3>@342:0>@358:0>]($1208:int,$1210:int,$1212:int) = true
          P[<<<<init_1038@339:3>@342:0>@358:1>@400:0>]($1157:int,$1159:int,$1161:int,$1163:int) = ($1159 <= $1161)
        
      end HcSolver.solve_ub(65291)[4] (0.086987 sec.)
      begin HcSolver.check_validity(66771)[4]
        input:
          P[<fail_1554@411:0>](<fail_1554@411:0>:bool)|- bot
          
          P[<<<<init_1038@336:3>@344:0>@356:1>@402:0>](0:int,<f_k_main_1548@408:4>:int,<f_k_main_1548@408:2>:int,<f_k_main_1548@408:6>:int),
          ((<f_k_main_1548@408:2> < <f_k_main_1548@408:4>) &&
           ((0 <= <f_k_main_1548@408:2>) && ((<f_k_main_1548@408:6> < 1) && <fail_1554@411:0>)))
          |- P[<fail_1554@411:0>](<fail_1554@411:0>:bool)
          
          P[<init_1038@336:1>](<init_1038@336:0>:int,<init_1038@336:1>:int),
          P[<<<<init_1038@339:3>@342:0>@358:1>@400:0>]((1 + <init_1038@336:0>):int,<init_1038@336:1>:int,<<<init_1038@336:3>@344:0>@356:0>:int,<<<<init_1038@336:3>@344:0>@356:1>@402:0>:int),
          (<init_1038@336:0> < <init_1038@336:1>)
          |- P[<<<<init_1038@336:3>@344:0>@356:1>@402:0>](<init_1038@336:0>:int,
                                                          <init_1038@336:1>:int,
                                                          <<<init_1038@336:3>@344:0>@356:0>:int,
                                                          <<<<init_1038@336:3>@344:0>@356:1>@402:0>:int)
          
          P[<init_1038@339:1>](<init_1038@339:0>:int,<init_1038@339:1>:int),
          P[<<<init_1038@339:2>@360:1>@398:0>](<init_1038@339:0>:int,<init_1038@339:1>:int,<<<init_1038@339:3>@342:0>@358:0>:int,<<<<init_1038@339:3>@342:0>@358:1>@400:0>:int),
          (<init_1038@339:0> >= <init_1038@339:1>)
          |- P[<<<<init_1038@339:3>@342:0>@358:1>@400:0>](<init_1038@339:0>:int,
                                                          <init_1038@339:1>:int,
                                                          <<<init_1038@339:3>@342:0>@358:0>:int,
                                                          <<<<init_1038@339:3>@342:0>@358:1>@400:0>:int)
          
          P[<init_1038@336:1>]((-1 + <init_1038@339:0>):int,<init_1038@339:1>:int),
          P[<init_1038@339:1>](<init_1038@339:0>:int,<init_1038@339:1>:int),
          P[<init_1038@336:1>]((-1 + <init_1038@339:0>):int,var346:int),
          P[<<init_1038@339:2>@360:0>](<init_1038@339:0>:int,var346:int,<<init_1038@339:2>@360:0>:int),
          P[<init_1038@336:1>]((-1 + <init_1038@339:0>):int,var345:int),
          P[<<<init_1038@336:2>@372:1>@388:0>]((-1 + <init_1038@339:0>):int,var345:int,<<init_1038@339:2>@360:0>:int,<<<init_1038@339:2>@360:1>@398:0>:int),
          ((<init_1038@339:0> < (1 + var346)) &&
           ((<init_1038@339:0> < (1 + var345)) &&
            ((<init_1038@339:0> < (1 + <init_1038@339:1>)) && ((1 + <<init_1038@339:2>@360:0>) > <init_1038@339:0>))))
          |- P[<<<init_1038@339:2>@360:1>@398:0>](<init_1038@339:0>:int,
                                                  <init_1038@339:1>:int,
                                                  <<init_1038@339:2>@360:0>:int,
                                                  <<<init_1038@339:2>@360:1>@398:0>:int)
          
          P[<<init_1038@336:2>@372:0>](0:int,<init_1038@336:1>:int,<<init_1038@336:2>@372:0>:int),
          P[<init_1038@336:1>](<init_1038@336:0>:int,<init_1038@336:1>:int),
          ((<init_1038@336:0> = 0) &&
           ((<<<init_1038@336:2>@372:1>@388:0> = 0) &&
            ((0 <= <<init_1038@336:2>@372:0>) && (<<init_1038@336:2>@372:0> < <init_1038@336:1>))))
          |- P[<<<init_1038@336:2>@372:1>@388:0>](<init_1038@336:0>:int,
                                                  <init_1038@336:1>:int,
                                                  <<init_1038@336:2>@372:0>:int,
                                                  <<<init_1038@336:2>@372:1>@388:0>:int)
          
          P[<init_1038@336:1>](<init_1038@336:0>:int,<init_1038@336:1>:int),
          P[<init_1038@336:1>](<init_1038@336:0>:int,var347:int),
          P[<<init_1038@339:2>@360:0>]((1 + <init_1038@336:0>):int,var347:int,<<init_1038@336:2>@372:0>:int),
          ((<init_1038@336:0> < var347) &&
           ((<init_1038@336:0> < <init_1038@336:1>) && (<<init_1038@336:2>@372:0> > <init_1038@336:0>)))
          |- P[<<init_1038@336:2>@372:0>](<init_1038@336:0>:int,<init_1038@336:1>:int,
                                          <<init_1038@336:2>@372:0>:int)
          
          P[<init_1038@339:1>](<init_1038@339:0>:int,<init_1038@339:1>:int),
          P[<<<init_1038@339:3>@342:0>@358:0>](<init_1038@339:0>:int,<init_1038@339:1>:int,<<init_1038@339:2>@360:0>:int),
          (<init_1038@339:0> >= <init_1038@339:1>)
          |- P[<<init_1038@339:2>@360:0>](<init_1038@339:0>:int,<init_1038@339:1>:int,
                                          <<init_1038@339:2>@360:0>:int)
          
          P[<init_1038@336:1>]((-1 + <init_1038@339:0>):int,<init_1038@339:1>:int),
          P[<<<init_1038@336:3>@344:0>@356:0>]((-1 + <init_1038@339:0>):int,<init_1038@339:1>:int,<<<init_1038@339:3>@342:0>@358:0>:int),
          P[<init_1038@339:1>](<init_1038@339:0>:int,<init_1038@339:1>:int),
          (<init_1038@339:0> < (1 + <init_1038@339:1>))
          |- P[<<<init_1038@339:3>@342:0>@358:0>](<init_1038@339:0>:int,
                                                  <init_1038@339:1>:int,
                                                  <<<init_1038@339:3>@342:0>@358:0>:int)
          
          P[<init_1038@336:1>](<init_1038@336:0>:int,<init_1038@336:1>:int),
          ((<init_1038@336:0> = 0) &&
           ((0 <= <<<init_1038@336:3>@344:0>@356:0>) && (<<<init_1038@336:3>@344:0>@356:0> < <init_1038@336:1>)))
          |- P[<<<init_1038@336:3>@344:0>@356:0>](<init_1038@336:0>:int,
                                                  <init_1038@336:1>:int,
                                                  <<<init_1038@336:3>@344:0>@356:0>:int)
          
          P[<init_1038@336:1>]((-1 + <init_1038@339:0>):int,<init_1038@339:1>:int),
          (<init_1038@339:0> < (1 + <init_1038@339:1>))
          |- P[<init_1038@339:1>](<init_1038@339:0>:int,<init_1038@339:1>:int)
          
           (<init_1038@336:0> = 0) |- P[<init_1038@336:1>](<init_1038@336:0>:int,
                                                           <init_1038@336:1>:int)
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        checking substituted Horn clause:
           false |- bot
        
      end HcSolver.check_validity(66771)[4] (0.008999 sec.)
      solution:
        P[<fail_1554@411:0>]($1145:bool) = false
        P[<init_1038@336:1>]($1166:int,$1168:int) = true
        P[<<init_1038@336:2>@372:0>]($1201:int,$1203:int,$1205:int) = true
        P[<<<init_1038@336:2>@372:1>@388:0>]($1185:int,$1187:int,$1189:int,$1191:int) = true
        P[<<<init_1038@336:3>@344:0>@356:0>]($1215:int,$1217:int,$1219:int) = true
        P[<<<<init_1038@336:3>@344:0>@356:1>@402:0>]($1148:int,$1150:int,$1152:int,$1154:int) = ($1150 <= $1152)
        P[<init_1038@339:1>]($1180:int,$1182:int) = true
        P[<<init_1038@339:2>@360:0>]($1194:int,$1196:int,$1198:int) = true
        P[<<<init_1038@339:2>@360:1>@398:0>]($1171:int,$1173:int,$1175:int,$1177:int) = ($1171 <= $1175)
        P[<<<init_1038@339:3>@342:0>@358:0>]($1208:int,$1210:int,$1212:int) = true
        P[<<<<init_1038@339:3>@342:0>@358:1>@400:0>]($1157:int,$1159:int,$1161:int,$1163:int) = ($1159 <= $1161)
    end YhornInterface.solve(65290)[3] (0.096985 sec.)
    
  end RefTypeInfer.infer_etrs(53993)[2] (1.504770 sec.)
  refinement types:
    main_1546: X
    f_1549: v1:int -> X
    f_1550: v1:int -> v2:int -> X
    f_1551: v1:int -> v2:int -> v3:int -> X
    main_1042: v1:int -> v2:int -> v3:int -> (v4:unit -> X) -> X
    k_main_1397: v1:int -> v2:int -> v3:int -> (v4:unit -> X) -> v6:bool -> X
    init_1038: v1:int ->
               v2:int -> (v3:int -> (v4:int -> X) -> X) -> ((v7:int -> (v8:{v8:int | (v2 <= v7)} -> X) -> X) -> X) -> X
    init_1038: v1:int ->
               v2:int ->
               (v3:int -> (v4:{v4:int | (v1 <= v3)} -> X) -> X) ->
               ((v7:int -> (v8:{v8:int | (v2 <= v7)} -> X) -> X) -> X) -> X
    f_k_main_1547: v1:bool -> v2:int -> v3:int -> v4:int -> (v5:unit -> X) -> (v7:int -> (v8:int -> X) -> X) -> X
    k_main_1447: v1:bool ->
                 v2:int -> v3:int -> v4:int -> (v5:unit -> X) -> (v7:int -> (v8:int -> X) -> X) -> v11:bool -> X
    update_1033: v1:int -> (v2:int -> (v3:int -> X) -> X) -> v6:int -> v7:int -> (v8:int -> X) -> X
    k_update_1263: v1:int -> v2:int -> v3:int -> (v4:int -> (v5:int -> X) -> X) -> (v8:int -> X) -> v10:bool -> X
    make_array_1030: v1:int -> v2:int -> (v3:int -> X) -> X
    k_make_array_u_1213: v1:int -> v2:int -> (v3:int -> X) -> v5:bool -> X
    k_make_array_u_1224: v1:int -> v2:int -> (v3:int -> X) -> v5:unit -> X
    f_k_main_1548: v1:bool -> v2:bool -> v3:int -> v4:int -> v5:int -> (v6:unit -> X) -> v8:int -> X
    fail_1554: v1:{v1:bool | false} -> (v2:unit -> X) -> X
    f_1552: var375:int -> var374:int -> var373:int -> var372:unit -> X
    fail_1553: var379:bool -> (var378:unit -> X) -> X
  abstraction types:
    main_1546: X
    f_1549: v1:int -> X
    f_1550: v1:int -> v2:int -> X
    f_1551: v1:int -> v2:int -> v3:int -> X
    main_1042: v1:int -> v2:int -> v3:int -> (v4:unit -> X) -> X
    k_main_1397: v1:int -> v2:int -> v3:int -> (v4:unit -> X) -> v6:bool -> X
    init_1038: var380:int ->
               var381:int ->
               (var382:int -> (var383:int[var383 -> (var380 <= var382)] -> X) -> X) ->
               ((var386:int -> (var387:int[var387 -> (var381 <= var386)] -> X) -> X) -> X) -> X
    f_k_main_1547: v1:bool -> v2:int -> v3:int -> v4:int -> (v5:unit -> X) -> (v7:int -> (v8:int -> X) -> X) -> X
    k_main_1447: v1:bool ->
                 v2:int -> v3:int -> v4:int -> (v5:unit -> X) -> (v7:int -> (v8:int -> X) -> X) -> v11:bool -> X
    update_1033: v1:int -> (v2:int -> (v3:int -> X) -> X) -> v6:int -> v7:int -> (v8:int -> X) -> X
    k_update_1263: v1:int -> v2:int -> v3:int -> (v4:int -> (v5:int -> X) -> X) -> (v8:int -> X) -> v10:bool -> X
    make_array_1030: v1:int -> v2:int -> (v3:int -> X) -> X
    k_make_array_u_1213: v1:int -> v2:int -> (v3:int -> X) -> v5:bool -> X
    k_make_array_u_1224: v1:int -> v2:int -> (v3:int -> X) -> v5:unit -> X
    f_k_main_1548: v1:bool -> v2:bool -> v3:int -> v4:int -> v5:int -> (v6:unit -> X) -> v8:int -> X
    fail_1554: v1:bool -> (v2:unit -> X) -> X
    f_1552: var375:int -> var374:int -> var373:int -> var372:unit -> X
    fail_1553: var379:bool -> (var378:unit -> X) -> X
  
end AbsTypeInfer.refine(53992)[1] (1.510770 sec.)
DONE!

Prefix of spurious counter-example::
0; 0; 0; 0; 0; 0; 1; 0; 0; 0; 0; 1

Program with abstraction types (CEGAR-cycle 7)::
Main: main_1546
  main_1546 -> (rand_int f_1549)
  f_1549 x_1487 -> (rand_int (f_1550 x_1487))
  f_1550 x_1487 x_1500 -> (rand_int (f_1551 x_1487 x_1500))
  f_1551 x_1487 x_1500 x_1513 -> (main_1042 x_1487 x_1500 x_1513 (f_1552 x_1487 x_1500 x_1513))
  f_1552 x_1487 x_1500 x_1513 x_1484 -> end
  f_k_main_1547 b_1481 i_1045 k_1043 n_1044 k_main_1394 x_1404 when (
      0 <= i_1045) -> (k_main_1447 b_1481 i_1045 k_1043 n_1044 k_main_1394 x_1404 (i_1045 < n_1044))
  f_k_main_1547 b_1481 i_1045 k_1043 n_1044 k_main_1394 x_1404 when (
      not (0 <= i_1045)) -> (k_main_1447 b_1481 i_1045 k_1043 n_1044 k_main_1394 x_1404 false)
  f_k_main_1548 b_1477 b_1481 i_1045 k_1043 n_1044 k_main_1394 x_1451 when (x_1451 >= 1) -> (k_main_1394 ())
  f_k_main_1548 b_1477 b_1481 i_1045 k_1043 n_1044 k_main_1394 x_1451 when (
      not (x_1451 >= 1)) -> (fail_1554 true k_main_1394)
  fail_1553 b k -> {fail} => (k ())
  fail_1554 b k -> {fail} => (k ())
  init_1038 i_1039 n_1040 a_1041 k_init_1322 when (i_1039 >= n_1040) -> (k_init_1322 a_1041)
  init_1038 i_1039 n_1040 a_1041 k_init_1322 when (not (i_1039 >= n_1040)) ->
      (init_1038 (i_1039 + 1) n_1040 (update_1033 i_1039 a_1041 1) k_init_1322)
  k_main_1397 i_1045 k_1043 n_1044 k_main_1394 b_1481 when b_1481 ->
      (init_1038 k_1043 n_1044 (make_array_1030 n_1044) (f_k_main_1547 b_1481 i_1045 k_1043 n_1044 k_main_1394))
  k_main_1397 i_1045 k_1043 n_1044 k_main_1394 b_1481 when (not b_1481) -> (k_main_1394 ())
  k_main_1447 b_1481 i_1045 k_1043 n_1044 k_main_1394 x_1404 b_1477 when b_1477 ->
      (x_1404 i_1045 (f_k_main_1548 b_1477 b_1481 i_1045 k_1043 n_1044 k_main_1394))
  k_main_1447 b_1481 i_1045 k_1043 n_1044 k_main_1394 x_1404 b_1477 when (not b_1477) -> (k_main_1394 ())
  k_make_array_u_1213 i_1032 n_1031 k_make_array_1207 b_1225 when b_1225 ->
      (k_make_array_u_1224 i_1032 n_1031 k_make_array_1207 ())
  k_make_array_u_1213 i_1032 n_1031 k_make_array_1207 b_1225 when (not b_1225) ->
      (fail_1553 true (k_make_array_u_1224 i_1032 n_1031 k_make_array_1207))
  k_make_array_u_1224 i_1032 n_1031 k_make_array_1207 x_1210 -> (k_make_array_1207 0)
  k_update_1263 i_1034 j_1037 x_1036 a_1035 k_update_1260 b_1278 when b_1278 -> (k_update_1260 x_1036)
  k_update_1263 i_1034 j_1037 x_1036 a_1035 k_update_1260 b_1278 when (not b_1278) -> (a_1035 j_1037 k_update_1260)
  main_1042 k_1043 n_1044 i_1045 k_main_1394 when (k_1043 >= 0) ->
      (k_main_1397 i_1045 k_1043 n_1044 k_main_1394 (k_1043 <= 0))
  main_1042 k_1043 n_1044 i_1045 k_main_1394 when (not (k_1043 >= 0)) ->
      (k_main_1397 i_1045 k_1043 n_1044 k_main_1394 false)
  make_array_1030 n_1031 i_1032 k_make_array_1207 when (0 <= i_1032) ->
      (k_make_array_u_1213 i_1032 n_1031 k_make_array_1207 (i_1032 < n_1031))
  make_array_1030 n_1031 i_1032 k_make_array_1207 when (not (0 <= i_1032)) ->
      (k_make_array_u_1213 i_1032 n_1031 k_make_array_1207 false)
  update_1033 i_1034 a_1035 x_1036 j_1037 k_update_1260 when (j_1037 > (i_1034 - 1)) ->
      (k_update_1263 i_1034 j_1037 x_1036 a_1035 k_update_1260 (j_1037 <= i_1034))
  update_1033 i_1034 a_1035 x_1036 j_1037 k_update_1260 when (not (j_1037 > (i_1034 - 1))) ->
      (k_update_1263 i_1034 j_1037 x_1036 a_1035 k_update_1260 false)
Types:
  main_1546 : X
  fail_1553 : (x_1:bool[x_1] -> (unit -> X) -> X)
  fail_1554 : (x_1:bool[x_1] -> (unit -> X) -> X)
  init_1038 : (x_1:int ->
               x_2:int ->
               (x_4:int[x_2 <= 0; x_2 >= x_4 + 1; x_4 >= 0] ->
                (x_6:int[x_1 <= x_4; x_1 >= x_4 + 2; x_6 >= 1; x_2 <= 0] -> X) -> X) ->
               ((x_11:int[x_1 <= 0; x_2 >= x_11 + 1; x_11 >= 0] ->
                 (x_13:int[x_2 <= x_11; x_1 >= x_11 + 2; x_1 >= x_11 + 1; x_13 >= 1; x_2 <= 0] -> X) -> X) -> X) -> X)
  
(7-1) Abstracting ... DONE!

(7-2) Checking HORS ... DONE!

Safe!

Refinement Types:
  init: ((x_1:int ->
              (x_2:int ->
                   ((({x_13:int | (x_2 >= x_13 + 1 && x_13 >= 0) && x_2 <= 0} -> Bottom) /\ 
                     (x_14:{x_14:int | x_14 >= 0 && x_2 > 0} -> {x_15:int | x_1 < x_14 + 2}) /\ 
                     (x_16:{x_16:int | x_16 >= 0 && x_2 > 0} -> {x_17:int | (x_17 >= 1 && x_2 > 0) && x_1 > x_16}) /\ 
                     (x_18:{x_18:int | (x_2 >= x_18 + 1 && x_18 >= 0) && x_2 > 0} ->
                          ({x_19:int | (x_19 >= 1 && x_2 > 0) && x_1 < x_18 + 2} \/ 
                           {x_20:int | (x_20 < 1 && x_2 > 0) && x_1 < x_18 + 2})) /\
                     (x_21:{x_21:int | (x_2 >= x_21 + 1 && x_21 >= 0) && x_2 > 0} ->
                          ({x_22:int | ((x_1 < x_21 + 2 && x_2 > 0) && x_22 >= 1) && x_1 <= x_21} \/ 
                           {x_23:int | ((x_1 < x_21 + 2 && x_2 > 0) && x_23 < 1) && x_1 <= x_21} \/ 
                           {x_24:int | ((x_1 >= x_21 + 2 && x_2 > 0) && x_24 >= 1) && x_1 > x_21} \/ 
                           {x_25:int | ((x_1 < x_21 + 2 && x_2 > 0) && x_25 >= 1) && x_1 > x_21}))) ->
                        ((x_4:{x_4:int | (x_4 <= x_2 - 1 && x_4 >= 0) && x_1 <= 0} ->
                              ({x_5:int | ((x_4 > x_1 - 2 && x_2 > 0) && x_5 >= 1) && x_4 >= x_2} \/ 
                               {x_6:int | ((x_4 > x_1 - 2 && x_2 > 0) && x_6 < 1) && x_4 >= x_2} \/ 
                               {x_7:int | ((x_4 > x_1 - 2 && x_2 > 0) && x_7 >= 1) && x_4 < x_2})) /\
                         (x_8:{x_8:int | (x_8 <= x_2 - 1 && x_8 >= 0) && x_1 > 0} ->
                              ({x_9:int | ((x_8 > x_1 - 2 && x_2 > 0) && x_9 >= 1) && x_8 >= x_2} \/ 
                               {x_10:int | ((x_8 > x_1 - 2 && x_2 > 0) && x_10 < 1) && x_8 >= x_2} \/ 
                               {x_11:int | ((x_8 <= x_1 - 2 && x_2 > 0) && x_11 >= 1) && x_8 < x_2} \/ 
                               {x_12:int | ((x_8 > x_1 - 2 && x_2 > 0) && x_12 >= 1) && x_8 < x_2})))))) /\
         (x_26:int ->
              (x_27:int ->
                   ((({x_38:int | (x_27 >= x_38 + 1 && x_38 >= 0) && x_27 <= 0} -> Bottom) /\ 
                     (x_39:{x_39:int | x_39 >= 0 && x_27 > 0} -> {x_40:int | x_26 < x_39 + 2}) /\ 
                     (x_41:{x_41:int | x_41 >= 0 && x_27 > 0} -> {x_42:int | (x_42 >= 1 && x_27 > 0) && x_26 > x_41}) /\
                     (x_43:{x_43:int | (x_27 >= x_43 + 1 && x_43 >= 0) && x_27 > 0} ->
                          ({x_44:int | ((x_26 < x_43 + 2 && x_27 > 0) && x_44 >= 1) && x_26 <= x_43} \/ 
                           {x_45:int | ((x_26 < x_43 + 2 && x_27 > 0) && x_45 < 1) && x_26 <= x_43} \/ 
                           {x_46:int | ((x_26 >= x_43 + 2 && x_27 > 0) && x_46 >= 1) && x_26 > x_43} \/ 
                           {x_47:int | ((x_26 < x_43 + 2 && x_27 > 0) && x_47 >= 1) && x_26 > x_43}))) ->
                        ((x_29:{x_29:int | (x_27 >= x_29 + 1 && x_29 >= 0) && x_26 <= 0} ->
                              ({x_30:int | ((x_26 < x_29 + 2 && x_27 > 0) && x_30 >= 1) && x_27 <= x_29} \/ 
                               {x_31:int | ((x_26 < x_29 + 2 && x_27 > 0) && x_31 < 1) && x_27 <= x_29} \/ 
                               {x_32:int | ((x_26 < x_29 + 2 && x_27 > 0) && x_32 >= 1) && x_27 > x_29})) /\
                         (x_33:{x_33:int | (x_27 >= x_33 + 1 && x_33 >= 0) && x_26 > 0} ->
                              ({x_34:int | ((x_26 < x_33 + 2 && x_27 > 0) && x_34 >= 1) && x_27 <= x_33} \/ 
                               {x_35:int | ((x_26 < x_33 + 2 && x_27 > 0) && x_35 < 1) && x_27 <= x_33} \/ 
                               {x_36:int | ((x_26 >= x_33 + 2 && x_27 > 0) && x_36 >= 1) && x_27 > x_33} \/ 
                               {x_37:int | ((x_26 < x_33 + 2 && x_27 > 0) && x_37 >= 1) && x_27 > x_33})))))) /\
         (x_48:int ->
              (x_49:int ->
                   ((({x_60:int | (x_49 >= x_60 + 1 && x_60 >= 0) && x_49 <= 0} -> Bottom) /\ 
                     (x_61:{x_61:int | x_61 >= 0 && x_49 > 0} -> {x_62:int | x_48 < x_61 + 2}) /\ 
                     (x_63:{x_63:int | (x_49 >= x_63 + 1 && x_63 >= 0) && x_49 > 0} ->
                          ({x_64:int | (x_64 >= 1 && x_49 > 0) && x_48 < x_63 + 2} \/ 
                           {x_65:int | (x_65 < 1 && x_49 > 0) && x_48 < x_63 + 2})) /\
                     (x_66:{x_66:int | (x_49 >= x_66 + 1 && x_66 >= 0) && x_49 > 0} ->
                          ({x_67:int | ((x_48 < x_66 + 2 && x_49 > 0) && x_67 >= 1) && x_48 <= x_66} \/ 
                           {x_68:int | ((x_48 < x_66 + 2 && x_49 > 0) && x_68 < 1) && x_48 <= x_66} \/ 
                           {x_69:int | ((x_48 >= x_66 + 2 && x_49 > 0) && x_69 >= 1) && x_48 > x_66} \/ 
                           {x_70:int | ((x_48 < x_66 + 2 && x_49 > 0) && x_70 >= 1) && x_48 > x_66}))) ->
                        ((x_51:{x_51:int | (x_49 >= x_51 + 1 && x_51 >= 0) && x_48 <= 0} ->
                              ({x_52:int | ((x_48 < x_51 + 2 && x_49 > 0) && x_52 >= 1) && x_49 <= x_51} \/ 
                               {x_53:int | ((x_48 < x_51 + 2 && x_49 > 0) && x_53 < 1) && x_49 <= x_51} \/ 
                               {x_54:int | ((x_48 < x_51 + 2 && x_49 > 0) && x_54 >= 1) && x_49 > x_51})) /\
                         (x_55:{x_55:int | (x_49 >= x_55 + 1 && x_55 >= 0) && x_48 > 0} ->
                              ({x_56:int | ((x_48 < x_55 + 2 && x_49 > 0) && x_56 >= 1) && x_49 <= x_55} \/ 
                               {x_57:int | ((x_48 < x_55 + 2 && x_49 > 0) && x_57 < 1) && x_49 <= x_55} \/ 
                               {x_58:int | ((x_48 >= x_55 + 2 && x_49 > 0) && x_58 >= 1) && x_49 > x_55} \/ 
                               {x_59:int | ((x_48 < x_55 + 2 && x_49 > 0) && x_59 >= 1) && x_49 > x_55})))))) /\
         (x_71:int ->
              (x_72:int ->
                   ((({x_83:int | (x_72 >= x_83 + 1 && x_83 >= 0) && x_72 <= 0} -> Bottom) /\ 
                     (x_84:{x_84:int | x_84 >= 0 && x_72 > 0} -> {x_85:int | x_71 < x_84 + 2}) /\ 
                     (x_86:{x_86:int | (x_72 >= x_86 + 1 && x_86 >= 0) && x_72 > 0} ->
                          ({x_87:int | ((x_71 < x_86 + 2 && x_72 > 0) && x_87 >= 1) && x_71 <= x_86} \/ 
                           {x_88:int | ((x_71 < x_86 + 2 && x_72 > 0) && x_88 < 1) && x_71 <= x_86} \/ 
                           {x_89:int | ((x_71 >= x_86 + 2 && x_72 > 0) && x_89 >= 1) && x_71 > x_86} \/ 
                           {x_90:int | ((x_71 < x_86 + 2 && x_72 > 0) && x_90 >= 1) && x_71 > x_86}))) ->
                        ((x_74:{x_74:int | (x_72 >= x_74 + 1 && x_74 >= 0) && x_71 <= 0} ->
                              ({x_75:int | ((x_71 < x_74 + 2 && x_72 > 0) && x_75 >= 1) && x_72 <= x_74} \/ 
                               {x_76:int | ((x_71 < x_74 + 2 && x_72 > 0) && x_76 < 1) && x_72 <= x_74} \/ 
                               {x_77:int | ((x_71 < x_74 + 2 && x_72 > 0) && x_77 >= 1) && x_72 > x_74})) /\
                         (x_78:{x_78:int | (x_72 >= x_78 + 1 && x_78 >= 0) && x_71 > 0} ->
                              ({x_79:int | ((x_71 < x_78 + 2 && x_72 > 0) && x_79 >= 1) && x_72 <= x_78} \/ 
                               {x_80:int | ((x_71 < x_78 + 2 && x_72 > 0) && x_80 < 1) && x_72 <= x_78} \/ 
                               {x_81:int | ((x_71 >= x_78 + 2 && x_72 > 0) && x_81 >= 1) && x_72 > x_78} \/ 
                               {x_82:int | ((x_71 < x_78 + 2 && x_72 > 0) && x_82 >= 1) && x_72 > x_78})))))) /\
         (x_91:int ->
              (x_92:int ->
                   ((({x_103:int | (x_92 >= x_103 + 1 && x_103 >= 0) && x_92 <= 0} -> Bottom) /\ 
                     (x_104:{x_104:int | x_104 >= 0 && x_92 > 0} ->
                          {x_105:int | (x_105 >= 1 && x_92 > 0) && x_91 > x_104}) /\
                     (x_106:{x_106:int | (x_92 >= x_106 + 1 && x_106 >= 0) && x_92 > 0} ->
                          ({x_107:int | (x_107 >= 1 && x_92 > 0) && x_91 < x_106 + 2} \/ 
                           {x_108:int | (x_108 < 1 && x_92 > 0) && x_91 < x_106 + 2})) /\
                     (x_109:{x_109:int | (x_92 >= x_109 + 1 && x_109 >= 0) && x_92 > 0} ->
                          ({x_110:int | ((x_91 < x_109 + 2 && x_92 > 0) && x_110 >= 1) && x_91 <= x_109} \/ 
                           {x_111:int | ((x_91 < x_109 + 2 && x_92 > 0) && x_111 < 1) && x_91 <= x_109} \/ 
                           {x_112:int | ((x_91 >= x_109 + 2 && x_92 > 0) && x_112 >= 1) && x_91 > x_109} \/ 
                           {x_113:int | ((x_91 < x_109 + 2 && x_92 > 0) && x_113 >= 1) && x_91 > x_109}))) ->
                        ((x_94:{x_94:int | (x_92 >= x_94 + 1 && x_94 >= 0) && x_91 <= 0} ->
                              ({x_95:int | ((x_91 < x_94 + 2 && x_92 > 0) && x_95 >= 1) && x_92 <= x_94} \/ 
                               {x_96:int | ((x_91 < x_94 + 2 && x_92 > 0) && x_96 < 1) && x_92 <= x_94} \/ 
                               {x_97:int | ((x_91 < x_94 + 2 && x_92 > 0) && x_97 >= 1) && x_92 > x_94})) /\
                         (x_98:{x_98:int | (x_92 >= x_98 + 1 && x_98 >= 0) && x_91 > 0} ->
                              ({x_99:int | ((x_91 < x_98 + 2 && x_92 > 0) && x_99 >= 1) && x_92 <= x_98} \/ 
                               {x_100:int | ((x_91 < x_98 + 2 && x_92 > 0) && x_100 < 1) && x_92 <= x_98} \/ 
                               {x_101:int | ((x_91 >= x_98 + 2 && x_92 > 0) && x_101 >= 1) && x_92 > x_98} \/ 
                               {x_102:int | ((x_91 < x_98 + 2 && x_92 > 0) && x_102 >= 1) && x_92 > x_98})))))) /\
         (x_114:int ->
              (x_115:int ->
                   ((({x_126:int | (x_115 >= x_126 + 1 && x_126 >= 0) && x_115 <= 0} -> Bottom) /\ 
                     (x_127:{x_127:int | x_127 >= 0 && x_115 > 0} ->
                          {x_128:int | (x_128 >= 1 && x_115 > 0) && x_114 > x_127}) /\
                     (x_129:{x_129:int | (x_115 >= x_129 + 1 && x_129 >= 0) && x_115 > 0} ->
                          ({x_130:int | ((x_114 < x_129 + 2 && x_115 > 0) && x_130 >= 1) && x_114 <= x_129} \/ 
                           {x_131:int | ((x_114 < x_129 + 2 && x_115 > 0) && x_131 < 1) && x_114 <= x_129} \/ 
                           {x_132:int | ((x_114 >= x_129 + 2 && x_115 > 0) && x_132 >= 1) && x_114 > x_129} \/ 
                           {x_133:int | ((x_114 < x_129 + 2 && x_115 > 0) && x_133 >= 1) && x_114 > x_129}))) ->
                        ((x_117:{x_117:int | (x_115 >= x_117 + 1 && x_117 >= 0) && x_114 <= 0} ->
                              ({x_118:int | ((x_114 < x_117 + 2 && x_115 > 0) && x_118 >= 1) && x_115 <= x_117} \/ 
                               {x_119:int | ((x_114 < x_117 + 2 && x_115 > 0) && x_119 < 1) && x_115 <= x_117} \/ 
                               {x_120:int | ((x_114 < x_117 + 2 && x_115 > 0) && x_120 >= 1) && x_115 > x_117})) /\
                         (x_121:{x_121:int | (x_115 >= x_121 + 1 && x_121 >= 0) && x_114 > 0} ->
                              ({x_122:int | ((x_114 < x_121 + 2 && x_115 > 0) && x_122 >= 1) && x_115 <= x_121} \/ 
                               {x_123:int | ((x_114 < x_121 + 2 && x_115 > 0) && x_123 < 1) && x_115 <= x_121} \/ 
                               {x_124:int | ((x_114 >= x_121 + 2 && x_115 > 0) && x_124 >= 1) && x_115 > x_121} \/ 
                               {x_125:int | ((x_114 < x_121 + 2 && x_115 > 0) && x_125 >= 1) && x_115 > x_121})))))) /\
         (x_134:int ->
              (x_135:int ->
                   ((({x_146:int | (x_135 >= x_146 + 1 && x_146 >= 0) && x_135 <= 0} -> Bottom) /\ 
                     (x_147:{x_147:int | x_147 >= 0 && x_135 > 0} ->
                          {x_148:int | (x_148 >= 1 && x_135 > 0) && x_134 > x_147}) /\
                     (x_149:{x_149:int | (x_135 >= x_149 + 1 && x_149 >= 0) && x_135 > 0} ->
                          ({x_150:int | ((x_134 < x_149 + 2 && x_135 > 0) && x_150 >= 1) && x_134 <= x_149} \/ 
                           {x_151:int | ((x_134 < x_149 + 2 && x_135 > 0) && x_151 < 1) && x_134 <= x_149} \/ 
                           {x_152:int | ((x_134 < x_149 + 2 && x_135 > 0) && x_152 >= 1) && x_134 > x_149}))) ->
                        ((x_137:{x_137:int | (x_135 >= x_137 + 1 && x_137 >= 0) && x_134 <= 0} ->
                              ({x_138:int | ((x_134 < x_137 + 2 && x_135 > 0) && x_138 >= 1) && x_135 <= x_137} \/ 
                               {x_139:int | ((x_134 < x_137 + 2 && x_135 > 0) && x_139 < 1) && x_135 <= x_137} \/ 
                               {x_140:int | ((x_134 < x_137 + 2 && x_135 > 0) && x_140 >= 1) && x_135 > x_137})) /\
                         (x_141:{x_141:int | (x_135 >= x_141 + 1 && x_141 >= 0) && x_134 > 0} ->
                              ({x_142:int | ((x_134 < x_141 + 2 && x_135 > 0) && x_142 >= 1) && x_135 <= x_141} \/ 
                               {x_143:int | ((x_134 < x_141 + 2 && x_135 > 0) && x_143 < 1) && x_135 <= x_141} \/ 
                               {x_144:int | ((x_134 >= x_141 + 2 && x_135 > 0) && x_144 >= 1) && x_135 > x_141} \/ 
                               {x_145:int | ((x_134 < x_141 + 2 && x_135 > 0) && x_145 >= 1) && x_135 > x_141})))))) /\
         (x_153:int ->
              (x_154:int ->
                   ((({x_165:int | (x_154 >= x_165 + 1 && x_165 >= 0) && x_154 <= 0} -> Bottom) /\ 
                     (x_166:{x_166:int | (x_154 >= x_166 + 1 && x_166 >= 0) && x_154 > 0} ->
                          ({x_167:int | (x_167 >= 1 && x_154 > 0) && x_153 < x_166 + 2} \/ 
                           {x_168:int | (x_168 < 1 && x_154 > 0) && x_153 < x_166 + 2})) /\
                     (x_169:{x_169:int | (x_154 >= x_169 + 1 && x_169 >= 0) && x_154 > 0} ->
                          ({x_170:int | ((x_153 < x_169 + 2 && x_154 > 0) && x_170 >= 1) && x_153 <= x_169} \/ 
                           {x_171:int | ((x_153 < x_169 + 2 && x_154 > 0) && x_171 < 1) && x_153 <= x_169} \/ 
                           {x_172:int | ((x_153 >= x_169 + 2 && x_154 > 0) && x_172 >= 1) && x_153 > x_169} \/ 
                           {x_173:int | ((x_153 < x_169 + 2 && x_154 > 0) && x_173 >= 1) && x_153 > x_169}))) ->
                        ((x_156:{x_156:int | (x_154 >= x_156 + 1 && x_156 >= 0) && x_153 <= 0} ->
                              ({x_157:int | ((x_153 < x_156 + 2 && x_154 > 0) && x_157 >= 1) && x_154 <= x_156} \/ 
                               {x_158:int | ((x_153 < x_156 + 2 && x_154 > 0) && x_158 < 1) && x_154 <= x_156} \/ 
                               {x_159:int | ((x_153 < x_156 + 2 && x_154 > 0) && x_159 >= 1) && x_154 > x_156})) /\
                         (x_160:{x_160:int | (x_154 >= x_160 + 1 && x_160 >= 0) && x_153 > 0} ->
                              ({x_161:int | ((x_153 < x_160 + 2 && x_154 > 0) && x_161 >= 1) && x_154 <= x_160} \/ 
                               {x_162:int | ((x_153 < x_160 + 2 && x_154 > 0) && x_162 < 1) && x_154 <= x_160} \/ 
                               {x_163:int | ((x_153 >= x_160 + 2 && x_154 > 0) && x_163 >= 1) && x_154 > x_160} \/ 
                               {x_164:int | ((x_153 < x_160 + 2 && x_154 > 0) && x_164 >= 1) && x_154 > x_160})))))) /\
         (x_174:int ->
              (x_175:int ->
                   ((({x_180:int | (x_175 >= x_180 + 1 && x_180 >= 0) && x_175 <= 0} -> Bottom) /\ 
                     (x_181:{x_181:int | (x_175 >= x_181 + 1 && x_181 >= 0) && x_175 > 0} ->
                          {x_182:int | (x_182 < 1 && x_175 > 0) && x_174 < x_181 + 2}) /\
                     (x_183:{x_183:int | (x_175 >= x_183 + 1 && x_183 >= 0) && x_175 > 0} ->
                          {x_184:int | x_174 <= x_183})) ->
                        (x_177:{x_177:int | (x_175 >= x_177 + 1 && x_177 >= 0) && x_174 <= 0} ->
                             ({x_178:int | x_178 >= 1} \/ {x_179:int | x_179 < 1 && x_175 <= x_177}))))) /\
         (x_185:int ->
              (x_186:int ->
                   ((({x_197:int | (x_186 >= x_197 + 1 && x_197 >= 0) && x_186 <= 0} -> Bottom) /\ 
                     (x_198:{x_198:int | (x_186 >= x_198 + 1 && x_198 >= 0) && x_186 > 0} ->
                          ({x_199:int | ((x_185 < x_198 + 2 && x_186 > 0) && x_199 >= 1) && x_185 <= x_198} \/ 
                           {x_200:int | ((x_185 < x_198 + 2 && x_186 > 0) && x_200 < 1) && x_185 <= x_198} \/ 
                           {x_201:int | ((x_185 >= x_198 + 2 && x_186 > 0) && x_201 >= 1) && x_185 > x_198} \/ 
                           {x_202:int | ((x_185 < x_198 + 2 && x_186 > 0) && x_202 >= 1) && x_185 > x_198}))) ->
                        ((x_188:{x_188:int | (x_186 >= x_188 + 1 && x_188 >= 0) && x_185 <= 0} ->
                              ({x_189:int | ((x_185 < x_188 + 2 && x_186 > 0) && x_189 >= 1) && x_186 <= x_188} \/ 
                               {x_190:int | ((x_185 < x_188 + 2 && x_186 > 0) && x_190 < 1) && x_186 <= x_188} \/ 
                               {x_191:int | ((x_185 < x_188 + 2 && x_186 > 0) && x_191 >= 1) && x_186 > x_188})) /\
                         (x_192:{x_192:int | (x_186 >= x_192 + 1 && x_192 >= 0) && x_185 > 0} ->
                              ({x_193:int | ((x_185 < x_192 + 2 && x_186 > 0) && x_193 >= 1) && x_186 <= x_192} \/ 
                               {x_194:int | ((x_185 < x_192 + 2 && x_186 > 0) && x_194 < 1) && x_186 <= x_192} \/ 
                               {x_195:int | ((x_185 >= x_192 + 2 && x_186 > 0) && x_195 >= 1) && x_186 > x_192} \/ 
                               {x_196:int | ((x_185 < x_192 + 2 && x_186 > 0) && x_196 >= 1) && x_186 > x_192})))))) /\
         (x_203:int ->
              (x_204:int ->
                   ((({x_215:int | (x_204 >= x_215 + 1 && x_215 >= 0) && x_204 <= 0} -> Bottom) /\ 
                     (x_216:{x_216:int | (x_204 >= x_216 + 1 && x_216 >= 0) && x_204 > 0} ->
                          ({x_217:int | ((x_203 < x_216 + 2 && x_204 > 0) && x_217 >= 1) && x_203 <= x_216} \/ 
                           {x_218:int | ((x_203 < x_216 + 2 && x_204 > 0) && x_218 < 1) && x_203 <= x_216} \/ 
                           {x_219:int | ((x_203 < x_216 + 2 && x_204 > 0) && x_219 >= 1) && x_203 > x_216}))) ->
                        ((x_206:{x_206:int | (x_204 >= x_206 + 1 && x_206 >= 0) && x_203 <= 0} ->
                              ({x_207:int | ((x_203 < x_206 + 2 && x_204 > 0) && x_207 >= 1) && x_204 <= x_206} \/ 
                               {x_208:int | ((x_203 < x_206 + 2 && x_204 > 0) && x_208 < 1) && x_204 <= x_206} \/ 
                               {x_209:int | ((x_203 < x_206 + 2 && x_204 > 0) && x_209 >= 1) && x_204 > x_206})) /\
                         (x_210:{x_210:int | (x_204 >= x_210 + 1 && x_210 >= 0) && x_203 > 0} ->
                              ({x_211:int | ((x_203 < x_210 + 2 && x_204 > 0) && x_211 >= 1) && x_204 <= x_210} \/ 
                               {x_212:int | ((x_203 < x_210 + 2 && x_204 > 0) && x_212 < 1) && x_204 <= x_210} \/ 
                               {x_213:int | ((x_203 >= x_210 + 2 && x_204 > 0) && x_213 >= 1) && x_204 > x_210} \/ 
                               {x_214:int | ((x_203 < x_210 + 2 && x_204 > 0) && x_214 >= 1) && x_204 > x_210})))))))

cycles: 7
total: 8.324 sec
  abst: 0.312 sec
  mc: 1.645 sec
  refine: 4.388 sec
    exparam: 3.729 sec
