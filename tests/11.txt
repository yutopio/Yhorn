/* Horn clauses from sum.ml:
   let rec sum n = if n <= 0 then 0 else n + sum (n-1)
   let main n = assert (n <= sum n)
*/

AT & 0=0 -> 0=-1.
AF & 0=0 -> 0=-1.
B(x,y) & (x-y>0) -> AT.
B(x,y) & 0=-1 -> AF.
C(x) & (x<=0) & (y=0) -> B(x,y).
0=0 -> C(x).
[AT-AF]
